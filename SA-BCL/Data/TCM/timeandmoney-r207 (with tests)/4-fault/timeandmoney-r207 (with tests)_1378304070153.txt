#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 36 (58,350) (58,350) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 36 (58,350) (58,350) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 36 (58,350) (58,350) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 36 (58,350) (58,350) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 36 (74,193) (74,193) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 250 (96,269,321) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 119 306 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 58 1 350 1 259 1 
36 1 58 1 350 1 259 1 
36 1 58 1 350 1 259 1 
36 1 58 1 350 1 259 1 
186 1 259 1 
36 1 177 1 193 1 239 1 74 1 259 1 
160 1 259 1 
286 1 259 1 
286 1 259 1 
0 1 7 1 198 1 
233 1 257 2 198 1 
201 1 14 1 205 2 159 2 338 2 224 2 282 2 343 2 
210 2 70 1 31 1 5 2 180 2 324 1 14 1 159 2 51 1 300 1 134 2 219 1 220 1 221 1 141 1 62 1 224 2 168 1 281 1 282 3 99 1 333 1 264 1 199 1 284 1 368 1 40 1 203 1 201 1 169 2 170 1 205 3 338 2 82 1 173 1 342 1 343 2 
184 1 65 1 201 1 171 1 205 1 159 1 338 1 224 1 282 1 343 1 
330 1 61 1 282 1 7 1 198 1 184 1 130 1 272 1 159 1 205 1 226 1 302 1 340 1 318 1 
330 1 61 2 224 1 282 1 7 1 198 1 184 1 130 1 272 1 338 1 159 1 205 1 340 2 302 1 343 1 
320 1 314 1 61 1 63 1 340 1 
320 1 346 1 314 1 61 2 353 1 7 1 340 2 198 1 
320 1 61 1 340 1 
61 1 224 1 282 1 184 1 65 1 201 1 314 1 171 1 338 1 159 1 205 1 339 1 340 1 343 1 
198 1 
320 1 346 1 314 1 61 2 7 1 340 2 198 1 46 1 
344 1 320 2 228 1 116 1 347 1 346 1 59 2 178 1 61 5 7 1 198 1 242 1 314 2 254 2 273 1 83 1 340 5 136 1 360 2 
277 1 220 1 221 1 31 1 5 1 224 1 180 1 282 2 333 1 368 1 170 1 51 1 159 1 205 2 356 1 104 1 173 1 134 1 342 1 343 1 
0 1 14 1 
224 1 282 2 12 1 14 2 159 2 205 2 338 1 218 1 343 1 
304 1 104 1 334 1 
220 1 221 1 31 1 5 1 180 1 282 1 333 1 368 1 14 1 170 1 205 1 51 1 134 1 173 1 342 1 135 1 
277 1 14 1 338 1 205 3 159 3 224 3 282 3 343 3 
184 1 65 1 205 1 159 1 224 1 282 1 343 1 
184 1 12 1 205 1 159 1 338 1 224 1 282 1 218 1 343 1 
210 1 70 1 31 1 4 1 5 1 180 1 184 1 12 1 14 1 130 1 272 1 51 1 159 3 133 1 356 1 300 1 302 1 134 1 277 1 220 1 221 1 330 1 61 1 141 1 62 1 224 3 281 1 282 4 99 1 333 1 264 1 199 1 368 1 40 1 203 1 201 1 169 2 170 1 338 2 205 4 173 1 340 1 342 1 343 3 
78 1 277 1 14 1 205 2 159 2 226 1 224 1 282 2 343 1 
277 2 61 1 330 1 224 3 282 3 198 1 184 1 91 1 12 1 130 1 272 1 338 1 159 3 205 3 133 1 356 1 340 1 302 1 343 3 
277 1 304 1 224 2 282 2 12 1 338 1 159 2 205 2 104 1 343 2 
220 1 221 1 31 1 5 1 180 1 282 1 333 1 368 1 14 1 170 1 205 1 51 1 134 1 173 1 342 1 
220 1 221 1 5 1 180 1 282 1 333 1 368 1 14 1 170 1 246 1 205 1 51 1 28 1 134 1 173 1 
210 4 70 1 295 1 326 1 162 1 21 1 304 2 138 1 278 1 279 1 222 1 141 2 62 1 168 2 281 1 99 1 334 2 312 1 199 1 203 1 169 2 104 2 85 1 124 1 
184 1 1 1 205 1 159 1 224 1 282 1 302 1 343 1 
277 2 224 4 282 5 78 1 66 1 12 1 14 1 159 5 205 5 338 1 226 1 356 1 289 1 343 4 
184 1 65 1 1 1 205 2 159 2 224 2 282 2 343 2 
269 1 139 1 
269 1 139 1 
96 1 250 1 
96 1 250 1 
96 1 250 1 
269 1 139 1 365 1 
269 1 139 1 365 1 
269 1 139 1 321 1 
269 1 139 1 96 1 250 1 
269 1 139 1 365 1 
269 1 139 1 216 1 
269 1 139 1 216 1 
269 1 139 1 216 1 
164 1 175 2 269 2 139 2 61 2 352 1 194 2 126 2 332 1 230 1 182 1 198 1 129 3 245 2 113 1 227 1 340 2 174 1 29 2 
269 1 321 1 126 1 129 1 11 1 14 1 159 2 113 1 19 1 139 1 61 1 194 1 167 1 224 2 38 1 282 2 311 1 39 1 245 1 205 2 149 1 340 1 343 2 29 1 
115 1 154 1 239 1 
177 1 154 1 239 1 
115 2 177 1 271 1 239 3 317 1 191 1 
115 1 177 1 271 1 239 2 258 1 317 1 
115 1 177 1 271 1 239 2 317 2 
320 1 248 1 347 2 346 1 211 1 291 2 7 1 326 1 254 1 233 1 273 3 257 3 19 1 161 1 360 1 137 1 279 1 59 1 117 2 61 5 39 1 312 1 198 2 242 1 314 4 149 1 316 2 150 1 151 1 267 1 340 5 85 1 
320 6 248 2 228 1 347 6 346 1 249 1 7 1 326 3 16 5 254 2 233 3 273 8 257 9 161 2 360 2 137 1 279 3 59 2 117 6 61 9 63 5 312 3 283 1 198 5 146 1 242 1 314 7 337 1 149 4 316 6 267 3 340 9 121 1 122 1 85 3 
248 1 228 1 347 2 211 1 291 1 7 1 326 1 254 1 233 2 273 3 257 4 161 1 360 1 279 1 59 1 61 3 117 2 312 1 198 3 314 2 149 1 150 1 316 2 340 3 267 1 85 1 
248 1 228 1 347 4 211 1 291 2 249 1 7 1 326 2 254 1 233 3 273 5 257 7 161 1 360 1 279 2 59 1 117 4 61 4 312 2 198 4 146 1 314 3 149 2 316 4 150 1 340 4 267 2 121 1 85 2 
0 1 170 1 147 1 
170 1 119 1 
354 1 
220 1 170 1 
185 1 220 1 170 3 147 2 293 1 333 1 
220 1 170 1 333 1 
170 1 189 1 
210 7 166 1 141 3 168 4 312 1 111 1 101 1 93 1 158 1 234 1 68 1 188 1 103 2 162 3 217 1 85 1 124 2 
210 7 166 1 141 3 168 4 312 1 111 1 101 1 93 1 158 1 234 1 68 1 188 1 103 2 162 3 217 1 85 1 124 2 
210 7 166 1 141 3 168 4 312 1 111 1 101 1 93 1 244 1 158 1 234 1 68 1 188 1 103 2 162 3 217 1 85 1 124 2 
268 1 210 31 70 1 176 4 229 1 32 1 111 1 326 3 158 1 93 2 234 1 188 1 112 1 52 1 162 10 217 2 261 1 279 3 280 3 166 2 141 15 168 16 99 1 312 4 199 1 203 1 169 2 101 5 68 2 172 1 103 3 267 3 85 4 124 5 
210 9 70 2 232 1 111 1 158 1 93 1 234 1 112 1 162 4 217 1 303 1 166 1 141 4 168 5 99 2 312 1 199 2 203 2 169 4 101 1 68 1 103 2 85 1 124 3 
351 1 5 1 180 1 308 1 134 1 259 1 
348 1 177 1 3 1 212 3 44 1 154 1 5 1 127 1 180 1 72 2 51 1 299 1 18 1 134 1 191 1 305 1 260 3 115 1 77 1 363 1 223 1 239 2 309 1 308 1 26 1 204 1 206 1 208 1 207 1 173 1 
348 1 177 1 3 1 212 2 44 1 5 1 154 1 127 1 180 1 72 2 51 1 299 1 18 1 134 1 191 1 305 1 260 2 115 1 77 1 223 1 239 2 309 1 308 1 207 1 173 1 
260 1 220 1 192 1 212 1 223 2 5 1 155 1 25 1 127 2 180 1 308 2 309 2 26 1 368 1 252 1 170 1 297 1 51 1 206 1 208 1 173 1 134 1 114 1 
5 1 299 1 180 1 308 1 134 1 259 1 
345 1 
42 2 320 6 86 1 2 1 43 1 5 2 180 2 7 1 184 1 130 1 48 4 272 1 233 2 273 2 51 1 276 2 236 2 134 2 59 1 61 5 330 1 140 1 142 1 195 1 282 1 198 2 242 1 336 1 205 1 340 5 346 3 347 2 213 2 155 1 355 1 157 1 251 2 252 1 33 2 296 1 254 1 159 1 257 2 161 1 302 1 163 1 360 1 361 1 220 1 368 2 170 1 226 1 370 2 173 1 318 1 
320 2 86 1 346 1 2 1 61 3 330 1 195 1 282 1 157 1 46 1 184 1 48 2 130 1 272 1 159 1 205 1 226 1 276 1 163 1 302 1 340 3 318 1 
320 1 86 1 346 1 2 1 213 1 157 1 7 1 46 1 184 1 130 1 48 3 272 1 159 1 302 1 163 1 330 1 61 3 195 1 282 1 198 1 205 1 226 1 340 3 318 1 
86 1 320 2 346 1 2 1 213 1 157 1 7 1 251 1 46 1 184 1 130 1 48 3 272 1 159 1 276 1 302 1 163 1 330 1 61 3 195 1 282 1 198 1 205 1 226 1 340 3 318 1 
320 7 86 1 42 2 2 1 7 5 46 1 184 1 48 6 130 1 272 1 273 1 233 2 276 4 236 2 59 1 330 1 61 5 238 1 195 1 282 1 198 5 242 1 336 1 205 1 340 5 290 1 346 3 347 1 213 4 157 1 251 4 33 2 296 1 254 1 159 1 256 1 301 1 163 1 302 1 360 1 226 1 370 2 41 1 318 1 
86 1 42 2 320 4 2 1 7 1 184 1 48 4 130 1 272 1 273 1 233 2 236 2 276 2 59 1 330 1 61 4 195 1 282 1 198 2 242 1 336 1 205 1 340 4 347 1 346 2 213 2 355 1 157 1 251 2 33 2 296 1 254 1 159 1 257 2 163 1 302 1 360 1 226 1 370 2 318 1 
320 4 42 2 86 1 290 1 346 2 347 1 2 1 213 2 7 1 157 1 251 2 184 1 33 2 130 1 48 4 296 1 272 1 254 1 233 2 273 1 159 1 276 2 236 2 301 1 302 1 163 1 360 1 59 1 330 1 61 4 238 1 195 1 282 1 198 1 242 1 336 1 205 1 226 1 370 2 340 4 318 1 
320 4 42 2 86 1 290 1 346 2 347 1 2 1 213 2 7 1 157 1 251 2 184 1 33 2 130 1 48 4 296 1 272 1 254 1 233 2 273 1 159 1 276 2 236 2 301 1 302 1 163 1 360 1 59 1 330 1 61 4 238 1 195 1 282 1 198 1 242 1 336 1 205 1 226 1 370 2 340 4 318 1 
320 4 86 1 346 2 347 1 152 1 2 1 213 2 7 1 157 1 251 2 184 1 33 2 130 1 48 4 296 1 272 1 254 1 273 1 159 1 257 2 276 2 236 2 302 1 163 1 360 1 59 1 23 2 330 1 61 4 238 1 24 2 240 1 195 1 282 1 198 1 242 1 205 1 226 1 266 1 340 4 318 1 
42 2 290 1 86 1 320 5 346 2 347 1 2 1 213 3 7 1 157 1 251 3 184 1 33 2 130 1 48 5 296 1 254 1 272 1 233 2 273 1 159 1 236 2 276 3 301 1 302 1 163 1 360 1 59 1 330 1 61 4 238 1 195 1 282 1 198 1 242 1 336 1 205 1 226 1 370 2 41 1 340 4 318 1 
42 2 290 1 86 1 320 5 346 2 347 1 2 1 213 3 7 1 157 1 251 3 184 1 33 2 130 1 48 5 296 1 254 1 272 1 233 2 273 1 159 1 236 2 276 3 301 1 302 1 163 1 360 1 59 1 330 1 61 4 238 1 195 1 282 1 198 1 242 1 336 1 205 1 226 1 370 2 41 1 340 4 318 1 
320 4 86 1 346 2 347 1 2 1 213 2 355 1 7 1 157 1 251 2 184 1 33 2 130 1 48 4 296 1 254 1 272 1 273 1 159 1 257 2 276 2 236 2 302 1 163 1 360 1 59 1 23 2 61 4 330 1 24 2 240 1 195 1 282 1 198 1 242 1 205 1 226 1 340 4 318 1 
210 6 70 1 0 1 295 1 111 1 14 2 158 1 93 1 234 1 162 2 304 1 166 1 141 3 62 1 168 3 281 1 99 1 334 1 199 1 312 1 203 1 169 2 103 1 104 1 124 2 85 1 
210 14 70 2 176 3 71 1 153 1 326 2 14 1 162 2 359 1 219 1 304 4 261 1 165 1 57 1 279 1 280 3 141 6 62 2 168 8 281 1 99 2 334 11 199 2 312 1 40 1 203 2 169 4 101 1 172 1 104 11 267 2 124 1 85 2 
210 2 70 1 31 1 5 1 180 1 128 1 14 1 51 1 159 1 356 1 134 1 135 1 75 1 219 1 304 1 277 1 220 1 57 1 221 1 141 1 62 1 224 1 364 1 168 1 281 1 282 2 333 1 99 1 368 1 199 1 203 1 40 1 169 2 170 1 205 2 173 1 342 1 343 1 
125 2 5 3 180 3 6 2 326 2 92 1 14 2 93 1 49 2 234 1 51 2 134 3 277 1 57 1 279 2 141 10 62 3 282 3 281 3 99 3 333 2 334 7 199 3 203 3 101 4 205 3 103 1 104 7 341 1 342 2 343 1 210 20 70 3 31 2 111 1 158 1 159 1 299 1 356 1 162 8 219 1 304 7 220 2 221 2 166 1 224 1 168 10 264 2 312 3 368 1 40 1 169 6 170 2 369 1 173 2 267 2 124 4 123 2 85 3 
210 2 70 2 30 1 351 1 5 7 155 1 180 8 181 1 295 1 252 1 298 1 159 1 51 2 299 1 357 1 134 8 219 1 277 1 220 2 60 1 141 1 224 1 62 2 168 1 282 1 281 2 99 2 366 1 200 1 368 2 199 2 284 2 203 2 40 1 169 4 170 3 205 1 173 2 343 1 
210 3 70 1 12 1 326 1 255 1 159 1 162 1 304 1 57 1 279 1 141 2 62 1 224 1 168 1 281 1 282 1 99 1 334 1 199 1 312 1 203 1 169 2 338 1 205 1 104 1 267 1 124 1 343 1 85 1 
304 1 210 2 70 1 62 1 168 2 281 1 99 1 334 1 295 1 199 1 203 1 326 1 169 2 101 1 162 1 104 1 21 1 85 1 
304 1 210 2 70 1 278 1 279 1 141 2 62 1 281 1 99 1 334 1 295 1 199 1 312 1 203 1 169 2 162 1 104 1 124 1 
304 2 210 4 70 1 279 1 141 2 62 1 168 2 281 1 99 1 334 2 312 1 295 1 199 1 203 1 326 1 169 2 101 1 162 2 104 2 267 1 124 1 85 1 
304 1 210 2 70 1 62 1 168 2 281 1 99 1 334 1 199 1 203 1 326 1 169 2 101 1 357 1 162 1 104 1 21 1 85 1 
304 1 210 2 70 1 278 1 279 1 141 2 62 1 281 1 99 1 334 1 199 1 312 1 203 1 169 2 357 1 162 1 104 1 124 1 
210 4 70 1 326 1 357 1 162 2 304 2 279 1 141 2 62 1 168 2 281 1 99 1 334 2 199 1 312 1 203 1 169 2 101 1 104 2 267 1 85 1 124 1 
304 2 210 4 70 1 279 1 141 2 62 1 168 2 281 1 99 1 334 2 312 1 199 1 203 1 326 1 169 2 101 1 162 2 104 2 267 1 124 1 85 1 
210 2 70 1 31 1 5 1 180 1 14 1 51 1 134 1 219 1 220 1 221 1 141 1 62 1 168 1 282 1 281 1 333 1 99 1 264 1 368 1 199 1 203 1 40 1 169 2 170 1 205 1 173 1 342 1 
210 2 70 1 5 1 180 1 14 1 73 1 51 1 134 1 219 1 220 1 221 1 141 1 62 1 168 1 282 1 281 1 333 1 99 1 368 1 199 1 203 1 40 1 169 2 170 1 246 1 205 1 28 1 173 1 
304 2 210 4 70 1 279 1 57 1 141 2 62 1 168 2 281 1 99 1 334 2 312 1 199 1 203 1 326 1 169 2 101 1 162 2 104 2 267 1 124 1 85 1 
210 4 70 1 31 1 351 1 5 1 180 1 326 1 51 1 162 2 134 1 304 2 220 1 279 1 221 1 141 2 62 1 168 2 282 1 281 1 333 1 99 1 334 2 264 1 312 1 199 1 203 1 169 2 101 1 170 1 205 1 104 2 173 1 267 1 342 1 124 1 85 1 123 1 
210 3 70 1 12 1 326 1 159 1 162 1 304 1 279 1 57 1 262 1 141 1 62 1 224 1 168 2 281 1 282 1 99 1 334 1 312 1 199 1 203 1 169 2 101 1 338 1 205 1 104 1 267 1 343 1 85 1 
176 4 270 1 88 1 9 1 326 4 93 1 50 1 234 1 95 1 328 2 279 4 280 3 329 4 141 21 241 1 97 1 197 1 99 3 199 3 203 3 101 4 288 1 103 1 69 1 210 41 70 3 111 1 34 1 158 1 112 1 162 8 303 1 261 3 166 1 168 20 312 5 169 6 120 1 172 1 265 1 267 4 85 5 124 4 
210 38 70 4 176 4 270 1 88 1 9 1 111 1 34 1 326 4 93 1 158 1 50 1 234 1 112 2 162 7 95 1 303 1 328 2 261 3 279 3 280 3 166 1 329 4 141 18 97 1 241 1 168 20 197 1 99 4 199 4 312 4 203 4 169 8 101 3 120 1 288 1 172 1 265 1 103 1 267 4 124 4 69 1 85 5 
210 52 70 2 176 4 88 1 9 1 111 1 326 7 93 1 158 1 50 1 234 1 112 1 162 14 95 1 303 1 328 1 261 2 165 2 279 7 280 4 166 1 329 4 141 25 97 1 241 1 168 27 197 1 99 2 199 2 312 8 203 2 169 4 101 7 120 1 288 1 172 2 265 1 103 1 267 7 124 7 69 1 85 8 
210 19 70 2 176 2 9 1 34 1 326 3 50 1 162 6 303 1 328 1 261 1 279 3 280 1 329 2 141 10 168 9 99 2 199 2 312 3 203 2 169 4 101 3 120 2 172 1 265 1 267 3 319 1 124 3 69 1 85 3 
210 26 70 3 176 2 88 1 9 2 326 3 50 1 112 2 162 4 95 1 303 1 328 2 261 2 279 2 280 2 329 4 141 12 97 1 168 14 241 1 197 1 99 3 312 2 199 3 203 3 169 6 101 2 120 1 288 1 265 1 267 3 124 2 69 1 85 3 
269 1 139 1 245 1 352 1 194 1 126 1 230 1 196 1 182 1 29 1 
11 1 321 1 
13 1 269 1 139 1 245 1 194 1 126 1 107 1 20 1 29 1 
175 1 269 1 139 1 61 1 352 1 194 1 126 1 332 1 230 1 182 1 198 1 129 2 245 1 113 1 227 1 340 1 174 1 29 1 
175 1 269 1 139 1 61 1 352 1 194 1 126 1 332 1 230 1 182 1 198 1 129 2 245 1 113 1 227 1 340 1 174 1 29 1 
175 1 269 1 139 1 61 1 352 1 194 1 126 1 332 1 230 1 182 1 198 1 129 2 245 1 113 1 227 1 340 1 174 1 29 1 
365 1 310 1 84 1 
365 1 310 1 84 1 
216 1 358 1 
216 1 358 1 84 1 
167 1 38 1 
175 1 269 1 321 1 126 1 129 1 11 1 14 1 159 2 19 1 53 1 139 1 61 1 194 1 167 1 332 1 224 2 38 1 282 2 311 1 39 1 314 1 245 1 205 2 149 1 340 1 29 1 343 2 
365 1 310 1 
216 1 358 1 84 1 
210 2 70 1 179 1 89 1 5 2 322 1 180 2 181 1 47 1 51 1 159 2 274 1 134 2 219 1 220 1 57 1 141 1 62 1 168 1 281 1 282 2 99 1 366 1 199 1 284 2 203 1 40 1 169 2 170 1 205 2 173 1 
115 1 177 1 292 1 351 1 44 1 154 1 239 2 5 2 180 2 127 1 144 1 204 1 51 1 299 1 207 1 102 1 173 1 134 2 191 1 
115 1 177 1 44 1 154 1 239 2 5 1 180 1 127 1 144 1 325 1 204 1 51 1 299 1 207 1 134 1 173 1 191 1 
220 1 192 1 292 1 5 1 214 1 155 1 180 1 127 1 368 1 252 1 170 1 51 1 173 1 134 1 
115 1 177 1 292 1 44 1 154 1 239 2 5 1 180 1 127 1 144 1 204 1 51 1 299 1 207 1 102 1 134 1 173 1 191 1 
362 1 
347 1 0 1 178 1 273 1 7 1 198 1 136 1 
42 1 320 1 347 1 346 1 7 1 254 1 233 1 273 1 257 1 360 1 59 1 61 1 198 2 242 1 336 1 370 1 340 1 
220 1 59 1 306 1 5 1 180 1 333 1 119 1 368 1 242 1 185 1 170 1 254 1 51 1 81 1 173 1 134 1 360 1 
320 1 346 1 347 5 176 1 43 1 88 1 90 2 7 2 10 1 326 2 254 2 273 8 233 3 257 6 161 1 95 1 360 2 261 1 279 2 59 2 280 1 61 1 117 5 97 1 225 1 241 1 118 1 197 1 198 5 312 2 242 2 316 5 340 1 267 2 85 2 
290 1 347 2 90 2 184 1 15 1 93 1 254 1 234 1 273 2 159 1 360 1 59 1 166 1 61 1 224 1 118 1 282 1 312 1 65 1 242 1 201 1 171 1 205 1 338 1 339 1 340 1 85 2 343 1 
347 1 59 1 178 1 7 1 198 1 242 1 254 1 273 1 136 1 360 1 
347 5 279 2 125 1 117 5 90 2 118 1 198 5 312 2 326 2 233 5 273 5 257 10 316 5 267 2 85 2 
320 1 346 1 61 1 7 1 340 1 198 1 
320 4 228 1 347 2 346 2 43 2 5 4 155 1 180 4 109 1 252 1 254 2 273 2 51 1 161 2 134 4 360 2 220 1 59 2 61 3 140 1 142 1 368 2 64 2 242 1 170 1 287 1 79 1 173 1 340 3 
210 1 70 1 31 1 5 1 180 1 14 1 159 2 51 1 300 1 134 1 220 1 221 1 141 1 224 2 62 1 282 3 281 1 99 1 333 1 264 1 368 1 199 1 40 1 203 1 201 1 169 2 170 1 205 3 338 2 173 1 342 1 343 2 
347 2 59 1 117 2 43 1 7 2 198 4 242 1 254 1 233 2 273 1 257 4 103 1 316 2 161 1 360 1 
194 1 331 1 126 1 
194 1 331 1 126 1 
194 1 126 1 230 1 45 1 38 1 
194 1 331 1 126 1 
194 1 126 1 263 1 
194 1 126 1 263 1 
194 1 126 1 263 1 
194 1 126 1 
269 1 139 1 
210 8 70 1 176 1 111 1 158 1 93 1 234 1 162 2 95 1 303 1 261 1 280 1 166 1 141 4 168 4 99 1 312 1 199 1 203 1 169 2 103 1 85 1 124 2 
210 11 70 2 176 2 111 1 326 1 93 1 158 1 234 1 162 3 95 1 303 1 237 1 261 1 280 1 166 1 141 5 168 6 99 2 312 1 199 2 203 2 169 4 101 1 172 1 103 1 267 1 124 2 85 2 
210 19 70 3 176 1 88 1 111 1 326 2 93 1 158 1 234 1 112 1 162 4 95 1 237 1 303 1 261 1 279 2 280 1 166 1 141 10 168 9 241 1 97 1 197 1 99 3 199 3 312 3 203 3 169 6 101 1 103 1 267 2 85 3 124 3 
210 17 70 3 176 1 88 1 111 1 326 2 93 1 158 1 234 1 112 1 162 5 95 1 237 1 303 1 261 1 279 1 280 1 166 1 141 7 168 10 241 1 97 1 197 1 99 3 199 3 312 2 203 3 169 6 101 2 103 1 267 2 85 3 124 3 
210 8 70 1 176 1 111 1 158 1 93 1 234 1 162 2 95 1 303 1 261 1 280 1 166 1 141 4 168 4 99 1 312 1 199 1 203 1 169 2 103 1 85 1 124 2 
210 12 70 1 176 1 88 1 326 2 162 2 95 1 303 1 261 1 279 2 280 1 141 6 168 6 241 1 97 1 197 1 99 1 199 1 312 2 203 1 169 2 101 1 267 2 85 2 124 1 
210 18 70 4 176 1 88 1 111 1 326 2 93 1 158 1 234 1 112 2 162 5 95 1 237 1 303 1 261 1 279 1 280 1 166 1 141 8 97 1 168 10 241 1 197 1 99 4 199 4 312 2 203 4 169 8 101 2 103 1 267 2 85 3 124 3 
210 16 70 4 176 1 88 1 34 1 326 3 112 2 162 6 95 1 303 1 261 1 279 2 280 1 141 7 97 1 168 9 241 1 197 1 99 4 199 4 312 2 203 4 169 8 101 3 267 3 85 3 124 3 
210 7 166 3 141 4 168 3 312 1 111 2 158 1 93 3 101 3 234 1 162 6 124 3 85 1 
210 18 70 4 176 1 88 1 111 1 34 1 326 2 93 1 158 1 234 1 112 2 162 4 95 1 303 1 261 1 279 1 280 1 166 1 141 8 97 1 168 10 241 1 197 1 99 4 199 4 312 2 203 4 169 8 101 1 103 1 267 2 85 3 124 3 
210 8 70 2 166 1 141 4 168 4 99 2 312 1 199 2 203 2 111 1 169 4 101 1 158 1 93 1 234 1 103 1 112 1 162 3 85 1 124 2 
210 6 0 1 166 1 141 3 168 3 312 1 111 1 158 1 93 1 234 1 103 1 162 2 124 2 85 1 
210 4 70 1 279 1 141 2 168 2 99 1 312 1 199 1 203 1 326 1 169 2 101 1 162 2 267 1 124 1 237 1 85 1 
210 7 261 1 279 1 176 2 280 1 141 4 168 3 312 1 326 1 101 1 172 1 162 2 267 1 124 1 85 1 
210 23 70 2 176 2 111 1 326 2 93 2 158 1 234 1 112 2 162 9 359 1 279 2 165 1 280 2 166 2 141 12 168 11 99 2 145 1 312 3 199 2 203 2 169 4 101 4 172 1 103 1 267 2 85 3 124 5 
210 1 176 1 141 1 
210 1 280 1 168 1 
210 6 70 1 279 1 125 1 141 3 168 3 99 1 199 1 312 1 203 1 326 1 169 2 101 1 162 3 267 1 237 1 85 1 124 2 
210 12 70 1 176 1 88 1 326 2 162 2 95 1 303 1 261 1 279 2 280 1 141 6 168 6 241 1 97 1 197 1 99 1 199 1 312 2 203 1 169 2 101 1 267 2 85 2 124 1 
210 6 166 1 141 3 168 3 312 1 93 1 101 1 234 1 162 2 85 1 124 1 
210 3 70 1 166 1 141 2 168 1 99 1 145 1 199 1 111 1 203 1 169 2 101 1 93 1 158 1 112 1 162 2 124 1 
210 10 70 1 166 2 141 5 168 5 99 1 199 1 312 2 203 1 169 2 15 1 93 2 101 2 234 1 162 5 303 1 124 3 85 2 
210 2 70 1 168 2 99 1 199 1 203 1 326 1 169 2 101 1 162 1 303 1 85 1 
210 4 70 1 279 1 141 2 168 2 99 1 312 1 199 1 203 1 326 1 169 2 101 1 162 2 267 1 124 1 303 1 85 1 
210 3 70 3 166 1 141 2 168 1 99 3 145 1 199 3 203 3 34 1 169 6 93 1 101 1 112 1 162 2 303 1 124 1 
268 1 210 34 70 5 176 4 229 1 32 1 111 1 34 1 326 3 93 3 158 1 234 2 112 2 162 12 237 1 303 1 261 1 279 3 280 3 166 3 141 18 168 16 99 5 145 1 199 5 312 5 203 5 169 10 101 5 172 1 103 1 267 3 85 5 124 7 
78 1 14 1 205 1 159 1 226 1 323 1 282 1 
323 1 282 1 143 1 78 1 14 1 313 1 243 1 94 1 159 1 205 1 327 1 226 1 
252 1 220 1 0 1 170 1 51 1 5 1 155 1 180 1 173 1 134 1 368 1 
277 1 220 1 221 1 5 1 224 1 180 1 282 2 333 1 368 1 14 1 170 1 51 1 159 1 205 2 134 1 173 1 342 1 343 1 
277 1 220 2 221 1 5 1 307 1 224 2 180 1 282 2 333 2 184 1 64 1 14 1 170 3 272 1 51 1 159 2 205 2 189 1 302 1 134 1 173 1 342 1 343 1 
5 2 215 1 180 2 184 1 14 1 272 1 159 2 51 1 189 1 134 2 302 1 277 1 220 2 221 1 224 2 307 1 282 2 333 2 64 1 170 3 246 1 205 2 173 1 343 1 
320 1 209 1 5 3 215 1 180 3 7 1 130 1 51 1 189 1 134 3 220 1 61 2 307 1 333 1 119 1 198 1 368 1 64 1 335 1 170 4 147 1 173 1 340 2 
320 1 220 1 61 2 5 3 215 1 307 1 180 3 333 1 7 1 119 1 368 1 198 1 64 1 130 1 170 4 147 1 51 1 80 1 189 1 340 2 134 3 173 1 
60 1 51 1 5 1 180 1 173 1 134 1 
54 1 220 2 60 1 30 1 351 1 5 6 180 7 333 1 181 1 284 1 200 1 368 2 110 1 185 1 170 3 298 1 51 3 299 1 132 1 134 7 173 2 
5 1 180 1 14 2 49 1 93 1 234 1 51 1 274 1 134 1 277 1 57 1 141 3 62 2 282 2 281 2 99 2 333 1 334 1 199 2 203 2 205 2 103 1 104 1 342 1 343 1 210 6 70 2 31 1 351 1 111 1 158 1 159 1 162 2 304 1 220 1 221 1 166 1 224 1 168 3 264 1 312 1 169 4 170 1 173 1 123 1 124 2 85 1 
320 2 347 1 346 1 178 1 5 1 180 1 7 1 294 1 130 1 254 2 131 1 273 1 134 1 136 1 360 2 59 2 61 3 119 1 198 1 368 1 242 2 67 1 287 1 314 1 170 2 147 1 80 1 340 3 
220 1 60 1 5 1 354 1 180 1 333 1 185 1 170 1 147 1 51 1 81 1 134 1 173 1 
220 1 351 1 5 4 215 1 155 1 180 4 368 1 252 1 170 1 51 1 190 1 134 4 173 1 
54 1 220 1 76 1 5 2 180 2 333 1 64 1 92 1 170 1 235 1 51 2 132 1 134 2 173 1 
177 1 51 1 44 1 154 1 239 1 5 1 180 1 173 1 134 1 368 1 
220 1 170 1 179 1 351 1 51 1 299 1 5 2 180 2 173 1 181 1 134 2 
220 2 351 1 30 1 5 4 155 1 180 5 181 1 368 1 200 1 64 1 252 1 170 3 51 2 190 1 134 5 173 2 
220 2 351 1 5 4 155 1 180 5 181 1 368 1 200 1 64 1 252 1 285 1 170 3 51 2 190 1 134 5 173 2 
277 1 220 1 221 1 5 1 224 1 180 1 282 2 333 1 368 1 14 1 170 1 246 1 51 1 159 1 205 2 134 1 173 1 343 1 
54 1 220 1 5 1 180 1 333 1 64 1 110 1 185 1 170 1 51 2 132 1 134 1 173 1 
47 1 205 1 159 1 106 1 89 1 322 1 282 1 367 1 183 1 
148 1 315 1 183 1 
87 1 14 1 106 1 367 1 183 1 
87 2 61 2 330 1 106 2 7 1 367 2 198 1 183 1 184 1 100 1 14 1 130 1 314 1 272 1 148 1 315 1 133 1 302 1 340 2 
305 1 0 1 348 1 3 1 
305 1 260 1 348 1 3 1 212 1 206 1 26 1 
260 1 223 1 309 1 
260 1 253 1 56 1 212 1 17 1 247 1 259 1 
305 1 260 2 348 1 27 1 3 1 72 1 212 2 206 1 26 1 
259 1 
259 1 
259 1 
202 1 259 1 
260 2 348 1 349 1 212 2 72 2 187 1 35 1 247 1 275 1 259 1 
177 1 239 1 259 1 
37 1 260 2 348 1 212 2 27 1 72 2 35 1 247 1 275 1 259 1 
247 1 259 1 
305 2 260 4 56 1 348 3 3 2 212 4 26 1 253 1 72 2 17 1 35 1 247 1 206 1 275 1 
260 1 212 1 108 1 8 1 72 1 247 1 259 1 22 1 
260 1 253 1 212 1 17 1 247 1 231 1 259 1 
55 2 348 2 105 1 98 1 
259 1 
260 1 212 1 72 1 187 1 247 1 259 1 
156 1 
259 1 
260 1 212 1 17 1 247 1 259 1 
348 1 35 1 247 1 275 1 
348 1 3 1 

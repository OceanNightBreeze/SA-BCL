#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 355 92 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 355 92 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 355 92 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 355 92 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 355 92 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 226 350 17 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 226 350 17 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 17 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 355 (38,253) (38,253) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 1 232 1 120 1 147 5 307 1 83 2 235 1 309 1 136 3 353 1 100 9 36 2 310 2 122 7 19 1 300 1 189 9 103 1 256 1 357 1 231 1 116 1 181 1 330 4 
283 1 232 1 120 1 147 5 307 1 83 2 235 1 309 1 136 3 353 1 100 9 36 2 310 2 122 7 19 1 300 1 189 9 103 1 256 1 357 1 231 1 116 1 181 1 330 4 
136 3 353 1 113 1 278 1 300 1 189 9 357 1 256 2 231 2 260 1 330 4 305 1 283 1 232 2 120 2 83 2 307 1 147 5 235 1 60 1 309 1 100 9 310 2 122 6 36 2 19 1 63 1 103 1 
136 3 353 1 113 1 278 1 300 1 189 9 357 1 256 2 231 2 260 1 330 4 305 1 283 1 232 2 120 2 83 2 307 1 147 5 235 1 60 1 309 1 100 9 310 2 122 6 36 2 19 1 63 1 103 1 
136 4 353 1 113 1 278 1 300 1 189 10 357 1 256 2 231 2 260 1 330 5 305 1 283 1 232 2 120 2 83 2 307 1 147 6 235 1 60 1 309 1 100 10 310 2 122 7 36 2 19 1 63 1 103 1 
136 2 353 1 113 1 278 1 300 1 189 7 357 1 256 2 231 2 260 1 330 3 305 1 283 1 232 2 120 2 83 2 307 1 147 4 235 1 60 1 309 1 100 7 310 2 122 4 36 1 19 1 63 1 
232 1 307 1 83 1 147 3 136 1 353 1 100 4 310 1 36 2 122 3 19 1 300 1 189 4 103 1 256 1 357 1 231 1 330 2 
135 1 232 1 120 1 147 1 307 1 83 1 208 1 353 1 100 2 113 1 310 1 47 1 300 1 189 2 256 1 260 1 
120 1 307 1 83 2 147 2 309 1 136 1 353 1 100 3 310 2 122 1 300 1 189 3 330 1 
238 1 
46 1 37 1 177 2 
361 1 42 2 293 2 50 1 112 2 225 2 146 2 377 2 
134 1 318 2 42 2 293 2 90 1 249 1 207 2 184 1 3 1 112 2 69 1 225 2 351 1 354 1 277 1 211 2 50 1 146 3 361 1 121 1 148 1 236 1 265 1 288 1 368 1 123 1 369 1 239 1 338 2 268 1 339 1 216 1 179 1 129 1 65 2 377 3 375 1 
62 1 42 1 293 1 229 1 50 1 112 1 225 1 244 1 146 1 377 1 
42 1 46 1 6 1 229 1 313 1 203 1 281 1 146 1 303 1 344 1 130 1 377 1 156 1 95 1 
42 1 293 1 112 1 225 1 46 1 6 2 229 1 313 1 203 1 281 2 146 1 344 1 130 1 377 1 95 1 
6 1 321 1 165 1 281 1 322 1 
46 1 6 2 165 1 105 1 313 1 281 2 322 1 198 1 
6 1 281 1 322 1 
42 1 293 1 112 1 225 1 62 1 6 1 165 1 229 1 50 1 281 1 244 1 52 1 146 1 377 1 
46 1 
46 1 6 2 165 1 105 1 313 1 281 2 322 1 295 1 
157 2 222 1 274 1 322 2 175 1 297 2 46 1 6 5 269 1 210 1 9 1 115 2 165 2 105 1 144 1 11 1 313 1 281 5 94 1 
238 1 
361 2 42 2 293 1 56 1 112 1 225 1 137 1 146 2 377 2 
54 1 287 1 215 1 
361 1 134 1 318 1 16 1 148 1 236 1 69 1 351 1 369 1 277 1 216 1 211 1 179 1 146 1 65 1 377 1 
134 1 318 1 42 1 293 1 287 1 250 1 148 1 236 1 69 1 351 1 225 1 369 1 370 1 277 1 216 1 211 1 179 1 146 2 65 1 377 2 
361 1 42 5 293 4 170 1 250 2 112 1 225 4 137 1 370 1 301 1 145 1 146 5 303 1 377 5 
62 1 246 1 42 2 293 2 229 1 225 2 146 2 377 2 
361 1 42 3 293 3 250 1 112 1 225 3 146 3 377 3 
62 1 42 1 293 1 229 1 225 1 146 1 377 1 
42 1 293 1 56 1 229 1 112 1 225 1 146 1 137 1 377 1 
134 1 318 1 42 3 293 3 90 1 249 1 250 1 207 2 1 1 112 2 69 1 351 1 225 3 137 1 354 1 277 1 6 1 211 1 229 1 50 1 281 1 146 4 95 1 361 1 121 1 148 1 236 1 288 1 123 1 369 1 338 1 268 1 370 1 339 1 216 1 179 1 129 1 203 1 88 1 344 1 130 1 65 1 375 1 377 4 
361 1 42 2 293 1 250 1 145 1 225 1 146 2 303 1 377 2 
42 3 293 3 250 2 1 1 112 1 225 3 137 1 46 1 370 1 6 1 91 1 229 1 281 1 203 1 146 3 344 1 130 1 377 3 95 1 
42 2 293 2 287 1 250 1 112 1 225 2 146 2 137 1 377 2 215 1 
361 1 134 1 318 1 148 1 236 1 351 1 69 1 369 1 277 1 216 1 211 1 179 1 146 1 65 1 377 1 
361 1 134 1 318 1 236 1 70 1 351 1 69 1 151 1 369 1 277 1 211 1 179 1 146 1 65 1 377 1 
291 1 320 1 68 1 90 1 249 1 207 2 188 1 168 1 54 2 97 1 121 2 287 2 172 1 265 2 288 1 367 1 123 1 215 2 101 1 267 1 268 1 338 4 241 1 129 1 
246 1 42 1 293 1 229 1 225 1 146 1 130 1 377 1 
191 1 160 1 
191 1 160 1 
319 1 302 1 
319 1 302 1 
319 1 302 1 
21 1 191 1 160 1 
261 1 191 1 160 1 
319 1 340 1 302 1 191 2 84 1 160 2 
21 1 191 1 160 1 
21 1 191 1 160 1 
191 1 160 1 61 1 
191 1 160 1 61 1 
191 1 160 1 61 1 
42 2 293 2 158 1 225 2 160 1 138 1 30 1 6 1 73 1 162 1 31 1 323 1 191 1 213 1 281 1 166 1 146 2 361 1 261 1 308 1 266 1 373 1 107 1 377 2 
117 1 99 1 111 1 251 1 84 1 160 2 28 2 46 1 266 3 6 2 162 2 31 2 212 1 191 2 213 2 373 2 281 2 166 1 132 1 
232 1 256 1 231 1 
47 1 232 1 256 1 
47 1 232 3 0 1 280 1 231 2 336 1 
47 1 232 2 280 1 231 1 336 1 346 1 
47 1 232 2 280 2 231 1 336 1 
157 1 320 1 158 1 322 1 297 1 30 1 46 2 49 1 6 5 188 1 115 1 165 4 11 3 281 5 192 2 168 1 193 2 53 2 97 1 286 1 333 1 175 1 177 3 18 1 125 1 126 1 127 1 37 1 269 2 105 1 313 1 107 1 
157 2 320 3 321 5 158 4 185 1 322 6 297 2 46 5 49 2 6 9 188 3 164 1 9 1 8 1 115 2 165 7 51 1 11 8 258 1 281 9 192 6 168 3 53 6 55 5 362 1 97 3 333 2 175 1 177 9 125 1 127 3 37 3 269 6 105 1 313 1 
157 1 320 1 158 1 297 1 46 3 49 1 6 3 188 1 115 1 9 1 165 2 11 3 281 3 192 2 168 1 193 1 53 2 97 1 333 1 18 1 177 4 126 1 127 1 37 2 269 2 313 1 
157 1 320 2 158 2 297 1 46 4 49 1 6 4 188 2 164 1 115 1 9 1 165 3 11 5 258 1 281 4 192 4 168 2 193 2 53 4 362 1 97 2 333 1 177 7 18 1 126 1 127 2 37 3 269 4 313 1 
238 1 
110 1 69 1 
196 1 
179 1 69 1 369 1 
153 1 69 1 
69 1 369 1 
199 2 178 1 179 1 69 3 296 1 369 1 
338 1 355 1 92 1 265 1 182 1 
338 1 355 1 92 1 265 1 182 1 
338 1 75 1 355 1 92 1 265 1 182 1 
338 1 355 1 92 1 265 1 182 1 
338 1 355 1 92 1 265 1 182 1 
134 1 318 1 67 1 0 1 353 1 47 1 228 1 300 1 7 1 211 1 189 2 256 1 325 1 231 1 167 1 232 2 120 1 147 1 83 1 307 1 236 1 149 1 100 2 122 1 310 1 289 1 312 1 106 1 65 1 131 1 
134 1 318 1 0 1 353 1 47 1 228 1 300 1 7 1 211 1 189 3 256 1 325 1 231 1 13 1 167 1 232 2 120 1 363 1 147 1 83 1 236 1 149 1 100 3 310 1 122 2 243 1 312 1 106 1 65 1 131 1 
134 1 318 1 0 1 353 1 47 1 228 1 300 1 7 1 211 1 189 2 256 1 325 1 13 1 167 1 231 1 232 2 120 1 147 1 236 1 100 2 122 2 243 1 106 1 65 1 131 1 
134 1 317 1 318 1 41 1 120 2 363 1 171 1 83 1 183 1 236 1 69 1 237 1 100 1 310 1 369 1 277 1 228 2 211 1 7 2 189 1 106 2 65 1 66 1 
134 1 318 1 0 1 47 1 228 1 7 1 211 1 189 1 256 1 325 1 231 1 167 1 232 2 120 1 83 1 307 1 236 1 149 1 100 1 310 1 289 1 243 1 312 1 106 1 65 1 131 1 
124 1 
273 2 157 1 247 1 42 1 4 1 322 5 297 1 46 1 254 3 6 4 115 1 141 1 229 1 11 1 257 1 281 4 146 1 303 1 95 1 82 1 331 5 234 3 173 2 264 2 174 1 365 1 176 1 175 1 337 2 37 2 269 1 371 1 105 2 343 1 313 1 218 1 372 3 203 1 344 1 130 1 377 1 156 1 
273 2 157 1 247 1 42 1 4 1 322 5 297 1 46 1 254 3 6 4 115 1 141 1 229 1 11 1 257 1 281 4 146 1 303 1 95 1 82 1 331 5 234 3 173 2 264 2 174 1 365 1 176 1 175 1 337 2 37 2 269 1 371 1 105 2 343 1 313 1 218 1 372 3 203 1 344 1 130 1 377 1 156 1 
273 2 157 1 42 1 4 1 322 4 26 1 297 1 46 1 254 2 6 4 5 1 141 1 115 1 229 1 11 1 257 1 281 4 230 2 146 1 303 1 95 1 331 4 234 2 173 2 174 1 365 1 175 1 177 2 269 1 105 2 343 1 313 1 372 2 203 1 344 1 130 1 377 1 133 2 156 1 
273 2 134 1 317 1 318 2 42 1 4 1 322 6 46 2 49 1 277 2 6 5 141 1 229 1 11 2 281 5 327 1 146 1 95 1 331 4 234 2 236 1 337 2 105 3 343 1 203 1 65 2 344 1 66 1 156 1 157 1 347 1 69 1 26 1 297 1 254 2 211 2 115 1 257 1 303 1 33 1 173 2 264 2 365 1 174 1 175 1 176 1 177 2 369 1 37 2 269 2 217 1 313 1 372 2 130 1 377 1 
331 2 42 1 4 1 295 1 322 2 365 1 254 1 6 3 141 1 105 1 343 1 229 1 257 1 203 1 281 3 146 1 130 1 303 1 344 1 377 1 95 1 156 1 
42 1 4 1 322 1 295 1 46 1 6 3 141 1 229 1 257 1 281 3 146 1 303 1 95 1 331 3 365 1 343 1 105 1 372 1 313 1 203 1 344 1 130 1 377 1 156 1 
42 1 4 1 295 1 322 2 46 1 254 1 6 3 141 1 229 1 257 1 281 3 146 1 303 1 95 1 331 3 234 1 365 1 105 1 343 1 372 1 313 1 203 1 344 1 130 1 377 1 156 1 
273 2 42 1 4 1 322 7 46 5 6 5 141 1 229 1 11 1 281 5 146 1 95 1 331 6 234 4 150 1 337 2 343 1 105 3 203 1 344 1 156 1 157 1 247 1 295 1 297 1 254 4 115 1 257 1 303 1 82 1 173 2 264 2 365 1 174 1 175 1 176 1 371 1 269 1 37 2 372 4 313 5 218 1 130 1 377 1 
273 2 157 1 42 1 4 1 322 4 26 1 297 1 46 2 254 2 6 4 141 1 115 1 229 1 11 1 257 1 281 4 146 1 303 1 95 1 331 4 234 2 173 2 264 2 174 1 365 1 175 1 176 1 177 2 337 2 37 2 269 1 105 2 343 1 313 1 372 2 203 1 344 1 130 1 377 1 156 1 
273 2 157 1 247 1 42 1 4 1 322 4 297 1 46 1 254 2 6 4 115 1 141 1 229 1 11 1 257 1 281 4 146 1 303 1 95 1 82 1 331 4 234 2 173 2 264 2 174 1 365 1 176 1 175 1 337 2 37 2 269 1 371 1 105 2 343 1 313 1 372 2 203 1 344 1 130 1 377 1 156 1 
273 2 157 1 247 1 42 1 4 1 322 4 297 1 46 1 254 2 6 4 115 1 141 1 229 1 11 1 257 1 281 4 146 1 303 1 95 1 82 1 331 4 234 2 173 2 264 2 174 1 365 1 176 1 175 1 337 2 37 2 269 1 371 1 105 2 343 1 313 1 372 2 203 1 344 1 130 1 377 1 156 1 
273 2 157 1 42 1 4 1 159 1 322 4 297 1 46 1 254 2 5 1 6 4 115 1 141 1 229 1 11 1 257 1 281 4 230 2 146 1 303 1 95 1 82 1 331 4 234 2 173 2 174 1 365 1 175 1 177 2 269 1 105 2 343 1 313 1 372 2 203 1 344 1 130 1 377 1 155 1 133 2 156 1 
268 1 241 1 90 1 249 1 207 2 129 1 288 1 238 1 123 1 
109 1 206 1 248 1 320 2 90 2 249 2 207 4 3 1 23 1 24 1 188 2 359 3 168 1 361 1 54 8 97 1 121 6 35 1 287 8 288 2 265 8 366 1 367 2 101 1 123 1 215 4 152 3 268 2 338 14 311 1 339 1 127 2 129 2 
134 1 318 1 42 1 293 1 90 1 249 1 250 1 207 2 3 1 69 1 351 1 225 1 275 1 187 1 277 1 211 1 142 1 146 2 361 1 16 1 121 1 148 1 236 1 288 1 265 1 366 1 369 1 215 1 123 1 370 1 268 1 338 2 216 1 339 1 179 1 129 1 65 1 377 2 
134 2 318 1 42 1 320 2 90 3 3 1 225 1 186 2 277 1 188 3 279 2 146 3 54 6 97 2 197 1 287 6 148 2 236 2 334 2 288 3 101 3 338 19 339 1 65 1 348 1 293 1 250 1 249 3 207 6 352 1 351 2 69 2 29 2 253 1 211 1 355 1 168 3 361 1 121 9 265 10 366 1 367 3 123 3 369 2 215 6 268 3 370 1 216 2 127 2 179 2 129 3 38 1 39 1 377 3 375 2 40 1 
134 2 318 7 317 1 67 1 42 1 293 1 90 2 250 1 249 2 207 4 184 2 3 1 225 1 69 3 161 1 277 2 299 1 211 8 356 1 146 1 96 1 121 1 236 2 364 1 288 2 265 1 123 2 369 2 201 1 268 2 338 2 339 1 241 1 243 1 104 1 129 2 65 8 377 1 66 1 
42 1 320 1 293 1 90 1 249 1 207 2 112 1 225 1 137 1 188 1 146 1 168 1 54 1 97 1 121 2 287 1 288 1 265 1 366 1 367 1 101 1 215 1 123 1 268 1 338 3 127 1 128 1 129 1 377 1 
54 1 320 1 287 1 90 1 249 1 207 2 288 1 265 2 24 1 367 1 215 1 123 1 267 1 338 2 268 1 188 1 241 1 129 1 
54 1 291 1 97 1 121 2 287 1 90 1 249 1 207 2 288 1 367 1 101 1 215 1 123 1 338 2 268 1 241 1 129 1 168 1 
320 1 90 1 249 1 207 2 24 1 188 1 168 1 54 2 97 1 121 2 287 2 265 2 288 1 367 2 123 1 215 2 101 1 268 1 338 4 127 1 241 1 129 1 
54 1 320 1 287 1 90 1 249 1 207 2 288 1 265 2 24 1 367 1 215 1 123 1 267 1 338 2 268 1 299 1 188 1 129 1 
54 1 291 1 97 1 121 2 287 1 90 1 249 1 207 2 288 1 367 1 101 1 215 1 123 1 338 2 268 1 299 1 129 1 168 1 
320 1 90 1 249 1 207 2 24 1 188 1 299 1 168 1 54 2 97 1 121 2 287 2 265 2 288 1 367 2 123 1 215 2 101 1 268 1 338 4 127 1 129 1 
54 2 97 1 320 1 121 2 287 2 90 1 249 1 207 2 288 1 265 2 24 1 367 2 101 1 215 2 123 1 268 1 338 4 127 1 188 1 129 1 168 1 
134 1 318 1 90 1 249 1 207 2 3 1 351 1 69 1 277 1 211 1 146 1 361 1 121 1 148 1 236 1 265 1 288 1 369 1 123 1 338 2 268 1 216 1 339 1 179 1 129 1 65 1 375 1 377 1 
134 1 318 1 223 1 90 1 249 1 207 2 3 1 351 1 70 1 69 1 277 1 211 1 146 1 361 1 121 1 236 1 265 1 151 1 288 1 369 1 123 1 338 2 268 1 339 1 179 1 129 1 65 1 377 1 
320 1 90 1 249 1 207 2 24 1 188 1 168 1 54 2 97 1 121 2 287 2 265 2 288 1 366 1 367 2 123 1 215 2 101 1 268 1 338 4 127 1 129 1 
134 1 318 1 67 1 320 1 90 1 249 1 207 2 351 1 69 1 24 1 29 1 188 1 211 1 146 1 168 1 54 2 97 1 121 2 287 2 148 1 236 1 265 2 288 1 367 2 101 1 215 2 369 1 123 1 338 4 268 1 216 1 127 1 179 1 129 1 65 1 375 1 377 1 
42 1 320 1 293 1 90 1 249 1 207 2 112 1 225 1 137 1 24 1 209 1 188 1 146 1 168 1 54 1 97 1 121 1 287 1 288 1 265 2 366 1 367 1 123 1 215 1 268 1 338 3 127 1 129 1 377 1 
109 1 292 1 248 1 320 3 90 2 249 2 350 1 207 4 24 3 188 3 326 1 12 2 359 1 168 3 169 1 332 1 97 3 17 1 121 10 58 1 265 9 367 6 101 3 152 2 268 2 338 19 127 3 242 1 129 2 221 2 
109 2 205 1 320 3 90 3 249 3 350 2 207 6 226 1 24 2 163 1 188 3 326 1 12 1 359 2 360 2 168 2 169 1 97 2 121 12 17 1 57 1 58 2 265 14 367 4 101 2 268 3 338 26 152 2 202 1 127 3 242 1 129 3 314 1 221 4 
109 3 292 1 205 1 248 1 320 4 348 1 90 3 249 3 350 1 207 6 226 1 24 4 253 1 163 1 188 5 355 1 326 1 12 1 359 3 360 1 168 5 194 1 169 1 97 4 17 1 121 21 197 1 57 1 58 2 265 20 367 7 101 3 152 4 268 3 338 41 202 1 127 4 242 1 129 3 38 1 314 1 221 4 40 1 
109 3 292 1 205 1 248 1 320 4 348 1 90 4 249 4 350 1 207 8 226 1 24 3 253 1 163 1 188 5 355 1 326 1 12 1 359 3 360 2 168 4 194 1 169 1 97 3 17 1 121 18 197 1 57 1 58 2 265 20 367 7 101 4 152 4 268 4 338 38 202 1 127 4 242 1 129 4 38 1 314 1 221 4 40 1 
109 1 348 1 121 4 17 1 197 1 90 1 58 1 249 1 207 2 350 1 265 5 367 1 101 1 253 1 338 9 268 1 152 1 188 1 242 1 355 1 129 1 38 1 326 1 221 1 359 1 168 1 40 1 
162 1 99 1 31 1 191 1 251 1 213 1 373 1 84 1 160 1 27 1 
261 1 323 1 
162 1 195 1 31 1 191 1 213 1 373 1 335 1 160 1 71 1 
48 1 21 1 
340 1 315 1 61 1 
117 1 99 1 111 1 251 1 84 1 160 1 28 1 46 1 266 2 6 1 162 1 31 1 212 1 191 1 213 1 281 1 373 1 166 1 
117 1 99 1 111 1 251 1 84 1 160 1 28 1 46 1 266 2 6 1 162 1 31 1 212 1 191 1 213 1 281 1 373 1 166 1 
117 1 99 1 111 1 251 1 84 1 160 1 28 1 46 1 266 2 6 1 162 1 31 1 212 1 191 1 213 1 281 1 373 1 166 1 
48 1 340 1 21 1 
48 1 340 1 21 1 
315 1 61 1 
340 1 315 1 61 1 
73 1 308 1 
42 2 293 2 158 1 225 2 160 1 28 1 138 1 30 1 6 1 73 1 162 1 31 1 323 1 165 1 191 1 213 1 281 1 146 2 361 1 261 1 117 1 308 1 266 1 102 1 373 1 107 1 377 2 
134 1 318 2 42 2 90 1 249 1 349 1 207 2 184 2 3 1 69 1 161 1 72 1 211 2 10 1 32 1 356 1 328 1 146 2 121 1 236 1 288 1 265 1 366 1 369 1 123 1 268 1 338 2 339 1 129 1 65 2 377 2 
134 1 318 2 232 2 67 1 0 1 43 1 236 1 149 1 47 1 211 2 341 1 243 1 256 1 106 1 154 1 231 1 167 1 65 2 131 1 
134 1 318 1 232 2 0 1 285 1 236 1 149 1 47 1 211 1 243 1 256 1 106 1 154 1 231 1 167 1 65 1 131 1 
134 1 318 1 317 1 233 1 171 1 236 1 69 1 369 1 277 1 211 1 341 1 106 1 65 1 66 1 
134 1 318 1 232 2 0 1 43 1 236 1 149 1 47 1 211 1 341 1 243 1 256 1 106 1 154 1 231 1 167 1 65 1 131 1 
345 1 
134 1 318 1 42 2 293 2 90 1 249 1 207 2 112 2 225 2 351 1 69 1 354 1 277 1 211 1 50 1 146 3 361 1 121 1 148 1 236 1 288 1 369 1 123 1 338 1 268 1 339 1 216 1 179 1 129 1 65 1 377 3 375 1 
157 1 53 1 347 1 175 1 177 2 297 1 46 2 49 1 37 1 269 2 355 1 115 1 11 1 313 1 192 1 
238 1 
157 1 322 1 264 1 175 1 176 1 177 1 297 1 337 1 46 2 6 1 269 1 37 1 115 1 105 1 313 1 11 1 281 1 
134 4 222 1 318 3 320 2 44 2 322 5 45 2 276 2 46 8 49 2 277 1 6 5 188 2 11 9 281 5 192 6 94 1 14 2 95 2 53 6 15 1 97 2 236 3 334 2 199 2 240 1 153 2 290 2 105 3 65 3 157 4 347 1 67 1 110 3 69 10 296 1 297 4 298 2 74 1 211 3 115 4 168 2 119 1 175 4 369 3 177 12 127 2 37 6 269 8 270 1 179 3 180 2 313 2 374 2 
22 1 109 1 157 2 347 1 205 1 320 2 322 1 45 2 297 2 46 4 49 1 6 1 163 1 188 2 115 2 11 8 281 1 192 4 359 1 168 2 53 4 97 2 57 1 59 1 175 2 177 4 152 1 202 1 127 2 269 5 37 2 180 1 105 1 313 2 314 1 
157 1 247 1 42 1 348 1 293 1 112 1 225 1 45 2 297 1 6 1 188 2 115 1 229 1 11 2 50 1 281 1 146 1 52 1 168 1 197 1 175 1 62 1 20 1 269 2 180 1 244 1 377 1 40 1 
157 1 222 1 175 1 297 1 46 1 269 1 115 1 313 1 11 1 94 1 
53 5 320 2 97 2 334 1 45 2 177 10 46 5 127 2 188 2 269 5 37 5 180 1 11 5 192 5 168 2 
46 1 6 1 105 1 313 1 281 1 322 1 
134 1 157 2 318 4 347 2 317 1 69 1 322 4 297 2 277 2 49 2 6 3 74 2 211 4 9 1 115 2 11 2 327 1 281 3 329 1 33 1 236 1 175 1 369 1 200 1 269 2 270 1 105 2 65 4 66 1 
213 1 373 1 282 1 
308 1 251 1 213 1 373 1 252 1 
213 1 373 1 282 1 
213 1 373 1 282 1 
255 1 213 1 373 1 
255 1 213 1 373 1 
255 1 213 1 373 1 
213 1 373 1 
191 1 160 1 
348 1 121 3 197 1 90 2 249 2 207 4 265 4 24 1 367 2 101 1 253 1 338 7 268 2 188 1 355 1 129 2 38 1 360 1 168 1 40 1 
238 1 
97 1 34 1 320 1 121 2 90 1 249 1 207 2 265 2 24 1 367 2 101 1 268 1 338 4 127 1 188 1 129 1 168 1 
109 1 338 2 152 1 121 1 265 1 359 1 
320 2 248 1 348 1 90 1 249 1 207 2 23 1 24 2 253 1 188 3 355 1 359 2 360 1 168 3 97 2 121 8 197 1 265 9 367 3 101 1 338 17 152 2 268 1 311 1 127 2 129 1 38 1 40 1 
338 1 152 1 121 1 
338 1 265 1 359 1 
34 1 320 1 97 1 121 3 90 1 249 1 207 2 334 1 265 3 24 1 367 3 101 2 268 1 338 6 127 1 188 1 129 1 168 1 
109 1 205 1 97 2 320 2 121 6 57 1 90 1 249 1 207 2 265 6 24 1 367 2 101 1 268 1 152 1 338 12 127 2 202 1 188 2 163 1 129 1 314 1 326 1 359 1 168 2 
348 1 121 3 197 1 265 3 24 1 367 2 101 1 338 6 188 1 168 1 40 1 
121 2 197 1 90 1 249 1 207 2 265 1 24 1 367 2 101 1 253 1 338 3 268 1 271 1 129 1 38 1 360 1 40 1 
121 5 348 1 197 2 90 1 249 1 207 2 265 5 24 2 367 5 101 3 268 1 338 10 20 1 188 2 129 1 326 1 168 2 40 2 
320 1 90 1 249 1 207 2 265 2 24 1 367 1 268 1 338 2 188 1 129 1 326 1 
97 1 320 1 121 2 90 1 249 1 207 2 265 2 24 1 367 2 101 1 268 1 338 4 127 1 188 1 129 1 326 1 168 1 
292 1 121 2 197 1 90 3 249 3 207 6 265 1 24 1 367 2 101 1 338 3 268 3 271 1 129 3 326 1 360 1 40 1 
109 1 245 1 292 1 320 2 348 1 90 4 249 4 207 8 24 2 253 1 188 3 355 1 326 1 359 3 360 1 168 3 81 1 34 1 97 2 121 10 197 1 265 11 367 4 101 2 152 3 268 4 338 21 127 2 129 4 220 1 38 1 40 1 
109 1 348 1 121 3 197 1 90 1 249 1 207 2 265 4 367 1 101 1 253 1 268 1 152 1 338 7 202 1 188 1 355 1 129 1 38 1 326 1 359 1 168 1 40 1 
109 1 248 1 320 1 348 1 90 2 249 2 207 4 24 1 253 1 188 2 355 1 326 1 359 1 168 1 34 1 121 4 197 1 265 6 367 2 101 1 338 10 152 2 268 2 202 1 127 1 129 2 38 1 40 1 
109 1 205 1 320 2 348 1 90 3 249 3 207 6 24 1 253 1 163 1 188 3 355 1 326 1 359 1 360 1 168 3 34 1 97 2 121 9 197 1 57 1 265 9 367 3 101 2 338 18 152 1 268 3 202 1 127 2 129 3 38 1 314 1 40 1 
109 1 205 1 320 2 348 1 90 3 249 3 207 6 24 2 253 1 163 1 188 3 355 1 326 1 359 1 360 1 168 2 34 1 97 1 121 6 197 1 57 1 265 10 367 4 101 2 338 16 152 1 268 3 202 1 127 2 129 3 38 1 314 1 40 1 
109 1 348 1 121 3 197 1 90 1 249 1 207 2 265 4 367 1 101 1 253 1 268 1 152 1 338 7 202 1 188 1 355 1 129 1 38 1 326 1 359 1 168 1 40 1 
109 1 205 1 97 2 320 2 121 6 57 1 90 1 249 1 207 2 265 6 24 1 367 2 101 1 268 1 152 1 338 12 127 2 202 1 188 2 163 1 129 1 314 1 326 1 359 1 168 2 
109 1 205 1 320 2 348 1 90 4 249 4 207 8 24 1 253 1 163 1 188 3 355 1 326 1 359 1 360 2 168 2 34 1 97 1 121 7 197 1 57 1 265 10 367 3 101 2 338 17 152 1 268 4 202 1 127 2 129 4 38 1 314 1 40 1 
109 1 292 1 205 1 320 3 90 4 249 4 207 8 24 3 163 1 188 3 326 1 359 1 360 2 168 2 97 2 121 7 57 1 265 9 367 6 101 3 338 16 152 1 268 4 202 1 127 3 129 4 314 1 
121 4 348 1 197 3 265 3 24 3 367 6 253 1 101 3 338 7 188 1 38 2 168 1 40 3 
109 1 292 1 205 1 320 2 348 1 90 4 249 4 207 8 24 1 253 1 163 1 188 3 355 1 326 1 359 1 360 2 168 2 97 1 121 7 197 1 57 1 265 10 367 3 101 2 338 17 152 1 268 4 202 1 127 2 129 4 38 1 314 1 40 1 
361 1 42 1 93 1 145 1 146 1 303 1 377 1 
361 1 42 1 224 1 2 1 77 1 93 1 78 1 145 1 272 1 146 1 303 1 377 1 
318 1 277 1 211 1 65 1 238 1 
361 1 134 1 318 1 42 1 293 1 250 1 236 1 69 1 351 1 225 1 369 1 277 1 216 1 211 1 179 1 146 2 65 1 377 2 
134 1 318 1 42 2 293 1 250 1 225 2 351 1 69 3 276 1 74 1 211 1 229 1 146 2 361 1 236 1 369 2 216 1 179 2 153 1 203 1 65 1 130 1 377 2 
134 1 318 2 42 2 293 1 250 1 70 1 225 2 351 1 69 3 276 1 74 1 211 2 229 1 358 1 146 2 361 1 236 1 369 2 179 2 153 1 203 1 65 2 130 1 377 2 
318 1 110 1 42 1 293 1 112 1 322 1 69 2 225 1 46 1 6 2 74 1 211 1 229 1 50 1 281 2 146 1 52 1 95 1 62 1 199 1 313 1 244 1 108 1 65 1 377 1 
134 1 318 3 110 1 236 1 69 4 322 1 369 1 276 1 46 1 199 1 277 1 6 2 74 1 211 3 153 1 179 1 290 1 358 1 313 1 281 2 65 3 95 1 
134 1 318 1 211 1 236 1 364 1 65 1 
134 3 96 1 318 6 262 1 67 1 184 1 236 2 364 1 69 3 161 1 296 1 369 2 201 1 277 2 139 1 86 1 211 7 243 1 104 1 179 1 65 7 
134 1 318 1 67 1 42 1 348 1 293 1 90 2 249 2 250 1 207 4 69 1 351 1 225 1 186 1 29 1 253 1 188 1 211 1 355 1 328 1 146 2 168 1 361 1 121 2 197 1 148 1 236 1 265 3 288 2 366 1 367 1 101 1 369 1 123 2 338 5 268 2 216 1 179 1 129 2 38 1 65 1 377 2 375 1 40 1 
157 2 222 1 318 1 110 1 44 1 69 2 322 2 297 2 46 1 277 1 6 3 298 1 211 1 115 2 165 1 11 1 281 3 94 1 14 1 95 1 175 2 199 1 269 1 270 1 290 1 105 1 313 1 65 1 
134 2 318 2 67 1 236 1 364 1 69 2 296 1 369 1 199 1 240 1 211 2 179 1 65 2 
134 1 317 1 318 4 277 1 67 1 211 4 358 1 236 1 69 1 316 1 65 4 369 1 66 1 
304 1 134 2 318 2 236 1 69 1 85 1 369 1 74 1 139 1 86 1 211 2 179 1 79 1 65 2 
134 1 47 1 318 1 277 1 232 1 211 1 256 1 236 1 167 1 65 1 
134 1 318 2 67 1 236 1 69 1 161 1 369 1 211 2 10 1 243 1 65 2 
134 2 317 1 318 4 67 1 236 2 69 3 161 1 369 2 277 1 201 1 74 1 211 5 104 1 316 1 65 5 66 1 
134 2 317 1 318 4 67 1 306 1 236 2 69 3 161 1 369 2 277 1 201 1 74 1 211 5 316 1 65 5 66 1 
361 1 134 1 318 1 42 1 293 1 250 1 236 1 69 1 351 1 225 1 70 1 369 1 277 1 211 1 179 1 146 2 65 1 377 2 
134 2 318 1 262 1 236 1 69 1 296 1 369 1 74 1 139 1 86 1 211 1 179 1 65 1 
361 1 143 1 219 1 25 1 376 1 
361 1 1 1 25 1 46 1 6 2 342 1 190 1 165 1 143 2 229 1 313 1 219 2 203 1 281 2 130 1 344 1 204 1 376 2 95 1 
42 1 349 1 25 1 72 1 143 1 32 1 146 1 376 1 377 1 
190 1 25 1 204 1 
307 1 83 1 147 1 235 1 353 1 100 3 122 1 310 1 300 1 189 3 260 1 
147 1 136 1 89 1 330 1 
300 1 147 1 
238 1 
300 1 147 1 189 1 83 1 353 1 100 1 310 1 
120 1 7 1 100 1 
147 1 307 1 83 1 294 1 353 1 100 3 310 1 140 1 300 1 189 3 214 1 260 2 
300 1 147 1 189 2 83 1 353 1 100 2 122 1 36 1 310 1 
232 1 147 1 189 1 83 1 307 1 256 1 357 1 231 1 100 1 310 1 330 1 
300 1 147 1 189 1 83 1 307 1 100 1 310 1 
300 2 189 1 83 1 307 1 353 1 100 1 310 1 
80 1 147 1 307 1 83 2 100 2 310 2 300 1 189 2 64 1 259 1 
283 1 307 1 83 1 147 2 235 1 136 1 353 1 100 3 310 1 122 2 300 1 189 3 330 1 
232 2 284 1 0 1 147 1 307 1 83 1 353 1 100 2 310 1 122 1 47 1 300 1 189 2 256 1 231 1 
307 1 83 2 147 2 136 1 353 1 100 4 310 2 36 1 122 2 300 1 189 4 103 1 330 1 
300 1 147 1 189 1 83 1 307 1 353 1 100 1 310 1 
83 1 147 3 294 1 136 1 353 2 100 4 122 2 310 1 140 1 300 2 189 4 260 1 89 1 330 1 
98 1 147 1 307 1 83 1 353 1 100 2 310 1 122 1 300 1 189 2 76 1 181 1 
147 1 307 1 83 1 294 2 353 1 100 3 310 1 114 1 140 1 300 1 189 3 260 2 
118 1 263 2 147 2 324 1 
189 1 83 1 307 1 87 1 100 1 310 1 
300 1 147 1 189 2 83 1 307 1 235 1 353 1 100 2 122 1 310 1 
227 1 
300 1 147 1 189 1 83 1 307 1 353 1 100 1 310 1 

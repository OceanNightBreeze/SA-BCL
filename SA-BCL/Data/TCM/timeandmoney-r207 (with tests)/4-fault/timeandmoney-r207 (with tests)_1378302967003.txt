#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 0 301 193 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 2 17 1 66 5 139 2 294 2 1 1 245 3 144 2 99 1 145 2 77 2 168 1 148 1 273 1 25 4 149 2 28 1 199 1 173 9 258 1 12 1 309 1 377 1 133 1 134 9 312 1 235 6 65 1 
93 2 17 1 66 5 139 2 294 2 1 1 245 3 144 2 99 1 145 2 77 2 168 1 148 1 273 1 25 4 149 2 28 1 199 1 173 9 258 1 12 1 309 1 377 1 133 1 134 9 312 1 235 6 65 1 
93 2 17 1 66 6 139 2 294 2 1 1 245 4 144 2 99 1 145 2 77 2 168 1 148 1 273 1 25 5 149 2 28 1 199 1 173 10 258 1 12 1 309 1 377 1 133 1 134 10 312 1 235 7 65 1 
93 2 17 1 66 4 139 2 294 2 245 2 144 2 99 1 145 2 77 2 168 1 148 1 273 1 25 3 149 1 28 1 199 1 173 7 258 1 12 1 309 1 377 1 133 1 134 7 312 1 235 4 65 1 
93 1 149 2 17 1 66 3 139 1 173 4 258 1 1 1 245 1 377 1 144 1 145 1 133 1 77 1 134 4 168 1 235 3 25 2 
66 1 17 1 139 1 294 1 173 2 258 1 74 1 12 1 309 1 144 1 145 1 133 1 77 1 134 2 251 1 368 1 
17 1 66 2 199 1 294 1 173 3 258 1 245 1 145 2 133 1 77 2 134 3 235 1 25 1 
93 1 17 1 66 5 139 1 294 1 1 1 245 3 244 1 99 1 144 1 145 2 77 2 168 1 148 1 25 4 149 2 199 1 173 9 258 1 283 1 377 1 133 1 134 9 235 7 
93 1 17 1 66 5 139 1 294 1 1 1 245 3 244 1 99 1 144 1 145 2 77 2 168 1 148 1 25 4 149 2 199 1 173 9 258 1 283 1 377 1 133 1 134 9 235 7 
305 1 226 1 340 1 
200 1 
27 2 209 1 314 2 101 2 68 2 57 1 71 2 11 2 
163 1 96 1 314 2 68 2 69 1 71 2 247 1 321 2 101 3 100 2 229 2 353 1 326 2 81 1 27 3 196 1 198 2 231 1 84 1 85 1 30 1 57 1 88 1 31 1 204 1 11 2 33 1 207 1 361 1 130 1 209 1 132 1 311 1 338 1 135 1 290 1 160 1 
313 1 27 1 209 1 314 1 101 1 68 1 262 1 71 1 11 1 228 1 
305 1 27 1 313 1 71 1 360 1 124 1 189 1 190 1 270 1 192 1 90 1 101 1 212 1 226 1 
305 1 27 1 313 1 314 1 68 1 71 1 11 1 360 1 189 2 190 2 270 1 192 1 101 1 212 1 226 1 
111 1 189 1 276 1 190 1 128 1 
189 2 276 1 190 2 305 1 370 1 379 1 226 1 128 1 
189 1 190 1 128 1 
276 1 313 1 27 1 314 1 68 1 257 1 71 1 11 1 189 1 190 1 209 1 101 1 262 1 228 1 
305 1 
189 2 276 1 190 2 305 1 306 1 379 1 226 1 128 1 
276 2 305 1 182 2 126 1 266 1 58 1 128 2 371 1 189 5 208 1 190 5 176 1 37 2 379 1 347 1 63 1 337 2 226 1 237 1 
57 1 340 1 
27 2 278 1 314 1 68 1 101 2 57 2 71 2 11 1 331 1 
210 1 46 1 381 1 
26 1 27 1 196 1 198 1 84 1 69 1 57 1 204 1 207 1 321 1 132 1 101 1 100 1 338 1 311 1 160 1 
196 1 27 2 230 1 314 1 198 1 68 1 69 1 84 1 204 1 71 1 207 1 321 1 248 1 132 1 101 2 100 1 311 1 338 1 381 1 160 1 
27 3 230 1 314 3 101 3 68 3 57 1 71 3 11 1 
313 1 27 1 314 1 101 1 68 1 71 1 228 1 
313 1 278 1 27 1 314 1 101 1 68 1 71 1 11 1 331 1 
163 1 313 1 314 3 68 3 69 1 71 3 247 1 189 1 190 1 270 1 321 1 192 1 248 1 101 4 100 1 229 2 353 1 326 1 81 1 196 1 27 4 230 1 198 1 84 1 85 1 57 1 88 1 151 1 204 1 11 2 331 1 360 1 207 1 361 1 130 1 209 1 132 1 311 1 338 1 212 1 135 1 290 1 16 1 160 1 
27 2 197 1 314 1 230 1 101 2 68 1 57 1 71 2 124 1 
305 1 313 1 27 3 230 2 314 3 68 3 151 1 71 3 11 1 331 1 360 1 189 1 190 1 270 1 248 1 14 1 192 1 101 3 212 1 
27 2 230 1 314 2 46 1 68 2 71 2 331 1 11 1 101 2 381 1 
27 1 196 1 198 1 84 1 69 1 57 1 204 1 207 1 321 1 132 1 101 1 100 1 338 1 311 1 160 1 
27 1 196 1 198 1 47 1 69 1 57 1 204 1 359 1 207 1 321 1 101 1 100 1 338 1 311 1 160 1 
163 2 342 1 46 2 98 1 169 1 277 1 229 2 353 1 304 1 326 4 81 1 355 1 358 1 30 2 201 1 330 1 61 1 361 1 130 1 210 2 288 1 135 1 290 1 381 2 
313 1 27 1 137 1 314 1 101 1 68 1 212 1 71 1 
27 5 197 1 230 2 314 4 68 4 57 1 8 1 71 5 331 1 11 1 124 1 333 1 248 1 101 5 
137 1 313 1 27 2 314 2 101 2 68 2 71 2 228 1 
241 1 185 1 
241 1 185 1 
220 1 80 1 
220 1 80 1 
220 1 80 1 
241 1 185 1 219 1 
241 1 185 1 221 1 
6 1 241 2 185 2 220 1 232 1 80 1 
241 1 185 1 219 1 
241 1 185 1 219 1 
241 1 185 1 87 1 
241 1 185 1 87 1 
241 1 185 1 87 1 
54 1 305 1 172 1 120 1 241 2 292 2 121 2 185 2 165 2 232 1 319 2 189 2 190 2 363 1 62 2 78 1 116 1 40 1 214 3 
238 1 95 1 292 1 241 1 314 2 68 2 185 1 165 1 71 2 221 1 319 1 189 1 190 1 191 1 101 2 302 1 254 1 27 2 57 1 205 1 156 1 62 1 214 1 40 1 
93 1 144 1 139 1 
144 1 139 1 74 1 
93 2 139 3 91 1 74 1 166 1 92 1 
93 1 139 2 366 1 91 1 74 1 166 1 
93 1 139 2 91 2 74 1 166 1 
238 1 95 1 181 2 182 1 186 2 223 1 371 2 189 5 190 5 76 1 299 1 249 1 347 3 226 1 277 1 171 1 276 4 255 1 305 2 106 1 200 3 201 1 282 2 205 1 61 1 128 1 37 1 379 1 288 1 337 1 237 1 39 1 
181 6 182 2 164 1 73 5 223 3 371 6 189 9 190 9 76 2 299 3 249 1 347 8 226 1 277 3 276 7 305 5 357 1 200 9 58 1 201 3 89 1 10 1 282 6 205 4 61 3 128 6 111 5 37 2 379 1 288 3 337 2 113 1 237 1 39 2 117 1 
313 1 182 1 181 2 314 1 68 1 186 1 71 1 223 1 371 2 189 3 190 3 76 1 299 1 101 1 347 3 226 1 228 1 277 1 276 2 255 1 171 1 27 1 305 2 200 3 257 1 201 1 58 1 11 1 205 1 282 2 61 1 209 1 37 1 288 1 337 1 262 1 39 1 
182 1 181 4 186 2 189 4 190 4 299 2 101 1 347 5 255 1 305 3 200 6 58 1 201 2 257 1 11 1 205 2 61 2 209 1 113 1 262 1 117 1 313 1 164 1 314 1 68 1 71 1 223 2 371 4 76 1 226 1 228 1 276 3 171 1 277 2 27 1 282 4 37 1 288 2 337 1 39 1 
307 1 340 1 207 1 
215 1 207 1 
341 1 
204 1 207 1 
246 1 307 2 155 1 311 1 204 1 207 3 
311 1 204 1 207 1 
279 1 207 1 
277 1 163 3 326 7 240 1 140 1 108 1 30 4 329 1 330 2 261 1 22 1 364 1 288 1 287 1 336 1 169 3 339 2 
277 1 163 3 326 7 240 1 140 1 108 1 30 4 329 1 330 2 261 1 22 1 364 1 288 1 287 1 336 1 169 3 339 2 
277 1 163 3 326 7 240 1 140 1 108 1 127 1 30 4 329 1 330 2 261 1 22 1 364 1 288 1 287 1 336 1 169 3 339 2 
163 15 138 1 240 2 44 4 140 1 317 1 217 1 72 1 299 3 22 2 324 3 147 1 169 10 252 1 195 1 229 2 353 1 277 4 326 31 81 1 108 1 30 16 329 5 201 3 330 5 61 3 130 1 261 2 364 2 287 1 288 4 336 1 339 3 135 1 
163 4 240 1 140 1 72 1 22 1 169 4 277 1 229 4 353 2 354 1 326 9 81 2 375 1 108 1 30 5 329 1 330 3 130 2 261 1 364 1 288 1 287 1 339 2 135 2 
93 1 66 1 17 1 139 2 294 1 343 1 267 1 74 1 297 1 75 1 144 1 321 1 145 1 146 1 100 1 77 1 350 1 196 1 198 1 173 2 258 1 174 1 133 1 178 1 134 2 289 1 338 1 235 1 92 1 161 1 
93 1 66 1 17 1 139 2 294 1 343 1 267 1 48 1 74 1 297 1 144 1 321 1 145 1 146 1 100 1 102 1 77 1 350 1 196 1 198 1 173 3 174 1 284 1 133 1 134 3 289 1 338 1 235 2 92 1 161 1 
93 1 66 1 17 1 139 2 294 1 343 1 267 1 74 1 297 1 321 1 144 1 146 1 100 1 102 1 196 1 198 1 173 2 174 1 284 1 133 1 134 2 338 1 235 2 92 1 161 1 
196 1 198 1 141 1 294 2 173 1 267 2 48 1 204 1 9 1 297 2 174 2 207 1 321 1 131 1 145 1 77 1 100 1 374 1 134 1 338 1 103 1 236 1 160 1 
93 1 139 2 294 1 343 1 267 1 74 1 297 1 75 1 144 1 321 1 145 1 146 1 100 1 102 1 77 1 350 1 196 1 198 1 173 1 258 1 174 1 134 1 289 1 338 1 92 1 161 1 
123 1 
182 1 295 1 141 1 242 1 189 3 190 3 192 1 300 1 100 2 101 1 347 2 352 1 194 1 305 1 196 1 198 2 150 1 200 1 204 1 360 1 60 1 207 1 13 1 365 1 212 1 115 1 160 2 313 1 71 1 223 1 371 2 124 1 372 1 321 2 270 1 21 1 27 1 29 1 328 2 128 2 35 1 131 1 286 1 90 1 37 1 379 1 337 1 338 1 237 1 39 1 
306 1 264 1 313 1 27 1 328 2 242 1 71 1 360 1 128 2 124 1 189 3 35 1 190 3 270 1 192 1 90 1 379 1 101 1 212 1 115 1 352 1 194 1 
306 1 305 1 313 1 27 1 328 3 242 1 71 1 360 1 128 1 124 1 189 3 35 1 190 3 270 1 192 1 90 1 379 1 101 1 112 1 212 1 226 1 115 1 352 1 194 1 
313 1 264 1 242 1 71 1 124 1 189 3 190 3 270 1 269 1 192 1 101 1 226 1 352 1 194 1 306 1 27 1 305 1 328 3 360 1 128 2 35 1 90 1 379 1 112 1 212 1 115 1 
182 1 242 1 189 5 190 5 192 1 300 2 101 1 3 2 347 1 352 1 194 1 306 1 305 5 150 2 109 1 360 1 110 1 211 1 365 2 157 1 112 4 212 1 115 1 264 4 313 1 71 1 223 2 124 1 371 1 372 1 269 4 270 1 21 1 373 1 226 5 27 1 328 6 128 7 35 1 90 1 37 1 379 3 337 1 237 1 
182 1 313 1 295 1 242 1 71 1 223 1 371 1 124 1 189 2 372 1 190 2 270 1 192 1 21 1 300 1 101 1 347 1 352 1 194 1 305 1 27 1 150 1 200 1 328 2 360 1 35 1 90 1 37 1 365 1 337 1 212 1 237 1 115 1 
264 2 182 1 313 1 242 1 71 1 223 2 371 1 124 1 189 4 372 1 190 4 269 2 270 1 21 1 192 1 300 2 3 2 101 1 347 1 226 1 352 1 194 1 305 1 27 1 150 2 328 4 109 1 360 1 128 4 35 1 90 1 37 1 379 2 365 2 211 1 157 1 112 2 212 1 337 1 237 1 115 1 
264 2 182 1 313 1 242 1 71 1 223 2 371 1 124 1 189 4 372 1 190 4 269 2 270 1 21 1 192 1 300 2 3 2 101 1 347 1 226 1 352 1 194 1 305 1 27 1 150 2 328 4 109 1 360 1 128 4 35 1 90 1 37 1 379 2 365 2 211 1 157 1 112 2 212 1 337 1 237 1 115 1 
264 2 182 1 313 1 369 1 242 1 71 1 97 2 371 1 124 1 189 4 372 1 190 4 269 2 270 1 192 1 300 2 101 1 52 1 347 1 349 2 226 1 352 1 194 1 305 1 27 1 150 2 200 2 328 4 360 1 128 4 35 1 310 1 90 1 37 1 379 2 157 1 112 2 212 1 337 1 237 1 115 1 
182 1 313 1 264 3 242 1 71 1 223 2 371 1 124 1 189 4 372 1 190 4 270 1 269 3 21 1 192 1 300 2 3 2 101 1 347 1 226 1 352 1 194 1 305 1 27 1 150 2 328 5 109 1 360 1 128 5 110 1 35 1 90 1 37 1 379 2 365 2 211 1 157 1 112 3 337 1 212 1 237 1 115 1 
182 1 313 1 264 3 242 1 71 1 223 2 371 1 124 1 189 4 372 1 190 4 270 1 269 3 21 1 192 1 300 2 3 2 101 1 347 1 226 1 352 1 194 1 305 1 27 1 150 2 328 5 109 1 360 1 128 5 110 1 35 1 90 1 37 1 379 2 365 2 211 1 157 1 112 3 337 1 212 1 237 1 115 1 
182 1 295 1 242 1 97 2 189 4 190 4 192 1 300 2 101 1 347 1 349 2 352 1 194 1 305 1 150 2 200 2 360 1 310 1 112 2 212 1 115 1 313 1 264 2 71 1 124 1 371 1 372 1 270 1 269 2 226 1 27 1 328 4 128 4 35 1 90 1 37 1 379 2 337 1 237 1 
277 1 353 1 229 2 163 3 326 6 81 1 46 1 140 1 108 1 57 2 30 3 330 2 98 1 361 1 130 1 261 1 22 1 210 1 288 1 287 1 339 1 169 2 290 1 135 1 340 1 381 1 
163 6 138 1 44 3 46 4 247 1 299 2 271 1 324 3 169 2 125 1 195 1 229 4 353 2 277 1 326 14 81 2 82 1 57 1 30 8 329 1 201 1 31 1 330 1 61 2 361 2 154 1 378 1 130 2 210 11 288 2 135 2 290 1 381 11 
163 1 314 1 46 1 68 1 69 1 316 1 71 1 247 1 321 1 248 1 271 1 100 1 101 2 353 1 229 2 26 1 326 2 196 1 81 1 27 2 198 1 230 1 84 1 57 1 30 1 204 1 31 1 207 1 34 1 361 1 130 1 132 1 311 1 338 1 290 1 135 1 160 1 159 1 
46 7 140 1 49 1 247 1 298 2 248 1 299 2 102 1 51 1 100 3 101 3 353 3 105 2 196 2 198 3 108 1 57 2 201 2 204 2 61 2 207 2 361 3 261 1 210 7 311 2 367 1 160 1 163 10 265 2 314 1 68 1 69 2 71 1 321 3 22 1 271 1 169 8 277 3 229 6 326 20 27 3 81 3 230 1 84 2 30 10 88 2 329 4 31 1 330 4 130 3 335 2 132 2 287 1 288 3 339 1 338 2 135 3 290 3 381 7 
293 1 141 1 98 1 50 1 247 1 100 7 101 1 102 1 348 1 351 1 353 2 196 4 198 7 204 3 207 4 361 2 259 1 64 1 311 1 160 2 162 1 163 1 314 1 68 1 216 1 71 1 321 6 170 1 229 4 326 2 81 2 27 1 230 1 231 2 30 1 31 1 376 1 130 2 131 1 36 1 338 3 290 2 135 2 
163 2 314 1 46 1 68 1 344 1 71 1 299 1 271 1 101 1 169 1 229 2 353 1 277 1 326 3 81 1 27 1 30 1 201 1 330 1 11 1 331 1 61 1 361 1 130 1 210 1 288 1 135 1 290 1 381 1 
353 1 229 2 326 2 342 1 81 1 46 1 30 2 329 1 61 1 98 1 361 1 130 1 210 1 288 1 169 1 290 1 135 1 381 1 
353 1 229 2 277 1 326 2 163 2 81 1 355 1 46 1 201 1 330 1 98 1 361 1 130 1 210 1 169 1 290 1 135 1 381 1 
163 2 46 2 98 1 299 1 169 2 229 2 353 1 277 1 326 4 81 1 30 2 329 1 201 1 330 1 61 1 361 1 130 1 210 2 288 1 135 1 290 1 381 2 
353 1 229 2 326 2 342 1 81 1 46 1 30 2 329 1 61 1 361 1 130 1 210 1 288 1 169 1 64 1 290 1 135 1 381 1 
353 1 229 2 277 1 326 2 163 2 81 1 355 1 46 1 201 1 330 1 361 1 130 1 210 1 169 1 64 1 290 1 135 1 381 1 
163 2 46 2 299 1 169 2 229 2 353 1 277 1 326 4 81 1 30 2 329 1 201 1 330 1 61 1 361 1 130 1 210 2 288 1 64 1 135 1 290 1 381 2 
163 2 46 2 299 1 169 2 229 2 353 1 277 1 326 4 81 1 30 2 329 1 201 1 330 1 61 1 361 1 130 1 210 2 288 1 135 1 290 1 381 2 
163 1 69 1 247 1 321 1 100 1 101 1 353 1 229 2 326 2 196 1 27 1 81 1 198 1 84 1 30 1 57 1 88 1 31 1 204 1 207 1 361 1 130 1 132 1 311 1 338 1 290 1 135 1 160 1 
163 1 69 1 47 1 247 1 321 1 100 1 101 1 353 1 229 2 326 2 196 1 27 1 81 1 198 1 30 1 57 1 31 1 204 1 359 1 207 1 361 1 130 1 260 1 311 1 338 1 290 1 135 1 160 1 
163 2 46 2 299 1 271 1 169 2 229 2 353 1 277 1 326 4 81 1 30 2 329 1 201 1 330 1 61 1 361 1 130 1 210 2 288 1 135 1 290 1 381 2 
163 2 46 2 69 1 321 1 299 1 100 1 101 1 169 2 277 1 353 1 229 2 326 4 196 1 27 1 81 1 198 1 84 1 30 2 201 1 329 1 88 1 204 1 330 1 61 1 207 1 361 1 130 1 210 2 132 1 335 1 178 1 288 1 311 1 338 1 290 1 135 1 381 2 
163 1 314 1 68 1 46 1 71 1 299 1 271 1 101 1 169 1 277 1 229 2 353 1 326 3 81 1 27 1 30 2 201 1 329 1 11 1 331 1 61 1 361 1 130 1 15 1 210 1 288 1 135 1 290 1 381 1 
291 2 163 10 138 1 44 2 315 1 299 3 324 1 325 1 169 6 274 2 195 1 229 4 353 2 277 3 326 19 81 2 375 1 30 9 329 3 201 3 59 1 330 3 206 1 61 3 130 2 288 3 38 1 179 1 213 1 135 2 
291 1 163 12 44 2 45 1 0 1 72 2 299 3 324 2 301 1 325 2 193 1 169 4 274 4 195 2 277 2 229 6 353 3 326 26 81 3 7 1 375 1 30 14 329 2 201 2 59 2 330 2 206 1 61 3 130 3 177 1 288 3 38 1 179 1 135 3 
94 1 291 1 163 21 138 1 45 1 44 4 315 1 140 1 0 1 72 1 299 4 22 1 324 3 301 1 325 1 193 1 169 8 274 4 195 3 229 6 353 3 277 5 326 41 81 3 7 1 108 1 375 1 30 20 329 4 201 4 59 2 330 4 206 1 61 4 130 3 261 1 177 1 287 1 288 5 38 1 339 1 179 1 135 3 
94 1 291 1 163 18 138 1 45 1 44 4 315 1 140 1 0 1 72 2 299 4 22 1 324 3 301 1 325 1 193 1 169 7 274 4 195 3 229 8 353 4 277 4 326 38 81 4 7 1 108 1 375 1 30 20 329 3 201 3 59 2 330 4 206 1 61 4 130 4 261 1 177 1 287 1 288 5 38 1 339 1 179 1 135 4 
291 1 163 25 138 2 45 1 44 4 140 1 0 1 72 1 299 7 22 1 324 4 301 1 325 1 193 1 169 14 125 2 274 4 195 2 229 4 353 2 277 8 326 52 81 2 7 1 108 1 375 1 30 27 329 7 201 7 59 1 330 7 206 1 61 7 130 2 261 1 177 1 287 1 288 8 38 1 339 1 179 1 135 2 
319 1 172 1 292 1 241 1 62 1 78 1 185 1 165 1 232 1 158 1 
191 1 221 1 
319 1 292 1 241 1 23 1 62 1 280 1 185 1 165 1 136 1 
54 1 305 1 172 1 120 1 241 1 292 1 121 1 185 1 165 1 232 1 189 1 319 1 190 1 62 1 78 1 116 1 40 1 214 2 
54 1 305 1 172 1 120 1 241 1 292 1 121 1 185 1 165 1 232 1 189 1 319 1 190 1 62 1 78 1 116 1 40 1 214 2 
54 1 305 1 172 1 120 1 241 1 292 1 121 1 185 1 165 1 232 1 189 1 319 1 190 1 62 1 78 1 116 1 40 1 214 2 
6 1 323 1 219 1 
6 1 323 1 219 1 
285 1 87 1 
285 1 6 1 87 1 
156 1 302 1 
238 1 95 1 292 1 241 1 121 1 314 2 68 2 185 1 165 1 221 1 71 2 189 1 319 1 190 1 191 1 101 2 302 1 254 1 54 1 276 1 27 2 308 1 57 1 205 1 156 1 62 1 214 1 
323 1 219 1 
285 1 6 1 87 1 
163 1 293 1 218 1 142 1 71 2 247 1 322 1 321 2 271 1 100 2 101 2 351 1 353 1 229 2 326 2 196 1 81 1 327 1 27 2 107 1 198 2 231 2 30 1 204 1 31 1 207 1 361 1 130 1 338 1 290 1 135 1 
93 1 196 1 139 2 43 1 198 2 343 1 267 1 74 1 20 1 144 1 321 2 102 1 100 2 178 1 289 1 338 1 380 1 92 1 161 1 
93 1 196 1 139 2 43 1 198 1 343 1 267 1 74 1 144 1 321 1 167 1 102 1 100 1 289 1 338 1 92 1 161 1 
263 1 196 1 198 1 141 1 267 1 204 1 207 1 321 1 131 1 100 1 338 1 236 1 380 1 160 1 
93 1 196 1 139 2 43 1 198 1 343 1 267 1 74 1 20 1 144 1 321 1 102 1 100 1 289 1 338 1 380 1 92 1 161 1 
187 1 
305 1 176 1 347 1 63 1 226 1 340 1 371 1 
305 1 182 1 200 1 223 1 371 1 21 1 37 1 365 1 347 1 337 1 237 1 
182 3 181 6 246 1 189 5 190 5 2 2 299 2 100 1 347 8 53 2 256 2 196 2 307 2 305 7 198 1 200 12 202 1 201 2 204 1 61 2 207 6 311 1 118 2 160 1 215 3 265 2 70 1 223 6 371 7 321 1 270 2 226 1 272 2 24 2 277 2 282 6 128 5 286 1 37 3 379 3 288 2 338 1 337 3 237 3 39 2 41 1 
181 4 182 2 44 1 45 1 0 1 223 3 371 3 189 1 190 1 299 1 324 1 301 1 347 5 193 1 272 1 226 1 195 1 277 1 305 4 7 1 200 6 201 1 282 4 128 1 61 1 37 2 379 1 288 1 337 2 180 1 237 2 
313 1 182 1 314 1 68 1 140 1 71 1 371 2 189 1 224 1 190 1 22 1 101 1 347 2 272 2 228 1 277 1 27 1 356 1 257 1 11 1 261 1 209 1 37 1 211 1 288 2 337 1 262 1 237 1 
182 1 305 1 371 1 176 1 37 1 63 1 347 1 337 1 237 1 226 1 
277 1 181 2 305 1 200 3 201 1 282 2 61 1 223 1 371 2 299 1 288 1 347 2 
189 1 190 1 305 1 379 1 226 1 128 1 
239 1 182 2 141 1 268 1 371 2 346 1 189 3 190 3 321 4 100 4 347 2 303 2 196 1 198 4 29 1 58 1 204 1 128 4 207 1 13 1 131 1 286 2 37 2 379 2 338 1 337 2 237 1 39 2 160 2 
163 1 314 2 68 2 69 1 71 2 247 1 321 1 100 1 101 3 229 2 353 1 326 1 27 3 196 1 81 1 198 1 84 1 85 1 57 1 88 1 204 1 11 2 207 1 361 1 130 1 209 1 132 1 338 1 311 1 135 1 290 1 160 1 
181 2 182 1 305 4 200 4 282 2 223 2 371 2 286 1 37 1 347 1 339 1 337 1 237 1 226 2 39 1 
292 1 62 1 104 1 
292 1 184 1 62 1 78 1 302 1 
292 1 62 1 104 1 
292 1 62 1 104 1 
42 1 292 1 62 1 
42 1 292 1 62 1 
42 1 292 1 62 1 
292 1 62 1 
241 1 185 1 
277 1 353 2 229 4 163 4 326 8 81 2 140 1 108 1 30 4 329 1 72 1 330 2 130 2 261 1 22 1 288 1 287 1 339 1 169 3 135 2 
277 1 163 3 326 6 108 1 140 1 30 3 330 2 261 1 22 1 287 1 288 1 339 1 169 2 340 1 
277 1 353 1 229 2 163 2 326 4 81 1 83 1 30 2 201 1 329 1 330 1 61 1 130 1 299 1 288 1 169 2 135 1 
277 1 163 4 326 7 138 1 44 2 30 3 201 1 329 1 330 1 61 1 299 1 324 1 288 1 169 2 195 1 
119 1 163 12 138 1 44 2 140 1 72 2 299 2 22 2 324 2 169 9 125 1 277 3 353 2 229 4 326 23 81 2 108 1 30 11 329 4 201 2 330 5 61 2 378 1 130 2 261 2 287 1 288 3 339 1 135 2 
326 1 163 1 44 1 
326 1 324 1 30 1 
229 2 353 1 277 1 163 3 326 6 81 1 265 1 83 1 30 3 329 1 201 1 330 2 61 1 130 1 299 1 288 1 169 3 135 1 
163 6 44 1 45 1 0 1 299 2 324 1 301 1 193 1 169 2 195 1 229 2 353 1 277 2 326 12 81 1 7 1 375 1 30 6 329 1 201 2 330 1 61 2 130 1 288 2 135 1 
277 1 326 6 163 3 140 1 30 3 329 1 330 1 261 1 22 1 288 1 169 2 
119 1 353 1 229 2 163 2 326 3 81 1 108 1 30 1 329 1 72 1 330 1 130 1 261 1 22 1 287 1 169 2 135 1 
229 2 353 1 277 2 326 10 163 5 81 1 356 1 375 1 140 1 30 5 329 2 330 3 130 1 261 2 22 2 288 2 169 5 135 1 
353 1 229 2 326 2 81 1 375 1 30 2 329 1 61 1 130 1 288 1 169 1 135 1 
277 1 353 1 229 2 163 2 326 4 81 1 375 1 30 2 201 1 329 1 330 1 61 1 130 1 299 1 288 1 169 2 135 1 
119 1 353 3 229 6 163 2 326 3 81 3 315 1 375 1 30 1 329 1 72 1 330 1 130 3 261 1 22 1 169 2 135 3 
119 1 163 18 138 1 44 4 315 1 140 2 217 1 317 1 72 2 299 3 22 3 324 3 169 12 252 1 195 1 229 10 353 5 277 5 326 34 81 5 83 1 108 1 375 1 30 16 329 5 201 3 330 7 61 3 130 5 261 3 287 1 288 5 339 1 135 5 
163 4 44 1 140 1 22 1 324 1 193 1 169 2 195 1 277 1 229 2 353 1 326 8 81 1 375 1 108 1 30 4 330 2 130 1 261 1 288 1 287 1 339 1 135 1 
163 5 138 1 44 2 140 1 299 1 22 1 324 1 193 1 169 3 195 1 277 1 229 4 353 2 326 11 81 2 83 1 108 1 375 1 30 6 329 1 330 2 61 1 130 2 261 1 287 1 288 2 339 1 135 2 
163 10 44 1 45 1 140 1 0 1 72 1 299 2 22 1 324 1 301 1 193 1 169 4 195 1 229 6 353 3 277 3 326 19 81 3 83 1 7 1 108 1 375 1 30 9 329 1 201 2 330 3 61 2 130 3 261 1 287 1 288 3 339 1 135 3 
163 7 44 1 45 1 140 1 0 1 72 1 299 2 22 1 324 1 301 1 193 1 169 5 195 1 229 6 353 3 277 2 326 17 81 3 83 1 7 1 108 1 375 1 30 10 329 2 201 1 330 3 61 2 130 3 261 1 287 1 288 3 339 1 135 3 
163 4 44 1 140 1 22 1 324 1 193 1 169 2 195 1 277 1 229 2 353 1 326 8 81 1 375 1 108 1 30 4 330 2 130 1 261 1 288 1 287 1 339 1 135 1 
163 6 44 1 45 1 0 1 299 2 324 1 301 1 193 1 169 2 195 1 229 2 353 1 277 2 326 12 81 1 7 1 375 1 30 6 329 1 201 2 330 1 61 2 130 1 288 2 135 1 
163 8 44 1 45 1 140 1 0 1 72 2 299 2 22 1 324 1 301 1 193 1 169 5 195 1 229 8 353 4 277 2 326 18 81 4 83 1 7 1 108 1 375 1 30 10 329 2 201 1 330 3 61 2 130 4 261 1 287 1 288 3 339 1 135 4 
163 7 44 1 45 1 315 1 0 1 72 2 299 3 324 1 301 1 193 1 169 6 195 1 229 8 353 4 277 2 326 16 81 4 7 1 375 1 30 9 329 3 201 2 330 3 61 3 130 4 288 3 135 4 
277 1 163 4 326 7 108 1 140 1 30 3 329 3 330 3 261 3 22 3 287 2 288 1 169 6 
163 8 44 1 45 1 315 1 140 1 0 1 72 2 299 2 22 1 324 1 301 1 193 1 169 4 195 1 229 8 353 4 277 2 326 18 81 4 7 1 108 1 375 1 30 10 329 1 201 1 330 3 61 2 130 4 261 1 287 1 288 3 339 1 135 4 
313 1 27 1 197 1 57 1 71 1 124 1 362 1 101 1 4 1 
313 1 27 1 197 1 57 1 203 1 222 1 71 1 124 1 362 1 320 1 101 1 234 1 4 1 5 1 
196 1 321 1 131 1 198 1 100 1 141 1 338 1 204 1 340 1 207 1 160 1 
196 1 27 2 230 1 314 1 198 1 68 1 69 1 84 1 57 1 204 1 71 1 207 1 321 1 101 2 100 1 311 1 338 1 160 1 
303 1 313 1 196 1 27 2 279 1 230 1 314 2 198 1 68 1 69 1 84 1 57 1 204 2 71 2 360 1 207 3 321 1 101 2 100 1 212 1 311 2 338 1 253 1 
313 1 314 2 68 1 47 1 69 1 71 2 321 2 100 2 101 2 253 1 303 1 27 2 196 1 279 1 198 2 230 1 57 1 204 2 360 1 207 3 175 1 338 1 311 2 212 1 
215 1 183 1 243 1 189 2 190 2 321 3 270 1 100 3 226 1 253 1 303 1 307 1 196 1 305 1 279 1 198 3 204 1 128 1 207 4 175 1 338 1 311 1 160 1 
303 1 256 1 215 1 305 1 196 1 307 1 279 1 198 3 204 1 128 1 207 4 189 2 175 1 190 2 270 1 321 3 100 3 311 1 338 1 226 1 253 1 160 1 
196 1 321 1 198 1 100 1 216 1 338 1 
293 1 216 1 50 1 246 1 321 5 100 6 102 1 348 1 196 3 198 6 231 1 86 1 204 2 207 3 259 1 36 1 338 2 311 1 162 1 160 2 
46 1 140 1 100 1 101 2 353 2 105 1 196 1 198 1 108 1 57 2 204 1 207 1 361 2 261 1 210 1 311 1 163 3 314 1 68 1 69 1 71 1 321 1 322 1 22 1 271 1 169 2 229 4 277 1 326 6 27 2 81 2 230 1 84 1 30 3 88 1 330 2 130 2 132 1 335 1 178 1 287 1 288 1 338 1 339 1 135 2 290 2 381 1 
215 1 182 2 371 1 268 1 189 3 190 3 321 1 2 1 270 1 100 1 347 1 226 1 53 1 276 1 256 1 305 1 307 1 198 1 128 2 207 2 176 1 37 2 379 1 63 1 337 2 237 2 118 1 160 1 
307 1 196 2 198 2 216 1 70 1 204 1 207 2 246 1 321 2 178 1 100 2 311 1 338 1 
196 1 198 4 141 1 204 1 332 1 207 1 175 1 321 4 131 1 100 4 178 1 338 1 160 1 
303 1 196 2 198 2 204 1 376 1 49 1 207 1 321 2 36 1 100 2 311 1 338 1 170 1 162 1 
144 1 196 1 321 1 139 1 198 1 100 1 338 1 74 1 161 1 160 1 
196 1 321 2 293 1 107 1 198 2 102 1 100 2 178 1 338 1 204 1 207 1 
303 1 196 2 293 1 198 5 141 1 204 2 332 1 50 1 207 3 259 1 321 4 131 1 100 5 178 1 338 2 160 1 
303 1 196 2 293 1 198 5 141 1 204 2 143 1 332 1 207 3 259 1 321 4 131 1 100 5 178 1 338 2 160 1 
196 1 27 2 230 1 314 1 198 1 68 1 69 1 47 1 57 1 204 1 71 1 207 1 321 1 101 2 100 1 311 1 338 1 160 1 
303 1 196 2 198 1 86 1 204 1 207 1 246 1 321 1 36 1 100 1 311 1 338 1 162 1 
327 1 27 1 67 1 218 1 142 1 32 1 71 1 188 1 101 1 
67 1 56 1 281 1 
18 1 67 1 57 1 32 1 188 1 
276 1 305 1 313 1 18 2 67 1 56 1 57 1 151 1 281 1 32 2 360 1 188 2 189 2 190 2 270 1 129 1 192 1 212 1 226 1 
66 1 17 1 133 1 340 1 
66 1 17 1 145 1 133 1 77 1 134 1 173 1 
294 1 173 1 297 1 
66 1 17 1 318 1 173 3 258 1 309 2 334 1 145 1 77 1 133 1 134 3 79 1 
149 1 66 1 17 1 145 1 133 1 77 1 134 2 173 2 235 1 
93 1 144 1 66 1 139 1 145 1 77 1 134 1 168 1 173 1 258 1 25 1 
66 1 145 1 133 1 77 1 134 1 173 1 258 1 
17 1 145 1 133 2 77 1 134 1 173 1 258 1 
66 1 173 2 258 1 153 1 145 2 250 1 133 1 77 2 233 1 134 2 
17 1 66 2 173 3 258 1 245 1 99 1 145 1 133 1 77 1 134 3 148 1 235 2 25 1 
93 1 66 1 17 1 139 2 55 1 173 2 258 1 74 1 144 1 145 1 133 1 77 1 134 2 235 1 92 1 
149 1 17 1 66 2 173 4 258 1 1 1 245 1 145 2 133 1 77 2 134 4 235 2 25 1 
66 1 17 1 145 1 133 1 77 1 134 1 173 1 258 1 
17 2 66 3 173 4 245 1 309 1 334 1 145 1 133 2 77 1 134 4 235 2 79 1 227 1 25 1 
66 1 17 1 296 1 173 2 258 1 19 1 244 1 145 1 133 1 77 1 134 2 235 1 
66 1 17 1 173 3 258 1 309 2 334 2 145 1 77 1 133 1 134 3 225 1 79 1 
66 2 345 1 114 1 152 2 
145 1 122 1 77 1 134 1 173 1 258 1 
66 1 17 1 99 1 145 1 133 1 77 1 134 2 173 2 235 1 258 1 
275 1 
66 1 17 1 145 1 133 1 77 1 134 1 173 1 258 1 
17 1 66 1 173 3 258 1 309 1 99 1 145 1 77 1 133 1 134 3 235 1 
66 1 227 1 245 1 25 1 
66 1 133 1 

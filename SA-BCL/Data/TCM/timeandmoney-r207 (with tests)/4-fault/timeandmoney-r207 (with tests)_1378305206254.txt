#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (66,302,350) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (66,302,350) 358 225 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (66,302,350) 358 219 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 343 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (66,302,350) (66,302,350) 39 82 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (66,302,350) 358 255 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 133 1 340 2 51 5 250 1 113 1 228 1 95 2 139 1 254 1 96 9 38 2 233 1 41 9 164 3 258 1 333 2 305 4 86 1 48 2 260 6 88 2 89 1 356 1 215 1 240 1 264 1 90 2 
152 1 133 1 340 2 51 5 250 1 113 1 228 1 95 2 139 1 254 1 96 9 38 2 233 1 41 9 164 3 258 1 333 2 305 4 86 1 48 2 260 6 88 2 89 1 356 1 215 1 240 1 264 1 90 2 
152 1 133 1 340 2 51 6 250 1 113 1 228 1 95 2 139 1 254 1 96 10 38 2 233 1 41 10 164 4 258 1 333 2 305 5 86 1 48 2 260 7 88 2 89 1 356 1 215 1 240 1 264 1 90 2 
152 1 133 1 340 2 51 4 250 1 113 1 228 1 95 2 139 1 254 1 96 7 38 1 233 1 41 7 164 2 258 1 333 2 305 3 48 2 260 4 88 2 89 1 356 1 215 1 240 1 264 1 90 2 
164 1 41 4 340 1 51 3 333 1 305 2 86 1 48 1 260 3 88 1 95 1 254 1 139 1 96 4 215 1 38 2 264 1 233 1 
41 2 51 1 333 1 344 1 48 1 88 1 228 1 89 1 95 1 96 2 215 1 191 1 264 1 90 1 266 1 233 1 
41 3 164 1 51 2 258 1 305 1 48 2 260 1 88 2 96 3 215 1 264 1 90 1 233 1 
152 1 340 1 51 5 250 1 95 1 254 1 139 1 96 9 38 2 233 1 164 3 41 9 351 1 258 1 333 1 305 4 86 1 48 2 308 1 260 7 88 2 215 1 264 1 90 1 
152 1 340 1 51 5 250 1 95 1 254 1 139 1 96 9 38 2 233 1 164 3 41 9 351 1 258 1 333 1 305 4 86 1 48 2 308 1 260 7 88 2 215 1 264 1 90 1 
287 1 207 1 360 1 
2 1 207 1 118 2 
119 2 87 1 262 2 5 2 220 2 144 1 227 2 247 2 
244 1 32 1 319 1 172 1 135 1 92 1 294 1 5 3 137 1 299 1 227 2 247 2 345 2 112 2 325 1 57 1 275 1 61 1 64 1 276 1 119 2 328 1 278 1 280 1 144 1 124 1 335 2 353 1 125 2 87 1 212 2 190 1 262 3 217 1 220 2 149 1 290 1 
119 1 117 1 262 1 326 1 5 1 220 1 144 1 159 1 227 1 247 1 
157 1 66 1 262 1 5 1 247 1 302 1 
119 1 262 1 5 1 220 1 227 1 247 1 302 1 
350 1 130 1 211 1 7 1 222 1 
53 1 309 1 350 2 130 1 211 1 222 2 207 1 360 1 
350 1 130 1 222 1 
318 1 119 1 350 1 211 1 144 1 5 1 227 1 247 1 117 1 262 1 326 1 220 1 159 1 222 1 
207 1 
53 1 110 1 350 2 130 1 211 1 222 2 207 1 360 1 
196 1 185 1 350 5 174 1 226 1 211 2 147 1 167 1 337 2 336 1 53 1 10 2 130 2 289 1 222 5 256 2 207 1 360 1 151 1 
244 1 119 1 30 1 92 1 278 1 279 1 5 2 137 1 124 1 227 1 247 1 345 1 112 1 125 1 262 2 13 1 275 1 61 1 64 1 276 1 
87 1 287 1 
119 1 304 1 5 2 227 1 247 2 9 1 87 2 262 2 220 1 
273 1 279 1 99 1 
244 1 278 1 92 1 5 1 52 1 137 1 124 1 345 1 112 1 125 1 87 1 262 1 275 1 61 1 64 1 276 1 
119 4 30 1 330 1 171 1 5 5 227 4 342 1 247 5 9 1 87 1 157 1 262 5 13 2 220 1 
119 2 117 1 262 2 326 1 5 2 141 1 227 2 247 2 
119 3 87 1 262 3 13 1 220 1 5 3 227 3 247 3 
119 1 117 1 262 1 326 1 5 1 227 1 247 1 
119 1 9 1 304 1 262 1 326 1 5 1 220 1 227 1 247 1 
9 1 119 2 30 1 225 1 262 2 358 1 13 1 220 1 5 2 227 2 247 2 302 1 
119 1 87 1 157 1 330 1 262 2 13 1 5 2 227 1 247 2 
119 1 30 1 262 1 358 1 13 1 219 1 5 1 227 1 247 1 302 1 
119 2 279 1 5 2 227 2 247 2 9 1 273 1 262 2 13 1 220 1 
244 1 278 1 92 1 5 1 137 1 124 1 345 1 112 1 125 1 87 1 262 1 275 1 61 1 276 1 64 1 
244 1 28 1 278 1 92 1 5 1 124 1 345 1 112 1 125 1 87 1 106 1 262 1 275 1 276 1 64 1 
134 1 32 2 319 1 294 1 155 1 299 1 8 1 273 2 37 1 57 1 162 1 163 1 99 2 328 2 332 1 279 2 146 1 284 1 285 1 335 4 212 2 128 1 217 1 290 1 
119 1 107 1 262 1 326 1 5 1 227 1 141 1 247 1 
165 1 81 1 
165 1 81 1 
114 1 209 1 
114 1 209 1 
114 1 209 1 
76 1 165 1 81 1 
76 1 165 1 81 1 
165 1 81 1 281 1 
132 1 114 1 209 1 165 2 24 1 81 2 
76 1 165 1 81 1 
165 1 81 1 349 1 
165 1 81 1 349 1 
165 1 81 1 349 1 
291 1 223 1 154 1 5 2 227 2 247 2 94 1 175 1 202 1 205 1 81 1 229 1 40 1 119 2 327 1 350 1 165 1 281 1 87 1 214 1 262 2 239 1 169 1 222 1 
132 1 327 2 223 2 291 3 120 2 42 1 350 2 165 2 126 1 202 2 71 1 115 1 127 1 214 1 239 2 81 2 91 1 222 2 207 1 
95 1 340 1 333 1 
95 1 333 1 344 1 
340 2 153 1 263 1 333 3 359 1 344 1 
29 1 340 1 263 1 333 2 359 1 344 1 
340 1 263 1 333 2 359 2 344 1 
131 1 2 1 155 1 246 1 8 1 80 1 175 1 53 1 10 1 12 1 229 1 162 1 256 1 58 2 163 1 60 2 207 2 118 3 40 1 185 2 350 5 211 4 145 1 147 3 337 1 148 1 311 2 23 1 130 1 289 1 222 5 360 1 
318 1 5 1 7 1 227 1 247 1 203 1 204 1 117 1 326 1 159 1 207 1 119 1 350 2 211 2 144 1 262 1 130 1 220 1 108 1 222 2 360 1 
131 1 196 1 2 2 155 1 246 1 8 1 80 1 10 1 162 1 256 1 58 1 163 1 207 3 60 2 40 1 118 4 350 3 185 2 211 2 145 1 147 3 337 1 148 1 311 2 222 3 360 1 
131 2 196 1 2 3 3 1 155 2 246 1 8 2 80 1 303 1 10 1 140 1 162 2 256 1 58 2 163 2 207 4 60 4 118 7 40 2 350 4 185 4 211 3 145 1 147 5 337 1 148 1 311 4 222 4 360 1 
287 1 35 1 64 1 
206 1 64 1 
78 1 
124 1 64 1 276 1 
173 1 64 1 
64 1 276 1 
50 1 35 2 124 1 64 3 276 1 63 1 
16 1 328 3 32 4 268 1 321 1 6 1 146 3 335 7 8 1 69 2 36 1 354 1 128 2 177 1 98 1 193 1 163 1 
16 1 328 3 32 4 268 1 321 1 6 1 146 3 335 7 8 1 69 2 36 1 354 1 128 2 177 1 98 1 193 1 163 1 
16 1 328 3 32 4 268 1 321 1 6 1 146 3 335 7 8 1 69 2 36 1 354 1 128 2 54 1 177 1 98 1 193 1 163 1 
131 3 142 4 328 10 329 1 32 10 155 3 146 4 6 3 324 1 335 20 343 1 47 3 8 3 271 1 69 1 188 1 128 1 129 1 231 1 98 1 162 3 193 2 163 3 
319 1 32 6 268 1 321 1 299 1 6 2 8 2 36 1 98 1 163 2 16 1 257 1 328 5 329 1 122 1 283 1 146 5 335 11 69 1 212 2 354 1 128 3 217 1 290 1 193 1 
340 1 153 1 51 1 269 1 92 1 93 1 344 1 112 1 345 1 95 1 176 1 96 2 230 1 161 1 275 1 233 1 41 2 186 1 333 2 104 1 46 1 125 1 48 1 260 1 88 1 72 1 215 1 314 1 264 1 90 1 
340 1 153 1 51 1 269 1 92 1 344 1 112 1 345 1 253 1 95 1 176 1 96 3 161 1 275 1 41 3 18 1 186 1 333 2 104 1 46 1 125 1 48 1 260 2 88 1 72 1 215 1 314 1 264 1 221 1 90 1 
153 1 340 1 51 1 269 1 92 1 344 1 112 1 345 1 253 1 95 1 176 1 96 2 161 1 275 1 41 2 186 1 333 2 46 1 125 1 260 2 72 1 215 1 264 1 90 1 221 1 
41 1 77 1 18 1 320 1 92 1 278 1 269 2 103 1 352 1 48 1 345 1 112 1 125 1 237 1 88 1 176 2 96 1 90 2 161 2 275 1 64 1 276 1 181 1 
340 1 153 1 269 1 92 1 344 1 112 1 345 1 95 1 176 1 96 1 230 1 161 1 275 1 233 1 41 1 186 1 333 2 104 1 46 1 125 1 48 1 88 1 72 1 314 1 221 1 90 1 
116 1 
320 1 92 1 322 1 5 1 199 1 79 1 247 1 302 1 112 2 345 2 157 1 53 1 10 1 39 1 82 1 275 1 256 1 64 1 276 1 66 1 350 2 185 1 278 2 145 1 147 1 125 2 337 1 237 1 313 1 262 1 130 2 289 1 222 2 317 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
110 1 66 1 350 2 5 1 199 1 247 1 302 1 53 1 157 1 313 1 262 1 130 1 82 1 39 1 222 2 
66 1 350 1 5 1 199 1 247 1 302 1 337 1 157 1 10 1 313 1 262 1 289 1 82 1 39 1 222 1 256 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
157 1 66 1 350 1 313 1 262 1 5 1 39 1 82 1 199 1 222 1 247 1 302 1 
66 1 350 1 5 1 199 1 247 1 302 1 337 1 157 1 10 1 313 1 262 1 289 1 82 1 39 1 222 1 256 1 
16 1 328 3 134 1 32 3 319 1 268 1 321 1 279 1 294 1 146 2 299 1 335 6 8 1 69 1 87 2 36 1 212 2 354 1 273 1 128 2 287 1 57 1 217 1 290 1 163 1 99 1 
131 2 319 2 32 8 197 1 294 2 155 2 324 1 6 1 299 2 8 1 252 1 273 4 57 1 162 1 163 2 99 11 234 1 328 6 142 3 280 1 279 11 19 1 146 2 335 14 47 3 105 1 188 1 87 1 212 4 128 1 217 2 149 1 290 2 
244 1 30 1 224 1 319 1 32 1 92 1 52 1 294 1 5 2 137 1 299 1 227 1 247 1 112 1 345 1 273 1 57 1 13 1 275 1 61 1 64 1 276 1 119 1 182 1 328 1 278 1 280 1 19 1 124 1 335 2 125 1 87 1 212 2 73 1 262 2 217 1 290 1 149 1 
131 2 319 3 268 1 321 1 92 2 5 3 137 2 6 4 227 1 8 3 273 7 13 1 57 3 275 2 61 2 99 7 276 2 64 2 16 1 328 10 278 1 280 1 279 7 19 1 146 8 335 20 69 1 70 2 190 2 149 1 290 3 195 2 244 2 30 1 32 10 341 1 294 3 155 2 299 3 247 1 112 3 345 3 36 1 158 2 162 2 163 3 119 1 124 2 125 3 87 2 212 6 310 1 354 1 357 1 128 4 262 3 216 2 217 3 221 1 
245 1 134 1 319 2 32 1 172 2 320 1 92 2 5 1 294 2 93 1 299 2 227 1 247 1 112 8 345 7 13 1 57 2 275 2 64 3 276 2 119 1 83 1 328 1 183 1 278 2 280 1 335 2 125 8 237 1 212 4 22 1 262 1 218 1 217 2 221 1 49 1 290 2 149 1 75 1 
131 1 0 1 319 1 32 1 294 1 5 1 155 1 299 1 227 1 247 1 8 1 9 1 273 1 57 1 162 1 163 1 99 1 119 1 328 2 279 1 19 1 146 1 335 3 212 2 128 1 262 1 220 1 217 1 290 1 
134 1 319 1 32 2 279 1 294 1 155 1 146 1 6 1 299 1 335 2 212 2 273 1 37 1 57 1 217 1 290 1 163 1 99 1 
328 2 134 1 319 1 279 1 294 1 146 1 299 1 285 1 335 2 8 1 212 2 273 1 128 1 57 1 217 1 290 1 162 1 99 1 
131 1 134 1 32 2 319 1 155 1 294 1 299 1 6 1 8 1 273 2 57 1 162 1 163 1 99 2 328 2 279 2 146 2 335 4 212 2 128 1 217 1 290 1 
319 1 32 2 279 1 294 1 155 1 146 1 6 1 299 1 335 2 212 2 22 1 273 1 37 1 57 1 217 1 290 1 163 1 99 1 
328 2 319 1 279 1 294 1 146 1 299 1 285 1 335 2 8 1 212 2 22 1 273 1 128 1 57 1 217 1 290 1 162 1 99 1 
131 1 32 2 319 1 155 1 294 1 299 1 6 1 8 1 273 2 57 1 162 1 163 1 99 2 328 2 279 2 146 2 335 4 212 2 22 1 128 1 217 1 290 1 
131 1 328 2 319 1 32 2 279 2 294 1 155 1 146 2 6 1 299 1 335 4 8 1 212 2 273 2 128 1 57 1 217 1 162 1 290 1 163 1 99 2 
244 1 32 1 319 1 92 1 5 1 294 1 137 1 299 1 112 1 345 1 57 1 275 1 61 1 276 1 64 1 328 1 278 1 280 1 124 1 335 2 125 1 87 1 212 2 190 1 262 1 217 1 149 1 290 1 
244 1 28 1 32 1 319 1 92 1 5 1 294 1 299 1 112 1 345 1 57 1 178 1 275 1 276 1 64 1 328 1 278 1 280 1 124 1 335 2 125 1 87 1 106 1 212 2 262 1 217 1 149 1 290 1 
131 1 32 2 319 1 155 1 294 1 299 1 6 1 8 1 273 2 57 1 162 1 163 1 99 2 328 2 279 2 19 1 146 2 335 4 212 2 128 1 217 1 290 1 
244 1 131 1 32 2 319 1 92 1 155 1 5 1 294 1 137 1 6 1 93 1 299 1 8 1 112 1 345 1 273 2 57 1 162 1 275 1 163 1 99 2 61 1 276 1 64 1 328 2 279 2 146 2 124 1 335 4 125 1 70 1 212 2 190 1 128 1 262 1 217 1 290 1 
131 1 319 1 32 2 294 1 5 1 155 1 6 1 299 1 227 1 138 1 247 1 8 1 9 1 273 1 57 1 162 1 163 1 99 1 119 1 328 1 279 1 19 1 146 1 335 3 212 2 262 1 220 1 217 1 290 1 
131 2 319 2 32 6 155 2 324 1 299 2 6 1 301 1 8 2 162 2 163 2 62 1 142 2 257 1 328 7 210 1 43 1 282 1 146 2 335 13 47 1 188 1 212 4 213 1 128 1 217 2 27 1 290 2 74 1 
131 2 319 2 32 6 155 2 324 1 299 2 6 1 301 1 8 2 162 2 163 2 62 1 142 2 257 1 328 7 210 1 43 1 282 1 146 2 335 13 47 1 188 1 212 4 213 1 128 1 217 2 27 1 290 2 74 1 
131 7 31 1 319 1 32 25 268 1 293 1 321 1 155 7 324 2 299 1 6 7 8 8 36 1 162 7 163 8 100 1 180 1 62 1 16 1 142 4 257 1 328 23 65 1 329 1 210 1 43 1 282 1 259 1 146 13 335 48 47 4 69 1 105 2 188 2 212 2 213 1 354 1 128 6 217 1 27 1 290 1 74 2 
131 2 319 2 32 6 4 1 155 2 324 1 299 2 6 1 301 1 8 2 162 2 163 2 62 1 142 2 257 1 328 7 210 1 43 1 282 1 146 3 335 13 47 1 188 1 212 4 213 1 128 2 217 2 290 2 74 1 
131 2 31 1 319 1 32 10 293 1 155 2 6 1 299 1 324 2 8 1 162 1 163 2 100 1 62 1 180 1 328 8 257 1 142 2 65 1 329 2 210 2 43 1 282 2 259 1 146 2 335 18 47 2 212 2 213 1 128 1 217 1 27 1 290 1 74 2 
132 1 327 1 223 1 202 1 127 1 261 1 165 1 81 1 239 1 91 1 
281 1 94 1 
327 1 223 1 202 1 44 1 56 1 165 1 81 1 239 1 348 1 
76 1 315 1 
24 1 15 1 349 1 
132 1 327 1 223 1 291 2 120 1 350 1 165 1 126 1 202 1 71 1 115 1 127 1 214 1 239 1 81 1 91 1 222 1 207 1 
132 1 327 1 223 1 291 2 120 1 350 1 165 1 126 1 202 1 71 1 115 1 127 1 214 1 239 1 81 1 91 1 222 1 207 1 
132 1 327 1 223 1 291 2 120 1 350 1 165 1 126 1 202 1 71 1 115 1 127 1 214 1 239 1 81 1 91 1 222 1 207 1 
76 1 24 1 315 1 
76 1 24 1 315 1 
15 1 349 1 
24 1 15 1 349 1 
205 1 169 1 
223 1 291 1 154 1 5 2 34 1 227 2 247 2 94 1 175 1 202 1 115 1 205 1 81 1 229 1 40 1 327 1 119 2 120 1 350 1 165 1 211 1 281 1 87 1 262 2 239 1 169 1 222 1 
245 1 319 1 32 1 172 2 92 1 136 1 294 1 296 1 5 2 299 1 247 2 112 2 345 2 57 1 14 1 275 1 64 1 276 1 83 1 328 1 85 1 280 1 19 1 335 2 125 2 68 1 212 2 262 2 217 1 290 1 149 1 
339 1 184 1 340 1 153 1 92 1 186 1 333 2 93 1 307 1 46 1 344 1 345 2 112 2 125 2 95 1 314 1 221 1 161 1 275 1 
184 1 340 1 153 1 186 1 92 1 333 2 323 1 46 1 344 1 345 1 112 1 125 1 95 1 314 1 221 1 161 1 275 1 
339 1 320 1 92 1 278 1 103 1 345 1 112 1 125 1 237 1 161 1 265 1 275 1 64 1 276 1 
339 1 184 1 340 1 153 1 186 1 92 1 333 2 307 1 46 1 344 1 345 1 112 1 125 1 95 1 314 1 221 1 161 1 275 1 
11 1 
185 1 287 1 147 1 207 1 360 1 167 1 151 1 
2 1 350 1 185 1 295 1 147 1 337 1 156 1 53 1 10 1 130 1 192 1 289 1 222 1 256 1 360 1 207 2 118 1 
131 2 2 6 173 2 92 3 93 1 8 2 272 1 53 3 10 4 275 4 59 2 60 6 64 10 276 3 63 1 17 1 101 2 185 8 277 1 331 2 278 1 145 2 147 9 337 4 289 4 26 2 151 1 111 1 155 2 297 1 35 2 79 1 300 2 201 2 345 3 112 3 206 3 158 2 347 2 162 2 256 4 163 2 207 8 118 12 350 5 306 2 124 3 167 1 125 3 311 6 130 5 170 2 222 5 360 2 
131 2 31 1 1 1 2 3 293 1 155 2 324 1 79 1 8 2 53 1 10 2 162 2 256 2 232 1 163 2 60 5 180 1 207 5 118 6 142 1 65 1 350 1 185 5 145 1 259 1 147 8 47 1 337 2 311 5 130 1 289 2 26 1 170 2 222 1 360 2 
318 1 268 1 5 1 227 1 247 1 8 1 36 1 10 1 117 1 326 1 159 1 256 1 163 2 119 1 350 1 185 2 144 1 283 1 147 2 337 1 354 1 355 1 262 1 289 1 220 1 26 1 170 2 222 1 
185 1 147 1 337 1 167 1 10 1 289 1 256 1 360 1 207 1 151 1 
131 2 2 5 185 5 155 2 147 5 8 2 311 5 158 1 26 1 170 2 162 2 163 2 60 5 207 5 118 10 
53 1 350 1 130 1 222 1 207 1 360 1 
196 1 320 1 92 1 322 1 298 1 297 2 79 2 248 1 112 4 345 4 53 2 10 2 275 1 256 2 64 1 276 1 185 2 350 3 277 1 278 2 145 2 147 2 337 2 125 4 237 1 130 4 289 1 222 3 317 1 
244 1 319 1 92 1 5 3 294 1 137 1 299 1 227 2 247 2 112 1 345 1 325 1 57 1 275 1 61 1 276 1 64 1 119 2 328 1 278 1 280 1 144 1 124 1 335 1 125 1 87 1 212 2 190 1 262 3 220 2 217 1 290 1 
2 2 185 2 145 1 79 1 147 1 337 1 69 1 10 1 311 2 289 1 256 1 60 2 360 2 207 4 118 4 
327 1 223 1 189 1 
327 1 223 1 189 1 
327 1 223 1 97 1 169 1 91 1 
327 1 223 1 189 1 
327 1 223 1 238 1 
327 1 223 1 238 1 
327 1 223 1 238 1 
327 1 223 1 
165 1 81 1 
16 1 257 1 142 1 328 4 32 4 319 1 268 1 321 1 146 2 299 1 324 1 335 8 47 1 8 1 69 1 36 1 212 2 354 1 128 2 217 1 290 1 163 1 180 1 
131 1 319 2 32 6 268 1 321 1 33 1 155 1 324 1 299 2 6 1 8 1 36 1 163 2 180 1 16 1 328 5 142 2 257 1 146 3 335 11 47 1 69 1 188 1 212 4 354 1 128 2 217 2 290 2 
131 2 31 1 319 2 32 6 293 1 33 1 155 2 6 1 324 1 299 2 8 2 162 2 163 2 180 1 328 7 142 1 257 1 65 1 329 1 259 1 146 2 47 1 335 13 212 4 128 1 217 2 290 2 
131 2 31 1 319 2 32 7 293 1 33 1 155 2 6 1 324 1 299 2 8 1 162 1 163 2 180 1 328 4 142 1 257 1 65 1 329 1 146 2 259 1 47 1 335 11 212 4 128 1 217 2 290 2 
16 1 257 1 142 1 328 4 32 4 319 1 268 1 321 1 146 2 299 1 324 1 335 8 47 1 8 1 69 1 36 1 212 2 354 1 128 2 217 1 290 1 163 1 180 1 
131 2 31 1 319 1 32 6 293 1 155 2 6 1 324 1 299 1 8 2 162 2 163 2 180 1 328 6 142 1 257 1 65 1 146 2 259 1 47 1 335 12 212 2 128 1 217 1 290 1 
131 2 31 1 319 2 32 7 293 1 33 1 155 2 6 1 324 1 299 2 8 1 162 1 163 2 180 1 328 5 142 1 257 1 65 1 329 2 259 1 146 2 335 12 47 1 212 4 128 1 217 2 290 2 
131 2 31 1 319 2 32 7 293 1 155 2 6 2 324 1 299 2 301 1 8 1 162 1 163 2 180 1 328 5 142 1 257 1 65 1 329 2 259 1 146 4 335 12 47 1 212 4 128 2 217 2 290 2 
16 2 328 4 32 3 268 1 321 1 146 6 6 3 335 7 8 1 36 3 354 3 128 3 163 1 
131 2 31 1 319 2 32 7 293 1 155 2 6 1 324 1 299 2 301 1 8 1 162 1 163 2 180 1 328 5 142 1 257 1 65 1 329 2 259 1 146 2 335 12 47 1 212 4 128 1 217 2 290 2 
319 1 32 5 268 1 321 1 299 1 6 2 8 2 36 1 163 2 16 1 328 5 329 1 283 1 146 4 335 10 212 2 354 1 128 2 217 1 290 1 
16 1 328 3 32 3 268 1 321 1 146 2 335 6 8 1 69 1 36 1 354 1 287 1 128 2 163 1 
131 1 328 2 319 1 32 2 33 1 155 1 146 2 299 1 6 1 335 4 8 1 212 2 128 1 217 1 162 1 290 1 163 1 
131 1 142 2 328 4 32 3 155 1 324 1 6 1 146 2 335 7 47 1 8 1 188 1 128 1 162 1 163 1 
131 2 32 10 268 1 321 1 155 2 6 2 8 4 36 1 252 1 162 2 163 4 16 1 328 10 142 2 329 1 283 1 146 5 47 2 335 20 188 1 105 1 354 1 128 3 
328 1 142 1 335 1 
32 1 335 1 47 1 
131 1 328 3 319 1 32 3 33 1 155 1 299 1 6 1 146 3 335 6 8 1 212 2 128 2 158 1 217 1 290 1 162 1 163 1 
131 2 31 1 319 1 32 6 293 1 155 2 6 1 324 1 299 1 8 2 162 2 163 2 180 1 328 6 142 1 257 1 65 1 146 2 259 1 47 1 335 12 212 2 128 1 217 1 290 1 
328 3 32 3 268 1 146 2 6 1 335 6 8 1 36 1 354 1 128 1 163 1 
328 1 329 1 121 1 335 1 
257 1 328 5 319 1 32 5 268 1 283 1 299 1 146 5 6 2 335 10 8 2 212 2 36 2 354 2 128 3 217 1 290 1 163 2 
257 1 319 1 32 2 155 1 299 1 6 1 146 1 335 2 212 2 217 1 290 1 163 1 
131 1 328 2 257 1 319 1 32 2 155 1 146 2 299 1 6 1 335 4 8 1 212 2 128 1 217 1 162 1 290 1 163 1 
328 2 257 1 329 1 121 1 319 2 32 1 299 2 146 2 6 1 301 1 335 3 212 4 36 1 354 1 128 1 217 2 290 2 
131 2 319 3 32 12 268 1 321 1 33 1 155 2 324 1 299 3 6 3 301 1 271 1 8 4 36 1 231 1 162 2 163 4 16 1 328 12 142 3 257 1 329 1 283 1 146 6 335 24 47 3 212 6 354 1 128 3 129 1 217 3 290 3 
87 1 292 1 157 1 330 1 262 1 5 1 247 1 
208 1 292 1 330 1 5 1 20 1 247 1 87 1 157 1 55 1 262 1 160 1 346 1 
237 1 320 1 287 1 92 1 278 1 275 1 64 1 276 1 125 1 112 1 345 1 
244 1 119 1 278 1 92 1 5 2 137 1 124 1 227 1 247 1 345 1 112 1 125 1 87 1 262 2 13 1 275 1 64 1 276 1 
244 1 119 2 173 1 92 1 5 2 297 1 137 1 124 2 227 1 201 1 247 2 21 1 345 1 112 1 125 1 87 1 107 1 262 2 13 1 326 1 275 1 64 3 276 2 
244 1 28 1 173 1 92 1 5 2 297 1 227 1 247 2 201 1 112 2 345 2 13 1 326 1 275 1 276 2 64 3 119 2 124 2 236 1 125 2 21 1 87 1 107 1 262 2 
350 2 173 1 278 1 92 1 297 1 124 1 35 1 236 1 201 1 345 3 112 3 125 3 168 1 206 1 130 1 179 1 59 1 275 1 222 2 207 1 360 1 276 1 64 4 
350 2 173 1 331 1 278 1 92 1 297 1 124 1 35 1 236 1 201 1 345 3 112 3 125 3 206 1 130 1 59 1 275 1 222 2 207 1 360 1 276 1 64 4 
183 1 92 1 275 1 125 1 112 1 345 1 
245 1 183 1 172 1 123 1 278 2 92 2 93 1 334 1 124 1 345 6 112 7 125 7 312 1 218 1 221 1 49 1 275 3 75 1 63 1 276 2 64 3 
244 1 32 3 319 2 268 1 321 1 92 1 294 2 5 2 137 1 299 2 93 1 227 1 247 1 8 1 345 1 112 1 36 1 273 1 57 2 13 1 275 1 163 1 99 1 61 1 64 1 276 1 16 1 119 1 328 3 279 1 85 1 19 1 146 2 124 1 335 6 125 1 69 1 87 2 212 4 70 1 354 1 190 1 128 2 262 2 217 2 290 2 195 1 
35 1 300 1 112 1 345 1 53 1 10 2 206 1 256 2 59 1 207 1 64 2 185 1 350 3 101 1 277 1 331 1 278 1 211 1 306 1 147 1 167 1 337 2 125 1 130 2 289 2 222 3 360 1 151 1 
183 1 92 1 93 1 35 1 124 1 345 2 112 2 125 2 272 1 275 2 63 1 276 1 64 2 
320 1 278 1 92 1 102 1 93 1 236 1 345 4 112 4 125 4 237 1 275 1 276 1 64 1 
143 1 123 1 92 1 297 1 124 1 345 2 112 2 125 2 310 1 312 1 275 2 338 1 276 1 64 1 
95 1 92 1 186 1 278 1 333 1 275 1 344 1 125 1 112 1 345 1 
245 1 92 1 136 1 221 1 93 1 275 1 64 1 276 1 125 2 112 2 345 2 
245 1 320 1 278 1 92 2 102 1 297 1 93 1 345 4 112 5 125 5 237 1 218 1 49 1 275 2 276 2 64 3 
245 1 320 1 278 1 92 2 102 1 297 1 93 1 345 4 112 5 125 5 237 1 274 1 49 1 275 2 276 2 64 3 
244 1 119 1 28 1 278 1 92 1 5 2 124 1 227 1 247 1 345 1 112 1 125 1 87 1 262 2 13 1 275 1 64 1 276 1 
123 1 92 1 297 1 334 1 124 1 345 1 112 1 125 1 312 1 275 2 63 1 276 1 64 1 
87 1 109 1 45 1 198 1 270 1 
109 1 350 1 358 1 45 1 211 1 198 1 270 1 166 1 255 1 243 1 222 1 302 1 
109 1 262 1 14 1 5 1 296 1 198 1 45 1 247 1 68 1 
198 1 166 1 255 1 
51 1 287 1 215 1 264 1 
41 1 88 1 51 1 96 1 215 1 264 1 48 1 
96 1 269 1 90 1 
41 3 51 1 67 1 48 1 88 1 89 2 96 3 215 1 264 1 194 1 233 1 316 1 
260 1 41 2 88 1 51 1 96 2 215 1 38 1 264 1 48 1 
41 1 88 1 95 1 340 1 139 1 51 1 96 1 333 1 305 1 233 1 48 1 
41 1 88 1 51 1 96 1 264 1 233 1 48 1 
41 1 88 1 96 1 215 1 264 2 233 1 48 1 
267 1 41 2 51 1 187 1 249 1 48 2 88 2 96 2 264 1 233 1 
152 1 260 2 164 1 41 3 88 1 51 2 96 3 215 1 305 1 264 1 233 1 250 1 48 1 
41 2 153 1 340 1 51 1 84 1 333 2 344 1 48 1 260 1 88 1 95 1 96 2 215 1 264 1 233 1 
41 4 164 1 51 2 305 1 86 1 48 2 260 2 88 2 96 4 215 1 38 1 264 1 233 1 
41 1 88 1 51 1 96 1 215 1 264 1 233 1 48 1 
41 4 164 1 51 3 67 1 305 1 286 1 48 1 260 2 88 1 89 1 96 4 215 2 264 2 316 1 
41 2 351 1 51 1 48 1 260 1 88 1 96 2 215 1 25 1 264 1 241 1 233 1 
41 3 51 1 67 2 48 1 88 1 89 2 96 3 215 1 264 1 150 1 233 1 316 1 
251 2 51 2 235 1 200 1 
41 1 88 1 96 1 288 1 233 1 48 1 
152 1 260 1 41 2 88 1 51 1 96 2 215 1 264 1 233 1 48 1 
242 1 
41 1 88 1 51 1 96 1 215 1 264 1 233 1 48 1 
152 1 260 1 41 3 88 1 89 1 51 1 96 3 215 1 264 1 233 1 48 1 
164 1 51 1 305 1 286 1 
51 1 264 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 2 22 1 50 1 85 2 179 4 181 2 228 9 367 1 276 1 258 1 33 2 344 1 65 2 141 5 279 1 210 1 167 6 374 1 263 3 354 1 333 1 217 9 268 1 310 1 73 1 130 1 224 2 201 2 
227 2 22 1 50 1 85 2 179 4 181 2 228 9 367 1 276 1 258 1 33 2 344 1 65 2 141 5 279 1 210 1 167 6 374 1 263 3 354 1 333 1 217 9 268 1 310 1 73 1 130 1 224 2 201 2 
227 2 22 1 50 1 85 2 179 5 181 2 228 10 367 1 276 1 258 1 33 2 344 1 65 2 141 6 279 1 210 1 167 7 374 1 263 4 354 1 333 1 217 10 268 1 310 1 73 1 130 1 224 2 201 2 
227 2 22 1 50 1 85 2 179 3 181 2 228 7 367 1 276 1 258 1 33 2 344 1 65 2 141 4 210 1 167 4 374 1 263 2 354 1 333 1 217 7 268 1 310 1 73 1 130 1 224 1 201 2 
22 1 227 1 85 1 167 3 179 2 263 1 181 1 354 1 228 4 367 1 217 4 258 1 130 1 65 1 224 2 141 3 201 1 279 1 
22 1 227 1 85 1 50 1 352 1 181 1 333 1 228 2 367 1 217 2 258 1 33 1 61 1 141 1 201 1 349 1 
22 1 227 2 167 1 179 1 181 2 263 1 228 3 367 1 217 3 258 1 310 1 33 1 141 2 
227 2 22 1 85 1 179 4 181 2 228 9 367 1 258 1 33 1 65 1 141 5 210 1 279 1 167 7 263 3 354 1 217 9 310 1 73 1 152 1 130 1 381 1 224 2 201 1 
227 2 22 1 85 1 179 4 181 2 228 9 367 1 258 1 33 1 65 1 141 5 210 1 279 1 167 7 263 3 354 1 217 9 310 1 73 1 152 1 130 1 381 1 224 2 201 1 
71 1 150 1 303 1 
74 1 71 1 19 2 
320 1 369 2 292 2 200 2 332 2 155 1 185 2 66 2 
320 1 53 2 257 2 55 1 159 1 57 2 321 1 185 2 186 1 275 1 187 1 369 2 163 1 143 1 120 1 92 1 66 2 235 1 40 1 305 1 332 2 97 1 265 1 125 1 127 1 44 2 358 1 129 1 247 1 292 3 200 3 269 2 155 1 382 1 249 1 363 1 250 1 
320 1 369 1 301 1 292 1 200 1 332 1 293 1 185 1 126 1 66 1 
83 1 254 1 71 1 273 1 185 1 266 1 230 1 200 1 292 1 270 1 293 1 80 1 303 1 166 1 
83 1 254 2 332 1 71 1 273 1 185 1 266 1 369 1 230 1 200 1 292 1 270 2 293 1 303 1 66 1 
254 1 270 1 37 1 17 1 347 1 
254 2 71 1 96 1 270 2 37 1 17 1 3 1 303 1 
254 1 270 1 17 1 
254 1 320 1 332 1 126 1 185 1 369 1 117 1 301 1 200 1 292 1 270 1 293 1 37 1 66 1 
71 1 
254 2 71 1 270 2 37 1 17 1 3 1 303 1 318 1 
202 1 212 1 295 1 254 5 272 2 71 1 242 2 3 1 356 1 267 1 151 1 34 1 190 1 270 5 140 1 37 2 90 2 17 2 303 1 
155 1 150 1 
332 1 185 2 369 1 199 1 200 2 292 2 155 2 175 1 66 1 
114 1 241 1 148 1 
69 1 53 1 159 1 57 1 127 1 275 1 129 1 187 1 247 1 292 1 200 1 269 1 155 1 363 1 143 1 120 1 
53 1 332 1 159 1 241 1 57 1 185 1 127 1 275 1 129 1 378 1 161 1 187 1 247 1 200 2 292 2 269 1 363 1 143 1 120 1 66 1 
331 1 255 1 332 4 185 5 378 1 161 2 369 1 200 5 292 5 314 1 155 1 175 1 80 1 66 4 
11 1 301 1 292 2 200 2 332 2 293 1 185 2 66 2 
161 1 369 1 292 3 200 3 332 3 155 1 185 3 66 3 
301 1 292 1 200 1 332 1 293 1 185 1 66 1 
369 1 199 1 292 1 200 1 332 1 293 1 175 1 185 1 66 1 
83 1 254 1 320 1 53 1 257 1 55 1 159 1 273 1 57 1 321 1 185 3 186 1 275 1 161 1 187 1 230 1 369 2 327 1 163 1 143 1 120 1 372 1 66 3 40 1 305 1 332 3 97 1 265 1 266 1 127 1 44 2 129 1 378 1 247 1 292 4 200 4 269 1 155 1 382 1 270 1 363 1 175 1 293 1 250 1 
161 1 255 1 292 2 200 2 332 1 155 1 80 1 185 2 66 1 
83 1 254 1 332 3 71 1 273 1 185 3 266 1 378 1 161 2 369 1 230 1 62 1 200 3 292 3 270 1 175 1 293 1 372 1 66 3 
332 2 241 1 185 2 114 1 161 1 369 1 200 2 292 2 175 1 66 2 
53 1 159 1 57 1 127 1 275 1 129 1 247 1 187 1 292 1 200 1 269 1 155 1 363 1 143 1 120 1 
53 1 56 1 159 1 57 1 307 1 127 1 247 1 187 1 292 1 200 1 269 1 155 1 363 1 143 1 120 1 
257 4 321 1 186 1 114 2 346 1 162 1 302 1 280 1 304 1 281 1 67 1 40 2 305 1 122 1 214 1 9 1 97 1 241 2 265 1 148 2 44 2 382 1 249 2 81 1 
83 1 11 1 292 1 200 1 332 1 293 1 185 1 66 1 
357 1 285 1 
357 1 285 1 
223 1 232 1 
223 1 232 1 
223 1 232 1 
357 1 239 1 285 1 
357 1 157 1 285 1 
134 1 368 1 357 2 223 1 285 2 232 1 
357 1 239 1 285 1 
357 1 239 1 285 1 
357 1 285 1 322 1 
357 1 285 1 322 1 
357 1 285 1 322 1 
319 1 84 1 254 1 51 1 111 1 157 1 185 2 58 1 59 1 300 1 66 2 332 2 284 1 285 1 10 1 308 1 357 1 288 1 361 1 200 2 292 2 155 1 270 1 315 1 
134 1 254 2 51 1 111 2 71 1 285 2 95 1 72 1 308 3 58 2 59 2 357 2 105 1 291 1 361 2 328 1 209 1 270 2 18 2 
85 1 65 1 201 1 
85 1 61 1 201 1 
113 1 88 1 85 3 208 1 61 1 65 2 
113 1 85 2 208 1 136 1 61 1 65 1 
113 2 85 2 208 1 61 1 65 1 
202 1 295 2 254 5 86 1 256 1 272 1 29 1 31 2 3 1 274 1 5 1 300 1 345 1 346 1 37 4 140 3 90 1 280 1 303 1 214 1 71 2 9 1 242 1 10 1 218 2 74 1 75 1 270 5 315 1 17 1 19 3 48 2 
202 1 295 6 254 9 86 2 272 2 29 2 31 6 274 1 3 1 5 3 346 3 37 7 140 8 347 5 90 2 280 3 303 1 39 1 353 1 214 3 146 1 71 5 9 3 242 2 45 1 376 1 356 1 218 6 377 1 74 3 270 9 315 4 17 6 47 5 19 9 
254 3 295 2 86 1 272 1 29 1 31 2 5 1 345 1 346 1 37 2 140 3 90 1 303 1 280 1 214 1 71 3 9 1 242 1 356 1 218 2 74 2 75 1 270 3 315 1 48 1 19 4 
254 4 295 4 86 1 272 1 29 1 31 4 5 2 345 1 346 2 140 5 37 3 90 1 303 1 280 2 214 2 71 4 9 2 242 1 45 1 376 1 356 1 218 4 377 1 74 3 75 1 270 4 315 2 19 7 48 2 
187 1 204 1 150 1 
187 1 248 1 
1 1 
187 1 363 1 120 1 
187 1 191 1 
187 1 120 1 
187 3 283 1 363 1 204 2 120 1 193 1 
68 1 178 1 40 3 237 1 297 1 257 7 9 1 196 1 366 1 312 1 207 1 379 2 278 1 249 4 280 1 281 3 67 2 
68 1 178 1 40 3 237 1 297 1 257 7 9 1 196 1 366 1 312 1 207 1 379 2 278 1 249 4 280 1 281 3 67 2 
68 1 178 1 40 3 237 1 297 1 257 7 9 1 196 1 366 1 312 1 207 1 379 2 278 1 63 1 249 4 280 1 281 3 67 2 
21 3 178 5 49 1 297 1 257 31 137 1 298 1 366 2 321 1 186 1 207 2 5 3 278 1 346 3 281 10 280 4 67 5 68 2 40 15 93 1 237 1 214 3 97 1 196 2 9 4 265 1 100 1 44 2 197 1 12 1 312 1 379 3 173 4 249 16 
178 1 49 1 297 1 257 9 366 1 321 2 186 2 207 1 278 1 280 1 281 4 67 3 68 1 40 4 9 1 97 2 196 1 265 2 44 4 312 1 379 2 172 1 249 5 82 1 
227 1 22 1 85 2 24 1 53 1 181 1 159 1 203 1 57 1 228 2 367 1 343 1 258 1 33 1 88 1 61 1 65 1 141 1 164 1 143 1 348 1 330 1 167 1 168 1 217 2 101 1 102 1 289 1 269 1 201 1 
227 1 85 2 53 1 181 1 159 1 203 1 57 1 228 3 367 1 343 1 258 1 33 1 88 1 61 1 65 1 138 1 141 1 164 1 143 1 330 1 167 2 121 1 168 1 217 3 101 1 102 1 289 1 269 1 154 1 201 1 
85 2 53 1 159 1 203 1 57 1 228 2 367 1 258 1 33 1 88 1 61 1 65 1 138 1 141 1 164 1 143 1 330 1 167 2 168 1 217 2 101 1 102 1 269 1 154 1 201 1 
227 1 53 1 121 1 123 1 168 2 54 1 181 1 159 1 203 2 228 1 57 1 127 1 217 1 33 2 102 2 187 1 360 1 153 1 269 1 143 1 120 1 176 1 225 1 
227 1 22 1 85 2 53 1 181 1 159 1 203 1 57 1 228 1 343 1 33 1 88 1 61 1 65 1 164 1 143 1 348 1 330 1 168 1 217 1 101 1 102 1 289 1 269 1 154 1 201 1 
294 1 
202 1 295 2 254 5 53 2 54 1 159 1 57 2 3 3 4 4 115 1 165 2 120 1 303 1 166 1 350 2 211 1 7 2 71 2 264 1 127 2 266 1 170 2 311 1 74 2 220 1 360 1 269 2 132 2 270 5 80 1 17 6 19 2 83 1 27 1 272 1 26 1 29 1 273 1 185 1 187 1 230 1 370 1 140 2 143 1 90 1 242 1 149 1 334 1 335 1 200 1 292 1 337 2 293 1 383 1 339 2 
83 1 254 3 273 1 185 1 3 1 4 2 230 1 370 1 165 1 166 1 264 1 149 1 266 1 334 1 335 1 292 1 200 1 270 3 293 1 80 1 17 2 318 1 
83 1 254 3 273 1 185 1 3 1 4 3 230 1 370 1 303 1 166 1 71 1 264 1 149 1 266 1 334 1 335 1 292 1 200 1 270 3 293 1 80 1 17 1 339 1 318 1 
83 1 254 3 273 1 3 1 185 1 4 3 230 1 370 1 165 1 303 1 166 1 7 1 71 1 264 1 149 1 266 1 334 1 335 1 292 1 200 1 270 3 293 1 80 1 17 2 339 1 318 1 
202 1 254 5 295 1 3 3 4 6 165 4 303 5 166 1 350 2 7 4 306 1 124 1 71 5 264 1 266 1 170 2 74 2 220 1 132 2 270 5 80 1 17 7 318 1 83 1 272 1 26 1 182 1 273 1 185 1 277 1 230 1 370 1 89 1 140 1 90 1 242 1 149 1 334 1 335 1 292 1 200 1 337 2 293 1 339 4 
202 1 254 4 295 1 3 2 4 4 165 2 303 1 166 1 350 2 7 2 71 2 264 1 266 1 170 2 74 2 311 1 220 1 132 2 270 4 80 1 17 4 19 2 83 1 26 1 272 1 273 1 185 1 230 1 370 1 140 1 90 1 242 1 149 1 334 1 335 1 292 1 200 1 337 2 293 1 339 2 
83 1 202 1 295 1 254 4 26 1 272 1 182 1 273 1 3 2 185 1 4 4 230 1 370 1 89 1 165 2 140 1 90 1 303 1 166 1 350 2 7 2 124 1 71 1 264 1 242 1 149 1 266 1 334 1 170 2 74 2 335 1 220 1 292 1 200 1 337 2 132 2 270 4 293 1 80 1 339 2 17 4 
83 1 202 1 295 1 254 4 26 1 272 1 182 1 273 1 3 2 185 1 4 4 230 1 370 1 89 1 165 2 140 1 90 1 303 1 166 1 350 2 7 2 124 1 71 1 264 1 242 1 149 1 266 1 334 1 170 2 74 2 335 1 220 1 292 1 200 1 337 2 132 2 270 4 293 1 80 1 339 2 17 4 
251 2 83 1 202 1 295 1 254 4 272 1 273 1 184 1 3 2 185 1 4 4 230 1 370 1 165 2 140 1 90 1 303 1 166 1 7 2 124 1 71 1 264 1 8 1 242 1 244 1 149 1 266 1 334 1 198 2 170 2 335 1 220 1 292 1 200 1 132 2 270 4 293 1 80 1 339 2 17 4 19 2 
83 1 202 1 295 1 254 4 26 1 272 1 182 1 273 1 3 2 185 1 4 5 230 1 370 1 89 1 140 1 165 3 90 1 303 1 166 1 350 2 306 1 7 3 124 1 71 1 264 1 242 1 149 1 266 1 334 1 170 2 74 2 335 1 220 1 292 1 200 1 337 2 132 2 270 4 293 1 80 1 17 5 339 3 
83 1 202 1 295 1 254 4 26 1 272 1 182 1 273 1 3 2 185 1 4 5 230 1 370 1 89 1 140 1 165 3 90 1 303 1 166 1 350 2 306 1 7 3 124 1 71 1 264 1 242 1 149 1 266 1 334 1 170 2 74 2 335 1 220 1 292 1 200 1 337 2 132 2 270 4 293 1 80 1 17 5 339 3 
251 2 202 1 254 4 295 1 3 2 4 4 165 2 303 1 166 1 7 2 71 1 264 1 266 1 170 2 311 1 220 1 132 2 270 4 80 1 17 4 19 2 83 1 272 1 273 1 185 1 230 1 370 1 140 1 90 1 242 1 244 1 149 1 334 1 198 2 335 1 292 1 200 1 293 1 339 2 
297 1 257 6 321 1 186 1 114 1 207 1 278 1 162 1 281 2 280 1 67 2 68 1 40 3 305 1 241 1 97 1 9 1 265 1 150 1 148 1 44 2 312 1 379 1 382 1 155 2 249 3 
21 3 178 1 257 14 55 1 137 1 321 2 186 2 114 4 229 1 5 2 6 1 346 1 36 1 192 1 92 1 281 2 280 1 67 1 93 1 40 6 262 1 305 2 214 2 97 2 241 11 9 2 265 2 148 11 44 4 155 1 382 1 173 3 249 8 
271 1 53 1 257 2 55 1 159 1 57 1 321 1 185 1 186 1 275 1 114 1 161 1 187 1 229 1 143 1 120 1 66 1 92 1 40 1 69 1 305 1 332 1 97 1 243 1 265 1 216 1 127 1 44 2 129 1 378 1 247 1 292 2 200 2 269 1 155 1 382 1 363 1 249 1 
297 1 53 3 257 20 55 1 159 2 57 3 112 2 114 7 161 1 207 1 299 1 5 2 163 2 346 2 120 2 66 1 67 4 68 1 305 3 214 2 9 3 215 1 265 3 127 1 309 2 129 2 312 1 269 3 363 2 178 4 185 1 321 3 186 3 275 2 187 2 229 1 278 1 143 2 92 1 280 3 91 2 281 8 40 10 41 1 332 1 97 3 241 7 98 2 148 7 44 6 378 1 247 2 379 1 200 3 292 3 154 1 155 2 382 3 249 10 
110 1 24 1 53 7 257 2 55 1 54 1 159 2 57 8 185 1 321 2 186 2 324 1 161 1 187 3 162 1 143 2 120 2 260 1 66 1 92 1 40 1 305 2 332 1 240 1 97 2 265 2 125 2 127 2 44 4 46 1 290 1 360 1 292 1 200 1 154 1 269 8 382 2 249 1 226 1 
257 3 321 1 185 1 186 1 114 1 369 1 229 1 5 1 346 1 281 1 66 1 280 1 67 1 40 2 305 1 332 1 214 1 94 1 241 1 97 1 9 1 265 1 148 1 44 2 200 1 292 1 382 1 175 1 249 1 
178 1 305 1 257 2 214 1 241 1 97 1 9 1 265 1 148 1 321 1 186 1 44 2 114 1 162 1 382 1 302 1 249 2 281 1 
40 2 305 1 257 2 241 1 97 1 265 1 148 1 321 1 186 1 44 2 114 1 162 1 346 1 382 1 81 1 281 1 280 1 67 1 
178 1 257 4 321 1 186 1 114 2 5 1 162 1 346 1 281 2 280 1 67 1 40 2 305 1 214 1 9 1 97 1 241 2 265 1 148 2 44 2 382 1 249 2 
178 1 305 1 257 2 214 1 241 1 97 1 9 1 265 1 148 1 321 1 186 1 44 2 114 1 290 1 382 1 302 1 249 2 281 1 
40 2 305 1 257 2 241 1 97 1 265 1 148 1 321 1 186 1 44 2 114 1 290 1 346 1 382 1 81 1 281 1 280 1 67 1 
178 1 257 4 321 1 186 1 114 2 5 1 346 1 281 2 280 1 67 1 40 2 305 1 214 1 9 1 97 1 241 2 265 1 148 2 44 2 290 1 382 1 249 2 
178 1 40 2 305 1 214 1 257 4 241 2 97 1 9 1 265 1 148 2 321 1 186 1 44 2 114 2 5 1 346 1 382 1 249 2 280 1 281 2 67 1 
53 1 257 2 55 1 159 1 57 1 321 1 186 1 275 1 187 1 163 1 143 1 120 1 92 1 40 1 305 1 97 1 265 1 127 1 44 2 129 1 247 1 200 1 292 1 269 1 155 1 382 1 249 1 363 1 
53 1 257 2 56 1 55 1 159 1 57 1 321 1 186 1 187 1 189 1 143 1 120 1 92 1 40 1 305 1 97 1 307 1 265 1 127 1 44 2 247 1 200 1 292 1 269 1 155 1 382 1 249 1 363 1 
178 1 257 4 321 1 186 1 114 2 5 1 229 1 346 1 281 2 280 1 67 1 40 2 305 1 214 1 9 1 97 1 241 2 265 1 148 2 44 2 382 1 249 2 
178 1 24 1 53 1 257 4 159 1 57 1 321 1 186 1 275 1 112 1 114 2 187 1 5 1 346 1 163 1 143 1 120 1 280 1 281 2 67 1 40 2 305 1 214 1 241 2 9 1 97 1 265 1 148 2 44 2 129 1 247 1 200 1 292 1 269 1 382 1 249 2 363 1 
178 1 257 3 321 1 185 1 186 1 114 1 369 1 229 1 5 1 346 1 139 1 280 1 281 1 66 1 40 1 305 1 332 1 214 1 97 1 9 1 241 1 265 1 148 1 44 2 200 1 292 1 382 1 175 1 249 2 
21 1 178 1 52 1 365 1 257 13 137 1 321 2 186 2 5 2 346 2 118 1 281 2 280 2 67 1 261 1 93 1 40 7 214 2 97 2 9 2 265 2 44 4 169 1 103 1 77 1 173 2 249 6 317 1 82 1 
21 2 178 2 49 2 52 1 365 1 257 26 87 1 321 3 186 3 5 3 346 2 231 1 281 3 280 2 67 1 145 1 282 1 261 1 40 12 93 2 214 3 97 3 9 3 265 3 44 6 169 4 103 2 171 1 77 2 221 1 338 1 173 2 249 14 82 1 
21 1 178 1 52 1 365 1 257 13 137 1 321 2 186 2 5 2 346 1 118 1 281 2 280 1 67 1 145 1 261 1 93 1 40 6 214 2 97 2 9 2 265 2 44 4 169 2 103 1 77 1 173 2 249 7 82 1 
21 1 178 1 52 1 365 1 257 13 137 1 321 2 186 2 5 2 346 1 118 1 281 2 280 1 67 1 145 1 261 1 93 1 40 6 214 2 97 2 9 2 265 2 44 4 169 2 103 1 77 1 173 2 249 7 82 1 
21 4 49 1 178 6 52 1 297 1 365 1 257 52 87 1 137 2 321 2 186 2 207 1 5 7 278 1 346 7 231 1 281 12 280 8 67 6 68 1 145 1 282 1 261 1 93 2 40 25 262 2 214 7 97 2 9 8 265 2 44 4 169 4 171 1 103 1 312 1 379 1 221 1 77 1 338 1 173 4 249 27 82 1 
111 1 342 1 285 1 147 1 58 1 59 1 357 1 326 1 361 1 38 1 
157 1 284 1 
58 1 357 1 59 1 236 1 111 1 361 1 70 1 285 1 316 1 
23 1 239 1 
177 1 368 1 322 1 
134 1 254 1 51 1 111 1 71 1 285 1 72 1 308 2 58 1 59 1 357 1 105 1 291 1 361 1 328 1 209 1 270 1 18 1 
134 1 254 1 51 1 111 1 71 1 285 1 72 1 308 2 58 1 59 1 357 1 105 1 291 1 361 1 328 1 209 1 270 1 18 1 
134 1 254 1 51 1 111 1 71 1 285 1 72 1 308 2 58 1 59 1 357 1 105 1 291 1 361 1 328 1 209 1 270 1 18 1 
368 1 23 1 239 1 
368 1 23 1 239 1 
177 1 322 1 
177 1 368 1 322 1 
319 1 84 1 
133 1 58 1 357 1 59 1 254 1 111 1 361 1 285 1 270 1 37 1 
296 1 53 2 257 2 55 1 159 1 57 2 321 1 185 2 186 1 206 1 187 1 229 1 143 1 329 1 120 1 260 1 92 1 40 1 305 1 240 1 97 1 265 1 125 2 44 2 13 1 313 1 292 2 200 2 269 2 382 1 249 1 
85 2 24 1 135 1 53 2 168 1 159 1 57 2 343 1 101 1 88 1 61 1 219 1 65 1 154 1 269 2 108 1 201 1 143 1 330 1 
85 2 135 1 53 1 168 1 159 1 183 1 57 1 343 1 101 1 88 1 61 1 65 1 154 1 269 1 201 1 143 1 330 1 
364 1 53 1 168 1 54 1 159 1 57 1 127 1 187 1 219 1 153 1 360 1 269 1 143 1 120 1 
85 2 135 1 53 1 168 1 159 1 57 1 343 1 101 1 88 1 61 1 219 1 65 1 154 1 269 1 108 1 201 1 143 1 330 1 
78 1 
295 1 34 1 190 1 71 1 140 1 150 1 303 1 
202 1 295 1 254 1 26 1 272 1 3 1 140 1 90 1 303 1 350 1 71 2 242 1 74 1 337 1 270 1 17 1 19 1 
0 1 202 4 254 5 295 8 53 3 156 2 159 3 57 3 204 2 205 2 3 3 259 1 115 1 5 2 64 2 346 2 120 3 303 2 351 2 213 1 214 2 71 8 9 2 127 1 266 2 128 2 218 6 14 2 74 6 269 3 270 5 362 1 363 3 17 5 19 12 24 1 272 4 29 2 30 1 31 6 34 1 187 10 190 1 191 2 140 9 143 4 90 4 91 2 280 2 193 1 234 2 242 4 248 3 109 2 
21 1 341 1 202 2 254 1 295 5 272 2 29 1 87 1 31 5 32 1 3 1 115 1 5 2 346 2 140 8 231 1 90 2 280 2 303 2 234 2 351 1 93 1 214 2 71 5 9 2 242 2 218 5 171 1 74 3 221 1 338 1 270 1 173 1 17 1 19 6 
202 1 254 1 295 2 320 1 272 1 2 1 182 1 185 1 207 1 369 1 117 1 301 1 140 2 90 1 280 1 66 1 234 2 68 1 351 1 332 1 9 2 242 1 126 1 312 1 292 1 200 1 270 1 293 1 
202 1 295 1 272 1 71 1 242 1 34 1 190 1 140 1 90 1 303 1 
234 2 351 1 295 5 214 2 71 5 31 5 9 2 218 5 74 5 5 2 346 2 140 5 91 1 19 10 280 2 
254 1 71 1 270 1 17 1 3 1 303 1 
202 1 295 2 254 3 27 1 272 2 53 4 29 2 54 1 159 1 57 4 3 2 259 1 115 2 187 1 140 2 143 1 120 1 90 2 211 1 242 2 127 2 356 1 106 1 360 1 107 1 269 4 270 3 362 2 17 4 
320 1 53 1 257 1 55 1 159 1 57 1 185 2 321 1 186 1 275 1 187 1 369 2 163 1 143 1 120 1 66 2 40 1 305 1 332 2 97 1 265 1 127 1 44 2 129 1 247 1 292 3 200 3 269 1 155 1 382 1 363 1 250 1 
202 1 295 2 272 1 29 1 71 4 31 2 242 1 218 2 74 2 115 1 379 1 140 1 90 1 19 4 303 2 
144 1 111 1 361 1 
84 1 105 1 111 1 361 1 79 1 
144 1 111 1 361 1 
144 1 111 1 361 1 
111 1 361 1 233 1 
111 1 361 1 233 1 
111 1 361 1 233 1 
111 1 361 1 
357 1 285 1 
68 1 178 1 49 1 40 4 297 1 257 8 9 1 97 2 265 2 321 2 186 2 44 4 312 1 207 1 379 1 278 1 249 4 280 1 281 3 67 2 
68 1 40 3 312 1 207 1 379 1 278 1 297 1 257 6 249 3 9 1 150 1 280 1 281 2 67 2 
178 1 40 2 214 1 257 4 97 1 9 1 265 1 321 1 186 1 44 2 5 1 76 1 346 1 249 2 280 1 281 2 67 1 
21 1 178 1 93 1 40 4 257 7 214 1 137 1 9 1 5 1 346 1 173 2 249 3 280 1 281 2 67 1 
21 2 178 4 49 2 297 1 257 23 137 1 321 2 186 2 207 2 5 2 278 1 346 2 192 1 281 9 280 3 67 5 68 2 40 12 262 1 214 2 9 3 97 2 265 2 44 4 312 1 379 1 380 1 173 2 249 11 
40 1 257 1 173 1 
21 1 257 1 249 1 
178 1 40 3 257 6 214 1 97 1 9 1 265 1 321 1 186 1 44 2 5 1 76 1 346 1 249 3 91 1 281 3 280 1 67 2 
21 1 178 1 257 12 87 1 321 1 186 1 5 2 346 2 231 1 280 2 281 2 67 1 40 6 93 1 214 2 97 1 9 2 265 1 44 2 171 1 221 1 173 1 338 1 249 6 82 1 
68 1 178 1 40 3 257 6 9 1 312 1 207 1 249 3 280 1 281 2 67 1 
68 1 178 1 49 1 40 2 297 1 257 3 97 1 265 1 321 1 186 1 44 2 207 1 278 1 380 1 249 1 281 2 67 1 
68 2 178 2 40 5 257 10 2 1 97 1 9 2 265 1 321 1 186 1 44 2 207 2 312 1 249 5 82 1 281 5 280 2 67 3 
178 1 214 1 257 2 97 1 9 1 265 1 321 1 186 1 44 2 249 2 82 1 281 1 
178 1 40 2 214 1 257 4 97 1 9 1 265 1 321 1 186 1 44 2 5 1 346 1 249 2 280 1 281 2 82 1 67 1 
68 1 49 1 178 1 40 2 257 3 97 3 265 3 321 3 186 3 44 6 207 1 380 1 118 1 249 1 82 1 281 2 67 1 
21 3 49 2 178 5 297 1 257 34 137 1 298 1 321 5 186 5 207 3 5 3 278 1 346 3 118 1 281 12 280 5 67 7 68 3 40 18 93 1 214 3 97 5 9 5 265 5 44 10 197 1 12 1 312 2 379 1 76 1 380 1 173 4 249 16 82 1 
21 1 297 1 257 8 321 1 186 1 207 1 278 1 280 1 281 2 67 2 68 1 40 4 93 1 9 1 97 1 265 1 44 2 171 1 312 1 379 1 173 1 249 4 82 1 
21 1 178 1 297 1 257 11 137 1 321 2 186 2 207 1 5 1 278 1 280 1 281 3 67 2 68 1 40 5 93 1 214 1 97 2 9 2 265 2 44 4 171 1 312 1 379 1 76 1 173 2 249 6 82 1 
21 1 178 1 49 1 297 1 257 19 87 1 321 3 186 3 207 1 5 2 278 1 346 2 231 1 280 3 281 4 67 3 68 1 40 10 93 1 214 2 97 3 9 3 265 3 44 6 171 1 312 1 379 1 76 1 221 1 173 1 338 1 249 9 82 1 
21 1 49 1 178 2 297 1 257 17 87 1 321 3 186 3 207 1 5 2 278 1 346 1 231 1 280 2 281 5 67 3 68 1 40 7 93 1 214 2 97 3 9 3 265 3 44 6 171 1 312 1 379 1 76 1 221 1 173 1 338 1 249 10 82 1 
21 1 297 1 257 8 321 1 186 1 207 1 278 1 280 1 281 2 67 2 68 1 40 4 93 1 9 1 97 1 265 1 44 2 171 1 312 1 379 1 173 1 249 4 82 1 
21 1 178 1 257 12 87 1 321 1 186 1 5 2 346 2 231 1 280 2 281 2 67 1 40 6 93 1 214 2 97 1 9 2 265 1 44 2 171 1 221 1 173 1 338 1 249 6 82 1 
21 1 178 2 49 2 297 1 257 18 87 1 321 4 186 4 207 1 5 2 278 1 346 1 231 1 280 2 281 5 67 3 68 1 40 8 93 1 214 2 97 4 9 3 265 4 44 8 171 1 312 1 379 1 76 1 221 1 338 1 173 1 249 10 82 1 
21 1 178 3 49 2 257 16 87 1 321 4 186 4 5 3 346 2 118 1 231 1 280 2 281 6 67 3 40 7 93 1 214 3 97 4 9 3 265 4 44 8 171 1 221 1 338 1 173 1 249 9 82 1 
68 3 178 3 40 4 297 1 257 7 9 1 207 3 312 1 278 2 249 3 280 1 281 6 67 3 
21 1 178 1 49 2 297 1 257 18 87 1 321 4 186 4 207 1 5 2 278 1 346 1 118 1 231 1 280 2 281 4 67 3 68 1 40 8 93 1 214 2 97 4 9 3 265 4 44 8 171 1 312 1 379 1 221 1 338 1 173 1 249 10 82 1 
116 1 255 1 292 1 200 1 155 1 80 1 185 1 
255 1 180 1 185 1 323 1 116 1 200 1 292 1 155 1 16 1 142 1 80 1 20 1 
187 1 360 1 53 1 269 1 54 1 159 1 143 1 57 1 120 1 150 1 127 1 
53 1 332 1 159 1 57 1 185 1 127 1 129 1 161 1 187 1 247 1 200 2 292 2 269 1 155 1 363 1 143 1 120 1 66 1 
83 1 53 1 332 1 159 1 273 1 57 1 185 2 129 1 161 1 187 3 247 1 64 1 200 2 292 2 191 1 269 1 155 1 293 1 363 2 362 1 143 1 120 2 66 2 
83 1 53 2 332 1 56 1 159 1 273 1 57 2 185 2 161 1 187 3 247 1 104 1 64 1 200 2 292 2 191 1 269 2 155 1 293 1 363 2 362 1 143 1 120 2 66 2 
254 2 53 3 71 1 159 1 57 3 204 1 127 1 266 1 287 1 325 1 187 4 104 1 248 1 64 1 191 1 269 3 270 2 363 1 362 1 143 1 120 1 17 1 303 1 
254 2 53 3 71 1 159 1 57 3 204 1 205 1 127 1 266 1 187 4 104 1 248 1 64 1 191 1 269 3 270 2 363 1 362 1 143 1 120 1 17 1 303 1 
53 1 269 1 159 1 143 1 57 1 226 1 
110 1 24 1 53 6 42 1 43 1 159 2 57 7 125 1 127 2 46 1 324 1 187 3 154 1 269 7 174 1 363 1 143 3 120 2 260 1 226 1 193 1 
53 1 297 1 257 6 159 1 57 1 112 1 114 1 161 1 207 1 163 1 120 1 66 1 67 2 68 1 305 2 9 1 265 2 309 1 129 1 13 1 312 1 269 1 363 1 24 1 185 1 321 2 186 2 275 1 187 1 229 1 278 1 143 1 281 2 280 1 40 3 332 1 97 2 241 1 148 1 44 4 247 1 379 1 200 2 292 2 382 2 155 2 249 3 
202 2 295 1 254 3 53 1 272 2 57 1 204 1 205 1 3 1 259 1 34 1 187 2 190 1 140 1 37 1 90 2 303 1 71 1 242 2 127 1 266 1 128 1 14 1 248 1 269 1 270 3 109 1 17 2 
24 1 53 2 30 1 159 1 204 1 57 2 187 2 269 2 363 1 143 2 120 1 226 1 193 1 
24 1 53 4 54 1 159 1 57 4 127 1 187 1 104 1 360 1 269 4 143 1 120 1 340 1 
41 1 53 2 42 1 43 1 159 1 57 2 375 1 187 1 269 2 35 1 362 1 363 1 143 2 120 1 
85 1 61 1 53 1 269 1 159 1 201 1 143 1 57 1 330 1 127 1 
187 1 24 1 53 2 154 1 269 2 159 1 143 1 329 1 57 2 120 1 260 1 
110 1 24 1 53 4 54 1 159 2 57 5 127 1 46 1 187 3 360 1 269 5 362 1 143 2 120 2 340 1 260 1 
110 1 24 1 53 4 54 1 159 2 57 5 127 1 187 3 360 1 269 5 362 1 119 1 143 2 120 2 340 1 260 1 
53 1 332 1 56 1 159 1 57 1 185 1 127 1 161 1 187 1 247 1 200 2 292 2 269 1 155 1 363 1 143 1 120 1 66 1 
53 1 42 1 43 1 159 1 57 1 187 1 269 1 174 1 362 1 363 1 143 2 120 1 193 1 
155 1 371 1 158 1 222 1 245 1 
83 1 254 2 28 1 71 1 158 2 273 1 266 1 245 2 60 1 359 1 230 1 155 1 222 1 371 2 270 2 293 1 37 1 372 1 303 1 
296 1 158 1 185 1 206 1 313 1 200 1 292 1 371 1 222 1 
359 1 28 1 222 1 
258 1 141 1 150 1 367 1 
227 1 258 1 181 1 141 1 228 1 367 1 217 1 
33 1 102 1 228 1 
22 1 227 1 253 1 25 1 181 1 333 2 228 3 286 1 367 1 217 3 258 1 141 1 
227 1 258 1 167 1 181 1 224 1 141 1 228 2 367 1 217 2 
227 1 22 1 85 1 65 1 179 1 181 1 354 1 141 1 201 1 228 1 217 1 
227 1 22 1 258 1 181 1 141 1 228 1 217 1 
227 1 22 1 258 2 181 1 228 1 367 1 217 1 
22 1 227 2 238 1 181 2 228 2 99 1 217 2 258 1 15 1 141 1 
22 1 227 1 167 2 179 1 181 1 263 1 228 3 367 1 217 3 258 1 73 1 141 2 210 1 
22 1 227 1 373 1 85 2 167 1 181 1 228 2 367 1 217 2 258 1 88 1 61 1 65 1 141 1 201 1 
227 2 22 1 258 1 167 2 179 1 263 1 181 2 224 1 141 2 228 4 279 1 367 1 217 4 
227 1 22 1 258 1 181 1 141 1 228 1 367 1 217 1 
227 1 167 2 25 1 179 1 181 1 263 1 333 1 228 4 286 1 367 2 217 4 258 2 246 1 141 3 
252 1 227 1 22 1 258 1 152 1 167 1 181 1 141 1 355 1 228 2 367 1 217 2 
227 1 22 1 258 1 25 2 131 1 181 1 333 2 141 1 228 3 286 1 367 1 217 3 
188 1 195 2 160 1 141 2 
227 1 22 1 181 1 228 1 194 1 217 1 
227 1 22 1 258 1 73 1 167 1 181 1 141 1 228 2 367 1 217 2 
336 1 
227 1 22 1 258 1 181 1 141 1 228 1 367 1 217 1 
227 1 22 1 73 1 258 1 167 1 181 1 333 1 141 1 228 3 367 1 217 3 
246 1 179 1 263 1 141 1 
258 1 141 1 

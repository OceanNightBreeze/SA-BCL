#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 340 (156,264) (156,264) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 340 (156,264) (156,264) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 340 (156,264) (156,264) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 340 (156,264) (156,264) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 340 59 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 340 59 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 1 280 1 95 1 325 1 271 1 24 2 156 1 340 1 315 1 246 1 329 4 264 1 160 1 371 1 355 1 105 1 7 2 348 1 110 4 377 2 380 1 123 1 
135 1 280 1 95 1 325 1 271 1 24 2 156 1 340 1 315 1 246 1 329 4 264 1 160 1 371 1 355 1 105 1 7 2 348 1 110 4 377 2 380 1 123 1 
135 1 280 1 95 1 325 1 271 1 24 2 156 1 340 1 315 1 246 1 329 4 264 1 160 1 371 1 355 1 105 1 7 2 348 1 110 4 377 2 380 1 123 1 
135 1 280 1 95 1 325 1 271 1 24 2 156 1 340 1 315 1 246 1 329 4 264 1 160 1 371 1 355 1 105 1 7 2 348 1 110 4 377 2 380 1 123 1 
280 1 135 2 95 1 117 1 340 1 60 1 246 1 329 4 105 1 7 1 371 3 20 2 131 1 348 1 110 4 377 1 380 3 13 1 
280 1 325 1 24 1 245 1 60 1 329 2 206 1 7 1 207 1 105 1 110 2 348 1 377 1 380 1 123 1 13 1 
280 1 135 1 24 1 60 1 329 3 246 1 7 2 355 1 371 1 110 3 377 2 380 2 13 1 
280 1 135 1 24 1 340 1 59 1 342 1 329 4 246 1 160 1 7 2 371 2 355 1 110 4 377 2 380 1 
280 1 135 1 24 1 340 1 59 1 342 1 329 4 246 1 160 1 7 2 371 2 355 1 110 4 377 2 380 1 
48 1 74 1 126 1 
275 2 126 1 322 1 
112 1 116 2 19 2 319 2 208 2 42 2 370 2 118 1 
112 1 360 1 116 2 213 2 170 1 118 1 47 1 90 1 5 1 362 1 347 1 319 3 290 1 292 1 55 1 33 1 197 2 151 1 58 1 295 1 80 2 103 1 370 2 104 1 276 1 19 2 357 2 277 2 332 1 132 1 241 1 358 1 208 3 134 1 84 1 42 2 111 1 
15 1 228 1 116 1 19 1 319 1 208 1 42 1 216 1 370 1 118 1 
244 1 68 1 228 1 116 1 36 1 200 1 126 1 101 1 233 1 48 1 319 1 250 1 208 1 32 1 
68 1 228 1 116 1 200 2 36 1 126 1 233 1 370 1 48 1 19 1 319 1 250 2 208 1 42 1 32 1 
337 1 79 1 200 1 186 1 250 1 
48 1 71 1 337 1 200 2 126 1 186 1 250 2 65 1 
200 1 186 1 250 1 
15 1 337 1 228 1 116 1 200 1 216 1 370 1 118 1 193 1 19 1 250 1 319 1 208 1 42 1 
126 1 
48 1 71 1 337 1 221 1 200 2 126 1 186 1 250 2 
337 2 152 1 78 2 326 1 200 5 126 1 231 1 61 2 48 1 71 1 63 1 106 1 30 1 240 1 257 2 250 5 186 2 320 1 336 1 
33 1 35 1 295 1 116 1 213 1 80 1 90 1 5 1 6 1 362 1 19 1 357 1 132 1 319 2 241 1 290 1 358 1 208 2 251 1 42 1 
112 1 74 1 
112 2 260 1 116 2 327 1 370 1 19 1 319 2 208 2 42 1 
67 1 6 1 184 1 
112 1 33 1 295 1 213 1 80 1 90 1 140 1 5 1 357 1 362 1 132 1 319 1 241 1 290 1 208 1 358 1 
112 1 116 3 19 3 319 3 208 3 251 1 42 3 370 1 
15 1 228 1 116 1 19 1 319 1 208 1 42 1 
260 1 228 1 116 1 19 1 327 1 319 1 208 1 42 1 370 1 
112 1 360 1 68 1 116 3 213 1 170 1 118 1 90 1 5 1 120 1 362 1 290 1 319 4 250 1 251 1 292 1 32 1 55 1 33 1 197 2 151 1 58 1 35 1 228 1 295 1 201 1 327 1 36 1 200 1 80 1 233 1 370 2 104 1 19 3 357 1 277 1 332 1 132 1 241 1 358 1 208 4 84 1 42 3 111 1 
112 1 244 1 116 2 19 1 289 1 319 2 208 2 42 1 251 1 
228 1 35 1 68 1 116 3 327 1 200 1 201 1 36 1 126 1 233 1 370 1 237 1 19 3 250 1 319 3 208 3 251 2 42 3 32 1 
67 1 116 2 327 1 370 1 6 1 19 2 319 2 208 2 251 1 42 2 
112 1 33 1 295 1 213 1 80 1 90 1 5 1 357 1 362 1 132 1 319 1 241 1 290 1 208 1 358 1 
112 1 33 1 308 1 295 1 213 1 80 1 218 1 90 1 5 1 357 1 362 1 319 1 241 1 208 1 358 1 
67 2 215 1 89 1 49 1 222 1 6 2 146 1 292 1 55 1 197 2 96 1 151 1 58 2 199 1 184 2 103 2 82 1 374 1 41 1 277 4 332 1 376 1 84 1 111 1 
228 1 68 1 116 1 19 1 10 1 319 1 208 1 42 1 
112 1 244 1 35 1 116 5 327 1 328 1 370 1 195 1 19 4 289 1 319 5 208 5 251 2 42 4 
15 1 228 1 116 2 19 2 10 1 319 2 208 2 42 2 
366 1 198 1 
366 1 198 1 
77 1 107 1 
77 1 107 1 
77 1 107 1 
366 1 198 1 196 1 
366 1 198 1 343 1 
77 1 366 2 198 2 338 1 107 1 219 1 
366 1 198 1 196 1 
366 1 198 1 196 1 
366 1 265 1 198 1 
366 1 265 1 198 1 
366 1 265 1 198 1 
366 2 179 1 198 2 97 3 367 1 200 2 126 1 183 1 203 2 219 1 27 2 28 2 4 1 331 2 17 1 119 2 250 2 279 1 291 1 
112 1 179 1 366 1 198 1 97 1 116 2 200 1 168 1 341 1 343 1 203 1 255 1 27 1 28 1 18 1 119 1 19 2 256 1 319 2 250 1 208 2 42 2 226 1 124 1 
95 1 105 1 348 1 
105 1 245 1 348 1 
227 1 95 2 92 1 245 1 348 3 145 1 
95 1 92 1 245 1 348 2 145 1 323 1 
95 1 92 1 245 1 348 2 145 2 
337 4 312 1 261 1 168 1 215 1 263 2 89 1 3 1 48 1 71 1 222 1 141 1 250 5 322 1 364 1 124 1 226 1 152 3 78 1 125 2 200 5 126 2 61 1 300 2 275 3 106 2 374 1 257 1 242 1 186 1 336 1 243 1 
212 1 337 7 310 5 261 2 168 4 215 3 263 6 89 3 48 1 71 1 194 1 317 1 222 3 9 1 250 9 52 1 322 3 364 1 152 8 78 2 125 6 79 5 200 9 126 5 61 2 275 9 106 6 240 1 374 3 257 2 242 3 186 6 209 1 336 1 243 2 
337 2 312 1 261 1 168 1 215 1 263 2 48 1 89 1 3 1 222 1 250 3 322 2 152 3 78 1 125 2 200 3 126 3 61 1 300 1 275 4 106 2 240 1 374 1 257 1 242 1 243 1 
212 1 337 3 312 1 261 1 168 2 215 2 263 4 48 1 89 2 3 1 222 2 317 1 250 4 52 1 322 3 152 5 78 1 125 4 200 4 126 4 61 1 300 2 275 7 106 4 240 1 374 2 257 1 242 2 243 1 
295 1 356 1 74 1 
295 1 154 1 
144 1 
295 1 362 1 
356 2 295 3 362 1 358 1 205 1 217 1 
295 1 362 1 358 1 
295 1 352 1 
351 1 166 2 58 3 199 3 230 1 215 1 314 1 103 4 353 1 89 1 82 2 158 1 129 1 277 7 133 1 165 1 350 1 
351 1 166 2 58 3 199 3 230 1 215 1 314 1 103 4 353 1 89 1 82 2 158 1 129 1 277 7 133 1 165 1 350 1 
351 1 166 2 58 3 199 3 230 1 215 1 314 1 103 4 353 1 89 1 82 2 158 1 129 1 277 7 133 1 334 1 165 1 350 1 
166 3 284 3 25 1 26 1 215 4 314 2 89 4 222 3 346 1 11 1 252 1 350 1 292 1 55 1 351 1 197 2 58 15 199 10 229 1 155 4 368 1 230 2 103 16 353 1 82 5 158 2 129 2 374 3 277 31 332 1 133 1 242 3 111 1 165 5 
55 2 166 2 197 4 199 4 58 4 368 1 230 1 215 1 314 1 103 5 353 1 89 1 82 3 158 1 129 1 277 9 318 1 332 2 133 1 350 1 165 1 111 2 225 1 292 2 
280 1 66 1 43 1 24 1 213 1 245 1 46 1 88 1 90 1 5 1 7 1 348 2 175 1 13 1 293 1 148 1 227 1 95 1 80 1 16 1 60 1 329 2 238 1 371 1 105 1 357 1 109 1 110 2 377 1 380 1 
167 1 282 1 66 1 43 1 24 1 213 1 245 1 46 1 88 1 90 1 5 1 7 1 348 2 13 1 227 1 148 1 95 1 181 1 80 1 16 1 60 1 329 3 238 1 105 1 371 2 357 1 109 1 110 3 377 1 380 1 
282 1 24 1 43 1 213 1 245 1 46 1 88 1 90 1 5 1 348 2 13 1 148 1 227 1 95 1 181 1 80 1 60 1 329 2 238 1 371 2 105 1 357 1 109 1 110 2 380 1 
359 1 167 1 295 1 24 2 43 2 213 1 191 1 80 1 102 1 298 1 1 1 329 1 90 1 238 2 5 1 7 1 362 1 357 1 241 1 109 2 110 1 377 1 22 1 
280 1 66 1 43 1 24 1 213 1 245 1 46 1 88 1 90 1 5 1 7 1 348 2 293 1 148 1 227 1 95 1 181 1 80 1 16 1 329 1 238 1 105 1 357 1 109 1 110 1 377 1 
130 1 
244 1 281 1 0 1 1 1 2 1 48 1 90 1 5 1 250 5 57 2 14 2 56 2 152 2 295 1 153 1 200 5 101 1 157 1 61 1 204 1 354 4 106 2 357 2 302 2 257 1 258 2 208 1 259 1 359 1 115 1 68 1 69 2 116 1 213 2 261 1 71 3 223 1 362 1 31 1 319 1 122 2 322 2 32 1 228 1 78 1 80 2 36 1 126 2 182 1 233 1 275 2 186 6 241 2 335 1 336 1 
244 1 115 1 68 1 0 1 116 1 2 1 71 1 221 1 319 1 250 3 32 1 57 1 228 1 153 1 200 3 36 1 101 1 233 1 204 1 354 2 186 2 208 1 
244 1 115 1 68 1 0 1 116 1 69 1 2 1 48 1 71 1 221 1 319 1 250 3 32 1 228 1 153 1 200 3 36 1 101 1 126 1 233 1 204 1 354 3 186 1 208 1 
244 1 115 1 68 1 0 1 116 1 69 1 2 1 48 1 71 1 221 1 319 1 250 3 122 1 32 1 57 1 228 1 153 1 200 3 36 1 101 1 126 1 233 1 204 1 354 3 186 2 208 1 
244 1 281 1 0 1 2 1 48 5 250 5 349 1 57 4 56 2 14 2 152 1 153 1 200 5 101 1 204 1 61 1 157 1 299 1 354 6 106 1 257 1 302 2 258 2 208 1 115 1 68 1 116 1 69 4 70 1 71 3 221 1 319 1 122 4 322 2 32 1 180 1 228 1 78 1 38 1 36 1 126 5 233 1 186 7 336 1 
244 1 281 1 0 1 2 1 48 1 250 4 56 2 14 2 57 2 152 1 153 1 200 4 101 1 61 1 204 1 157 1 354 4 106 1 257 1 302 2 258 2 208 1 115 1 68 1 116 1 69 2 71 2 319 1 122 2 322 2 32 1 228 1 78 1 36 1 182 1 126 2 233 1 275 2 186 4 336 1 
244 1 281 1 115 1 68 1 0 1 69 2 116 1 2 1 48 1 71 2 319 1 250 4 122 2 322 2 349 1 32 1 180 1 57 2 14 2 56 2 152 1 228 1 78 1 153 1 200 4 36 1 126 1 101 1 157 1 233 1 204 1 61 1 299 1 354 4 106 1 302 2 257 1 186 4 258 2 208 1 336 1 
244 1 281 1 115 1 68 1 0 1 69 2 116 1 2 1 48 1 71 2 319 1 250 4 122 2 322 2 349 1 32 1 180 1 57 2 14 2 56 2 152 1 228 1 78 1 153 1 200 4 36 1 126 1 101 1 157 1 233 1 204 1 61 1 299 1 354 4 106 1 302 2 257 1 186 4 258 2 208 1 336 1 
244 1 115 1 68 1 0 1 69 2 137 1 116 1 2 1 48 1 71 2 344 2 248 1 319 1 250 4 122 2 32 1 57 2 14 2 56 2 152 1 228 1 78 1 153 1 200 4 36 1 126 1 100 2 101 1 157 1 233 1 204 1 61 1 299 1 354 4 275 2 106 1 257 1 186 4 208 1 85 1 336 1 
244 1 281 1 115 1 68 1 0 1 116 1 69 3 70 1 2 1 48 1 71 2 319 1 250 4 122 3 322 2 349 1 32 1 180 1 14 2 56 2 57 3 152 1 228 1 78 1 153 1 200 4 36 1 126 1 101 1 157 1 61 1 233 1 204 1 299 1 354 5 106 1 302 2 257 1 258 2 186 5 208 1 336 1 
244 1 281 1 115 1 68 1 0 1 116 1 69 3 70 1 2 1 48 1 71 2 319 1 250 4 122 3 322 2 349 1 32 1 180 1 14 2 56 2 57 3 152 1 228 1 78 1 153 1 200 4 36 1 126 1 101 1 157 1 61 1 233 1 204 1 299 1 354 5 106 1 302 2 257 1 258 2 186 5 208 1 336 1 
244 1 0 1 137 1 2 1 48 1 344 2 250 4 56 2 14 2 57 2 152 1 153 1 200 4 101 1 100 2 61 1 204 1 157 1 354 4 106 1 257 1 208 1 115 1 68 1 116 1 69 2 71 2 319 1 122 2 32 1 228 1 78 1 36 1 182 1 126 1 233 1 275 2 186 4 336 1 
112 2 166 1 67 1 215 1 314 1 89 1 6 1 74 1 350 1 146 1 292 1 55 1 197 2 151 1 199 2 58 3 184 1 103 3 353 1 82 2 129 1 277 6 332 1 133 1 84 1 111 1 
112 1 284 3 67 4 215 2 89 1 6 11 222 1 347 1 11 1 143 1 176 1 292 2 55 2 197 4 151 1 199 2 58 6 229 1 155 3 184 11 103 8 236 1 104 1 82 1 128 1 374 2 277 14 332 2 242 2 84 2 165 1 188 1 111 2 
112 1 136 1 67 1 116 1 213 1 90 1 5 1 140 1 345 1 362 1 347 1 290 1 319 2 143 1 251 1 292 1 55 1 33 1 197 2 151 1 35 1 58 1 295 1 80 1 103 1 104 1 40 1 357 1 19 1 277 2 132 1 332 1 241 1 358 1 208 2 84 1 42 1 111 1 
192 1 89 3 90 2 5 2 6 7 347 1 290 2 143 1 94 1 251 1 350 1 292 3 55 3 197 6 151 3 58 10 199 8 295 2 103 10 353 1 104 1 357 3 19 1 208 3 358 2 111 3 165 4 112 2 166 1 307 2 67 7 116 1 213 3 170 2 215 3 314 1 361 1 222 2 362 2 319 3 177 2 33 2 181 1 34 2 35 1 80 3 184 7 127 2 82 4 129 1 374 2 277 20 332 3 132 2 133 1 241 1 242 2 42 1 84 3 
359 1 116 1 213 8 190 1 1 1 90 2 139 1 5 2 362 2 347 1 319 1 251 1 175 1 146 1 292 2 54 1 55 2 197 4 181 1 151 2 58 1 295 3 80 8 202 1 369 1 103 1 104 1 276 2 19 1 357 7 277 2 332 2 241 2 208 1 278 1 21 1 42 1 84 2 111 2 
67 1 116 1 215 1 89 1 6 1 222 1 319 1 143 1 75 1 292 1 55 1 197 2 151 1 199 1 58 2 327 1 184 1 370 1 103 1 82 1 19 1 374 1 277 3 332 1 242 1 208 1 42 1 84 1 111 1 
55 1 197 2 151 1 199 1 67 1 215 1 184 1 103 2 49 1 6 1 374 1 277 2 332 1 84 1 165 1 146 1 111 1 292 1 
55 1 197 2 151 1 96 1 199 1 67 1 58 2 184 1 89 1 82 1 6 1 222 1 277 2 332 1 84 1 146 1 111 1 292 1 
67 2 215 1 89 1 6 2 222 1 146 1 292 1 55 1 197 2 151 1 199 2 58 2 184 2 103 2 82 1 374 1 277 4 332 1 242 1 84 1 111 1 165 1 
55 1 197 2 151 1 199 1 67 1 215 1 184 1 103 2 49 1 6 1 374 1 277 2 332 1 84 1 165 1 111 1 54 1 292 1 
55 1 197 2 151 1 96 1 199 1 67 1 58 2 184 1 89 1 82 1 6 1 222 1 277 2 332 1 84 1 111 1 54 1 292 1 
67 2 215 1 89 1 6 2 222 1 292 1 54 1 55 1 197 2 151 1 199 2 58 2 184 2 103 2 82 1 374 1 277 4 332 1 242 1 84 1 111 1 165 1 
67 2 215 1 89 1 6 2 222 1 292 1 55 1 197 2 151 1 199 2 58 2 184 2 103 2 82 1 374 1 277 4 332 1 242 1 84 1 111 1 165 1 
112 1 213 1 170 1 90 1 5 1 362 1 347 1 290 1 319 1 292 1 55 1 33 1 197 2 151 1 58 1 295 1 80 1 103 1 104 1 357 1 277 2 132 1 332 1 241 1 358 1 208 1 84 1 111 1 
112 1 308 1 213 1 218 1 90 1 5 1 362 1 347 1 319 1 292 1 55 1 33 1 197 2 151 1 58 1 295 1 80 1 103 1 234 1 104 1 357 1 277 2 332 1 241 1 358 1 208 1 84 1 111 1 
67 2 215 1 89 1 6 2 222 1 143 1 292 1 55 1 197 2 151 1 199 2 58 2 184 2 103 2 82 1 374 1 277 4 332 1 242 1 84 1 111 1 165 1 
67 2 213 1 170 1 215 1 89 1 90 1 5 1 222 1 6 2 362 1 290 1 319 1 175 1 292 1 55 1 33 1 197 2 34 1 151 1 58 2 199 2 295 1 80 1 184 2 103 2 82 1 374 1 357 1 277 4 132 1 332 1 242 1 358 1 208 1 84 1 165 1 111 1 
67 1 116 1 215 1 89 1 222 1 6 1 319 1 143 1 174 1 292 1 55 1 197 2 151 1 58 1 199 1 327 1 184 1 370 1 103 2 19 1 374 1 277 3 332 1 242 1 208 1 42 1 84 1 165 1 111 1 
305 1 284 1 214 1 215 2 89 2 266 1 222 2 318 1 269 1 11 1 292 2 55 2 197 4 58 7 199 2 229 1 155 2 273 1 103 6 82 1 374 2 277 13 332 2 303 1 242 2 304 1 210 1 111 2 165 1 
305 2 284 2 311 1 44 1 215 3 89 2 72 1 222 2 318 1 269 1 12 1 292 3 253 1 76 1 55 3 197 6 199 3 58 12 229 2 155 2 368 2 273 4 103 14 82 1 83 1 374 3 277 26 332 3 303 1 242 3 304 2 210 1 165 2 111 3 
305 1 284 1 311 1 214 1 215 2 89 1 222 1 318 1 269 1 11 1 292 2 55 2 197 4 58 6 199 2 229 1 155 2 273 2 103 7 82 1 374 2 277 13 332 2 303 1 242 2 304 1 210 1 111 2 165 1 
305 1 284 1 311 1 214 1 215 2 89 1 222 1 318 1 269 1 11 1 292 2 55 2 197 4 58 6 199 2 229 1 155 2 273 2 103 7 82 1 374 2 277 13 332 2 303 1 242 2 304 1 210 1 111 2 165 1 
305 1 166 1 284 4 311 1 44 1 215 8 314 1 89 8 72 1 222 7 318 1 269 1 11 2 12 1 350 1 253 1 292 2 76 1 55 2 197 4 58 25 199 12 229 2 155 4 368 1 273 4 103 27 353 1 82 6 129 1 83 1 374 7 277 52 332 2 303 1 133 1 242 7 304 1 210 1 188 2 111 2 165 6 
28 1 27 1 366 1 198 1 119 1 279 1 291 1 363 1 203 1 219 1 
18 1 343 1 
28 1 27 1 366 1 198 1 119 1 287 1 272 1 268 1 203 1 
179 1 366 1 198 1 97 2 367 1 200 1 126 1 183 1 203 1 219 1 27 1 28 1 331 1 17 1 119 1 250 1 279 1 291 1 
179 1 366 1 198 1 97 2 367 1 200 1 126 1 183 1 203 1 219 1 27 1 28 1 331 1 17 1 119 1 250 1 279 1 291 1 
179 1 366 1 198 1 97 2 367 1 200 1 126 1 183 1 203 1 219 1 27 1 28 1 331 1 17 1 119 1 250 1 279 1 291 1 
338 1 196 1 39 1 
338 1 196 1 39 1 
265 1 232 1 
265 1 338 1 232 1 
256 1 341 1 
112 1 337 1 116 2 168 1 341 1 285 1 343 1 28 1 27 1 119 1 319 2 250 1 124 1 226 1 366 1 198 1 97 1 200 1 203 1 255 1 331 1 17 1 18 1 19 2 256 1 208 2 42 2 
196 1 39 1 
265 1 338 1 232 1 
113 1 116 2 213 2 90 1 5 1 362 1 347 1 319 2 143 1 178 1 292 1 55 1 197 2 151 1 58 1 295 1 80 2 369 1 103 1 235 1 330 1 104 1 276 2 357 2 277 2 332 1 162 1 208 2 278 1 84 1 111 1 
227 1 95 1 181 1 213 2 80 2 245 1 16 1 46 1 88 1 90 1 238 1 5 1 105 1 373 1 357 2 93 1 348 2 175 1 163 1 
227 1 95 1 181 1 213 1 80 1 245 1 16 1 46 1 62 1 88 1 238 1 90 1 5 1 105 1 357 1 93 1 348 2 
149 1 359 1 295 1 213 1 80 1 298 1 1 1 90 1 238 1 5 1 373 1 362 1 357 1 241 1 
227 1 95 1 181 1 213 1 80 1 245 1 16 1 46 1 88 1 238 1 90 1 5 1 105 1 373 1 357 1 93 1 348 2 163 1 
8 1 
48 1 152 1 106 1 74 1 30 1 126 1 231 1 
281 1 152 1 78 1 200 1 126 2 61 1 48 1 275 1 71 1 106 1 302 1 257 1 250 1 186 1 258 1 322 1 336 1 
283 2 87 1 48 2 89 2 90 3 5 4 288 2 250 5 294 1 152 9 295 10 154 3 99 2 200 5 352 2 61 4 356 2 106 8 357 3 257 4 358 3 164 1 23 1 213 3 261 2 215 2 316 2 263 6 217 1 71 3 222 2 223 1 30 1 362 3 267 1 175 1 322 6 32 2 78 4 125 6 80 3 126 8 231 1 81 2 127 2 275 12 239 2 374 2 241 1 186 5 242 2 379 2 378 2 336 4 
306 1 114 1 283 2 284 1 261 1 44 1 215 2 263 5 89 2 48 2 71 1 72 1 222 2 223 1 250 1 322 3 12 1 253 1 152 8 78 2 125 5 229 1 200 1 155 1 126 5 61 2 275 6 106 5 83 1 374 2 257 2 186 1 242 2 378 1 336 2 
283 2 116 1 215 2 314 1 216 1 118 1 89 1 193 1 319 1 250 1 324 1 180 1 15 1 228 1 152 2 78 1 200 1 61 1 370 1 353 1 129 1 106 2 19 1 257 1 208 1 42 1 378 1 336 1 
152 1 78 1 126 1 231 1 61 1 48 1 106 1 30 1 257 1 336 1 
283 2 152 5 125 5 126 5 215 2 263 5 127 1 275 10 89 2 222 2 106 5 374 2 242 2 378 1 322 5 
48 1 71 1 200 1 126 1 250 1 186 1 
359 1 138 1 213 4 261 2 313 1 286 1 1 1 71 2 90 2 5 3 223 2 362 2 142 1 267 2 250 3 150 1 294 1 152 2 295 2 78 2 297 1 80 4 200 3 61 2 106 2 240 1 357 4 257 2 241 2 186 4 358 1 259 1 335 1 336 1 
112 1 360 1 116 2 213 1 170 1 118 1 90 1 5 1 362 1 319 3 290 1 292 1 55 1 33 1 197 2 151 1 58 1 295 1 80 1 370 2 104 1 357 1 19 2 277 1 332 1 132 1 241 1 208 3 358 1 42 2 84 1 111 1 
166 1 152 1 78 1 125 2 261 1 126 4 61 1 263 2 275 4 48 2 106 2 223 1 257 1 322 2 336 1 
28 1 37 1 203 1 
28 1 254 1 279 1 341 1 203 1 
28 1 37 1 203 1 
28 1 37 1 203 1 
86 1 28 1 203 1 
86 1 28 1 203 1 
86 1 28 1 203 1 
28 1 203 1 
366 1 198 1 
55 2 166 1 197 4 58 4 199 3 368 1 215 1 314 1 103 4 353 1 89 1 82 2 129 1 277 8 332 2 133 1 165 1 111 2 350 1 292 2 
166 1 58 3 199 2 215 1 314 1 103 3 353 1 89 1 82 2 129 1 74 1 277 6 133 1 350 1 
55 1 197 2 58 2 199 2 215 1 103 2 89 1 82 1 222 1 374 1 277 4 332 1 242 1 111 1 165 1 147 1 292 1 
58 4 284 1 199 2 229 1 155 2 215 1 103 3 89 1 82 1 222 1 374 1 277 7 11 1 242 1 165 1 
166 1 284 2 215 3 314 2 89 3 222 2 11 1 224 1 350 1 292 2 55 2 197 4 199 9 58 12 155 2 368 2 103 11 353 1 236 1 82 5 129 2 374 2 277 23 332 2 133 1 242 2 165 4 188 1 111 2 
58 1 277 1 155 1 
284 1 277 1 103 1 
55 1 197 2 58 3 199 3 215 1 103 3 127 1 89 1 82 2 222 1 374 1 277 6 332 1 242 1 111 1 165 1 292 1 147 1 
284 1 44 1 215 2 89 2 72 1 222 2 318 1 12 1 253 1 292 1 55 1 197 2 58 6 199 2 229 1 155 1 103 6 82 1 83 1 374 2 277 12 332 1 242 2 165 1 111 1 
58 3 199 2 215 1 314 1 103 3 353 1 89 1 82 1 129 1 277 6 165 1 
55 1 197 2 199 2 58 2 368 1 314 1 103 1 82 1 129 1 277 3 332 1 133 1 224 1 165 1 111 1 350 1 292 1 
55 1 324 1 197 2 199 5 58 5 215 2 314 2 103 5 353 1 89 2 82 3 129 2 318 1 277 10 332 1 111 1 165 2 292 1 
55 1 197 2 199 1 215 1 103 2 374 1 318 1 277 2 332 1 111 1 165 1 292 1 
55 1 197 2 58 2 199 2 215 1 103 2 89 1 82 1 222 1 374 1 318 1 277 4 332 1 242 1 111 1 165 1 292 1 
55 3 197 6 58 2 199 2 214 1 368 1 314 1 103 1 82 1 129 1 277 3 318 1 332 3 224 1 111 3 165 1 292 3 
166 1 284 3 25 1 26 1 214 1 215 5 314 3 89 5 222 3 318 1 11 1 224 1 252 1 350 1 147 1 292 5 55 5 197 10 58 18 199 12 229 1 155 4 368 2 103 16 353 2 82 7 129 3 374 3 277 34 332 5 133 1 242 3 111 5 165 5 
166 1 284 1 215 1 314 1 89 1 318 1 350 1 253 1 292 1 55 1 197 2 58 4 199 2 229 1 155 1 103 4 353 1 82 2 129 1 277 8 332 1 133 1 111 1 
166 1 284 1 215 2 314 1 89 1 318 1 11 1 350 1 253 1 292 2 147 1 55 2 197 4 58 5 199 3 229 1 155 2 103 6 353 1 82 2 129 1 374 1 277 11 332 2 133 1 242 1 111 2 165 1 
166 1 284 1 44 1 215 3 314 1 89 3 72 1 222 2 318 1 12 1 350 1 147 1 253 1 292 3 55 3 197 6 58 10 199 4 229 1 155 1 368 1 103 9 353 1 82 3 129 1 83 1 374 2 277 19 332 3 133 1 242 2 165 1 111 3 
166 1 284 1 44 1 215 3 314 1 89 2 72 1 222 1 318 1 12 1 350 1 147 1 253 1 292 3 55 3 197 6 58 7 199 5 229 1 155 1 368 1 103 10 353 1 82 3 129 1 83 1 374 2 277 17 332 3 133 1 242 2 165 2 111 3 
166 1 284 1 215 1 314 1 89 1 318 1 350 1 253 1 292 1 55 1 197 2 58 4 199 2 229 1 155 1 103 4 353 1 82 2 129 1 277 8 332 1 133 1 111 1 
284 1 44 1 215 2 89 2 72 1 222 2 318 1 12 1 253 1 292 1 55 1 197 2 58 6 199 2 229 1 155 1 103 6 82 1 83 1 374 2 277 12 332 1 242 2 165 1 111 1 
166 1 284 1 44 1 215 3 314 1 89 2 72 1 222 1 318 1 12 1 350 1 253 1 147 1 292 4 55 4 197 8 58 8 199 5 229 1 155 1 368 2 103 10 353 1 82 3 129 1 83 1 374 2 277 18 332 4 133 1 242 2 165 2 111 4 
284 1 214 1 44 1 215 3 89 2 72 1 222 2 318 1 12 1 253 1 292 4 55 4 197 8 58 7 199 6 229 1 155 1 368 2 103 9 82 3 83 1 374 3 277 16 332 4 242 3 165 3 111 4 
58 4 199 6 215 1 314 3 103 3 353 1 89 1 82 3 129 3 277 7 133 2 350 1 165 3 
166 1 284 1 214 1 44 1 215 3 314 1 89 2 72 1 222 1 318 1 12 1 350 1 253 1 292 4 55 4 197 8 58 8 199 4 229 1 155 1 368 2 103 10 353 1 82 3 129 1 83 1 374 2 277 18 332 4 133 1 242 2 165 1 111 4 
112 1 244 1 116 1 289 1 319 1 108 1 208 1 
112 1 244 1 309 1 116 1 169 1 159 1 91 1 375 1 289 1 108 1 319 1 208 1 
359 1 90 1 5 1 295 1 74 1 362 1 213 1 357 1 80 1 241 1 1 1 
112 1 33 1 295 1 116 1 213 1 80 1 90 1 5 1 362 1 19 1 357 1 132 1 319 2 241 1 358 1 208 2 251 1 42 1 
112 1 33 1 228 1 68 1 295 3 116 2 213 1 36 1 80 1 352 1 90 1 5 1 362 2 19 2 357 1 267 1 132 1 319 2 358 2 208 2 251 1 42 1 379 1 
112 1 68 1 116 2 213 2 218 1 90 1 5 1 362 2 267 1 173 1 319 2 251 1 33 1 228 1 295 3 80 2 36 1 352 1 357 2 19 2 208 2 358 2 42 1 379 1 
116 1 213 2 216 1 262 1 118 1 48 1 90 1 193 1 5 1 362 1 267 1 319 1 250 2 32 1 15 1 228 1 295 4 154 1 80 2 200 2 126 1 352 1 370 1 356 1 372 1 19 1 357 2 241 1 186 1 208 1 358 1 42 1 379 1 
295 4 213 3 154 1 200 2 80 3 99 1 126 1 352 1 48 1 90 1 5 1 356 1 362 1 357 3 267 1 173 1 241 1 250 2 186 1 358 1 379 1 32 1 
90 1 5 1 213 1 357 1 80 1 202 1 
270 1 181 1 295 3 213 7 190 1 80 7 202 1 313 1 369 1 286 1 217 1 90 2 139 1 5 3 276 1 357 6 362 2 241 2 358 1 21 1 175 1 
112 2 113 1 166 1 307 1 67 1 116 1 213 1 170 1 215 1 314 1 89 1 90 1 5 1 6 1 362 1 319 2 290 1 143 1 251 1 175 1 350 1 292 2 55 2 33 1 197 4 151 2 34 1 58 3 199 2 295 1 80 1 184 1 103 3 353 1 82 2 129 1 19 1 357 1 277 6 332 2 132 1 133 1 358 1 208 2 84 2 42 1 111 2 
337 1 213 1 316 1 48 1 71 1 30 1 288 1 250 3 32 1 294 1 152 1 78 2 295 2 154 1 200 3 80 1 99 1 126 1 231 1 81 1 61 2 106 1 356 1 357 1 257 2 241 1 186 2 336 2 
295 2 213 2 80 2 202 1 217 1 90 1 5 2 356 1 357 2 362 1 358 1 175 1 164 1 
359 1 295 1 213 4 80 4 1 1 90 1 5 1 357 4 362 1 173 1 241 1 187 1 175 1 
150 1 295 1 213 2 297 1 80 2 313 1 286 1 361 1 90 1 5 2 357 2 362 1 267 1 358 1 
90 1 5 1 105 1 213 1 357 1 80 1 245 1 241 1 348 1 88 1 
90 1 5 1 181 1 295 1 362 1 213 2 357 2 80 2 369 1 175 1 235 1 
359 1 295 3 213 5 80 5 190 1 369 1 1 1 90 2 5 2 357 4 362 2 267 1 241 1 187 1 21 1 175 1 
359 1 295 3 213 5 80 5 369 1 1 1 90 2 5 2 357 4 362 2 267 1 241 1 187 1 21 1 175 1 365 1 
112 1 33 1 295 1 116 1 213 1 80 1 218 1 90 1 5 1 362 1 19 1 357 1 319 2 241 1 358 1 208 2 251 1 42 1 
270 1 295 1 213 1 80 1 313 1 286 1 217 1 90 1 5 2 357 1 362 1 267 1 358 1 
112 1 29 1 249 1 301 1 53 1 
112 1 337 1 228 1 68 1 189 1 36 1 200 2 201 1 339 1 126 1 45 1 233 1 48 1 29 2 301 2 249 2 250 2 53 1 32 1 
116 1 330 1 29 1 301 1 319 1 162 1 208 1 53 1 178 1 
339 1 45 1 53 1 
74 1 60 1 380 1 13 1 
7 1 110 1 60 1 377 1 380 1 329 1 13 1 
24 1 43 1 329 1 
280 1 296 1 60 1 329 3 7 1 121 1 110 3 377 1 333 1 380 1 123 2 13 1 
371 1 7 1 20 1 110 2 60 1 377 1 380 1 329 2 13 1 
280 1 135 1 95 1 329 1 7 1 105 1 131 1 110 1 348 1 377 1 380 1 
280 1 7 1 110 1 60 1 377 1 380 1 329 1 
280 1 7 1 110 1 60 2 377 1 329 1 13 1 
280 1 60 1 247 1 329 2 220 1 7 2 110 2 377 2 380 1 211 1 
280 1 60 1 329 1 7 1 160 1 172 1 110 1 377 1 13 1 
280 1 227 1 95 1 245 1 60 1 329 2 7 1 105 1 371 1 50 1 348 2 110 2 377 1 380 1 13 1 
280 1 135 1 117 1 60 1 329 4 246 1 7 2 371 2 20 1 110 4 377 2 380 2 13 1 
280 1 7 1 110 1 60 1 377 1 380 1 329 1 13 1 
135 1 60 2 329 4 246 1 371 2 7 1 172 1 121 1 110 4 333 1 377 1 123 1 380 3 13 2 
280 1 60 1 342 1 329 2 171 1 7 1 371 1 110 2 377 1 321 1 380 1 13 1 
280 1 60 1 274 1 329 3 7 1 121 2 110 3 333 1 377 1 380 1 123 2 13 1 
73 1 98 2 51 1 380 2 
280 1 64 1 7 1 110 1 377 1 329 1 
280 1 371 1 7 1 161 1 110 2 60 1 377 1 380 1 329 2 13 1 
185 1 
280 1 7 1 110 1 60 1 377 1 380 1 329 1 13 1 
280 1 60 1 329 3 371 1 7 1 161 1 110 3 377 1 123 1 380 1 13 1 
135 1 172 1 380 1 246 1 
60 1 380 1 

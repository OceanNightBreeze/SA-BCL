#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 298 355 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 298 355 133 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 306 348 299 89 349 158 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 306 348 299 89 349 158 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 306 348 299 89 349 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 298 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 306 348 299 89 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 306 348 299 89 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 306 348 299 89 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 2 2 2 102 1 105 1 28 1 185 2 126 4 130 1 300 1 9 1 87 5 11 2 323 9 257 1 285 1 260 1 287 3 288 1 352 6 198 1 262 2 40 1 41 1 199 2 97 1 77 2 242 9 290 1 
101 2 2 2 102 1 105 1 28 1 185 2 126 4 130 1 300 1 9 1 87 5 11 2 323 9 257 1 285 1 260 1 287 3 288 1 352 6 198 1 262 2 40 1 41 1 199 2 97 1 77 2 242 9 290 1 
101 2 2 2 102 1 105 1 28 1 185 2 126 5 130 1 300 1 9 1 87 6 11 2 323 10 257 1 285 1 260 1 287 4 288 1 352 7 198 1 262 2 40 1 41 1 199 2 97 1 77 2 242 10 290 1 
101 2 2 2 102 1 105 1 28 1 185 2 126 3 130 1 300 1 9 1 87 4 11 2 323 7 257 1 285 1 260 1 287 2 288 1 352 4 198 1 262 2 40 1 41 1 199 1 77 2 242 7 290 1 
101 1 285 1 102 1 260 1 287 1 352 3 262 1 185 1 40 1 126 2 199 2 97 1 77 1 242 4 87 3 11 1 290 1 323 4 
101 1 117 1 2 1 119 1 260 1 262 1 185 1 40 1 130 1 300 1 242 2 87 1 11 1 290 1 323 2 100 1 
101 2 2 1 260 1 287 1 288 1 352 1 262 2 40 1 126 1 242 3 87 2 290 1 323 3 
101 2 2 1 102 1 28 1 185 1 126 4 166 1 87 5 11 1 323 9 257 1 285 1 260 1 287 3 288 1 352 7 262 2 96 1 40 1 199 2 97 1 77 1 242 9 290 1 
101 2 2 1 102 1 28 1 185 1 126 4 166 1 87 5 11 1 323 9 257 1 285 1 260 1 287 3 288 1 352 7 262 2 96 1 40 1 199 2 97 1 77 1 242 9 290 1 
350 1 67 1 222 1 
67 1 94 2 344 1 
258 2 143 1 246 2 145 2 78 2 140 2 48 1 83 2 
206 2 143 1 161 1 162 1 121 1 295 1 103 1 51 1 104 2 246 3 341 1 145 3 278 1 228 1 83 2 6 1 86 1 108 1 281 1 88 1 193 1 324 1 258 2 259 1 69 1 264 1 354 1 270 2 20 1 312 2 138 2 78 2 140 2 115 1 24 1 48 1 292 1 
258 1 143 1 301 1 246 1 136 1 82 1 145 1 78 1 140 1 83 1 
293 1 67 1 222 1 246 1 225 1 343 1 145 1 82 1 248 1 269 1 178 1 78 1 256 1 160 1 
258 1 67 1 222 1 246 1 225 2 145 1 82 1 248 1 83 1 269 2 178 1 140 1 78 1 256 1 160 1 
49 1 269 1 331 1 225 1 17 1 
49 1 269 2 67 1 222 1 85 1 225 2 243 1 17 1 
49 1 269 1 225 1 
143 1 258 1 246 1 225 1 82 1 17 1 145 1 83 1 269 1 301 1 303 1 136 1 140 1 78 1 
67 1 
49 1 269 2 67 1 222 1 253 1 225 2 243 1 17 1 
49 2 328 1 67 1 222 1 153 1 154 2 225 5 17 2 309 1 165 1 151 1 187 2 269 5 168 2 255 1 280 1 243 1 216 1 36 1 
350 1 48 1 
258 1 275 1 246 2 145 2 83 1 233 1 78 2 140 1 48 2 
205 1 72 1 277 1 
206 1 324 1 161 1 121 1 246 1 341 1 145 1 228 1 278 1 6 1 270 1 108 1 138 1 48 1 193 1 180 1 
205 1 206 1 324 1 161 1 121 1 246 2 341 1 145 2 278 1 228 1 83 1 6 1 270 1 108 1 138 1 140 1 78 1 192 1 337 1 193 1 
258 1 246 3 145 3 78 3 140 3 337 1 48 1 83 3 
246 1 136 1 82 1 145 1 78 1 140 1 83 1 
258 1 275 1 246 1 82 1 233 1 145 1 78 1 140 1 83 1 
206 1 143 1 161 1 162 1 121 1 103 1 104 2 275 1 246 4 341 1 225 1 145 4 82 1 248 1 278 1 228 1 83 3 6 1 108 1 305 1 281 1 256 1 192 1 88 1 193 1 324 1 258 2 259 1 173 1 264 1 354 1 269 1 270 1 178 1 312 1 138 1 78 3 140 3 115 1 24 1 337 1 48 1 292 1 160 1 
156 1 246 2 343 1 145 2 78 2 140 1 337 1 48 1 83 1 
258 1 26 1 67 1 173 1 275 1 246 3 225 1 248 1 82 1 145 3 83 3 269 1 178 1 140 3 78 3 256 1 192 1 337 2 160 1 
205 1 258 1 275 1 246 2 145 2 78 2 140 2 277 1 337 1 83 2 
206 1 324 1 161 1 121 1 246 1 341 1 145 1 228 1 278 1 6 1 270 1 108 1 138 1 48 1 193 1 
206 1 325 1 161 1 121 1 246 1 341 1 145 1 228 1 278 1 6 1 270 1 138 1 32 1 48 1 193 1 
205 2 120 1 162 1 295 2 224 1 103 1 104 2 277 2 167 1 231 1 281 1 88 2 306 1 259 1 234 1 307 1 264 1 72 2 74 1 137 1 312 4 99 1 313 1 292 1 
246 1 304 1 82 1 145 1 78 1 140 1 160 1 83 1 
258 1 91 1 182 1 275 1 246 5 343 1 145 5 83 4 156 1 140 4 78 5 337 2 192 1 48 1 
246 2 304 1 136 1 82 1 145 2 78 2 140 2 83 2 
279 1 208 1 
279 1 208 1 
181 1 63 1 
181 1 63 1 
181 1 63 1 
279 1 208 1 201 1 
279 1 208 1 201 1 
279 1 208 1 112 1 
181 1 37 1 279 2 208 2 289 1 63 1 
279 1 208 1 201 1 
279 1 208 1 116 1 
279 1 208 1 116 1 
279 1 208 1 116 1 
355 1 213 1 279 1 208 1 23 1 298 1 
355 1 213 1 279 1 269 1 208 1 225 1 133 1 23 1 298 1 
77 1 11 1 185 1 
119 1 11 1 185 1 
230 1 119 1 207 1 274 1 77 2 185 3 
119 1 207 1 274 1 77 1 8 1 185 2 
119 1 207 2 274 1 77 1 185 2 
49 1 338 2 224 1 222 1 225 5 147 1 251 2 344 2 211 1 252 1 187 1 345 1 168 1 254 1 189 1 255 3 216 2 306 1 348 1 67 2 94 2 154 1 17 4 309 1 42 1 266 1 269 5 267 2 44 1 137 1 99 1 243 1 291 1 
49 6 338 6 122 1 224 3 222 1 339 1 225 9 226 1 251 6 344 6 211 2 252 4 187 2 188 1 345 1 168 2 254 2 189 3 255 8 216 6 306 3 36 1 348 3 67 5 94 6 154 2 17 7 330 5 309 1 269 9 43 1 331 5 47 1 137 3 336 1 99 3 243 1 
338 2 222 1 224 1 225 3 251 2 344 2 211 1 252 1 187 1 168 1 254 1 189 1 255 3 216 2 306 1 36 1 348 1 67 3 94 2 154 1 17 2 269 3 267 1 43 1 44 1 137 1 99 1 291 1 
338 4 222 1 224 2 225 4 226 1 251 4 344 4 211 1 252 2 187 1 188 1 168 1 254 1 189 2 255 5 216 4 306 2 36 1 348 2 67 4 94 4 154 1 17 3 269 4 267 2 43 1 44 1 47 1 137 2 99 2 291 1 
6 1 240 1 350 1 
6 1 329 1 
118 1 
6 1 341 1 
240 2 6 3 31 1 351 1 341 1 278 1 
6 1 341 1 278 1 
6 1 159 1 
171 1 120 2 224 1 223 1 295 4 70 2 148 1 39 1 263 1 56 1 167 3 302 1 60 1 137 1 312 7 88 3 245 1 
171 1 120 2 224 1 223 1 295 4 70 2 148 1 39 1 263 1 56 1 167 3 302 1 60 1 137 1 312 7 88 3 245 1 
171 1 120 2 224 1 223 1 295 4 70 2 148 1 39 1 263 1 56 1 167 3 302 1 60 1 320 1 137 1 312 7 88 3 245 1 
120 5 162 1 103 1 295 16 223 2 224 4 104 2 124 1 148 2 125 1 30 1 56 5 167 10 302 1 60 1 61 1 88 15 12 1 306 3 348 3 171 1 259 1 65 1 174 1 70 3 263 1 39 2 356 4 114 3 312 31 137 4 99 3 245 2 292 1 
120 3 162 2 224 1 103 2 295 5 223 1 104 4 317 1 148 1 30 1 56 1 167 4 302 1 60 1 88 4 259 2 70 2 263 1 39 1 137 1 312 9 200 1 292 2 245 1 
206 1 101 1 2 1 161 1 119 1 294 1 296 1 185 2 230 1 87 1 11 1 323 2 193 1 13 1 260 1 38 1 352 1 353 1 262 1 40 1 218 1 219 1 270 1 333 1 46 1 77 1 138 1 242 2 290 1 315 1 
206 1 101 1 2 1 161 1 119 1 294 1 296 1 149 1 185 2 230 1 87 1 11 1 323 3 193 1 134 1 38 1 175 1 352 2 353 1 262 1 40 1 218 1 219 1 270 1 333 1 77 1 138 1 242 3 290 1 315 1 
206 1 2 1 161 1 119 1 294 1 296 1 185 2 230 1 87 1 11 1 323 2 193 1 134 1 38 1 175 1 352 2 353 1 40 1 218 1 270 1 77 1 138 1 242 2 290 1 315 1 
101 1 206 1 152 1 90 1 2 2 161 1 92 1 341 1 38 2 262 1 250 1 149 1 228 1 218 2 6 1 270 1 21 1 242 1 138 1 193 1 315 2 323 1 142 1 
101 1 134 1 206 1 2 1 119 1 161 1 294 1 260 1 38 1 296 1 353 1 262 1 185 2 218 1 219 1 230 1 270 1 333 1 46 1 77 1 242 1 138 1 11 1 193 1 323 1 315 1 
318 1 
49 6 222 1 225 5 145 1 55 2 227 1 228 2 106 1 6 1 187 1 107 2 59 1 7 1 190 1 191 1 193 1 284 1 67 2 195 2 109 2 110 1 154 1 111 1 21 1 243 3 78 1 160 1 206 2 161 1 293 1 246 1 341 1 343 1 82 1 248 1 344 2 214 2 168 1 254 1 255 2 256 1 216 2 33 2 35 4 172 2 93 1 94 2 95 1 309 1 269 5 270 2 178 1 138 2 358 1 142 1 
49 2 284 1 293 1 195 1 93 1 246 1 225 3 95 1 248 1 82 1 343 1 145 1 106 1 269 3 253 1 178 1 7 1 243 1 78 1 256 1 35 2 160 1 
49 1 293 1 222 1 246 1 225 3 145 1 343 1 82 1 248 1 106 1 214 1 253 1 7 1 256 1 35 3 284 1 93 1 67 1 95 1 269 3 178 1 78 1 243 1 160 1 
49 2 293 1 222 1 246 1 225 3 145 1 343 1 82 1 248 1 55 1 106 1 214 1 253 1 7 1 256 1 35 3 284 1 93 1 195 1 67 1 95 1 269 3 178 1 243 1 78 1 160 1 
49 7 293 1 222 5 247 1 246 1 225 5 343 1 145 1 82 1 248 1 5 1 55 4 106 1 344 2 212 1 187 1 107 2 214 4 168 1 253 1 255 1 7 1 190 1 132 1 256 1 216 1 33 2 35 6 284 1 172 2 109 2 67 5 93 1 195 4 110 1 154 1 95 1 309 1 269 5 19 1 178 1 78 1 243 3 160 1 
49 4 293 1 222 1 246 1 225 4 343 1 145 1 82 1 248 1 55 2 227 1 106 1 344 2 187 1 107 2 214 2 168 1 255 1 7 1 190 1 256 1 216 1 33 2 35 4 284 1 172 2 67 2 195 2 109 2 93 1 94 2 110 1 154 1 95 1 309 1 269 4 178 1 243 2 78 1 160 1 
49 4 293 1 222 1 247 1 246 1 225 4 145 1 343 1 82 1 248 1 55 2 5 1 106 1 344 2 187 1 107 2 214 2 168 1 255 1 7 1 190 1 132 1 256 1 216 1 33 2 35 4 284 1 172 2 67 1 195 2 109 2 93 1 110 1 154 1 95 1 309 1 269 4 178 1 243 2 78 1 160 1 
49 4 293 1 222 1 247 1 246 1 225 4 145 1 343 1 82 1 248 1 55 2 5 1 106 1 344 2 187 1 107 2 214 2 168 1 255 1 7 1 190 1 132 1 256 1 216 1 33 2 35 4 284 1 172 2 67 1 195 2 109 2 93 1 110 1 154 1 95 1 309 1 269 4 178 1 243 2 78 1 160 1 
49 4 293 1 222 1 247 1 246 1 225 4 145 1 343 1 82 1 248 1 55 2 106 1 187 1 214 2 168 1 255 1 7 1 256 1 216 1 33 2 35 4 284 1 67 1 195 2 109 2 93 1 94 2 110 1 197 1 154 1 95 1 309 1 73 2 269 4 98 1 22 2 178 1 157 1 243 2 78 1 160 1 
49 5 293 1 222 1 247 1 246 1 225 4 145 1 343 1 82 1 248 1 5 1 55 3 106 1 344 2 212 1 187 1 107 2 214 3 168 1 255 1 7 1 190 1 132 1 256 1 216 1 33 2 35 5 284 1 172 2 67 1 109 2 93 1 195 3 110 1 154 1 95 1 309 1 269 4 178 1 243 2 78 1 160 1 
49 5 293 1 222 1 247 1 246 1 225 4 145 1 343 1 82 1 248 1 5 1 55 3 106 1 344 2 212 1 187 1 107 2 214 3 168 1 255 1 7 1 190 1 132 1 256 1 216 1 33 2 35 5 284 1 172 2 67 1 109 2 93 1 195 3 110 1 154 1 95 1 309 1 269 4 178 1 243 2 78 1 160 1 
49 4 293 1 222 1 246 1 225 4 343 1 145 1 82 1 248 1 55 2 227 1 106 1 187 1 214 2 168 1 255 1 7 1 256 1 216 1 33 2 35 4 284 1 67 1 195 2 109 2 93 1 94 2 110 1 154 1 95 1 309 1 73 2 269 4 22 2 178 1 157 1 243 2 78 1 160 1 
205 1 120 2 259 1 350 1 162 1 224 1 295 3 103 1 104 2 70 1 277 1 39 1 263 1 264 1 167 2 72 1 302 1 74 1 60 1 312 6 137 1 281 1 48 2 88 3 292 1 245 1 
205 11 120 1 162 2 103 2 295 8 224 1 104 4 146 1 277 4 56 1 167 2 281 2 62 1 88 6 12 1 306 2 348 2 259 2 174 1 264 1 265 1 72 11 356 3 20 1 155 1 312 14 114 3 137 2 139 1 99 1 115 1 48 1 292 2 
206 1 161 1 121 1 162 1 103 1 295 1 104 2 246 2 341 1 145 2 277 1 278 1 228 1 83 1 164 1 6 1 108 1 232 1 281 1 62 1 192 1 193 1 88 1 324 1 259 1 264 1 270 1 20 1 177 1 312 2 138 1 78 1 140 1 115 1 337 1 48 1 180 1 292 1 
224 3 103 3 104 6 4 2 145 3 277 7 228 1 278 2 229 1 56 4 6 2 57 1 60 1 108 2 62 1 281 3 192 1 193 2 324 2 70 1 72 7 20 1 78 1 115 1 24 2 337 1 25 2 245 1 292 3 206 3 205 7 120 4 161 2 162 3 121 2 295 10 246 3 341 2 83 1 167 8 129 1 302 1 88 10 306 2 348 2 134 1 259 3 135 2 39 1 263 1 264 3 270 3 312 20 137 3 138 3 140 1 99 2 48 2 221 2 
206 8 161 2 162 2 103 2 295 1 51 2 104 4 246 1 341 2 53 1 145 1 228 2 83 1 6 3 281 2 193 2 88 1 134 1 259 2 13 1 286 1 15 1 308 1 264 2 270 8 310 1 74 1 20 1 21 1 312 2 138 7 78 1 140 1 244 1 115 1 337 1 204 1 142 1 292 2 
205 1 120 1 162 1 103 1 295 1 224 1 275 1 104 2 246 1 145 1 277 1 83 1 167 1 281 1 62 1 88 2 306 1 348 1 258 1 259 1 264 1 72 1 137 1 312 3 202 1 140 1 78 1 99 1 292 1 
205 1 259 1 234 1 162 1 103 1 295 2 104 2 277 1 264 1 56 1 167 1 72 1 74 1 312 2 137 1 281 1 306 1 292 1 
205 1 120 1 259 1 162 1 103 1 224 1 104 2 307 1 277 1 264 1 167 1 72 1 74 1 312 2 281 1 99 1 88 2 292 1 
205 2 120 1 162 1 295 2 103 1 224 1 104 2 277 2 56 1 167 2 281 1 88 2 306 1 348 1 259 1 264 1 72 2 74 1 137 1 312 4 99 1 292 1 
205 1 259 1 234 1 162 1 103 1 295 2 104 2 277 1 264 1 56 1 167 1 72 1 312 2 137 1 281 1 244 1 306 1 292 1 
205 1 120 1 259 1 162 1 103 1 224 1 104 2 307 1 277 1 264 1 167 1 72 1 312 2 281 1 99 1 244 1 88 2 292 1 
205 2 120 1 162 1 295 2 103 1 224 1 104 2 277 2 56 1 167 2 281 1 88 2 306 1 348 1 259 1 264 1 72 2 137 1 312 4 99 1 244 1 292 1 
205 2 120 1 162 1 295 2 103 1 224 1 104 2 277 2 56 1 167 2 281 1 88 2 306 1 348 1 259 1 264 1 72 2 312 4 137 1 99 1 292 1 
206 1 161 1 121 1 162 1 295 1 103 1 104 2 246 1 341 1 145 1 278 1 228 1 6 1 108 1 281 1 193 1 88 1 324 1 259 1 264 1 270 1 20 1 312 2 138 1 24 1 115 1 48 1 292 1 
206 1 161 1 121 1 162 1 295 1 103 1 104 2 246 1 341 1 145 1 278 1 228 1 6 1 281 1 32 1 169 1 193 1 88 1 325 1 259 1 264 1 270 1 20 1 312 2 138 1 115 1 48 1 292 1 
205 2 120 1 162 1 295 2 103 1 224 1 104 2 277 2 56 1 167 2 281 1 62 1 88 2 306 1 348 1 259 1 264 1 72 2 137 1 312 4 99 1 292 1 
205 2 206 1 120 1 161 1 121 1 162 1 224 1 295 2 103 1 104 2 246 1 341 1 145 1 277 2 278 1 56 1 167 2 6 1 108 1 281 1 88 2 193 1 306 1 348 1 324 1 259 1 13 1 135 1 264 1 72 2 270 1 312 4 137 1 138 1 99 1 24 1 292 1 
205 1 162 1 224 1 103 1 295 2 275 1 104 2 246 1 145 1 277 1 56 1 83 1 167 1 281 1 62 1 88 1 306 1 348 1 258 1 327 1 259 1 264 1 72 1 137 1 312 3 99 1 140 1 78 1 292 1 
120 4 162 3 103 3 295 20 224 5 104 6 52 1 210 1 123 4 317 1 150 1 30 1 163 1 56 4 299 1 167 8 302 1 60 1 88 21 34 1 12 1 306 4 89 1 348 4 349 1 259 3 174 3 70 1 217 1 39 1 263 1 357 1 356 4 312 41 114 3 137 5 158 1 99 4 272 1 220 2 359 1 245 1 292 3 
120 3 162 3 103 3 295 15 224 3 104 6 52 1 210 1 123 3 317 1 150 1 30 1 163 1 56 2 299 1 167 5 88 15 34 1 12 1 306 4 89 1 348 4 349 1 259 3 174 3 217 1 357 1 356 4 312 30 114 3 137 4 158 1 99 3 220 2 359 1 292 3 
120 6 162 1 103 1 295 22 224 6 104 2 210 1 123 2 317 1 150 1 56 4 299 1 167 10 302 1 60 1 88 19 12 2 306 6 89 1 348 6 349 1 259 1 174 2 70 1 39 1 263 1 265 2 357 1 356 4 312 41 114 4 137 7 158 1 99 5 220 1 359 1 245 1 292 1 
120 3 162 2 103 2 295 9 224 3 104 4 52 1 123 2 317 1 150 1 163 1 56 3 167 6 88 10 34 2 12 1 306 3 348 3 349 1 259 2 68 1 174 1 356 2 312 19 114 1 137 3 158 1 99 3 220 1 292 2 
120 1 162 2 224 1 103 2 295 9 104 4 123 2 317 1 210 1 150 1 30 1 299 1 167 1 88 8 306 2 89 1 348 2 349 2 259 2 174 2 357 1 356 2 312 17 114 2 137 2 158 1 99 1 220 2 359 1 292 2 
206 2 161 1 162 1 103 1 295 1 51 2 104 2 246 2 341 1 145 2 127 1 6 1 281 1 62 1 193 1 88 1 194 1 259 1 286 1 71 1 264 1 270 2 113 1 310 1 20 1 76 1 312 2 138 2 78 2 115 1 292 1 
134 1 206 2 119 1 161 1 13 1 196 1 297 1 353 1 296 1 185 2 230 1 270 2 333 1 77 1 138 2 11 1 193 1 179 1 315 1 
134 1 206 1 119 1 161 1 196 1 353 1 296 1 185 2 29 1 230 1 270 1 333 1 77 1 138 1 11 1 315 1 193 1 
206 1 161 1 92 1 341 1 342 1 228 1 6 1 270 1 21 1 138 1 193 1 179 1 315 1 142 1 
134 1 206 1 119 1 161 1 196 1 297 1 353 1 296 1 185 2 230 1 270 1 333 1 77 1 138 1 11 1 179 1 315 1 193 1 
268 1 
350 1 67 1 222 1 153 1 255 1 280 1 216 1 
49 1 172 1 222 1 67 2 94 1 154 1 225 1 309 1 344 1 187 1 269 1 107 1 168 1 255 1 190 1 243 1 216 1 
0 1 49 5 3 1 222 1 224 2 316 1 4 2 225 5 278 1 228 1 6 6 187 3 189 2 193 1 326 2 67 7 154 3 16 2 329 3 240 2 241 2 243 3 206 1 161 2 338 6 341 1 248 2 251 6 344 6 31 1 168 3 254 2 255 8 216 7 306 2 348 2 94 6 309 3 176 2 270 1 269 5 43 2 45 2 137 2 138 1 358 1 99 2 
49 1 338 5 224 2 222 2 225 1 54 1 210 1 251 5 344 3 299 1 187 2 168 2 254 1 189 2 255 8 216 5 306 2 89 1 348 2 67 5 94 3 174 1 154 2 309 2 357 1 269 1 356 1 43 1 114 1 137 2 358 1 243 1 99 2 314 1 359 1 
143 1 50 1 224 1 246 1 225 1 82 1 145 1 5 1 83 1 187 1 168 1 302 1 301 1 303 1 189 2 255 2 216 2 258 1 154 1 39 1 309 1 269 1 43 1 136 1 137 2 140 1 78 1 245 1 
187 1 67 1 222 1 153 1 168 1 255 1 154 1 280 1 216 1 309 1 
338 2 67 2 224 1 94 2 251 2 344 2 43 1 189 1 255 2 137 1 99 1 216 2 306 1 348 1 
49 1 269 1 67 1 222 1 225 1 243 1 
206 4 49 4 161 1 144 1 341 1 225 3 184 1 228 2 6 1 187 2 59 1 168 2 254 2 255 2 191 1 193 1 216 2 36 1 235 2 154 2 309 1 270 4 269 3 21 1 271 1 138 4 358 2 243 2 142 1 
206 1 143 1 161 1 121 1 162 1 103 1 104 2 246 3 341 1 145 3 228 1 278 1 83 2 6 1 108 1 281 1 88 1 193 1 324 1 258 2 259 1 264 1 354 1 270 1 312 1 138 1 78 2 140 2 115 1 24 1 48 1 292 1 
338 2 222 2 67 4 94 2 154 1 70 1 251 2 344 2 309 1 187 1 168 1 254 1 255 1 358 1 216 2 
213 1 298 1 
213 1 298 1 
213 1 298 1 
213 1 298 1 
213 1 298 1 
213 1 298 1 
213 1 298 1 
213 1 298 1 
279 1 208 1 
120 2 162 1 224 1 103 1 295 4 104 2 317 1 167 2 302 1 60 1 88 4 89 1 259 1 174 1 70 1 263 1 39 1 356 1 137 1 114 1 312 8 292 1 245 1 
120 2 162 2 224 1 103 2 295 6 104 4 317 1 56 1 167 3 302 1 60 1 88 5 12 1 306 1 89 1 348 1 259 2 236 1 174 1 70 1 39 1 263 1 356 2 312 11 114 1 137 2 245 1 292 2 
120 3 162 3 103 3 295 9 224 3 104 6 317 1 210 1 30 1 56 1 167 4 299 1 302 1 60 1 88 10 306 2 89 1 348 2 236 1 259 3 174 1 70 1 39 1 263 1 357 1 356 1 114 1 312 19 137 3 99 2 359 1 245 1 292 3 
120 1 259 1 162 1 224 1 295 6 103 1 104 2 174 1 210 1 317 1 299 1 167 1 357 1 356 1 137 2 312 10 114 1 99 1 359 1 88 4 306 2 348 2 292 1 89 1 
120 2 162 1 224 1 103 1 295 4 104 2 317 1 167 2 302 1 60 1 88 4 89 1 259 1 174 1 70 1 263 1 39 1 356 1 137 1 114 1 312 8 292 1 245 1 
120 1 162 1 103 1 295 6 224 2 104 2 317 1 210 1 56 1 167 2 299 1 88 6 306 2 89 1 348 2 259 1 174 1 356 1 357 1 114 1 312 12 137 2 99 2 359 1 292 1 
120 1 162 3 103 3 295 6 224 1 104 6 317 1 210 1 30 1 299 1 167 1 88 5 306 2 89 1 348 2 236 1 259 3 174 1 357 1 356 1 312 11 114 1 137 2 99 1 359 1 292 3 
120 3 162 4 103 4 295 9 224 2 104 8 317 1 210 1 30 2 56 3 163 1 299 1 167 6 88 7 306 3 89 1 348 3 259 4 174 1 357 1 356 1 312 16 114 1 137 3 99 2 359 1 292 4 
120 3 224 1 295 3 263 1 39 3 56 3 167 6 302 1 60 2 312 7 137 1 88 4 245 3 
120 1 162 3 103 3 295 6 224 1 104 6 317 1 210 1 30 1 163 1 299 1 167 1 88 5 306 2 89 1 348 2 259 3 174 1 357 1 356 1 312 11 114 1 137 2 99 1 359 1 292 3 
120 2 259 2 162 2 224 1 295 4 103 2 104 4 70 1 263 1 39 1 30 1 56 1 167 3 302 1 60 1 137 1 312 8 88 4 292 2 245 1 
167 2 120 2 350 1 224 1 295 3 302 1 60 1 312 6 137 1 70 1 39 1 263 1 88 3 245 1 
120 1 236 1 259 1 162 1 224 1 103 1 295 2 104 2 56 1 167 2 137 1 312 4 99 1 88 2 306 1 292 1 348 1 
120 1 224 1 295 3 174 1 56 1 167 2 356 2 312 7 114 1 137 1 99 1 88 4 12 1 306 1 348 1 
120 5 162 2 295 11 224 3 103 2 104 4 30 2 56 4 167 9 302 1 60 1 88 12 283 1 306 2 12 1 348 2 259 2 70 1 39 2 263 1 265 1 356 2 155 1 137 3 114 2 312 23 99 2 245 2 292 2 
356 1 312 1 88 1 
295 1 312 1 114 1 
259 1 236 1 120 2 162 1 103 1 295 3 224 1 104 2 4 1 56 1 167 3 312 6 137 1 99 1 88 3 306 1 292 1 348 1 
120 1 162 1 103 1 295 6 224 2 104 2 317 1 210 1 56 1 167 2 299 1 88 6 306 2 89 1 348 2 259 1 174 1 356 1 357 1 114 1 312 12 137 2 99 2 359 1 292 1 
120 1 295 3 224 1 39 1 56 1 167 2 302 1 137 1 312 6 88 3 245 1 
120 1 259 1 162 1 295 1 103 1 104 2 39 1 263 1 30 1 56 1 167 2 60 1 312 3 283 1 88 2 245 1 292 1 
259 1 50 1 120 3 162 1 103 1 295 5 224 2 104 2 317 1 39 2 56 2 167 5 302 1 312 10 137 2 88 5 292 1 245 2 
259 1 162 1 103 1 295 2 104 2 317 1 56 1 167 1 137 1 312 2 306 1 292 1 
120 1 259 1 162 1 224 1 103 1 295 2 104 2 317 1 56 1 167 2 137 1 312 4 99 1 88 2 306 1 292 1 348 1 
259 3 120 1 162 3 103 3 295 1 104 6 317 1 39 1 30 1 163 1 56 1 167 2 312 3 283 1 88 2 292 3 245 1 
120 7 162 5 103 5 295 16 224 5 104 10 317 1 125 1 30 2 163 1 56 5 167 12 302 2 60 1 61 1 283 1 88 18 12 1 306 3 348 3 65 1 236 1 259 5 174 1 70 1 39 3 263 1 356 4 312 34 114 3 137 5 99 3 245 3 292 5 
156 1 246 1 346 1 145 1 78 1 343 1 48 1 
170 1 64 1 156 1 246 1 346 1 14 1 215 1 145 1 78 1 343 1 79 1 48 1 
206 1 6 1 161 1 350 1 270 1 21 1 341 1 138 1 193 1 142 1 228 1 
206 1 161 1 121 1 246 2 341 1 145 2 278 1 228 1 83 1 6 1 270 1 108 1 138 1 140 1 78 1 337 1 48 1 193 1 
206 1 161 1 121 1 246 2 341 2 145 2 82 1 278 2 83 1 6 3 108 1 347 1 193 1 235 1 270 1 178 1 138 1 78 2 140 2 337 1 48 1 159 1 160 1 
206 2 161 1 121 1 246 2 341 2 145 2 82 1 278 2 83 1 6 3 347 1 322 1 32 1 193 1 235 1 270 2 178 1 138 2 78 2 140 2 337 1 48 1 159 1 160 1 
206 3 49 1 161 1 235 1 27 1 67 1 222 1 341 1 225 2 248 1 329 1 228 1 278 1 6 4 240 1 269 2 270 3 58 1 138 3 347 1 322 1 193 1 159 1 
206 3 49 1 326 1 161 1 235 1 67 1 222 1 341 1 225 2 248 1 329 1 228 1 278 1 6 4 240 1 269 2 270 3 138 3 347 1 322 1 193 1 159 1 
206 1 161 1 270 1 15 1 138 1 193 1 
134 1 206 7 161 3 273 1 51 1 13 1 238 1 15 1 341 2 53 1 308 1 228 2 278 1 6 3 270 7 31 1 310 1 138 6 282 1 193 2 204 1 
205 1 206 1 120 2 161 1 121 1 162 2 224 1 295 3 103 2 104 4 246 2 341 1 145 2 277 1 278 1 83 1 167 2 6 1 302 1 60 1 108 1 281 2 62 1 88 3 193 1 324 1 194 1 259 2 13 1 135 1 70 1 39 1 263 1 264 2 72 1 270 1 312 6 137 1 138 1 78 1 140 1 24 1 337 1 48 2 25 1 245 1 292 2 
206 1 49 2 222 1 144 1 225 3 248 1 228 1 6 2 187 2 168 2 255 1 280 1 216 1 326 1 67 1 153 1 154 2 16 1 17 1 329 1 309 2 176 1 240 1 270 1 269 3 241 1 138 1 243 1 
206 2 161 2 3 1 13 1 15 1 341 1 278 1 240 1 6 2 270 2 31 1 138 2 193 1 
206 4 6 1 161 1 270 4 21 1 13 1 340 1 341 1 138 4 322 1 193 1 142 1 228 1 
206 2 235 1 161 2 273 1 341 1 276 1 183 1 278 1 229 1 6 1 270 2 138 2 282 1 193 1 
206 1 119 1 161 1 270 1 138 1 296 1 11 1 185 1 193 1 228 1 
206 2 134 1 161 1 13 1 341 1 71 1 6 1 270 2 310 1 138 2 193 1 
206 5 235 1 161 2 13 1 340 1 341 2 53 1 308 1 228 1 6 3 270 5 21 1 310 1 138 4 193 2 142 1 
206 5 235 1 161 2 13 1 340 1 81 1 341 2 53 1 228 1 6 3 270 5 21 1 310 1 138 4 193 2 142 1 
206 1 161 1 121 1 246 2 341 1 145 2 278 1 228 1 83 1 6 1 270 1 138 1 140 1 78 1 32 1 337 1 48 1 193 1 
206 1 235 1 161 2 273 1 238 1 341 1 278 1 6 1 270 1 31 1 138 1 282 1 193 1 
1 1 80 1 18 1 249 1 48 1 
1 1 67 1 222 1 80 2 173 1 209 1 225 2 248 1 82 1 17 1 249 2 18 2 319 1 269 2 178 1 321 1 256 1 48 1 160 1 
1 1 246 1 145 1 249 1 18 1 127 1 113 1 76 1 78 1 
1 1 209 1 321 1 
350 1 87 1 290 1 40 1 
101 1 242 1 87 1 262 1 290 1 40 1 323 1 
2 1 38 1 242 1 
101 1 66 1 260 1 262 1 40 1 300 2 311 1 242 3 10 1 87 1 323 3 290 1 
101 1 199 1 352 1 242 2 87 1 262 1 290 1 40 1 323 2 
101 1 102 1 260 1 262 1 185 1 126 1 77 1 242 1 87 1 11 1 323 1 
101 1 260 1 242 1 87 1 262 1 290 1 323 1 
101 1 260 1 242 1 262 1 290 2 40 1 323 1 
101 2 237 1 260 1 262 2 332 1 242 2 131 1 87 1 290 1 323 2 
101 1 260 1 287 1 352 2 262 1 28 1 40 1 126 1 242 3 87 2 290 1 323 3 257 1 
101 1 119 1 260 1 352 1 262 1 185 2 40 1 230 1 334 1 77 1 242 2 87 1 11 1 290 1 323 2 
101 2 260 1 287 1 352 2 262 2 40 1 126 1 199 1 97 1 242 4 87 2 290 1 323 4 
101 1 260 1 242 1 87 1 262 1 290 1 40 1 323 1 
101 1 66 1 287 1 352 2 262 1 40 2 126 1 239 1 300 1 311 1 242 4 87 3 290 2 323 4 
101 1 260 1 352 1 262 1 96 1 40 1 84 1 242 2 87 1 203 1 290 1 323 2 
101 1 66 2 260 1 262 1 40 1 300 2 311 1 335 1 242 3 87 1 323 3 290 1 
261 2 75 1 87 2 128 1 
101 1 260 1 242 1 262 1 141 1 323 1 
101 1 260 1 352 1 242 2 87 1 28 1 262 1 290 1 40 1 323 2 
186 1 
101 1 260 1 242 1 87 1 262 1 290 1 40 1 323 1 
101 1 260 1 352 1 262 1 28 1 40 1 300 1 242 3 87 1 323 3 290 1 
239 1 287 1 87 1 126 1 
87 1 290 1 

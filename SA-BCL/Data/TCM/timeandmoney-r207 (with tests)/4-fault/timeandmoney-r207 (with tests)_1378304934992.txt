#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 169 2 289 9 2 1 171 1 298 1 297 1 134 1 57 2 341 1 157 1 113 1 114 6 61 1 88 3 282 2 166 2 140 4 349 1 189 2 190 1 352 2 121 1 123 2 36 1 326 5 11 9 38 1 
41 1 169 2 289 9 2 1 171 1 298 1 297 1 134 1 57 2 341 1 157 1 113 1 114 6 61 1 88 3 282 2 140 4 166 2 349 1 189 2 190 1 352 2 121 1 123 2 36 1 326 5 11 9 38 1 
41 1 169 2 289 10 2 1 171 1 298 1 297 1 134 1 57 2 341 1 157 1 113 1 114 7 61 1 88 4 282 2 140 5 166 2 349 1 189 2 190 1 352 2 121 1 123 2 36 1 326 6 11 10 38 1 
41 1 169 2 289 7 2 1 171 1 298 1 297 1 134 1 57 2 341 1 113 1 114 4 61 1 88 2 282 2 140 3 166 1 349 1 189 2 190 1 352 2 121 1 123 2 36 1 326 4 11 7 38 1 
41 1 114 3 289 4 61 1 88 1 282 1 166 2 140 2 189 1 349 1 297 1 352 1 57 1 123 1 326 3 11 4 157 1 113 1 
41 1 169 1 289 2 61 1 265 1 282 1 189 1 297 1 134 1 224 1 121 1 123 1 57 1 326 1 174 1 11 2 330 1 
41 1 114 7 169 1 289 9 61 1 88 3 282 1 2 1 166 2 140 4 349 1 189 2 76 1 297 1 352 1 107 1 57 1 36 1 123 2 326 5 11 9 38 1 157 1 113 1 
41 1 114 7 169 1 289 9 61 1 88 3 282 1 2 1 166 2 140 4 349 1 189 2 76 1 297 1 352 1 107 1 57 1 36 1 123 2 326 5 11 9 38 1 157 1 113 1 
41 1 169 1 114 1 289 3 61 1 88 1 140 1 189 2 297 1 123 2 326 2 11 3 38 1 
115 1 141 1 196 1 
115 1 29 2 200 1 
32 2 43 1 188 2 147 2 308 2 319 2 79 1 373 2 
43 1 233 2 147 2 45 1 268 1 294 1 270 1 132 1 242 2 156 1 79 1 112 1 373 2 244 2 178 1 227 1 204 1 248 2 86 2 139 1 376 1 319 3 118 1 8 1 321 1 320 1 64 1 185 1 32 2 209 1 188 3 143 1 308 2 10 1 215 1 96 1 357 1 
208 1 32 1 43 1 188 1 147 1 360 1 308 1 319 1 72 1 373 1 
115 1 147 1 182 1 360 1 206 1 280 1 319 1 336 1 188 1 141 1 211 1 24 1 286 1 331 1 
115 1 147 1 182 2 360 1 280 1 319 1 336 1 32 1 188 1 141 1 211 1 308 1 24 2 373 1 331 1 
182 1 24 1 253 1 302 1 125 1 
115 1 133 1 182 2 141 1 24 2 253 1 125 1 145 1 
182 1 24 1 253 1 
43 1 147 1 182 1 360 1 319 1 208 1 32 1 188 1 308 1 168 1 24 1 72 1 125 1 373 1 
115 1 
138 1 115 1 182 2 141 1 24 2 253 1 125 1 145 1 
115 1 182 5 375 1 7 1 253 2 378 2 164 2 162 1 47 1 367 1 34 1 68 1 141 1 56 2 108 1 24 5 125 2 145 1 26 1 
79 1 196 1 
27 1 147 2 344 1 319 2 32 1 188 2 308 1 79 2 373 1 
219 1 144 1 124 1 
178 1 233 1 204 1 147 1 248 1 362 1 319 2 45 1 321 1 320 1 64 1 231 1 132 1 32 1 209 1 188 2 308 1 96 1 124 1 244 1 
32 3 188 3 147 3 362 1 308 3 319 3 79 1 373 1 
32 1 188 1 147 1 360 1 308 1 319 1 72 1 
27 1 32 1 188 1 147 1 360 1 308 1 344 1 319 1 373 1 
43 1 233 1 147 3 360 1 362 1 45 1 336 1 270 1 132 1 24 1 242 1 79 1 373 2 244 1 178 1 245 1 204 1 227 1 247 1 248 1 182 1 86 2 280 1 139 1 376 1 344 1 319 4 8 1 321 1 320 1 64 1 185 1 231 1 32 3 209 1 188 4 211 1 143 1 308 3 10 1 215 1 96 1 357 1 331 1 
32 1 188 2 147 2 23 1 206 1 362 1 308 1 319 2 79 1 
115 1 245 1 147 3 182 1 360 1 362 2 280 1 344 1 319 3 336 1 92 1 231 1 32 3 188 3 211 1 308 3 24 1 373 1 331 1 
147 2 362 1 344 1 219 1 319 2 32 2 188 2 308 2 373 1 124 1 
178 1 233 1 204 1 248 1 319 1 45 1 320 1 321 1 64 1 132 1 209 1 188 1 96 1 79 1 244 1 
178 1 233 1 248 1 319 1 46 1 161 1 320 1 321 1 64 1 132 1 209 1 188 1 96 1 79 1 244 1 
0 1 219 2 241 1 316 1 242 4 274 1 243 1 374 1 205 1 86 2 139 1 118 2 8 1 30 1 185 1 230 1 350 1 351 1 143 1 10 1 215 1 144 2 124 2 357 2 
32 1 188 1 147 1 360 1 280 1 308 1 354 1 319 1 
147 5 116 1 206 1 362 2 344 1 319 5 231 1 32 4 188 5 77 1 23 1 308 4 79 1 373 1 
32 2 188 2 147 2 360 1 354 1 308 2 319 2 72 1 
178 1 233 1 204 1 248 1 319 1 45 1 321 1 320 1 64 1 370 1 132 1 209 1 188 1 96 1 79 1 244 1 
176 1 337 1 
176 1 337 1 
131 1 15 1 
131 1 15 1 
131 1 15 1 
122 1 176 1 337 1 
122 1 176 1 337 1 
122 1 176 1 337 1 
368 1 176 1 337 1 
368 1 176 1 337 1 
368 1 176 1 337 1 
251 1 176 1 337 1 
131 1 15 1 84 1 176 2 299 1 337 2 
115 1 182 2 279 1 84 1 343 1 102 1 337 2 21 1 293 2 120 2 24 2 135 1 259 3 201 1 261 1 110 2 176 2 328 2 311 2 
147 2 361 1 337 1 293 1 223 1 24 1 135 1 226 1 79 1 176 1 182 1 251 1 377 1 319 2 32 2 188 2 284 1 348 1 120 1 308 2 259 1 262 1 328 1 311 1 
352 1 57 1 282 1 
57 1 282 1 330 1 
322 1 352 2 57 3 315 1 363 1 330 1 
352 1 57 2 315 1 363 1 149 1 330 1 
352 1 57 2 363 1 315 2 330 1 
0 1 271 2 313 1 223 1 153 2 56 1 200 1 24 5 175 2 5 1 243 1 111 1 115 2 249 1 182 5 375 3 29 3 117 1 253 1 91 1 378 1 230 1 164 1 34 1 284 1 348 1 350 1 68 2 141 1 9 1 125 4 145 1 
0 3 364 1 271 6 223 4 313 2 51 1 56 2 200 3 24 9 155 1 175 6 243 3 111 2 81 5 115 5 182 9 7 1 375 8 29 9 253 6 91 3 302 5 378 2 230 3 164 2 306 1 34 1 350 3 68 6 141 1 9 1 355 1 125 7 356 1 145 1 
0 1 313 1 223 1 271 2 153 1 56 1 200 2 24 3 5 1 175 2 243 1 111 1 115 3 182 3 7 1 375 3 117 1 29 4 378 1 91 1 164 1 230 1 350 1 68 2 141 1 125 2 
0 2 364 1 271 4 313 1 223 2 153 2 56 1 200 3 24 4 155 1 175 4 5 1 243 2 111 1 115 4 182 4 7 1 375 5 29 7 117 1 378 1 91 2 164 1 230 2 350 2 68 4 141 1 125 3 356 1 
305 1 321 1 196 1 
321 1 342 1 
69 1 
132 1 321 1 
305 2 132 1 225 1 321 3 320 1 255 1 
132 1 321 1 320 1 
321 1 126 1 
374 2 193 1 100 2 6 1 85 1 0 1 118 4 104 1 186 1 256 1 350 1 379 1 152 1 35 1 316 3 242 7 357 3 
374 2 193 1 100 2 6 1 85 1 0 1 118 4 104 1 186 1 256 1 350 1 379 1 152 1 35 1 316 3 242 7 357 3 
374 2 193 1 100 2 6 1 85 1 0 1 118 4 104 1 254 1 186 1 256 1 350 1 379 1 152 1 35 1 316 3 242 7 357 3 
193 1 100 3 0 4 104 2 152 1 52 4 316 10 242 31 58 1 243 3 25 1 277 1 374 5 6 2 86 2 85 5 139 1 345 3 118 16 8 1 91 3 186 1 165 1 230 3 256 2 379 2 350 4 35 1 95 1 143 1 285 1 215 1 327 1 357 15 
264 1 100 2 0 3 104 2 269 1 50 1 152 2 316 4 242 14 374 3 6 2 85 1 86 2 139 1 118 8 8 1 186 1 256 1 379 1 350 3 35 1 143 1 215 1 357 6 
41 1 169 1 233 1 289 2 44 1 129 1 49 1 22 1 297 1 57 2 244 1 114 1 180 1 61 1 248 1 282 1 64 1 322 1 167 1 209 1 257 1 189 1 191 1 352 1 123 1 380 1 326 1 37 1 11 2 330 1 
41 1 169 1 233 1 289 3 359 1 44 1 129 1 49 1 222 1 22 1 272 1 57 2 244 1 114 2 180 1 61 1 248 1 282 1 64 1 322 1 167 1 209 1 257 1 189 1 352 1 123 1 380 1 326 1 11 3 330 1 
41 1 169 1 233 1 289 2 49 1 222 1 22 1 272 1 57 2 244 1 114 2 180 1 61 1 248 1 64 1 282 1 322 1 167 1 209 1 257 1 352 1 380 1 326 1 11 2 330 1 
178 1 169 2 233 1 180 2 289 1 248 1 236 1 359 1 18 1 103 1 321 1 64 1 65 1 132 1 119 1 49 2 209 1 257 2 189 1 173 1 123 1 11 1 244 1 
169 1 233 1 289 1 44 1 129 1 49 1 22 1 297 1 272 1 57 2 244 1 180 1 248 1 282 1 64 1 322 1 167 1 209 1 257 1 189 1 191 1 352 1 123 1 380 1 11 1 330 1 
148 1 
233 2 147 1 235 2 290 2 103 1 336 1 48 2 198 1 53 1 54 2 56 1 200 2 109 1 244 2 115 2 248 2 62 1 206 1 252 2 253 6 63 4 64 1 65 1 164 1 209 1 68 2 211 1 358 1 73 1 360 1 266 1 132 1 312 2 313 1 314 1 273 2 24 5 371 1 178 2 182 5 375 2 29 2 280 1 319 1 321 1 378 1 34 1 188 1 324 1 141 1 286 1 145 3 329 1 192 1 331 1 
147 1 360 1 266 1 336 1 314 1 109 1 24 3 138 1 62 1 182 3 206 1 280 1 319 1 252 1 63 2 253 2 188 1 324 1 211 1 286 1 331 1 145 1 
147 1 360 1 266 1 336 1 314 1 54 1 109 1 24 3 138 1 115 1 62 1 182 3 206 1 280 1 319 1 253 1 63 3 188 1 324 1 211 1 141 1 286 1 331 1 145 1 
147 1 360 1 266 1 336 1 314 1 54 1 109 1 24 3 273 1 138 1 115 1 62 1 182 3 206 1 280 1 319 1 252 1 63 3 253 2 188 1 324 1 211 1 141 1 286 1 145 1 331 1 
358 1 73 1 147 1 235 2 360 1 290 2 292 1 266 1 105 1 336 1 48 2 312 2 54 4 314 1 56 1 200 2 109 1 24 5 273 4 138 1 115 5 179 1 318 1 62 1 182 5 375 1 206 1 280 1 319 1 252 4 253 7 63 6 378 1 164 1 34 1 188 1 68 1 258 1 324 1 141 5 211 1 286 1 145 3 331 1 
147 1 235 2 290 2 336 1 48 2 54 2 53 1 56 1 109 1 200 2 115 2 62 1 206 1 252 2 63 4 253 4 164 1 68 1 211 1 358 1 73 1 360 1 266 1 312 2 314 1 24 4 273 2 182 4 375 1 280 1 29 2 319 1 378 1 34 1 188 1 324 1 141 1 286 1 331 1 145 2 
358 1 73 1 147 1 235 2 360 1 290 2 292 1 266 1 336 1 48 2 312 2 54 2 314 1 56 1 273 2 200 2 109 1 24 4 115 1 318 1 62 1 182 4 375 1 206 1 280 1 319 1 252 2 253 4 63 4 378 1 164 1 34 1 188 1 68 1 324 1 258 1 141 1 211 1 286 1 145 2 331 1 
358 1 73 1 147 1 235 2 360 1 290 2 292 1 266 1 336 1 48 2 312 2 54 2 314 1 56 1 273 2 200 2 109 1 24 4 115 1 318 1 62 1 182 4 375 1 206 1 280 1 319 1 252 2 253 4 63 4 378 1 164 1 34 1 188 1 68 1 324 1 258 1 141 1 211 1 286 1 145 2 331 1 
73 1 147 1 235 2 360 1 292 1 266 1 19 1 336 1 239 1 172 2 312 2 54 2 314 1 56 1 273 2 109 1 24 4 177 2 115 1 62 1 182 4 375 1 29 2 206 1 280 1 319 1 252 2 253 4 63 4 90 1 378 1 164 1 34 1 188 1 68 1 324 1 141 1 211 1 286 1 145 2 331 1 
358 1 73 1 147 1 235 2 360 1 290 2 292 1 266 1 105 1 336 1 48 2 312 2 314 1 54 3 56 1 200 2 109 1 24 4 273 3 115 1 318 1 62 1 182 4 375 1 206 1 280 1 319 1 252 3 63 5 253 5 378 1 164 1 34 1 188 1 68 1 258 1 324 1 141 1 211 1 286 1 145 2 331 1 
358 1 73 1 147 1 235 2 360 1 290 2 292 1 266 1 105 1 336 1 48 2 312 2 314 1 54 3 56 1 200 2 109 1 24 4 273 3 115 1 318 1 62 1 182 4 375 1 206 1 280 1 319 1 252 3 63 5 253 5 378 1 164 1 34 1 188 1 68 1 258 1 324 1 141 1 211 1 286 1 145 2 331 1 
147 1 235 2 336 1 239 1 54 2 53 1 56 1 109 1 115 1 62 1 206 1 252 2 63 4 253 4 164 1 68 1 211 1 73 1 360 1 266 1 312 2 172 2 314 1 24 4 273 2 177 2 182 4 375 1 280 1 29 2 319 1 378 1 34 1 188 1 324 1 141 1 286 1 331 1 145 2 
100 1 219 1 0 1 104 1 196 1 152 1 316 2 242 6 79 2 374 2 205 1 6 1 86 2 139 1 118 3 8 1 186 1 185 1 350 1 35 1 143 1 10 1 215 1 144 1 124 1 357 3 
332 1 217 1 219 4 0 1 270 1 295 1 52 3 316 2 242 14 79 1 243 1 25 1 112 1 374 1 85 1 86 4 250 1 139 2 345 3 118 8 8 2 91 2 185 2 230 2 350 2 143 2 10 1 285 1 13 1 215 2 144 11 124 11 357 6 
233 1 147 1 234 1 217 1 362 1 219 1 45 1 221 1 132 1 370 1 270 1 242 2 79 1 112 1 244 1 178 1 204 1 248 1 86 2 139 1 319 2 118 1 8 1 321 1 320 1 64 1 185 1 231 1 32 1 209 1 188 2 353 1 308 1 143 1 10 1 96 1 215 1 357 1 
233 3 147 1 100 1 0 3 45 2 104 1 3 2 152 1 242 20 243 2 112 1 244 3 204 2 301 1 248 3 6 1 118 10 8 3 64 2 210 2 209 2 350 3 308 1 10 3 215 3 310 2 124 7 357 10 217 1 362 1 219 7 270 1 132 2 272 1 316 8 79 2 178 1 374 4 28 2 86 6 85 4 87 1 139 3 376 2 319 3 320 2 321 2 91 2 186 1 185 3 230 2 231 1 32 1 188 3 35 1 142 1 143 3 96 2 144 7 
205 1 85 1 86 2 139 1 219 1 118 2 8 1 185 1 230 1 350 1 241 1 143 1 316 1 10 1 144 1 242 2 215 1 124 1 
374 1 205 1 86 2 139 1 219 1 0 1 8 1 185 1 351 1 143 1 316 1 10 1 144 1 242 2 215 1 243 1 124 1 357 2 
219 2 0 1 316 2 242 4 243 1 374 1 205 1 86 2 85 1 139 1 118 2 8 1 91 1 230 1 185 1 350 1 143 1 10 1 215 1 144 2 124 2 357 2 
85 1 86 2 139 1 219 1 334 1 118 2 8 1 185 1 230 1 350 1 241 1 143 1 316 1 10 1 144 1 242 2 215 1 124 1 
374 1 86 2 139 1 219 1 0 1 334 1 8 1 185 1 351 1 143 1 316 1 10 1 144 1 242 2 215 1 243 1 124 1 357 2 
219 2 0 1 334 1 316 2 242 4 243 1 374 1 86 2 85 1 139 1 118 2 8 1 91 1 230 1 185 1 350 1 143 1 10 1 215 1 144 2 124 2 357 2 
219 2 0 1 316 2 242 4 243 1 374 1 86 2 85 1 139 1 118 2 8 1 91 1 230 1 185 1 350 1 143 1 10 1 215 1 144 2 124 2 357 2 
233 1 45 1 132 1 270 1 242 2 79 1 112 1 244 1 178 1 204 1 248 1 86 2 376 1 139 1 319 1 118 1 8 1 320 1 321 1 64 1 185 1 209 1 188 1 143 1 10 1 96 1 215 1 357 1 
233 1 17 1 46 1 132 1 270 1 242 2 79 1 112 1 244 1 178 1 248 1 86 2 139 1 319 1 118 1 8 1 320 1 161 1 321 1 64 1 185 1 209 1 188 1 143 1 10 1 96 1 215 1 357 1 
217 1 219 2 0 1 316 2 242 4 243 1 374 1 86 2 85 1 139 1 118 2 8 1 91 1 230 1 185 1 350 1 143 1 10 1 215 1 144 2 124 2 357 2 
233 1 0 1 219 2 45 1 3 1 132 1 316 2 242 4 243 1 244 1 374 1 204 1 248 1 85 1 86 2 376 1 139 1 319 1 118 2 8 1 320 1 321 1 64 1 91 1 230 1 185 1 209 1 188 1 350 1 143 1 10 1 37 1 144 2 96 1 215 1 124 2 357 2 
147 1 217 1 0 1 219 1 366 1 316 1 242 3 243 1 373 1 85 1 86 2 139 1 344 1 319 1 118 2 8 1 91 1 185 1 230 1 32 1 188 1 350 1 143 1 308 1 10 1 215 1 144 1 124 1 357 1 
233 8 147 1 127 1 362 1 334 1 103 1 170 1 294 2 270 1 132 2 240 1 151 1 272 1 55 1 242 2 112 1 244 8 178 2 205 1 248 7 86 4 139 2 319 1 118 1 8 2 321 3 64 2 185 2 65 1 32 1 93 1 209 2 188 1 308 1 143 2 10 2 37 1 215 2 357 1 
147 1 217 1 219 1 0 1 199 1 316 1 242 3 243 1 373 1 374 1 86 2 139 1 344 1 319 1 118 1 8 1 91 1 185 1 230 1 32 1 188 1 350 1 143 1 308 1 10 1 144 1 215 1 124 1 357 2 
264 1 100 1 101 1 195 1 0 5 150 1 104 1 197 1 4 1 152 1 52 4 316 8 58 1 242 41 136 1 243 4 25 3 374 4 82 1 6 1 159 1 86 6 85 4 139 3 228 1 281 2 345 3 118 20 8 3 91 4 186 1 230 4 304 1 33 1 350 5 325 1 35 1 143 3 285 1 381 4 232 1 215 3 357 21 
264 1 100 1 101 1 195 1 0 4 150 1 104 1 197 1 4 1 152 1 52 4 316 7 58 2 242 38 136 1 243 3 25 3 374 4 82 1 6 1 159 1 86 8 85 3 139 4 228 1 281 2 345 3 118 20 8 4 91 4 186 1 230 4 304 1 33 1 350 5 325 1 35 1 143 4 285 1 381 4 232 1 215 4 357 18 
264 1 100 1 101 1 195 1 0 8 150 1 104 1 197 1 4 1 152 1 52 4 316 14 58 1 242 52 136 1 243 7 25 2 374 7 6 1 159 1 86 4 85 7 139 2 228 1 281 1 345 4 118 27 8 2 91 7 186 1 230 7 33 1 350 8 325 1 35 1 143 2 285 2 381 4 232 1 13 2 215 2 357 25 
264 1 14 1 101 1 0 3 197 1 4 2 52 2 316 6 242 19 136 1 243 3 25 1 374 3 86 4 85 3 139 2 281 1 345 1 118 9 8 2 91 3 230 3 304 1 350 3 325 1 143 2 285 1 381 2 215 2 357 10 
264 1 101 1 195 1 0 2 150 1 197 1 4 1 52 2 316 4 58 2 242 26 136 2 243 2 25 2 374 2 85 2 159 1 86 6 139 3 281 2 118 14 345 2 228 1 8 3 91 3 230 3 33 1 350 3 325 1 143 3 381 4 232 1 215 3 357 12 
293 1 84 1 120 1 343 1 102 1 183 1 176 1 328 1 311 1 337 1 
115 1 182 1 279 1 84 1 343 1 102 1 337 1 293 1 120 1 135 1 24 1 259 2 201 1 261 1 110 1 176 1 328 1 311 1 
115 1 182 1 279 1 84 1 343 1 102 1 337 1 293 1 120 1 135 1 24 1 259 2 201 1 261 1 110 1 176 1 328 1 311 1 
115 1 182 1 279 1 84 1 343 1 102 1 337 1 293 1 120 1 135 1 24 1 259 2 201 1 261 1 110 1 176 1 328 1 311 1 
296 1 122 1 299 1 
296 1 122 1 299 1 
368 1 218 1 
368 1 218 1 299 1 
377 1 262 1 
147 2 361 1 337 1 293 1 223 1 24 1 226 1 110 1 79 1 372 1 176 1 279 1 182 1 251 1 377 1 319 2 32 2 188 2 284 1 348 1 120 1 308 2 259 1 262 1 125 1 328 1 311 1 
296 1 122 1 
368 1 218 1 299 1 
361 1 251 1 
293 1 317 1 120 1 176 1 335 1 1 1 328 1 311 1 337 1 
233 2 147 2 237 1 217 1 128 1 294 2 132 1 270 1 151 1 55 1 242 2 80 1 112 1 244 2 278 1 248 2 86 2 139 1 319 2 118 1 8 1 321 1 64 1 185 1 209 1 347 1 188 2 143 1 10 1 215 1 357 1 
233 2 248 2 44 1 229 1 282 1 64 1 303 1 322 1 209 1 167 1 257 1 22 1 352 1 272 1 57 2 37 1 330 1 244 2 59 1 
233 1 248 1 194 1 44 1 282 1 64 1 322 1 167 1 209 1 257 1 22 1 352 1 272 1 57 2 330 1 244 1 59 1 
178 1 233 1 248 1 75 1 18 1 103 1 321 1 64 1 303 1 65 1 132 1 209 1 257 1 244 1 
233 1 248 1 44 1 229 1 282 1 303 1 64 1 322 1 209 1 167 1 257 1 22 1 352 1 272 1 57 2 330 1 244 1 59 1 
212 1 
47 1 115 1 68 1 375 1 141 1 108 1 196 1 
358 1 290 1 48 1 56 1 200 1 24 1 115 2 182 1 375 1 29 1 253 1 378 1 164 1 34 1 68 1 141 1 145 1 
99 1 146 2 233 3 291 2 0 2 336 2 47 1 340 1 56 4 108 1 200 6 203 2 243 2 342 3 244 3 115 8 248 3 160 2 253 5 64 3 164 4 255 1 305 2 209 4 350 2 68 8 71 2 12 1 310 2 126 2 220 1 365 2 130 2 132 3 313 2 271 6 78 2 24 5 175 6 178 1 182 5 375 9 29 12 321 10 320 3 378 4 91 2 230 2 34 4 141 2 37 1 329 1 287 1 145 3 
0 2 150 1 365 2 313 1 271 5 52 1 56 2 24 1 200 3 175 5 243 2 25 1 158 1 115 5 182 1 159 1 375 8 160 1 29 6 184 1 228 1 345 1 253 1 378 2 91 2 164 2 230 2 33 1 34 2 350 2 68 5 141 2 232 1 329 1 145 1 
43 1 147 1 360 1 0 1 365 2 104 1 269 1 152 1 56 1 24 1 373 1 6 1 182 1 375 2 160 1 319 1 378 1 164 1 208 1 32 1 34 1 188 1 350 2 258 1 68 2 308 1 168 1 72 1 
115 1 375 1 378 1 164 1 47 1 34 1 68 1 141 1 56 1 108 1 
115 5 375 5 160 1 29 10 0 2 365 2 91 2 230 2 350 2 68 5 271 5 200 5 310 1 175 5 243 2 
233 1 43 1 147 2 45 1 270 1 132 1 242 1 79 1 373 2 244 1 178 1 227 1 204 1 248 1 86 2 376 1 139 1 319 3 8 1 320 1 321 1 64 1 185 1 32 2 209 1 188 3 143 1 308 2 10 1 215 1 96 1 357 1 
115 4 100 1 375 1 29 4 378 1 164 1 34 1 271 2 68 2 313 1 141 2 56 1 200 2 175 2 329 1 
115 1 182 1 141 1 24 1 253 1 145 1 
99 1 233 4 103 1 132 1 198 1 313 2 56 2 24 3 244 4 276 1 178 2 248 4 182 3 7 1 375 2 253 4 321 1 64 1 378 2 164 2 65 1 209 1 34 1 68 2 12 2 260 1 192 1 329 2 145 2 
40 1 293 1 311 1 
40 1 293 1 311 1 
40 1 293 1 311 1 
293 1 346 1 311 1 
293 1 346 1 311 1 
293 1 346 1 311 1 
293 1 311 1 
176 1 337 1 
293 1 377 1 102 1 207 1 311 1 
374 2 264 1 100 1 6 1 86 2 139 1 0 1 118 4 228 1 345 1 8 1 104 1 186 1 350 1 152 1 35 1 52 1 143 1 316 2 215 1 242 8 25 1 357 4 
264 1 100 1 0 1 104 1 152 1 52 2 316 3 242 11 25 1 374 2 6 1 86 4 85 1 139 2 228 1 345 1 118 6 8 2 91 1 186 1 230 1 350 2 35 1 143 2 70 1 285 1 215 2 357 5 
264 1 100 1 0 3 150 1 104 1 152 1 52 1 316 4 242 19 58 1 243 2 25 1 374 3 6 1 85 1 159 1 86 6 139 3 345 1 228 1 118 9 8 3 91 2 186 1 230 2 33 1 350 3 35 1 70 1 143 3 232 1 215 3 357 10 
264 1 100 1 0 2 150 1 104 1 152 1 52 1 316 5 58 1 242 17 243 1 25 1 374 3 6 1 85 2 86 6 159 1 139 3 345 1 228 1 118 10 8 3 91 2 186 1 230 2 33 1 350 3 35 1 70 1 143 3 232 1 215 3 357 7 
374 2 264 1 100 1 6 1 86 2 139 1 0 1 118 4 228 1 345 1 8 1 104 1 186 1 350 1 152 1 35 1 52 1 143 1 316 2 215 1 242 8 25 1 357 4 
264 1 0 2 150 1 52 1 316 2 242 12 243 2 25 1 374 1 85 1 86 2 159 1 139 1 345 1 228 1 118 6 8 1 91 2 230 2 33 1 350 2 143 1 232 1 215 1 357 6 
264 1 100 1 0 2 150 1 104 1 152 1 52 1 316 5 242 18 58 2 243 1 25 1 374 3 6 1 85 2 159 1 86 8 139 4 228 1 345 1 118 10 8 4 91 2 186 1 230 2 33 1 350 3 35 1 70 1 143 4 232 1 215 4 357 8 
264 1 0 2 150 1 52 1 316 6 242 16 58 2 243 2 25 1 374 3 85 3 159 1 86 8 139 4 228 1 345 1 118 9 8 4 91 3 230 3 304 1 33 1 350 3 143 4 232 1 215 4 357 7 
374 3 6 3 85 3 0 1 118 3 104 3 186 2 350 1 152 1 35 1 316 6 242 7 357 4 
264 1 100 1 0 2 150 1 104 1 152 1 52 1 316 4 242 18 58 2 243 1 25 1 374 3 6 1 85 1 159 1 86 8 139 4 228 1 345 1 118 10 8 4 91 2 186 1 230 2 304 1 33 1 350 3 35 1 143 4 232 1 215 4 357 8 
374 2 100 1 6 1 85 1 86 4 139 2 0 1 118 4 8 2 104 1 186 1 350 1 152 1 35 1 143 2 316 3 242 8 215 2 58 1 357 4 
374 2 100 1 6 1 0 1 118 3 104 1 196 1 186 1 350 1 152 1 35 1 316 2 242 6 357 3 
374 1 86 2 85 1 139 1 0 1 118 2 8 1 91 1 230 1 350 1 70 1 143 1 316 2 215 1 242 4 243 1 357 2 
374 1 85 1 0 1 345 1 118 3 91 1 230 1 350 1 52 2 285 1 316 2 242 7 243 1 25 1 357 4 
100 1 0 3 104 2 152 1 52 2 316 9 242 23 58 2 243 2 275 1 374 5 6 2 85 4 86 4 250 1 139 2 118 11 345 2 8 2 91 2 186 1 230 2 350 3 35 1 143 2 285 1 13 1 215 2 357 12 
52 1 242 1 357 1 
118 1 345 1 242 1 
374 2 86 2 85 1 139 1 0 1 118 3 8 1 91 1 230 1 350 1 143 1 70 1 316 3 215 1 310 1 242 6 243 1 357 3 
264 1 0 2 150 1 52 1 316 2 242 12 243 2 25 1 374 1 85 1 86 2 159 1 139 1 345 1 228 1 118 6 8 1 91 2 230 2 33 1 350 2 143 1 232 1 215 1 357 6 
374 1 6 1 85 1 0 1 118 3 104 1 350 1 152 1 316 2 242 6 357 3 
374 1 6 1 85 1 86 2 139 1 118 1 8 1 104 1 186 1 35 1 143 1 316 2 242 3 58 1 215 1 275 1 357 2 
374 3 264 1 6 2 86 2 85 2 139 1 0 2 118 5 8 1 104 2 269 1 350 2 152 1 143 1 316 5 215 1 242 10 357 5 
264 1 86 2 85 1 139 1 118 2 8 1 230 1 350 1 143 1 316 1 215 1 242 2 
374 1 264 1 86 2 85 1 139 1 0 1 118 2 8 1 91 1 230 1 350 1 143 1 316 2 215 1 242 4 243 1 357 2 
374 1 264 1 6 1 86 6 85 1 139 3 118 1 8 3 104 1 304 1 143 3 316 2 58 1 242 3 215 3 275 1 357 2 
264 1 100 1 0 5 104 3 152 2 52 4 316 12 58 2 242 34 243 3 25 1 275 1 277 1 374 7 6 3 86 10 85 5 139 5 345 3 118 16 8 5 91 3 186 1 230 3 304 1 350 5 35 1 95 1 70 1 143 5 285 1 215 5 327 1 357 18 
188 1 147 1 23 1 206 1 319 1 79 1 97 1 
288 1 147 1 83 1 216 1 206 1 319 1 20 1 106 1 188 1 23 1 79 1 97 1 
178 1 132 1 209 1 233 1 248 1 103 1 321 1 64 1 65 1 196 1 244 1 
178 1 233 1 147 1 204 1 248 1 362 1 319 2 321 1 320 1 64 1 132 1 32 1 209 1 188 2 308 1 96 1 79 1 244 1 
233 1 147 2 204 1 248 1 360 1 280 1 362 1 319 2 321 3 320 2 130 1 64 1 132 2 32 1 209 1 188 2 211 1 308 2 12 1 96 1 79 1 126 1 244 1 
137 1 233 2 147 2 248 2 360 1 280 1 362 1 319 2 321 3 320 2 161 1 130 1 64 1 132 2 32 1 209 1 188 2 211 1 308 2 12 1 96 1 79 1 126 1 244 2 
178 1 137 1 115 1 233 3 248 3 182 2 253 1 320 1 321 4 130 1 64 1 336 1 132 1 323 1 305 1 209 1 141 1 24 2 12 1 126 1 244 3 300 1 342 1 
178 1 137 1 115 1 233 3 248 3 182 2 253 1 320 1 321 4 130 1 64 1 336 1 132 1 305 1 209 1 141 1 78 1 24 2 12 1 126 1 244 3 342 1 
209 1 233 1 248 1 64 1 170 1 244 1 
178 2 233 7 248 6 127 1 320 1 321 3 170 1 64 2 255 1 294 1 338 1 132 2 93 1 209 3 240 1 94 1 272 1 55 1 37 1 202 1 244 7 
233 1 147 1 100 1 0 1 45 1 104 1 3 1 152 1 242 6 244 1 204 1 248 1 6 1 118 3 8 2 64 1 210 1 209 1 347 1 350 1 308 1 10 2 215 2 124 1 357 3 217 1 362 1 219 1 132 1 316 2 79 2 374 2 86 4 376 1 139 2 319 2 320 1 321 1 185 2 186 1 32 1 188 2 35 1 143 2 37 1 96 1 144 1 
233 1 99 1 146 1 336 1 47 1 56 2 78 1 108 1 24 3 203 1 244 1 342 1 178 1 115 1 248 1 182 3 375 1 253 2 321 2 378 2 164 2 305 1 34 2 68 1 141 1 71 1 125 1 145 1 
233 2 248 2 320 1 321 2 170 1 64 1 255 1 305 1 132 1 209 2 340 1 37 1 244 2 
178 1 137 1 233 4 248 4 103 1 321 1 64 1 65 1 339 1 132 1 209 1 37 1 244 4 
233 2 301 1 248 2 333 1 320 1 321 1 64 1 338 1 132 1 209 2 94 1 12 1 39 1 244 2 
178 1 209 1 167 1 233 1 248 1 57 1 282 1 64 1 330 1 244 1 
233 2 248 2 321 1 64 1 132 1 209 1 272 1 55 1 37 1 80 1 244 2 
178 1 233 1 147 1 248 1 362 1 319 2 321 1 320 1 161 1 64 1 132 1 32 1 209 1 188 2 308 1 96 1 79 1 244 1 
233 1 248 1 320 1 321 1 64 1 255 1 338 1 132 1 209 2 94 1 12 1 202 1 244 1 
178 1 233 5 248 4 127 1 103 1 321 3 64 2 65 1 339 1 132 2 209 2 240 1 55 1 12 1 37 1 244 5 
178 1 60 1 233 5 248 4 103 1 321 3 64 2 65 1 339 1 132 2 209 2 240 1 55 1 12 1 37 1 244 5 
278 1 147 1 237 1 319 1 128 1 66 1 188 1 67 1 213 1 
66 1 98 1 16 1 
66 1 67 1 154 1 213 1 79 1 
98 1 115 1 263 1 245 1 16 1 182 2 360 1 280 1 336 1 66 1 67 2 141 1 211 1 154 2 24 2 213 2 79 1 125 1 331 1 
41 1 61 1 326 1 196 1 
41 1 289 1 189 1 61 1 123 1 326 1 11 1 
169 1 180 1 289 1 
41 1 181 1 289 3 61 1 74 1 369 1 189 1 297 1 134 2 123 1 326 1 11 3 
41 1 166 1 114 1 289 2 189 1 61 1 123 1 326 1 11 2 
289 1 282 1 140 1 189 1 349 1 297 1 352 1 123 1 57 1 326 1 11 1 
289 1 189 1 61 1 297 1 123 1 326 1 11 1 
41 1 289 1 189 1 61 2 297 1 123 1 11 1 
289 2 61 1 163 1 187 1 189 2 297 1 307 1 123 2 326 1 11 2 
41 1 114 2 289 3 61 1 88 1 2 1 140 1 189 1 297 1 123 1 36 1 326 2 11 3 
41 1 114 1 289 2 61 1 238 1 282 1 322 1 189 1 297 1 352 1 57 2 123 1 326 1 11 2 330 1 
41 1 114 2 289 4 61 1 88 1 166 1 140 1 189 2 297 1 123 2 326 2 11 4 157 1 
41 1 289 1 189 1 61 1 297 1 123 1 326 1 11 1 
41 2 114 2 289 4 61 2 74 1 265 1 88 1 140 1 369 1 189 1 134 1 123 1 326 3 11 4 
41 1 114 1 289 2 61 1 267 1 283 1 189 1 297 1 107 1 123 1 326 1 11 2 
41 1 369 1 246 1 289 3 189 1 61 1 297 1 74 2 134 2 123 1 326 1 11 3 
31 1 326 2 89 2 214 1 
42 1 289 1 189 1 297 1 123 1 11 1 
41 1 114 1 289 2 189 1 61 1 297 1 36 1 123 1 326 1 11 2 
309 1 
41 1 114 1 289 3 189 1 61 1 297 1 134 1 36 1 123 1 326 1 11 3 
140 1 265 1 88 1 326 1 
61 1 326 1 
41 1 289 1 189 1 61 1 297 1 123 1 326 1 11 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 22 47 55 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 212 75 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (156,293) (54,317) (54,317) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (156,293) (156,293) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (156,293) (54,317) (54,317) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (156,293) (54,317) (54,317) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (156,293) (54,317) (54,317) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 212 75 93 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 247 1 158 9 276 2 330 2 84 5 283 1 45 2 189 1 257 1 259 1 8 4 9 2 169 2 290 9 346 3 210 6 72 1 145 1 265 2 214 1 128 1 323 1 270 1 38 1 56 1 130 1 243 2 
61 1 247 1 158 9 276 2 330 2 84 5 283 1 189 1 45 2 257 1 259 1 8 4 9 2 169 2 290 9 346 3 210 6 72 1 145 1 265 2 214 1 128 1 323 1 270 1 38 1 56 1 130 1 243 2 
61 1 247 1 158 10 276 2 330 2 84 6 283 1 189 1 45 2 257 1 259 1 8 5 9 2 169 2 290 10 346 4 210 7 72 1 145 1 265 2 214 1 128 1 323 1 270 1 38 1 56 1 130 1 243 2 
61 1 247 1 158 7 276 2 330 2 84 4 283 1 189 1 45 1 257 1 259 1 8 3 9 2 169 2 290 7 346 2 210 4 72 1 145 1 265 2 214 1 128 1 270 1 38 1 56 1 130 1 243 2 
61 1 9 1 330 1 276 1 158 4 346 1 290 4 210 3 72 1 84 3 265 1 128 1 323 1 45 2 270 1 130 1 243 1 8 2 
276 1 158 2 330 1 209 1 169 1 290 2 345 1 72 1 84 1 265 1 128 1 270 1 56 1 254 1 257 1 243 1 
247 1 276 2 158 3 169 1 290 3 346 1 210 1 72 1 84 2 128 1 270 1 243 2 8 1 
9 1 61 1 355 1 181 1 247 1 330 1 276 2 158 9 169 1 290 9 346 3 210 7 72 1 84 5 283 1 265 1 214 1 128 1 323 1 45 2 270 1 130 1 243 2 8 4 
9 1 61 1 355 1 181 1 247 1 330 1 276 2 158 9 169 1 290 9 346 3 210 7 72 1 84 5 283 1 265 1 214 1 128 1 323 1 45 2 270 1 130 1 243 2 8 4 
168 1 216 1 122 1 
168 1 253 2 135 1 
110 2 287 2 170 1 60 2 377 2 127 2 359 1 119 2 
110 2 64 1 21 2 250 1 281 1 186 2 359 1 119 2 310 1 44 1 286 1 69 1 287 2 339 1 28 1 314 1 167 1 255 1 70 1 206 1 140 1 260 1 193 2 94 1 170 1 127 3 322 1 77 1 105 1 324 1 15 2 60 2 377 3 218 1 354 2 326 1 198 1 
110 1 287 1 363 1 170 1 195 1 60 1 348 1 377 1 127 1 119 1 
168 1 125 1 110 1 182 1 170 1 195 1 237 1 348 1 127 2 119 2 175 1 216 1 287 1 26 1 27 1 121 1 363 2 60 1 377 2 244 1 139 1 
168 1 110 2 170 1 195 1 237 1 348 1 127 2 119 2 175 2 216 1 26 1 287 2 27 1 121 1 363 2 60 2 377 2 244 2 139 1 
175 1 184 1 126 1 97 1 244 1 
168 1 175 2 216 1 126 1 97 1 179 1 244 2 101 1 
175 1 126 1 244 1 
110 1 195 1 170 1 97 1 348 1 127 1 119 1 175 1 26 1 287 1 363 1 60 1 377 1 244 1 
168 1 
168 1 175 2 216 1 200 1 126 1 97 1 244 2 101 1 
175 3 33 1 55 1 47 1 36 1 22 1 300 1 97 2 191 1 244 3 
122 1 359 1 
110 1 127 2 119 2 359 2 42 1 37 1 287 1 60 1 377 2 
49 1 107 1 67 1 
94 1 21 1 250 1 127 1 186 1 359 1 286 1 69 1 239 1 339 1 105 1 324 1 314 1 377 1 354 1 198 1 
62 1 94 1 250 1 21 1 127 2 186 1 119 1 226 1 286 1 69 1 287 1 339 1 105 1 324 1 314 1 49 1 60 1 377 2 354 1 198 1 
62 1 207 1 182 1 110 1 127 5 119 5 359 1 226 2 42 1 43 1 338 1 287 4 60 4 377 5 
269 1 287 2 363 1 60 2 348 1 377 2 127 2 119 2 
226 1 110 1 287 3 60 3 377 3 127 3 359 1 119 3 
287 1 363 1 60 1 348 1 377 1 127 1 119 1 
42 1 37 1 110 1 287 1 363 1 60 1 377 1 127 1 119 1 
186 1 226 1 42 1 286 1 44 1 339 1 287 3 139 1 140 1 193 1 94 1 237 1 105 1 15 2 60 3 354 1 244 1 198 1 62 1 110 2 64 1 21 1 250 1 114 1 119 3 359 1 69 1 121 1 27 1 363 2 314 1 255 1 70 1 30 1 206 1 260 1 170 1 171 1 127 4 175 1 322 1 77 1 324 1 218 1 377 4 
226 1 207 1 182 1 287 1 60 1 377 2 127 2 359 1 119 2 
168 1 62 1 110 1 171 1 237 1 127 3 119 3 42 1 175 1 226 2 287 3 27 1 121 1 363 1 316 1 60 3 377 3 244 1 139 1 
110 1 127 2 119 2 226 1 42 1 287 2 60 2 49 1 377 2 107 1 
94 1 21 1 250 1 127 1 186 1 359 1 286 1 69 1 339 1 105 1 314 1 324 1 377 1 354 1 198 1 
112 1 94 1 21 1 250 1 127 1 186 1 74 1 359 1 69 1 339 1 314 1 324 1 377 1 354 1 198 1 
63 1 64 1 18 1 281 2 308 1 67 2 335 1 360 1 44 2 165 1 255 1 70 1 49 2 206 1 364 1 140 1 193 4 267 1 215 1 350 1 77 1 271 1 15 2 107 2 
269 1 287 1 121 1 363 1 60 1 377 1 127 1 119 1 
81 1 230 1 
81 1 230 1 
204 1 306 1 
204 1 306 1 
204 1 306 1 
219 1 81 1 230 1 
219 1 81 1 230 1 
187 1 81 1 230 1 
204 1 83 1 81 2 230 2 306 1 233 1 
219 1 81 1 230 1 
81 1 230 1 31 1 
81 1 230 1 31 1 
81 1 230 1 31 1 
143 1 161 1 136 1 172 1 212 1 100 1 127 1 119 1 175 1 102 1 337 1 75 1 103 1 287 1 60 1 377 1 244 1 51 1 
168 1 143 2 136 2 172 1 100 2 175 2 54 1 336 1 25 1 103 2 156 1 317 1 244 2 51 2 
9 1 330 1 265 1 
330 1 254 1 265 1 
9 2 254 1 3 1 318 1 163 1 265 3 
9 1 368 1 254 1 3 1 318 1 265 2 
9 1 254 1 3 1 318 2 265 2 
277 1 199 2 18 1 249 1 161 1 225 1 285 1 337 1 165 1 5 3 253 3 205 1 191 1 341 2 364 1 168 2 36 1 126 1 97 4 349 1 101 1 175 5 267 1 102 1 13 1 216 1 131 2 300 1 58 1 135 1 39 2 244 5 
17 1 199 6 18 3 184 5 249 2 305 1 161 4 201 1 224 1 225 3 285 2 165 3 5 8 253 9 191 2 364 3 168 5 33 1 36 2 146 1 126 6 97 7 101 1 349 1 175 9 267 3 216 1 131 6 80 5 58 1 300 2 133 1 135 3 39 6 244 9 
18 1 199 2 249 1 161 1 225 1 285 1 165 1 5 3 253 4 205 1 191 1 341 1 364 1 168 3 33 1 36 1 97 2 175 3 267 1 13 1 216 1 131 2 300 1 135 2 39 2 244 3 
17 1 199 4 18 2 249 1 161 2 201 1 224 1 225 2 285 1 165 2 5 5 253 7 205 1 191 1 341 2 364 2 168 4 33 1 36 1 97 3 175 4 267 2 13 1 216 1 131 4 300 1 135 3 39 4 244 4 
324 1 122 1 192 1 
202 1 324 1 
78 1 
69 1 324 1 314 1 
344 1 324 1 
69 1 324 1 
141 1 69 1 324 3 314 1 298 1 192 2 
193 7 235 1 34 1 71 1 281 4 85 1 174 1 371 2 335 3 267 1 360 2 44 3 203 1 106 1 134 1 364 1 303 1 
193 7 235 1 34 1 71 1 281 4 85 1 174 1 371 2 335 3 267 1 360 2 44 3 203 1 106 1 134 1 364 1 303 1 
193 7 235 1 71 1 34 1 281 4 85 1 174 1 284 1 371 2 335 3 267 1 360 2 44 3 203 1 106 1 134 1 364 1 303 1 
18 3 64 1 19 1 185 3 281 19 85 2 225 3 358 1 335 17 360 8 44 18 203 5 165 3 255 1 70 1 364 6 193 37 52 1 235 1 320 1 71 1 34 2 144 1 213 1 174 2 371 2 373 1 267 6 77 1 240 4 106 1 15 2 134 5 301 1 303 9 
64 2 281 5 85 1 335 4 360 3 44 4 203 1 255 2 70 2 364 1 261 1 193 9 235 1 34 1 71 1 12 1 213 1 371 2 174 1 267 1 77 2 15 4 134 1 303 1 
330 1 158 2 276 1 220 1 109 1 21 1 250 1 84 1 223 1 4 1 163 1 186 1 188 1 227 1 254 1 6 1 9 1 169 1 290 2 210 1 72 1 149 1 265 2 128 1 268 1 270 1 178 1 243 1 354 1 198 1 
0 1 330 1 158 3 276 1 220 1 109 1 21 1 250 1 84 1 223 1 163 1 4 1 309 1 186 1 227 1 254 1 9 1 208 1 169 1 290 3 210 2 72 1 149 1 265 2 128 1 268 1 178 1 243 1 354 1 198 1 
158 2 330 1 21 1 250 1 84 1 223 1 4 1 309 1 163 1 186 1 227 1 254 1 9 1 169 1 208 1 290 2 210 2 72 1 149 1 265 2 128 1 268 1 178 1 354 1 198 1 
0 1 157 1 276 1 158 1 169 2 290 1 11 1 40 1 250 1 21 1 223 2 4 2 186 1 268 2 69 1 251 1 339 1 340 1 324 1 315 1 243 1 354 1 198 1 
330 1 158 1 276 1 220 1 109 1 21 1 250 1 223 1 4 1 163 1 186 1 227 1 254 1 6 1 9 1 208 1 169 1 290 1 149 1 265 2 268 1 270 1 178 1 243 1 354 1 198 1 
228 1 
1 2 182 1 40 1 278 1 41 2 285 1 186 2 87 2 339 2 138 1 5 2 231 2 232 1 191 1 48 1 139 1 96 2 98 1 237 1 101 3 349 1 242 1 300 1 354 2 244 5 198 1 157 1 21 2 250 1 117 1 118 2 119 1 69 1 27 1 121 1 363 1 253 2 166 1 168 3 125 1 36 1 126 6 127 1 321 1 175 5 374 1 375 1 216 2 129 4 376 2 177 1 324 1 135 2 39 2 377 1 
182 1 200 1 119 1 27 1 121 1 363 1 166 1 231 1 232 1 139 1 168 2 125 1 126 2 237 1 127 1 321 1 101 1 175 3 374 1 216 2 129 2 177 1 377 1 244 3 
168 2 125 1 182 1 96 1 237 1 321 1 127 1 119 1 175 2 374 1 216 2 129 3 121 1 27 1 177 1 363 1 166 1 232 1 377 1 244 2 139 1 
182 1 200 1 119 1 27 1 121 1 363 1 166 1 231 1 232 1 139 1 168 3 125 1 96 1 126 2 237 1 127 1 321 1 101 1 175 3 374 1 216 3 129 3 177 1 376 1 377 1 244 3 
1 2 182 1 331 1 278 1 41 2 87 2 287 1 138 1 5 1 231 4 232 1 191 1 139 1 195 1 96 3 237 1 348 1 101 3 349 1 154 1 300 1 60 1 244 5 110 1 111 1 200 1 118 2 119 2 26 1 121 1 27 1 363 2 361 1 166 1 168 4 125 1 170 1 36 1 126 7 321 1 127 2 73 1 175 5 374 1 216 4 129 5 177 1 376 4 377 2 39 1 135 2 
1 2 182 1 278 1 41 2 87 2 138 1 5 1 231 2 232 1 191 1 139 1 96 2 98 1 237 1 349 1 101 2 300 1 244 4 118 2 119 1 121 1 27 1 363 1 166 1 253 2 168 4 125 1 36 1 126 4 127 1 321 1 175 4 374 1 216 3 129 4 177 1 376 2 377 1 39 1 135 2 
1 2 182 1 111 1 331 1 278 1 41 2 118 2 119 1 87 2 138 1 27 1 121 1 361 1 5 1 363 1 166 1 231 2 232 1 191 1 139 1 168 3 125 1 36 1 96 2 126 4 237 1 127 1 321 1 101 2 349 1 175 4 374 1 216 3 129 4 376 2 177 1 300 1 135 2 39 1 377 1 244 4 
1 2 182 1 111 1 331 1 278 1 41 2 118 2 119 1 87 2 138 1 27 1 121 1 361 1 5 1 363 1 166 1 231 2 232 1 191 1 139 1 168 3 125 1 36 1 96 2 126 4 237 1 127 1 321 1 101 2 349 1 175 4 374 1 216 3 129 4 376 2 177 1 300 1 135 2 39 1 377 1 244 4 
304 2 182 1 160 2 41 2 118 2 119 1 138 1 27 1 121 1 361 1 5 1 363 1 88 1 253 2 166 1 231 2 232 1 191 1 139 1 168 3 125 1 36 1 96 2 126 4 237 1 127 1 321 1 264 1 101 2 349 1 175 4 374 1 216 3 129 4 376 2 177 1 273 1 300 1 39 1 377 1 244 4 
1 2 331 1 111 1 182 1 278 1 41 2 118 2 119 1 87 2 138 1 27 1 121 1 361 1 5 1 363 1 166 1 231 3 232 1 191 1 139 1 168 3 125 1 36 1 96 3 126 5 237 1 127 1 321 1 73 1 101 2 349 1 175 4 374 1 216 3 129 5 177 1 376 3 300 1 135 2 39 1 377 1 244 4 
1 2 331 1 111 1 182 1 278 1 41 2 118 2 119 1 87 2 138 1 27 1 121 1 361 1 5 1 363 1 166 1 231 3 232 1 191 1 139 1 168 3 125 1 36 1 96 3 126 5 237 1 127 1 321 1 73 1 101 2 349 1 175 4 374 1 216 3 129 5 177 1 376 3 300 1 135 2 39 1 377 1 244 4 
182 1 41 2 138 1 5 1 231 2 232 1 191 1 139 1 96 2 98 1 237 1 349 1 101 2 300 1 244 4 304 2 160 2 118 2 119 1 121 1 27 1 363 1 166 1 253 2 168 3 125 1 36 1 126 4 127 1 321 1 175 4 374 1 216 3 129 4 177 1 376 2 273 1 377 1 39 1 
63 1 64 1 281 3 67 1 359 2 335 2 360 2 44 3 203 1 122 1 255 1 70 1 49 1 206 1 140 1 364 1 193 6 235 1 71 1 174 1 371 1 267 1 77 1 15 2 134 1 107 1 
183 1 64 2 18 2 280 1 185 3 281 8 225 2 67 11 359 1 335 2 360 1 44 6 165 1 167 1 255 2 70 2 49 11 206 2 140 1 364 2 319 1 193 14 144 1 370 1 373 1 322 1 267 1 77 2 240 3 15 4 59 1 107 4 303 1 
62 1 64 1 250 1 21 1 281 1 186 1 359 1 119 1 226 1 286 1 44 1 69 1 339 1 287 1 314 1 255 1 167 1 70 1 206 1 140 1 193 2 94 1 127 2 372 1 322 1 217 1 239 1 14 1 77 1 105 1 324 1 59 1 15 2 60 1 354 1 377 2 107 1 198 1 
281 10 225 2 186 3 226 1 335 8 44 10 286 2 339 1 287 1 49 7 140 3 193 20 235 1 94 2 142 2 236 2 347 1 105 2 16 1 15 6 59 1 60 1 354 3 107 7 198 2 303 4 62 1 64 3 18 2 21 3 250 2 307 2 67 7 359 2 119 1 360 4 203 1 69 2 312 1 165 2 314 2 167 1 255 3 70 3 123 2 206 3 260 2 364 3 208 1 71 1 371 1 174 1 127 3 267 3 322 1 77 3 324 2 134 1 377 3 
157 1 63 1 64 2 40 1 250 2 21 8 281 1 186 8 119 1 226 1 188 1 44 1 69 2 287 1 339 2 28 2 229 1 255 2 167 1 70 2 206 2 90 1 140 2 193 2 343 1 208 1 127 1 322 1 104 1 77 2 351 1 324 3 15 4 60 1 275 1 377 1 354 7 327 1 198 2 
110 1 64 1 18 1 281 1 225 1 67 1 119 1 335 1 42 1 360 1 44 2 287 1 165 1 255 1 70 1 49 1 206 1 140 1 364 1 193 3 342 1 127 1 267 1 77 1 15 2 59 1 60 1 377 1 107 1 
193 2 63 1 64 1 18 1 281 2 67 1 335 1 77 1 271 1 255 1 70 1 15 2 49 1 107 1 206 1 303 1 140 1 364 1 
193 2 63 1 64 1 308 1 67 1 335 1 360 1 267 1 44 2 77 1 165 1 255 1 70 1 15 2 49 1 107 1 206 1 140 1 
63 1 18 1 64 1 281 2 225 1 67 2 335 2 360 1 44 2 165 1 255 1 70 1 49 2 206 1 364 1 140 1 193 4 267 1 77 1 15 2 107 2 303 1 
193 2 64 1 18 1 281 2 67 1 335 1 77 1 271 1 255 1 70 1 15 2 49 1 275 1 107 1 206 1 303 1 140 1 364 1 
193 2 64 1 308 1 67 1 335 1 360 1 267 1 44 2 77 1 165 1 255 1 70 1 15 2 49 1 275 1 107 1 206 1 140 1 
18 1 64 1 281 2 225 1 67 2 335 2 360 1 44 2 165 1 255 1 70 1 49 2 206 1 364 1 140 1 193 4 267 1 77 1 15 2 275 1 107 2 303 1 
193 4 64 1 18 1 281 2 225 1 67 2 335 2 360 1 267 1 44 2 165 1 77 1 255 1 70 1 15 2 49 2 107 2 206 1 303 1 140 1 364 1 
64 1 250 1 21 1 281 1 186 1 359 1 286 1 44 1 69 1 339 1 314 1 167 1 255 1 70 1 206 1 260 1 140 1 193 2 94 1 127 1 322 1 77 1 105 1 324 1 15 2 354 1 377 1 198 1 
112 1 64 1 250 1 21 1 281 1 333 1 186 1 359 1 44 1 69 1 339 1 314 1 167 1 255 1 70 1 206 1 140 1 193 2 94 1 74 1 127 1 322 1 77 1 324 1 15 2 354 1 377 1 198 1 
18 1 64 1 281 2 225 1 67 2 335 2 360 1 44 2 165 1 255 1 70 1 49 2 206 1 364 1 140 1 193 4 267 1 77 1 15 2 59 1 107 2 303 1 
18 1 64 1 250 1 21 1 281 2 307 1 225 1 67 2 186 1 335 2 360 1 44 2 286 1 188 1 69 1 165 1 314 1 255 1 70 1 49 2 206 1 364 1 260 1 140 1 193 4 94 1 127 1 267 1 77 1 105 1 324 1 15 2 354 1 377 1 107 2 303 1 198 1 
110 1 64 1 18 1 281 2 225 1 67 1 119 1 335 1 42 1 44 1 165 1 287 1 255 1 70 1 49 1 206 1 140 1 364 1 193 3 147 1 127 1 267 1 77 1 15 2 59 1 60 1 377 1 107 1 303 1 
64 2 18 3 221 2 185 1 281 9 225 3 86 1 335 6 360 3 44 10 165 3 255 2 70 2 261 1 364 3 124 1 193 19 194 1 144 1 373 1 267 3 77 2 240 2 325 2 57 1 155 1 299 1 15 4 108 1 303 3 
64 3 18 3 221 4 185 2 281 14 282 1 225 3 86 2 335 4 360 2 44 12 311 1 165 2 255 3 70 3 261 1 364 3 124 1 193 26 194 1 35 1 144 2 211 1 294 1 213 2 267 2 77 3 240 2 325 1 299 1 132 1 15 6 303 2 108 2 
221 4 185 3 281 20 282 1 225 4 86 1 335 8 44 21 193 41 235 1 144 3 194 1 294 1 240 4 57 1 299 1 15 6 303 4 108 2 18 4 64 3 360 4 203 1 165 4 311 1 255 3 252 1 70 3 364 5 261 1 124 1 71 1 35 1 211 1 213 1 174 1 371 1 373 1 267 5 77 3 325 1 132 1 134 1 
64 4 18 4 221 4 185 3 281 20 282 1 225 4 86 1 335 7 360 4 44 18 203 1 311 1 165 3 252 1 255 4 70 4 261 1 364 5 124 1 193 38 235 1 71 1 194 1 35 1 144 3 211 1 294 1 213 2 371 1 174 1 373 1 267 4 77 4 240 4 325 1 57 1 299 1 132 1 15 8 134 1 108 2 303 3 
64 2 18 7 221 4 185 4 281 27 282 1 225 7 86 1 335 14 360 7 44 25 203 1 311 1 165 7 255 2 70 2 261 1 364 8 124 1 193 52 235 1 71 1 194 1 35 1 144 2 211 1 213 1 294 1 370 2 371 1 174 1 373 2 267 8 77 2 240 4 325 1 299 1 132 1 15 4 134 1 108 1 303 7 
103 1 156 1 136 1 293 1 100 1 51 1 
212 1 
234 1 103 1 136 1 100 1 51 1 
23 1 
291 1 
168 1 143 2 136 1 172 1 100 1 175 1 54 1 336 1 25 1 103 1 156 1 317 1 244 1 51 1 
168 1 143 2 136 1 172 1 100 1 175 1 54 1 336 1 25 1 103 1 156 1 317 1 244 1 51 1 
168 1 143 2 136 1 172 1 100 1 175 1 54 1 336 1 25 1 103 1 156 1 317 1 244 1 51 1 
23 1 
23 1 
291 1 
291 1 
248 1 65 1 
93 1 143 1 161 1 136 1 97 1 212 1 100 1 175 1 336 1 102 1 25 1 337 1 75 1 103 1 244 1 51 1 
246 1 64 1 20 1 250 1 21 2 281 1 186 2 119 2 44 1 69 1 28 2 256 1 255 1 167 1 70 1 50 1 206 1 90 1 140 1 193 2 343 1 369 1 127 2 322 1 77 1 324 1 59 1 15 2 377 2 354 2 198 1 
9 1 330 1 109 1 208 1 250 1 21 2 2 1 223 1 163 1 186 2 265 2 188 1 46 1 227 1 254 1 178 1 196 1 354 2 198 1 
9 1 330 1 109 1 208 1 21 1 2 1 250 1 223 1 163 1 186 1 265 2 227 1 254 1 178 1 29 1 354 1 198 1 
157 1 11 1 40 1 250 1 21 1 223 1 186 1 69 1 339 1 324 1 196 1 89 1 354 1 198 1 
9 1 330 1 109 1 208 1 21 1 2 1 250 1 223 1 163 1 186 1 265 2 46 1 227 1 254 1 178 1 196 1 354 1 198 1 
76 1 
168 1 216 1 164 1 5 1 122 1 113 1 39 1 
1 1 278 1 87 1 5 1 253 1 191 1 168 2 36 1 126 1 349 1 101 1 175 1 216 1 300 1 135 1 39 1 244 1 
357 1 18 1 199 3 21 1 250 1 66 1 225 1 137 1 186 1 285 1 202 2 69 1 165 1 313 1 339 1 314 1 5 4 253 6 191 2 192 1 364 1 139 1 168 3 95 1 292 1 236 1 36 2 126 2 101 1 349 2 175 2 267 1 324 4 131 3 79 1 298 1 300 2 274 1 39 3 135 3 354 1 244 2 198 2 
357 2 199 5 18 2 185 1 282 1 225 2 285 1 311 1 165 2 5 8 253 6 258 1 191 2 364 2 168 5 144 1 36 2 126 1 211 1 294 1 295 1 101 1 349 2 175 1 267 2 375 1 216 2 176 1 240 1 131 5 132 1 300 2 135 3 39 5 244 1 
357 2 331 1 110 1 19 1 119 1 203 1 26 1 287 1 363 1 5 2 258 1 191 1 364 2 36 1 195 1 170 1 348 1 127 1 174 1 349 1 175 1 267 1 300 1 60 1 377 1 134 1 39 2 244 1 
168 1 36 1 113 1 349 1 216 1 164 1 5 1 300 1 191 1 39 1 
168 5 357 2 18 2 199 5 236 1 225 2 267 2 165 2 5 5 131 5 253 10 258 1 39 5 135 5 364 2 
168 1 175 1 216 1 126 1 244 1 101 1 
157 1 356 1 40 1 250 1 21 4 116 2 117 1 186 4 285 2 334 1 69 1 339 2 5 2 191 2 33 1 53 1 36 2 126 4 349 1 101 2 175 3 375 2 324 1 242 1 300 2 354 4 39 2 244 3 198 1 
110 2 64 1 21 1 250 1 186 1 359 1 119 2 44 1 286 1 69 1 339 1 287 2 314 1 255 1 70 1 206 1 260 1 140 1 193 1 94 1 170 1 127 3 322 1 77 1 105 1 324 1 15 2 60 2 354 1 377 3 218 1 198 1 
168 4 199 2 36 1 371 1 285 1 349 1 216 2 375 1 5 1 131 2 253 4 300 1 191 1 135 2 39 2 
103 1 136 1 24 1 
103 1 136 1 24 1 
103 1 241 1 136 1 65 1 238 1 
103 1 136 1 24 1 
103 1 136 1 162 1 
103 1 136 1 162 1 
103 1 136 1 162 1 
103 1 136 1 
81 1 230 1 
193 8 64 2 235 1 71 1 281 4 213 1 371 1 174 1 335 3 267 1 360 2 44 4 203 1 77 2 255 2 70 2 15 4 134 1 364 1 303 1 
193 6 235 1 71 1 281 3 371 1 174 1 335 2 360 2 267 1 44 3 203 1 122 1 134 1 364 1 
193 4 64 1 18 1 281 2 225 1 152 1 335 2 360 1 267 1 44 2 165 1 77 1 255 1 70 1 15 2 364 1 303 1 
193 7 18 1 144 1 185 1 281 3 225 1 373 1 335 2 360 1 267 1 44 4 165 1 240 2 364 1 303 1 
18 2 183 1 64 2 185 2 281 11 225 2 335 9 360 5 44 12 203 2 165 2 255 2 70 2 364 3 7 1 193 23 235 1 71 1 370 1 213 2 371 1 174 1 373 1 267 3 77 2 240 2 15 4 134 2 303 4 
193 1 44 1 240 1 
193 1 185 1 281 1 
193 6 64 1 18 1 236 1 281 3 225 1 152 1 335 3 267 1 360 2 44 3 77 1 165 1 255 1 70 1 15 2 364 1 303 1 
64 1 18 2 185 1 281 6 282 1 225 2 335 2 360 1 44 6 311 1 165 2 255 1 70 1 261 1 364 2 193 12 144 1 211 1 294 1 267 2 77 1 240 1 132 1 15 2 303 1 
193 6 281 3 174 1 335 2 267 1 360 1 44 3 203 1 134 1 364 1 303 1 
193 3 64 1 235 1 71 1 281 1 213 1 335 2 360 1 44 2 203 1 77 1 255 1 70 1 15 2 134 1 303 1 7 1 
193 10 64 1 19 1 281 5 174 1 335 5 360 3 267 2 44 5 203 2 77 1 255 1 70 1 15 2 134 2 261 1 303 2 364 2 
193 2 64 1 18 1 281 2 335 1 77 1 255 1 70 1 15 2 261 1 364 1 303 1 
193 4 64 1 18 1 281 2 225 1 335 2 360 1 267 1 44 2 165 1 77 1 255 1 70 1 15 2 261 1 364 1 303 1 
193 3 64 3 281 1 213 1 335 2 360 1 44 2 203 1 77 3 57 1 255 3 70 3 15 6 134 1 7 1 261 1 303 1 
64 4 18 3 185 3 281 13 225 3 358 1 335 10 360 5 44 14 203 2 165 3 255 4 70 4 261 1 364 4 193 27 235 1 320 1 71 1 144 1 213 1 371 1 174 1 152 1 373 1 267 4 77 4 240 4 57 1 15 8 134 2 301 1 303 5 
64 1 185 1 281 4 335 2 360 2 44 4 203 1 255 1 70 1 364 1 261 1 193 8 235 1 71 1 144 1 211 1 371 1 174 1 267 1 77 1 240 1 15 2 134 1 
64 2 18 1 185 1 281 6 225 1 335 3 360 2 44 5 203 1 255 2 70 2 261 1 364 2 193 11 235 1 71 1 144 1 211 1 371 1 174 1 152 1 373 1 267 1 77 2 240 2 15 4 134 1 303 1 
64 3 18 2 185 1 281 9 282 1 225 2 335 4 360 3 44 10 203 1 311 1 165 2 255 3 70 3 261 1 364 3 193 19 235 1 71 1 144 1 211 1 213 1 294 1 371 1 174 1 152 1 267 3 77 3 240 1 132 1 15 6 134 1 303 1 
64 3 18 2 185 1 281 10 282 1 225 2 335 5 360 3 44 7 203 1 311 1 165 1 255 3 70 3 261 1 364 3 193 17 235 1 71 1 144 1 211 1 213 1 294 1 371 1 174 1 152 1 267 2 77 3 240 1 132 1 15 6 134 1 303 2 
64 1 185 1 281 4 335 2 360 2 44 4 203 1 255 1 70 1 364 1 261 1 193 8 235 1 71 1 144 1 211 1 371 1 174 1 267 1 77 1 240 1 15 2 134 1 
64 1 18 2 185 1 281 6 282 1 225 2 335 2 360 1 44 6 311 1 165 2 255 1 70 1 261 1 364 2 193 12 144 1 211 1 294 1 267 2 77 1 240 1 132 1 15 2 303 1 
64 4 18 2 185 1 281 10 282 1 225 2 335 5 360 3 44 8 203 1 311 1 165 1 255 4 70 4 261 1 364 3 193 18 235 1 71 1 144 1 211 1 294 1 213 2 371 1 174 1 152 1 267 2 77 4 240 1 132 1 15 8 134 1 303 2 
64 4 18 3 185 1 281 9 282 1 225 3 335 6 360 3 44 7 311 1 165 2 255 4 70 4 261 1 364 3 193 16 144 1 211 1 294 1 213 2 267 2 77 4 240 1 57 1 132 1 15 8 303 3 
193 7 235 1 71 2 281 3 174 1 335 6 267 1 360 3 44 4 203 3 134 3 303 3 364 1 
64 4 18 2 185 1 281 10 282 1 225 2 335 4 360 3 44 8 203 1 311 1 165 1 255 4 70 4 261 1 364 3 193 18 235 1 71 1 144 1 211 1 294 1 213 2 371 1 174 1 267 2 77 4 240 1 57 1 132 1 15 8 134 1 303 1 
68 1 207 1 182 1 377 1 127 1 359 1 119 1 
328 1 82 1 245 1 207 1 182 1 262 1 127 1 359 1 119 1 68 1 272 1 377 1 
157 1 69 1 339 1 324 1 122 1 40 1 250 1 21 1 354 1 186 1 198 1 
94 1 21 1 250 1 127 2 186 1 359 1 119 1 226 1 286 1 69 1 287 1 339 1 324 1 314 1 60 1 377 2 354 1 198 1 
250 1 21 1 116 1 186 1 359 1 119 2 226 1 286 1 69 2 287 1 27 1 121 1 314 2 363 1 94 1 344 1 263 1 127 2 324 3 60 2 354 1 377 2 198 1 
112 1 250 1 21 2 116 1 186 2 359 1 119 2 226 1 69 2 287 1 27 1 121 1 314 2 363 1 94 1 344 1 367 1 263 1 127 2 324 3 60 2 354 2 377 2 198 1 
110 1 159 1 250 1 21 1 116 1 186 1 119 1 202 1 69 1 287 1 26 1 363 1 314 1 190 1 192 1 139 1 168 1 344 1 170 1 195 1 126 1 263 1 348 1 127 1 175 2 216 1 324 4 60 1 377 1 354 1 244 2 198 1 
110 1 250 1 21 1 66 1 116 1 186 1 119 1 202 1 69 1 287 1 26 1 363 1 314 1 192 1 139 1 168 1 344 1 170 1 195 1 126 1 263 1 348 1 127 1 175 2 216 1 324 4 60 1 377 1 354 1 244 2 198 1 
250 1 21 1 354 1 186 1 198 1 327 1 
10 1 343 1 208 1 21 7 250 2 115 1 186 7 188 1 69 2 104 1 339 2 28 1 351 1 314 1 324 3 229 1 352 1 298 1 354 6 327 1 198 3 
64 2 250 1 21 1 281 3 307 1 67 1 186 1 359 2 119 1 335 2 226 1 360 2 44 3 188 1 286 1 203 1 69 1 287 1 314 1 255 2 70 2 49 1 50 1 206 2 364 1 140 2 260 1 193 6 235 1 94 1 71 1 142 1 371 1 174 1 127 2 267 1 77 2 105 1 324 1 59 1 15 4 60 1 134 1 377 2 354 1 107 1 198 1 
137 1 186 1 339 1 287 1 5 4 191 2 192 1 139 1 292 1 195 1 97 1 348 1 101 1 349 2 300 2 60 1 354 1 244 3 356 1 357 2 110 1 19 1 21 1 113 1 66 1 119 1 202 1 203 1 164 1 26 1 363 1 258 1 364 2 168 2 36 2 170 1 126 2 174 1 127 1 175 3 267 2 216 2 324 2 274 1 377 1 39 5 134 1 
21 2 250 1 186 2 188 1 69 1 314 1 324 2 79 1 298 1 354 2 192 1 327 1 198 2 
157 1 367 1 40 1 21 4 250 1 151 1 186 4 188 1 69 1 339 1 324 1 354 4 198 1 
21 2 250 1 115 1 116 1 186 2 266 1 296 1 69 1 312 1 314 1 324 1 352 1 354 2 198 2 
330 1 339 1 254 1 250 1 178 1 21 1 354 1 186 1 265 1 198 1 
343 1 208 1 369 1 21 2 250 1 186 2 188 1 69 1 324 1 354 2 198 1 
157 1 343 1 40 1 21 5 250 2 116 1 151 1 186 5 188 1 69 2 339 1 104 1 324 3 229 1 354 4 198 2 
157 1 343 1 40 1 21 5 250 2 116 1 222 1 151 1 186 5 188 1 69 2 339 1 104 1 324 3 354 4 198 2 
94 1 112 1 21 1 250 1 127 2 186 1 359 1 119 1 226 1 69 1 287 1 339 1 324 1 314 1 60 1 377 2 354 1 198 1 
10 1 21 1 250 1 115 1 116 1 186 1 69 1 314 1 324 1 352 1 298 1 354 1 198 2 
120 1 148 1 289 1 197 1 359 1 
180 1 110 1 119 1 120 1 287 1 26 1 27 1 121 1 363 2 289 1 139 1 168 1 170 1 171 1 195 1 97 1 237 1 148 1 348 1 150 1 127 1 175 2 216 1 297 1 60 1 197 1 377 1 244 2 
246 1 20 1 148 1 127 1 119 1 120 1 256 1 197 1 377 1 
120 1 180 1 150 1 
128 1 122 1 72 1 84 1 
128 1 158 1 276 1 290 1 72 1 84 1 243 1 
169 1 290 1 4 1 
276 1 158 3 290 3 72 1 84 1 99 1 128 1 270 1 257 2 353 1 243 1 378 1 
128 1 45 1 158 2 276 1 290 2 210 1 72 1 84 1 243 1 
9 1 276 1 158 1 330 1 290 1 84 1 265 1 270 1 130 1 243 1 8 1 
128 1 158 1 276 1 270 1 290 1 84 1 243 1 
128 2 158 1 276 1 270 1 290 1 72 1 243 1 
32 1 276 2 158 2 290 2 84 1 173 1 128 1 270 1 362 1 243 2 
276 1 158 3 290 3 346 1 210 2 72 1 84 2 283 1 214 1 128 1 270 1 243 1 8 1 
9 1 365 1 276 1 158 2 330 1 290 2 210 1 72 1 84 1 163 1 265 2 128 1 270 1 254 1 243 1 
276 2 158 4 290 4 346 1 210 2 72 1 84 2 128 1 323 1 45 1 270 1 243 2 8 1 
128 1 158 1 276 1 270 1 290 1 72 1 84 1 243 1 
158 4 276 1 332 1 290 4 346 1 210 2 72 2 99 1 84 3 128 2 257 1 243 1 378 1 8 1 
329 1 181 1 276 1 158 2 290 2 210 1 279 1 72 1 84 1 128 1 270 1 243 1 
276 1 158 3 92 1 290 3 72 1 99 1 84 1 128 1 270 1 257 2 243 1 378 2 
91 1 366 1 288 2 84 2 
158 1 276 1 153 1 270 1 290 1 243 1 
128 1 158 2 276 1 270 1 290 2 210 1 72 1 84 1 243 1 283 1 
302 1 
128 1 158 1 276 1 270 1 290 1 72 1 84 1 243 1 
276 1 158 3 290 3 210 1 72 1 84 1 283 1 128 1 270 1 257 1 243 1 
332 1 346 1 84 1 8 1 
128 1 84 1 

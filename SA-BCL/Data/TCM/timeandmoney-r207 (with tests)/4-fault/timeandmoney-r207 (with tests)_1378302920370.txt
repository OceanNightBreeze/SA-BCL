#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) (25,141) (25,141) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) (25,141) (25,141) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) (25,141) (25,141) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) (25,141) (25,141) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 352 (0,223,370,380) 207 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) 3 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 352 69 (18,234) 3 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 59 83 155 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 59 226 155 323 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 59 83 311 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 59 83 155 323 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 59 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 369 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 59 226 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 59 226 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 352 (0,223,370,380) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 352 69 254 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 352 69 253 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 352 69 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 308 2 18 1 174 1 29 1 8 1 141 1 64 1 352 1 376 1 321 1 234 1 133 1 148 1 108 2 69 1 224 2 336 1 168 3 326 3 
25 1 308 2 18 1 29 1 174 1 8 1 141 1 64 1 352 1 376 1 321 1 234 1 133 1 148 1 108 2 69 1 224 2 336 1 168 3 326 3 
25 1 308 2 18 1 29 1 174 1 8 1 141 1 64 1 352 1 376 1 321 1 234 1 133 1 148 1 108 2 69 1 224 2 336 1 168 3 326 3 
25 1 308 2 18 1 29 1 174 1 8 1 141 1 64 1 352 1 376 1 321 1 234 1 133 1 148 1 108 2 69 1 224 2 336 1 168 3 326 3 
321 1 0 1 207 1 340 1 16 1 308 1 148 1 108 1 8 1 168 2 352 1 326 2 
308 1 28 1 263 1 8 1 64 1 292 1 66 1 376 1 89 1 133 1 148 1 108 1 224 1 336 1 168 2 326 2 
321 1 308 2 148 1 108 2 18 1 69 1 8 1 224 1 168 2 352 1 326 2 
321 1 340 1 308 2 148 1 108 2 3 1 18 1 69 1 8 1 224 1 370 1 168 3 352 1 326 3 
321 1 340 1 308 2 148 1 108 2 3 1 18 1 69 1 8 1 224 1 370 1 168 3 352 1 326 3 
143 1 37 1 127 1 
271 1 6 2 143 1 
177 2 48 1 165 2 313 1 80 2 111 2 88 2 337 2 
246 1 48 1 191 1 248 1 192 1 97 2 319 1 129 2 272 2 251 1 216 1 177 2 178 1 56 2 58 1 301 1 179 1 79 1 80 2 111 3 135 1 81 1 347 1 39 1 139 2 372 1 286 1 88 2 374 1 206 1 46 1 21 1 165 2 313 1 166 1 93 1 337 3 
177 1 266 1 341 1 165 1 98 1 313 1 80 1 111 1 88 1 337 1 
98 1 250 1 177 1 34 1 341 2 80 2 111 2 136 1 281 1 305 1 260 1 41 1 86 1 143 1 88 1 118 1 266 1 165 1 313 1 337 2 127 1 
305 2 41 1 86 1 98 1 250 1 143 1 88 2 118 1 177 2 266 1 341 2 165 2 313 1 80 2 111 2 136 1 337 2 127 1 281 2 
320 1 305 1 96 1 82 1 281 1 
320 1 305 2 96 1 122 1 143 1 54 1 127 1 281 2 
305 1 96 1 281 1 
305 1 98 1 88 1 320 1 118 1 177 1 266 1 341 1 165 1 313 1 80 1 111 1 337 1 281 1 
143 1 
320 1 305 2 96 1 208 1 143 1 54 1 127 1 281 2 
305 5 262 1 96 2 114 1 42 1 194 2 143 1 53 1 54 1 320 2 366 1 36 1 243 1 13 2 200 1 202 2 127 1 281 5 371 1 
48 1 37 1 
48 2 306 1 88 1 177 1 165 1 80 2 111 2 197 1 337 2 
162 1 158 1 92 1 
48 1 191 1 248 1 286 1 97 1 297 1 129 1 251 1 374 1 21 1 56 1 58 1 111 1 81 1 337 1 347 1 
191 1 248 1 286 1 97 1 129 1 251 1 374 1 177 1 368 1 21 1 158 1 56 1 241 1 58 1 165 1 80 1 111 2 81 1 337 2 347 1 
189 1 113 1 260 1 48 1 229 1 88 1 177 4 368 2 241 1 165 4 80 5 111 5 197 1 337 5 
177 2 266 1 341 1 165 2 80 2 142 1 111 2 337 2 
177 3 368 1 48 1 165 3 80 3 111 3 88 1 337 3 
177 1 266 1 341 1 165 1 80 1 111 1 337 1 
177 1 306 1 341 1 165 1 80 1 111 1 197 1 88 1 337 1 
48 1 191 1 248 1 97 1 192 1 250 1 251 1 56 1 341 2 58 1 301 1 111 4 197 1 347 1 305 1 21 1 165 3 313 1 166 1 27 1 129 1 272 2 177 3 368 1 178 1 219 1 79 1 179 1 80 3 135 1 136 1 81 1 281 1 283 1 139 1 372 1 41 1 286 1 86 1 88 2 374 1 46 1 241 1 93 1 337 4 
177 1 189 1 368 1 48 1 260 1 165 1 80 2 111 2 337 2 
283 1 305 1 41 1 86 1 250 1 88 1 143 1 273 1 177 3 368 2 341 1 241 1 165 3 80 3 197 1 111 3 136 1 337 3 281 1 
177 2 368 1 162 1 158 1 165 2 80 2 111 2 197 1 88 1 337 2 
48 1 191 1 248 1 286 1 97 1 129 1 251 1 374 1 21 1 56 1 58 1 111 1 81 1 337 1 347 1 
48 1 170 1 191 1 248 1 286 1 97 1 129 1 251 1 291 1 21 1 56 1 111 1 81 1 337 1 347 1 
190 1 363 1 192 1 272 2 178 1 255 1 158 2 301 1 179 1 79 1 348 1 39 2 139 4 19 1 144 1 46 1 162 2 378 1 123 1 92 2 93 2 334 1 150 1 73 1 
177 1 41 1 341 1 165 1 80 1 111 1 142 1 337 1 
31 1 132 1 
31 1 132 1 
68 1 375 1 
68 1 375 1 
68 1 375 1 
90 1 31 1 132 1 
67 1 31 1 132 1 
287 1 68 1 31 2 132 2 65 1 375 1 
90 1 31 1 132 1 
90 1 31 1 132 1 
267 1 31 1 132 1 
267 1 31 1 132 1 
267 1 31 1 132 1 
48 1 317 1 7 1 31 1 132 1 32 1 252 1 177 2 33 1 80 2 111 2 344 1 281 1 305 1 350 1 117 1 67 1 146 1 145 1 121 1 147 1 165 2 293 1 337 2 
305 2 350 1 287 1 317 2 364 1 143 1 31 2 101 1 132 2 154 1 45 1 117 3 146 2 293 2 124 1 344 2 112 1 281 2 268 2 
174 1 64 1 376 1 
263 1 64 1 376 1 
322 1 236 1 263 1 174 2 351 1 64 3 
322 1 236 1 263 1 174 1 357 1 64 2 
322 1 236 2 263 1 174 1 64 2 
190 1 362 1 96 1 152 1 271 1 6 3 131 1 194 1 299 2 252 1 54 1 320 4 33 1 300 1 13 1 200 3 202 1 203 2 302 1 281 5 348 1 305 5 262 1 143 2 144 1 91 2 209 1 147 1 243 2 334 1 127 1 24 1 
190 3 362 1 96 6 128 1 271 3 6 9 194 2 54 1 10 1 366 1 320 7 300 2 13 2 14 1 200 8 82 5 202 2 203 6 302 3 281 9 348 3 159 5 305 9 262 1 183 1 143 5 144 3 353 1 377 1 91 6 147 4 243 6 334 3 127 1 24 2 
190 1 271 2 6 4 131 1 194 1 299 1 320 2 366 1 300 1 13 1 200 3 202 1 281 3 302 1 203 2 348 1 305 3 143 3 144 1 91 2 209 1 147 1 243 2 334 1 127 1 24 1 
190 2 271 3 128 1 6 7 194 1 131 1 299 2 10 1 366 1 320 3 300 1 13 1 200 5 202 1 203 4 281 4 302 2 348 2 305 4 143 4 144 2 377 1 91 4 209 1 147 2 243 4 334 2 127 1 24 1 
26 1 251 1 37 1 
303 1 251 1 
296 1 
248 1 251 1 347 1 
251 1 324 1 
251 1 347 1 
26 2 349 1 270 1 248 1 251 3 347 1 
269 1 348 1 85 1 39 4 139 7 190 1 363 3 172 1 4 1 218 1 156 2 378 2 240 1 333 1 93 3 137 1 181 1 
269 1 348 1 85 1 39 4 139 7 190 1 363 3 172 1 4 1 218 1 156 2 378 2 240 1 333 1 93 3 137 1 181 1 
269 1 348 1 85 1 169 1 39 4 139 7 190 1 363 3 172 1 4 1 218 1 156 2 378 2 240 1 333 1 93 3 137 1 181 1 
269 2 190 4 172 2 363 10 316 1 4 1 272 2 105 1 178 1 218 2 156 3 221 3 276 1 301 1 179 1 137 5 181 1 302 3 85 2 348 4 139 31 39 16 59 1 87 4 17 1 144 3 46 1 378 5 265 1 240 1 333 1 245 1 93 15 334 3 
269 1 190 1 172 1 363 4 4 1 272 4 104 1 178 2 218 1 156 2 276 1 301 2 179 2 196 1 137 1 181 1 348 1 85 1 139 9 39 5 46 2 378 3 240 1 93 4 
315 1 97 1 174 1 129 1 8 1 195 1 340 1 157 1 56 1 108 1 224 1 81 1 327 1 326 2 304 1 308 1 263 1 351 1 232 1 309 1 64 2 292 1 376 1 89 1 21 1 148 1 312 1 22 1 359 1 168 2 
315 1 97 1 174 1 129 1 195 1 340 2 157 1 56 1 108 1 224 1 81 1 326 3 304 1 307 1 308 1 288 1 263 1 351 1 309 1 64 2 292 1 376 1 89 1 21 1 148 1 312 1 211 1 22 1 359 1 168 3 
315 1 97 1 129 1 174 1 195 1 340 2 157 1 56 1 224 1 81 1 326 2 307 1 288 1 263 1 351 1 64 2 292 1 376 1 89 1 21 1 148 1 312 1 22 1 359 1 168 2 
247 1 182 1 308 1 286 1 315 2 97 1 185 1 129 1 251 1 176 1 186 1 21 1 56 1 312 2 108 1 211 1 180 1 224 2 81 1 168 1 359 2 347 1 326 1 
315 1 97 1 174 1 129 1 8 1 195 1 157 1 56 1 108 1 224 1 81 1 326 1 304 1 307 1 308 1 263 1 351 1 232 1 309 1 64 2 376 1 21 1 312 1 22 1 359 1 168 1 
125 1 
96 6 97 2 6 2 250 1 194 1 251 1 54 3 107 1 56 2 341 1 13 1 111 1 200 2 202 1 346 1 347 1 305 5 260 1 262 1 115 1 21 1 264 4 23 1 24 1 127 3 361 1 271 2 173 1 75 1 129 2 365 2 34 1 80 1 180 1 278 2 136 1 38 1 81 1 325 2 282 2 281 5 138 1 41 1 328 2 286 2 86 1 290 2 143 4 186 1 331 1 187 1 239 1 188 2 243 2 337 1 
361 1 96 2 250 1 54 1 34 1 341 1 80 1 111 1 136 1 281 3 260 1 138 1 305 3 41 1 86 1 115 1 143 2 331 1 264 2 208 1 187 1 188 1 337 1 127 2 
305 2 138 1 361 1 260 1 41 1 115 1 86 1 250 1 143 2 365 1 331 1 264 3 187 1 34 1 341 1 80 1 111 1 136 1 337 1 127 2 281 2 
361 1 96 2 250 1 365 1 54 1 34 1 341 1 80 1 111 1 136 1 278 1 281 3 260 1 138 1 305 3 41 1 86 1 115 1 143 3 331 1 264 3 208 1 187 1 188 1 337 1 127 3 
295 1 96 7 98 1 250 1 194 1 54 3 107 1 341 2 13 1 111 2 200 1 345 1 202 1 305 5 260 1 262 1 115 1 60 1 118 1 264 5 208 1 266 1 165 1 313 1 71 1 127 4 361 1 271 2 365 3 177 1 34 1 80 2 136 1 278 4 325 2 281 5 227 1 282 2 138 1 41 1 328 2 86 1 88 1 143 4 290 2 331 1 187 1 239 1 188 4 243 1 337 2 
96 4 6 2 250 1 194 1 54 2 107 1 341 1 13 1 111 1 200 1 202 1 260 1 305 4 262 1 115 1 264 4 23 1 127 3 361 1 271 2 365 2 34 1 80 1 136 1 278 2 325 2 281 4 282 2 138 1 41 1 328 2 86 1 143 4 290 2 331 1 187 1 239 1 188 2 243 1 337 1 
361 1 295 1 96 4 271 2 250 1 194 1 365 2 54 2 107 1 34 1 341 1 13 1 80 1 111 1 278 2 200 1 136 1 345 1 325 2 202 1 282 2 281 4 260 1 138 1 305 4 41 1 262 1 328 2 86 1 115 1 290 2 143 3 331 1 264 4 187 1 239 1 188 2 243 1 71 1 337 1 127 3 
361 1 295 1 96 4 271 2 250 1 194 1 365 2 54 2 107 1 34 1 341 1 13 1 80 1 111 1 278 2 200 1 136 1 345 1 325 2 202 1 282 2 281 4 260 1 138 1 305 4 41 1 262 1 328 2 86 1 115 1 290 2 143 3 331 1 264 4 187 1 239 1 188 2 243 1 71 1 337 1 127 3 
361 1 96 4 6 2 250 1 194 1 365 2 54 2 34 1 78 1 341 1 13 1 110 1 80 1 111 1 278 2 200 1 136 1 84 2 325 2 202 1 281 4 260 1 138 1 305 4 41 1 284 1 262 1 328 2 86 1 115 1 143 3 331 1 264 4 235 2 187 1 239 1 188 2 243 1 71 1 337 1 127 3 
295 1 361 1 96 5 271 2 250 1 194 1 365 3 54 2 107 1 34 1 341 1 13 1 80 1 111 1 200 1 136 1 278 3 345 1 325 2 202 1 282 2 281 4 227 1 260 1 138 1 305 4 262 1 41 1 328 2 86 1 115 1 290 2 143 3 331 1 264 5 187 1 239 1 188 3 243 1 71 1 337 1 127 3 
295 1 361 1 96 5 271 2 250 1 194 1 365 3 54 2 107 1 34 1 341 1 13 1 80 1 111 1 200 1 136 1 278 3 345 1 325 2 202 1 282 2 281 4 227 1 260 1 138 1 305 4 262 1 41 1 328 2 86 1 115 1 290 2 143 3 331 1 264 5 187 1 239 1 188 3 243 1 71 1 337 1 127 3 
96 4 6 2 250 1 194 1 54 2 341 1 13 1 110 1 111 1 200 1 202 1 260 1 305 4 262 1 115 1 264 4 23 1 127 3 361 1 365 2 34 1 80 1 136 1 278 2 325 2 84 2 281 4 138 1 41 1 328 2 86 1 143 3 331 1 187 1 235 2 239 1 188 2 243 1 337 1 
269 1 48 2 190 1 363 2 192 1 4 1 272 2 178 1 156 1 158 1 301 1 179 1 79 1 37 1 181 1 85 1 348 1 39 3 139 6 46 1 162 1 378 2 240 1 123 1 92 1 93 3 
48 1 294 1 190 2 363 2 192 1 319 1 272 4 178 2 55 1 158 11 221 3 301 2 179 2 79 2 369 1 135 1 137 1 302 2 348 1 139 14 39 8 59 1 373 1 87 3 144 1 46 2 162 4 378 1 237 1 92 11 245 1 93 6 334 2 
48 1 191 1 248 1 97 1 192 1 297 1 129 1 319 1 251 1 272 2 30 1 177 1 178 1 368 1 56 1 58 1 79 1 179 1 301 1 80 1 111 2 135 1 81 1 347 1 139 2 39 1 286 1 230 1 373 1 116 1 374 1 46 1 162 1 21 1 241 1 165 1 93 1 337 2 
48 2 191 2 190 3 248 2 97 3 192 3 4 1 251 2 156 1 56 3 158 7 257 1 58 2 301 3 259 2 111 3 347 2 302 2 348 3 307 1 160 2 162 7 21 2 165 1 166 2 360 2 269 1 171 1 363 8 215 1 319 1 129 3 272 6 177 1 368 1 178 3 367 2 179 3 79 3 80 1 135 1 81 2 137 4 181 1 85 1 139 20 39 10 286 1 373 1 374 2 144 2 46 3 378 4 240 1 241 1 92 7 93 10 334 2 337 3 
151 1 2 1 97 8 192 2 129 7 319 1 251 3 272 4 99 1 177 1 368 1 178 2 56 8 275 1 301 2 179 2 79 2 80 1 111 1 135 1 180 1 198 1 81 2 327 1 347 2 39 1 139 2 307 1 286 2 206 2 233 1 47 1 46 2 186 1 21 2 123 1 165 1 93 1 337 1 
190 1 363 1 192 1 272 2 177 1 178 1 158 1 301 1 179 1 79 1 80 1 197 1 111 1 302 1 348 1 39 1 139 3 373 1 43 1 88 1 144 1 46 1 162 1 378 1 92 1 165 1 334 1 93 2 337 1 
139 2 39 2 190 1 363 1 192 1 272 2 19 1 46 1 178 1 162 1 158 1 92 1 123 1 79 1 179 1 301 1 334 1 137 1 
348 1 139 2 363 1 192 1 272 2 144 1 46 1 178 1 162 1 378 1 158 1 92 1 123 1 79 1 179 1 301 1 93 2 150 1 
348 1 139 4 39 2 190 1 363 2 192 1 272 2 144 1 46 1 178 1 162 2 378 1 158 2 92 2 123 1 79 1 179 1 301 1 93 2 334 1 137 1 302 1 
139 2 39 2 190 1 363 1 192 1 272 2 19 1 46 1 178 1 162 1 158 1 92 1 275 1 79 1 179 1 301 1 334 1 137 1 
348 1 139 2 363 1 192 1 272 2 144 1 46 1 178 1 162 1 378 1 158 1 92 1 275 1 79 1 179 1 301 1 93 2 150 1 
348 1 139 4 39 2 190 1 363 2 192 1 272 2 144 1 46 1 178 1 162 2 378 1 158 2 92 2 275 1 79 1 179 1 301 1 93 2 334 1 137 1 302 1 
348 1 39 2 139 4 190 1 363 2 192 1 272 2 144 1 46 1 178 1 162 2 378 1 158 2 92 2 79 1 179 1 301 1 93 2 334 1 137 1 302 1 
48 1 191 1 248 1 97 1 192 1 319 1 129 1 251 1 272 2 178 1 56 1 58 1 79 1 179 1 301 1 111 1 135 1 81 1 347 1 39 1 139 2 286 1 374 1 46 1 21 1 166 1 93 1 337 1 
48 1 170 1 191 1 248 1 97 1 192 1 319 1 129 1 251 1 272 2 178 1 56 1 79 1 179 1 301 1 111 1 135 1 81 1 347 1 39 1 139 2 286 1 291 1 46 1 21 1 238 1 93 1 337 1 
348 1 139 4 39 2 190 1 363 2 373 1 192 1 272 2 144 1 46 1 178 1 162 2 378 1 158 2 92 2 79 1 179 1 301 1 93 2 334 1 137 1 302 1 
190 1 191 1 248 1 363 2 97 1 192 1 129 1 251 1 272 2 178 1 158 2 56 1 58 1 79 1 179 1 301 1 111 1 137 1 81 1 327 1 347 1 302 1 348 1 139 4 39 2 160 1 374 1 144 1 46 1 162 2 21 1 378 1 92 2 166 1 93 2 334 1 337 1 
190 1 363 1 192 1 272 2 77 1 177 1 178 1 158 1 301 1 179 1 79 1 80 1 197 1 111 1 137 1 302 1 348 1 39 2 139 3 373 1 88 1 144 1 46 1 162 1 92 1 165 1 93 1 334 1 337 1 
190 3 363 6 338 1 272 4 104 1 155 1 178 2 106 1 12 2 221 1 323 1 301 2 179 2 137 3 83 1 302 3 348 3 139 19 39 9 59 1 87 2 144 3 46 2 164 1 378 3 355 1 245 1 93 10 334 3 94 2 
39 2 139 4 59 1 87 1 272 2 104 1 46 1 155 2 178 1 221 1 355 1 179 1 301 1 323 1 93 2 83 2 94 1 
190 2 363 3 338 1 272 4 104 1 155 1 178 2 12 1 221 3 323 1 301 2 179 2 226 1 137 2 83 2 302 2 348 2 139 21 39 10 59 3 87 4 144 2 46 2 311 1 164 1 378 1 355 1 245 1 93 11 334 2 94 3 
190 2 363 4 338 1 272 4 104 1 155 1 178 2 12 1 221 2 323 1 301 2 179 2 137 2 83 2 302 2 348 2 139 17 39 8 59 2 87 3 144 2 46 2 311 1 164 1 378 2 355 1 245 1 93 9 334 2 94 2 
269 1 190 1 363 1 4 1 272 2 104 1 155 1 178 1 156 1 221 1 323 1 301 1 179 1 83 1 181 1 348 1 85 1 139 9 39 5 59 1 87 1 46 1 378 1 355 1 240 1 93 4 94 1 
146 1 287 1 317 1 364 1 293 1 31 1 132 1 344 1 103 1 45 1 
67 1 7 1 
146 1 204 1 317 1 293 1 298 1 31 1 153 1 132 1 344 1 
90 1 318 1 
120 1 267 1 65 1 
305 1 350 1 287 1 317 1 364 1 143 1 31 1 101 1 132 1 154 1 45 1 117 2 146 1 293 1 124 1 344 1 281 1 268 1 
305 1 350 1 287 1 317 1 364 1 143 1 31 1 101 1 132 1 154 1 45 1 117 2 146 1 293 1 124 1 344 1 281 1 268 1 
305 1 350 1 287 1 317 1 364 1 143 1 31 1 101 1 132 1 154 1 45 1 117 2 146 1 293 1 124 1 344 1 281 1 268 1 
90 1 318 1 65 1 
90 1 318 1 65 1 
120 1 267 1 
120 1 267 1 65 1 
145 1 32 1 
48 1 317 1 7 1 31 1 154 1 132 1 32 1 252 1 320 1 177 2 33 1 80 2 111 2 344 1 281 1 305 1 117 1 67 1 119 1 146 1 145 1 121 1 147 1 165 2 293 1 337 2 268 1 
95 1 151 1 97 2 192 1 193 1 319 1 129 2 251 1 272 2 339 1 178 1 274 1 56 2 79 1 179 1 301 1 80 2 111 2 135 1 201 1 81 1 347 1 39 1 139 2 373 1 206 2 233 1 46 1 21 1 93 1 337 2 
307 1 97 2 263 1 5 1 174 1 351 1 129 2 309 1 62 1 64 2 376 1 21 1 157 1 56 2 312 1 210 1 22 1 81 1 327 1 
40 1 307 1 97 1 263 1 174 1 351 1 129 1 309 1 64 2 376 1 157 1 21 1 56 1 312 1 210 1 22 1 81 1 
286 1 97 1 129 1 251 1 176 1 62 1 186 1 21 1 56 1 312 1 180 1 81 1 347 1 228 1 
307 1 97 1 263 1 5 1 174 1 351 1 129 1 309 1 62 1 64 2 376 1 21 1 157 1 56 1 312 1 210 1 22 1 81 1 
329 1 
36 1 243 1 42 1 143 1 200 1 37 1 127 1 
96 1 271 1 6 1 194 1 54 1 107 1 13 1 200 1 202 1 282 1 281 1 305 1 262 1 143 2 290 1 243 1 127 1 
26 1 190 1 96 2 248 1 271 3 97 1 6 6 129 1 130 1 194 2 251 4 54 1 56 1 35 1 222 1 13 2 136 1 200 4 81 1 202 2 302 1 203 3 281 2 347 1 303 2 348 1 305 2 349 1 262 2 286 1 143 3 144 1 20 1 330 1 91 3 21 2 356 1 243 3 334 1 213 1 360 1 74 1 24 1 
190 2 96 1 271 3 6 6 194 2 54 1 11 1 221 1 134 1 342 1 13 2 199 1 200 8 226 1 38 1 202 2 281 1 203 5 302 2 348 2 305 1 262 2 59 1 87 1 143 5 63 1 144 2 91 5 163 1 332 1 356 2 243 5 334 2 24 1 127 2 
269 1 295 1 190 2 51 1 98 1 194 1 177 1 341 1 13 1 80 1 111 1 200 2 202 1 281 1 181 1 85 1 348 1 305 1 262 1 88 1 118 1 163 1 266 1 356 2 165 1 243 2 313 1 337 1 
262 1 194 1 42 1 143 1 36 1 13 1 243 1 200 1 202 1 127 1 
348 2 190 2 271 5 6 10 143 5 144 2 91 5 163 1 356 2 243 5 334 2 200 5 360 1 302 2 203 5 
305 1 96 1 143 1 54 1 127 1 281 1 
1 2 96 4 49 1 173 1 97 4 75 1 129 4 251 1 194 2 54 2 366 1 56 4 13 2 343 1 180 1 200 2 81 1 38 2 202 2 347 1 281 3 305 3 262 1 286 2 186 1 21 1 243 2 335 1 24 2 
48 1 191 1 248 1 97 1 192 1 129 1 272 2 251 1 177 2 178 1 56 1 58 1 301 1 179 1 79 1 80 2 111 3 135 1 81 1 347 1 139 1 372 1 286 1 88 2 374 1 46 1 21 1 165 2 313 1 166 1 93 1 337 3 
262 1 271 2 6 4 194 1 143 4 91 2 156 1 243 2 13 1 200 1 38 1 202 1 203 2 24 1 127 2 
317 1 293 1 175 1 
145 1 184 1 317 1 293 1 45 1 
317 1 293 1 175 1 
317 1 293 1 175 1 
57 1 317 1 293 1 
57 1 317 1 293 1 
57 1 317 1 293 1 
317 1 293 1 
31 1 132 1 
269 1 348 1 85 1 139 8 39 4 190 1 363 3 4 1 272 4 46 2 178 2 156 1 378 2 276 1 240 1 179 2 301 2 93 4 137 1 181 1 
269 1 85 1 348 1 39 3 139 6 190 1 363 2 4 1 156 1 378 2 240 1 93 3 37 1 181 1 
348 1 39 2 139 4 190 1 363 2 272 2 100 1 144 1 46 1 178 1 378 1 179 1 301 1 93 2 334 1 137 1 302 1 
39 1 139 2 59 1 221 1 87 1 93 1 
269 1 190 3 363 4 4 1 272 2 178 1 156 1 55 1 221 2 276 1 179 1 301 1 369 1 137 1 181 1 302 2 85 1 348 3 39 9 139 18 87 2 144 2 46 1 378 3 240 1 245 1 334 2 93 9 
139 1 87 1 93 1 
139 1 39 1 221 1 
348 1 139 6 39 3 190 1 363 3 272 2 100 1 144 1 46 1 178 1 378 2 301 1 179 1 93 3 334 1 137 1 360 1 302 1 
190 2 363 2 272 2 104 1 178 1 221 1 301 1 179 1 134 1 342 1 226 1 199 1 137 1 302 2 348 2 139 12 39 6 59 1 87 1 63 1 144 2 46 1 378 1 93 6 334 2 
269 1 348 1 85 1 39 3 139 6 190 1 363 2 378 1 93 3 137 1 181 1 
269 1 85 1 39 1 139 3 363 2 4 1 52 1 272 2 46 1 178 1 378 1 276 1 240 1 179 1 301 1 93 2 137 1 
269 2 85 2 348 2 39 5 139 10 190 2 363 5 51 1 272 2 104 1 46 1 178 1 378 3 301 1 179 1 93 5 137 2 181 1 
39 2 139 2 190 1 363 1 272 2 104 1 46 1 178 1 179 1 301 1 334 1 137 1 
348 1 39 2 139 4 190 1 363 2 272 2 144 1 104 1 46 1 178 1 378 1 179 1 301 1 93 2 334 1 137 1 302 1 
269 1 85 1 139 3 39 1 363 2 52 1 272 6 104 1 46 3 178 3 164 1 378 1 276 1 179 3 301 3 93 2 137 1 
269 3 190 5 363 12 316 1 4 1 52 1 272 10 100 1 105 1 104 1 178 5 156 1 221 3 276 2 301 5 179 5 137 5 181 2 302 3 85 3 348 5 139 34 39 16 59 1 87 4 144 3 46 5 164 1 378 7 265 1 240 1 245 1 93 18 334 3 
269 1 190 1 363 2 4 1 272 2 104 1 178 1 156 1 221 1 301 1 179 1 226 1 181 1 348 1 85 1 139 8 39 4 59 1 87 1 46 1 378 2 240 1 93 4 
269 1 190 2 363 3 4 1 272 4 100 1 104 1 178 2 156 1 221 1 301 2 179 2 226 1 137 1 181 1 302 1 348 1 85 1 139 11 39 6 59 1 87 2 46 2 378 2 240 1 245 1 93 5 334 1 
39 1 139 2 59 1 87 1 272 2 104 1 46 1 178 1 221 1 179 1 301 1 93 1 226 1 
269 1 190 3 363 5 4 1 272 6 100 1 104 1 178 3 156 1 221 1 276 1 301 3 179 3 134 1 342 1 226 1 199 1 137 2 181 1 302 2 85 1 348 2 139 17 39 10 59 1 87 1 63 1 144 1 46 3 378 3 240 1 93 7 334 2 
269 1 190 1 363 2 4 1 272 2 104 1 178 1 156 1 221 1 301 1 179 1 226 1 181 1 348 1 85 1 139 8 39 4 59 1 87 1 46 1 378 2 240 1 93 4 
39 1 139 2 59 1 87 1 272 2 104 1 46 1 178 1 221 1 179 1 301 1 93 1 226 1 
269 1 190 3 363 5 4 1 272 8 100 1 104 1 178 4 156 1 221 1 276 2 301 4 179 4 134 1 342 1 199 1 226 1 137 2 181 1 302 2 85 1 348 2 139 18 39 10 59 1 87 1 63 1 144 1 46 4 378 3 240 1 93 8 334 2 
190 3 363 6 272 8 104 1 178 4 221 1 276 2 301 4 179 4 134 1 342 1 199 1 226 1 137 3 302 3 348 2 139 16 39 9 59 1 87 1 63 1 144 2 46 4 164 1 378 3 93 7 334 3 
269 3 348 1 85 3 139 7 39 3 190 1 363 6 4 2 378 3 240 1 93 4 137 3 181 1 
269 1 190 3 363 4 4 1 272 8 104 1 178 4 156 1 221 1 276 2 301 4 179 4 134 1 342 1 199 1 226 1 137 1 181 1 302 2 85 1 348 2 139 18 39 10 59 1 87 1 63 1 144 1 46 4 164 1 378 3 240 1 93 8 334 2 
189 1 48 1 260 1 285 1 80 1 111 1 337 1 
189 1 48 1 260 1 285 1 205 1 161 1 109 1 80 1 212 1 111 1 15 1 337 1 
186 1 21 1 56 1 286 1 97 1 129 1 251 1 180 1 37 1 81 1 347 1 
48 1 191 1 248 1 286 1 97 1 129 1 251 1 374 1 177 1 368 1 21 1 56 1 165 1 80 1 111 2 81 1 337 2 347 1 
48 1 1 1 191 1 248 2 97 1 129 1 250 1 251 3 177 1 368 1 56 1 341 1 80 2 111 2 324 1 81 1 347 2 41 1 231 1 374 1 21 1 165 2 337 2 
48 1 1 1 191 1 248 2 97 2 129 2 250 1 251 3 177 1 368 1 56 2 341 1 80 2 111 2 324 1 81 1 347 2 41 1 289 1 231 1 291 1 21 1 165 2 337 2 
26 1 1 1 96 1 248 1 97 1 249 1 98 1 129 1 251 4 177 1 220 1 56 1 341 1 80 1 111 1 324 1 136 1 81 1 281 2 347 1 303 1 305 2 231 1 88 1 143 1 118 1 21 1 266 1 165 1 313 1 337 1 127 1 
26 1 1 1 96 1 248 1 97 1 98 1 129 1 251 4 177 1 56 1 341 1 80 1 111 1 324 1 136 1 81 1 281 2 347 1 303 1 305 2 231 1 88 1 143 1 118 1 21 1 266 1 165 1 313 1 337 1 74 1 127 1 
21 1 56 1 97 1 2 1 129 1 81 1 
314 1 349 1 307 1 248 1 286 2 2 1 97 7 129 6 61 1 251 3 99 1 206 1 233 1 47 1 21 3 354 1 56 7 198 1 81 2 327 1 347 2 
269 1 48 2 190 1 191 1 248 1 363 2 192 2 97 1 4 1 129 1 251 1 272 4 177 1 178 2 368 1 156 1 274 1 158 1 56 1 58 1 79 2 179 2 301 2 259 1 80 1 111 2 81 1 181 1 347 1 327 1 348 1 85 1 139 6 39 3 373 1 160 1 374 1 46 2 162 1 21 1 378 2 92 1 240 1 165 1 166 1 93 3 337 2 
190 2 96 2 97 1 51 1 98 1 251 2 194 2 54 1 56 1 341 1 13 2 111 1 200 4 202 2 303 1 348 2 305 3 262 2 118 1 163 1 266 1 356 2 165 1 313 1 74 1 127 2 269 1 26 1 129 1 320 1 177 1 35 1 36 1 222 1 80 1 136 1 281 3 181 1 85 1 286 1 42 1 143 2 88 1 330 1 243 5 335 1 337 1 
26 1 349 1 248 1 2 1 97 2 129 2 130 1 251 2 21 2 56 2 81 1 327 1 347 1 
286 1 97 4 129 4 289 1 251 1 186 1 21 1 56 4 180 1 81 1 280 1 327 1 347 1 
314 1 1 1 214 1 248 1 97 2 129 2 251 1 21 2 354 1 56 2 257 1 81 1 126 1 347 1 
21 1 157 1 56 1 286 1 97 1 263 1 129 1 64 1 81 1 376 1 
21 1 307 1 56 2 97 2 129 2 251 1 81 1 339 1 233 1 347 1 327 1 
1 1 286 1 97 5 129 4 251 3 233 1 186 1 47 1 21 2 56 5 180 1 198 1 81 2 280 1 327 1 347 2 
1 1 286 1 97 5 129 4 251 3 310 1 233 1 186 1 21 2 56 5 180 1 198 1 81 2 280 1 327 1 347 2 
48 1 191 1 248 1 286 1 97 1 129 1 251 1 291 1 177 1 368 1 21 1 56 1 165 1 80 1 111 2 81 1 337 2 347 1 
314 1 1 1 349 1 248 1 97 1 129 1 61 1 251 1 21 2 354 1 56 1 81 1 347 1 
95 1 193 1 50 1 80 1 111 1 167 1 201 1 76 1 337 1 
217 1 167 1 358 1 
48 1 256 1 50 1 167 1 76 1 
50 1 98 1 250 1 217 1 76 1 177 1 320 1 256 1 341 2 80 1 111 1 136 1 281 2 283 1 305 2 41 1 86 1 88 1 143 1 118 1 266 1 165 1 313 1 70 1 167 1 358 1 337 1 127 1 
89 1 148 1 37 1 292 1 
89 1 308 1 148 1 108 1 292 1 168 1 326 1 
315 1 224 1 326 1 
308 1 8 1 292 1 89 1 148 1 108 1 242 1 379 1 279 1 168 3 336 2 326 3 
89 1 340 1 16 1 308 1 148 1 108 1 292 1 168 2 326 2 
321 1 0 1 308 1 148 1 108 1 8 1 168 1 352 1 326 1 
308 1 148 1 108 1 8 1 292 1 168 1 326 1 
89 1 308 1 108 1 8 1 292 2 168 1 326 1 
261 1 308 2 8 1 292 1 148 1 108 2 258 1 244 1 168 2 326 2 
321 1 254 1 340 1 308 1 148 1 108 1 277 1 69 1 8 1 168 2 352 1 326 2 
308 1 263 1 351 1 174 1 8 1 64 2 292 1 376 1 89 1 340 1 148 1 108 1 149 1 168 2 326 2 
321 1 253 1 340 1 16 1 308 1 148 1 108 1 69 1 8 1 168 2 352 1 326 2 
89 1 308 1 148 1 108 1 8 1 292 1 168 1 326 1 
321 2 340 1 308 1 148 1 108 1 69 1 168 2 352 1 326 2 
308 1 8 1 292 1 89 1 340 1 148 1 108 1 223 1 168 2 370 1 326 2 380 1 
308 1 8 1 9 1 292 1 89 1 148 1 108 1 242 2 379 1 168 3 336 2 326 3 
148 2 225 1 72 2 102 1 
308 1 108 1 140 1 8 1 168 1 326 1 
89 1 340 1 308 1 148 1 108 1 277 1 8 1 292 1 168 2 326 2 
44 1 
89 1 308 1 148 1 108 1 8 1 292 1 168 1 326 1 
89 1 340 1 308 1 148 1 108 1 277 1 8 1 292 1 336 1 168 3 326 3 
340 1 148 1 69 1 168 1 326 1 352 1 
148 1 292 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 111 (49,112,265) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 2 142 2 53 1 84 1 201 2 87 1 243 1 300 1 58 1 364 1 275 1 91 2 301 1 278 1 41 9 151 5 65 1 97 9 347 2 174 3 66 1 234 2 323 6 285 1 208 2 327 1 102 4 15 1 
162 2 142 2 53 1 84 1 201 2 87 1 243 1 300 1 58 1 364 1 275 1 91 2 301 1 278 1 41 9 151 5 65 1 97 9 347 2 174 3 66 1 234 2 323 6 285 1 208 2 327 1 102 4 15 1 
162 2 142 2 53 1 84 1 201 2 87 1 243 1 300 1 58 1 364 1 275 1 91 2 301 1 278 1 41 10 151 6 65 1 97 10 347 2 174 4 66 1 234 2 323 7 285 1 208 2 327 1 102 5 15 1 
162 2 142 2 53 1 84 1 201 1 87 1 243 1 300 1 58 1 364 1 275 1 91 2 278 1 41 7 151 4 65 1 97 7 347 2 174 2 66 1 234 2 323 4 285 1 208 2 327 1 102 3 15 1 
162 1 142 1 41 4 278 1 151 3 65 1 97 4 347 1 174 1 234 1 84 1 285 1 201 2 323 3 300 1 208 1 102 2 301 1 
346 1 162 1 151 1 41 2 142 1 42 1 96 1 65 1 97 2 234 1 84 1 300 1 243 1 58 1 208 1 91 1 
41 3 151 2 65 1 97 3 174 1 234 2 84 1 323 1 300 1 208 2 364 1 91 1 102 1 
162 1 142 1 84 1 201 2 300 1 364 1 275 1 91 1 301 1 41 9 151 5 278 1 65 1 97 9 347 1 174 3 175 1 234 2 323 7 285 1 208 2 102 4 15 1 19 1 
162 1 142 1 84 1 201 2 300 1 364 1 275 1 91 1 301 1 41 9 151 5 278 1 65 1 97 9 347 1 174 3 175 1 234 2 323 7 285 1 208 2 102 4 15 1 19 1 
193 1 30 1 24 1 
69 2 193 1 303 1 
199 2 306 2 194 2 114 1 43 2 173 1 319 2 170 2 
199 3 291 1 114 1 81 1 239 1 23 1 360 1 121 1 122 1 167 2 220 1 362 1 32 1 89 1 223 2 365 2 170 2 130 1 225 1 368 1 277 1 43 2 173 1 319 2 373 1 68 1 306 2 194 3 72 1 101 1 287 1 213 1 311 2 104 2 290 1 17 1 313 1 
199 1 306 1 194 1 43 1 173 1 210 1 75 1 319 1 170 1 39 1 
199 1 110 1 331 1 67 1 240 1 4 1 193 1 194 1 125 1 30 1 210 1 170 1 215 1 198 1 
199 1 331 2 110 1 43 1 319 1 67 1 306 1 193 1 194 1 125 1 30 1 210 1 170 1 215 2 198 1 
331 1 149 1 215 1 356 1 60 1 
331 2 193 1 30 1 13 1 149 1 215 2 356 1 140 1 
331 1 215 1 356 1 
199 1 331 1 43 1 173 1 319 1 192 1 306 1 194 1 149 1 210 1 75 1 215 1 170 1 39 1 
193 1 
331 2 193 1 30 1 149 1 246 1 215 2 356 1 140 1 
331 5 95 1 334 2 267 1 119 1 256 1 176 1 193 1 137 1 158 1 159 2 30 1 149 2 47 2 211 1 353 1 215 5 140 1 356 2 
114 1 24 1 
199 2 40 1 43 1 114 2 319 1 26 1 306 1 194 2 170 2 
56 1 113 1 135 1 
199 1 291 1 114 1 81 1 23 1 121 1 167 1 194 1 362 1 72 1 311 1 104 1 17 1 130 1 290 1 302 1 
199 2 291 1 113 1 43 1 81 1 23 1 121 1 167 1 306 1 194 2 362 1 72 1 311 1 104 1 290 1 130 1 170 1 17 1 216 1 355 1 
199 5 40 1 43 4 114 1 319 1 123 1 4 1 306 4 194 5 100 1 71 1 170 5 355 2 216 1 
199 2 306 2 194 2 186 1 43 2 210 1 170 2 39 1 
199 3 306 3 194 3 114 1 43 3 319 1 170 3 355 1 
199 1 306 1 194 1 43 1 210 1 170 1 39 1 
199 1 306 1 40 1 194 1 43 1 210 1 319 1 170 1 26 1 
291 1 199 4 110 1 331 1 114 1 81 1 50 1 239 1 23 1 121 1 360 1 122 1 167 1 220 1 362 1 125 1 32 1 89 1 223 1 365 2 130 1 170 3 40 1 368 1 203 1 43 3 173 1 319 2 67 1 306 3 194 4 72 1 101 1 210 1 213 1 311 1 104 1 290 1 215 1 17 1 313 1 355 1 216 1 198 1 
4 1 199 2 306 1 194 2 100 1 114 1 43 1 170 2 355 1 
40 1 199 3 331 1 110 1 43 3 50 1 319 1 67 1 306 3 193 1 194 3 125 1 179 1 210 1 215 1 170 3 216 1 355 2 198 1 
40 1 199 2 113 1 43 2 319 1 306 2 56 1 194 2 170 2 355 1 
199 1 291 1 114 1 81 1 23 1 121 1 167 1 194 1 362 1 72 1 311 1 104 1 17 1 130 1 290 1 
199 1 114 1 81 1 23 1 167 1 194 1 362 1 72 1 224 1 311 1 104 1 354 1 17 1 130 1 290 1 
113 2 297 1 239 2 122 1 220 1 56 2 340 1 89 1 222 1 223 4 365 2 202 1 225 2 369 1 134 1 232 1 135 2 257 1 180 1 101 1 212 1 379 1 213 1 313 1 
199 1 306 1 110 1 194 1 186 1 43 1 210 1 170 1 
49 1 312 1 
49 1 312 1 
111 1 112 1 
111 1 112 1 
111 1 112 1 
49 1 264 1 312 1 
49 1 264 1 312 1 
111 1 112 1 49 1 312 1 
49 1 312 1 265 1 
49 1 264 1 312 1 
49 1 78 1 312 1 
49 1 78 1 312 1 
49 1 78 1 312 1 
199 2 331 1 2 1 114 1 49 1 144 1 27 1 273 1 59 1 90 1 170 2 43 2 282 1 321 1 233 1 205 1 306 2 136 1 194 2 235 1 309 1 312 1 215 1 265 1 
330 1 331 2 2 2 115 1 190 1 49 2 282 1 205 2 145 1 136 2 193 1 59 3 76 1 309 2 310 2 247 1 366 1 312 2 215 2 
162 1 142 1 347 1 
162 1 142 1 42 1 
124 1 142 3 42 1 33 1 347 2 93 1 
124 1 142 2 42 1 347 1 93 1 249 1 
124 1 142 2 42 1 347 1 93 2 
331 5 334 1 267 3 237 1 144 1 363 1 339 1 30 1 149 4 90 1 222 1 169 1 303 1 131 1 134 1 252 2 321 1 256 2 69 3 157 2 377 2 193 2 159 1 326 1 263 1 47 1 379 1 212 1 353 1 215 5 356 1 140 1 
331 9 334 2 335 1 267 8 219 1 119 1 5 1 339 2 6 5 30 1 149 7 222 3 37 1 169 1 60 5 303 3 131 2 134 3 153 1 321 4 256 6 69 9 157 6 377 6 193 5 159 2 263 3 47 2 379 3 212 3 77 1 353 1 215 9 356 6 140 1 
331 3 334 1 267 3 119 1 363 1 339 1 30 1 149 2 222 1 303 2 131 1 134 1 252 1 321 1 256 2 157 2 69 4 377 2 193 3 326 1 159 1 263 1 47 1 379 1 212 1 215 3 
331 4 334 1 267 5 219 1 119 1 363 1 339 1 30 1 149 3 222 2 303 3 131 1 134 2 252 2 153 1 321 2 256 4 69 7 157 4 377 4 193 4 159 1 326 1 263 2 47 1 379 2 212 2 77 1 215 4 
362 1 118 1 24 1 
315 1 362 1 
288 1 
362 1 72 1 290 1 
362 1 18 1 
362 1 290 1 
362 3 72 1 229 1 127 1 118 2 290 1 
225 4 279 1 251 1 227 1 297 3 316 2 116 1 239 3 268 1 231 1 257 2 349 1 191 1 379 1 212 1 378 1 223 7 
225 4 279 1 251 1 227 1 297 3 316 2 116 1 239 3 268 1 231 1 257 2 349 1 191 1 379 1 212 1 378 1 223 7 
225 4 279 1 251 1 227 1 297 3 316 2 116 1 239 3 268 1 231 1 283 1 257 2 349 1 191 1 379 1 212 1 378 1 223 7 
236 1 116 1 165 1 316 3 297 10 239 15 268 2 122 1 28 1 89 1 222 3 223 31 365 2 94 4 225 16 226 3 279 2 227 1 251 2 134 3 231 5 349 2 257 5 191 1 261 1 263 3 101 1 308 1 378 1 212 4 379 4 161 1 213 1 108 1 
316 2 297 4 116 1 239 4 268 1 122 2 361 1 31 1 89 2 223 9 365 4 225 5 279 1 227 1 251 1 231 1 257 3 349 1 101 2 379 1 212 1 378 1 213 2 161 1 
162 1 292 1 142 2 298 1 23 1 84 1 167 1 147 1 300 1 33 1 91 1 130 1 151 1 304 1 41 2 42 1 65 1 280 1 97 2 281 1 347 1 234 1 322 1 323 1 208 1 311 1 104 1 139 1 182 1 329 1 
162 1 292 1 142 2 183 1 336 1 23 1 84 1 167 1 147 1 33 1 91 1 130 1 151 1 304 1 41 3 42 1 65 1 280 1 97 3 281 1 347 1 234 1 322 1 323 2 99 1 208 1 311 1 104 1 139 1 329 1 
292 1 162 1 142 2 183 1 23 1 84 1 167 1 33 1 91 1 130 1 151 1 304 1 41 2 42 1 65 1 280 1 97 2 347 1 322 1 323 2 99 1 311 1 104 1 139 1 329 1 
292 2 332 1 336 1 23 1 269 1 167 1 362 1 91 2 130 1 38 1 41 1 304 2 97 1 155 1 234 1 322 2 208 1 160 1 311 1 104 1 328 1 17 1 290 1 
162 1 292 1 142 2 23 1 167 1 147 1 300 1 33 1 91 1 130 1 304 1 41 1 42 1 280 1 97 1 281 1 347 1 234 1 322 1 99 1 208 1 311 1 104 1 139 1 182 1 329 1 
286 1 
199 1 331 5 110 1 332 1 334 1 48 2 164 1 238 4 240 1 167 2 54 2 4 1 125 1 244 2 128 1 130 1 248 1 170 1 303 2 131 1 133 2 67 1 256 2 207 1 260 1 69 2 210 1 353 1 311 2 138 1 214 1 215 5 17 2 140 3 356 6 358 1 267 2 23 1 317 2 271 1 362 1 30 1 34 2 276 1 156 1 324 1 193 2 194 1 159 1 160 1 47 1 104 2 290 1 109 2 198 1 
199 1 331 3 110 1 238 2 240 1 4 1 271 1 125 1 244 1 246 1 170 1 248 1 276 1 67 1 260 1 156 1 194 1 210 1 215 3 356 2 140 1 198 1 
199 1 331 3 110 1 238 3 240 1 4 1 271 1 125 1 30 1 34 1 246 1 170 1 248 1 276 1 67 1 260 1 156 1 194 1 193 1 210 1 215 3 356 1 140 1 198 1 
199 1 331 3 110 1 238 3 240 1 4 1 54 1 271 1 125 1 244 1 30 1 34 1 246 1 170 1 248 1 276 1 67 1 260 1 156 1 194 1 193 1 210 1 215 3 140 1 356 2 198 1 
199 1 110 1 331 5 334 1 48 2 238 6 240 1 54 4 4 1 55 1 125 1 244 4 246 1 128 1 248 1 170 1 303 2 133 2 67 1 256 1 260 1 210 1 353 1 138 1 215 5 140 3 356 7 314 1 267 1 359 1 317 2 271 1 185 1 30 5 34 4 276 1 375 1 156 1 194 1 193 5 159 1 47 1 198 1 109 2 
199 1 110 1 331 4 334 1 48 2 164 1 238 4 240 1 4 1 54 2 125 1 244 2 128 1 170 1 248 1 303 2 133 2 67 1 256 1 260 1 69 2 210 1 138 1 353 1 215 4 140 2 356 4 267 1 317 2 271 1 30 1 34 2 276 1 156 1 194 1 193 2 159 1 47 1 198 1 109 2 
199 1 331 4 110 1 314 1 334 1 48 2 267 1 238 4 317 2 240 1 54 2 4 1 271 1 185 1 125 1 30 1 244 2 34 2 128 1 170 1 248 1 276 1 303 2 133 2 67 1 375 1 256 1 260 1 156 1 193 1 194 1 159 1 210 1 47 1 138 1 353 1 215 4 356 4 140 2 109 2 198 1 
199 1 331 4 110 1 314 1 334 1 48 2 267 1 238 4 317 2 240 1 54 2 4 1 271 1 185 1 125 1 30 1 244 2 34 2 128 1 170 1 248 1 276 1 303 2 133 2 67 1 375 1 256 1 260 1 156 1 193 1 194 1 159 1 210 1 47 1 138 1 353 1 215 4 356 4 140 2 109 2 198 1 
199 1 331 4 110 1 334 1 267 1 238 4 25 2 317 2 240 1 85 1 54 2 4 1 271 1 185 1 125 1 318 1 30 1 244 2 34 2 128 1 170 1 248 1 276 1 371 2 67 1 256 1 260 1 206 1 69 2 156 1 193 1 194 1 159 1 210 1 47 1 353 1 215 4 356 4 140 2 109 2 198 1 
199 1 314 1 331 4 110 1 334 1 48 2 267 1 238 5 317 2 240 1 4 1 54 3 271 1 55 1 185 1 125 1 30 1 244 3 34 3 128 1 170 1 248 1 276 1 303 2 133 2 67 1 375 1 256 1 260 1 156 1 193 1 194 1 159 1 47 1 210 1 138 1 353 1 215 4 140 2 356 5 109 2 198 1 
199 1 314 1 331 4 110 1 334 1 48 2 267 1 238 5 317 2 240 1 4 1 54 3 271 1 55 1 185 1 125 1 30 1 244 3 34 3 128 1 170 1 248 1 276 1 303 2 133 2 67 1 375 1 256 1 260 1 156 1 193 1 194 1 159 1 47 1 210 1 138 1 353 1 215 4 140 2 356 5 109 2 198 1 
199 1 331 4 110 1 334 1 164 1 267 1 238 4 25 2 317 2 240 1 85 1 54 2 4 1 271 1 125 1 30 1 244 2 34 2 128 1 248 1 170 1 276 1 371 2 67 1 256 1 260 1 69 2 156 1 193 1 194 1 159 1 47 1 210 1 353 1 215 4 356 4 140 2 109 2 198 1 
113 1 114 2 116 1 297 2 316 1 24 1 239 3 122 1 56 1 220 1 340 1 89 1 223 6 365 2 225 3 251 1 227 1 135 1 349 1 257 2 101 1 378 1 212 1 379 1 213 1 313 1 
113 11 114 1 165 1 297 2 239 6 122 2 220 1 56 4 146 1 245 1 89 2 222 1 223 14 365 4 94 3 225 8 368 1 226 3 134 2 231 1 68 1 255 1 135 11 257 1 261 1 46 1 263 2 101 2 212 2 379 1 213 2 381 1 313 2 
291 1 199 2 114 1 81 1 23 1 239 1 121 1 122 1 167 1 56 1 220 1 146 1 362 1 89 1 223 2 365 2 130 1 170 1 302 1 225 1 368 1 43 1 11 1 45 1 68 1 306 1 194 2 72 1 101 1 311 1 352 1 213 1 104 1 290 1 17 1 313 1 355 1 216 1 
199 3 291 2 113 7 114 2 116 1 337 2 297 8 239 10 52 1 121 2 122 3 167 3 56 7 170 1 130 2 62 2 250 1 251 1 134 2 68 1 135 7 349 1 257 4 306 1 263 2 72 2 212 3 311 3 213 3 17 1 216 1 355 1 313 3 21 1 81 2 316 1 23 2 360 2 220 3 146 1 362 2 89 3 222 2 223 20 365 6 225 10 368 1 43 1 227 1 372 2 231 4 99 1 194 3 101 3 378 1 379 3 104 3 290 2 105 2 
199 1 332 1 83 1 298 1 23 2 239 1 3 1 122 2 167 8 220 2 362 3 340 1 89 2 223 2 365 4 129 1 170 1 130 2 64 1 225 1 368 1 43 1 254 1 68 1 99 1 306 1 194 1 209 1 101 2 287 2 160 1 311 8 213 2 104 7 197 1 17 2 290 2 355 1 313 2 
199 1 113 1 297 1 239 2 122 1 56 1 220 1 146 1 89 1 222 1 223 3 365 2 170 1 63 1 40 1 225 1 43 1 134 1 319 1 135 1 257 1 306 1 194 1 263 1 101 1 212 1 379 1 213 1 313 1 
225 2 369 1 113 1 134 1 297 1 231 1 135 1 122 1 56 1 220 1 340 1 89 1 101 1 223 2 212 1 213 1 365 2 313 1 
113 1 297 1 239 2 135 1 122 1 257 1 56 1 220 1 340 1 180 1 89 1 101 1 222 1 223 2 379 1 213 1 365 2 313 1 
113 2 297 2 239 2 122 1 220 1 56 2 340 1 89 1 222 1 223 4 365 2 225 2 134 1 231 1 135 2 257 1 263 1 101 1 212 1 379 1 213 1 313 1 
225 2 369 1 113 1 134 1 297 1 231 1 254 1 135 1 122 1 56 1 220 1 89 1 101 1 223 2 212 1 213 1 365 2 313 1 
113 1 297 1 239 2 254 1 135 1 122 1 257 1 56 1 220 1 180 1 89 1 101 1 222 1 223 2 379 1 213 1 365 2 313 1 
113 2 297 2 239 2 122 1 220 1 56 2 89 1 222 1 223 4 365 2 225 2 134 1 254 1 231 1 135 2 257 1 263 1 101 1 212 1 379 1 213 1 313 1 
113 2 297 2 239 2 122 1 220 1 56 2 89 1 222 1 223 4 365 2 225 2 134 1 231 1 135 2 257 1 263 1 101 1 212 1 379 1 213 1 313 1 
291 1 199 1 114 1 81 1 23 1 239 1 121 1 360 1 122 1 167 1 220 1 362 1 89 1 223 2 365 2 130 1 225 1 368 1 68 1 194 1 72 1 101 1 311 1 213 1 104 1 290 1 17 1 313 1 
199 1 114 1 81 1 23 1 239 1 122 1 167 1 220 1 362 1 89 1 223 2 224 1 365 2 130 1 225 1 368 1 68 1 284 1 194 1 72 1 101 1 311 1 213 1 354 1 104 1 290 1 17 1 313 1 
113 2 297 2 239 2 122 1 220 1 56 2 146 1 89 1 222 1 223 4 365 2 225 2 134 1 231 1 135 2 257 1 263 1 101 1 212 1 379 1 213 1 313 1 
291 1 199 1 113 2 81 1 297 2 239 2 23 1 298 1 121 1 360 1 122 1 167 1 56 2 220 1 362 1 89 1 222 1 223 4 365 2 130 1 225 2 134 1 372 1 231 1 135 2 257 1 194 1 263 1 72 1 101 1 379 1 212 1 311 1 213 1 104 1 290 1 313 1 
199 1 113 1 297 1 239 1 122 1 220 1 56 1 146 1 89 1 222 1 223 3 365 2 170 1 40 1 225 2 43 1 134 1 319 1 231 1 135 1 306 1 194 1 12 1 263 1 101 1 379 1 212 1 213 1 313 1 
200 4 297 8 165 3 116 1 239 21 120 1 122 3 166 1 241 1 342 1 171 1 134 4 251 1 257 4 349 1 261 1 263 4 351 1 212 5 213 3 316 1 270 1 361 1 274 1 89 3 222 4 223 41 365 6 92 1 94 4 225 20 226 3 227 1 98 1 374 1 231 4 325 2 101 3 195 1 379 5 378 1 196 1 161 1 
200 4 316 1 116 1 165 3 297 7 239 18 120 1 122 4 270 1 166 1 241 1 361 1 274 1 342 1 89 4 222 3 223 38 365 8 92 1 171 1 94 4 225 20 226 3 251 1 227 1 134 4 98 1 374 1 231 3 349 1 257 4 261 1 325 2 351 1 263 4 195 1 101 4 378 1 212 5 379 4 161 2 196 1 213 4 
200 4 316 1 116 1 165 2 297 14 239 25 120 1 122 2 270 1 166 1 361 1 274 1 342 1 89 2 222 7 223 52 365 4 171 1 94 4 225 27 226 4 251 1 227 1 134 7 98 1 374 1 231 7 349 1 257 7 261 2 325 1 351 1 46 2 263 7 195 1 101 2 378 1 212 8 379 8 161 1 196 1 213 2 
200 2 165 1 297 6 239 10 122 2 270 1 361 1 274 1 89 2 222 3 223 19 365 4 92 1 171 1 94 2 225 9 226 1 152 1 134 3 98 1 231 3 257 3 261 1 325 1 351 2 263 3 101 2 212 3 379 3 213 2 
200 4 297 4 165 2 239 12 120 1 122 3 270 1 166 1 361 1 274 2 342 1 89 3 222 2 223 26 365 6 171 1 94 2 225 14 226 2 134 3 98 1 374 1 231 2 257 2 325 2 351 1 263 3 195 1 101 3 379 2 212 3 161 2 213 3 196 1 
136 1 2 1 115 1 190 1 49 1 76 1 143 1 309 1 312 1 205 1 
273 1 265 1 
177 1 136 1 2 1 341 1 49 1 309 1 36 1 312 1 205 1 
264 1 181 1 
88 1 228 1 78 1 
331 1 2 1 115 1 190 1 49 1 282 1 205 1 145 1 136 1 193 1 59 2 76 1 309 1 310 1 247 1 366 1 312 1 215 1 
331 1 2 1 115 1 190 1 49 1 282 1 205 1 145 1 136 1 193 1 59 2 76 1 309 1 310 1 247 1 366 1 312 1 215 1 
331 1 2 1 115 1 190 1 49 1 282 1 205 1 145 1 136 1 193 1 59 2 76 1 309 1 310 1 247 1 366 1 312 1 215 1 
228 1 264 1 181 1 
228 1 264 1 181 1 
88 1 78 1 
88 1 228 1 78 1 
235 1 233 1 
199 2 331 1 2 1 114 1 49 1 144 1 27 1 273 1 149 1 59 1 90 1 366 1 343 1 170 2 43 2 321 1 233 1 205 1 306 2 136 1 194 2 235 1 310 1 309 1 312 1 215 1 265 1 
357 1 199 2 22 1 23 1 239 1 122 1 167 2 220 1 146 1 362 1 89 1 223 2 365 2 367 1 130 1 129 1 170 2 61 1 187 1 225 1 368 1 68 1 194 2 209 1 101 1 287 2 311 2 213 1 104 2 290 1 313 1 
162 1 142 2 304 1 163 1 42 1 280 1 281 1 347 1 23 1 253 1 298 1 117 1 167 2 99 1 33 1 311 2 104 2 130 1 329 1 
162 1 142 2 304 1 163 1 42 1 280 1 281 1 347 1 23 1 167 1 99 1 350 1 33 1 311 1 104 1 130 1 329 1 
304 1 332 1 23 1 253 1 155 1 167 1 362 1 160 1 311 1 104 1 130 1 290 1 17 1 106 1 
162 1 142 2 304 1 163 1 42 1 280 1 281 1 347 1 253 1 117 1 23 1 167 1 99 1 33 1 311 1 104 1 130 1 329 1 
0 1 
193 1 158 1 30 1 267 1 211 1 24 1 256 1 
331 1 334 1 48 1 267 1 30 1 303 1 133 1 256 1 69 1 193 2 159 1 47 1 138 1 353 1 215 1 140 1 356 1 
331 5 334 4 298 1 51 1 118 2 167 3 125 2 127 1 130 4 344 2 62 2 303 6 131 2 9 2 132 2 10 1 134 2 256 8 69 12 263 2 14 2 72 3 211 1 74 1 212 2 353 4 311 3 214 1 16 2 17 1 215 5 18 2 356 5 140 3 79 2 315 3 80 2 267 9 23 3 184 1 362 10 30 2 222 2 35 1 154 2 157 6 377 6 193 8 158 1 159 4 47 4 379 2 104 3 290 3 
331 1 334 2 267 8 295 1 165 1 120 1 166 1 30 2 342 1 222 2 344 2 94 1 303 3 131 1 226 1 134 2 374 1 230 1 256 5 69 6 157 5 377 5 193 5 159 2 263 2 47 2 212 2 379 2 196 1 353 2 214 1 16 1 215 1 356 1 140 1 
199 1 314 1 331 1 334 1 267 2 170 1 344 2 39 1 43 1 251 1 173 1 319 1 349 1 258 1 256 2 192 1 306 1 194 1 159 1 210 1 47 1 378 1 212 2 379 1 75 1 353 1 16 1 215 1 
334 1 267 1 256 1 193 1 159 1 158 1 30 1 47 1 211 1 353 1 
267 5 134 2 256 5 157 5 69 10 377 5 193 5 263 2 222 2 212 2 379 2 16 1 344 2 62 1 303 5 
331 1 193 1 30 1 215 1 356 1 140 1 
331 3 332 1 334 2 358 1 267 2 23 1 119 1 184 2 167 4 299 1 362 1 130 1 131 2 370 1 10 1 256 2 207 1 159 2 47 2 160 1 353 1 311 4 104 4 214 2 290 1 17 2 215 3 356 4 140 2 
199 3 291 1 114 1 81 1 239 1 23 1 360 1 121 1 122 1 167 1 220 1 362 1 32 1 89 1 223 1 365 2 170 2 130 1 368 1 43 2 173 1 319 2 306 2 194 3 72 1 101 1 311 1 213 1 104 1 17 1 290 1 313 1 
131 1 334 1 267 1 316 1 256 2 69 4 157 2 377 2 193 4 159 1 30 2 47 1 353 1 214 1 303 2 
73 1 309 1 205 1 
73 1 309 1 205 1 
20 1 235 1 76 1 309 1 205 1 
73 1 309 1 205 1 
309 1 8 1 205 1 
309 1 8 1 205 1 
309 1 8 1 205 1 
309 1 205 1 
49 1 312 1 
316 1 165 1 116 1 297 2 239 4 122 1 361 1 89 1 223 8 365 2 94 1 225 4 226 1 227 1 251 1 349 1 257 2 101 1 379 1 212 1 378 1 196 1 213 1 
316 1 116 1 165 1 297 3 239 5 122 2 361 1 89 2 223 11 365 4 7 1 94 2 225 6 226 1 251 1 227 1 134 1 231 1 257 2 349 1 261 1 263 1 101 2 379 1 378 1 212 2 196 1 213 2 
316 1 116 1 165 1 297 4 239 10 120 1 122 3 166 1 361 1 342 1 89 3 222 2 223 19 365 6 7 1 94 1 225 9 226 1 251 1 227 1 134 2 374 1 231 1 349 1 257 3 263 2 101 3 378 1 212 3 379 3 196 1 213 3 161 1 
316 1 116 1 165 1 297 5 239 7 120 1 122 3 166 1 361 1 342 1 89 3 222 1 223 17 365 6 7 1 94 1 225 10 226 1 251 1 227 1 134 2 374 1 231 2 349 1 257 3 263 2 101 3 378 1 212 3 379 2 161 1 196 1 213 3 
316 1 165 1 116 1 297 2 239 4 122 1 361 1 89 1 223 8 365 2 94 1 225 4 226 1 227 1 251 1 349 1 257 2 101 1 379 1 212 1 378 1 196 1 213 1 
165 1 297 2 239 6 120 1 122 1 166 1 361 1 342 1 89 1 222 2 223 12 365 2 94 1 225 6 226 1 134 2 374 1 231 1 257 1 263 2 101 1 212 2 379 2 196 1 213 1 
316 1 116 1 165 1 297 5 239 8 120 1 122 4 166 1 361 1 342 1 89 4 222 1 223 18 365 8 7 1 94 1 225 10 226 1 251 1 227 1 134 2 374 1 231 2 349 1 257 3 263 2 101 4 378 1 212 3 379 2 196 1 213 4 161 2 
165 1 297 6 239 7 120 1 122 4 166 1 361 1 342 1 89 4 222 2 223 16 365 8 92 1 94 1 225 9 226 1 134 3 374 1 231 3 257 3 263 3 101 4 212 3 379 2 196 1 213 4 161 2 
225 3 227 2 251 3 116 1 297 6 239 4 231 3 349 3 257 3 379 1 223 7 378 1 212 1 
316 1 116 1 165 1 297 4 239 8 120 1 122 4 166 1 361 1 342 1 89 4 222 1 223 18 365 8 92 1 94 1 225 10 226 1 251 1 227 1 134 2 374 1 231 1 349 1 257 3 263 2 101 4 378 1 212 3 379 2 196 1 213 4 161 2 
225 4 227 1 251 1 316 1 297 3 116 1 239 4 231 1 122 2 257 2 349 1 89 2 101 2 379 1 212 1 378 1 223 8 213 2 365 4 161 1 
225 3 227 1 251 1 316 1 116 1 297 2 239 3 24 1 349 1 257 2 378 1 212 1 223 6 379 1 
225 2 134 1 297 2 239 2 231 1 122 1 257 1 263 1 89 1 222 1 101 1 379 1 212 1 223 4 213 1 365 2 7 1 
225 3 226 1 134 1 165 1 297 2 239 4 231 1 257 1 261 1 263 1 222 1 379 1 223 7 212 1 94 2 
82 1 316 1 116 1 297 9 239 12 122 2 245 1 89 2 222 2 223 23 365 4 94 2 225 11 226 2 251 2 227 1 134 2 231 4 349 2 257 5 261 1 263 2 46 1 101 2 378 1 212 3 379 3 161 2 213 2 
223 1 239 1 94 1 
225 1 226 1 223 1 
225 3 134 1 297 3 239 3 231 1 122 1 257 2 263 1 89 1 101 1 222 1 223 6 212 1 379 1 365 2 213 1 7 1 62 1 
165 1 297 2 239 6 120 1 122 1 166 1 361 1 342 1 89 1 222 2 223 12 365 2 94 1 225 6 226 1 134 2 374 1 231 1 257 1 263 2 101 1 212 2 379 2 196 1 213 1 
225 3 251 1 297 2 239 3 231 1 349 1 257 1 378 1 212 1 223 6 379 1 
225 1 251 1 227 1 82 1 297 2 116 1 239 2 231 1 122 1 257 1 349 1 89 1 101 1 223 3 161 1 213 1 365 2 
225 5 251 2 297 5 239 5 231 2 122 1 258 1 349 2 257 3 361 1 89 1 101 1 223 10 378 1 212 2 379 2 365 2 213 1 
225 2 134 1 297 1 231 1 122 1 361 1 89 1 101 1 212 1 223 2 213 1 365 2 
225 2 134 1 297 2 239 2 231 1 122 1 257 1 361 1 263 1 89 1 222 1 101 1 379 1 212 1 223 4 213 1 365 2 
225 1 251 1 82 1 297 2 239 2 231 1 122 3 349 1 257 1 361 1 89 3 101 3 223 3 161 1 213 3 365 6 92 1 
82 1 316 1 116 1 165 1 297 12 239 18 122 5 28 1 361 1 89 5 222 3 223 34 365 10 7 1 92 1 94 4 225 16 226 3 251 3 227 1 134 3 231 5 349 3 257 7 261 1 263 3 308 1 101 5 378 2 212 5 379 5 161 2 213 5 108 1 
199 1 4 1 345 1 194 1 100 1 114 1 170 1 
272 1 266 1 242 1 296 1 320 1 
332 1 362 1 160 1 23 1 24 1 311 1 104 1 130 1 290 1 17 1 167 1 
199 2 114 1 43 1 81 1 23 1 121 1 167 1 306 1 194 2 362 1 72 1 311 1 104 1 290 1 130 1 170 1 17 1 355 1 
199 2 110 1 114 1 81 1 23 1 121 1 184 1 167 1 362 3 170 2 130 1 43 2 67 1 306 1 194 2 14 1 72 2 210 1 311 1 104 1 290 2 18 1 355 1 
199 2 110 1 114 1 81 1 23 1 184 1 167 2 362 3 224 1 170 2 130 1 43 2 67 1 306 1 194 2 262 1 14 1 72 2 210 1 311 2 104 2 290 2 18 1 355 1 
331 2 315 1 23 1 118 1 184 1 167 3 362 4 125 1 30 1 150 1 130 1 193 1 262 1 70 1 14 1 72 1 311 3 104 3 215 2 290 1 18 1 17 1 356 1 
331 2 9 1 315 1 118 1 23 1 184 1 167 3 193 1 125 1 362 4 262 1 30 1 14 1 72 1 311 3 104 3 17 1 18 1 290 1 130 1 215 2 356 1 
83 1 23 1 311 1 104 1 130 1 167 1 
64 1 333 1 83 1 298 1 23 2 3 1 167 7 99 1 178 1 148 1 362 3 72 1 287 1 127 1 311 7 104 6 197 1 129 1 17 2 290 2 130 3 
291 1 199 2 113 1 114 2 337 1 116 1 297 2 298 1 239 3 121 1 122 2 167 1 56 1 170 1 130 1 251 1 135 1 349 1 257 2 306 1 72 1 212 1 311 1 213 2 355 1 313 2 81 1 316 1 23 1 360 1 220 2 146 1 362 1 89 2 223 6 365 4 187 1 225 3 43 1 227 1 372 1 194 2 101 2 378 1 379 1 104 1 290 1 
79 1 331 3 315 1 334 2 80 1 267 1 118 1 167 1 362 2 125 1 30 1 149 1 9 1 10 1 154 1 256 1 193 1 158 1 159 2 47 2 211 1 311 1 353 2 104 1 17 1 215 3 356 2 140 1 
83 1 298 1 118 1 23 1 167 2 362 2 72 1 74 1 127 1 311 2 104 2 290 1 130 2 
332 1 172 1 298 1 23 1 167 4 362 1 262 1 160 1 311 4 104 4 130 1 17 1 290 1 
250 1 23 1 204 1 184 1 167 2 178 1 148 1 362 1 72 1 311 2 104 2 290 1 130 2 107 1 
162 1 142 1 42 1 280 1 23 1 311 1 104 1 130 1 17 1 167 1 
357 1 298 1 23 1 167 2 99 1 362 1 311 2 104 2 129 1 290 1 130 1 
64 1 332 1 172 1 298 1 23 2 3 1 184 1 167 5 362 3 160 1 311 5 104 4 17 1 129 1 290 2 130 2 
64 1 332 1 172 1 298 1 23 2 184 1 167 5 362 3 160 1 311 5 104 4 289 1 17 1 129 1 290 2 130 2 
199 2 114 1 43 1 81 1 23 1 167 1 306 1 194 2 362 1 72 1 224 1 311 1 104 1 290 1 130 1 170 1 17 1 355 1 
333 1 23 1 184 1 167 1 178 1 148 1 362 1 72 1 127 1 311 1 104 1 290 1 130 2 
199 1 293 1 22 1 307 1 57 1 194 1 367 1 170 1 61 1 
293 1 305 1 141 1 
57 1 307 1 293 1 114 1 376 1 
110 1 331 2 293 1 114 1 50 1 67 1 376 2 305 1 193 1 307 2 57 2 125 1 30 1 149 1 210 1 380 1 215 2 141 1 198 1 
151 1 65 1 24 1 84 1 
151 1 41 1 65 1 208 1 97 1 234 1 84 1 
292 1 97 1 91 1 
151 1 41 3 65 1 97 3 218 1 234 1 348 1 84 1 300 1 208 1 126 1 58 2 
151 1 41 2 65 1 208 1 97 2 234 1 84 1 323 1 201 1 
162 1 142 1 151 1 278 1 41 1 300 1 208 1 97 1 347 1 102 1 234 1 
151 1 41 1 300 1 65 1 208 1 97 1 234 1 
41 1 300 1 65 2 208 1 97 1 234 1 84 1 
151 1 41 2 65 1 97 2 217 1 294 1 234 2 259 1 300 1 208 2 
41 3 151 2 65 1 97 3 174 1 234 1 84 1 323 2 300 1 208 1 275 1 102 1 15 1 
162 1 151 1 142 2 41 2 42 1 65 1 97 2 347 1 234 1 84 1 323 1 300 1 208 1 221 1 33 1 
41 4 151 2 65 1 97 4 174 1 234 2 84 1 201 1 323 2 300 1 208 2 102 1 301 1 
151 1 41 1 300 1 65 1 208 1 97 1 234 1 84 1 
189 1 41 4 151 3 65 2 97 4 218 1 174 1 234 1 84 2 323 2 58 1 126 1 208 1 102 1 
151 1 41 2 65 1 97 2 338 1 175 1 234 1 323 1 84 1 86 1 300 1 208 1 
188 1 151 1 41 3 65 1 97 3 218 2 234 1 84 1 300 1 126 1 208 1 58 2 
168 2 151 2 103 1 44 1 
1 1 41 1 300 1 208 1 97 1 234 1 
151 1 41 2 300 1 65 1 208 1 97 2 15 1 234 1 84 1 323 1 
29 1 
151 1 41 1 300 1 65 1 208 1 97 1 234 1 84 1 
41 3 151 1 65 1 97 3 234 1 323 1 84 1 300 1 208 1 58 1 15 1 
189 1 151 1 102 1 174 1 
151 1 65 1 

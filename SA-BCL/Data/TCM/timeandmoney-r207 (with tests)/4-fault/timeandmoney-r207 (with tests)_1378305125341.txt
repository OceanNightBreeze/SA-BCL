#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 241 31 198 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 2 1 1 255 1 79 2 257 1 298 1 157 2 140 9 265 1 21 2 142 3 277 2 143 1 280 6 316 4 282 1 49 1 27 1 181 1 268 2 325 1 201 1 250 9 290 5 291 1 167 1 295 1 293 2 
330 2 1 1 255 1 79 2 257 1 298 1 157 2 140 9 265 1 21 2 142 3 277 2 143 1 280 6 316 4 282 1 49 1 27 1 181 1 268 2 325 1 201 1 250 9 290 5 291 1 167 1 295 1 293 2 
330 2 1 1 255 1 79 2 257 1 298 1 157 2 140 10 265 1 21 2 142 4 277 2 143 1 280 7 316 5 282 1 49 1 27 1 181 1 268 2 325 1 201 1 250 10 290 6 291 1 167 1 295 1 293 2 
330 1 1 1 255 1 79 2 298 1 157 2 140 7 265 1 21 2 142 2 277 2 143 1 280 4 316 3 282 1 49 1 27 1 181 1 268 2 325 1 201 1 250 7 290 4 291 1 167 1 295 1 293 2 
330 2 1 1 280 3 79 1 316 2 257 1 268 1 157 1 201 1 250 4 290 3 140 4 167 1 265 1 295 1 293 1 142 1 21 1 
277 1 1 1 79 1 298 1 66 1 27 1 333 1 268 1 201 1 250 2 290 1 43 1 140 2 295 1 293 1 21 1 
277 1 1 1 280 1 316 1 181 1 201 1 250 3 290 2 140 3 295 1 293 2 21 2 142 1 
330 2 1 1 255 1 79 1 257 1 233 1 157 1 307 1 140 9 265 1 142 3 21 2 277 1 280 7 316 4 282 1 181 1 268 1 201 1 250 9 290 5 167 1 295 1 293 2 
330 2 1 1 255 1 79 1 257 1 233 1 157 1 307 1 140 9 265 1 142 3 21 2 277 1 280 7 316 4 282 1 181 1 268 1 201 1 250 9 290 5 167 1 295 1 293 2 
80 1 90 1 98 1 
248 2 206 1 90 1 
216 2 279 2 101 2 74 1 11 2 221 2 18 2 195 1 
2 2 229 1 331 1 3 2 152 1 209 1 131 1 108 1 11 3 12 1 15 1 18 2 40 1 172 1 134 1 112 1 137 1 89 1 195 1 278 1 216 2 279 3 219 2 24 1 95 2 266 2 221 2 145 1 249 1 71 1 146 1 101 2 74 1 103 1 148 1 125 1 78 1 
216 1 50 1 279 1 101 1 354 1 11 1 259 1 221 1 18 1 195 1 
168 1 161 1 279 1 106 1 197 1 80 1 11 1 221 1 259 1 122 1 308 1 90 1 91 1 378 1 
216 1 168 1 161 1 279 1 106 1 80 1 11 1 221 1 259 1 18 1 122 2 101 1 90 1 378 2 91 1 
120 1 126 1 378 1 122 1 372 1 
120 1 80 1 9 1 117 1 90 1 126 1 378 2 122 2 
120 1 378 1 122 1 
216 1 279 1 354 1 11 1 68 1 259 1 221 1 18 1 122 1 50 1 101 1 126 1 378 1 195 1 
90 1 
120 1 80 1 9 1 90 1 126 1 239 1 378 2 122 2 
120 2 80 1 273 1 9 1 28 1 14 1 16 1 275 2 122 5 180 2 86 1 52 1 135 1 251 1 33 1 90 1 126 2 378 5 294 2 
74 1 98 1 
216 1 279 2 11 2 221 2 18 1 101 1 366 1 74 2 292 1 
207 1 42 1 73 1 
279 1 219 1 3 1 152 1 95 1 209 1 131 1 11 1 145 1 172 1 112 1 249 1 74 1 148 1 193 1 78 1 
216 1 279 2 219 1 207 1 3 1 152 1 25 1 95 1 131 1 209 1 11 2 321 1 221 1 145 1 18 1 172 1 112 1 249 1 148 1 78 1 
216 3 279 3 101 1 74 1 11 3 321 1 221 3 18 3 
216 1 50 1 279 1 11 1 259 1 221 1 18 1 
216 1 279 1 101 1 366 1 11 1 259 1 221 1 18 1 292 1 
168 1 2 1 106 1 229 1 152 1 3 1 131 1 209 1 11 4 12 1 259 1 18 3 172 1 134 1 112 1 137 1 45 1 89 1 91 1 195 1 278 1 216 3 161 1 279 4 219 1 25 1 95 1 266 2 221 3 321 1 145 1 122 1 249 1 183 1 71 1 146 1 101 2 74 1 148 1 103 1 125 1 292 1 78 1 378 1 
216 1 279 2 6 1 308 1 74 1 11 2 221 2 321 1 18 1 
216 3 168 1 161 1 279 3 106 1 25 1 11 3 259 1 321 2 221 3 18 3 122 1 183 1 101 1 184 1 292 1 90 1 378 1 91 1 
216 2 279 2 207 1 11 2 321 1 221 2 18 2 101 1 73 1 292 1 
279 1 219 1 3 1 152 1 95 1 209 1 131 1 11 1 145 1 172 1 112 1 249 1 74 1 148 1 78 1 
279 1 219 1 3 1 95 1 209 1 131 1 11 1 179 1 145 1 112 1 249 1 74 1 148 1 75 1 78 1 
227 1 2 4 229 2 207 2 12 1 13 1 134 1 42 2 89 1 337 1 278 1 314 1 23 1 24 2 266 2 65 1 323 1 223 1 71 1 375 1 348 1 327 1 73 2 125 1 
216 1 161 1 279 1 332 1 11 1 259 1 221 1 18 1 
216 4 279 5 6 1 25 1 11 5 321 2 221 5 18 4 346 1 308 1 101 1 74 1 141 1 292 1 
216 2 50 1 279 2 332 1 11 2 259 1 221 2 18 2 
334 1 264 1 
334 1 264 1 
224 1 300 1 
224 1 300 1 
224 1 300 1 
334 1 245 1 264 1 
218 1 334 1 264 1 
224 1 230 1 289 1 334 2 300 1 264 2 
334 1 245 1 264 1 
334 1 245 1 264 1 
334 1 253 1 264 1 
334 1 253 1 264 1 
334 1 253 1 264 1 
0 1 93 1 119 2 177 1 230 1 163 2 208 2 320 2 284 1 155 2 171 3 122 2 334 2 204 1 46 1 90 1 264 2 378 2 92 1 
153 1 296 1 208 1 11 2 189 1 82 1 171 1 18 2 115 1 334 1 264 1 216 2 93 1 159 1 279 2 176 1 218 1 119 1 163 1 320 1 221 2 122 1 74 1 378 1 
268 1 157 1 79 1 
268 1 79 1 66 1 
268 3 157 2 4 1 66 1 356 1 283 1 
268 2 157 1 66 1 356 1 283 1 36 1 
268 2 157 1 66 1 356 2 283 1 
206 1 80 1 9 1 10 1 189 1 357 2 14 3 110 1 275 1 111 1 360 1 86 1 115 1 41 2 365 2 337 1 90 2 310 1 176 1 120 1 180 1 122 5 248 3 223 1 52 2 374 1 348 1 327 1 328 1 126 4 294 1 378 5 
351 1 206 3 256 5 80 1 9 1 357 6 14 8 110 3 111 1 275 2 360 2 304 1 86 1 365 6 337 3 90 5 310 2 176 4 120 6 28 1 97 1 122 9 180 2 372 5 248 9 223 3 373 1 52 6 54 1 348 3 327 3 126 7 205 1 378 9 294 2 
206 2 80 1 14 3 357 2 110 1 275 1 360 1 41 1 365 2 337 1 90 3 310 1 176 1 28 1 180 1 122 3 223 1 248 4 52 2 374 1 348 1 327 1 328 1 126 2 294 1 378 3 
351 1 206 3 80 1 357 4 14 5 110 2 275 1 360 1 41 2 365 4 337 2 90 4 310 1 176 2 28 1 97 1 180 1 122 4 248 7 223 2 373 1 52 4 374 1 348 2 327 2 328 1 126 3 294 1 378 4 
96 1 78 1 98 1 
100 1 78 1 
194 1 
112 1 78 1 
112 1 210 1 96 2 145 1 78 3 226 1 
112 1 145 1 78 1 
78 1 175 1 
47 1 56 1 313 1 57 1 2 7 229 3 23 3 178 1 24 4 65 2 121 1 322 1 223 1 270 1 87 2 327 1 335 1 
47 1 56 1 313 1 57 1 2 7 229 3 23 3 178 1 24 4 65 2 121 1 322 1 223 1 270 1 87 2 327 1 335 1 
47 1 56 1 57 1 313 1 2 7 229 3 23 3 178 1 24 4 65 2 274 1 121 1 322 1 223 1 270 1 87 2 327 1 335 1 
56 1 2 6 229 3 38 1 12 1 299 1 134 1 87 1 89 1 335 1 278 1 47 1 338 1 241 1 23 2 24 3 266 2 65 1 244 1 121 2 322 1 31 1 270 1 102 1 
56 1 57 1 185 1 2 9 229 4 12 1 134 1 87 1 89 1 64 1 278 1 47 1 313 1 23 3 24 5 178 1 266 2 65 2 121 1 322 1 223 2 270 1 203 1 327 2 
1 1 186 1 79 1 3 1 4 1 232 1 353 1 209 1 131 1 258 1 235 1 303 1 157 1 118 1 140 2 21 1 277 1 280 1 219 1 340 1 95 1 267 1 66 1 268 2 201 1 250 2 288 1 290 1 295 1 293 1 
149 1 186 1 79 1 4 1 3 1 232 1 209 1 131 1 258 1 303 1 157 1 118 1 140 3 21 1 277 1 219 1 367 1 280 2 340 1 95 1 267 1 66 1 246 1 268 2 201 1 250 3 288 1 290 1 295 1 293 1 
186 1 79 1 3 1 4 1 209 1 131 1 258 1 157 1 118 1 140 2 277 1 219 1 280 2 367 1 340 1 95 1 267 1 66 1 246 1 268 2 201 1 250 2 288 1 290 1 295 1 
149 1 3 1 129 1 131 1 209 1 258 2 60 1 112 1 364 1 20 1 140 1 118 2 21 1 277 2 219 1 340 2 95 1 370 1 249 1 250 1 123 1 293 1 78 1 
277 1 1 1 186 1 219 1 79 1 4 1 3 1 232 1 95 1 340 1 267 1 66 1 131 1 209 1 258 1 235 1 246 1 268 2 303 1 157 1 288 1 250 1 140 1 118 1 293 1 21 1 
127 1 
106 1 3 2 9 3 11 1 14 2 275 1 61 1 112 1 22 1 161 1 279 1 120 6 197 1 341 2 122 5 29 4 287 1 248 2 249 2 247 1 32 2 34 2 77 2 294 1 78 1 168 1 128 2 206 2 80 1 129 1 209 1 131 1 259 1 132 1 302 1 86 1 262 1 308 1 90 2 310 1 91 1 215 2 48 1 368 1 219 2 95 2 370 1 221 1 180 1 99 1 324 1 52 2 272 2 378 5 329 1 
168 1 106 1 9 1 11 1 259 1 61 1 302 1 308 1 91 1 239 1 161 1 279 1 197 1 120 2 221 1 122 3 29 2 287 1 247 1 329 1 378 3 272 1 
168 1 106 1 80 1 9 1 11 1 259 1 61 1 302 1 308 1 90 1 91 1 239 1 161 1 279 1 120 1 197 1 221 1 122 3 29 3 287 1 247 1 34 1 329 1 378 3 
168 1 106 1 80 1 9 1 11 1 259 1 61 1 302 1 308 1 90 1 239 1 91 1 215 1 161 1 279 1 197 1 120 2 221 1 122 3 29 3 287 1 247 1 34 1 329 1 378 3 272 1 
106 1 150 1 231 1 9 3 11 1 14 1 275 1 61 1 19 1 336 1 239 1 22 1 161 1 279 1 120 7 197 1 341 2 122 5 287 1 29 6 247 1 32 2 72 1 34 4 77 2 294 1 168 1 128 2 206 2 80 5 259 1 302 1 86 1 308 1 90 5 91 1 215 4 368 1 221 1 180 1 52 1 272 4 378 5 329 1 
106 1 9 2 11 1 14 1 275 1 61 1 22 1 161 1 279 1 197 1 120 4 341 2 122 4 287 1 29 4 247 1 248 2 32 2 34 2 77 2 294 1 168 1 128 2 206 2 80 1 259 1 302 1 86 1 262 1 308 1 90 2 91 1 215 2 368 1 221 1 180 1 52 1 378 4 329 1 272 2 
168 1 128 2 206 2 150 1 106 1 80 1 231 1 9 2 11 1 14 1 259 1 275 1 61 1 19 1 302 1 86 1 308 1 90 1 91 1 22 1 215 2 161 1 279 1 368 1 120 4 197 1 341 2 221 1 122 4 180 1 29 4 287 1 247 1 32 2 52 1 34 2 77 2 272 2 329 1 378 4 294 1 
168 1 128 2 206 2 150 1 106 1 80 1 231 1 9 2 11 1 14 1 259 1 275 1 61 1 19 1 302 1 86 1 308 1 90 1 91 1 22 1 215 2 161 1 279 1 368 1 120 4 197 1 341 2 221 1 122 4 180 1 29 4 287 1 247 1 32 2 52 1 34 2 77 2 272 2 329 1 378 4 294 1 
168 1 150 1 106 1 80 1 9 2 11 1 14 1 259 1 358 2 275 1 61 1 302 1 86 1 308 1 263 1 90 1 91 1 215 2 161 1 279 1 368 1 120 4 197 1 221 1 122 4 180 1 371 2 29 4 287 1 248 2 247 1 32 2 52 1 202 1 34 2 55 1 77 2 272 2 329 1 378 4 294 1 
168 1 128 2 206 2 150 1 106 1 80 1 231 1 9 2 11 1 14 1 259 1 275 1 19 1 61 1 302 1 86 1 308 1 90 1 91 1 22 1 215 3 161 1 279 1 368 1 197 1 120 5 341 2 221 1 180 1 122 4 29 5 287 1 247 1 32 2 52 1 72 1 34 3 77 2 294 1 329 1 378 4 272 3 
168 1 128 2 206 2 150 1 106 1 80 1 231 1 9 2 11 1 14 1 259 1 275 1 19 1 61 1 302 1 86 1 308 1 90 1 91 1 22 1 215 3 161 1 279 1 368 1 197 1 120 5 341 2 221 1 180 1 122 4 29 5 287 1 247 1 32 2 52 1 72 1 34 3 77 2 294 1 329 1 378 4 272 3 
106 1 9 2 11 1 14 1 275 1 61 1 161 1 279 1 197 1 120 4 122 4 287 1 29 4 247 1 248 2 32 2 34 2 77 2 294 1 168 1 80 1 259 1 358 2 302 1 86 1 262 1 308 1 90 1 91 1 215 2 368 1 221 1 180 1 371 2 52 1 55 1 378 4 329 1 272 2 
57 1 2 6 207 1 229 3 12 1 134 1 87 1 42 1 89 1 278 1 47 1 313 1 23 2 178 1 24 3 266 2 65 2 322 1 98 1 323 1 223 1 71 1 327 1 73 1 74 2 125 1 
254 1 2 12 107 1 229 5 207 6 187 1 108 1 81 1 12 2 259 1 110 2 134 2 42 6 89 2 337 1 278 2 338 2 312 1 241 2 23 1 24 7 65 1 266 4 223 2 71 1 146 1 348 2 327 1 74 1 73 2 124 1 125 2 225 1 
254 1 2 2 152 1 3 1 229 1 131 1 209 1 11 2 211 1 108 1 12 1 18 1 172 1 112 1 84 1 134 1 85 1 89 1 193 1 216 1 278 1 279 2 219 1 95 1 25 1 24 1 266 2 221 1 321 1 145 1 249 1 71 1 146 1 74 1 148 1 73 1 125 1 78 1 
57 1 2 20 229 10 3 3 152 2 108 1 11 3 12 3 110 2 18 1 112 2 192 2 337 2 158 2 278 3 279 3 23 8 25 1 24 10 65 4 344 1 246 1 249 1 164 2 71 3 348 2 74 2 73 7 125 3 350 1 78 2 254 1 207 7 209 2 131 2 83 1 172 2 134 3 305 2 87 1 137 2 42 7 89 3 47 1 216 1 313 1 219 3 178 1 95 3 266 6 321 1 221 1 145 2 322 1 223 3 146 1 270 4 327 3 148 2 
37 1 2 2 169 1 3 8 229 1 129 1 8 1 353 1 131 2 209 2 11 1 108 1 12 2 59 1 39 1 15 2 18 1 134 2 112 2 214 1 89 2 216 1 278 2 279 1 219 8 95 7 24 1 266 4 370 1 221 1 321 1 246 1 323 1 249 2 71 2 146 1 326 1 125 2 78 3 
254 1 2 3 207 1 229 2 11 1 12 1 110 1 18 1 134 1 114 1 42 1 89 1 337 1 216 1 278 1 279 1 23 1 24 1 65 1 266 2 221 1 223 1 71 1 348 1 101 1 327 1 73 1 125 1 292 1 
278 1 2 2 23 1 207 1 24 2 266 2 12 1 323 1 134 1 223 1 71 1 270 1 375 1 42 1 348 1 73 1 125 1 89 1 
278 1 2 2 314 1 23 1 207 1 229 2 65 1 266 2 12 1 323 1 134 1 71 1 42 1 327 1 73 1 125 1 89 1 337 1 
2 4 207 2 229 2 12 1 110 1 134 1 42 2 89 1 337 1 278 1 23 2 24 2 266 2 65 1 323 1 223 1 71 1 270 1 348 1 327 1 73 2 125 1 
278 1 2 2 23 1 207 1 24 2 266 2 12 1 134 1 223 1 71 1 270 1 375 1 42 1 348 1 73 1 214 1 125 1 89 1 
278 1 2 2 314 1 23 1 207 1 229 2 65 1 266 2 12 1 134 1 71 1 42 1 327 1 73 1 214 1 125 1 89 1 337 1 
2 4 207 2 229 2 12 1 110 1 134 1 42 2 214 1 89 1 337 1 278 1 23 2 24 2 266 2 65 1 223 1 71 1 270 1 348 1 327 1 73 2 125 1 
278 1 2 4 229 2 23 2 207 2 24 2 65 1 266 2 12 1 110 1 134 1 223 1 71 1 270 1 42 2 348 1 327 1 73 2 125 1 89 1 337 1 
2 2 152 1 3 1 229 1 131 1 209 1 108 1 11 1 12 1 172 1 112 1 134 1 137 1 89 1 278 1 279 1 219 1 24 1 95 1 266 2 145 1 249 1 71 1 146 1 74 1 148 1 125 1 78 1 
2 2 3 1 229 1 131 1 209 1 108 1 11 1 12 1 112 1 134 1 89 1 278 1 279 1 242 1 219 1 24 1 95 1 266 2 179 1 145 1 249 1 71 1 146 1 74 1 148 1 75 1 125 1 78 1 
254 1 2 4 207 2 229 2 12 1 110 1 134 1 42 2 89 1 337 1 278 1 23 2 24 2 266 2 65 1 223 1 71 1 270 1 348 1 327 1 73 2 125 1 
2 4 229 2 207 2 152 1 3 1 353 1 131 1 209 1 11 1 12 1 110 1 172 1 112 1 134 1 137 1 42 2 89 1 337 1 192 1 278 1 279 1 219 1 23 2 24 2 95 1 65 1 266 2 145 1 223 1 71 1 270 1 348 1 327 1 73 2 148 1 125 1 78 1 
254 1 2 3 229 1 207 1 11 1 12 1 110 1 18 1 134 1 42 1 89 1 337 1 216 1 278 1 279 1 144 1 23 1 24 2 266 2 221 1 223 1 71 1 270 1 348 1 327 1 101 1 73 1 125 1 292 1 
2 25 229 13 355 1 81 1 12 2 234 1 110 3 173 1 134 2 113 1 89 2 337 3 311 2 278 2 160 1 338 3 240 1 241 2 281 1 23 5 24 12 65 3 266 4 198 1 199 1 182 4 223 3 31 2 270 2 203 1 348 3 327 3 
2 26 229 12 188 1 355 2 170 1 12 3 234 1 110 3 173 1 134 3 113 1 361 1 89 3 337 2 311 1 278 3 338 2 240 2 241 2 281 1 317 1 23 4 24 14 65 2 266 6 244 2 198 1 182 4 223 3 31 2 270 2 203 1 348 3 327 2 
57 1 2 41 229 21 188 1 170 1 355 1 81 1 12 3 212 1 234 1 110 4 173 1 134 3 113 1 361 1 87 1 89 3 337 4 311 1 47 1 278 3 338 4 313 1 240 2 241 3 281 1 317 1 23 7 178 1 24 20 65 4 266 6 244 1 198 1 322 1 199 1 182 4 223 5 31 3 270 3 203 1 348 4 327 5 
57 1 2 38 229 18 188 1 170 1 355 1 81 1 12 4 212 1 234 1 110 4 173 1 134 4 113 1 361 1 87 1 89 4 337 3 311 1 47 1 278 4 338 4 313 1 240 2 241 3 281 1 317 1 23 6 178 1 24 20 65 4 266 8 244 2 198 1 322 1 199 1 182 4 223 5 31 3 270 2 203 1 348 4 327 4 
57 3 2 52 229 24 188 1 170 1 355 1 81 1 12 2 234 1 110 5 173 1 134 2 113 1 361 1 87 3 89 2 337 5 311 1 47 3 278 2 338 3 313 3 240 1 241 3 281 1 317 1 23 12 178 3 24 28 65 7 266 4 244 1 198 1 322 3 182 4 223 8 31 2 203 1 270 5 348 5 327 8 124 1 
119 1 177 1 230 1 136 1 163 1 208 1 334 1 204 1 320 1 264 1 
218 1 82 1 
315 1 119 1 163 1 319 1 208 1 334 1 320 1 359 1 264 1 
0 1 93 1 119 1 177 1 230 1 163 1 208 1 320 1 284 1 155 1 171 2 122 1 334 1 204 1 90 1 264 1 378 1 92 1 
0 1 93 1 119 1 177 1 230 1 163 1 208 1 320 1 284 1 155 1 171 2 122 1 334 1 204 1 90 1 264 1 378 1 92 1 
0 1 93 1 119 1 177 1 230 1 163 1 208 1 320 1 284 1 155 1 171 2 122 1 334 1 204 1 90 1 264 1 378 1 92 1 
289 1 347 1 245 1 
289 1 347 1 245 1 
253 1 377 1 
289 1 253 1 377 1 
159 1 296 1 
153 1 296 1 208 1 11 2 189 1 155 1 82 1 171 1 18 2 115 1 334 1 139 1 264 1 159 1 216 2 279 2 176 1 218 1 119 1 163 1 320 1 284 1 221 2 122 1 74 1 126 1 378 1 
347 1 245 1 
289 1 253 1 377 1 
37 1 254 1 2 2 3 2 229 1 131 1 209 1 11 2 108 1 12 1 15 2 112 1 134 1 62 1 306 1 238 1 89 1 278 1 279 2 219 2 318 1 24 1 95 2 266 2 221 2 71 1 269 1 146 1 326 1 125 1 78 1 
219 2 186 1 79 1 4 1 3 2 5 1 95 2 232 1 353 1 267 1 66 1 131 1 209 1 246 1 268 2 157 1 362 1 376 1 118 1 
219 1 186 1 79 1 4 1 3 1 95 1 232 1 267 1 66 1 209 1 131 1 246 1 268 2 157 1 30 1 376 1 118 1 
219 1 3 1 5 1 95 1 129 1 131 1 209 1 370 1 112 1 249 1 364 1 191 1 118 1 78 1 
219 1 186 1 79 1 4 1 3 1 5 1 95 1 232 1 267 1 66 1 131 1 209 1 246 1 268 2 157 1 362 1 376 1 118 1 
252 1 
52 1 135 1 80 1 273 1 14 1 90 1 98 1 
128 1 206 1 120 1 80 1 341 1 9 1 14 1 275 1 122 1 180 1 248 1 86 1 52 1 90 2 378 1 294 1 22 1 
228 1 151 1 3 3 154 1 273 1 9 3 17 2 14 9 110 2 275 4 112 2 116 1 337 2 276 2 120 5 67 2 122 5 249 1 248 12 164 2 348 2 166 2 78 8 294 4 206 6 80 2 352 2 353 1 131 3 209 2 357 6 213 1 86 4 174 2 135 1 365 6 309 1 90 8 310 2 91 2 175 1 219 3 95 3 220 2 96 2 145 2 180 4 223 2 324 1 52 8 100 3 327 2 226 1 378 5 
338 1 241 1 206 1 198 1 14 1 357 1 275 1 180 1 248 2 86 1 31 1 52 1 365 1 90 1 294 1 
352 2 354 1 11 1 259 1 14 2 275 1 18 1 19 1 86 1 64 1 276 1 195 1 47 1 216 1 279 1 178 1 68 1 221 1 322 1 180 1 122 1 223 2 50 1 52 2 327 1 101 1 294 1 378 1 
80 1 273 1 14 1 275 1 180 1 86 1 135 1 52 1 90 1 294 1 
206 5 352 2 357 5 14 5 110 2 223 2 248 10 164 1 52 5 365 5 348 2 327 2 337 2 90 5 276 1 
120 1 80 1 9 1 90 1 378 1 122 1 
151 2 3 4 129 1 154 1 9 2 131 1 209 1 14 2 275 2 112 1 132 1 86 1 310 2 48 1 162 1 219 4 120 4 95 4 369 1 370 1 28 1 180 2 122 3 249 2 324 2 52 2 78 1 294 2 378 3 
2 1 229 1 3 1 152 1 209 1 131 1 11 3 12 1 18 2 172 1 134 1 112 1 137 1 89 1 195 1 278 1 216 2 279 3 219 1 95 1 266 2 221 2 145 1 249 1 71 1 146 1 101 2 74 1 103 1 148 1 125 1 78 1 
206 2 80 2 357 2 14 1 275 1 180 1 248 4 86 1 324 1 52 2 87 1 365 2 90 4 294 1 310 1 
104 1 208 1 320 1 
159 1 88 1 208 1 204 1 320 1 
104 1 208 1 320 1 
104 1 208 1 320 1 
297 1 208 1 320 1 
297 1 208 1 320 1 
297 1 208 1 320 1 
208 1 320 1 
334 1 264 1 
278 2 47 1 313 1 57 1 2 8 229 4 23 3 178 1 24 4 65 2 266 4 244 1 12 2 322 1 134 2 223 1 87 1 270 1 327 1 89 2 
47 1 313 1 57 1 2 6 229 3 23 2 178 1 24 3 65 2 322 1 98 1 223 1 87 1 327 1 
278 1 2 4 229 2 23 2 24 2 65 1 266 2 12 1 110 1 134 1 223 1 270 1 348 1 327 1 165 1 89 1 337 1 
338 1 241 1 31 1 2 2 229 1 24 1 
57 1 2 26 107 1 229 13 81 1 12 1 110 2 134 1 87 1 89 1 337 2 64 1 47 2 278 1 338 2 313 1 241 2 23 7 178 2 24 13 65 5 266 2 244 1 322 2 223 5 270 2 348 2 327 5 124 1 
338 1 2 1 229 1 
241 1 2 1 24 1 
278 1 2 6 229 3 23 3 24 3 266 2 65 2 12 1 110 1 134 1 223 1 164 1 270 1 348 1 165 1 327 1 89 1 337 1 
2 12 229 6 188 1 170 1 12 1 110 2 134 1 361 1 89 1 337 2 278 1 338 1 241 1 23 2 317 1 24 6 266 2 65 1 198 1 223 2 31 1 270 1 203 1 348 2 327 2 
47 1 2 6 229 3 23 2 178 1 24 3 65 1 322 1 223 1 270 1 327 1 
47 1 278 1 57 1 313 1 2 3 23 2 229 2 24 1 38 1 65 1 266 2 244 1 12 1 322 1 134 1 270 1 89 1 
278 1 47 2 2 10 23 5 229 5 24 5 178 1 266 2 65 3 12 1 322 2 134 1 223 2 203 1 270 2 327 2 89 1 64 1 
278 1 2 2 23 1 24 2 266 2 12 1 134 1 223 1 203 1 270 1 348 1 89 1 
278 1 2 4 229 2 23 2 24 2 65 1 266 2 12 1 110 1 134 1 223 1 203 1 270 1 348 1 327 1 89 1 337 1 
278 3 47 1 2 3 229 2 23 2 38 1 24 1 266 6 65 1 244 1 12 3 322 1 134 3 199 1 203 1 270 1 89 3 
57 1 2 15 229 8 38 1 12 4 299 1 134 4 89 4 64 1 278 4 47 2 338 1 241 1 313 1 23 6 178 1 24 7 266 8 65 3 244 1 322 2 223 2 199 1 31 1 270 3 203 1 327 2 165 1 
57 1 2 24 229 10 188 1 170 1 12 2 110 2 134 2 361 1 87 1 89 2 337 1 64 1 47 2 278 2 338 1 313 1 241 1 23 9 317 1 178 2 24 14 266 4 65 5 244 1 198 1 322 2 223 5 31 1 270 4 203 1 348 2 327 4 
57 1 2 17 229 7 188 1 170 1 12 3 110 2 134 3 361 1 87 1 89 3 337 1 47 1 278 3 338 1 313 1 241 1 23 4 317 1 178 1 24 10 266 6 65 3 244 1 198 1 322 1 223 3 31 1 270 1 203 1 348 2 165 1 327 2 
57 1 2 19 229 10 188 1 170 1 12 3 110 2 134 3 361 1 87 1 89 3 337 2 47 1 278 3 338 1 313 1 241 1 23 4 317 1 178 1 24 9 266 6 65 3 198 1 244 1 322 1 223 3 31 1 270 1 203 1 348 2 165 1 327 3 
57 1 2 17 229 7 188 1 170 1 12 3 110 2 134 3 361 1 87 1 89 3 337 1 47 1 278 3 338 1 313 1 241 1 23 5 317 1 178 1 24 10 266 6 65 3 244 1 198 1 322 1 223 3 31 1 270 2 203 1 348 2 165 1 327 2 
57 1 2 24 229 10 188 1 170 1 12 2 110 2 134 2 361 1 87 1 89 2 337 1 64 1 47 2 278 2 338 1 313 1 241 1 23 9 317 1 178 2 24 14 266 4 65 5 244 1 198 1 322 2 223 5 31 1 270 4 203 1 348 2 327 4 
2 12 229 6 188 1 170 1 12 1 110 2 134 1 361 1 89 1 337 2 278 1 338 1 241 1 23 2 317 1 24 6 266 2 65 1 198 1 223 2 31 1 270 1 203 1 348 2 327 2 
57 1 2 18 229 8 188 1 170 1 12 4 110 2 134 4 361 1 87 1 89 4 337 1 47 1 278 4 338 1 313 1 241 1 317 1 23 5 178 1 24 10 266 8 65 3 198 1 244 2 322 1 223 3 31 1 270 2 203 1 348 2 165 1 327 2 
2 16 229 7 188 1 170 1 12 4 110 3 134 4 361 1 89 4 337 2 278 4 338 1 241 1 317 1 23 6 24 9 266 8 65 3 198 1 244 2 199 1 223 3 31 1 270 3 203 1 348 3 327 2 
47 3 313 1 57 2 2 7 229 4 23 6 178 1 24 3 65 3 322 3 223 1 270 3 327 1 
57 1 2 18 229 8 188 1 170 1 12 4 110 2 134 4 361 1 87 1 89 4 337 1 47 1 278 4 338 1 313 1 241 1 317 1 23 4 178 1 24 10 266 8 65 3 198 1 244 2 322 1 199 1 223 3 31 1 270 1 203 1 348 2 327 2 
279 1 261 1 6 1 308 1 74 1 11 1 221 1 
279 1 105 1 243 1 6 1 11 1 342 1 221 1 133 1 261 1 236 1 308 1 74 1 
112 1 249 1 219 1 3 1 129 1 95 1 131 1 209 1 370 1 78 1 98 1 
216 1 279 2 219 1 3 1 95 1 131 1 209 1 11 2 321 1 221 1 145 1 18 1 172 1 112 1 249 1 74 1 148 1 78 1 
168 1 3 1 151 1 209 1 131 1 11 2 259 2 213 1 18 2 172 1 112 2 175 1 216 1 161 1 279 2 219 1 95 1 221 2 321 1 145 2 74 1 148 1 225 1 78 3 
168 1 3 1 151 1 209 1 131 1 11 2 259 2 213 1 18 2 112 2 175 1 216 1 161 1 279 2 219 1 95 1 179 1 221 2 321 1 145 2 74 1 148 1 225 1 78 3 
3 1 151 1 80 1 130 1 354 1 209 1 131 1 11 1 259 1 213 1 18 1 112 1 90 1 91 1 195 1 175 1 216 1 279 1 219 1 120 1 95 1 96 1 68 1 221 1 222 1 145 1 122 2 50 1 100 1 101 1 78 4 378 2 
3 1 151 1 80 1 354 1 209 1 131 1 11 1 259 1 213 1 18 1 112 1 90 1 91 1 195 1 175 1 216 1 279 1 219 1 120 1 95 1 96 1 68 1 221 1 145 1 122 2 50 1 100 1 101 1 166 1 78 4 378 2 
219 1 3 1 95 1 8 1 131 1 209 1 
37 1 219 7 94 1 169 1 3 7 95 6 8 1 353 1 26 1 209 2 131 3 15 1 59 1 39 1 145 1 246 1 112 2 345 1 249 2 226 1 78 3 
57 1 2 6 152 1 3 1 229 3 11 2 12 2 18 1 112 1 192 1 278 2 279 2 23 2 24 3 65 2 71 2 73 1 74 2 125 2 78 1 254 1 207 1 353 1 209 1 131 1 172 1 134 2 305 1 87 1 137 1 42 1 89 2 216 1 47 1 313 1 219 1 318 1 95 1 178 1 266 4 321 1 221 1 145 1 322 1 223 1 327 1 148 1 
3 1 80 1 273 1 154 1 9 1 14 1 17 1 275 2 86 2 135 1 90 1 91 1 219 1 120 2 95 1 220 1 67 1 96 1 180 2 122 3 249 1 52 1 100 1 166 1 126 1 294 2 378 3 78 2 
219 2 3 2 95 2 353 1 8 1 209 1 131 2 96 1 145 1 112 1 309 1 226 1 78 2 
219 4 3 4 95 4 129 1 353 1 131 1 209 1 370 1 301 1 112 1 249 1 260 1 78 1 
219 2 94 1 151 1 3 2 95 2 209 1 131 2 145 1 112 1 345 1 51 1 237 1 350 1 78 1 
268 1 249 1 186 1 219 1 79 1 3 1 95 1 66 1 131 1 209 1 
37 1 219 2 3 2 95 2 353 1 209 1 131 1 246 1 112 1 306 1 78 1 
37 1 219 5 151 1 3 5 169 1 129 1 95 4 353 1 209 2 131 2 370 1 59 1 301 1 112 2 249 1 78 3 
37 1 219 5 151 1 3 5 169 1 129 1 95 4 353 1 209 2 131 2 370 1 301 1 112 2 249 1 53 1 78 3 
216 1 279 2 219 1 3 1 95 1 131 1 209 1 11 2 179 1 321 1 221 1 145 1 18 1 112 1 249 1 74 1 148 1 78 1 
345 1 112 1 219 1 94 1 3 1 151 1 95 1 26 1 131 2 209 1 145 1 78 1 226 1 
190 1 7 1 44 1 74 1 138 1 
168 1 161 1 106 1 80 1 7 2 259 1 286 1 122 2 343 1 183 1 190 2 44 1 63 1 74 1 138 2 90 1 126 1 91 1 378 2 
279 1 269 1 190 1 62 1 44 1 11 1 138 1 238 1 221 1 
44 1 286 1 343 1 
201 1 290 1 295 1 98 1 
201 1 250 1 290 1 140 1 295 1 293 1 21 1 
277 1 258 1 140 1 
217 1 1 1 196 1 298 2 201 1 250 3 363 1 290 1 140 3 293 1 295 1 21 1 
330 1 280 1 201 1 250 2 290 1 140 2 295 1 293 1 21 1 
1 1 316 1 79 1 268 1 157 1 250 1 290 1 140 1 265 1 293 1 21 1 
1 1 250 1 290 1 140 1 295 1 293 1 21 1 
1 1 201 1 250 1 140 1 295 2 293 1 21 1 
1 1 156 1 200 1 250 2 290 1 76 1 140 2 295 1 293 2 21 2 
1 1 255 1 280 2 316 1 282 1 201 1 250 3 290 2 140 3 295 1 293 1 21 1 142 1 
1 1 280 1 79 1 4 1 66 1 69 1 268 2 157 1 201 1 250 2 290 1 140 2 295 1 293 1 21 1 
330 1 1 1 280 2 316 1 257 1 201 1 250 4 290 2 140 4 295 1 293 2 21 2 142 1 
1 1 201 1 250 1 290 1 140 1 295 1 293 1 21 1 
196 1 280 2 316 1 298 1 58 1 201 2 363 1 250 4 290 3 140 4 295 2 293 1 21 1 142 1 
1 1 280 1 109 1 70 1 201 1 250 2 290 1 307 1 140 2 295 1 293 1 21 1 
1 1 196 2 298 2 201 1 363 1 250 3 271 1 290 1 140 3 293 1 295 1 21 1 
147 2 290 2 349 1 285 1 
1 1 339 1 250 1 140 1 293 1 21 1 
1 1 280 1 255 1 201 1 250 2 290 1 140 2 295 1 293 1 21 1 
35 1 
1 1 201 1 250 1 290 1 140 1 295 1 293 1 21 1 
1 1 280 1 255 1 298 1 201 1 250 3 290 1 140 3 293 1 295 1 21 1 
316 1 290 1 58 1 142 1 
290 1 295 1 

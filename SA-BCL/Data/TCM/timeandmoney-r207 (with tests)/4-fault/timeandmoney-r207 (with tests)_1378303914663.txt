#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 214 117 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 214 117 116 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 214 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 9 283 1 142 3 187 1 31 1 222 2 189 5 97 1 147 1 149 1 331 2 349 4 11 1 53 1 54 1 126 1 334 1 229 9 319 2 278 1 107 7 61 1 162 1 235 1 
169 9 283 1 142 3 187 1 31 1 222 2 189 5 97 1 147 1 149 1 331 2 349 4 11 1 53 1 54 1 126 1 334 1 229 9 319 2 278 1 107 7 61 1 162 1 235 1 
209 1 169 9 283 1 142 3 27 1 187 1 31 1 222 2 97 2 189 5 147 2 348 1 331 2 349 4 11 2 53 1 54 1 125 1 126 2 334 1 254 1 229 9 319 2 107 6 61 1 162 1 206 1 235 1 
209 1 169 9 283 1 142 3 27 1 187 1 31 1 222 2 97 2 189 5 147 2 348 1 331 2 349 4 11 2 53 1 54 1 125 1 126 2 334 1 254 1 229 9 319 2 107 6 61 1 162 1 206 1 235 1 
209 1 169 10 283 1 142 4 27 1 187 1 31 1 222 2 97 2 189 6 147 2 348 1 331 2 349 5 11 2 53 1 54 1 125 1 126 2 334 1 254 1 229 10 319 2 107 7 61 1 162 1 206 1 235 1 
209 1 169 7 142 2 27 1 187 1 31 1 222 2 97 2 189 4 147 2 348 1 331 2 349 3 11 2 53 1 54 1 125 1 126 2 334 1 254 1 229 7 319 1 107 4 61 1 162 1 206 1 235 1 
349 2 169 4 283 1 53 1 126 1 54 1 142 1 334 1 229 4 319 2 107 3 222 1 61 1 189 3 97 1 162 1 147 1 331 1 
11 1 169 2 53 1 126 1 342 1 254 1 229 2 222 1 189 1 61 1 162 1 147 1 330 1 331 1 206 1 193 1 
349 1 11 1 169 3 53 1 142 1 229 3 31 1 107 1 222 2 61 1 189 2 162 1 331 2 
29 1 337 1 353 1 
84 2 29 1 311 1 
247 2 277 1 296 2 64 1 260 2 103 2 76 2 304 2 
282 2 44 1 236 1 64 1 259 1 139 2 260 2 213 1 171 2 25 1 215 1 308 1 6 1 220 1 76 3 120 1 247 3 271 1 122 1 296 2 103 2 52 1 225 1 154 1 37 1 274 1 317 1 16 2 277 1 159 1 320 1 204 1 90 2 164 1 304 2 112 1 166 1 
247 1 296 1 64 1 260 1 103 1 110 1 76 1 304 1 288 1 246 1 
247 1 151 1 313 1 13 1 260 1 352 1 172 1 69 1 29 1 337 1 221 1 110 1 76 1 18 1 
151 2 247 1 296 1 313 1 103 1 260 1 352 2 172 1 29 1 337 1 221 1 110 1 76 1 304 1 18 1 
151 1 249 1 352 1 232 1 99 1 
151 2 239 1 29 1 337 1 352 2 232 1 99 1 70 1 
151 1 352 1 99 1 
151 1 247 1 64 1 296 1 103 1 260 1 352 1 288 1 232 1 110 1 76 1 304 1 294 1 246 1 
29 1 
151 2 184 1 29 1 337 1 352 2 232 1 99 1 70 1 
151 5 258 1 248 1 352 5 14 2 4 1 70 1 266 1 73 1 29 1 337 1 267 1 161 1 144 1 232 2 119 1 269 2 99 2 10 2 
277 1 353 1 
247 2 296 1 260 2 103 1 15 1 277 2 47 1 76 2 304 1 
0 1 191 1 129 1 
247 1 44 1 236 1 52 1 171 1 37 1 25 1 16 1 277 1 159 1 320 1 76 1 90 1 112 1 166 1 36 1 
247 3 277 1 296 3 56 1 260 3 103 3 76 3 304 1 
247 1 296 1 260 1 103 1 110 1 76 1 246 1 
247 1 15 1 296 1 47 1 260 1 103 1 110 1 76 1 304 1 
282 1 44 1 208 1 236 1 64 1 259 1 139 2 260 3 171 1 172 1 25 1 215 1 308 1 6 1 221 1 76 4 120 1 247 4 151 1 271 1 122 1 296 3 313 1 103 3 52 1 314 1 352 1 225 1 37 1 317 1 15 1 16 1 277 1 159 1 160 1 56 1 320 1 110 1 90 1 164 1 112 1 304 2 166 1 18 1 
247 2 277 1 296 1 56 1 260 2 103 1 109 1 76 2 69 1 
151 1 247 3 208 1 296 3 313 1 103 3 260 3 352 1 314 1 172 1 15 1 72 1 56 2 29 1 221 1 110 1 76 3 304 1 18 1 
247 2 15 1 296 2 56 1 0 1 260 2 103 2 76 2 304 1 129 1 
247 1 236 1 44 1 52 1 171 1 37 1 25 1 16 1 277 1 159 1 320 1 76 1 90 1 112 1 166 1 
247 1 236 1 44 1 171 1 170 1 25 1 16 1 277 1 159 1 134 1 320 1 110 1 76 1 90 1 148 1 112 1 166 1 
42 1 282 4 271 1 122 1 0 2 139 2 213 2 225 1 306 1 215 1 156 1 129 2 317 2 228 1 83 1 308 1 231 1 177 1 49 1 310 1 164 1 191 2 244 1 257 1 
247 1 276 1 296 1 260 1 103 1 221 1 110 1 76 1 
247 2 44 1 236 1 296 1 103 1 260 1 314 1 52 1 37 1 171 1 25 1 129 1 16 1 159 1 56 1 320 1 76 2 90 1 112 1 166 1 
247 5 296 4 299 1 103 4 260 5 314 1 69 1 15 1 277 1 56 2 109 1 76 5 98 1 304 1 
247 2 276 1 296 2 260 2 103 2 110 1 76 2 246 1 
303 1 22 1 
303 1 22 1 
123 1 323 1 
123 1 323 1 
123 1 323 1 
303 1 238 1 22 1 
264 1 303 1 22 1 
303 2 123 1 323 1 22 2 321 1 87 1 
303 1 238 1 22 1 
303 1 238 1 22 1 
114 1 303 1 22 1 
114 1 303 1 22 1 
114 1 303 1 22 1 
303 1 200 1 22 1 341 1 214 1 117 1 
151 1 303 1 200 1 22 1 352 1 341 1 214 1 117 1 116 1 
126 1 97 1 147 1 
126 1 147 1 193 1 
201 1 89 1 97 2 63 1 147 3 193 1 
57 1 201 1 97 1 63 1 147 2 193 1 
201 1 97 1 63 2 147 2 193 1 
2 1 70 1 266 1 29 2 73 3 310 1 33 2 119 2 311 1 243 1 244 1 269 1 99 1 10 1 150 1 151 5 350 1 250 1 12 2 352 5 153 1 14 1 199 1 83 1 84 3 337 1 59 1 356 1 232 4 322 2 20 1 257 1 
70 1 266 1 267 1 29 5 73 8 310 3 33 6 119 6 311 3 243 2 244 3 99 6 245 1 269 2 9 1 10 2 151 9 178 5 350 3 298 1 249 5 12 6 273 1 352 9 153 1 198 1 14 2 199 4 83 3 84 9 337 1 356 2 232 7 182 1 257 3 
29 3 267 1 73 3 310 1 33 2 119 2 311 2 243 1 244 1 269 1 150 1 10 1 151 3 350 1 12 2 352 3 14 1 199 1 83 1 84 4 337 1 59 1 356 1 232 2 322 1 257 1 
29 4 267 1 73 5 310 2 33 4 119 4 311 3 243 1 244 2 269 1 9 1 10 1 150 1 151 4 350 2 12 4 352 4 198 1 14 1 199 2 83 2 84 7 337 1 59 1 356 1 232 3 182 1 322 2 257 2 
44 1 211 1 353 1 
44 1 65 1 
71 1 
44 1 159 1 
44 3 343 1 159 1 211 2 7 1 166 1 
44 1 159 1 166 1 
44 1 79 1 
42 2 282 7 305 1 213 4 180 1 317 3 263 1 290 1 318 1 218 1 176 1 355 2 48 1 310 1 49 3 167 1 257 1 
42 2 282 7 305 1 213 4 180 1 317 3 263 1 290 1 318 1 218 1 176 1 355 2 48 1 310 1 49 3 167 1 257 1 
42 2 282 7 305 1 213 4 180 1 317 3 263 1 17 1 290 1 318 1 218 1 176 1 355 2 48 1 310 1 49 3 167 1 257 1 
42 5 43 3 282 31 305 2 139 2 66 1 213 16 215 1 263 1 290 1 344 4 218 2 176 5 74 1 48 2 49 10 310 4 244 3 271 1 122 1 350 3 180 2 317 15 55 1 318 1 83 3 105 1 230 1 181 1 355 3 88 1 164 1 167 1 257 4 
42 3 282 9 305 1 139 4 213 5 215 2 263 1 218 1 176 1 74 1 48 1 310 1 49 4 270 1 271 2 122 2 180 1 317 4 318 1 355 2 164 2 167 1 113 1 257 1 
169 2 21 1 171 1 25 1 222 1 189 1 97 1 223 1 147 2 331 1 193 1 11 1 251 1 53 1 195 1 126 1 227 1 16 1 229 2 256 1 107 1 133 1 60 1 89 1 90 1 61 1 162 1 358 1 112 1 40 1 
168 1 169 3 21 1 171 1 25 1 5 1 222 1 189 1 97 1 223 1 147 2 331 1 193 1 11 1 251 1 53 1 126 1 227 1 16 1 158 1 229 3 256 1 107 2 133 1 60 1 89 1 90 1 162 1 112 1 40 1 
169 2 21 1 171 1 25 1 5 1 189 1 223 1 97 1 147 2 193 1 11 1 251 1 53 1 126 1 16 1 158 1 229 2 256 1 107 2 60 1 89 1 90 1 162 1 112 1 40 1 
44 1 137 1 338 1 11 2 236 1 272 1 168 1 94 1 169 1 284 1 251 2 171 1 25 1 16 1 229 1 159 1 256 2 268 1 60 2 222 1 90 1 112 1 331 1 
169 1 21 1 171 1 25 1 222 1 97 1 223 1 147 2 331 1 193 1 11 1 251 1 126 1 227 1 16 1 158 1 229 1 256 1 133 1 60 1 89 1 90 1 61 1 358 1 112 1 40 1 
275 1 
93 4 138 2 285 2 186 1 288 1 328 3 294 1 99 5 192 2 246 1 10 1 151 4 247 2 296 1 152 1 103 1 13 1 14 1 255 2 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 2 262 1 173 3 266 1 29 1 73 1 221 1 119 1 76 2 311 2 269 1 80 2 351 1 312 1 313 1 352 4 315 1 86 1 135 1 357 1 92 1 
93 4 138 2 285 2 186 1 288 1 328 3 294 1 99 5 192 2 246 1 10 1 151 4 247 2 296 1 152 1 103 1 13 1 14 1 255 2 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 2 262 1 173 3 266 1 73 1 29 1 221 1 119 1 76 2 311 2 269 1 80 2 351 1 312 1 313 1 352 4 315 1 86 1 135 1 357 1 92 1 
93 3 325 1 186 1 288 1 328 2 294 1 99 4 295 1 192 2 246 1 10 1 247 2 151 4 296 1 103 1 13 1 196 2 333 2 14 1 255 1 337 1 110 2 304 1 18 1 64 1 260 2 172 1 69 1 70 2 262 1 173 2 266 1 73 1 29 1 221 1 119 1 76 2 269 1 80 2 351 1 313 1 352 4 315 1 84 2 357 1 92 1 
137 1 236 2 44 1 93 4 94 1 138 2 285 2 186 1 328 2 243 1 295 1 99 6 192 2 10 1 151 5 247 1 13 1 14 1 255 2 16 2 159 1 110 1 111 1 112 1 18 1 207 1 210 1 260 1 171 2 172 1 25 1 69 1 70 3 262 1 173 2 266 1 29 1 73 2 221 1 119 2 311 2 76 1 269 1 34 1 80 2 351 1 313 1 352 5 315 1 279 1 84 2 357 1 90 2 92 1 
184 1 93 2 260 1 172 1 69 1 186 1 70 1 262 1 173 1 221 1 76 1 99 2 247 1 151 3 351 1 313 1 13 1 352 3 315 1 110 1 92 1 18 1 
93 3 184 1 260 1 172 1 69 1 186 1 70 1 262 1 29 1 221 1 76 1 99 1 247 1 151 3 351 1 313 1 13 1 352 3 315 1 255 1 337 1 110 1 92 1 18 1 
151 2 247 1 93 2 351 1 313 1 13 1 260 1 352 2 172 1 186 1 69 1 315 1 262 1 173 1 328 1 221 1 110 1 76 1 92 1 99 1 18 1 
93 4 184 1 138 2 285 2 185 1 186 1 288 1 328 4 294 1 99 7 192 2 246 1 10 1 247 2 151 5 296 1 152 1 103 1 13 1 14 1 255 2 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 3 262 1 173 4 266 1 29 1 73 1 221 1 119 1 76 2 311 2 269 1 80 2 351 1 312 1 313 1 352 5 315 1 86 1 135 1 357 1 92 1 
93 3 138 1 285 2 186 1 288 1 328 1 294 1 99 2 295 1 192 2 246 1 10 1 247 2 151 3 296 1 103 1 13 1 14 1 255 1 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 1 262 1 173 1 266 1 73 1 29 3 221 1 119 1 76 2 311 2 269 1 80 2 351 1 313 1 352 3 315 1 84 2 357 1 92 1 
93 4 138 2 285 2 186 1 288 1 328 2 294 1 99 4 192 2 246 1 10 1 151 4 247 2 296 1 152 1 103 1 13 1 14 1 255 2 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 2 262 1 173 2 266 1 73 1 29 1 221 1 119 1 76 2 311 2 269 1 80 2 351 1 312 1 313 1 352 4 315 1 86 1 357 1 92 1 
93 4 138 2 285 2 186 1 288 1 328 2 294 1 99 4 192 2 246 1 10 1 151 4 247 2 296 1 152 1 103 1 13 1 14 1 255 2 337 1 110 2 304 1 18 1 64 1 210 1 260 2 172 1 69 1 70 2 262 1 173 2 266 1 73 1 29 1 221 1 119 1 76 2 311 2 269 1 80 2 351 1 312 1 313 1 352 4 315 1 86 1 357 1 92 1 
281 1 93 4 325 1 186 1 288 1 328 2 294 1 99 4 192 2 246 1 10 1 151 4 247 2 296 1 103 1 13 1 196 2 333 2 14 1 255 2 337 1 110 2 304 1 18 1 64 1 260 2 172 1 69 1 70 2 262 1 173 2 266 1 73 1 29 1 221 1 119 1 76 2 269 1 80 2 351 1 312 1 313 1 352 4 315 1 84 2 357 1 92 1 359 1 
42 2 282 6 305 1 0 1 139 2 213 3 215 1 263 1 308 1 48 1 49 2 310 1 191 1 271 1 122 1 225 1 129 1 353 1 228 1 317 3 318 1 277 2 355 1 164 1 167 1 257 1 
42 1 282 14 43 3 259 1 139 4 66 1 0 4 212 1 213 8 215 2 216 1 291 1 344 3 308 2 28 1 219 1 176 1 49 2 310 1 191 11 244 1 271 2 122 2 350 2 225 1 154 1 317 6 129 11 277 1 83 2 230 1 164 2 257 2 
44 1 236 1 282 2 0 1 139 2 259 1 260 1 213 1 171 1 25 1 327 1 215 1 308 1 219 1 175 1 118 1 76 2 36 1 247 2 271 1 122 1 296 1 103 1 52 1 314 1 225 1 37 1 154 1 317 1 16 1 277 1 159 1 56 1 320 1 90 1 112 1 164 1 166 1 
42 4 236 1 282 20 44 2 139 6 0 7 1 2 141 2 143 1 6 2 48 1 49 8 191 7 244 2 247 3 296 1 51 2 103 1 52 2 154 1 158 1 16 3 56 1 159 2 108 1 164 3 112 2 166 2 167 1 257 3 305 1 259 1 260 1 213 10 171 3 25 2 215 3 263 1 308 3 219 1 176 4 32 2 310 3 76 3 271 3 122 3 350 2 314 1 225 3 37 2 317 10 129 7 318 1 277 2 83 2 39 1 355 1 320 2 90 3 
44 3 236 2 282 2 137 1 94 1 139 4 259 1 260 1 213 1 171 7 25 2 215 2 261 1 308 2 145 1 76 1 247 1 271 2 296 1 122 2 253 1 103 1 195 1 225 2 154 1 104 1 228 1 317 1 157 1 158 1 16 8 38 1 131 1 56 1 159 2 204 2 90 8 112 2 164 2 
42 1 282 3 0 1 139 2 260 1 213 1 215 1 308 1 219 1 49 1 96 1 310 1 76 1 191 1 244 1 247 1 271 1 122 1 296 1 350 1 103 1 225 1 129 1 317 2 15 1 83 1 304 1 164 1 257 1 
282 2 271 1 122 1 0 1 139 2 213 2 225 1 306 1 215 1 129 1 228 1 308 1 83 1 176 1 49 1 164 1 191 1 257 1 
42 1 282 2 271 1 122 1 0 1 139 2 225 1 215 1 129 1 228 1 317 2 308 1 231 1 49 1 310 1 164 1 191 1 244 1 
42 1 282 4 139 2 0 2 213 2 215 1 308 1 176 1 49 2 310 1 191 2 244 1 271 1 122 1 350 1 225 1 228 1 129 2 317 2 83 1 164 1 257 1 
282 2 271 1 122 1 0 1 139 2 213 2 225 1 306 1 215 1 261 1 129 1 308 1 83 1 176 1 49 1 164 1 191 1 257 1 
42 1 282 2 271 1 122 1 0 1 139 2 225 1 215 1 261 1 129 1 317 2 308 1 231 1 49 1 310 1 164 1 191 1 244 1 
42 1 282 4 139 2 0 2 213 2 215 1 261 1 308 1 176 1 49 2 310 1 191 2 244 1 271 1 122 1 350 1 225 1 129 2 317 2 83 1 164 1 257 1 
42 1 282 4 139 2 0 2 213 2 215 1 308 1 176 1 49 2 310 1 191 2 244 1 271 1 122 1 350 1 225 1 129 2 317 2 83 1 164 1 257 1 
282 2 236 1 44 1 139 2 259 1 213 1 171 1 25 1 215 1 308 1 6 1 76 1 247 1 271 1 122 1 52 1 225 1 154 1 37 1 317 1 16 1 277 1 159 1 320 1 90 1 112 1 164 1 166 1 
282 1 236 1 44 1 139 2 259 1 170 1 171 1 25 1 215 1 289 1 308 1 76 1 148 1 247 1 271 1 122 1 225 1 317 1 16 1 277 1 159 1 320 1 134 1 110 1 90 1 112 1 164 1 166 1 
42 1 282 4 139 2 0 2 213 2 215 1 308 1 219 1 176 1 49 2 310 1 191 2 244 1 271 1 122 1 350 1 225 1 129 2 317 2 83 1 164 1 257 1 
42 1 282 4 44 1 0 2 139 2 213 2 171 1 25 1 215 1 308 1 176 1 6 1 310 1 49 2 76 1 244 1 191 2 247 1 271 1 122 1 350 1 51 1 52 1 195 1 225 1 37 1 317 2 129 2 16 1 83 1 159 1 320 1 90 1 112 1 164 1 166 1 257 1 
282 3 139 2 0 1 260 1 213 2 215 1 308 1 219 1 176 1 310 1 49 1 76 1 244 1 191 1 247 1 271 1 122 1 296 1 350 1 103 1 225 1 317 1 129 1 15 1 83 1 132 1 304 1 164 1 257 1 
42 3 282 19 43 1 139 4 66 1 68 2 213 9 240 2 326 1 215 2 217 1 344 2 176 3 347 1 49 6 310 3 244 3 270 1 271 2 122 2 350 3 101 1 317 10 302 1 83 3 230 1 336 1 164 2 183 1 257 3 
282 16 43 2 139 2 68 4 213 8 240 1 215 1 344 2 309 1 347 1 310 1 188 1 244 1 270 1 271 1 122 1 350 1 101 1 317 8 302 1 83 1 336 2 230 2 164 1 183 2 257 1 
42 1 282 23 43 3 139 4 66 1 68 4 213 11 240 1 326 1 215 2 344 4 309 1 176 2 347 1 49 3 310 2 188 1 244 2 270 1 271 2 122 2 350 2 297 1 101 1 317 12 302 1 83 2 230 3 336 1 164 2 183 2 257 2 
42 2 282 23 43 3 139 4 66 1 68 4 213 11 240 1 326 1 215 2 344 4 309 1 176 2 347 1 49 4 310 2 188 1 244 2 270 1 271 2 122 2 350 2 297 1 101 1 317 12 302 1 83 2 230 3 336 1 164 2 183 2 257 2 
42 8 282 51 43 4 305 3 139 2 66 2 68 4 213 27 240 1 215 1 263 3 291 2 344 4 309 1 176 5 347 1 48 3 49 13 310 8 188 1 244 5 270 1 271 1 122 1 350 5 101 1 317 24 318 3 302 1 83 5 230 2 336 1 355 3 164 1 167 3 183 1 257 8 
44 1 282 2 237 1 339 1 139 2 259 1 260 2 213 1 171 2 25 1 215 1 308 1 219 1 76 2 77 1 247 2 271 1 122 1 253 1 225 1 154 1 317 1 16 2 38 1 159 1 202 1 204 2 90 2 112 1 164 1 165 1 
21 1 195 1 126 1 171 2 45 1 25 1 307 1 158 1 16 2 256 1 133 1 233 1 89 1 97 1 90 2 223 1 147 2 112 1 193 1 
21 1 126 1 171 1 45 1 25 1 158 1 16 1 256 1 58 1 133 1 89 1 97 1 90 1 223 1 147 2 112 1 193 1 
44 1 236 1 137 1 94 1 284 1 171 1 25 1 16 1 159 1 256 1 345 1 233 1 90 1 112 1 
21 1 126 1 171 1 45 1 25 1 307 1 158 1 16 1 256 1 133 1 233 1 89 1 97 1 90 1 223 1 147 2 112 1 193 1 
340 1 
282 1 236 1 44 1 64 1 259 1 139 2 260 2 171 1 25 1 215 1 308 1 6 1 76 3 120 1 247 3 271 1 122 1 296 2 103 2 52 1 225 1 37 1 317 1 16 1 277 1 159 1 320 1 90 1 304 2 112 1 164 1 166 1 
207 1 12 2 14 1 84 4 266 1 73 1 337 2 29 4 355 1 33 2 119 2 311 2 243 1 269 1 10 1 
248 1 73 1 29 1 337 1 144 1 119 1 353 1 
151 1 210 1 138 1 285 1 352 1 14 1 70 1 84 1 266 1 337 1 29 2 73 1 119 1 311 1 99 1 269 1 10 1 
44 10 236 1 324 2 1 2 140 1 46 1 144 1 243 2 7 1 329 2 99 5 244 2 10 4 151 5 248 1 12 6 195 1 14 4 16 3 159 3 106 1 337 2 112 4 166 3 257 2 207 1 65 3 211 2 115 2 23 2 171 3 172 2 25 3 70 3 346 2 266 4 73 9 29 8 75 2 33 6 310 2 119 8 311 6 269 4 79 2 350 2 124 2 352 5 226 1 316 1 83 2 84 12 354 2 90 3 
207 1 43 1 64 1 115 1 260 1 288 1 344 1 309 1 266 1 346 1 73 2 29 2 33 2 119 2 76 1 243 1 311 1 294 1 269 1 246 1 10 1 247 1 296 1 102 1 12 2 103 1 14 1 84 2 230 1 337 1 110 1 304 1 
305 1 64 1 115 1 260 1 288 1 263 1 346 2 266 1 73 2 48 1 310 1 119 2 76 1 269 1 294 1 246 1 10 1 247 1 151 1 296 1 103 1 352 1 14 1 86 1 110 1 304 1 136 1 257 2 
248 1 14 1 266 1 337 1 29 1 73 1 144 1 119 1 269 1 10 1 
350 2 115 1 12 5 1 1 83 2 346 2 84 10 29 5 73 5 33 5 310 2 119 5 311 5 244 2 257 2 
151 1 29 1 337 1 352 1 99 1 70 1 
207 2 44 1 236 2 137 1 94 1 140 2 171 4 25 1 70 2 266 1 267 1 73 2 119 2 243 2 34 1 269 2 99 4 10 2 151 3 352 3 226 1 14 2 82 1 16 4 159 1 91 1 111 1 90 4 112 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
341 1 214 1 
303 1 22 1 
42 2 282 8 271 2 122 2 305 1 139 4 213 4 215 2 317 4 263 1 318 1 176 1 74 1 355 1 48 1 310 1 49 3 164 2 167 1 257 1 
42 2 282 6 305 1 213 3 317 3 353 1 263 1 318 1 355 1 48 1 49 2 310 1 167 1 257 1 
42 1 271 1 282 4 122 1 350 1 139 2 213 2 215 1 317 2 83 1 176 1 310 1 49 2 164 1 8 1 244 1 257 1 
42 1 282 7 43 1 350 1 66 1 213 3 317 4 344 2 83 1 230 1 176 1 310 1 49 2 244 1 257 1 
42 5 43 2 282 23 305 2 66 1 139 4 213 11 215 2 26 1 263 1 291 1 344 2 28 1 176 4 74 2 48 2 49 9 310 3 244 2 271 2 122 2 350 2 317 12 318 1 83 2 355 1 164 2 167 1 257 3 
282 1 344 1 317 1 
282 1 43 1 213 1 
42 2 271 1 282 6 122 1 350 1 139 2 1 1 213 3 215 1 317 3 83 1 176 1 49 3 310 1 164 1 8 1 244 1 257 1 
270 1 271 1 282 2 43 1 122 1 139 2 213 1 215 1 317 1 344 1 309 1 230 1 164 1 
42 1 282 6 305 1 213 3 317 3 263 1 176 1 48 1 310 1 49 2 257 1 
42 1 282 3 271 1 305 1 122 1 139 2 213 1 215 1 26 1 317 2 318 1 176 1 74 1 48 1 49 2 164 1 167 1 
270 1 42 3 271 1 282 10 122 1 305 2 139 2 213 5 215 1 317 5 263 1 176 2 48 2 49 5 310 2 164 1 136 1 257 2 
270 1 271 1 282 2 122 1 139 2 213 2 215 1 83 1 176 1 49 1 164 1 257 1 
42 1 270 1 271 1 282 4 122 1 350 1 139 2 213 2 215 1 317 2 83 1 176 1 310 1 49 2 164 1 244 1 257 1 
270 1 42 1 282 3 271 3 122 3 305 1 139 6 213 1 326 1 215 3 26 1 317 2 74 1 176 1 48 1 49 2 164 3 
42 7 282 34 43 3 305 3 139 10 66 1 213 16 326 1 215 5 26 1 263 2 344 4 74 2 176 5 48 3 49 12 310 5 8 1 244 3 270 1 271 5 122 5 350 3 317 18 55 1 318 1 83 3 181 1 230 1 355 1 88 1 164 5 167 1 257 5 
42 5 43 1 282 24 305 2 139 4 213 14 215 2 263 2 344 1 309 1 74 1 176 4 48 2 310 4 49 9 121 1 244 1 50 1 270 1 271 2 122 2 350 2 301 1 317 10 318 1 83 2 230 1 355 1 164 2 136 1 167 1 19 1 257 5 
42 3 282 20 43 1 305 1 139 6 66 1 213 12 215 3 263 1 344 2 309 1 74 1 176 2 48 1 49 5 310 2 121 1 8 1 244 1 50 1 270 1 271 3 122 3 350 3 301 1 317 8 318 1 83 3 230 1 355 1 164 3 167 1 257 4 19 1 
42 3 43 1 282 15 305 2 139 4 213 8 215 2 263 2 344 1 309 1 176 1 48 2 310 3 49 4 8 1 270 1 271 2 122 2 317 7 318 1 230 1 355 1 164 2 136 1 167 1 257 3 
42 4 43 1 282 15 305 2 139 4 213 8 215 2 263 2 344 1 309 1 176 3 48 2 310 3 49 7 8 1 270 1 271 2 122 2 317 7 318 1 230 1 355 1 164 2 136 1 167 1 257 3 
42 5 43 1 282 24 305 2 139 4 213 14 215 2 263 2 344 1 309 1 74 1 176 4 48 2 310 4 49 9 121 1 244 1 50 1 270 1 271 2 122 2 350 2 301 1 317 10 318 1 83 2 230 1 355 1 164 2 136 1 167 1 19 1 257 5 
270 1 271 1 282 2 43 1 122 1 139 2 213 1 215 1 317 1 344 1 309 1 230 1 164 1 
270 1 43 1 271 2 282 2 122 2 139 4 213 1 215 2 317 1 344 1 309 1 230 1 164 2 8 1 
270 1 43 1 271 2 282 2 122 2 139 4 213 1 326 1 215 2 317 1 344 1 309 1 230 1 164 2 
42 3 282 7 305 3 213 3 317 4 263 1 318 1 176 3 48 3 310 1 49 6 167 2 257 1 
270 1 43 1 271 2 282 2 122 2 139 4 213 1 326 1 215 2 317 1 344 1 309 1 230 1 164 2 
247 1 277 1 260 1 109 1 76 1 146 1 69 1 
247 1 194 1 260 1 69 1 277 1 265 1 109 1 224 1 146 1 76 1 35 1 78 1 
44 1 137 1 16 1 236 1 159 1 94 1 90 1 171 1 112 1 25 1 353 1 
247 2 44 1 236 1 296 1 103 1 260 1 171 1 37 1 25 1 16 1 277 1 159 1 56 1 320 1 76 2 90 1 112 1 166 1 
247 2 79 1 44 3 296 2 103 1 260 2 140 1 171 1 37 1 25 1 16 1 277 1 159 2 56 1 75 1 320 1 221 1 110 1 76 2 90 1 112 1 166 2 18 1 
44 3 260 2 140 1 171 1 25 1 75 1 221 1 76 2 148 1 247 2 79 1 296 2 103 1 16 1 277 1 56 1 159 2 134 1 320 1 110 2 90 1 112 1 166 2 18 1 
151 2 236 1 79 1 44 4 65 1 211 1 352 2 140 1 171 3 172 1 25 1 16 3 159 1 335 1 29 1 337 1 75 1 203 1 90 3 112 1 166 1 99 1 41 1 
151 2 236 1 79 1 44 4 65 1 211 1 124 1 352 2 140 1 171 3 172 1 25 1 16 3 159 1 29 1 337 1 75 1 90 3 112 1 166 1 99 1 41 1 
16 1 90 1 171 1 112 1 104 1 25 1 
236 2 44 3 253 1 195 1 179 1 171 6 104 1 25 2 286 1 157 1 158 1 16 7 131 1 159 2 204 1 145 1 90 7 7 1 163 1 112 3 166 1 
42 2 44 1 282 6 0 1 139 4 141 1 6 1 48 1 49 2 191 1 247 2 296 1 51 1 103 1 52 1 195 1 16 1 56 1 159 1 202 1 164 2 112 1 166 1 167 1 257 1 305 1 260 1 213 3 171 1 25 1 215 2 263 1 308 2 219 1 310 1 76 2 271 2 122 2 225 2 37 1 317 3 129 1 318 1 277 2 355 1 320 1 90 1 
236 1 44 2 65 1 211 1 23 1 324 1 171 1 172 1 70 1 266 2 73 1 29 1 144 1 119 1 269 2 99 2 10 2 151 3 248 1 124 1 352 3 226 1 14 2 16 1 337 1 354 1 232 1 90 1 
44 2 211 1 195 1 171 2 104 1 25 1 16 2 159 1 106 1 90 2 7 1 112 2 166 1 
236 1 137 1 44 1 94 1 195 1 332 1 171 4 25 1 16 4 159 1 90 4 112 1 41 1 
44 1 100 1 140 1 179 1 171 2 25 1 174 1 16 2 159 1 108 1 90 2 163 1 112 2 166 1 
16 1 236 1 21 1 126 1 90 1 171 1 147 1 112 1 25 1 193 1 
44 1 158 1 16 2 159 1 253 1 195 1 90 2 171 2 112 1 25 1 165 1 
137 1 236 1 44 3 94 1 253 1 195 1 140 1 332 1 171 4 25 2 157 1 16 5 159 2 90 5 145 1 112 2 
137 1 236 1 44 3 94 1 67 1 253 1 195 1 140 1 332 1 171 4 25 2 157 1 16 5 159 2 90 5 112 2 
236 1 44 1 260 1 171 1 25 1 76 2 148 1 247 2 296 1 103 1 16 1 277 1 56 1 159 1 134 1 320 1 110 1 90 1 112 1 166 1 
44 1 140 1 179 1 171 1 25 1 286 1 16 1 159 1 90 1 7 1 163 1 112 2 166 1 
247 1 237 1 339 1 30 1 260 1 85 1 3 1 76 1 77 1 
85 1 292 1 234 1 
277 1 30 1 85 1 3 1 155 1 
151 2 208 1 313 1 352 2 3 2 172 1 155 2 277 1 29 1 337 1 30 2 85 1 221 1 232 1 292 1 110 1 293 1 18 1 234 1 
254 1 229 3 169 3 107 1 53 1 222 1 189 1 61 1 162 1 235 1 331 1 
349 1 130 1 189 1 142 1 
53 1 189 1 
53 1 189 1 162 1 353 1 
229 1 169 1 53 1 222 1 189 1 162 1 331 1 
11 1 169 1 60 1 
169 3 300 1 252 1 53 1 254 2 229 3 222 1 189 1 61 1 162 1 190 1 331 1 
319 1 229 2 169 2 107 1 53 1 222 1 189 1 162 1 331 1 
349 1 169 1 54 1 126 1 229 1 222 1 61 1 189 1 97 1 147 1 331 1 
229 1 169 1 53 1 222 1 189 1 61 1 331 1 
229 1 169 1 53 2 222 1 61 1 162 1 331 1 
169 2 53 1 81 1 241 1 229 2 222 2 189 1 61 1 205 1 331 2 
349 1 169 3 53 1 142 1 229 3 187 1 107 2 222 1 61 1 189 2 162 1 331 1 235 1 
169 2 53 1 197 1 126 1 229 2 107 1 222 1 89 1 189 1 61 1 97 1 162 1 147 2 331 1 193 1 
349 1 169 4 283 1 53 1 142 1 229 4 319 1 107 2 222 2 61 1 189 2 162 1 331 2 
229 1 169 1 53 1 222 1 189 1 61 1 162 1 331 1 
349 1 169 4 252 1 53 2 142 1 254 1 130 1 229 4 107 2 222 1 189 3 162 2 190 1 331 1 
169 2 53 1 127 1 229 2 278 1 107 1 280 1 222 1 189 1 61 1 162 1 331 1 
169 3 252 1 53 1 254 2 229 3 95 1 222 1 189 1 61 1 162 1 190 2 331 1 
189 2 62 1 287 1 128 2 
229 1 169 1 242 1 222 1 61 1 331 1 
229 2 169 2 107 1 53 1 222 1 189 1 61 1 162 1 235 1 331 1 
24 1 
229 1 169 1 53 1 222 1 189 1 61 1 162 1 331 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
4 1 248 2 347 1 349 3 44 5 8 1 257 9 161 1 50 1 20 2 51 7 306 1 12 1 352 1 26 1 80 9 261 1 167 4 169 1 171 1 314 2 87 1 117 1 70 1 
352 1 26 1 4 1 80 9 248 2 261 1 167 4 347 1 169 1 171 1 349 3 44 5 8 1 161 1 314 2 257 9 87 1 50 1 20 2 51 7 306 1 117 1 70 1 12 1 
4 1 248 2 347 2 206 1 349 3 329 1 44 5 8 1 161 2 257 9 77 1 50 1 20 2 51 6 306 1 258 1 12 1 26 2 290 1 80 9 261 1 167 4 171 2 314 2 87 1 294 1 117 1 70 1 
4 1 248 2 347 2 206 1 349 3 329 1 44 5 8 1 161 2 257 9 77 1 50 1 20 2 51 6 306 1 258 1 12 1 26 2 290 1 80 9 261 1 167 4 171 2 314 2 87 1 294 1 117 1 70 1 
4 1 248 2 347 2 206 1 349 4 329 1 44 6 8 1 161 2 257 10 77 1 50 1 20 2 51 7 306 1 258 1 12 1 26 2 290 1 80 10 261 1 167 5 171 2 314 2 87 1 294 1 117 1 70 1 
4 1 248 1 347 2 206 1 349 2 329 1 44 4 161 2 257 7 77 1 50 1 20 2 51 4 306 1 258 1 12 1 26 2 290 1 80 7 261 1 167 3 171 2 314 2 87 1 294 1 117 1 70 1 
26 1 80 4 248 2 167 2 349 1 171 1 44 3 8 1 314 1 257 4 161 1 87 1 50 1 20 1 51 3 306 1 12 1 70 1 
26 1 80 2 301 1 347 1 206 1 171 1 44 1 314 1 257 2 87 1 77 1 88 1 50 1 20 1 201 1 12 1 
80 3 261 1 167 1 347 1 349 1 44 2 314 2 257 3 87 1 50 1 20 2 51 1 12 1 
345 1 151 1 287 1 
99 2 345 1 58 1 
215 2 127 2 138 2 98 2 140 2 324 1 185 1 180 2 
319 1 3 1 299 1 155 1 323 1 324 1 94 1 185 1 186 1 230 1 256 2 127 3 98 2 48 1 49 1 234 1 332 1 138 2 307 1 375 2 140 2 13 1 213 1 29 2 107 1 239 1 196 1 378 1 197 1 215 2 86 1 175 2 316 1 33 1 221 1 37 2 180 3 
215 1 187 1 127 1 138 1 98 1 140 1 324 1 84 1 180 1 350 1 
182 1 192 1 345 1 322 1 84 1 7 1 215 1 127 1 10 1 177 1 244 1 180 1 287 1 136 1 
138 1 182 1 192 1 345 1 140 1 322 1 84 1 7 1 215 1 127 1 98 1 244 2 180 1 287 1 136 2 
225 1 302 1 124 1 244 1 136 1 
356 1 225 1 274 1 345 1 124 1 244 2 287 1 136 2 
124 1 244 1 136 1 
225 1 138 1 140 1 277 1 324 1 84 1 215 1 187 1 127 1 98 1 244 1 180 1 136 1 350 1 
345 1 
225 1 274 1 345 1 124 1 28 1 244 2 287 1 136 2 
225 2 274 1 82 1 345 1 16 2 124 2 262 1 355 1 241 1 114 2 113 2 68 1 370 1 21 1 244 5 90 1 287 1 136 5 351 1 
151 1 185 1 
104 1 138 1 309 1 140 1 185 2 215 2 127 2 98 1 180 2 
153 1 158 1 43 1 
307 1 375 1 213 1 107 1 29 1 94 1 185 1 197 1 230 1 256 1 86 1 127 1 49 1 221 1 180 1 118 1 
153 1 138 1 307 1 375 1 140 1 213 1 214 1 107 1 29 1 94 1 230 1 197 1 86 1 215 1 256 1 127 2 49 1 221 1 165 1 180 2 
138 4 309 1 140 4 226 1 214 1 252 1 185 1 215 5 127 5 98 1 10 1 265 1 165 2 180 5 
279 1 215 2 187 1 127 2 138 2 140 2 84 1 180 2 
215 3 127 3 98 1 138 3 140 3 165 1 185 1 180 3 
215 1 187 1 127 1 138 1 140 1 84 1 180 1 
104 1 215 1 127 1 138 1 98 1 309 1 140 1 84 1 180 1 
319 1 3 1 182 1 322 1 155 1 323 1 324 1 94 1 185 1 186 1 230 1 7 1 256 1 127 4 98 2 49 1 100 1 234 1 165 1 332 1 136 1 138 3 192 1 307 1 309 1 375 1 140 3 213 1 214 1 107 1 29 1 239 1 84 1 378 1 197 1 86 1 215 3 175 1 112 1 316 1 221 1 244 1 37 2 180 4 
215 2 127 2 138 1 10 1 265 1 140 1 165 1 185 1 180 2 
192 1 138 3 182 1 309 1 345 1 140 3 322 1 214 1 84 1 7 1 215 3 127 3 98 1 100 1 165 2 244 1 180 3 15 1 136 1 
153 1 138 2 309 1 140 2 43 1 215 2 127 2 98 1 165 1 180 2 
307 1 375 1 213 1 107 1 29 1 94 1 185 1 197 1 230 1 256 1 86 1 127 1 49 1 221 1 180 1 
307 1 375 1 92 1 213 1 107 1 29 1 84 1 94 1 185 1 125 1 256 1 86 1 127 1 49 1 202 1 221 1 180 1 
153 2 38 1 298 1 3 1 344 1 323 1 155 2 43 2 186 1 158 2 130 1 76 1 372 1 56 1 13 2 239 1 378 1 357 1 219 1 379 1 175 4 316 1 35 1 37 2 
279 1 215 1 127 1 182 1 138 1 140 1 84 1 180 1 
243 1 194 1 
243 1 194 1 
1 1 141 1 
1 1 141 1 
1 1 243 1 141 1 194 1 
275 1 243 1 194 1 
275 1 243 1 194 1 
275 1 243 1 194 1 
208 1 243 1 194 1 
243 1 194 1 263 1 
340 1 1 1 141 1 243 2 194 2 115 1 
208 1 243 1 194 1 
208 1 243 1 194 1 
228 1 5 1 17 1 229 1 185 1 127 2 162 1 331 1 163 1 136 1 138 2 260 1 140 2 59 1 194 1 263 1 215 2 31 1 381 1 243 1 176 1 360 1 244 1 180 2 
57 1 260 2 308 1 345 1 326 1 194 2 5 3 377 1 264 1 229 2 340 1 162 2 31 1 242 1 176 2 243 2 244 2 270 2 136 2 
161 1 26 1 171 1 
26 1 88 1 171 1 
161 2 105 1 26 3 88 1 30 1 313 1 
161 1 26 2 133 1 88 1 30 1 313 1 
161 1 26 2 88 1 30 1 313 2 
225 4 273 1 298 1 274 1 2 2 363 1 345 2 348 1 16 1 124 1 17 1 6 1 75 2 130 1 99 3 76 1 163 1 211 1 136 5 287 1 288 2 82 3 58 1 59 1 168 1 355 2 357 1 113 1 114 1 380 1 244 5 90 1 
362 5 225 7 273 2 298 3 274 1 363 2 345 5 124 6 16 2 253 1 75 6 232 1 188 1 130 3 99 9 76 3 302 5 163 4 370 1 211 1 136 9 55 1 287 1 288 6 82 8 58 3 240 1 355 6 357 3 114 2 113 2 380 3 116 1 244 9 90 1 
225 2 273 1 298 1 363 1 2 1 345 3 348 1 16 1 75 2 130 1 76 1 99 4 163 1 370 1 287 1 136 3 288 2 82 3 58 2 168 1 355 2 357 1 113 1 114 1 380 1 244 3 
225 3 273 1 298 2 363 1 2 2 345 4 348 1 16 1 253 1 75 4 232 1 130 2 99 7 76 2 163 2 370 1 287 1 136 4 288 4 82 5 58 3 168 1 240 1 355 4 357 2 113 1 114 1 380 2 244 4 
49 1 151 1 85 1 
147 1 49 1 
204 1 
49 1 94 1 221 1 
49 1 361 1 
49 1 221 1 
315 1 49 3 94 1 221 1 342 1 85 2 
224 1 289 1 91 1 13 4 155 3 108 1 337 1 130 1 76 1 175 7 210 1 134 1 32 1 372 3 284 1 35 2 382 2 
224 1 289 1 91 1 13 4 155 3 108 1 337 1 130 1 76 1 175 7 210 1 134 1 32 1 372 3 284 1 35 2 382 2 
224 1 289 1 91 1 13 4 155 3 108 1 337 1 129 1 130 1 76 1 175 7 210 1 134 1 32 1 372 3 284 1 35 2 382 2 
224 2 298 3 91 1 323 1 155 15 71 1 73 1 18 1 186 1 46 1 130 4 76 4 132 1 134 1 210 2 372 10 284 1 289 2 25 1 291 3 13 16 108 2 239 1 337 5 378 1 292 1 357 3 175 31 32 1 380 3 269 4 35 5 37 2 382 3 
224 1 289 1 91 1 13 5 155 4 323 2 108 1 239 2 337 1 378 2 186 2 367 1 159 1 130 1 76 1 132 1 175 9 210 1 32 1 372 4 284 1 35 3 382 2 37 4 
347 1 278 1 44 1 256 1 126 1 161 1 257 2 189 1 50 1 19 1 20 1 51 1 53 1 12 1 105 1 26 2 80 2 307 1 375 1 213 1 29 1 171 1 314 1 87 1 111 1 88 1 150 1 178 1 296 1 203 1 
347 1 325 1 278 1 44 1 256 1 126 1 161 1 257 3 189 1 50 1 20 1 51 2 53 1 105 1 26 2 80 3 307 1 375 1 310 1 213 1 29 1 171 1 314 1 87 1 199 1 88 1 150 1 178 1 296 1 203 1 
347 1 325 1 278 1 44 1 256 1 126 1 257 2 161 1 50 1 51 2 53 1 105 1 26 2 80 2 307 1 375 1 213 1 29 1 171 1 87 1 199 1 88 1 150 1 178 1 203 1 
120 1 80 1 375 1 237 1 310 1 347 2 107 1 29 1 376 1 256 1 314 1 257 1 266 1 150 2 20 1 178 2 53 2 
347 1 278 1 256 1 126 1 161 1 257 1 189 1 19 1 20 1 53 1 12 1 105 1 26 2 80 1 307 1 375 1 213 1 29 1 171 1 314 1 199 1 88 1 150 1 178 1 296 1 203 1 
103 1 
345 1 93 5 42 1 205 1 7 1 10 1 305 2 54 1 259 1 353 1 58 2 355 1 215 1 218 1 358 2 67 1 114 1 113 1 359 2 177 1 180 1 274 2 121 1 182 1 365 3 322 1 124 5 16 1 183 1 127 1 369 2 135 1 23 3 24 3 136 4 287 1 192 1 82 1 84 1 339 1 244 4 90 1 
274 2 182 1 121 1 345 1 365 3 322 1 93 5 16 1 124 5 42 1 183 1 205 1 7 1 127 1 10 1 369 2 305 2 135 1 23 3 54 1 24 3 287 1 136 4 259 1 353 1 192 1 82 1 58 2 84 1 339 1 355 1 215 1 358 2 218 1 113 1 114 1 67 1 359 2 177 1 244 4 90 1 180 1 
274 2 182 1 345 1 365 2 346 1 322 1 93 4 124 4 16 1 42 1 183 1 205 1 7 1 127 1 99 2 10 1 369 2 305 2 101 2 23 2 24 2 287 1 136 4 212 1 259 1 353 1 192 1 82 1 84 1 355 1 215 1 67 1 113 1 114 1 177 1 244 4 90 1 180 1 317 2 
345 2 346 1 93 4 42 1 205 1 7 1 256 2 99 2 49 1 10 1 305 2 259 1 353 1 307 1 58 2 213 1 107 2 355 2 215 1 358 2 218 1 114 1 113 1 67 1 359 2 267 1 177 1 221 1 180 1 119 1 273 1 274 3 182 1 364 1 365 2 322 1 124 6 16 1 183 1 231 1 127 1 369 2 23 2 24 2 287 1 136 5 192 1 82 2 375 2 142 1 29 2 84 1 293 1 244 5 90 1 
274 1 182 1 365 1 322 1 93 2 124 2 42 1 183 1 7 1 127 1 10 1 136 3 259 1 353 1 192 1 28 1 84 1 215 1 67 1 177 1 244 3 180 1 
274 1 182 1 345 1 322 1 93 3 124 1 42 1 183 1 7 1 127 1 10 1 23 1 136 3 287 1 259 1 353 1 192 1 28 1 84 1 215 1 67 1 177 1 244 3 180 1 
274 1 182 1 365 1 345 1 322 1 93 3 124 2 42 1 183 1 7 1 127 1 10 1 23 1 24 1 136 3 287 1 259 1 353 1 192 1 28 1 84 1 215 1 67 1 177 1 244 3 180 1 
345 5 93 6 42 1 205 1 7 1 10 1 305 2 54 1 259 1 353 1 58 2 355 1 215 1 218 1 358 2 67 1 114 1 113 1 359 2 177 1 180 1 274 3 182 1 121 1 365 4 276 1 322 1 124 7 16 1 183 1 127 1 369 2 135 1 23 4 24 4 136 5 287 5 192 1 82 1 28 1 84 1 339 1 244 5 90 1 
345 2 346 1 93 4 42 1 205 1 7 1 10 1 99 2 305 2 259 1 353 1 58 2 355 1 215 1 218 1 358 2 114 1 113 1 67 1 359 2 177 1 180 1 274 2 182 1 365 2 322 1 16 1 124 4 183 1 127 1 369 2 23 2 24 2 136 4 287 1 192 1 82 1 84 1 244 4 90 1 
274 2 182 1 345 1 365 2 322 1 93 4 124 4 16 1 42 1 183 1 205 1 7 1 127 1 10 1 369 2 305 2 135 1 23 2 54 1 24 2 287 1 136 4 259 1 353 1 192 1 82 1 58 2 84 1 339 1 355 1 215 1 358 2 218 1 67 1 114 1 113 1 359 2 177 1 244 4 180 1 90 1 
274 2 182 1 345 1 365 2 322 1 93 4 124 4 16 1 42 1 183 1 205 1 7 1 127 1 10 1 369 2 305 2 135 1 23 2 54 1 24 2 287 1 136 4 259 1 353 1 192 1 82 1 58 2 84 1 339 1 355 1 215 1 358 2 218 1 67 1 114 1 113 1 359 2 177 1 244 4 180 1 90 1 
274 2 300 1 182 1 345 1 365 2 322 1 93 4 124 4 16 1 42 1 183 1 205 1 7 1 127 1 99 2 10 1 369 2 305 2 135 1 101 2 23 2 24 2 287 1 212 1 136 4 235 1 259 1 353 1 192 1 82 1 84 1 355 1 215 1 67 1 114 1 113 1 177 1 244 4 180 1 90 1 317 2 
153 1 224 1 3 1 91 1 13 3 155 3 323 1 239 1 108 1 43 1 185 2 378 1 186 1 158 1 130 1 76 1 379 1 175 6 151 1 32 1 316 1 372 2 284 1 35 2 382 1 37 2 
319 1 153 11 246 1 3 2 298 1 321 1 155 6 123 1 323 2 43 4 185 1 18 1 45 1 186 2 73 1 158 11 130 1 76 2 372 2 291 3 13 8 239 2 196 1 337 1 378 2 357 2 175 14 380 2 316 1 35 1 269 3 37 4 223 1 
319 1 3 1 323 1 155 1 94 1 43 1 185 1 186 1 230 1 256 1 127 2 49 1 164 1 165 1 138 1 307 1 375 1 140 1 213 1 13 1 29 1 107 1 214 1 336 1 239 1 196 1 378 1 197 1 86 1 215 1 64 1 175 2 316 1 221 1 180 2 37 2 118 1 223 1 
153 7 3 3 298 2 91 1 155 10 94 2 43 7 158 7 256 3 47 1 49 2 304 1 165 1 307 2 60 1 213 2 13 10 107 1 214 1 108 1 215 1 357 2 175 20 316 3 221 2 179 2 180 3 223 1 319 1 224 1 366 2 323 3 185 2 186 3 230 2 127 3 130 3 76 3 372 8 284 1 332 2 138 1 375 3 140 1 29 3 239 3 196 1 337 4 378 3 197 2 86 2 199 1 200 2 32 1 380 2 35 4 382 1 37 6 152 2 
319 1 119 1 3 2 227 1 323 2 155 1 251 1 186 2 231 1 256 8 127 1 49 3 165 1 333 1 138 1 307 2 354 1 375 8 140 1 213 2 13 1 29 7 107 2 239 2 196 1 378 2 174 1 215 1 198 1 217 1 199 1 111 1 379 1 175 2 316 2 33 2 221 2 180 1 37 4 
153 1 3 1 298 1 323 1 155 2 43 1 186 1 158 1 127 1 98 1 130 1 76 1 372 1 138 1 309 1 140 1 13 1 312 1 239 1 378 1 215 1 357 1 175 3 380 1 316 1 35 1 37 2 180 1 223 1 
153 1 3 1 344 1 13 2 323 1 239 1 337 1 43 1 378 1 186 1 158 1 357 1 379 1 76 1 175 2 316 1 372 1 37 2 
153 1 38 1 3 1 298 1 323 1 155 2 239 1 43 1 378 1 186 1 158 1 130 1 379 1 175 2 316 1 372 1 35 1 37 2 
153 2 298 1 3 1 13 2 155 2 323 1 239 1 337 1 43 2 378 1 186 1 158 2 357 1 130 1 379 1 76 1 175 4 380 1 316 1 372 2 35 1 37 2 
153 1 3 1 344 1 227 1 13 2 323 1 239 1 337 1 43 1 378 1 186 1 158 1 357 1 76 1 175 2 316 1 372 1 37 2 
153 1 38 1 3 1 298 1 227 1 323 1 155 2 239 1 43 1 378 1 186 1 158 1 130 1 175 2 316 1 372 1 35 1 37 2 
153 2 298 1 3 1 227 1 13 2 155 2 323 1 239 1 337 1 43 2 378 1 186 1 158 2 357 1 130 1 76 1 175 4 380 1 316 1 372 2 35 1 37 2 
153 2 298 1 3 1 13 2 155 2 323 1 239 1 337 1 43 2 378 1 186 1 158 2 357 1 130 1 76 1 175 4 380 1 316 1 372 2 35 1 37 2 
319 1 3 1 323 1 155 1 94 1 185 1 186 1 230 1 256 1 127 1 49 1 332 1 307 1 375 1 13 1 213 1 29 1 107 1 239 1 196 1 378 1 197 1 86 1 175 2 316 1 221 1 180 1 37 2 
319 1 3 1 92 1 323 1 155 1 94 1 185 1 125 1 186 1 255 1 256 1 127 1 49 1 307 1 375 1 213 1 29 1 107 1 84 1 239 1 378 1 86 1 175 1 316 1 202 1 221 1 180 1 37 2 
153 2 3 1 298 1 323 1 155 2 43 2 186 1 158 2 130 1 76 1 372 2 13 2 239 1 337 1 378 1 357 1 175 4 380 1 316 1 35 1 37 2 223 1 
153 2 298 1 3 1 155 2 323 1 94 1 43 2 186 1 158 2 230 1 256 1 127 1 130 1 76 1 49 1 372 2 332 1 307 1 375 1 13 2 213 1 29 1 239 1 337 1 378 1 197 1 86 1 357 1 200 1 111 1 175 4 380 1 316 1 35 1 221 1 180 1 37 2 
153 1 298 1 3 1 122 1 155 1 323 1 43 1 186 1 158 1 127 1 130 1 98 1 76 1 372 1 138 1 309 1 140 1 13 2 239 1 337 1 378 1 215 1 357 1 175 3 380 1 316 1 37 2 180 1 223 1 
224 1 247 4 298 4 40 1 91 1 323 3 155 21 157 1 327 1 254 1 18 3 186 3 73 1 159 1 130 5 76 5 280 1 132 1 283 1 372 8 284 1 102 2 11 1 193 1 335 1 106 1 291 3 13 20 108 1 239 3 337 4 144 1 378 3 357 4 175 41 32 1 380 4 220 1 35 4 269 4 382 1 36 1 37 6 
224 1 247 4 298 3 40 1 91 1 323 4 155 18 157 1 327 1 254 1 18 3 186 4 73 1 159 1 130 4 76 5 280 1 132 2 283 1 372 7 284 1 102 2 11 1 193 1 335 1 106 1 291 3 13 20 108 1 239 4 337 3 144 1 378 4 357 4 175 38 32 1 380 4 220 1 35 4 269 4 382 1 36 1 37 8 
224 1 247 4 298 7 40 1 91 1 321 2 323 2 155 25 157 1 327 1 18 2 186 2 73 2 159 1 130 8 76 8 132 1 280 1 283 1 372 14 284 1 102 1 11 1 193 1 335 1 106 1 291 4 13 27 108 1 239 2 337 7 144 1 378 2 357 7 175 52 32 1 380 7 35 7 269 4 382 1 36 1 37 4 
247 2 298 3 323 2 155 10 157 1 327 2 254 1 18 1 186 2 73 1 159 1 130 3 76 3 283 1 372 6 52 1 102 1 193 1 291 1 13 9 239 2 337 3 144 1 378 2 357 3 175 19 380 3 35 3 269 2 37 4 
247 4 298 2 40 1 155 12 323 3 157 1 327 1 186 3 18 2 159 1 130 2 76 3 280 1 132 2 283 1 372 4 102 2 11 1 193 1 335 1 106 1 291 2 13 14 239 3 337 2 144 2 378 3 357 3 175 26 380 3 35 2 269 2 37 6 36 1 
340 1 260 1 162 1 14 1 243 1 176 1 326 1 194 1 377 1 229 1 
331 1 263 1 
39 1 260 1 162 1 281 1 243 1 176 1 194 1 229 1 109 1 
275 1 268 1 
208 1 78 1 115 1 
57 1 260 1 308 1 345 1 326 1 194 1 5 2 377 1 264 1 229 1 340 1 162 1 31 1 176 1 243 1 244 1 270 1 136 1 
57 1 260 1 308 1 345 1 326 1 194 1 5 2 377 1 264 1 229 1 340 1 162 1 31 1 176 1 243 1 244 1 270 1 136 1 
57 1 260 1 308 1 345 1 326 1 194 1 5 2 377 1 264 1 229 1 340 1 162 1 31 1 176 1 243 1 244 1 270 1 136 1 
275 1 268 1 115 1 
275 1 268 1 115 1 
208 1 78 1 
208 1 78 1 115 1 
228 1 381 1 
225 1 228 1 5 1 17 1 328 1 229 1 185 1 127 2 162 1 331 1 163 1 136 1 260 1 138 2 140 2 59 1 194 1 264 1 263 1 215 2 381 1 243 1 176 1 360 1 270 1 244 1 180 2 
319 1 3 1 323 1 155 1 186 1 256 2 127 2 95 1 49 1 131 1 307 1 354 1 375 2 213 1 13 1 29 2 239 1 338 1 196 1 378 1 173 1 215 2 217 1 148 1 175 2 316 1 33 2 221 1 180 2 37 2 223 1 
105 1 26 2 81 1 307 1 375 2 213 1 29 2 278 1 171 1 256 2 161 1 199 1 111 1 88 1 178 1 296 1 191 1 203 1 373 1 
105 1 26 2 343 1 307 1 375 1 213 1 29 1 278 1 171 1 256 1 161 1 199 1 88 1 178 1 296 1 191 1 203 1 
256 1 320 1 375 1 266 1 178 1 29 1 107 1 373 1 
105 1 26 2 81 1 307 1 375 1 213 1 29 1 278 1 171 1 256 1 161 1 199 1 88 1 178 1 296 1 191 1 203 1 373 1 
22 1 
319 1 3 1 155 1 323 1 324 1 94 1 185 1 186 1 230 1 256 1 127 3 98 2 49 1 234 1 332 1 138 2 307 1 375 1 140 2 213 1 29 1 107 1 239 1 378 1 197 1 215 2 86 1 175 1 316 1 221 1 37 2 180 3 
288 2 273 1 82 1 345 4 58 2 16 1 142 1 355 2 75 2 99 4 114 1 113 1 382 1 90 1 287 2 
82 1 345 1 68 1 151 1 21 1 355 1 287 1 
274 1 345 2 16 1 124 1 99 1 136 1 287 1 82 1 58 1 355 1 358 1 218 1 113 1 114 1 359 1 244 1 90 1 
298 2 41 2 345 8 94 3 256 3 96 1 97 2 49 10 209 1 99 12 307 4 58 6 213 3 107 1 355 8 63 2 357 2 111 1 66 1 114 4 113 4 68 1 221 3 361 2 273 2 274 3 16 4 124 5 72 2 75 6 130 2 76 2 21 1 190 1 287 2 136 5 137 2 288 6 192 2 82 9 375 3 139 1 142 1 29 3 85 2 147 3 341 2 149 2 380 2 89 2 342 1 244 5 90 4 152 2 
297 1 273 1 274 1 298 2 40 1 345 5 124 1 16 2 18 1 75 5 97 2 130 2 99 6 76 2 280 1 136 1 11 1 287 2 288 5 82 8 106 1 58 3 291 1 27 1 142 1 355 5 63 1 357 2 113 2 114 2 380 2 269 1 244 1 36 1 90 2 
224 1 16 1 277 1 324 1 187 1 127 1 97 2 130 1 98 1 76 2 284 1 136 1 350 1 138 1 82 2 140 1 84 1 108 1 339 1 355 2 63 1 215 1 65 1 113 1 114 1 244 1 180 1 90 1 
82 1 345 1 16 1 355 1 114 1 113 1 68 1 21 1 90 1 287 1 
288 5 298 2 82 5 345 5 58 5 355 5 63 1 75 5 357 2 97 2 130 2 76 2 99 10 380 2 152 1 
274 1 345 1 124 1 244 1 287 1 136 1 
273 2 119 1 274 2 364 1 16 2 124 4 231 1 256 4 128 1 96 1 49 1 282 1 370 1 136 3 307 1 82 2 375 4 213 1 29 4 107 2 142 2 355 2 66 2 113 2 114 2 267 1 221 1 244 3 90 1 
181 1 260 1 162 1 
181 1 260 1 162 1 
181 1 260 1 162 1 
260 1 162 1 286 1 
368 1 260 1 162 1 228 1 326 1 
260 1 162 1 286 1 
260 1 162 1 286 1 
260 1 162 1 
243 1 194 1 
224 1 91 1 155 4 323 1 18 1 186 1 159 1 130 1 76 1 372 2 284 1 291 1 13 4 239 1 108 1 378 1 175 8 32 1 269 1 35 2 382 1 36 1 37 2 
224 1 91 1 249 1 155 5 323 2 18 1 186 2 73 1 159 1 130 1 76 2 372 3 284 1 291 1 13 6 108 1 239 2 337 1 378 2 357 1 175 11 32 1 380 1 35 2 269 2 382 1 36 1 37 4 
224 1 298 2 40 1 91 1 249 1 155 10 323 3 18 1 186 3 159 1 130 3 76 3 280 1 132 1 372 4 284 1 11 1 106 1 291 1 13 9 108 1 239 3 337 1 378 3 357 2 175 19 32 1 380 2 269 1 35 3 382 1 36 1 37 6 
224 1 298 1 40 1 91 1 249 1 155 7 323 3 18 1 186 3 159 1 130 2 76 3 132 1 280 1 372 5 284 1 11 1 106 1 291 1 13 10 108 1 239 3 337 2 378 3 357 2 175 17 32 1 380 2 269 1 35 3 382 1 36 1 37 6 
224 1 91 1 155 4 323 1 18 1 186 1 159 1 130 1 76 1 372 2 284 1 291 1 13 4 239 1 108 1 378 1 175 8 32 1 269 1 35 2 382 1 36 1 37 2 
298 2 40 1 155 6 323 1 18 1 186 1 159 1 130 2 76 2 280 1 372 2 11 1 106 1 291 1 13 6 239 1 337 1 378 1 357 2 175 12 380 2 269 1 35 1 36 1 37 2 
224 1 298 1 40 1 91 1 249 1 155 8 323 4 18 1 186 4 159 1 130 2 76 3 280 1 132 2 372 5 284 1 11 1 106 1 291 1 13 10 108 1 239 4 337 2 378 4 357 2 175 18 32 1 380 2 269 1 35 3 382 1 36 1 37 8 
298 2 40 1 155 7 323 4 18 1 186 4 254 1 159 1 130 2 76 3 280 1 132 2 372 6 11 1 106 1 291 1 13 9 239 4 337 3 378 4 357 3 175 16 380 3 269 1 35 3 36 1 37 8 
224 3 91 2 13 3 155 4 108 3 337 3 130 1 76 1 175 7 32 1 372 6 35 3 284 1 
224 1 298 1 40 1 91 1 155 8 323 4 18 1 186 4 254 1 159 1 130 2 76 3 280 1 132 2 372 4 284 1 11 1 106 1 291 1 13 10 108 1 239 4 337 1 378 4 357 2 175 18 32 1 380 2 269 1 35 3 382 1 36 1 37 8 
224 1 91 1 13 4 155 4 323 2 239 2 108 1 337 1 378 2 186 2 130 1 76 1 175 8 132 1 32 1 372 3 284 1 35 2 382 1 37 4 
224 1 130 1 76 1 91 1 175 6 13 3 32 1 151 1 155 3 372 2 108 1 284 1 35 2 382 1 
298 1 249 1 13 2 155 2 323 1 239 1 337 1 378 1 186 1 357 1 130 1 76 1 175 4 380 1 372 2 35 1 37 2 
298 1 291 1 13 3 155 4 337 1 18 1 73 1 357 1 130 1 76 1 175 7 380 1 372 2 35 1 269 2 
224 2 298 2 91 1 321 1 155 12 123 1 323 2 73 1 186 2 130 3 76 3 132 2 372 9 284 1 291 2 13 11 108 2 239 2 337 4 378 2 145 1 357 2 175 23 32 1 380 2 269 2 35 5 382 1 37 4 
175 1 155 1 269 1 
175 1 291 1 13 1 
298 1 249 1 13 3 323 1 155 3 239 1 337 1 378 1 186 1 357 1 130 1 76 1 175 6 380 1 372 3 35 2 37 2 152 1 
298 2 40 1 155 6 323 1 18 1 186 1 159 1 130 2 76 2 280 1 372 2 11 1 106 1 291 1 13 6 239 1 337 1 378 1 357 2 175 12 380 2 269 1 35 1 36 1 37 2 
224 1 13 3 155 3 108 1 337 1 130 1 76 1 175 6 372 2 284 1 35 1 
224 1 91 1 13 1 155 2 323 1 108 1 239 1 337 1 145 1 378 1 186 1 175 3 132 1 32 1 372 2 35 1 37 2 
224 2 13 5 323 1 155 5 239 1 108 2 337 2 378 1 186 1 159 1 130 2 76 2 65 1 175 10 372 5 35 3 284 1 37 2 
13 2 323 1 239 1 337 1 378 1 186 1 159 1 357 1 76 1 175 2 372 1 37 2 
298 1 13 2 155 2 323 1 239 1 337 1 378 1 186 1 159 1 357 1 130 1 76 1 175 4 380 1 372 2 35 1 37 2 
224 1 13 1 155 2 323 3 239 3 108 1 337 1 145 1 378 3 254 1 186 3 159 1 132 1 175 3 372 2 35 1 37 6 
224 3 298 3 91 1 249 1 155 18 323 5 71 1 18 1 254 1 186 5 73 1 159 1 130 5 76 5 132 2 372 12 284 2 25 1 291 3 13 16 108 3 239 5 337 5 145 1 378 5 292 1 357 3 175 34 32 1 380 3 269 4 35 7 382 1 37 10 
146 1 215 1 127 1 10 1 265 1 185 1 180 1 
334 1 195 1 238 1 143 1 185 1 146 1 215 1 127 1 265 1 10 1 371 1 180 1 
231 1 256 1 119 1 307 1 49 1 375 1 213 1 151 1 29 1 107 1 221 1 
138 1 307 1 375 1 140 1 213 1 107 1 29 1 94 1 185 1 230 1 86 1 215 1 256 1 127 2 49 1 221 1 165 1 180 2 
137 1 182 1 138 2 307 1 375 1 140 1 213 1 29 1 84 1 94 2 185 1 7 1 230 1 86 1 215 2 256 1 127 2 49 3 66 1 221 2 165 1 180 2 361 1 
182 1 94 2 185 1 125 1 7 1 256 1 127 2 49 3 165 1 137 1 138 2 307 1 375 1 140 1 213 1 29 1 84 2 215 2 86 1 66 1 202 1 221 2 180 2 361 1 
345 1 124 1 94 1 256 3 49 4 303 1 136 2 287 1 137 1 236 1 192 1 307 1 375 3 213 1 29 3 107 1 85 1 147 1 66 1 221 1 244 2 272 1 361 1 
137 1 192 1 307 1 345 1 375 3 213 1 124 1 107 1 29 3 94 1 85 1 256 3 147 1 341 1 49 4 66 1 221 1 244 2 272 1 287 1 361 1 136 2 
256 1 307 1 375 1 213 1 29 1 251 1 
333 1 307 3 354 1 375 7 213 2 250 1 107 2 29 6 94 1 251 1 74 1 174 1 256 7 216 1 198 1 199 1 111 1 49 3 33 1 221 2 342 1 
153 1 224 1 3 2 91 1 366 1 155 3 323 2 94 1 43 1 185 2 186 2 158 1 230 1 256 1 127 2 130 1 76 1 49 1 372 2 284 1 165 1 332 1 138 1 307 1 375 1 140 1 13 3 213 1 29 1 108 1 239 2 378 2 197 1 86 1 215 1 148 1 111 1 200 1 175 6 32 1 316 2 35 2 221 1 382 1 180 2 37 4 223 1 
225 1 274 1 345 1 41 1 16 2 124 2 72 1 256 1 96 1 49 2 21 1 287 1 136 3 192 1 82 1 375 1 29 1 107 1 355 1 85 1 147 1 341 1 113 2 114 2 68 1 89 1 244 3 90 2 
307 2 375 2 139 1 213 1 29 2 94 1 251 1 85 1 256 2 111 1 49 2 221 1 342 1 
119 1 307 1 375 4 213 1 107 1 29 4 231 1 256 4 111 1 49 1 233 1 221 1 272 1 
307 2 375 2 60 1 213 1 250 1 29 2 94 1 74 1 256 2 160 1 49 1 66 1 34 1 221 1 
256 1 26 1 307 1 375 1 88 1 213 1 278 1 29 1 107 1 171 1 
307 1 375 2 354 1 213 1 29 2 256 2 199 1 111 1 131 1 49 1 221 1 
333 1 119 1 307 2 375 5 354 1 213 2 107 1 29 4 231 1 256 5 198 1 111 1 49 3 66 1 233 1 221 2 
333 1 119 1 307 2 375 5 354 1 213 2 107 1 29 4 170 1 231 1 256 5 111 1 49 3 66 1 233 1 221 2 
138 1 307 1 375 1 140 1 213 1 107 1 29 1 84 1 94 1 185 1 125 1 86 1 215 1 256 1 127 2 49 1 202 1 221 1 165 1 180 2 
307 2 375 1 213 1 250 1 29 1 94 1 74 1 256 1 216 1 49 1 66 1 221 1 342 1 
374 1 83 1 156 1 185 1 172 1 
225 1 374 2 192 1 182 1 345 1 322 1 83 1 156 2 84 1 185 1 172 2 7 1 110 1 69 1 100 1 244 2 271 1 287 1 136 2 
374 1 83 1 338 1 172 1 173 1 215 1 127 1 95 1 180 1 
110 1 83 1 271 1 
257 3 314 1 4 1 87 1 80 3 50 1 20 1 51 1 206 1 44 1 12 1 
311 1 167 1 349 1 44 1 
87 1 44 1 
87 1 50 1 151 1 44 1 
257 1 314 1 87 1 80 1 50 1 20 1 44 1 
257 1 347 1 150 1 
80 3 206 2 44 1 330 1 314 1 257 3 87 1 50 1 20 1 285 1 222 1 12 1 
257 2 314 1 87 1 80 2 248 1 50 1 20 1 51 1 44 1 
161 1 257 1 314 1 26 1 80 1 167 1 20 1 171 1 306 1 44 1 12 1 
257 1 314 1 87 1 80 1 20 1 44 1 12 1 
257 1 314 1 87 2 80 1 50 1 20 1 12 1 
245 1 80 2 61 1 184 1 44 1 314 2 257 2 87 1 20 2 12 1 
80 3 4 1 167 1 349 1 44 2 314 1 257 3 87 1 50 1 20 1 51 2 117 1 12 1 
105 1 26 2 80 2 62 1 171 1 44 1 314 1 257 2 161 1 87 1 88 1 50 1 20 1 51 1 12 1 
80 4 248 1 167 1 349 1 44 2 8 1 314 2 257 4 87 1 50 1 20 2 51 2 12 1 
257 1 314 1 87 1 80 1 50 1 20 1 44 1 12 1 
80 4 311 1 167 1 206 1 349 1 44 3 257 4 314 1 87 2 50 2 20 1 51 2 285 1 222 1 
80 2 169 1 44 1 207 1 314 1 257 2 87 1 50 1 20 1 51 1 12 1 318 1 
80 3 206 2 44 1 314 1 257 3 87 1 50 1 20 1 285 1 166 1 222 2 12 1 
0 2 79 1 295 1 44 2 
257 1 314 1 9 1 80 1 20 1 12 1 
257 2 314 1 87 1 4 1 80 2 50 1 20 1 51 1 44 1 12 1 
154 1 
257 1 314 1 87 1 80 1 50 1 20 1 44 1 12 1 

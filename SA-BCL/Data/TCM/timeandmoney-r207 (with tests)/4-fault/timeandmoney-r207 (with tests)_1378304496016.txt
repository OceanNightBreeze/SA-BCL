#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 209 41 119 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 209 41 119 5 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 209 41 119 (256,286) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 209 41 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 209 41 119 (256,286) (256,286) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (69,155,206,325) (69,155,206,325) (53,94,311) (53,94,311) (53,94,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (69,155,206,325) (69,155,206,325) (53,94,311) (53,94,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (69,155,206,325) (69,155,206,325) (53,94,311) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (69,155,206,325) (69,155,206,325) (53,94,311) (53,94,311) (53,94,311) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 293 201 101 312 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 209 19 332 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 209 41 119 (256,286) (256,286) 29 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 209 41 119 5 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 209 24 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 209 24 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 209 24 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 209 24 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 209 24 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 47 1 6 9 259 2 206 2 295 3 208 1 131 1 96 2 266 1 268 4 69 2 222 5 225 1 27 1 316 1 150 1 148 2 33 1 155 6 325 9 242 1 281 2 113 1 327 2 84 1 115 1 290 1 
2 1 47 1 6 9 259 2 206 2 295 3 208 1 131 1 96 2 266 1 268 4 69 2 222 5 225 1 27 1 316 1 150 1 148 2 33 1 155 6 325 9 242 1 281 2 113 1 327 2 84 1 115 1 290 1 
2 1 47 1 6 10 259 2 206 2 295 4 208 1 131 1 96 2 266 1 268 5 69 2 222 6 225 1 27 1 316 1 150 1 148 2 33 1 155 7 325 10 242 1 281 2 113 1 327 2 84 1 115 1 290 1 
2 1 47 1 6 7 259 2 206 2 295 2 208 1 131 1 96 2 266 1 268 3 69 2 222 4 225 1 27 1 316 1 150 1 148 2 33 1 155 4 325 7 242 1 281 2 113 1 327 1 84 1 115 1 
2 1 27 1 259 1 6 4 295 1 206 1 208 1 148 1 131 1 155 3 325 4 281 1 327 2 268 2 115 1 69 1 290 1 222 3 
73 1 27 1 47 1 6 2 259 1 206 1 32 1 208 1 148 1 261 1 325 2 96 1 266 1 115 1 69 1 222 1 
27 1 6 3 206 2 295 1 208 1 155 1 325 3 96 1 84 1 268 1 115 1 69 2 222 2 
2 1 6 9 259 1 295 3 206 2 208 1 131 1 96 1 268 4 69 2 222 5 27 1 316 1 148 1 155 7 323 1 325 9 242 1 281 1 284 1 327 2 84 1 115 1 290 1 
2 1 6 9 259 1 295 3 206 2 208 1 131 1 96 1 268 4 69 2 222 5 27 1 316 1 148 1 155 7 323 1 325 9 242 1 281 1 284 1 327 2 84 1 115 1 290 1 
173 1 67 1 238 1 
293 2 67 1 213 1 
41 1 209 1 119 1 
5 1 41 1 209 1 119 1 
286 1 41 1 209 1 119 1 
143 1 50 1 173 1 237 1 195 1 156 1 157 1 326 1 112 1 180 1 267 1 42 1 67 1 87 1 
41 1 209 1 
226 1 158 1 136 1 237 1 87 1 
226 1 158 1 173 1 237 2 67 1 20 1 45 1 87 2 
158 1 237 1 87 1 
226 1 256 1 286 1 41 1 209 1 237 1 119 1 87 1 
67 1 
226 1 158 1 173 1 319 1 237 2 67 1 45 1 87 2 
165 1 226 2 25 2 205 1 173 1 237 5 240 2 297 1 158 2 80 1 199 1 82 1 61 1 116 1 67 1 85 2 45 1 87 5 253 1 
197 1 202 1 
197 1 202 1 
10 1 246 1 
10 1 246 1 
10 1 246 1 
197 1 307 1 202 1 
56 1 197 1 202 1 
10 1 246 1 197 2 288 1 263 1 202 2 
197 1 307 1 202 1 
197 1 307 1 202 1 
189 1 197 1 202 1 
189 1 197 1 202 1 
189 1 197 1 202 1 
324 1 178 1 197 1 329 1 104 1 209 1 237 1 35 1 153 1 202 1 87 1 
255 1 167 1 125 2 147 1 104 2 237 2 320 1 322 1 35 2 153 1 324 2 178 2 197 2 114 1 329 3 67 1 288 1 202 2 87 2 
281 1 259 1 148 1 
259 1 148 1 261 1 
281 2 313 1 259 3 232 1 43 1 261 1 
281 1 48 1 259 2 232 1 43 1 261 1 
281 1 259 2 232 2 43 1 261 1 
0 1 166 1 203 1 293 3 173 1 213 1 98 2 183 1 67 2 138 1 22 2 140 1 186 1 25 1 226 4 277 1 193 2 237 5 240 1 151 1 154 1 152 1 158 1 80 2 160 1 199 3 38 1 116 1 85 1 86 1 45 1 87 5 
0 3 166 3 203 3 204 1 291 1 294 1 293 9 173 1 260 1 213 3 98 6 136 5 67 5 22 6 140 1 186 2 226 7 25 2 277 3 237 9 152 4 240 2 154 2 36 5 158 6 80 6 82 1 160 3 199 8 116 1 287 1 85 2 45 1 87 9 46 1 
0 1 166 1 203 1 293 4 173 1 213 2 98 2 67 3 22 2 186 1 226 2 25 1 193 1 277 1 237 3 151 1 240 1 154 1 152 1 80 2 160 1 82 1 199 3 38 1 85 1 87 3 
0 2 166 2 203 2 204 1 294 1 293 7 173 1 260 1 213 3 98 4 67 4 22 4 186 1 25 1 226 3 193 2 277 2 237 4 240 1 151 1 154 1 152 2 80 4 160 2 82 1 199 5 38 1 85 1 87 4 
190 1 39 1 161 1 217 1 238 1 
39 1 100 1 
90 1 
274 1 39 1 321 1 
124 1 39 1 
39 1 321 1 
190 2 274 1 102 1 92 1 39 3 321 1 
0 1 315 1 257 1 231 3 233 3 277 1 174 1 211 1 77 1 78 1 134 2 304 4 17 7 99 1 330 1 70 2 334 1 
0 1 315 1 257 1 231 3 233 3 277 1 174 1 211 1 77 1 78 1 134 2 304 4 17 7 99 1 330 1 70 2 334 1 
0 1 315 1 257 1 231 3 233 3 277 1 174 1 211 1 77 1 78 1 134 2 304 4 59 1 17 7 99 1 330 1 70 2 334 1 
166 3 0 4 203 3 123 1 257 2 129 1 207 2 174 2 211 2 303 1 304 16 134 5 179 1 58 1 17 31 99 1 309 1 62 1 70 3 223 4 187 1 315 2 231 10 31 1 233 15 277 4 77 1 78 5 111 1 160 3 330 1 163 1 252 3 334 1 
0 1 123 1 257 1 207 4 174 1 211 1 303 2 304 5 134 3 15 1 17 9 62 2 70 2 141 1 187 2 315 1 231 4 277 1 31 2 233 4 77 1 78 1 330 1 334 1 
74 1 94 1 191 1 95 1 6 1 128 2 206 1 145 2 296 1 155 1 53 1 109 2 325 2 96 1 301 1 265 1 214 1 115 1 69 1 311 1 
191 1 95 1 6 2 128 1 206 1 145 1 296 1 53 1 155 2 132 1 109 1 325 3 96 1 301 1 299 1 300 1 265 1 69 1 311 1 
191 1 95 1 6 1 128 1 145 1 296 1 53 1 155 2 132 1 109 1 325 2 96 1 299 1 265 1 
170 1 95 2 128 1 6 1 206 1 296 2 212 1 8 1 96 2 300 1 265 2 69 1 272 1 71 1 229 1 145 1 321 1 109 1 325 1 39 1 250 1 164 1 44 1 
94 1 191 1 95 1 6 1 128 1 206 1 145 1 296 1 155 1 53 1 132 1 109 1 325 2 96 1 301 1 265 1 115 1 69 1 311 1 
243 1 
254 1 4 2 170 2 171 2 173 1 8 1 177 1 13 1 180 1 267 1 270 1 272 1 273 4 186 1 188 1 25 1 28 1 195 1 109 2 37 1 112 1 199 2 39 1 116 1 42 1 201 1 44 1 45 3 293 2 128 2 50 1 213 2 55 1 302 2 57 2 67 2 68 1 220 2 221 1 72 2 143 1 145 2 237 5 321 1 240 1 156 1 157 1 326 1 158 6 80 2 248 2 85 1 251 1 164 1 87 5 
171 1 50 1 177 1 55 1 180 1 267 1 270 1 273 2 143 1 237 3 319 1 195 1 156 1 157 1 326 1 37 1 112 1 158 2 42 1 251 1 45 1 87 3 
50 1 173 1 177 1 55 1 180 1 267 1 270 1 67 1 273 3 72 1 143 1 237 3 319 1 195 1 156 1 157 1 326 1 158 1 37 1 112 1 42 1 251 1 45 1 87 3 
171 1 50 1 173 1 177 1 55 1 180 1 267 1 270 1 67 1 220 1 273 3 72 1 143 1 319 1 237 3 195 1 156 1 157 1 326 1 37 1 112 1 158 2 42 1 251 1 45 1 87 3 
4 2 258 1 171 4 50 1 173 5 213 2 177 1 55 1 302 2 57 2 180 1 97 1 267 1 270 1 68 1 67 5 101 1 220 4 273 6 25 1 72 4 143 1 319 1 237 5 240 1 195 1 156 1 157 1 326 1 37 1 158 7 112 1 80 1 248 2 247 1 199 1 249 1 116 1 42 1 85 1 251 1 201 1 45 3 87 5 
4 2 171 2 173 1 177 1 13 1 180 1 267 1 270 1 273 4 25 1 195 1 112 1 37 1 199 1 42 1 116 1 201 1 45 2 293 2 50 1 213 2 55 1 302 2 57 2 68 1 67 2 220 2 72 2 143 1 237 4 240 1 157 1 156 1 326 1 158 4 80 1 248 2 251 1 85 1 87 4 
4 2 171 2 50 1 173 1 213 2 177 1 55 1 302 2 57 2 180 1 267 1 270 1 67 1 68 1 101 1 220 2 273 4 72 2 25 1 143 1 237 4 195 1 240 1 156 1 157 1 326 1 158 4 37 1 112 1 80 1 248 2 247 1 199 1 249 1 42 1 116 1 251 1 85 1 45 2 201 1 87 4 
4 2 171 2 50 1 173 1 213 2 177 1 55 1 302 2 57 2 180 1 267 1 270 1 67 1 68 1 101 1 220 2 273 4 72 2 25 1 143 1 237 4 195 1 240 1 156 1 157 1 326 1 158 4 37 1 112 1 80 1 248 2 247 1 199 1 249 1 42 1 116 1 251 1 85 1 45 2 201 1 87 4 
4 1 293 1 50 1 210 1 177 1 55 1 302 1 180 1 267 1 270 1 101 1 184 1 273 2 23 1 312 1 25 1 143 1 237 2 195 1 240 1 156 1 157 1 326 1 37 1 112 1 80 1 199 1 42 1 116 1 251 1 85 1 201 1 87 2 
4 2 171 3 50 1 173 1 213 2 177 1 55 1 302 2 57 2 180 1 267 1 97 1 270 1 67 1 68 1 101 1 220 3 273 5 25 1 72 3 143 1 237 4 240 1 195 1 156 1 157 1 326 1 37 1 112 1 158 5 80 1 248 2 247 1 199 1 249 1 116 1 42 1 85 1 251 1 45 2 201 1 87 4 
4 2 171 3 50 1 173 1 213 2 177 1 55 1 302 2 57 2 180 1 267 1 97 1 270 1 67 1 68 1 101 1 220 3 273 5 25 1 72 3 143 1 237 4 240 1 195 1 156 1 157 1 326 1 37 1 112 1 158 5 80 1 248 2 247 1 199 1 249 1 116 1 42 1 85 1 251 1 45 2 201 1 87 4 
91 2 4 2 171 2 173 1 177 1 13 1 180 1 267 1 270 1 184 1 273 4 25 1 195 1 112 1 37 1 199 1 42 1 116 1 201 1 45 2 293 2 50 1 210 2 55 1 302 2 67 1 220 2 72 2 143 1 237 4 240 1 157 1 156 1 326 1 158 4 80 1 251 1 85 1 87 4 
0 5 166 4 3 2 257 1 93 1 172 1 264 1 15 1 17 41 182 1 18 1 271 1 187 3 277 5 31 3 282 1 196 1 203 4 123 1 207 6 211 1 304 20 303 3 134 4 58 1 306 1 62 3 63 1 70 1 223 4 224 1 231 8 76 1 233 21 239 4 77 1 78 4 160 4 330 1 162 1 163 3 252 3 334 1 
166 4 0 4 203 4 123 2 257 1 3 2 93 1 172 1 207 8 211 1 264 1 134 4 303 4 304 20 306 1 58 1 15 1 182 1 17 38 18 1 62 4 63 1 271 1 70 1 223 4 224 1 187 4 76 1 231 7 31 4 233 18 277 5 239 4 77 1 78 3 282 1 196 1 160 3 330 1 162 1 163 3 252 3 334 1 
166 7 0 8 203 7 123 1 257 1 3 1 93 1 207 4 211 1 134 7 303 2 304 27 306 1 58 2 15 1 182 1 17 52 18 1 62 2 63 1 271 1 70 1 223 4 224 1 187 2 76 1 231 14 31 2 233 25 277 8 278 2 239 4 77 1 78 7 282 1 196 1 160 7 330 1 162 1 163 2 252 4 334 1 
166 3 0 3 203 3 3 1 7 1 207 4 264 1 134 3 303 2 304 9 306 2 58 1 15 1 182 1 17 19 18 1 62 2 63 1 271 1 223 2 187 2 231 6 31 2 233 10 277 3 239 2 78 3 160 3 163 1 252 1 
0 2 166 3 203 3 123 2 3 2 93 1 207 6 134 2 303 3 304 14 306 1 15 1 182 1 17 26 18 1 62 3 63 2 271 1 223 2 224 1 187 3 76 1 231 4 233 12 31 3 277 3 239 4 78 2 282 1 196 1 160 2 162 1 163 2 252 2 
255 1 324 1 178 1 197 1 104 1 322 1 35 1 288 1 9 1 202 1 
56 1 83 1 
324 1 178 1 197 1 215 1 135 1 104 1 35 1 241 1 202 1 
181 1 307 1 
189 1 328 1 263 1 
255 1 167 1 125 1 147 1 104 1 237 1 320 1 322 1 153 1 35 1 324 1 178 1 197 1 329 2 67 1 288 1 87 1 202 1 
255 1 167 1 125 1 147 1 104 1 237 1 320 1 322 1 153 1 35 1 324 1 178 1 197 1 329 2 67 1 288 1 87 1 202 1 
255 1 167 1 125 1 147 1 104 1 237 1 320 1 322 1 153 1 35 1 324 1 178 1 197 1 329 2 67 1 288 1 87 1 202 1 
181 1 307 1 263 1 
181 1 307 1 263 1 
189 1 328 1 
189 1 328 1 263 1 
192 1 49 1 
226 1 167 1 125 1 192 1 49 1 104 1 209 1 237 1 152 1 35 1 324 1 56 1 178 1 197 1 83 1 329 1 19 1 138 1 86 1 332 1 202 1 87 1 
89 1 128 2 207 2 176 1 8 1 12 1 298 1 180 2 303 1 304 1 214 2 17 2 62 1 66 1 187 1 276 1 145 2 31 1 233 1 321 1 195 2 109 2 79 1 244 1 110 1 245 1 285 1 39 1 42 2 164 1 121 1 
122 1 74 1 191 1 128 2 145 2 296 1 108 1 132 1 109 2 283 1 301 1 
191 1 128 1 145 1 296 1 108 1 132 1 109 1 198 1 301 1 
170 1 229 1 128 1 145 1 296 1 130 1 321 1 8 1 109 1 283 1 39 1 164 1 44 1 272 1 
122 1 283 1 301 1 191 1 128 1 145 1 296 1 108 1 109 1 132 1 
308 1 
165 1 80 1 199 1 173 1 67 1 238 1 297 1 
293 1 173 1 213 1 57 1 68 1 67 2 25 1 237 1 240 1 158 1 80 1 248 1 199 1 116 1 85 1 45 1 87 1 
165 1 166 2 0 2 170 1 173 2 8 3 98 6 100 3 22 6 185 2 186 2 188 1 25 4 274 3 190 2 102 1 275 2 277 2 106 1 109 3 199 9 39 10 200 2 116 4 117 2 45 3 203 2 124 2 293 12 128 3 50 2 51 2 52 2 297 1 213 6 133 2 60 1 67 8 310 1 227 1 74 1 145 3 146 2 235 1 237 5 321 3 240 4 159 2 158 5 80 8 160 2 85 4 164 4 87 5 
166 2 0 2 203 2 93 1 293 6 173 2 213 3 11 1 98 5 67 5 22 5 186 1 223 1 188 1 25 2 26 1 146 1 76 1 277 2 237 1 240 2 282 1 158 1 159 2 196 1 80 5 199 8 160 2 116 2 162 1 163 1 85 2 45 1 87 1 252 1 
25 1 256 1 257 1 29 1 277 1 209 1 237 1 240 1 211 1 159 1 80 1 247 1 199 1 286 1 41 1 116 1 85 1 119 1 87 1 334 1 
165 1 25 1 173 1 240 1 297 1 80 1 199 1 116 1 67 1 85 1 
166 2 0 2 203 2 293 10 146 1 277 2 52 1 213 5 159 2 80 5 160 2 199 5 98 5 67 5 22 5 
158 1 173 1 237 1 67 1 45 1 87 1 
254 1 170 2 128 4 8 1 60 1 21 1 272 1 221 1 186 2 25 2 188 2 145 4 235 2 237 3 321 1 240 2 109 4 158 4 80 2 81 1 82 1 199 2 39 1 116 1 85 2 164 1 45 2 44 1 87 3 
5 1 41 1 209 1 119 1 
186 1 25 1 188 1 293 4 173 2 240 1 213 2 80 2 199 1 98 2 116 1 67 4 85 1 70 1 22 2 
324 1 178 1 30 1 
255 1 324 1 168 1 178 1 192 1 
324 1 178 1 30 1 
324 1 178 1 30 1 
324 1 1 1 178 1 
324 1 1 1 178 1 
324 1 1 1 178 1 
324 1 178 1 
197 1 202 1 
0 1 257 1 207 2 211 1 303 1 304 4 134 2 15 1 17 8 62 1 70 1 223 1 187 1 231 2 277 1 233 4 31 1 77 1 330 1 162 1 163 1 252 1 334 1 
0 1 166 1 203 1 257 1 207 4 211 1 134 2 303 2 304 6 58 1 15 1 17 11 216 1 62 2 70 1 223 2 187 2 231 3 233 5 31 2 277 2 77 1 78 1 330 1 162 1 163 1 252 1 334 1 
166 2 0 3 203 2 123 1 257 1 93 1 207 6 211 1 303 3 304 9 134 3 15 1 17 19 216 1 62 3 70 1 223 1 187 3 231 4 76 1 233 10 31 3 277 3 77 1 78 1 282 1 196 1 160 2 330 1 162 1 163 1 252 1 334 1 
166 2 0 2 203 2 123 1 257 1 93 1 207 6 211 1 303 3 304 10 134 3 15 1 17 17 216 1 62 3 70 1 223 1 187 3 231 5 76 1 233 7 31 3 277 3 77 1 78 2 282 1 196 1 160 1 330 1 162 1 163 1 252 1 334 1 
0 1 257 1 207 2 211 1 303 1 304 4 134 2 15 1 17 8 62 1 70 1 223 1 187 1 231 2 277 1 233 4 31 1 77 1 330 1 162 1 163 1 252 1 334 1 
0 2 166 2 223 1 203 2 187 1 93 1 76 1 231 2 277 2 207 2 31 1 233 6 78 1 282 1 196 1 134 1 304 6 303 1 160 2 15 1 17 12 62 1 162 1 163 1 252 1 
166 2 0 2 203 2 123 2 257 1 93 1 207 8 211 1 303 4 304 10 134 3 15 1 17 18 216 1 62 4 70 1 223 1 187 4 76 1 231 5 233 8 31 4 277 3 77 1 78 2 282 1 196 1 160 1 330 1 162 1 163 1 252 1 334 1 
166 3 0 2 203 3 123 2 93 1 207 8 264 1 303 4 304 9 134 3 15 1 17 16 62 4 223 1 187 4 76 1 231 6 233 7 31 4 277 3 78 3 282 1 196 1 160 2 162 1 163 1 252 1 
0 1 257 3 231 6 233 4 277 1 77 2 211 3 78 3 134 3 304 3 17 7 330 1 334 1 
166 2 0 2 203 2 123 2 257 1 93 1 207 8 211 1 264 1 303 4 304 10 134 3 15 1 17 18 62 4 70 1 223 1 187 4 76 1 231 4 233 8 31 4 277 3 77 1 78 1 282 1 196 1 160 1 330 1 162 1 163 1 252 1 334 1 
0 1 187 2 123 1 257 1 231 3 277 1 233 4 207 4 31 2 77 1 211 1 78 1 304 4 134 2 303 2 17 8 330 1 62 2 70 1 334 1 
0 1 257 1 231 2 233 3 277 1 238 1 77 1 211 1 134 2 304 3 17 6 330 1 70 1 334 1 
0 1 166 1 187 1 203 1 231 2 233 2 207 2 31 1 277 1 78 1 134 1 303 1 304 2 160 1 17 4 216 1 62 1 
0 1 223 2 166 1 203 1 231 2 233 4 277 1 78 1 134 1 304 3 160 1 58 1 17 7 163 1 252 1 
166 2 0 3 203 2 123 2 257 2 207 4 211 2 304 11 134 5 303 2 58 1 17 23 62 2 64 1 65 1 70 1 223 2 187 2 231 9 277 3 233 12 31 2 278 1 77 1 78 4 160 2 330 1 252 2 334 1 
223 1 17 1 233 1 
304 1 17 1 252 1 
166 1 0 1 187 1 203 1 231 3 31 1 207 2 233 3 277 1 52 1 78 1 303 1 304 3 134 2 160 1 17 6 216 1 62 1 
0 2 166 2 223 1 203 2 187 1 93 1 76 1 231 2 277 2 207 2 31 1 233 6 78 1 282 1 196 1 134 1 304 6 303 1 160 2 15 1 17 12 62 1 162 1 163 1 252 1 
0 1 257 1 231 2 277 1 233 3 211 1 78 1 304 3 134 1 17 6 334 1 
187 1 123 1 257 1 231 2 233 2 207 2 31 1 211 1 77 1 78 1 304 1 134 1 303 1 17 3 330 1 62 1 65 1 
0 1 257 1 29 1 231 1 277 1 233 3 211 1 134 1 304 2 17 5 334 1 
166 1 187 1 231 1 207 2 31 1 277 1 78 1 303 1 304 2 15 1 17 2 62 1 
0 1 166 1 187 1 203 1 231 2 233 2 207 2 31 1 277 1 78 1 134 1 303 1 304 2 160 1 15 1 17 4 62 1 
187 3 123 1 257 1 231 2 233 2 207 6 31 3 211 1 78 1 264 1 303 3 134 1 304 1 15 1 17 3 62 3 65 1 
166 3 0 5 203 3 123 2 257 3 129 1 207 10 211 3 264 1 179 1 303 5 304 16 134 7 58 1 15 1 17 34 216 1 62 5 65 1 70 1 223 4 187 5 231 12 233 18 31 5 277 5 77 1 78 5 111 1 160 3 330 1 163 1 252 3 334 2 
314 1 180 1 292 1 230 1 42 1 195 1 156 1 
314 1 103 1 127 1 292 1 230 1 149 1 194 1 195 1 156 1 180 1 42 1 139 1 
170 1 39 1 128 1 145 1 238 1 321 1 164 1 8 1 272 1 44 1 109 1 
24 1 209 1 
24 1 209 1 
24 1 209 1 
88 1 274 1 190 1 124 1 170 1 50 1 128 3 173 1 145 3 237 2 235 1 321 1 34 1 8 1 109 3 158 1 305 1 39 4 200 1 67 1 164 1 100 1 87 2 
88 1 274 1 190 1 124 1 275 1 170 1 50 1 128 3 173 1 145 3 237 2 235 1 321 1 8 1 109 3 158 1 39 4 200 1 67 1 164 1 100 1 87 2 
128 1 145 1 218 1 164 1 8 1 109 1 
74 1 169 1 274 1 142 1 102 1 170 2 128 7 145 6 279 1 176 1 321 2 8 2 132 1 109 7 214 1 40 1 39 3 218 1 289 1 164 3 120 1 
24 1 209 1 
165 1 170 1 128 1 50 1 173 1 51 1 297 1 60 1 67 1 100 1 185 1 25 2 226 1 190 1 275 1 145 1 237 3 240 2 109 1 158 2 80 1 199 1 39 2 116 2 117 1 85 2 45 1 87 3 
74 1 190 1 274 1 102 1 128 2 145 2 321 1 8 1 109 2 39 2 218 1 310 1 164 2 
88 1 74 1 170 1 128 4 145 4 321 1 8 1 109 4 39 1 118 1 164 1 44 1 272 1 
169 1 274 1 142 1 128 2 145 2 235 1 175 1 107 1 321 1 8 1 109 2 39 1 219 1 164 2 
170 1 259 1 128 1 318 1 145 1 148 1 261 1 164 1 8 1 109 1 
244 1 74 1 39 1 128 2 145 2 321 1 176 1 164 1 8 1 132 1 109 2 
74 1 170 1 128 5 145 4 235 1 176 1 321 2 8 2 109 5 39 3 118 1 272 1 44 1 289 1 164 2 120 1 
74 1 228 1 170 1 128 5 145 4 235 1 176 1 321 2 8 2 109 5 39 3 118 1 272 1 44 1 164 2 120 1 
24 1 209 1 
169 1 274 1 142 1 102 1 128 1 145 1 235 1 321 1 8 1 109 1 40 1 39 1 164 2 
27 1 208 1 238 1 222 1 
325 1 27 1 6 1 206 1 208 1 69 1 222 1 
96 1 265 1 6 1 
27 1 47 2 6 3 317 1 206 1 208 1 325 3 269 1 115 1 69 1 137 1 222 1 
325 2 27 1 327 1 6 2 206 1 208 1 69 1 155 1 222 1 
325 1 281 1 259 1 6 1 268 1 206 1 115 1 148 1 69 1 131 1 222 1 
325 1 6 1 206 1 115 1 208 1 69 1 222 1 
325 1 27 1 6 1 206 1 115 1 208 2 69 1 
6 2 206 2 208 1 105 1 54 1 325 2 115 1 69 2 333 1 222 1 
27 1 316 1 6 3 206 1 295 1 208 1 155 2 325 3 242 1 268 1 115 1 69 1 222 2 
313 1 27 1 259 2 6 2 206 1 208 1 148 1 261 1 155 1 325 2 281 1 16 1 115 1 69 1 222 1 
27 1 6 4 206 2 295 1 208 1 155 2 325 4 327 1 268 1 115 1 69 2 290 1 222 2 
325 1 27 1 6 1 206 1 115 1 208 1 69 1 222 1 
27 2 47 1 317 1 6 4 206 1 295 1 208 2 262 1 155 2 325 4 268 1 137 1 69 1 222 3 
27 1 75 1 6 2 206 1 208 1 155 1 280 1 325 2 284 1 115 1 69 1 222 1 
27 1 47 2 317 1 6 3 206 1 208 1 325 3 14 1 115 1 69 1 137 2 222 1 
126 1 144 2 331 1 222 2 
325 1 6 1 206 1 115 1 236 1 69 1 
325 2 27 1 316 1 6 2 206 1 115 1 208 1 69 1 155 1 222 1 
234 1 
325 1 27 1 6 1 206 1 115 1 208 1 69 1 222 1 
325 3 27 1 316 1 47 1 6 3 206 1 115 1 208 1 69 1 155 1 222 1 
268 1 295 1 262 1 222 1 
208 1 222 1 

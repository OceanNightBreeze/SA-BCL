#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (8,356) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 3 132 1 194 1 245 2 247 9 249 1 134 1 218 9 219 1 88 1 317 2 140 4 69 1 252 1 12 6 16 1 75 1 76 2 320 2 352 2 279 1 50 2 306 1 101 1 308 5 325 1 210 1 310 2 
130 3 132 1 194 1 245 2 247 9 249 1 134 1 218 9 219 1 88 1 317 2 140 4 69 1 252 1 12 6 16 1 75 1 76 2 320 2 352 2 279 1 50 2 306 1 101 1 308 5 325 1 210 1 310 2 
130 4 132 1 194 1 245 2 247 10 249 1 134 1 218 10 219 1 88 1 317 2 140 5 69 1 252 1 12 7 16 1 75 1 76 2 320 2 352 2 279 1 50 2 306 1 101 1 308 6 325 1 210 1 310 2 
130 2 132 1 194 1 245 2 247 7 249 1 134 1 218 7 219 1 88 1 317 1 140 3 69 1 252 1 12 4 75 1 76 2 320 2 352 2 279 1 50 2 306 1 101 1 308 4 325 1 210 1 310 2 
12 3 130 1 132 1 16 1 320 1 76 1 245 1 352 1 279 1 247 4 101 1 308 3 218 4 325 1 88 1 317 2 140 2 310 1 
132 1 320 1 352 1 245 1 50 1 247 2 308 1 249 1 134 1 218 2 325 1 88 1 235 1 199 1 310 1 151 1 
12 1 130 1 132 1 352 2 50 1 247 3 308 2 218 3 219 1 325 1 88 1 140 1 310 2 
12 7 130 3 132 1 16 1 320 1 76 1 245 1 279 1 352 2 321 1 50 1 247 9 101 1 308 5 218 9 219 1 325 1 88 1 317 2 283 1 140 4 310 2 252 1 69 1 
12 7 130 3 132 1 16 1 320 1 76 1 245 1 279 1 352 2 321 1 50 1 247 9 101 1 308 5 218 9 219 1 325 1 88 1 317 2 283 1 140 4 310 2 252 1 69 1 
367 1 31 1 77 1 
367 1 7 2 346 1 
128 2 152 2 293 2 316 2 299 1 55 2 40 2 157 1 
24 1 0 1 128 2 152 2 293 3 173 2 30 1 344 1 361 1 363 2 109 1 250 1 157 1 34 1 114 1 66 2 269 1 316 3 299 1 200 1 40 2 44 1 366 1 94 2 302 2 369 1 370 1 230 1 276 1 98 1 123 1 258 1 80 1 53 1 55 2 56 1 338 1 
128 1 152 1 293 1 327 1 316 1 299 1 55 1 212 1 40 1 82 1 
190 1 128 1 367 1 293 1 294 1 362 1 77 1 373 1 112 1 316 1 150 1 261 1 82 1 105 1 
152 1 128 1 367 1 293 1 362 2 77 1 373 1 112 1 316 1 55 1 40 1 150 1 261 1 82 1 105 2 
35 1 362 1 105 1 63 1 59 1 
128 1 152 1 367 1 293 1 175 1 362 2 77 1 63 1 35 1 327 1 316 1 299 1 55 1 212 1 40 1 259 1 286 1 82 1 105 2 
362 1 105 1 63 1 
152 1 128 1 293 1 362 1 35 1 327 1 316 1 299 1 212 1 55 1 259 1 40 1 82 1 105 1 
367 1 
35 1 367 1 286 1 121 1 362 2 77 1 105 2 63 1 
367 1 143 1 13 2 304 1 29 1 345 2 231 1 362 5 77 1 63 2 297 1 35 2 113 1 376 1 9 1 286 1 10 2 105 5 119 1 
31 1 157 1 
128 2 152 1 293 2 358 1 146 1 157 2 316 2 55 1 40 1 
136 1 8 1 78 1 
0 1 94 1 302 1 293 1 276 1 98 1 363 1 109 1 157 1 258 1 114 1 316 1 56 1 44 1 366 1 170 1 
0 1 94 1 152 1 128 1 302 1 293 2 98 1 276 1 363 1 109 1 136 1 258 1 114 1 316 2 55 1 56 1 162 1 260 1 44 1 366 1 
152 4 128 5 253 1 293 5 294 1 146 1 157 1 316 5 102 1 55 4 260 2 40 1 162 1 164 1 
128 2 152 2 293 2 327 1 316 2 55 2 82 1 71 1 
128 3 152 3 293 3 316 3 55 3 40 1 260 1 157 1 
128 1 152 1 293 1 327 1 316 1 55 1 82 1 
128 1 152 1 293 1 358 1 316 1 55 1 146 1 40 1 82 1 
24 1 0 1 128 3 152 3 293 4 173 2 30 1 361 1 362 1 363 1 109 1 157 1 112 1 114 1 66 1 269 1 316 4 200 1 299 1 221 1 40 2 162 1 44 1 366 1 94 1 302 1 369 1 370 1 230 1 98 1 276 1 146 1 281 1 373 1 258 1 53 1 55 3 56 1 260 1 150 1 261 1 82 1 105 1 338 1 
128 2 152 1 293 2 316 2 294 1 55 1 260 1 157 1 164 1 
152 3 128 3 367 1 293 3 146 1 362 1 281 1 373 1 112 1 316 3 55 3 20 1 40 1 150 1 162 1 260 2 82 1 261 1 105 1 
152 2 128 2 293 2 146 1 136 1 316 2 8 1 55 2 260 1 40 1 
94 1 0 1 302 1 293 1 276 1 98 1 363 1 109 1 157 1 258 1 114 1 316 1 56 1 44 1 366 1 
94 1 23 1 0 1 302 1 293 1 276 1 98 1 363 1 109 1 157 1 258 1 316 1 89 1 44 1 366 1 
24 1 243 1 356 1 173 2 174 1 192 1 361 1 250 2 196 1 136 2 269 2 66 4 8 2 273 1 185 1 369 1 370 1 278 1 322 1 233 1 78 2 53 1 285 1 338 1 
112 1 128 1 152 1 293 1 316 1 55 1 82 1 71 1 
330 1 287 1 
330 1 287 1 
314 1 32 1 
314 1 32 1 
314 1 32 1 
137 1 330 1 287 1 
137 1 330 1 287 1 
330 1 287 1 118 1 
314 1 330 2 177 1 32 1 287 2 288 1 
137 1 330 1 287 1 
330 1 100 1 287 1 
330 1 100 1 287 1 
330 1 100 1 287 1 
152 2 128 2 191 1 293 2 216 1 362 1 157 1 180 1 316 2 90 1 201 1 92 1 118 1 14 1 256 1 149 1 187 1 330 1 55 2 103 1 287 1 311 1 105 1 262 1 
129 1 367 1 228 1 216 2 254 1 362 2 180 2 159 1 187 2 90 3 330 2 160 1 92 2 239 1 287 2 288 1 105 2 262 1 11 2 
320 1 76 1 245 1 
235 1 320 1 245 1 
214 1 235 1 138 1 76 2 245 3 58 1 
214 1 235 1 138 1 284 1 76 1 245 2 
214 2 235 1 138 1 76 1 245 2 
191 1 131 1 343 1 27 1 174 1 61 1 345 1 362 5 63 1 35 4 7 2 113 1 346 1 300 1 9 1 10 1 119 2 224 2 367 2 13 1 47 1 77 1 233 1 256 1 334 1 286 1 311 1 105 5 213 1 313 1 
25 1 131 4 27 2 174 3 295 1 345 2 296 1 362 9 63 6 87 1 364 1 35 7 7 7 113 1 346 3 300 2 9 4 10 2 119 6 367 5 13 2 231 1 322 1 77 1 233 3 124 1 285 1 334 1 286 1 311 4 57 5 105 9 213 3 313 4 59 5 
128 1 152 1 293 1 131 1 27 1 174 1 61 1 345 1 362 3 35 2 7 2 316 1 346 1 299 1 300 1 9 1 40 1 10 1 119 2 224 1 367 2 47 1 13 1 231 1 77 1 233 1 327 1 55 1 212 1 259 1 82 1 311 1 105 3 213 1 313 1 
152 1 293 1 61 1 345 1 295 1 296 1 7 4 346 2 300 1 299 1 9 1 10 1 119 4 13 1 77 1 212 1 259 1 82 1 311 2 213 2 313 2 25 1 128 1 131 2 27 1 174 2 362 4 35 3 316 1 40 1 224 2 367 3 47 1 231 1 233 2 327 1 55 1 105 4 
0 1 220 1 31 1 
0 1 318 1 
375 1 
0 1 258 1 366 1 
0 1 226 1 
0 1 258 1 
0 3 258 1 351 1 220 2 41 1 366 1 
183 1 127 1 174 1 266 1 107 1 278 3 277 2 49 1 51 1 250 4 196 2 269 3 66 7 285 1 169 1 45 1 117 1 
183 1 127 1 174 1 266 1 107 1 278 3 277 2 49 1 51 1 250 4 196 2 269 3 66 7 285 1 169 1 45 1 117 1 
183 1 127 1 60 1 174 1 266 1 107 1 278 3 277 2 49 1 51 1 250 4 196 2 269 3 66 7 285 1 169 1 45 1 117 1 
24 2 127 2 173 4 174 3 266 1 107 3 195 1 64 1 250 14 196 3 269 11 66 25 181 1 37 2 161 3 45 1 349 3 117 2 183 2 227 1 370 2 277 3 278 6 322 1 49 2 233 2 51 1 207 1 53 2 285 2 104 1 169 1 213 2 338 2 
183 1 24 2 127 1 173 4 174 1 266 1 370 2 107 1 278 4 277 2 246 1 49 1 248 1 250 5 196 3 269 4 66 9 37 1 53 2 285 1 169 1 45 1 117 1 338 2 
132 1 267 1 155 1 363 1 245 2 247 2 197 1 218 2 88 1 163 1 42 1 142 1 94 1 302 1 12 1 48 1 320 1 76 1 276 1 98 1 352 1 206 1 50 1 308 1 325 1 235 1 211 1 310 1 263 1 58 1 
267 1 155 1 363 1 245 2 247 3 65 1 197 1 218 3 88 1 42 1 142 1 94 1 350 1 302 1 225 1 12 2 48 1 320 1 76 1 276 1 98 1 352 1 206 1 50 1 308 1 325 1 235 1 310 1 263 1 58 1 
267 1 155 1 363 1 245 2 247 2 65 1 197 1 218 2 88 1 42 1 142 1 94 1 302 1 225 1 12 2 48 1 276 1 98 1 76 1 320 1 50 1 308 1 325 1 235 1 58 1 
0 1 172 1 363 1 109 1 247 1 218 1 197 2 115 1 70 1 142 2 94 1 350 1 302 1 74 1 48 2 98 1 276 1 352 1 50 2 258 1 282 1 310 1 241 1 
132 1 267 1 155 1 363 1 245 2 247 1 65 1 197 1 218 1 163 1 42 1 142 1 94 1 302 1 48 1 320 1 76 1 276 1 98 1 352 1 206 1 50 1 235 1 310 1 263 1 58 1 
106 1 
0 1 190 1 293 1 345 1 294 1 109 2 63 6 112 1 7 2 113 1 346 2 251 1 9 2 10 1 348 1 119 2 302 2 303 1 13 1 74 1 17 2 77 1 258 1 257 1 81 2 21 1 261 1 82 1 128 1 215 4 265 2 27 1 359 2 85 1 362 5 363 2 86 2 316 1 271 2 94 2 367 2 95 1 276 1 98 1 372 1 373 1 52 1 282 1 377 1 188 2 286 3 150 1 105 5 242 1 337 1 
190 1 215 2 128 1 293 1 95 1 294 1 121 1 362 3 86 1 63 2 372 1 373 1 112 1 257 1 316 1 251 1 286 1 150 1 82 1 261 1 105 3 337 1 
190 1 128 1 215 3 293 1 294 1 362 3 63 1 112 1 316 1 251 1 367 1 95 1 121 1 17 1 77 1 372 1 373 1 257 1 150 1 286 1 261 1 82 1 105 3 337 1 
190 1 128 1 215 3 293 1 294 1 362 3 86 1 63 2 112 1 316 1 251 1 271 1 367 1 95 1 121 1 17 1 77 1 372 1 373 1 257 1 286 1 150 1 261 1 82 1 105 3 337 1 
190 1 293 1 294 1 345 1 6 1 63 7 112 1 113 1 346 2 251 1 9 1 10 1 119 1 13 1 303 1 121 1 17 4 77 5 257 1 209 1 81 2 21 1 82 1 261 1 215 6 128 1 265 2 359 2 362 5 86 4 36 1 316 1 271 4 39 1 367 5 95 1 372 1 373 1 188 2 332 1 150 1 286 3 105 5 337 1 
190 1 293 1 294 1 345 1 63 4 112 1 113 1 7 2 346 2 251 1 9 1 10 1 119 1 13 1 303 1 17 2 77 1 257 1 81 2 21 1 82 1 261 1 215 4 128 1 265 2 359 2 362 4 86 2 316 1 271 2 367 2 95 1 372 1 373 1 377 1 188 2 150 1 286 2 105 4 337 1 
190 1 128 1 215 4 293 1 265 2 359 2 294 1 345 1 362 4 86 2 6 1 63 4 112 1 113 1 346 2 316 1 271 2 251 1 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 2 77 1 372 1 373 1 257 1 209 1 188 2 81 2 332 1 21 1 286 2 150 1 261 1 82 1 105 4 337 1 
190 1 128 1 215 4 293 1 265 2 359 2 294 1 345 1 362 4 86 2 6 1 63 4 112 1 113 1 346 2 316 1 271 2 251 1 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 2 77 1 372 1 373 1 257 1 209 1 188 2 81 2 332 1 21 1 286 2 150 1 261 1 82 1 105 4 337 1 
126 1 190 1 128 1 215 4 84 1 293 1 265 2 294 1 345 1 360 2 362 4 86 2 63 4 112 1 7 2 113 1 316 1 271 2 251 1 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 2 77 1 372 1 373 1 257 1 81 2 332 1 286 2 150 1 261 1 82 1 105 4 289 2 337 1 355 1 
190 1 128 1 215 5 293 1 265 2 359 2 345 1 294 1 362 4 6 1 86 3 63 5 112 1 36 1 113 1 346 2 316 1 251 1 271 3 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 3 77 1 372 1 373 1 257 1 209 1 188 2 81 2 332 1 21 1 286 2 150 1 261 1 82 1 105 4 337 1 
190 1 128 1 215 5 293 1 265 2 359 2 345 1 294 1 362 4 6 1 86 3 63 5 112 1 36 1 113 1 346 2 316 1 251 1 271 3 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 3 77 1 372 1 373 1 257 1 209 1 188 2 81 2 332 1 21 1 286 2 150 1 261 1 82 1 105 4 337 1 
190 1 126 1 128 1 215 4 293 1 265 2 345 1 294 1 360 2 362 4 86 2 63 4 112 1 7 2 113 1 316 1 271 2 251 1 9 1 10 1 119 1 367 1 303 1 13 1 95 1 17 2 77 1 372 1 373 1 257 1 377 1 81 2 286 2 150 1 261 1 82 1 105 4 289 2 337 1 
183 1 243 1 24 1 127 1 173 2 174 1 369 1 266 1 370 1 277 1 278 2 31 1 361 1 78 1 157 2 250 3 196 2 136 1 269 3 66 6 53 1 8 1 285 1 169 1 45 1 338 1 
24 2 173 4 357 1 174 2 30 1 107 1 361 1 157 1 250 8 135 1 136 11 269 6 66 14 181 1 8 3 161 3 349 3 184 1 369 2 370 2 145 1 278 1 322 1 123 1 324 1 233 2 78 11 53 2 285 1 312 1 213 2 338 2 
24 1 152 1 128 1 293 1 173 2 184 1 369 1 370 1 361 1 33 1 123 1 250 1 66 1 316 1 53 1 8 1 55 1 162 1 260 1 240 1 338 1 
0 2 152 1 293 3 109 1 157 2 250 10 196 2 114 2 66 18 8 5 162 1 302 1 123 1 78 6 258 2 208 2 169 1 260 1 213 2 24 3 127 1 128 1 26 2 173 6 174 3 266 1 30 1 361 3 363 1 136 6 269 8 316 3 45 1 44 2 366 2 183 1 94 1 184 1 369 3 371 1 370 3 230 2 277 1 278 2 276 2 98 2 186 2 147 2 322 1 233 2 326 1 53 3 55 1 285 2 56 2 338 3 
243 1 0 3 24 2 125 1 128 1 152 1 342 1 293 1 173 4 315 1 30 1 361 2 363 8 4 1 109 2 250 1 65 1 34 2 316 1 66 2 269 1 94 8 302 7 74 1 369 2 370 2 98 2 276 2 353 1 123 1 258 2 282 1 328 1 211 1 53 2 55 1 260 1 336 1 338 2 
24 1 152 1 128 1 293 1 173 2 174 1 361 1 250 1 270 1 316 1 66 1 40 1 184 1 369 1 370 1 146 1 233 1 53 1 55 1 213 1 338 1 
243 1 24 1 173 2 192 1 174 1 369 1 370 1 278 1 107 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 338 1 
243 1 24 1 173 2 369 1 370 1 278 1 361 1 322 1 78 1 196 1 136 1 66 2 269 2 53 1 8 1 285 1 273 1 338 1 
243 1 24 1 173 2 174 1 369 1 370 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 213 1 338 1 
24 1 173 2 315 1 192 1 174 1 369 1 370 1 278 1 107 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 338 1 
24 1 173 2 315 1 369 1 370 1 278 1 361 1 322 1 78 1 196 1 136 1 66 2 269 2 53 1 8 1 285 1 273 1 338 1 
24 1 173 2 315 1 174 1 369 1 370 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 213 1 338 1 
24 1 173 2 174 1 369 1 370 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 213 1 338 1 
0 1 24 1 293 1 173 2 30 1 361 1 363 1 109 1 250 1 157 1 114 1 66 2 316 1 269 1 44 1 366 1 94 1 302 1 369 1 230 1 370 1 98 1 276 1 123 1 258 1 53 1 56 1 338 1 
23 1 0 1 24 1 293 1 173 2 30 1 154 1 361 1 363 1 109 1 250 1 157 1 66 2 89 1 316 1 269 1 44 1 366 1 94 1 302 1 369 1 370 1 98 1 276 1 123 1 258 1 53 1 338 1 
24 1 184 1 173 2 174 1 369 1 370 1 361 1 233 1 78 1 250 2 136 1 66 2 53 1 8 1 213 1 338 1 
0 1 24 1 26 1 293 1 173 2 174 1 361 1 363 1 250 2 136 1 114 1 66 2 316 1 8 1 44 1 366 1 94 1 302 1 369 1 230 1 370 1 98 1 276 1 233 1 78 1 258 1 211 1 53 1 56 1 213 1 338 1 
24 1 340 1 152 1 128 1 293 1 173 2 174 1 361 1 250 2 136 1 269 1 316 1 66 3 40 1 184 1 369 1 370 1 146 1 322 1 233 1 78 1 53 1 55 1 285 1 213 1 338 1 
264 1 24 2 173 4 174 3 107 1 268 1 248 1 250 12 269 10 66 22 181 2 67 1 161 2 349 2 43 1 15 1 229 1 370 2 278 1 205 1 280 1 322 2 148 1 167 3 233 3 309 1 79 1 53 2 333 1 285 2 213 3 338 2 291 1 
264 1 24 2 173 4 174 3 107 1 268 1 248 1 250 12 269 10 66 22 181 2 67 1 161 2 349 2 43 1 15 1 229 1 370 2 278 1 205 1 280 1 322 2 148 1 167 3 233 3 309 1 79 1 53 2 333 1 285 2 213 3 338 2 291 1 
264 1 24 1 127 1 173 2 174 4 266 1 107 2 268 1 248 1 250 15 196 1 269 12 66 27 181 2 67 1 161 2 45 1 349 2 43 1 183 1 15 1 229 1 370 1 277 1 278 3 205 1 280 1 322 2 148 1 167 3 233 3 309 1 79 1 53 1 285 3 169 1 213 3 338 1 291 1 
264 1 24 2 173 4 174 3 107 1 268 1 248 1 250 11 269 7 66 18 181 2 67 1 161 2 349 2 43 1 15 1 229 1 370 2 278 1 205 1 322 1 148 1 167 2 233 3 309 1 79 1 53 2 331 1 333 1 285 1 213 3 338 2 291 1 
264 1 24 1 173 2 174 2 268 1 248 1 250 9 269 7 66 16 181 2 67 1 161 2 349 2 43 1 15 1 229 1 370 1 205 2 280 1 322 1 167 2 148 1 233 2 309 2 79 1 53 1 285 1 213 2 338 1 291 1 
159 1 216 1 187 1 330 1 254 1 92 1 287 1 288 1 72 1 180 1 
14 1 118 1 
46 1 216 1 187 1 139 1 330 1 255 1 92 1 287 1 180 1 
137 1 165 1 
177 1 100 1 111 1 
367 1 228 1 216 1 254 1 362 1 180 1 159 1 187 1 90 2 330 1 160 1 92 1 239 1 287 1 288 1 262 1 105 1 11 1 
367 1 228 1 216 1 254 1 362 1 180 1 159 1 187 1 90 2 330 1 160 1 92 1 239 1 287 1 288 1 262 1 105 1 11 1 
367 1 228 1 216 1 254 1 362 1 180 1 159 1 187 1 90 2 330 1 160 1 92 1 239 1 287 1 288 1 262 1 105 1 11 1 
137 1 177 1 165 1 
137 1 177 1 165 1 
100 1 111 1 
177 1 100 1 111 1 
201 1 103 1 
152 2 128 2 191 1 293 2 216 1 362 1 157 1 180 1 35 1 316 2 90 1 201 1 160 1 92 1 11 1 118 1 14 1 122 1 256 1 149 1 187 1 330 1 103 1 55 2 287 1 311 1 105 1 
0 1 24 1 125 1 128 2 293 2 173 2 193 1 30 1 361 1 363 2 133 1 250 1 34 2 316 2 66 2 269 1 223 1 94 2 302 2 184 1 369 1 370 1 98 1 276 1 305 1 323 1 123 1 258 1 53 1 336 1 338 1 
94 2 302 2 292 1 267 1 320 1 76 1 98 1 276 1 155 1 363 2 245 2 65 1 197 1 158 1 235 1 211 1 335 1 263 1 58 1 
94 1 302 1 171 1 267 1 320 1 76 1 155 1 276 1 98 1 363 1 245 2 65 1 197 1 158 1 235 1 263 1 58 1 
0 1 94 1 302 1 292 1 172 1 74 1 98 1 276 1 363 1 109 1 156 1 258 1 197 1 282 1 
94 1 302 1 292 1 267 1 320 1 76 1 98 1 155 1 276 1 363 1 245 2 65 1 197 1 158 1 235 1 335 1 263 1 58 1 
374 1 
297 1 367 1 29 1 9 1 31 1 77 1 119 1 
359 1 345 1 362 1 63 1 113 1 7 1 346 1 9 1 10 1 119 1 367 2 13 1 77 1 188 1 21 1 286 1 105 1 
0 6 244 2 153 1 345 3 62 2 109 1 63 5 113 3 7 9 346 4 347 2 9 6 10 3 119 7 302 1 13 3 166 2 77 1 19 1 258 1 213 2 313 5 131 5 27 2 174 2 363 1 362 5 220 2 318 3 41 1 366 1 93 2 94 1 367 5 98 2 276 1 99 2 147 2 322 1 233 2 234 1 285 1 150 2 286 3 105 5 242 1 
131 3 174 2 345 1 268 1 7 4 113 1 346 2 181 1 67 1 161 1 9 2 10 1 349 1 43 1 119 4 367 2 13 1 229 1 233 2 213 2 313 3 291 1 
244 1 127 1 152 1 128 1 293 1 174 2 345 1 362 1 6 1 113 1 316 1 299 1 9 2 40 1 10 1 45 1 141 1 119 2 183 1 13 1 275 2 327 1 212 1 55 1 285 1 259 1 82 1 105 1 
367 1 13 1 29 1 345 1 77 1 297 1 113 1 9 1 10 1 119 1 
367 1 7 2 131 1 346 1 174 1 233 1 213 1 313 1 119 2 
367 1 362 1 286 1 77 1 105 1 63 1 
0 1 27 2 345 2 85 1 363 4 362 3 109 2 63 4 113 1 38 1 9 2 10 2 272 1 119 2 94 4 302 4 13 2 96 1 74 1 97 2 231 1 98 1 276 1 52 1 258 1 282 1 286 2 105 3 242 2 
0 1 24 1 128 2 152 2 293 3 173 2 30 1 361 1 363 1 109 1 157 1 114 1 66 1 269 1 316 3 299 1 200 1 40 2 44 1 366 1 94 1 302 1 369 1 370 1 230 1 276 1 98 1 258 1 53 1 55 2 56 1 338 1 
367 4 131 2 13 1 27 1 345 1 277 1 77 2 7 4 113 1 346 2 9 1 10 1 242 1 313 2 119 2 
1 1 216 1 92 1 
1 1 216 1 92 1 
159 1 216 1 201 1 222 1 92 1 
1 1 216 1 92 1 
216 1 237 1 92 1 
216 1 237 1 92 1 
216 1 237 1 92 1 
216 1 92 1 
330 1 287 1 
24 1 127 1 173 2 174 1 266 1 248 1 250 4 196 2 66 8 269 4 181 1 161 1 349 1 45 1 183 1 229 1 370 1 277 1 278 2 53 1 285 1 169 1 338 1 
24 2 173 4 174 2 108 1 268 1 248 1 250 6 66 10 269 4 181 1 67 1 161 1 349 1 43 1 229 1 370 2 322 1 233 2 53 2 285 1 213 2 338 2 291 1 
24 2 173 4 174 2 268 1 107 1 108 1 248 1 250 6 66 8 269 2 181 1 67 1 161 1 349 1 43 1 229 1 370 2 278 1 233 2 53 2 213 2 338 2 291 1 
24 2 173 4 174 2 268 1 108 1 248 1 250 6 66 10 269 4 181 1 67 1 161 1 349 1 43 1 229 1 370 2 322 1 233 2 53 2 285 1 213 2 338 2 291 1 
24 1 127 1 173 2 174 1 266 1 248 1 250 4 196 2 66 8 269 4 181 1 161 1 349 1 45 1 183 1 229 1 370 1 277 1 278 2 53 1 285 1 169 1 338 1 
24 1 173 2 174 2 229 1 370 1 278 1 107 1 268 1 233 2 248 1 250 6 269 2 66 8 53 1 181 1 67 1 161 1 43 1 349 1 213 2 338 1 291 1 
24 2 173 4 174 2 108 1 268 1 248 1 250 6 66 10 269 4 181 1 67 1 161 1 349 1 43 1 229 1 370 2 322 1 233 2 53 2 285 1 213 2 338 2 291 1 
24 2 173 4 174 2 268 1 107 1 248 1 250 6 66 10 269 4 181 1 67 1 161 1 349 1 43 1 229 1 370 2 278 1 322 1 233 2 53 2 285 1 333 1 213 2 338 2 291 1 
183 3 127 3 174 1 266 2 278 6 107 3 250 3 196 3 269 4 66 7 285 1 169 1 45 1 
24 2 173 4 174 2 268 1 248 1 250 6 66 10 269 4 181 1 67 1 161 1 349 1 43 1 229 1 370 2 322 1 233 2 53 2 333 1 285 1 213 2 338 2 291 1 
24 2 183 1 127 1 173 4 174 1 266 1 370 2 277 1 107 1 278 3 250 4 196 2 269 4 66 8 53 2 37 1 285 1 169 1 45 1 338 2 
183 1 127 1 174 1 266 1 277 1 31 1 278 2 250 3 196 2 269 3 66 6 285 1 169 1 45 1 
24 1 173 2 174 1 370 1 108 1 233 1 250 2 66 2 53 1 213 1 338 1 
66 2 269 1 181 1 161 1 349 1 250 1 
24 2 127 4 357 1 173 4 174 4 266 1 107 5 250 14 64 1 196 5 135 1 66 26 269 12 37 2 161 2 45 2 349 2 141 1 183 4 145 1 370 2 277 1 278 10 233 2 53 2 285 2 169 1 213 2 338 2 
66 1 269 1 161 1 
66 1 349 1 250 1 
174 1 107 1 278 1 147 1 233 1 250 3 269 1 66 4 213 1 
24 1 173 2 174 2 229 1 370 1 278 1 107 1 268 1 233 2 248 1 250 6 269 2 66 8 53 1 181 1 67 1 161 1 43 1 349 1 213 2 338 1 291 1 
183 1 127 1 174 1 278 2 107 1 250 3 196 1 66 6 269 3 285 1 45 1 
183 1 24 1 127 1 173 2 266 1 370 1 107 1 278 2 250 1 64 1 196 1 269 2 66 3 37 1 53 1 169 1 338 1 
24 1 183 2 127 2 173 2 174 2 370 1 278 5 107 2 248 1 250 5 196 3 66 10 269 5 53 1 285 2 45 1 141 1 338 1 
24 1 173 2 174 1 370 1 107 1 278 1 233 1 248 1 250 2 66 2 53 1 338 1 
24 1 173 2 174 1 370 1 278 1 107 1 322 1 233 1 248 1 250 2 269 2 66 4 53 1 285 1 213 1 338 1 
24 3 183 1 127 1 173 6 370 3 278 2 107 1 248 1 64 1 250 1 196 1 269 2 66 3 37 1 53 3 333 1 338 3 
24 5 127 3 173 10 174 4 266 1 108 1 107 4 248 1 64 1 250 15 196 4 269 14 66 29 37 2 181 1 161 3 45 2 349 3 183 3 227 1 370 5 277 1 278 8 322 1 233 2 207 1 53 5 333 1 285 3 104 1 169 1 213 2 338 5 
128 1 293 1 316 1 294 1 202 1 157 1 164 1 
128 1 293 1 294 1 232 1 178 1 110 1 157 1 18 1 316 1 91 1 202 1 164 1 
0 1 94 1 258 1 302 1 282 1 74 1 98 1 276 1 31 1 363 1 109 1 
0 1 94 1 152 1 128 1 302 1 293 2 98 1 276 1 363 1 109 1 157 1 258 1 114 1 316 2 55 1 260 1 44 1 366 1 
0 3 94 1 152 1 128 2 302 1 226 1 293 2 97 1 98 1 276 1 363 1 373 1 157 1 112 1 258 2 114 1 316 2 168 1 55 2 260 1 82 1 44 1 366 2 
0 3 128 2 152 1 293 2 363 2 157 1 298 1 112 1 89 1 316 2 44 1 366 2 94 2 302 2 226 1 97 1 276 1 98 1 373 1 258 2 55 2 168 1 260 1 82 1 
94 3 0 4 302 3 367 1 226 1 144 1 97 1 98 1 276 1 362 2 363 3 109 1 77 1 63 1 298 1 258 1 168 1 220 1 318 1 150 1 116 1 105 2 366 1 
94 3 0 4 302 3 367 1 226 1 97 1 98 1 276 1 362 2 363 3 109 1 77 1 63 1 298 1 258 1 168 1 220 1 318 1 150 1 105 2 366 1 93 1 
94 1 302 1 342 1 98 1 276 1 363 1 
94 7 0 3 302 6 342 1 276 2 98 3 363 7 4 1 109 2 353 1 34 1 65 1 258 2 198 1 328 1 211 1 41 1 336 1 83 1 366 1 301 1 
0 1 24 2 127 1 128 1 152 1 26 1 293 2 173 4 174 1 266 1 361 2 363 1 157 2 250 3 196 2 136 1 114 1 269 3 66 6 316 2 8 1 45 1 44 1 366 1 183 1 94 1 302 1 184 1 369 2 370 2 230 1 277 1 278 2 98 1 276 1 323 1 78 1 258 1 208 1 53 2 211 1 55 1 285 1 56 1 169 1 260 1 338 2 
0 2 29 1 345 2 362 3 363 1 62 1 109 1 63 2 297 1 35 1 113 2 347 1 220 1 9 1 318 1 10 2 93 1 119 1 94 1 302 1 367 1 13 2 96 1 99 1 77 1 150 1 286 1 105 3 
94 2 0 2 302 2 342 1 276 1 98 2 363 2 234 1 258 1 211 1 220 1 41 1 366 1 
94 4 0 1 302 4 74 1 98 1 276 1 363 4 179 1 109 1 298 1 258 1 282 1 211 1 
94 2 0 1 302 2 28 1 97 1 276 1 98 2 363 2 258 1 198 1 238 1 366 1 301 1 203 1 
94 1 302 1 235 1 320 1 98 1 276 1 155 1 363 1 245 1 109 1 
0 1 65 1 94 2 258 1 302 2 211 1 98 1 276 1 305 1 363 2 336 1 
94 5 0 3 302 4 74 1 97 1 276 2 98 2 363 5 179 1 109 1 4 1 258 2 282 1 328 1 211 1 336 1 
94 5 0 3 302 4 368 1 74 1 97 1 276 2 98 2 363 5 179 1 109 1 4 1 258 2 282 1 211 1 336 1 
0 1 94 1 152 1 128 1 302 1 293 2 98 1 276 1 363 1 109 1 157 1 258 1 316 2 89 1 55 1 260 1 44 1 366 1 
94 1 0 1 302 1 97 1 276 1 98 2 363 1 258 1 198 1 41 1 83 1 366 1 301 1 
319 1 54 1 354 1 22 1 157 1 
274 1 367 1 319 1 176 1 362 2 77 1 281 1 373 1 157 1 112 1 35 1 54 2 182 1 150 1 354 2 82 1 22 2 261 1 105 2 
128 1 319 1 293 1 193 1 133 1 316 1 354 1 22 1 223 1 
274 1 319 1 176 1 
325 1 88 1 31 1 308 1 
218 1 325 1 88 1 352 1 310 1 247 1 308 1 
218 1 48 1 50 1 
341 1 132 1 352 1 5 1 247 3 308 1 249 2 218 3 325 1 88 1 310 1 339 1 
218 2 325 1 12 1 88 1 317 1 352 1 310 1 247 2 308 1 
132 1 76 1 320 1 352 1 245 1 247 1 101 1 308 1 218 1 140 1 310 1 
218 1 325 1 132 1 352 1 310 1 247 1 308 1 
218 1 325 2 88 1 132 1 352 1 310 1 247 1 
120 1 73 1 132 1 352 2 247 2 308 1 218 2 325 1 68 1 310 2 
12 2 130 1 132 1 352 1 247 3 308 2 218 3 325 1 88 1 140 1 310 1 69 1 252 1 
12 1 132 1 204 1 76 1 320 1 245 2 352 1 247 2 308 1 218 2 325 1 88 1 235 1 310 1 58 1 
12 2 130 1 132 1 16 1 352 2 247 4 308 2 218 4 325 1 88 1 317 1 140 1 310 2 
218 1 325 1 88 1 132 1 352 1 310 1 247 1 308 1 
341 1 12 2 130 1 5 1 352 1 247 4 249 1 308 3 218 4 325 2 88 2 140 1 310 1 290 1 
12 1 132 1 3 1 352 1 217 1 321 1 247 2 308 1 218 2 325 1 88 1 310 1 
341 1 132 1 352 1 5 2 247 3 308 1 249 2 218 3 365 1 325 1 88 1 310 1 
236 1 329 2 189 1 308 2 
218 1 132 1 2 1 352 1 310 1 247 1 
218 2 325 1 12 1 88 1 132 1 352 1 310 1 252 1 247 2 308 1 
307 1 
218 1 325 1 88 1 132 1 352 1 310 1 247 1 308 1 
12 1 132 1 352 1 247 3 249 1 308 1 218 3 325 1 88 1 310 1 252 1 
130 1 140 1 290 1 308 1 
325 1 308 1 

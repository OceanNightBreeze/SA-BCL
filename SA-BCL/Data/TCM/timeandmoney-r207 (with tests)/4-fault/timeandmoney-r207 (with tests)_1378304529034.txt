#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (106,373) 256 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (106,373) 256 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 2 327 9 70 2 44 1 187 2 317 2 140 3 266 4 144 1 197 1 320 1 53 1 179 1 56 1 34 1 340 2 15 1 180 9 106 1 323 5 17 2 130 2 373 1 91 1 324 1 110 1 93 1 20 6 
235 2 327 9 70 2 44 1 187 2 317 2 140 3 266 4 144 1 197 1 320 1 53 1 179 1 56 1 34 1 340 2 15 1 180 9 106 1 323 5 17 2 373 1 130 2 91 1 324 1 110 1 93 1 20 6 
235 2 327 10 70 2 44 1 187 2 317 2 140 4 266 5 144 1 197 1 320 1 53 1 179 1 56 1 34 1 340 2 15 1 180 10 106 1 323 6 17 2 373 1 130 2 91 1 324 1 110 1 93 1 20 7 
235 2 327 7 70 2 44 1 187 2 317 2 140 2 266 3 197 1 320 1 53 1 179 1 56 1 34 1 340 2 15 1 180 7 106 1 323 4 17 2 373 1 130 1 91 1 324 1 110 1 93 1 20 4 
235 1 53 1 327 4 56 1 70 1 34 1 44 1 187 1 180 4 140 1 317 1 323 3 17 1 266 2 144 1 130 2 93 1 20 3 
53 1 327 2 70 1 340 1 341 1 44 1 187 1 180 2 323 1 317 1 117 1 17 1 4 1 197 1 110 1 93 1 
53 1 327 3 70 2 340 1 44 1 187 2 180 3 106 1 140 1 323 2 266 1 93 1 20 1 
256 1 53 1 327 1 70 1 187 1 180 1 106 1 
256 1 53 1 327 1 70 1 187 1 180 1 106 1 
282 1 353 1 310 1 
210 2 14 1 353 1 
25 1 131 2 247 2 35 1 302 2 234 2 329 2 379 2 
96 1 2 1 23 1 329 2 97 1 118 2 171 1 25 1 27 1 7 1 247 2 302 3 369 1 269 1 202 1 54 1 251 1 307 1 273 2 225 1 35 1 322 1 204 1 276 1 108 2 63 1 229 1 131 2 156 1 351 2 234 3 164 1 94 1 314 1 377 2 21 1 379 2 
90 1 131 1 92 1 366 1 247 1 35 1 302 1 234 1 329 1 379 1 
270 1 84 1 154 1 13 1 127 1 72 1 267 1 92 1 282 1 247 1 161 1 302 1 353 1 234 1 
84 1 13 1 127 2 329 1 72 1 131 1 267 1 92 1 282 1 247 1 161 2 302 1 353 1 234 1 379 1 
261 1 289 1 137 1 161 1 127 1 
289 1 137 1 282 1 51 1 161 2 127 2 353 1 354 1 
137 1 161 1 127 1 
289 1 126 1 127 1 35 1 329 1 90 1 131 1 92 1 366 1 247 1 161 1 302 1 234 1 379 1 
353 1 
289 1 137 1 282 1 368 1 51 1 161 2 127 2 353 1 
112 1 287 1 355 2 289 2 137 2 361 4 360 2 168 2 329 1 121 1 366 1 247 1 51 1 302 1 268 1 305 1 126 1 35 1 127 5 85 5 309 2 253 2 311 1 255 1 206 1 312 1 90 1 131 1 65 1 64 2 92 1 282 2 160 1 161 5 234 1 353 2 379 1 213 1 
96 1 359 1 45 1 2 1 322 1 23 1 276 1 229 1 108 1 63 1 131 1 27 1 351 1 7 1 247 1 260 1 302 2 234 2 377 1 379 1 
25 1 310 1 
42 1 329 1 25 2 131 1 148 1 247 2 302 2 234 2 379 1 
71 1 45 1 200 1 
304 1 96 1 2 1 23 1 322 1 276 1 25 1 108 1 63 1 229 1 27 1 351 1 7 1 302 1 234 1 377 1 
270 1 371 1 359 1 329 1 25 1 192 1 131 4 148 1 247 5 260 2 30 1 302 5 234 5 379 4 
90 1 131 2 92 1 272 1 247 2 302 2 234 2 379 2 
25 1 131 3 247 3 260 1 302 3 329 1 234 3 379 3 
90 1 131 1 92 1 247 1 302 1 234 1 379 1 
131 1 148 1 92 1 42 1 247 1 302 1 234 1 329 1 379 1 
96 1 359 1 2 1 23 1 329 2 72 1 118 1 171 1 25 1 148 1 267 1 27 1 7 1 247 3 302 4 369 1 269 1 223 1 202 1 54 1 251 1 307 1 84 1 273 2 225 1 13 1 322 1 127 1 35 1 275 1 276 1 229 1 63 1 108 1 131 3 92 1 351 1 260 1 161 1 234 4 164 1 314 1 377 1 379 3 
25 1 270 1 371 1 131 1 247 2 260 1 302 2 234 2 379 1 
223 1 84 1 13 1 359 1 127 1 329 1 72 1 131 3 148 1 92 1 267 1 76 1 247 3 161 1 260 2 302 3 353 1 234 3 379 3 
45 1 329 1 131 2 148 1 247 2 260 1 302 2 234 2 200 1 379 2 
96 1 23 1 322 1 2 1 276 1 25 1 108 1 63 1 229 1 27 1 351 1 7 1 302 1 234 1 377 1 
96 1 23 1 322 1 2 1 362 1 276 1 25 1 108 1 332 1 27 1 351 1 7 1 302 1 234 1 377 1 
315 1 71 2 168 1 360 1 45 2 293 1 118 4 171 2 196 1 29 1 319 1 333 1 52 1 200 2 269 1 54 1 251 1 307 1 273 2 225 1 252 1 107 1 156 2 164 1 
131 1 92 1 267 1 272 1 247 1 302 1 234 1 379 1 
173 1 57 1 
173 1 57 1 
49 1 211 1 
49 1 211 1 
49 1 211 1 
242 1 173 1 57 1 
208 1 173 1 57 1 
173 2 49 1 57 2 211 1 248 1 177 1 
242 1 173 1 57 1 
242 1 173 1 57 1 
173 1 57 1 226 1 
173 1 57 1 226 1 
173 1 57 1 226 1 
188 1 216 1 241 1 25 1 297 1 173 1 6 1 247 2 302 2 57 1 372 1 10 1 58 1 59 1 127 1 343 1 347 1 208 1 131 2 350 1 134 1 161 1 234 2 379 2 
271 1 250 1 57 2 138 1 127 2 188 1 343 2 216 2 241 2 173 2 347 3 6 2 231 2 248 1 175 1 161 2 219 1 353 1 163 1 
235 1 317 1 17 1 
317 1 117 1 17 1 
235 2 119 1 321 1 313 1 117 1 17 3 
235 1 321 1 43 1 313 1 117 1 17 2 
235 1 321 2 313 1 117 1 17 2 
315 1 355 1 356 1 289 4 137 1 360 1 168 1 361 3 296 2 100 1 51 1 268 1 79 2 224 1 372 1 203 1 59 1 14 1 85 2 127 5 309 1 107 1 253 1 346 1 227 1 210 3 159 2 282 1 134 1 161 5 69 1 353 2 
167 1 261 1 289 2 137 1 329 1 48 1 366 1 247 1 302 1 126 1 127 2 35 1 90 1 131 1 92 1 282 1 161 2 376 1 353 1 234 1 379 1 
315 1 355 1 289 2 360 1 361 3 168 1 296 2 100 1 79 2 305 1 224 1 203 1 14 2 127 3 85 2 309 1 253 1 107 1 346 1 227 1 210 4 282 1 159 1 134 1 161 3 353 3 
315 2 355 1 289 3 360 2 361 5 168 2 296 4 100 1 79 4 221 1 305 1 224 1 203 2 14 3 127 4 85 4 309 1 253 1 107 2 346 1 227 1 39 1 210 7 282 1 159 2 259 1 134 2 161 4 353 4 
357 1 2 1 310 1 
2 1 68 1 
9 1 
276 1 7 1 2 1 
5 1 2 1 
276 1 2 1 
276 1 357 2 105 1 7 1 2 3 284 1 
103 2 152 1 328 1 116 1 360 1 168 1 293 2 118 7 171 3 206 1 312 1 65 1 66 1 298 1 156 4 199 1 52 3 
103 2 152 1 328 1 116 1 360 1 168 1 293 2 118 7 171 3 206 1 312 1 65 1 66 1 298 1 156 4 199 1 52 3 
103 2 152 1 328 1 116 1 360 1 168 1 293 2 118 7 171 3 206 1 257 1 312 1 65 1 66 1 298 1 156 4 199 1 52 3 
328 1 290 1 293 1 295 1 294 1 118 6 171 3 331 1 298 1 28 1 198 1 52 2 269 1 103 1 152 1 307 1 251 1 273 2 206 1 312 1 230 1 66 2 156 3 164 1 
328 1 185 1 116 1 360 1 168 1 293 3 118 9 171 4 195 1 331 1 199 1 52 4 269 2 103 2 152 1 251 2 307 2 273 4 206 1 312 1 65 1 66 1 156 5 164 2 
235 1 165 1 316 1 327 2 70 1 239 1 44 1 187 1 23 1 317 1 141 1 117 1 364 1 174 1 119 1 50 1 53 1 340 1 322 1 180 2 323 1 17 2 277 1 108 1 133 1 212 1 351 1 93 1 20 1 377 1 
235 1 165 1 316 1 327 3 70 1 239 1 44 1 187 1 23 1 3 1 317 1 141 1 117 1 364 1 119 1 174 1 176 1 340 1 322 1 180 3 323 1 88 1 17 2 108 1 133 1 212 1 351 1 93 1 377 1 20 2 
165 1 235 1 316 1 327 2 239 1 44 1 23 1 3 1 317 1 117 1 364 1 119 1 176 1 340 1 322 1 180 2 323 1 17 2 108 1 133 1 212 1 351 1 93 1 377 1 20 2 
165 2 316 2 327 1 70 1 187 1 2 1 23 1 139 1 169 1 74 1 27 1 55 1 153 1 340 2 322 1 180 1 88 1 276 1 89 1 108 1 212 2 351 1 377 1 
235 1 165 1 316 1 327 1 70 1 239 1 187 1 23 1 317 1 141 1 117 1 364 1 174 1 119 1 50 1 176 1 53 1 340 1 322 1 180 1 17 2 108 1 133 1 212 1 351 1 377 1 
37 1 
326 2 1 2 137 6 186 2 2 1 146 1 193 2 247 1 51 3 150 1 336 1 302 1 201 2 60 1 154 1 308 1 13 1 14 2 309 1 253 1 16 1 345 2 108 2 210 2 157 2 351 2 161 5 353 2 166 1 355 1 361 2 23 1 169 1 72 1 172 1 74 1 267 1 27 2 268 1 81 1 123 1 270 1 224 1 83 1 84 1 85 2 127 5 322 1 128 4 276 1 92 1 281 1 282 1 234 1 377 2 
81 1 270 1 326 1 83 1 84 1 137 2 154 1 13 1 127 3 128 2 72 1 146 1 92 1 267 1 281 1 368 1 247 1 51 1 161 3 336 1 302 1 234 1 
137 1 72 1 146 1 267 1 247 1 368 1 51 1 302 1 336 1 81 1 270 1 83 1 84 1 154 1 13 1 127 3 128 3 345 1 92 1 281 1 282 1 161 3 234 1 353 1 
326 1 137 2 72 1 146 1 267 1 368 1 247 1 51 1 302 1 336 1 81 1 270 1 201 1 83 1 84 1 154 1 13 1 127 3 128 3 345 1 92 1 281 1 282 1 161 3 234 1 353 1 
355 1 326 4 262 1 1 2 137 7 186 2 115 1 361 1 72 1 146 1 193 2 267 1 247 1 368 1 51 3 150 1 268 1 337 1 336 1 302 1 81 1 270 1 201 4 83 1 84 1 154 1 13 1 14 2 85 1 127 5 309 1 128 6 16 1 253 1 345 4 67 1 92 1 157 2 281 1 282 5 161 5 353 5 234 1 162 1 
326 2 1 2 137 4 186 2 146 1 193 2 247 1 51 2 302 1 336 1 150 1 201 2 154 1 60 1 13 1 14 2 309 1 16 1 253 1 345 2 157 2 210 2 161 4 353 2 355 1 361 1 72 1 267 1 268 1 81 1 270 1 83 1 84 1 127 4 85 1 128 4 92 1 281 1 282 1 234 1 
326 2 355 1 262 1 137 4 1 2 186 2 115 1 361 1 72 1 146 1 193 2 267 1 247 1 51 2 150 1 302 1 336 1 337 1 268 1 81 1 270 1 201 2 83 1 84 1 154 1 13 1 14 2 85 1 127 4 128 4 309 1 16 1 253 1 345 2 92 1 157 2 281 1 282 1 161 4 353 1 234 1 
326 2 355 1 262 1 137 4 1 2 186 2 115 1 361 1 72 1 146 1 193 2 267 1 247 1 51 2 150 1 302 1 336 1 337 1 268 1 81 1 270 1 201 2 83 1 84 1 154 1 13 1 14 2 85 1 127 4 128 4 309 1 16 1 253 1 345 2 92 1 157 2 281 1 282 1 161 4 353 1 234 1 
326 2 355 1 137 4 186 2 115 1 361 1 24 1 72 1 189 2 47 2 146 1 267 1 247 1 51 2 150 1 302 1 336 1 268 1 81 1 270 1 370 1 201 2 83 1 84 1 154 1 13 1 85 1 127 4 128 4 309 1 253 1 345 2 207 1 92 1 210 2 157 2 281 1 282 1 161 4 353 1 234 1 
355 1 326 3 262 1 1 2 137 5 186 2 115 1 361 1 72 1 146 1 193 2 267 1 247 1 51 2 150 1 268 1 337 1 302 1 336 1 81 1 270 1 201 3 83 1 84 1 154 1 13 1 14 2 85 1 127 4 309 1 128 5 16 1 253 1 345 3 92 1 67 1 157 2 281 1 282 1 161 4 353 1 234 1 
355 1 326 3 262 1 1 2 137 5 186 2 115 1 361 1 72 1 146 1 193 2 267 1 247 1 51 2 150 1 268 1 337 1 302 1 336 1 81 1 270 1 201 3 83 1 84 1 154 1 13 1 14 2 85 1 127 4 309 1 128 5 16 1 253 1 345 3 92 1 67 1 157 2 281 1 282 1 161 4 353 1 234 1 
326 2 137 4 186 2 189 2 47 2 146 1 247 1 51 2 302 1 336 1 150 1 201 2 154 1 60 1 13 1 309 1 253 1 345 2 207 1 157 2 210 2 161 4 353 1 355 1 361 1 72 1 267 1 268 1 81 1 270 1 83 1 84 1 127 4 85 1 128 4 92 1 281 1 282 1 234 1 
71 1 116 1 45 1 168 1 360 1 293 2 118 6 171 3 25 2 199 1 52 2 200 1 269 1 103 1 54 1 251 1 307 1 273 2 225 1 252 1 310 1 206 1 312 1 65 1 156 3 164 1 
315 1 328 1 71 8 291 1 45 8 168 2 360 1 293 1 295 2 118 11 318 1 171 5 25 1 52 2 200 3 124 1 269 2 202 1 338 1 54 1 251 2 307 2 203 2 273 4 225 2 254 1 107 2 230 2 92 1 156 6 136 1 111 1 164 2 
96 1 291 1 359 1 264 1 2 1 23 1 118 2 171 1 25 1 27 1 217 1 7 1 247 1 122 1 302 2 200 1 269 1 304 1 54 1 202 1 307 1 251 1 225 1 273 2 322 1 276 1 229 1 63 1 108 1 131 1 156 1 351 1 260 1 234 2 377 1 164 1 379 1 21 1 
328 4 96 2 291 1 2 2 45 7 293 4 145 2 147 1 245 2 246 1 247 1 7 2 199 1 301 2 302 3 52 8 200 7 103 1 202 1 54 3 251 3 307 3 203 2 107 2 206 1 312 1 108 3 63 2 65 1 155 2 156 10 351 3 260 1 164 3 21 1 315 2 71 7 116 1 359 1 360 3 23 2 168 3 170 1 118 20 171 10 25 2 27 1 176 1 369 2 269 3 273 6 225 3 322 2 276 2 229 2 131 1 234 3 377 3 379 1 
40 1 214 1 237 1 23 2 2 3 46 1 169 1 142 1 118 2 171 1 74 1 75 1 27 2 247 1 176 1 302 1 303 1 269 2 54 2 202 1 251 2 307 2 273 4 225 2 252 1 322 2 277 1 276 2 108 8 131 1 156 1 351 7 260 1 234 1 377 8 164 2 94 2 379 1 21 1 
315 1 71 1 291 1 45 1 168 1 360 1 293 1 329 1 118 3 171 2 148 1 247 1 52 1 302 1 200 1 269 1 54 1 251 1 307 1 203 1 273 2 225 1 62 1 107 1 131 1 156 1 234 1 164 1 379 1 
269 1 54 1 328 1 71 1 307 1 251 1 225 1 273 2 252 1 45 1 168 1 107 1 118 2 156 2 29 1 52 1 164 1 200 1 
269 1 315 1 54 1 71 1 307 1 251 1 225 1 273 2 252 1 45 1 360 1 293 1 118 2 171 2 333 1 52 1 164 1 200 1 
269 1 315 1 54 1 328 1 71 2 307 1 251 1 203 1 225 1 273 2 252 1 360 1 45 2 168 1 293 1 107 1 118 4 171 2 156 2 52 2 164 1 200 2 
40 1 269 1 54 1 328 1 71 1 307 1 251 1 225 1 273 2 45 1 168 1 107 1 118 2 156 2 29 1 52 1 164 1 200 1 
40 1 269 1 315 1 54 1 71 1 307 1 251 1 225 1 273 2 45 1 360 1 293 1 118 2 171 2 333 1 52 1 164 1 200 1 
40 1 269 1 315 1 54 1 328 1 71 2 307 1 251 1 203 1 225 1 273 2 360 1 45 2 168 1 293 1 107 1 118 4 171 2 156 2 52 2 164 1 200 2 
269 1 315 1 54 1 328 1 71 2 307 1 251 1 203 1 225 1 273 2 360 1 45 2 168 1 293 1 107 1 118 4 171 2 156 2 52 2 164 1 200 2 
96 1 23 1 2 1 118 2 171 1 25 1 27 1 7 1 302 1 369 1 269 1 54 1 202 1 307 1 251 1 225 1 273 2 322 1 276 1 229 1 63 1 108 1 156 1 351 1 234 1 377 1 164 1 21 1 
96 1 23 1 2 1 362 1 118 2 171 1 25 1 332 1 27 1 7 1 302 1 269 1 54 1 202 1 307 1 251 1 225 1 273 2 322 1 344 1 276 1 108 1 156 1 351 1 234 1 377 1 164 1 21 1 
269 1 315 1 54 1 328 1 71 2 307 1 251 1 203 1 225 1 273 2 291 1 360 1 45 2 168 1 293 1 107 1 118 4 171 2 156 2 52 2 164 1 200 2 
315 1 328 1 71 2 96 1 360 1 45 2 168 1 23 1 2 1 293 1 118 4 171 2 245 1 7 1 52 2 302 1 369 1 200 2 269 1 54 1 307 1 251 1 203 1 225 1 273 2 322 1 107 1 277 1 276 1 229 1 63 1 108 1 156 2 351 1 234 1 377 1 164 1 
315 1 328 1 71 1 291 1 360 1 168 1 45 1 329 1 118 3 171 1 148 1 365 1 247 1 52 1 302 1 200 1 269 1 54 1 251 1 307 1 203 1 273 2 225 1 107 1 131 1 156 2 234 1 164 1 379 1 
325 1 315 3 0 1 358 1 328 4 116 1 360 4 168 4 293 3 265 1 363 1 295 3 118 37 171 18 73 1 331 2 195 1 28 3 300 2 8 1 199 1 78 1 52 7 269 4 103 1 251 4 307 4 104 1 203 3 61 1 273 8 86 1 36 1 107 3 181 4 206 1 312 1 18 1 65 1 230 3 156 19 164 4 
325 1 315 3 0 1 328 3 116 1 360 4 168 4 293 2 265 1 363 1 295 2 118 35 171 17 73 1 331 2 195 1 28 2 300 1 8 1 199 1 78 1 52 5 269 4 103 1 251 4 307 4 104 1 203 3 61 1 273 8 86 1 36 1 107 3 181 4 206 1 312 1 18 1 65 1 230 2 156 18 164 4 
325 1 315 3 0 1 328 3 360 3 168 3 293 3 265 1 363 1 295 2 118 28 171 14 73 1 331 2 195 1 28 2 300 1 78 1 52 6 269 3 251 3 307 3 104 1 203 3 61 1 273 6 86 1 36 1 107 3 181 4 18 1 230 2 156 14 164 3 
325 1 315 3 0 1 328 3 116 1 360 4 168 4 293 3 265 1 363 1 295 2 118 33 171 16 73 1 331 2 195 1 28 2 367 1 300 1 8 1 199 1 78 1 52 6 269 4 103 1 251 4 307 4 104 1 203 3 61 1 273 8 86 1 107 3 181 3 206 1 312 1 18 1 65 1 230 2 156 17 164 4 
325 1 315 2 0 1 328 2 360 2 168 3 293 2 265 2 363 1 118 26 295 2 171 12 73 1 331 2 195 1 28 2 300 2 78 1 52 4 269 3 251 3 307 3 104 1 203 3 61 1 273 6 86 1 36 1 107 3 181 4 18 1 230 2 156 14 164 3 
173 1 250 1 57 1 6 1 258 1 248 1 175 1 343 1 216 1 241 1 
208 1 10 1 
278 1 173 1 57 1 6 1 183 1 343 1 102 1 216 1 241 1 
242 1 32 1 
77 1 226 1 177 1 
250 1 57 1 138 1 127 1 188 1 343 1 216 1 241 1 173 1 347 2 6 1 231 1 248 1 175 1 161 1 219 1 353 1 163 1 
250 1 57 1 138 1 127 1 188 1 343 1 216 1 241 1 173 1 347 2 6 1 231 1 248 1 175 1 161 1 219 1 353 1 163 1 
250 1 57 1 138 1 127 1 188 1 343 1 216 1 241 1 173 1 347 2 6 1 231 1 248 1 175 1 161 1 219 1 353 1 163 1 
242 1 32 1 177 1 
242 1 32 1 177 1 
77 1 226 1 
77 1 226 1 177 1 
297 1 350 1 
289 1 216 1 241 1 25 1 297 1 173 1 6 1 247 2 302 2 57 1 372 1 10 1 58 1 59 1 127 1 343 1 347 1 208 1 109 1 131 2 231 1 350 1 134 1 161 1 234 2 163 1 379 2 
291 1 23 1 2 1 46 1 118 2 171 1 75 1 247 2 302 2 269 1 82 1 54 1 339 1 202 1 307 1 251 1 225 1 273 2 11 1 322 1 276 1 108 2 156 1 351 2 352 1 234 2 377 2 285 1 164 1 94 2 21 1 
235 1 151 1 239 1 322 1 23 1 317 1 117 1 141 1 17 2 364 1 277 1 108 2 119 1 98 1 212 1 158 1 351 2 176 1 377 2 
235 1 288 1 239 1 23 1 322 1 317 1 117 1 141 1 17 2 364 1 108 1 119 1 212 1 158 1 351 1 176 1 377 1 
322 1 23 1 2 1 139 1 169 1 276 1 74 1 108 1 98 1 27 1 212 1 351 1 233 1 377 1 
235 1 151 1 239 1 322 1 23 1 317 1 117 1 141 1 17 2 364 1 108 1 119 1 98 1 212 1 158 1 351 1 176 1 377 1 
375 1 
287 1 282 1 361 1 85 1 353 1 255 1 310 1 
355 1 1 1 137 1 361 1 193 1 51 1 268 1 14 1 85 1 127 1 309 1 16 1 253 1 210 1 282 1 161 1 353 2 
287 1 236 2 137 5 2 10 143 2 296 6 99 1 5 2 299 1 7 3 51 3 203 2 105 1 14 6 309 4 253 4 107 2 255 1 205 1 108 3 64 2 155 2 210 12 351 3 68 3 161 5 353 8 315 2 355 4 113 2 357 2 361 9 23 3 168 2 360 2 72 2 172 1 26 1 121 2 27 1 218 2 268 4 79 6 224 2 322 4 127 5 85 8 87 2 277 1 276 3 282 2 135 2 377 3 286 1 
325 1 315 2 355 2 137 1 361 8 168 2 360 2 363 1 295 1 296 5 172 1 73 1 121 1 28 1 51 1 78 1 268 2 79 5 224 1 203 2 12 1 14 3 86 1 127 1 85 5 309 2 253 2 107 2 64 2 230 1 210 6 282 2 161 1 353 5 378 1 
355 1 168 2 360 1 361 2 329 1 121 1 366 1 247 1 302 1 268 1 337 1 126 1 127 1 85 2 35 1 309 1 253 1 206 1 312 1 90 1 64 2 65 1 131 1 92 1 161 1 234 1 213 1 379 1 
287 1 355 1 85 1 361 1 309 1 253 1 255 1 282 1 268 1 353 1 
315 2 203 2 14 5 168 2 85 5 360 2 361 5 107 2 296 5 64 2 121 1 155 1 210 10 353 5 79 5 
137 1 282 1 161 1 127 1 51 1 353 1 
166 1 355 2 263 1 137 4 23 1 2 1 361 2 169 1 172 2 74 1 99 1 27 2 51 2 268 1 305 1 224 2 308 1 322 1 85 2 127 3 309 2 253 2 276 1 38 1 108 4 351 4 161 3 377 4 286 2 
96 1 23 1 2 1 329 2 118 1 171 1 25 1 27 1 247 2 7 1 302 3 369 1 269 1 202 1 54 1 251 1 307 1 273 2 225 1 35 1 322 1 276 1 108 1 63 1 229 1 131 2 351 1 234 3 164 1 377 1 314 1 379 2 
103 1 355 1 224 1 14 2 85 2 361 1 309 1 253 1 296 2 172 1 210 4 282 2 268 1 353 4 79 2 
182 1 6 1 216 1 
297 1 250 1 6 1 349 1 216 1 
182 1 6 1 216 1 
182 1 6 1 216 1 
238 1 6 1 216 1 
238 1 6 1 216 1 
238 1 6 1 216 1 
6 1 216 1 
173 1 57 1 
325 1 315 1 328 4 116 1 168 5 360 4 293 5 363 1 118 24 295 1 171 10 73 1 331 1 195 1 28 1 199 1 78 1 52 9 269 2 103 1 251 2 307 2 203 2 273 4 86 1 107 2 206 2 312 2 65 2 230 1 156 14 164 2 213 1 
325 1 315 1 328 1 116 1 168 3 360 2 293 3 363 1 118 17 295 1 171 7 73 1 331 1 195 1 28 1 199 1 78 1 52 4 269 3 103 1 251 3 307 3 203 2 273 6 86 1 107 2 206 1 312 1 65 1 230 1 156 10 283 1 164 3 
325 1 315 2 328 1 116 1 168 3 360 3 293 3 363 1 118 19 295 1 171 10 73 1 195 1 331 1 28 1 199 1 78 1 52 4 269 3 103 1 251 3 307 3 203 2 273 6 86 1 107 2 206 1 312 1 65 1 230 1 156 9 283 1 164 3 
325 1 315 1 328 2 116 1 168 3 360 2 293 3 363 1 118 17 295 1 171 7 73 1 331 1 195 1 28 1 199 1 78 1 52 5 269 3 103 1 251 3 307 3 203 2 273 6 86 1 107 2 206 1 312 1 65 1 230 1 156 10 283 1 164 3 
325 1 315 1 328 4 116 1 168 5 360 4 293 5 363 1 118 24 295 1 171 10 73 1 331 1 195 1 28 1 199 1 78 1 52 9 269 2 103 1 251 2 307 2 203 2 273 4 86 1 107 2 206 2 312 2 65 2 230 1 156 14 164 2 213 1 
325 1 315 2 328 1 168 2 360 2 293 1 363 1 118 12 295 1 171 6 73 1 195 1 28 1 78 1 52 2 269 1 251 1 307 1 203 2 273 2 86 1 107 2 230 1 156 6 164 1 
325 1 315 1 328 2 116 1 168 3 360 2 293 3 363 1 118 18 295 1 171 8 73 1 195 1 331 2 28 1 199 1 78 1 52 5 269 4 103 1 251 4 307 4 203 2 273 8 86 1 107 2 206 1 312 1 65 1 230 1 156 10 283 1 164 4 
325 1 315 2 328 3 168 3 360 2 293 3 363 1 118 16 295 1 171 7 73 1 195 1 331 2 28 1 8 1 78 1 52 6 269 4 251 4 307 4 203 3 273 8 86 1 107 3 230 1 156 9 164 4 
328 3 116 2 360 1 168 1 293 3 118 7 171 4 206 3 312 3 65 1 156 3 199 1 52 6 
325 1 315 1 328 1 116 1 168 3 360 2 293 3 363 1 118 18 295 1 171 8 73 1 195 1 331 2 28 1 199 1 8 1 78 1 52 4 269 4 103 1 251 4 307 4 203 2 273 8 86 1 107 2 206 1 312 1 65 1 230 1 156 10 164 4 
269 2 103 1 328 1 307 2 251 2 273 4 116 1 360 1 168 1 293 2 118 8 171 4 206 1 312 1 65 1 331 1 156 4 199 1 52 3 164 2 
103 1 116 1 168 1 360 1 293 2 310 1 118 6 171 3 206 1 312 1 65 1 156 3 199 1 52 2 
269 1 315 1 328 1 307 1 251 1 203 1 273 2 360 1 168 1 293 1 107 1 118 4 171 2 156 2 283 1 52 2 164 1 
171 1 230 1 156 1 28 1 118 2 295 1 
315 2 328 4 116 1 360 5 168 5 293 4 118 25 295 2 171 12 331 1 199 1 52 8 269 1 103 1 307 1 251 1 203 2 273 2 107 2 254 1 206 2 312 2 65 2 230 2 156 13 136 1 111 1 164 1 213 1 
171 1 118 1 295 1 
230 1 156 1 118 1 
269 1 315 1 328 1 251 1 307 1 203 1 273 2 168 1 360 1 293 2 107 1 118 6 171 3 155 1 156 3 283 1 52 3 164 1 
325 1 315 2 328 1 168 2 360 2 293 1 363 1 118 12 295 1 171 6 73 1 195 1 28 1 78 1 52 2 269 1 251 1 307 1 203 2 273 2 86 1 107 2 230 1 156 6 164 1 
328 1 168 1 360 1 293 1 118 6 171 3 206 1 312 1 65 1 156 3 52 2 
269 1 328 1 307 1 251 1 273 2 290 1 116 1 293 1 118 3 206 1 171 2 312 1 331 1 156 1 199 1 52 2 164 1 
269 1 328 2 251 1 307 1 273 2 168 2 360 2 293 3 118 10 206 2 171 5 312 2 65 1 195 1 156 5 52 5 164 1 213 1 
269 1 328 1 307 1 251 1 273 2 168 1 107 1 118 2 195 1 156 2 52 1 164 1 
269 1 315 1 328 1 307 1 251 1 203 1 273 2 360 1 168 1 293 1 107 1 118 4 171 2 195 1 156 2 52 2 164 1 
269 3 328 1 307 3 251 3 273 6 290 1 293 1 118 3 171 2 206 1 312 1 331 1 195 1 156 1 8 1 52 2 164 3 
328 3 290 1 116 1 360 2 168 2 293 3 295 1 118 15 171 8 195 1 331 1 28 1 198 1 8 1 199 1 52 6 269 4 251 4 307 4 273 8 206 2 312 2 65 1 230 1 156 7 283 1 164 4 213 1 
25 1 270 1 371 1 247 1 302 1 240 1 234 1 
270 1 95 1 371 1 240 1 190 1 25 1 209 1 348 1 247 1 335 1 302 1 234 1 
276 1 74 1 108 1 27 1 351 1 322 1 23 1 2 1 169 1 377 1 310 1 
96 1 2 1 322 1 23 1 276 1 25 1 108 1 229 1 131 1 27 1 351 1 7 1 247 1 260 1 302 2 234 2 377 1 379 1 
96 1 13 1 2 3 322 1 23 1 276 2 25 1 108 1 229 1 5 1 131 1 92 1 267 1 351 1 218 1 7 2 247 2 260 1 302 2 234 2 377 1 379 2 286 1 
96 1 23 1 2 3 362 1 25 1 5 1 267 1 247 2 7 2 218 1 302 2 13 1 322 1 276 2 108 2 131 1 374 1 92 1 351 2 260 1 234 2 377 2 286 1 379 2 
357 1 114 1 137 1 342 1 322 1 127 2 2 4 23 1 72 1 276 1 108 3 5 1 374 1 27 1 282 1 351 3 7 1 218 1 161 2 68 1 353 1 377 3 286 1 
357 1 137 1 322 1 127 2 2 4 23 1 72 1 276 1 143 1 108 3 5 1 374 1 27 1 282 1 351 3 7 1 218 1 161 2 68 1 353 1 377 3 286 1 
108 1 351 1 322 1 23 1 377 1 303 1 
214 1 237 1 33 1 105 1 2 3 23 2 322 3 46 1 142 1 277 1 276 2 108 7 194 1 120 1 27 2 351 6 7 1 176 1 94 1 303 1 377 7 
71 1 96 1 116 1 291 1 45 1 360 1 168 1 2 1 23 1 293 2 118 6 171 3 145 1 25 2 245 1 7 1 247 1 199 1 52 2 302 2 369 1 200 1 269 2 103 1 54 2 339 1 307 2 251 2 225 2 273 4 322 1 206 1 276 1 277 1 312 1 108 1 63 1 229 1 65 1 131 1 156 3 351 1 260 1 234 2 164 2 377 1 379 1 
287 1 355 2 236 1 357 1 289 1 137 2 361 1 2 2 72 1 143 1 99 1 27 1 51 1 268 2 85 1 127 3 309 2 253 2 87 1 255 1 108 1 282 1 351 1 161 3 135 1 68 1 353 1 377 1 
357 1 105 1 2 2 23 1 322 2 205 1 277 1 276 1 108 2 351 2 7 1 303 1 377 2 
322 1 2 1 23 1 169 1 277 1 276 1 228 1 74 1 108 4 374 1 27 1 351 4 377 4 
33 1 2 1 23 1 322 2 274 1 276 1 147 1 108 2 120 1 351 2 7 1 232 1 377 2 286 1 
108 1 27 1 351 1 322 1 23 1 317 1 117 1 377 1 17 1 364 1 
276 1 277 1 108 2 11 1 351 2 322 1 23 1 2 1 176 1 46 1 377 2 
214 1 2 3 23 2 322 2 169 1 46 1 142 1 277 1 276 2 228 1 74 1 108 5 27 1 351 4 377 5 286 1 
2 3 23 2 322 2 169 1 46 1 330 1 142 1 277 1 276 2 228 1 74 1 108 5 27 1 351 4 377 5 286 1 
96 1 2 1 322 1 23 1 362 1 276 1 25 1 108 1 131 1 27 1 351 1 7 1 247 1 260 1 302 2 234 2 377 1 379 1 
33 1 105 1 2 1 23 1 322 2 276 1 108 1 194 1 120 1 351 1 7 1 377 1 286 1 
82 1 292 1 280 1 352 1 247 1 334 1 302 1 234 1 285 1 
191 1 22 1 334 1 
25 1 280 1 244 1 334 1 292 1 
223 1 41 1 289 1 84 1 13 1 22 1 127 2 292 2 72 1 191 1 25 1 280 2 92 1 267 1 244 2 282 1 334 1 161 2 353 1 
44 1 93 1 323 1 310 1 
327 1 70 1 44 1 187 1 93 1 180 1 323 1 
165 1 340 1 180 1 
178 1 53 1 327 3 70 1 44 1 187 1 180 3 323 1 19 1 197 2 93 1 220 1 
130 1 327 2 70 1 44 1 187 1 93 1 180 2 323 1 20 1 
235 1 53 1 327 1 70 1 34 1 187 1 180 1 323 1 317 1 266 1 17 1 
53 1 327 1 70 1 44 1 187 1 180 1 323 1 
53 1 327 1 70 1 44 2 187 1 93 1 180 1 
53 1 222 1 306 1 327 2 70 2 44 1 187 2 180 2 323 1 249 1 
53 1 327 3 179 1 70 1 44 1 187 1 180 3 140 1 323 2 266 1 93 1 20 2 320 1 
235 1 53 1 184 1 327 2 70 1 44 1 187 1 180 2 323 1 317 1 117 1 17 2 119 1 93 1 20 1 
53 1 327 4 70 2 44 1 187 2 180 4 140 1 323 2 266 1 144 1 130 1 93 1 20 2 
53 1 327 1 70 1 44 1 187 1 93 1 180 1 323 1 
178 1 327 4 70 1 44 2 187 1 180 4 140 1 323 3 266 1 19 1 243 1 197 1 93 2 20 2 
53 1 31 1 327 2 132 1 70 1 44 1 187 1 93 1 180 2 323 1 20 1 129 1 
178 1 53 1 125 1 327 3 70 1 44 1 187 1 180 3 323 1 19 2 197 2 93 1 
279 2 101 1 215 1 323 2 
53 1 327 1 70 1 149 1 187 1 180 1 
53 1 179 1 327 2 70 1 44 1 187 1 93 1 180 2 323 1 20 1 
80 1 
53 1 327 1 70 1 44 1 187 1 93 1 180 1 323 1 
53 1 179 1 327 3 70 1 197 1 44 1 187 1 93 1 180 3 323 1 20 1 
243 1 323 1 140 1 266 1 
44 1 323 1 

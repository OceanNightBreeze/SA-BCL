#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
343 1 150 1 83 2 53 9 8 2 9 1 198 6 234 1 275 1 33 2 58 1 13 1 350 1 41 1 161 2 240 1 43 1 117 2 333 2 378 1 334 5 287 3 102 9 355 1 266 4 140 1 358 2 122 1 
343 1 150 1 83 2 53 9 8 2 9 1 198 6 234 1 275 1 33 2 58 1 13 1 350 1 41 1 161 2 240 1 43 1 117 2 333 2 378 1 334 5 287 3 102 9 355 1 266 4 140 1 358 2 122 1 
343 1 150 1 83 2 53 10 8 2 9 1 198 7 234 1 275 1 33 2 58 1 13 1 350 1 41 1 161 2 240 1 43 1 117 2 333 2 378 1 334 6 287 4 102 10 355 1 266 5 140 1 358 2 122 1 
343 1 83 2 53 7 8 1 9 1 198 4 234 1 275 1 33 2 58 1 13 1 350 1 41 1 161 2 240 1 43 1 117 2 333 2 378 1 334 4 287 2 102 7 355 1 266 3 140 1 358 2 122 1 
343 1 150 1 83 1 43 1 378 1 333 1 117 1 53 4 8 2 334 3 287 1 102 4 355 1 198 3 266 2 234 1 33 1 358 1 
23 1 41 1 161 1 43 1 378 1 333 1 117 1 53 2 334 1 102 2 234 1 58 1 384 1 358 1 33 1 144 1 
161 1 43 1 378 1 333 2 117 2 53 3 334 2 287 1 102 3 198 1 266 1 234 1 122 1 
343 1 150 1 83 1 53 9 8 2 198 7 234 1 275 1 33 1 13 1 161 1 43 1 117 2 333 2 378 1 334 5 287 3 102 9 103 1 355 1 266 4 213 1 358 1 122 1 
343 1 150 1 83 1 53 9 8 2 198 7 234 1 275 1 33 1 13 1 161 1 43 1 117 2 333 2 378 1 334 5 287 3 102 9 103 1 355 1 266 4 213 1 358 1 122 1 
210 1 283 1 12 1 
210 1 177 1 370 2 
68 1 134 2 183 2 141 2 111 2 359 2 326 2 107 1 
147 1 77 1 78 1 313 1 192 2 26 1 222 1 111 3 223 1 128 1 322 1 87 1 88 1 61 1 277 1 325 1 326 3 279 1 134 2 180 1 206 1 183 2 95 1 114 1 98 1 163 2 68 1 379 1 101 2 336 1 189 2 304 1 141 2 74 2 359 2 106 1 107 1 
134 1 186 1 183 1 59 1 141 1 111 1 359 1 162 1 326 1 107 1 
347 1 283 1 328 1 271 1 111 1 365 1 226 1 264 1 210 1 186 1 359 1 158 1 64 1 326 1 
347 1 134 1 283 1 328 1 183 1 111 1 365 2 226 1 264 2 210 1 186 1 141 1 359 1 158 1 326 1 
264 1 374 1 339 1 21 1 365 1 
264 2 210 1 283 1 267 1 339 1 21 1 365 2 243 1 
264 1 21 1 365 1 
134 1 292 1 183 1 111 1 365 1 162 1 264 1 186 1 59 1 141 1 339 1 359 1 107 1 326 1 
210 1 
264 2 210 1 283 1 267 1 339 1 21 1 365 2 18 1 
14 1 0 1 283 1 341 1 181 2 362 1 273 1 365 5 381 1 254 1 264 5 210 1 197 2 267 1 200 1 339 2 35 1 324 2 21 2 
68 1 12 1 
134 1 183 1 111 2 68 2 141 1 359 2 20 1 326 2 37 1 
51 1 239 1 143 1 
147 1 77 1 180 1 192 1 272 1 95 1 111 1 222 1 223 1 68 1 101 1 88 1 74 1 106 1 325 1 326 1 
147 1 77 1 134 1 203 1 180 1 192 1 183 1 95 1 239 1 222 1 111 2 223 1 101 1 88 1 305 1 74 1 106 1 359 1 325 1 326 2 
68 1 134 3 183 3 141 1 305 1 111 3 359 3 326 3 
134 1 186 1 183 1 59 1 111 1 359 1 326 1 
134 1 186 1 183 1 141 1 111 1 359 1 20 1 326 1 37 1 
147 1 77 1 78 1 313 1 192 1 26 1 222 1 111 4 223 1 365 1 226 1 87 1 88 1 61 1 158 1 325 1 37 1 326 4 347 1 279 1 134 3 203 1 180 1 206 1 262 1 328 1 183 3 114 1 95 1 163 1 208 1 68 1 379 1 264 1 186 1 101 1 336 1 189 2 141 2 305 1 74 1 106 1 359 3 107 1 
68 1 134 1 4 1 183 1 305 1 111 2 359 2 64 1 326 2 
347 1 134 3 203 1 262 1 328 1 183 3 111 3 365 1 226 1 264 1 210 1 186 1 369 1 141 1 305 2 359 3 158 1 37 1 326 3 
134 2 51 1 183 2 111 2 239 1 305 1 141 1 359 2 37 1 326 2 
147 1 77 1 180 1 192 1 95 1 111 1 222 1 223 1 68 1 101 1 88 1 74 1 106 1 325 1 326 1 
309 1 147 1 77 1 192 1 332 1 95 1 111 1 222 1 68 1 101 1 88 1 74 1 106 1 325 1 326 1 
78 1 313 1 51 2 25 1 26 1 364 1 224 1 54 1 195 1 367 1 368 1 87 1 61 1 277 2 206 2 239 2 163 4 336 1 168 1 189 2 308 1 247 1 143 2 145 1 
134 1 186 1 328 1 183 1 32 1 111 1 359 1 326 1 
134 4 203 1 238 1 4 1 183 4 111 5 68 1 121 1 305 2 141 1 359 5 64 1 326 5 37 1 
134 2 186 1 183 2 32 1 59 1 111 2 359 2 326 2 
29 1 90 1 
29 1 90 1 
371 1 152 1 
371 1 152 1 
371 1 152 1 
56 1 29 1 90 1 
29 1 120 1 90 1 
146 1 371 1 45 1 29 2 152 1 90 2 
56 1 29 1 90 1 
56 1 29 1 90 1 
124 1 29 1 90 1 
124 1 29 1 90 1 
124 1 29 1 90 1 
39 2 22 2 202 2 216 3 125 1 294 1 24 1 6 1 365 2 45 1 264 2 210 1 265 1 29 2 382 2 233 1 90 2 132 2 113 1 
22 1 216 1 111 2 365 1 55 1 29 1 235 1 132 1 90 1 113 1 326 2 39 1 298 1 202 1 134 2 349 1 183 2 97 1 68 1 354 1 264 1 120 1 73 1 359 2 
33 1 358 1 83 1 
23 1 33 1 358 1 
23 1 142 1 358 3 363 1 241 1 83 2 
23 1 282 1 142 1 358 2 241 1 83 1 
23 1 142 1 358 2 83 1 241 2 
273 2 224 1 365 5 366 1 54 1 195 1 254 1 197 1 177 1 176 2 368 1 200 3 235 1 324 1 370 3 283 1 181 1 285 1 17 2 354 1 185 1 377 1 264 5 210 2 19 1 48 1 71 1 267 1 73 1 339 4 214 2 21 1 
170 1 273 6 224 3 365 9 366 2 54 3 195 3 254 1 85 1 197 2 177 3 176 6 368 3 274 1 60 1 235 4 200 8 35 1 324 2 370 9 40 1 283 1 374 5 181 2 42 5 285 3 17 6 377 2 264 9 118 1 210 5 71 1 267 1 339 7 21 6 
365 3 224 1 273 2 366 1 54 1 195 1 197 1 177 2 368 1 176 2 200 3 235 1 324 1 35 1 370 4 283 1 181 1 285 1 17 2 185 1 377 1 264 3 210 3 19 1 339 2 214 1 
365 4 224 2 273 4 366 1 54 2 195 2 85 1 197 1 177 3 176 4 368 2 274 1 60 1 200 5 235 2 324 1 35 1 370 7 283 1 181 1 285 2 17 4 185 1 377 1 264 4 210 4 19 1 339 3 214 2 
147 1 348 1 12 1 
147 1 179 1 
127 1 
147 1 325 1 
147 3 348 2 218 1 222 1 325 1 116 1 
147 1 222 1 325 1 
147 1 353 1 
191 1 206 3 316 1 364 2 7 1 163 7 195 1 119 1 288 1 168 3 368 1 276 1 159 1 277 4 268 1 65 1 36 2 
191 1 206 3 316 1 364 2 7 1 163 7 195 1 119 1 288 1 168 3 368 1 276 1 159 1 277 4 268 1 65 1 36 2 
191 1 206 3 316 1 364 2 7 1 163 7 195 1 119 1 288 1 168 3 368 1 57 1 276 1 159 1 277 4 268 1 65 1 36 2 
78 1 191 2 148 1 313 1 26 1 316 2 7 2 364 5 224 3 54 3 195 4 368 4 276 1 61 1 34 3 277 16 159 2 63 1 65 5 201 1 36 3 205 1 206 15 163 31 285 3 286 1 164 1 119 1 288 1 168 10 188 1 189 2 268 1 360 4 
78 2 191 1 313 2 205 1 206 4 263 1 316 1 26 2 7 1 364 3 163 9 195 1 119 1 288 1 168 4 368 1 31 1 189 4 276 1 61 2 159 1 277 5 65 1 36 2 
50 1 23 1 171 1 172 1 192 1 153 1 363 1 83 1 53 2 84 1 198 1 234 1 88 1 33 1 133 1 161 1 16 1 67 1 43 1 117 1 333 1 378 1 100 1 334 1 101 1 102 2 74 1 358 2 106 1 76 1 
50 1 23 1 172 1 192 1 153 1 363 1 83 1 53 3 198 2 234 1 88 1 33 1 133 1 161 1 16 1 67 1 43 1 117 1 333 1 244 1 100 1 334 1 165 1 101 1 102 3 74 1 358 2 106 1 75 1 76 1 
23 1 192 1 153 1 363 1 83 1 53 2 198 2 234 1 88 1 33 1 133 1 161 1 16 1 67 1 43 1 100 1 334 1 165 1 101 1 102 2 74 1 358 2 106 1 75 1 76 1 
147 1 340 1 312 1 192 1 155 1 53 1 88 1 323 1 325 1 133 2 95 1 161 2 67 2 117 1 333 1 244 1 100 2 44 1 46 1 101 1 102 1 74 1 106 1 
50 1 23 1 172 1 192 1 153 1 363 1 83 1 53 1 84 1 88 1 33 1 133 1 161 1 16 1 67 1 117 1 333 1 378 1 100 1 101 1 102 1 74 1 358 2 106 1 75 1 76 1 
317 1 
147 1 3 2 192 2 111 1 194 2 254 1 197 1 200 2 11 1 158 1 64 1 347 1 160 1 259 1 204 1 300 1 207 2 115 1 264 5 210 2 267 3 74 2 359 1 21 6 80 2 271 1 221 2 82 1 273 2 365 5 226 1 28 2 230 1 320 1 231 1 177 2 88 1 325 1 324 1 370 2 326 1 283 1 281 1 181 1 328 1 182 2 95 2 242 1 377 1 44 1 46 1 101 2 186 1 106 1 291 4 
347 1 160 1 328 1 182 1 300 1 271 1 115 1 111 1 365 3 18 1 226 1 230 1 264 3 186 1 320 1 267 1 359 1 158 1 21 2 291 2 64 1 326 1 
80 1 271 1 111 1 365 3 226 1 230 1 320 1 158 1 64 1 326 1 347 1 160 1 283 1 328 1 300 1 115 1 18 1 264 3 210 1 186 1 267 1 359 1 21 1 291 3 
80 1 3 1 271 1 111 1 365 3 226 1 230 1 320 1 158 1 64 1 326 1 347 1 160 1 283 1 328 1 182 1 300 1 115 1 18 1 264 3 210 1 186 1 267 1 359 1 291 3 21 2 
250 1 292 1 3 4 111 2 194 2 254 1 197 1 59 1 200 1 158 1 64 1 347 1 160 1 259 1 300 1 115 1 207 2 162 1 18 1 264 5 210 1 267 3 359 2 21 7 270 1 80 2 271 1 221 2 82 1 365 5 273 1 226 1 230 1 28 2 320 1 177 2 324 1 326 2 134 1 283 1 181 1 328 1 182 4 183 1 380 1 186 2 187 1 141 1 383 1 291 4 107 1 
3 2 111 1 194 2 254 1 197 1 200 1 158 1 64 1 347 1 160 1 259 1 300 1 115 1 207 2 264 4 210 2 267 2 359 1 21 4 80 2 271 1 221 2 82 1 365 4 273 1 226 1 230 1 28 2 320 1 231 1 177 2 324 1 326 1 370 2 283 1 181 1 328 1 182 2 186 1 291 4 
250 1 270 1 80 2 3 2 271 1 221 2 82 1 111 1 273 1 365 4 194 2 226 1 28 2 230 1 254 1 320 1 197 1 177 2 200 1 158 1 64 1 324 1 326 1 347 1 160 1 259 1 283 1 181 1 328 1 182 2 300 1 207 2 115 1 264 4 210 1 186 1 267 2 383 1 359 1 21 4 291 4 
250 1 270 1 80 2 3 2 271 1 221 2 82 1 111 1 273 1 365 4 194 2 226 1 28 2 230 1 254 1 320 1 197 1 177 2 200 1 158 1 64 1 324 1 326 1 347 1 160 1 259 1 283 1 181 1 328 1 182 2 300 1 207 2 115 1 264 4 210 1 186 1 267 2 383 1 359 1 21 4 291 4 
80 2 3 2 271 1 221 2 82 1 111 1 273 1 365 4 226 1 230 1 254 1 320 1 197 1 296 1 200 1 158 1 64 1 324 1 370 2 326 1 347 1 160 1 283 1 181 1 328 1 182 2 330 2 300 1 207 2 115 1 264 4 210 1 186 1 267 2 383 1 359 1 290 1 248 1 21 4 249 2 291 4 
250 1 292 1 3 3 111 2 194 2 254 1 197 1 59 1 200 1 158 1 64 1 347 1 160 1 259 1 300 1 115 1 207 2 162 1 264 4 210 1 267 2 359 2 21 5 270 1 80 3 271 1 221 2 82 1 365 4 273 1 226 1 230 1 28 2 320 1 177 2 324 1 326 2 134 1 283 1 181 1 328 1 182 3 183 1 380 1 186 2 141 1 383 1 291 5 107 1 
250 1 292 1 3 3 111 2 194 2 254 1 197 1 59 1 200 1 158 1 64 1 347 1 160 1 259 1 300 1 115 1 207 2 162 1 264 4 210 1 267 2 359 2 21 5 270 1 80 3 271 1 221 2 82 1 365 4 273 1 226 1 230 1 28 2 320 1 177 2 324 1 326 2 134 1 283 1 181 1 328 1 182 3 183 1 380 1 186 2 141 1 383 1 291 5 107 1 
80 2 3 2 271 1 221 2 82 1 111 1 273 1 365 4 226 1 230 1 254 1 320 1 231 1 197 1 200 1 158 1 324 1 64 1 370 2 326 1 347 1 160 1 283 1 181 1 328 1 182 2 330 2 300 1 207 2 115 1 264 4 210 1 186 1 267 2 359 1 248 1 21 4 249 2 291 4 
78 1 191 1 313 1 206 3 51 1 26 1 239 1 364 2 7 1 163 6 68 2 195 1 119 1 336 1 288 1 168 2 368 1 87 1 189 2 276 1 61 1 143 1 277 3 247 1 36 1 12 1 
78 2 79 1 313 2 51 4 26 2 364 1 224 2 54 1 128 1 195 1 368 2 87 2 61 2 34 3 277 8 65 1 279 1 206 6 96 1 301 1 351 1 239 11 163 14 285 2 286 1 164 1 68 1 245 1 336 1 168 2 189 4 360 3 143 11 
147 1 77 1 78 1 313 1 192 1 51 1 272 1 26 1 344 1 193 1 222 1 111 2 223 1 128 1 88 1 87 1 61 1 277 1 325 1 326 2 279 1 134 1 203 1 180 1 206 1 183 1 95 1 163 2 68 1 209 1 245 1 101 1 336 1 189 2 74 1 305 1 106 1 359 1 
147 2 191 1 192 3 51 7 111 3 7 1 54 2 195 3 196 2 61 3 65 4 203 1 206 10 114 2 163 20 68 2 119 1 168 8 74 3 305 1 359 1 75 1 77 2 78 3 313 3 315 1 26 3 222 2 364 4 223 2 224 2 173 2 229 1 128 1 368 3 87 3 88 2 276 1 277 10 325 2 36 1 326 3 279 1 134 1 180 2 183 1 95 1 376 2 137 2 239 7 285 2 245 1 101 3 288 1 336 3 47 1 189 6 106 2 143 7 
147 3 78 2 313 2 171 1 2 1 126 1 192 8 26 2 111 1 227 1 253 1 128 1 88 2 87 2 61 2 277 1 325 2 326 1 257 1 279 1 134 1 206 1 183 1 95 2 163 2 44 1 46 1 101 8 336 2 166 1 212 1 189 4 304 2 305 1 74 7 359 1 106 2 75 1 247 1 
78 1 313 1 51 1 26 1 111 1 364 1 224 1 54 1 195 1 368 1 87 1 61 1 277 1 37 1 326 1 134 1 284 1 206 2 183 1 239 1 285 1 163 3 245 1 336 1 168 1 189 2 141 1 359 1 143 1 
78 1 313 1 51 1 26 1 239 1 163 2 224 1 336 1 168 1 368 1 87 1 189 2 61 1 143 1 247 1 277 2 65 1 145 1 
78 1 313 1 206 2 51 1 26 1 239 1 364 1 163 2 54 1 195 1 336 1 367 1 168 1 87 1 189 2 61 1 143 1 247 1 
78 1 313 1 51 2 26 1 364 1 224 1 54 1 195 1 368 1 87 1 61 1 277 2 65 1 206 2 239 2 285 1 163 4 336 1 168 2 189 2 247 1 143 2 
257 1 78 1 313 1 51 1 26 1 239 1 163 2 224 1 336 1 168 1 368 1 87 1 189 2 61 1 143 1 277 2 65 1 145 1 
257 1 78 1 313 1 206 2 51 1 26 1 239 1 364 1 163 2 54 1 195 1 336 1 367 1 168 1 87 1 189 2 61 1 143 1 
78 1 313 1 51 2 26 1 364 1 224 1 54 1 195 1 368 1 87 1 61 1 277 2 65 1 257 1 206 2 239 2 285 1 163 4 336 1 168 2 189 2 143 2 
78 1 313 1 206 2 51 2 26 1 239 2 364 1 285 1 224 1 163 4 54 1 195 1 336 1 168 2 368 1 87 1 189 2 61 1 143 2 277 2 65 1 
147 1 77 1 78 1 313 1 192 1 26 1 222 1 111 1 223 1 128 1 88 1 87 1 61 1 277 1 325 1 326 1 279 1 180 1 206 1 114 1 95 1 163 2 68 1 101 1 336 1 189 2 74 1 106 1 
309 1 147 1 77 1 78 1 313 1 192 1 26 1 222 1 111 1 128 1 88 1 87 1 61 1 277 1 325 1 326 1 279 1 280 1 206 1 332 1 95 1 163 2 68 1 101 1 336 1 189 2 74 1 106 1 
78 1 313 1 51 2 26 1 364 1 224 1 54 1 195 1 368 1 87 1 61 1 277 2 65 1 206 2 239 2 285 1 163 4 245 1 336 1 168 2 189 2 143 2 
147 1 77 1 78 1 313 1 171 1 51 2 192 1 26 1 222 1 111 1 364 1 223 1 224 1 54 1 195 1 196 1 368 1 88 1 87 1 61 1 277 2 65 1 325 1 326 1 180 1 206 2 114 1 239 2 163 4 285 1 101 1 336 1 168 2 189 2 74 1 106 1 143 2 
78 1 313 1 51 1 26 1 111 1 224 1 54 1 195 1 368 1 87 1 61 1 277 2 65 1 37 1 326 1 134 1 206 1 15 1 183 1 239 1 285 1 163 3 245 1 336 1 168 1 189 2 141 1 359 1 143 1 
78 2 311 1 313 2 219 2 26 2 364 3 224 3 54 3 195 3 346 1 368 3 89 1 62 2 61 2 34 1 277 9 65 3 327 1 206 10 263 1 94 1 163 19 285 3 286 1 164 1 168 6 189 4 338 1 360 2 215 1 
78 3 313 3 109 1 219 1 26 3 251 1 364 2 224 3 318 1 54 2 195 2 346 1 368 3 89 1 62 4 61 3 255 1 34 2 277 14 65 2 327 2 205 2 206 12 263 1 163 26 285 3 164 2 69 1 356 1 168 4 189 6 338 2 360 2 215 1 
78 3 191 1 311 1 313 3 109 1 219 1 26 3 251 1 7 1 364 4 224 4 318 1 54 4 195 5 346 1 368 5 276 1 89 1 112 1 62 4 61 3 255 1 34 3 277 20 65 4 36 1 327 1 205 1 206 21 263 1 163 41 285 4 286 1 164 3 119 1 69 1 288 1 356 1 168 8 189 6 338 2 360 4 215 1 
78 4 191 1 311 1 313 4 109 1 219 1 26 4 251 1 7 1 364 4 224 4 318 1 54 3 195 4 346 1 368 5 276 1 89 1 112 1 62 4 61 4 255 1 34 3 277 20 65 3 36 1 327 1 205 2 206 18 263 1 163 38 285 4 286 1 164 3 119 1 69 1 288 1 356 1 168 7 189 8 338 2 360 4 215 1 
78 2 191 1 313 2 109 1 219 1 26 2 251 1 7 1 364 7 224 7 318 1 54 7 195 8 346 1 368 8 276 1 89 1 62 4 61 2 255 1 34 4 277 27 65 7 36 1 327 1 205 1 206 25 263 1 96 2 163 52 285 7 286 2 164 2 119 1 69 1 288 1 356 1 168 14 189 4 338 1 360 4 215 1 
39 1 22 1 202 1 260 1 86 1 29 1 105 1 90 1 132 1 246 1 
120 1 97 1 
22 1 39 1 299 1 202 1 303 1 175 1 29 1 132 1 90 1 
39 1 22 1 202 1 216 2 125 1 294 1 24 1 6 1 365 1 45 1 264 1 210 1 265 1 29 1 382 1 90 1 132 1 113 1 
39 1 22 1 202 1 216 2 125 1 294 1 24 1 6 1 365 1 45 1 264 1 210 1 265 1 29 1 382 1 90 1 132 1 113 1 
39 1 22 1 202 1 216 2 125 1 294 1 24 1 6 1 365 1 45 1 264 1 210 1 265 1 29 1 382 1 90 1 132 1 113 1 
146 1 56 1 108 1 
146 1 56 1 108 1 
124 1 232 1 
146 1 124 1 232 1 
298 1 55 1 
22 1 216 1 294 1 5 1 111 2 365 1 55 1 29 1 235 1 132 1 90 1 326 2 39 1 298 1 202 1 134 2 349 1 183 2 97 1 68 1 354 1 264 1 382 1 120 1 73 1 339 1 359 2 
56 1 108 1 
146 1 124 1 232 1 
147 1 78 1 313 1 192 2 314 1 110 1 26 1 111 2 128 1 88 1 87 1 61 1 277 1 325 1 326 2 92 1 279 1 258 1 206 1 163 2 245 1 101 2 336 1 166 1 212 1 104 1 189 2 304 2 74 2 106 1 359 2 
23 1 171 1 172 1 192 2 331 1 153 1 363 1 16 1 83 1 67 1 101 2 30 1 88 1 178 1 33 1 358 2 74 2 106 1 75 1 
23 1 172 1 192 1 153 1 363 1 295 1 16 1 83 1 67 1 101 1 30 1 88 1 33 1 358 2 74 1 106 1 75 1 
147 1 312 1 192 1 331 1 95 1 67 1 44 1 46 1 101 1 88 1 74 1 106 1 325 1 190 1 
23 1 172 1 192 1 331 1 153 1 363 1 16 1 83 1 67 1 101 1 30 1 178 1 88 1 33 1 358 2 74 1 106 1 75 1 
93 1 
381 1 210 1 283 1 341 1 200 1 273 1 12 1 
259 1 283 1 181 1 365 1 273 1 194 1 28 1 264 1 254 1 210 2 197 1 177 1 267 1 200 1 21 1 324 1 370 1 
147 10 341 1 192 3 54 2 254 4 195 2 197 4 200 9 347 2 261 2 204 1 348 2 66 1 116 1 353 2 17 6 264 5 210 8 167 1 72 2 267 3 74 3 21 5 217 2 171 1 81 2 222 3 365 5 224 2 273 8 228 1 173 2 176 6 177 6 368 2 88 3 325 3 324 4 38 1 370 12 278 2 179 3 283 2 372 2 181 4 237 1 95 1 375 2 285 2 377 2 381 1 335 2 101 3 106 4 
217 2 81 1 109 1 251 1 365 1 27 1 273 5 224 2 318 1 54 2 254 2 195 2 197 2 130 1 176 5 177 3 368 2 200 8 255 1 34 1 324 2 370 6 283 2 204 1 181 2 285 2 17 5 377 1 164 1 264 1 69 1 210 5 267 1 360 1 21 1 
217 2 191 1 270 1 292 1 149 1 81 1 111 1 7 1 365 1 273 2 254 1 195 1 197 1 368 2 59 1 276 1 200 2 324 1 326 1 134 1 181 1 183 1 162 1 264 1 186 1 141 1 359 1 107 1 
341 1 283 1 181 1 273 1 254 1 381 1 210 1 197 1 200 1 324 1 
217 2 81 1 285 2 224 2 273 5 17 5 173 1 54 2 195 2 210 5 368 2 176 5 177 5 200 5 370 10 
264 1 210 1 283 1 267 1 365 1 21 1 
147 2 293 1 192 4 52 1 222 1 273 2 365 3 254 1 321 1 197 2 88 2 11 1 200 2 35 1 325 2 324 2 38 1 281 1 181 2 204 2 95 2 99 1 352 1 377 2 44 1 264 3 302 1 46 1 101 4 167 2 267 2 74 4 106 3 21 4 
147 1 77 1 78 1 313 1 192 1 26 1 111 3 222 1 223 1 88 1 87 1 61 1 325 1 326 3 279 1 134 2 180 1 206 1 183 2 95 1 114 1 163 1 68 1 379 1 101 1 336 1 189 2 74 1 141 2 359 2 106 1 107 1 
283 2 181 1 204 1 273 2 17 2 377 1 254 1 210 4 197 1 176 2 177 2 200 1 324 1 36 1 370 4 
202 1 329 1 132 1 
269 1 55 1 202 1 24 1 132 1 
202 1 329 1 132 1 
202 1 329 1 132 1 
202 1 132 1 225 1 
202 1 132 1 225 1 
202 1 132 1 225 1 
202 1 132 1 
29 1 90 1 
78 2 191 1 313 2 205 1 206 4 26 2 364 2 7 1 163 8 195 1 119 1 288 1 168 3 368 1 189 4 276 1 61 2 277 4 65 1 36 1 
191 1 206 3 7 1 364 2 163 6 195 1 119 1 288 1 168 2 368 1 276 1 277 3 36 1 12 1 
78 1 313 1 206 2 26 1 364 1 285 1 224 1 163 4 54 1 195 1 138 1 168 2 368 1 189 2 61 1 277 2 65 1 
206 4 364 1 163 7 285 1 224 1 286 1 164 1 54 1 195 1 168 2 368 1 34 1 360 2 277 3 65 1 
78 2 191 2 313 2 26 2 7 2 364 5 224 2 319 1 54 2 195 3 368 3 276 1 61 2 34 2 277 11 65 4 36 1 205 2 206 12 301 1 96 1 285 2 163 23 286 1 119 1 288 1 168 9 189 4 360 2 
206 1 360 1 163 1 
34 1 277 1 163 1 
78 1 313 1 206 3 26 1 364 2 163 6 285 1 224 1 173 1 54 1 195 1 138 1 168 3 368 1 189 2 61 1 277 3 65 1 
78 1 313 1 109 1 26 1 251 1 364 1 224 2 318 1 54 2 195 2 368 2 61 1 34 1 255 1 277 6 65 1 206 6 263 1 163 12 285 2 164 1 69 1 168 2 189 2 360 1 
191 1 206 3 7 1 364 1 163 6 195 1 168 2 368 1 276 1 277 3 65 1 
78 1 191 1 313 1 205 1 206 2 26 1 364 1 7 1 163 3 319 1 119 1 288 1 168 2 189 2 61 1 277 1 65 1 
78 1 191 2 313 1 149 1 206 5 263 1 26 1 7 2 364 3 163 10 195 2 168 5 368 2 189 2 276 1 61 1 277 5 65 2 
78 1 313 1 263 1 26 1 224 1 163 2 168 1 368 1 189 2 61 1 277 2 65 1 
78 1 313 1 206 2 263 1 26 1 364 1 285 1 224 1 163 4 54 1 195 1 168 2 368 1 189 2 61 1 277 2 65 1 
78 3 191 1 311 1 313 3 205 1 206 2 263 1 26 3 7 1 364 1 163 3 319 1 168 2 189 6 61 3 277 1 65 1 
78 5 191 3 148 1 311 1 313 5 26 5 7 3 364 7 224 3 319 1 54 3 195 5 368 5 276 2 61 5 34 3 63 1 277 16 65 5 36 1 205 2 206 18 263 1 163 34 285 3 286 1 164 1 119 1 288 1 138 1 168 12 188 1 189 10 360 4 
78 1 191 1 313 1 206 4 263 1 26 1 364 2 7 1 163 8 164 1 195 1 119 1 69 1 288 1 168 2 368 1 189 2 276 1 61 1 34 1 277 4 360 1 36 1 
78 2 191 1 313 2 26 2 364 2 7 1 224 1 195 1 368 2 276 1 61 2 34 1 277 6 65 1 36 1 206 5 263 1 163 11 285 1 286 1 164 1 119 1 69 1 288 1 138 1 168 3 189 4 360 2 
78 3 191 1 313 3 109 1 26 3 251 1 7 1 364 3 224 2 318 1 54 2 195 3 368 3 276 1 61 3 255 1 34 1 277 9 65 1 36 1 205 1 206 10 263 1 163 19 285 2 164 1 119 1 69 1 288 1 138 1 168 4 189 6 360 1 
78 3 191 1 313 3 109 1 26 3 251 1 7 1 364 3 224 2 318 1 54 1 195 2 368 3 276 1 61 3 34 1 255 1 277 10 65 2 36 1 205 1 206 7 263 1 163 17 285 2 164 1 119 1 69 1 288 1 138 1 168 5 189 6 360 1 
78 1 191 1 313 1 206 4 263 1 26 1 364 2 7 1 163 8 164 1 195 1 119 1 69 1 288 1 168 2 368 1 189 2 276 1 61 1 34 1 277 4 360 1 36 1 
78 1 313 1 109 1 26 1 251 1 364 1 224 2 318 1 54 2 195 2 368 2 61 1 34 1 255 1 277 6 65 1 206 6 263 1 163 12 285 2 164 1 69 1 168 2 189 2 360 1 
78 4 191 1 313 4 109 1 26 4 251 1 7 1 364 3 224 2 318 1 54 1 195 2 368 3 276 1 61 4 255 1 34 1 277 10 65 2 36 1 205 2 206 8 263 1 163 18 285 2 164 1 119 1 69 1 288 1 138 1 168 5 189 8 360 1 
78 4 313 4 311 1 109 1 26 4 251 1 364 3 224 3 318 1 54 2 195 2 368 3 61 4 255 1 34 1 277 9 65 3 205 2 206 7 263 1 163 16 285 3 164 1 69 1 168 6 189 8 360 1 
191 3 206 4 7 3 364 3 163 7 195 1 119 1 288 2 168 6 368 1 276 1 277 3 65 3 
78 4 191 1 313 4 311 1 109 1 26 4 251 1 7 1 364 3 224 2 318 1 54 1 195 2 368 3 276 1 61 4 255 1 34 1 277 10 65 1 36 1 205 2 206 8 263 1 163 18 285 2 164 1 119 1 69 1 288 1 168 4 189 8 360 1 
68 1 4 1 111 1 359 1 49 1 64 1 326 1 
1 1 4 1 111 1 68 1 129 1 10 1 289 1 306 1 49 1 359 1 64 1 326 1 
147 1 44 1 46 1 101 1 192 1 88 1 74 1 95 1 106 1 325 1 12 1 
147 1 77 1 134 1 192 1 183 1 95 1 222 1 111 2 223 1 68 1 101 1 88 1 305 1 74 1 106 1 359 1 325 1 326 2 
147 3 77 1 134 1 261 1 328 1 192 1 183 2 222 2 111 2 223 1 353 1 226 1 68 1 186 1 101 1 167 1 88 1 305 1 74 1 106 1 359 2 325 2 326 2 
147 3 309 1 77 1 134 1 261 1 328 1 192 2 183 2 136 1 222 2 111 2 353 1 226 1 68 1 186 1 101 2 167 1 88 1 305 1 74 2 106 1 359 2 325 2 326 2 
347 1 147 4 179 1 283 1 135 1 261 1 348 1 192 3 136 1 95 1 222 1 365 2 353 1 264 2 210 1 101 3 167 1 88 1 74 3 106 1 325 1 256 1 21 1 
347 1 147 4 179 1 283 1 261 1 348 1 192 3 136 1 95 1 222 1 365 2 353 1 264 2 335 1 210 1 101 3 167 1 88 1 74 3 106 1 325 1 21 1 
101 1 2 1 192 1 88 1 74 1 106 1 
147 3 171 1 373 1 2 1 126 1 192 7 95 2 52 1 222 1 227 1 116 1 253 1 302 1 101 7 212 1 304 1 88 2 74 6 106 3 75 1 325 2 
147 1 191 1 51 1 192 1 111 2 7 1 195 1 196 1 61 2 206 3 114 1 163 6 68 2 119 1 168 2 74 1 305 1 359 1 77 1 78 2 313 2 171 1 26 2 222 1 223 1 364 2 368 1 87 2 88 1 276 1 277 3 325 1 326 2 36 1 134 1 180 1 183 1 376 1 239 1 245 1 101 1 336 2 288 1 104 1 189 4 106 1 143 1 
147 2 341 1 192 1 273 1 365 3 254 2 197 2 200 1 324 2 38 1 278 1 347 1 179 1 283 1 372 1 181 2 348 1 95 1 381 1 264 3 335 1 210 1 101 1 72 1 267 1 74 1 339 1 21 2 
147 2 171 1 348 1 237 1 2 1 192 2 222 1 116 1 101 2 88 1 74 2 106 2 325 1 
147 1 171 1 192 4 136 1 154 1 95 1 44 1 46 1 101 4 88 1 74 4 106 1 325 1 
147 1 293 1 192 2 52 1 222 1 352 1 302 1 101 2 167 1 47 1 88 1 74 2 106 2 325 1 
23 1 101 1 192 1 88 1 33 1 358 1 74 1 95 1 106 1 16 1 
147 1 258 1 101 2 171 1 212 1 192 2 88 1 74 2 106 1 75 1 325 1 
147 3 171 1 126 1 192 5 154 1 95 1 44 1 253 1 46 1 101 5 167 1 212 1 88 2 74 4 106 2 325 2 
147 3 171 1 126 1 192 5 154 1 95 1 44 1 46 1 101 5 167 1 70 1 212 1 88 2 74 4 106 2 325 2 
147 1 309 1 77 1 134 1 192 1 183 1 95 1 222 1 111 2 68 1 101 1 88 1 305 1 74 1 106 1 359 1 325 1 326 2 
147 1 373 1 192 1 52 1 222 1 116 1 302 1 101 1 167 1 88 1 74 1 106 2 325 1 
92 1 342 1 361 1 314 1 151 1 110 1 111 1 359 1 326 1 
345 1 169 1 361 1 
68 1 342 1 151 1 361 1 184 1 
347 1 283 1 342 2 328 1 262 1 361 1 151 2 365 2 226 1 184 2 68 1 264 2 210 1 345 1 186 1 169 1 307 1 339 1 158 1 
43 1 334 1 234 1 12 1 
43 1 53 1 117 1 333 1 334 1 102 1 234 1 
100 1 102 1 161 1 
236 1 123 1 220 1 378 1 333 1 117 1 53 3 43 1 334 1 102 3 234 1 58 2 
43 1 53 2 117 1 333 1 334 1 8 1 102 2 198 1 234 1 
343 1 83 1 378 1 333 1 117 1 53 1 334 1 102 1 266 1 358 1 33 1 
53 1 117 1 333 1 378 1 334 1 102 1 234 1 
43 1 53 1 117 1 333 1 378 1 102 1 234 2 
378 1 333 2 117 2 53 2 174 1 334 1 157 1 102 2 199 1 234 1 
13 1 43 1 378 1 333 1 117 1 53 3 334 2 287 1 102 3 198 2 266 1 234 1 275 1 
23 1 363 1 156 1 83 1 43 1 378 1 333 1 117 1 53 2 334 1 102 2 198 1 234 1 358 2 33 1 
150 1 43 1 378 1 333 2 117 2 53 4 8 1 334 2 287 1 102 4 198 2 266 1 234 1 
43 1 53 1 117 1 333 1 378 1 334 1 102 1 234 1 
123 1 220 1 252 1 43 2 53 4 333 1 117 1 334 3 287 1 102 4 198 2 266 1 234 2 58 1 
378 1 333 1 117 1 53 2 43 1 334 1 102 2 198 1 211 1 234 1 139 1 213 1 
123 2 310 1 220 1 378 1 333 1 117 1 53 3 43 1 334 1 102 3 234 1 58 2 
297 2 334 2 357 1 91 1 
53 1 117 1 333 1 378 1 102 1 131 1 
43 1 53 2 117 1 333 1 378 1 334 1 102 2 198 1 234 1 275 1 
337 1 
43 1 53 1 117 1 333 1 378 1 334 1 102 1 234 1 
43 1 53 3 117 1 333 1 378 1 334 1 102 3 198 1 275 1 234 1 58 1 
334 1 287 1 266 1 252 1 
334 1 234 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 213 (231,295) (231,295) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 9 354 2 20 1 112 9 338 2 248 1 48 1 231 1 342 1 98 1 314 2 368 1 151 1 295 1 31 1 100 2 373 1 210 2 251 1 59 6 375 1 62 2 213 4 163 1 102 4 105 1 330 2 167 3 
42 9 354 2 20 1 112 9 338 2 248 1 48 1 231 1 342 1 98 1 314 2 368 1 151 1 295 1 31 1 100 2 373 1 210 2 251 1 59 6 375 1 62 2 213 4 163 1 102 4 105 1 330 2 167 3 
42 10 354 2 20 1 112 10 338 2 248 1 48 1 231 1 342 1 98 1 314 2 368 1 151 1 295 1 31 1 100 2 373 1 210 2 251 1 59 7 375 1 62 2 213 5 163 1 102 5 105 1 330 2 167 4 
42 7 354 2 20 1 112 7 338 2 248 1 48 1 231 1 342 1 98 1 314 2 368 1 151 1 295 1 31 1 100 1 210 2 251 1 59 4 375 1 62 2 213 3 163 1 102 3 105 1 330 2 167 2 
42 4 314 1 354 1 20 1 295 1 112 4 100 2 373 1 59 3 338 1 62 1 213 2 163 1 102 2 231 1 105 1 167 1 330 1 
42 2 98 1 354 1 295 1 264 1 142 1 112 2 210 1 251 1 338 1 62 1 231 1 105 1 136 1 330 1 
42 3 354 2 295 1 31 1 112 3 210 1 59 1 213 1 102 1 231 1 105 1 330 2 167 1 
42 9 217 1 354 2 20 1 112 9 8 1 338 1 48 1 231 1 314 1 295 1 31 1 100 2 210 1 373 1 59 7 375 1 213 4 62 1 163 1 102 4 105 1 167 3 330 2 
42 9 217 1 354 2 20 1 112 9 8 1 338 1 48 1 231 1 314 1 295 1 31 1 100 2 210 1 373 1 59 7 375 1 213 4 62 1 163 1 102 4 105 1 167 3 330 2 
118 1 247 1 121 1 
118 1 291 1 181 2 
24 2 277 2 82 2 341 2 244 2 289 1 79 2 147 1 
218 1 195 1 223 2 46 1 244 3 266 1 24 3 70 1 145 1 229 1 341 2 123 1 28 1 11 1 289 1 147 1 176 2 29 1 292 1 180 1 76 1 182 2 317 1 184 1 276 1 79 2 322 1 277 2 211 1 61 1 324 2 255 1 82 2 328 1 63 2 39 1 64 1 
24 1 277 1 82 1 37 1 341 1 244 1 79 1 147 1 69 1 92 1 
244 1 69 1 320 1 118 1 24 1 254 1 121 1 82 1 350 1 134 1 257 1 288 1 124 1 281 1 
244 1 79 1 69 1 320 1 118 1 24 1 277 1 254 2 121 1 82 1 350 1 257 2 341 1 288 1 281 1 
43 1 205 1 254 1 257 1 319 1 
118 1 43 1 205 1 19 1 254 2 121 1 13 1 257 2 
43 1 254 1 257 1 
205 1 371 1 244 1 79 1 69 1 92 1 24 1 277 1 254 1 82 1 37 1 257 1 341 1 147 1 
118 1 
118 1 43 1 205 1 19 1 254 2 121 1 257 2 307 1 
205 2 43 2 19 1 12 1 224 1 225 1 23 2 116 1 118 1 374 1 254 5 121 1 227 1 364 1 191 2 300 1 257 5 122 1 202 2 
111 1 317 1 184 1 223 1 46 1 244 2 131 1 79 1 24 2 277 1 211 1 82 1 229 1 28 1 39 1 63 1 11 1 29 1 312 1 176 1 
247 1 289 1 
244 2 79 1 24 2 277 1 160 1 82 2 341 1 27 1 289 2 
162 1 111 1 110 1 
317 1 184 1 223 1 46 1 244 1 24 1 211 1 363 1 229 1 63 1 11 1 39 1 28 1 289 1 176 1 29 1 
24 3 277 3 82 3 341 1 244 3 289 1 79 3 312 1 
24 1 277 1 82 1 37 1 244 1 79 1 69 1 
24 1 277 1 160 1 82 1 341 1 27 1 244 1 79 1 69 1 
195 1 223 1 46 1 244 4 69 1 24 4 70 1 145 1 229 1 341 2 288 1 28 1 11 1 289 1 147 1 29 1 312 1 176 1 292 1 76 1 182 2 317 1 184 1 276 1 79 3 131 1 320 1 322 1 277 3 211 1 61 1 158 1 254 1 324 1 160 1 255 1 82 3 350 1 256 1 257 1 328 1 39 1 63 1 281 1 
94 1 24 2 277 1 82 2 134 1 244 2 289 1 79 1 312 1 
306 1 244 3 131 1 79 3 320 1 69 1 118 1 24 3 277 3 254 1 158 1 160 1 82 3 350 1 341 1 257 1 288 1 281 1 312 2 
24 2 277 2 160 1 82 2 162 1 111 1 341 1 244 2 79 2 312 1 
184 1 317 1 223 1 46 1 244 1 24 1 211 1 229 1 63 1 11 1 39 1 28 1 289 1 176 1 29 1 
184 1 317 1 223 1 244 1 24 1 117 1 211 1 348 1 229 1 63 1 39 1 28 1 289 1 176 1 29 1 
218 2 111 2 357 1 114 1 119 1 271 1 95 1 70 1 273 1 145 1 290 1 311 1 292 1 76 1 182 2 276 1 58 1 322 2 61 1 324 4 162 2 380 1 261 1 110 2 
24 1 277 1 82 1 89 1 244 1 281 1 79 1 69 1 
51 1 244 5 113 1 79 4 131 1 94 1 24 5 277 4 160 1 82 5 134 1 341 1 289 1 312 2 
24 2 277 2 82 2 37 1 89 1 244 2 79 2 69 1 
189 1 38 1 
189 1 38 1 
298 1 137 1 
298 1 137 1 
298 1 137 1 
189 1 221 1 38 1 
352 1 189 1 38 1 
189 2 175 1 298 1 38 2 318 1 137 1 
189 1 221 1 38 1 
189 1 221 1 38 1 
186 1 189 1 38 1 
186 1 189 1 38 1 
186 1 189 1 38 1 
262 1 367 2 45 1 369 2 15 1 32 1 245 1 16 2 118 1 189 2 120 1 157 1 254 2 175 1 38 2 257 2 326 2 258 2 201 3 
352 1 333 1 86 1 226 1 244 2 24 2 120 1 289 1 201 1 367 1 369 1 30 1 56 1 249 1 79 2 277 2 189 1 254 1 376 1 82 2 38 1 257 1 326 1 258 1 
338 1 314 1 62 1 
338 1 62 1 136 1 
178 1 53 1 314 2 62 3 136 1 149 1 
178 1 314 1 207 1 62 2 136 1 149 1 
178 2 314 1 62 2 136 1 149 1 
43 1 86 1 19 1 140 1 224 1 22 1 23 1 118 2 119 1 271 1 362 1 365 2 121 1 122 2 275 1 290 1 202 1 291 1 205 4 55 2 181 3 30 1 58 1 347 2 132 1 188 1 374 3 254 5 376 1 101 1 191 1 257 5 
43 6 19 1 140 3 224 1 196 1 337 1 22 1 23 2 118 5 269 1 119 3 271 3 365 6 121 1 122 6 275 2 290 3 202 2 291 3 150 5 205 7 12 1 181 9 30 4 185 1 58 3 347 6 319 5 188 2 374 8 81 1 254 9 191 2 257 9 214 1 
140 1 23 1 118 3 119 1 271 1 362 1 121 1 365 2 122 2 275 1 290 1 202 1 291 2 205 2 12 1 55 1 181 4 30 1 58 1 347 2 188 1 374 3 254 3 101 1 191 1 257 3 
140 2 23 1 118 4 269 1 119 2 271 2 362 1 121 1 365 4 122 4 275 1 290 2 202 1 291 3 205 3 12 1 55 2 181 7 30 2 185 1 58 2 347 4 188 1 374 5 81 1 254 4 101 1 191 1 257 4 
247 1 317 1 138 1 
252 1 317 1 
208 1 
317 1 229 1 
317 3 200 1 229 1 28 1 5 1 138 2 
317 1 229 1 28 1 
159 1 317 1 
193 1 54 1 218 4 357 2 372 1 115 1 322 2 119 1 212 1 190 1 324 6 287 2 380 3 146 1 290 1 106 1 125 1 
193 1 54 1 218 4 357 2 372 1 115 1 322 3 119 1 212 1 190 1 324 7 287 2 380 3 146 1 290 1 106 1 125 1 
193 1 54 1 218 4 357 2 372 1 115 1 322 2 119 1 360 1 212 1 190 1 324 6 287 2 380 3 146 1 290 1 106 1 125 1 
193 1 218 21 283 4 336 3 357 9 140 3 197 1 115 1 119 6 271 3 285 1 70 1 287 3 146 5 125 3 290 6 54 2 292 1 313 1 76 1 182 2 152 1 276 1 58 3 372 1 322 22 212 2 190 3 324 43 83 1 278 1 327 1 380 14 106 2 192 1 
193 1 218 5 357 4 119 1 361 1 70 2 287 2 146 1 290 1 125 1 343 1 54 1 292 2 313 1 76 2 182 4 276 2 372 1 322 5 212 1 324 10 190 1 380 5 106 1 
42 2 66 1 237 1 354 1 240 1 88 1 223 1 90 1 112 2 359 1 268 1 338 1 309 1 231 1 176 1 203 1 53 1 314 1 184 1 295 1 57 1 210 1 59 1 62 2 63 1 39 1 105 1 136 1 330 1 
42 3 66 1 237 1 354 1 240 1 88 1 223 1 90 1 112 3 359 1 268 1 338 1 286 1 231 1 176 1 203 1 53 1 179 1 314 1 184 1 346 1 295 1 210 1 59 2 62 2 63 1 39 1 136 1 330 1 
42 2 66 1 240 1 88 1 223 1 90 1 112 2 359 1 338 1 286 1 231 1 176 1 203 1 53 1 314 1 184 1 346 1 295 1 210 1 59 2 62 2 63 1 39 1 136 1 
42 1 85 1 304 1 354 1 240 2 223 1 88 2 90 2 112 1 199 1 229 1 176 1 179 1 317 1 184 1 250 1 210 2 211 1 377 1 301 1 39 1 63 1 330 1 
203 1 42 1 53 1 66 1 314 1 237 1 354 1 184 1 240 1 346 1 223 1 88 1 90 1 112 1 210 1 359 1 268 1 338 1 62 2 309 1 39 1 63 1 136 1 105 1 330 1 176 1 
171 1 
331 1 85 1 43 6 239 1 141 1 3 1 244 1 91 1 288 1 202 1 291 2 155 2 211 2 254 5 350 1 164 4 257 5 63 2 65 2 19 3 223 2 224 1 23 1 69 1 118 2 24 1 121 1 229 1 122 2 230 2 124 1 275 1 176 2 126 1 75 2 181 2 317 1 184 1 183 1 78 1 370 1 80 2 320 1 321 1 233 2 374 2 234 1 325 1 377 1 82 1 191 1 235 2 134 1 39 1 281 1 
43 2 19 1 239 1 307 1 244 1 69 1 24 1 288 1 124 1 183 1 370 1 320 1 321 1 254 3 234 1 82 1 350 1 164 2 134 1 257 3 235 1 281 1 
43 1 19 1 239 1 307 1 244 1 69 1 24 1 118 1 121 1 288 1 124 1 183 1 370 1 320 1 80 1 321 1 254 3 234 1 82 1 350 1 164 3 134 1 257 3 281 1 
43 2 19 1 239 1 307 1 244 1 69 1 24 1 118 1 121 1 288 1 124 1 75 1 183 1 370 1 320 1 80 1 321 1 254 3 234 1 82 1 350 1 164 3 134 1 257 3 235 1 281 1 
43 7 44 1 239 1 244 1 93 1 288 1 202 1 50 1 291 2 155 2 254 5 350 1 164 6 257 5 65 2 215 1 19 3 169 1 224 1 307 1 23 1 69 1 24 1 118 5 121 5 122 1 230 2 124 1 126 1 75 4 183 1 370 1 320 1 80 4 321 1 374 1 233 2 234 1 325 1 82 1 191 1 235 4 134 1 281 1 
331 1 43 4 239 1 244 1 288 1 202 1 291 2 155 2 254 4 350 1 164 4 257 4 65 2 19 2 224 1 23 1 69 1 24 1 118 2 121 1 122 1 230 2 124 1 126 1 75 2 181 2 183 1 370 1 320 1 80 2 321 1 374 1 233 2 234 1 325 1 82 1 191 1 134 1 235 2 281 1 
215 1 43 4 19 2 44 1 239 1 224 1 244 1 23 1 69 1 93 1 118 1 24 1 121 1 122 1 288 1 230 2 124 1 202 1 291 2 126 1 75 2 183 1 370 1 155 2 80 2 320 1 321 1 233 2 374 1 254 4 234 1 325 1 82 1 191 1 350 1 164 4 235 2 134 1 257 4 65 2 281 1 
215 1 43 4 19 2 44 1 239 1 224 1 244 1 23 1 69 1 93 1 118 1 24 1 121 1 122 1 288 1 230 2 124 1 202 1 291 2 126 1 75 2 183 1 370 1 155 2 80 2 320 1 321 1 233 2 374 1 254 4 234 1 325 1 82 1 191 1 350 1 164 4 235 2 134 1 257 4 65 2 281 1 
43 4 194 2 1 2 19 2 44 1 239 1 47 1 224 1 244 1 23 1 69 1 118 1 24 1 121 1 122 1 288 1 230 2 124 1 202 1 366 1 126 1 52 1 75 2 181 2 183 1 370 1 155 2 80 2 320 1 321 1 374 1 254 4 234 1 82 1 191 1 350 1 164 4 235 2 134 1 257 4 281 1 
215 1 43 5 19 2 44 1 239 1 224 1 244 1 23 1 93 1 69 1 118 1 24 1 121 1 122 1 288 1 230 2 124 1 202 1 50 1 291 2 126 1 75 3 183 1 370 1 155 2 320 1 80 3 321 1 233 2 374 1 254 4 234 1 325 1 82 1 191 1 350 1 164 5 134 1 257 4 235 3 65 2 281 1 
215 1 43 5 19 2 44 1 239 1 224 1 244 1 23 1 93 1 69 1 118 1 24 1 121 1 122 1 288 1 230 2 124 1 202 1 50 1 291 2 126 1 75 3 183 1 370 1 155 2 320 1 80 3 321 1 233 2 374 1 254 4 234 1 325 1 82 1 191 1 350 1 164 5 134 1 257 4 235 3 65 2 281 1 
331 1 1 2 194 2 43 4 239 1 244 1 288 1 202 1 52 1 155 2 254 4 350 1 164 4 257 4 19 2 224 1 23 1 69 1 24 1 118 1 121 1 122 1 230 2 124 1 126 1 75 2 181 2 183 1 370 1 320 1 80 2 321 1 374 1 234 1 82 1 191 1 134 1 235 2 281 1 
193 1 218 3 111 1 357 1 119 1 247 1 95 1 70 1 145 1 287 1 289 2 125 1 290 1 292 1 76 1 182 2 276 1 372 1 322 2 61 1 190 1 324 5 162 1 380 1 106 1 110 1 
332 1 218 10 195 1 283 4 111 13 336 3 357 1 140 3 265 1 197 2 266 1 119 3 271 1 70 2 145 1 146 1 289 1 290 1 74 1 292 2 76 2 182 4 152 1 276 2 58 3 322 7 156 1 61 2 324 17 162 4 380 2 104 1 110 13 
219 1 218 1 195 1 223 1 46 1 241 1 244 2 266 1 24 2 363 1 70 1 229 1 145 1 28 1 11 1 289 1 29 1 176 1 312 1 292 1 76 1 317 1 184 1 182 2 276 1 79 1 131 1 322 1 211 1 277 1 156 1 61 1 324 2 82 1 162 1 379 1 39 1 63 1 
193 1 0 1 41 2 195 1 140 2 46 2 244 3 96 2 287 1 145 3 11 2 146 4 289 2 290 3 292 3 346 1 58 2 211 1 156 1 61 3 162 7 302 1 63 3 106 1 110 7 218 10 222 2 111 7 357 3 223 3 172 1 266 1 24 3 119 3 271 2 70 3 229 2 28 2 125 1 176 3 312 1 29 2 315 2 76 3 182 6 184 2 317 2 276 3 372 1 131 1 79 1 322 9 277 1 190 1 324 19 82 1 328 2 380 7 39 2 
303 1 85 1 218 1 195 1 305 1 223 7 244 1 308 1 266 1 24 1 95 1 70 2 145 2 229 2 123 2 312 1 176 8 292 2 76 2 128 1 184 2 317 3 182 4 346 1 276 2 57 1 79 1 322 1 277 1 211 2 61 2 324 2 82 1 377 1 103 1 39 2 63 8 166 1 260 1 
218 1 111 1 357 1 140 1 244 1 24 1 119 1 271 1 70 1 341 1 145 1 290 1 292 1 76 1 182 2 276 1 58 1 79 1 187 1 322 2 277 1 156 1 61 1 160 1 324 3 82 1 162 1 380 1 110 1 
292 1 218 2 76 1 111 1 182 2 276 1 58 1 119 1 61 1 324 2 95 1 162 1 70 1 273 1 145 1 380 1 146 1 110 1 
292 1 76 1 111 1 182 2 357 1 276 1 322 2 61 1 324 2 95 1 271 1 162 1 70 1 145 1 380 1 290 1 110 1 261 1 
218 2 111 2 140 1 357 1 119 1 95 1 271 1 70 1 145 1 146 1 290 1 292 1 76 1 182 2 276 1 58 1 322 2 61 1 324 4 162 2 380 2 110 2 
292 1 218 2 76 1 111 1 182 2 276 1 58 1 119 1 61 1 324 2 162 1 70 1 273 1 145 1 380 1 103 1 146 1 110 1 
292 1 76 1 111 1 182 2 357 1 276 1 322 2 61 1 324 2 271 1 162 1 70 1 145 1 380 1 103 1 290 1 110 1 261 1 
218 2 111 2 140 1 357 1 119 1 271 1 70 1 145 1 146 1 290 1 292 1 76 1 182 2 276 1 58 1 322 2 61 1 324 4 162 2 103 1 380 2 110 2 
218 2 111 2 140 1 357 1 119 1 271 1 70 1 145 1 146 1 290 1 292 1 76 1 182 2 276 1 58 1 322 2 61 1 324 4 162 2 380 2 110 2 
218 1 195 1 223 1 46 1 244 1 266 1 24 1 70 1 229 1 145 1 28 1 11 1 289 1 29 1 176 1 292 1 76 1 184 1 317 1 182 2 276 1 322 1 211 1 61 1 324 2 328 1 39 1 63 1 
218 1 195 1 223 1 244 1 266 1 117 1 24 1 70 1 229 1 145 1 28 1 289 1 29 1 176 1 292 1 76 1 184 1 317 1 182 2 276 1 129 1 322 1 211 1 348 1 61 1 324 2 39 1 63 1 
218 2 111 2 140 1 357 1 119 1 271 1 70 1 145 1 146 1 290 1 292 1 76 1 182 2 276 1 58 1 322 2 156 1 61 1 324 4 162 2 380 2 110 2 
218 2 111 2 357 1 223 1 140 1 46 1 244 1 24 1 119 1 271 1 70 1 229 1 145 1 146 1 28 1 11 1 290 1 29 1 176 1 292 1 315 1 76 1 184 1 317 1 182 2 276 1 57 1 58 1 322 2 61 1 324 4 162 2 380 2 328 1 39 1 63 1 110 2 
218 2 355 1 111 1 140 1 244 1 24 1 119 1 271 1 70 1 341 1 145 1 146 1 290 1 292 1 76 1 182 2 276 1 58 1 79 1 322 1 277 1 156 1 61 1 160 1 324 3 82 1 162 1 380 1 110 1 
220 2 218 9 283 2 336 1 357 3 140 3 358 1 197 1 119 3 198 1 271 3 9 2 70 2 146 3 290 3 343 1 292 2 76 2 182 4 152 1 99 1 276 2 58 3 322 10 324 19 378 1 165 1 380 6 259 1 107 1 
334 1 220 4 218 14 283 2 336 2 357 2 140 3 4 1 243 1 119 3 198 2 271 2 9 1 70 3 310 1 146 2 290 2 343 1 313 2 292 3 76 3 182 6 294 1 99 1 152 2 276 3 58 3 322 12 35 1 324 26 378 1 165 2 380 4 107 1 
193 1 334 1 220 4 218 22 283 5 336 3 357 5 140 5 4 1 358 1 243 1 197 2 119 6 198 1 271 4 9 1 70 3 287 1 310 1 146 4 125 1 290 5 343 1 313 1 292 3 76 3 182 6 294 1 152 3 99 1 276 3 58 5 372 1 35 1 322 22 190 1 324 44 378 1 165 2 17 1 380 9 106 1 107 1 
193 1 334 1 220 4 218 22 283 5 336 3 357 6 140 5 4 1 358 1 243 1 197 2 119 6 198 1 271 4 9 1 70 4 287 1 310 1 146 3 125 1 290 5 343 1 313 2 292 4 76 4 182 8 294 1 152 3 99 1 276 4 58 5 372 1 35 1 322 22 190 1 324 44 378 1 165 2 17 1 380 9 106 1 107 1 
193 1 332 2 334 1 220 4 218 27 283 4 336 4 357 8 140 7 4 1 243 1 197 2 119 8 198 1 271 7 9 1 70 2 287 1 310 1 146 7 125 1 290 8 343 1 313 1 292 2 76 2 182 4 294 1 152 2 99 1 276 2 58 7 372 1 35 1 322 26 190 1 324 53 378 1 165 1 380 15 106 1 107 1 
189 1 367 1 175 1 45 1 369 1 38 1 326 1 258 1 34 1 245 1 
352 1 226 1 
2 1 216 1 189 1 367 1 369 1 38 1 326 1 258 1 296 1 
262 1 367 1 45 1 369 1 32 1 245 1 16 1 118 1 120 1 189 1 157 1 254 1 175 1 257 1 38 1 326 1 258 1 201 2 
262 1 367 1 45 1 369 1 32 1 245 1 16 1 118 1 120 1 189 1 157 1 254 1 175 1 257 1 38 1 326 1 258 1 201 2 
262 1 367 1 45 1 369 1 32 1 245 1 16 1 118 1 120 1 189 1 157 1 254 1 175 1 257 1 38 1 326 1 258 1 201 2 
323 1 221 1 318 1 
323 1 221 1 318 1 
186 1 279 1 
186 1 279 1 318 1 
56 1 249 1 
352 1 333 1 86 1 282 1 226 1 244 2 24 2 289 1 201 1 205 1 367 1 369 1 30 1 56 1 249 1 79 2 16 1 277 2 157 1 189 1 254 1 376 1 82 2 257 1 38 1 326 1 258 1 
323 1 221 1 
186 1 279 1 318 1 
303 1 168 1 218 1 195 1 223 2 244 2 266 1 24 2 272 1 70 1 274 1 229 1 145 1 123 2 176 2 204 1 292 1 76 1 184 1 317 1 182 2 276 1 322 1 297 1 156 1 61 1 324 2 82 2 39 1 63 2 166 1 
203 1 53 1 345 1 66 1 314 1 184 1 346 1 223 2 88 1 57 1 143 1 284 1 268 1 338 1 62 2 39 1 63 2 136 1 176 2 
203 1 53 1 66 1 314 1 184 1 346 1 223 1 88 1 143 1 268 1 338 1 62 2 63 1 73 1 39 1 136 1 176 1 
85 1 345 1 304 1 184 1 317 1 223 1 88 1 173 1 211 1 377 1 229 1 39 1 63 1 176 1 
203 1 53 1 345 1 66 1 314 1 184 1 346 1 223 1 88 1 143 1 284 1 268 1 338 1 62 2 39 1 63 1 136 1 176 1 
71 1 
118 1 374 1 247 1 121 1 227 1 300 1 122 1 
43 1 19 1 224 1 23 1 118 2 121 1 122 1 202 1 291 1 181 1 374 1 233 1 254 1 325 1 191 1 257 1 65 1 
41 2 43 5 140 2 6 2 7 1 200 1 49 2 202 4 290 2 291 6 57 1 58 2 347 6 60 1 252 3 211 1 254 5 159 2 349 2 299 1 300 1 257 5 63 3 19 3 223 3 224 4 68 2 23 4 118 8 119 2 271 2 227 1 121 2 365 6 229 3 122 8 26 2 28 3 72 1 275 2 176 3 181 12 184 3 317 10 127 2 77 2 78 1 320 2 232 1 374 9 191 4 133 2 39 4 138 2 
43 1 334 1 19 1 283 1 336 1 140 2 224 2 243 1 23 2 246 1 118 5 119 2 271 2 365 5 121 2 340 1 310 1 49 2 122 5 275 1 202 2 290 2 291 3 181 6 127 1 294 1 152 1 78 1 58 2 347 5 35 1 374 8 254 1 191 2 257 1 
224 1 244 1 23 1 69 1 93 1 92 1 24 1 119 2 341 1 49 2 122 2 125 1 202 1 290 1 147 1 127 1 371 1 79 1 374 2 277 1 254 1 190 1 82 1 37 1 83 1 191 1 257 1 106 1 
224 1 23 1 118 1 374 1 227 1 121 1 191 1 300 1 122 1 202 1 
41 1 291 5 181 10 127 1 140 2 58 2 347 5 118 5 119 2 374 5 271 2 365 5 49 2 122 5 290 2 
118 1 43 1 19 1 254 1 121 1 257 1 
43 4 85 1 19 2 238 1 223 4 141 1 224 1 3 1 23 2 7 2 229 1 122 2 275 2 202 2 176 4 12 1 184 1 317 1 78 2 232 1 211 2 374 2 254 3 377 1 191 2 257 3 381 1 39 1 63 4 
195 1 223 1 46 1 244 3 24 3 70 1 341 2 229 1 145 1 11 1 28 1 289 1 147 1 176 1 29 1 292 1 76 1 182 2 184 1 317 1 276 1 79 2 322 1 211 1 277 2 61 1 324 1 255 1 82 2 328 1 63 1 39 1 
224 1 23 1 118 4 121 2 365 2 287 1 49 1 122 2 275 1 202 1 291 2 181 4 78 1 347 2 374 2 191 1 
228 1 369 1 326 1 
45 1 369 1 56 1 326 1 130 1 
228 1 369 1 326 1 
228 1 369 1 326 1 
369 1 326 1 154 1 
369 1 326 1 154 1 
369 1 326 1 154 1 
369 1 326 1 
189 1 38 1 
193 1 292 2 313 1 218 4 76 2 182 4 357 1 276 2 372 1 322 3 119 1 324 7 190 1 70 2 287 1 380 2 146 1 290 1 106 1 125 1 
193 1 218 3 357 1 372 1 322 2 119 1 247 1 190 1 324 5 287 1 380 1 125 1 106 1 290 1 
292 1 218 2 76 1 182 2 357 1 140 1 276 1 58 1 153 1 322 2 119 1 271 1 324 4 70 1 380 2 146 1 290 1 
218 3 283 2 336 1 357 1 140 1 152 1 58 1 197 1 322 4 119 1 271 1 324 7 380 2 146 1 290 1 
193 1 332 1 67 1 218 11 336 2 283 2 140 2 357 4 197 1 119 3 271 2 70 2 287 1 146 4 125 2 290 3 74 1 313 2 292 2 76 2 182 4 276 2 58 2 372 1 322 11 190 2 324 22 380 8 106 1 
322 1 324 1 283 1 
324 1 218 1 336 1 
41 1 292 1 218 3 76 1 182 2 140 1 357 2 276 1 58 1 153 1 322 3 119 1 324 6 271 1 70 1 380 3 146 1 290 1 
334 1 218 6 336 1 283 1 140 2 357 1 243 1 119 2 271 2 70 1 310 1 146 1 290 2 343 1 292 1 76 1 182 2 294 1 152 1 276 1 58 2 322 6 35 1 324 12 380 2 
218 3 357 1 322 3 119 1 324 6 190 1 380 2 146 1 106 1 290 1 125 1 
193 1 313 1 292 1 67 1 218 1 76 1 182 2 357 1 276 1 372 1 322 2 190 1 324 3 70 1 380 2 146 1 125 1 
343 1 292 1 218 5 76 1 182 2 357 3 276 1 322 5 119 2 190 2 324 10 70 1 83 1 380 5 146 2 125 2 106 1 290 2 
343 1 292 1 218 2 76 1 182 2 276 1 58 1 119 1 324 2 70 1 380 1 146 1 
343 1 292 1 218 2 76 1 182 2 357 1 140 1 276 1 58 1 322 2 119 1 271 1 324 4 70 1 380 2 146 1 290 1 
343 1 313 1 292 3 67 1 218 1 76 3 182 6 357 1 276 3 358 1 322 2 324 3 190 1 70 3 380 2 146 1 125 1 
193 1 67 1 218 16 283 4 336 3 140 3 357 6 358 1 197 1 119 5 271 3 70 5 287 1 146 5 125 3 290 5 343 1 313 2 292 5 76 5 182 10 152 1 276 5 58 3 372 1 153 1 322 17 190 3 324 33 278 1 327 1 380 11 106 2 192 1 
193 1 218 6 336 1 283 2 357 1 140 1 197 1 119 2 70 1 287 1 290 1 125 1 343 1 292 1 76 1 182 2 152 1 276 1 58 1 372 1 322 4 35 1 190 1 324 10 380 1 106 1 
193 1 218 6 283 2 336 1 357 1 140 1 197 1 119 2 70 2 287 1 146 1 290 1 125 1 343 1 292 2 76 2 182 4 152 1 276 2 58 1 372 1 153 1 322 4 35 1 190 1 324 10 380 2 106 1 
193 1 334 1 218 9 336 1 283 1 140 2 357 2 243 1 119 3 271 2 70 3 287 1 310 1 146 1 125 1 290 3 343 1 292 3 313 1 76 3 182 6 294 1 152 1 276 3 58 2 372 1 153 1 322 9 35 1 190 1 324 18 380 3 106 1 
193 1 334 1 218 10 336 1 283 1 140 2 357 2 243 1 119 3 271 1 70 3 287 1 310 1 146 2 125 1 290 2 343 1 313 1 292 3 76 3 182 6 294 1 152 1 276 3 58 2 372 1 153 1 322 6 35 1 190 1 324 16 380 4 106 1 
193 1 218 6 336 1 283 2 357 1 140 1 197 1 119 2 70 1 287 1 290 1 125 1 343 1 292 1 76 1 182 2 152 1 276 1 58 1 372 1 322 4 35 1 190 1 324 10 380 1 106 1 
334 1 218 6 336 1 283 1 140 2 357 1 243 1 119 2 271 2 70 1 310 1 146 1 290 2 343 1 292 1 76 1 182 2 294 1 152 1 276 1 58 2 322 6 35 1 324 12 380 2 
193 1 334 1 218 10 283 1 336 1 140 2 357 2 243 1 119 3 271 1 70 4 287 1 310 1 146 2 125 1 290 2 343 1 292 4 313 2 76 4 182 8 294 1 152 1 276 4 58 2 372 1 153 1 322 7 35 1 190 1 324 17 380 4 106 1 
334 1 218 9 283 1 336 1 140 3 357 3 243 1 358 1 119 3 271 2 70 4 310 1 146 3 290 2 343 1 292 4 313 2 76 4 182 8 294 1 152 1 276 4 58 3 322 7 35 1 324 16 380 6 
193 2 218 3 357 3 372 1 322 4 119 1 324 7 190 3 380 6 146 3 290 1 125 3 106 1 
193 1 334 1 218 10 283 1 336 1 140 2 357 2 243 1 358 1 119 3 271 1 70 4 287 1 310 1 146 1 125 1 290 2 343 1 292 4 313 2 76 4 182 8 294 1 152 1 276 4 58 2 372 1 322 7 35 1 190 1 324 17 380 3 106 1 
24 1 94 1 206 1 82 1 134 1 244 1 289 1 
236 1 170 1 206 1 244 1 94 1 24 1 82 1 10 1 25 1 134 1 18 1 289 1 
85 1 211 1 247 1 377 1 184 1 317 1 223 1 229 1 39 1 63 1 176 1 
317 1 184 1 223 1 46 1 244 2 79 1 24 2 277 1 211 1 82 1 229 1 28 1 39 1 63 1 289 1 29 1 312 1 176 1 
317 3 184 1 223 1 46 1 244 2 79 2 69 1 7 1 24 2 277 1 159 1 82 2 350 1 229 2 26 1 28 2 39 1 63 1 289 1 281 1 29 1 312 1 176 1 
223 2 244 2 7 1 69 1 117 1 24 2 97 1 229 2 26 1 28 2 289 1 176 2 312 1 29 1 184 1 317 3 79 2 277 1 159 1 82 2 350 1 63 2 39 1 281 1 
43 1 353 1 223 3 7 1 118 1 121 1 97 1 229 1 26 1 28 1 176 3 316 1 184 1 317 4 320 1 252 1 211 1 254 2 159 1 257 2 63 3 39 1 138 1 
43 1 317 4 184 1 223 3 320 1 7 1 118 1 211 1 252 1 159 1 254 2 121 1 97 1 133 1 229 1 257 2 26 1 28 1 39 1 63 3 176 3 138 1 
184 1 223 1 39 1 63 1 260 1 176 1 
303 1 139 1 128 1 305 1 317 3 184 2 346 1 223 6 57 1 21 1 209 1 308 1 211 2 200 1 229 2 123 1 63 7 28 1 39 3 260 1 176 7 
193 1 46 1 244 2 145 2 287 1 11 1 289 2 290 1 204 1 292 2 57 1 156 1 61 2 162 1 63 1 106 1 110 1 218 3 222 1 111 1 223 1 357 1 24 2 119 1 70 2 229 1 28 1 125 1 176 1 312 1 29 1 315 1 76 2 182 4 184 1 317 1 276 2 372 1 79 1 322 2 277 1 190 1 324 5 82 1 328 1 380 1 39 1 
43 2 19 1 223 1 224 2 68 1 23 2 118 1 121 1 227 1 122 1 202 2 176 1 205 1 317 2 77 1 320 1 232 1 374 1 211 1 252 1 254 3 191 2 349 1 133 1 300 1 257 3 63 1 138 1 
317 2 184 1 223 2 57 1 200 1 229 1 63 2 72 1 28 1 39 2 260 1 138 1 176 2 
85 1 317 1 184 1 223 4 57 1 211 1 377 1 97 1 229 1 39 1 63 4 108 1 176 4 
139 1 293 1 317 1 184 1 223 2 21 1 172 1 7 1 36 1 229 1 63 2 28 1 39 2 176 2 
211 1 338 1 66 1 62 1 184 1 223 1 39 1 63 1 136 1 176 1 
303 1 297 1 184 1 317 1 346 1 223 2 229 1 57 1 39 1 63 2 176 2 
85 1 303 1 128 1 317 3 184 2 223 4 57 1 7 1 308 1 211 1 377 1 229 2 63 5 39 2 108 1 176 5 
85 1 303 1 317 3 184 2 223 4 57 1 7 1 308 1 211 1 377 1 229 2 63 5 39 2 108 1 109 1 176 5 
317 1 184 1 223 1 244 2 79 1 24 2 117 1 277 1 211 1 82 1 229 1 28 1 39 1 63 1 289 1 29 1 312 1 176 1 
139 1 317 1 184 1 223 1 21 1 209 1 7 1 200 1 229 1 63 1 28 1 39 2 176 1 
253 1 263 1 14 1 289 1 33 1 
205 1 344 1 263 2 14 2 33 1 320 1 69 1 118 1 144 1 253 2 254 2 158 1 121 1 350 1 84 1 257 2 288 1 289 1 281 1 
24 1 168 1 82 1 272 1 263 1 274 1 14 1 244 1 33 1 
144 1 344 1 33 1 
247 1 295 1 231 1 
42 1 354 1 295 1 231 1 112 1 330 1 
90 1 112 1 210 1 
42 3 87 1 354 1 351 1 295 1 231 1 329 1 112 3 105 1 330 1 251 2 
42 2 354 1 295 1 231 1 100 1 112 2 330 1 59 1 
42 1 314 1 354 1 20 1 112 1 338 1 213 1 62 1 102 1 105 1 330 1 
42 1 354 1 295 1 112 1 105 1 330 1 
42 1 354 1 213 1 295 1 231 1 112 1 105 1 330 1 
42 2 174 1 354 2 295 1 242 1 135 1 112 2 105 1 330 2 
42 3 354 1 295 1 112 3 59 2 375 1 213 1 48 1 102 1 231 1 105 1 330 1 167 1 
42 2 53 1 314 1 354 1 356 1 295 1 112 2 59 1 338 1 62 2 231 1 136 1 105 1 330 1 
42 4 354 2 213 1 295 1 102 1 231 1 100 1 112 4 105 1 167 1 373 1 330 2 59 2 
42 1 354 1 295 1 231 1 112 1 105 1 330 1 
42 4 87 1 354 1 295 2 112 4 251 1 59 2 339 1 213 1 351 1 102 1 231 2 330 1 167 1 
42 2 217 1 354 1 295 1 231 1 112 2 105 1 330 1 59 1 148 1 40 1 
177 1 42 3 87 2 354 1 351 1 295 1 231 1 112 3 105 1 330 1 251 2 
267 1 270 2 161 1 213 2 
42 1 354 1 280 1 112 1 105 1 330 1 
42 2 375 1 354 1 295 1 231 1 112 2 105 1 330 1 59 1 
335 1 
42 1 354 1 295 1 231 1 112 1 105 1 330 1 
42 3 375 1 354 1 295 1 231 1 112 3 105 1 330 1 59 1 251 1 
339 1 213 1 102 1 167 1 
295 1 

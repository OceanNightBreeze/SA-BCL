#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 1 350 2 254 1 70 1 354 1 329 1 179 9 356 4 30 1 157 1 106 2 32 5 260 1 363 1 232 1 52 1 283 9 162 1 9 2 78 1 370 1 217 2 167 1 220 6 61 2 343 2 222 2 201 3 
319 1 350 2 254 1 70 1 354 1 329 1 179 9 356 4 30 1 157 1 106 2 32 5 260 1 363 1 232 1 52 1 283 9 162 1 9 2 78 1 370 1 217 2 167 1 220 6 61 2 343 2 222 2 201 3 
319 1 350 2 254 1 70 1 354 1 329 1 179 10 356 5 30 1 157 1 106 2 32 6 260 1 363 1 232 1 52 1 283 10 162 1 9 2 78 1 370 1 217 2 167 1 220 7 61 2 343 2 222 2 201 4 
319 1 350 1 254 1 70 1 354 1 329 1 179 7 356 3 30 1 157 1 106 2 32 4 260 1 363 1 52 1 283 7 162 1 9 2 78 1 370 1 217 2 167 1 220 4 61 2 343 2 222 2 201 2 
350 2 70 1 217 1 329 1 179 4 167 1 356 2 30 1 106 1 220 3 32 3 260 1 343 1 61 1 232 1 222 1 201 1 283 4 
9 1 39 1 319 1 340 1 370 1 217 1 329 1 179 2 74 1 32 1 30 1 106 1 260 1 343 1 222 1 283 2 
9 1 217 2 329 1 179 3 356 1 30 1 32 2 220 1 260 1 222 2 52 1 201 1 283 3 
1 1 350 2 70 1 354 1 329 1 356 4 179 9 30 1 32 5 106 1 260 1 232 1 52 1 283 9 162 1 9 1 217 2 167 1 220 7 61 1 343 1 222 2 63 1 201 3 
1 1 350 2 70 1 354 1 329 1 356 4 179 9 30 1 32 5 106 1 260 1 232 1 52 1 283 9 162 1 9 1 217 2 167 1 220 7 61 1 343 1 222 2 63 1 201 3 
68 1 248 1 334 1 
68 1 292 1 225 2 
264 2 89 1 379 2 267 2 199 2 309 2 224 1 208 2 
204 1 66 1 172 1 153 1 176 1 3 1 104 1 208 2 330 1 258 1 89 1 331 2 209 2 262 1 212 1 8 1 264 3 55 2 213 1 12 1 13 1 190 1 267 2 140 1 268 2 239 1 196 1 341 1 376 1 379 2 199 2 309 3 84 1 99 1 224 1 316 1 65 2 
264 1 107 1 89 1 237 1 379 1 267 1 199 1 309 1 23 1 208 1 
264 1 68 1 336 1 237 1 14 1 174 1 371 1 96 1 355 1 379 1 309 1 159 1 334 1 335 1 
264 1 68 1 237 1 267 1 14 1 174 2 371 2 208 1 355 1 379 1 199 1 309 1 159 1 334 1 335 1 
295 1 227 1 174 1 371 1 365 1 
68 1 295 1 40 1 266 1 174 2 371 2 334 1 365 1 
295 1 174 1 371 1 
264 1 237 1 267 1 174 1 371 1 208 1 107 1 109 1 89 1 379 1 199 1 309 1 23 1 365 1 
68 1 
263 1 68 1 295 1 266 1 174 2 371 2 334 1 365 1 
68 2 174 5 128 1 353 5 208 1 293 5 29 2 183 2 107 1 89 1 109 1 295 2 158 1 112 1 185 2 76 1 365 2 334 2 264 1 366 1 95 2 237 1 286 1 267 1 266 1 371 5 118 1 241 1 168 2 344 1 379 1 199 1 200 1 309 1 83 2 23 1 125 1 315 1 
224 1 248 1 
264 2 67 1 267 1 15 1 208 1 379 2 199 1 309 2 224 2 
339 1 238 1 303 1 
264 1 55 1 213 1 12 1 13 1 190 1 176 1 181 1 341 1 258 1 309 1 209 1 99 1 262 1 224 1 65 1 
264 2 55 1 213 1 12 1 13 1 190 1 339 1 267 1 176 1 72 1 208 1 341 1 258 1 111 1 379 1 309 2 209 1 262 1 99 1 65 1 
264 3 379 3 267 3 199 1 309 3 224 1 72 1 208 3 
264 1 107 1 237 1 379 1 267 1 309 1 208 1 
264 1 67 1 237 1 379 1 267 1 199 1 309 1 15 1 208 1 
172 1 153 1 174 1 176 1 3 1 104 1 355 1 208 3 72 1 105 1 258 1 89 1 331 2 111 1 159 1 209 1 262 1 335 1 8 1 264 4 235 1 55 1 213 1 12 1 237 1 13 1 190 1 267 3 14 1 140 1 268 1 371 1 15 1 196 1 341 1 376 1 379 3 199 2 309 4 84 1 99 1 224 1 316 1 65 1 
264 2 108 1 379 2 267 1 309 2 96 1 224 1 208 1 72 1 
264 3 68 1 237 1 267 3 14 1 174 1 371 1 15 1 72 2 208 3 355 1 105 1 111 1 379 3 199 1 159 1 309 3 300 1 335 1 
264 2 267 2 339 1 303 1 15 1 72 1 208 2 379 2 199 1 309 2 
264 1 55 1 213 1 12 1 13 1 190 1 176 1 341 1 258 1 309 1 209 1 99 1 262 1 224 1 65 1 
264 1 55 1 213 1 12 1 13 1 176 1 341 1 359 1 309 1 209 1 310 1 99 1 262 1 224 1 65 1 
204 2 321 1 172 1 69 1 3 1 104 1 88 1 331 2 185 1 186 1 261 1 238 2 339 2 140 1 268 4 372 1 303 2 196 2 19 1 168 1 376 1 243 1 312 1 84 1 
264 1 349 1 237 1 14 1 379 1 267 1 309 1 208 1 
264 5 267 4 96 1 15 1 218 1 72 2 208 4 108 1 75 1 111 1 379 5 199 1 309 5 224 1 
264 2 349 1 107 1 237 1 379 2 267 2 309 2 208 2 
306 1 333 1 
306 1 333 1 
27 1 41 1 
27 1 41 1 
27 1 41 1 
306 1 333 1 35 1 
306 1 333 1 35 1 
259 1 306 1 333 1 
278 1 306 2 56 1 27 1 41 1 333 2 
306 1 333 1 35 1 
306 1 333 1 284 1 
306 1 333 1 284 1 
306 1 333 1 284 1 
68 1 351 2 2 3 278 1 165 2 174 2 371 2 48 2 360 2 230 1 378 1 306 2 346 1 62 2 333 2 34 1 135 1 44 1 382 1 
317 1 264 2 351 1 2 1 165 1 267 2 174 1 166 1 191 1 371 1 48 1 208 2 18 1 17 1 259 1 360 1 362 1 306 1 379 2 347 1 333 1 309 2 135 1 224 1 
106 1 343 1 61 1 
74 1 106 1 343 1 
163 1 74 1 106 3 51 1 61 2 279 1 
74 1 106 2 51 1 61 1 279 1 177 1 
74 1 106 2 51 2 61 1 279 1 
276 1 68 2 251 1 292 1 174 5 353 3 293 2 294 2 29 1 183 1 295 1 362 1 185 1 261 1 365 4 334 1 139 2 266 1 191 1 371 5 57 2 18 1 21 1 19 1 241 1 168 1 342 1 242 1 82 1 83 1 202 1 225 3 
276 1 68 5 46 1 292 3 227 5 127 1 174 9 207 1 353 8 326 1 328 1 293 6 29 2 183 2 362 4 295 6 185 3 261 3 365 7 334 1 139 6 266 1 371 9 117 5 57 6 19 3 241 1 168 3 342 3 242 2 82 2 273 1 83 2 125 1 225 9 
68 3 251 1 292 2 174 3 353 3 294 1 293 2 29 1 183 1 362 1 185 1 261 1 334 1 365 2 139 2 371 3 57 2 19 1 168 1 342 1 242 1 82 1 83 1 202 1 125 1 225 4 
68 4 251 1 46 1 292 3 174 4 207 1 353 5 328 1 294 2 293 4 29 1 183 1 362 2 185 2 261 2 334 1 365 3 139 4 371 4 57 4 19 2 168 2 342 2 242 1 82 1 83 1 125 1 202 1 225 7 
13 1 193 1 248 1 
13 1 211 1 
368 1 
13 1 262 1 
13 3 116 1 193 2 47 1 262 1 99 1 
13 1 262 1 99 1 
13 1 345 1 
101 1 204 4 366 1 337 1 69 2 268 7 196 3 305 1 31 1 168 1 344 1 185 1 160 1 312 3 161 2 315 1 36 1 
101 1 204 4 366 1 337 1 69 2 268 7 196 3 305 1 31 1 168 1 344 1 185 1 160 1 312 3 161 2 315 1 36 1 
101 1 204 4 366 1 337 1 69 2 268 7 155 1 196 3 305 1 31 1 168 1 344 1 185 1 160 1 312 3 161 2 315 1 36 1 
101 5 204 16 69 5 3 1 178 3 31 1 331 2 185 4 160 1 261 3 161 3 114 1 36 2 337 1 366 2 236 1 140 1 269 1 268 31 196 15 240 1 305 2 19 3 59 4 342 3 168 4 376 1 344 2 122 1 312 10 84 1 274 1 313 1 315 1 
101 1 204 5 69 3 3 2 331 4 185 1 160 1 77 1 161 2 114 1 36 1 337 1 366 1 140 2 268 9 305 1 196 4 221 1 168 1 376 2 344 1 312 4 84 2 315 1 
25 1 253 1 228 1 322 1 176 1 71 1 329 1 49 1 179 2 74 1 32 1 30 1 106 2 260 1 209 1 298 1 283 2 234 1 163 1 9 1 55 1 12 1 217 1 220 1 343 1 61 1 222 1 100 1 65 1 226 1 
25 1 228 1 322 1 176 1 71 1 4 1 329 1 49 1 179 3 74 1 32 1 30 1 106 2 209 1 282 1 298 1 283 3 234 1 163 1 9 1 55 1 12 1 217 1 195 1 220 2 343 1 61 1 222 1 65 1 226 1 
25 1 228 1 176 1 71 1 329 1 49 1 179 2 74 1 32 1 30 1 106 2 209 1 282 1 298 1 283 2 163 1 9 1 55 1 12 1 195 1 220 2 61 1 343 1 65 1 226 1 
9 2 55 1 12 1 13 1 86 1 176 1 217 1 270 1 71 2 4 1 179 1 49 2 341 1 197 1 222 1 209 1 123 1 298 2 247 1 262 1 7 1 283 1 65 1 
25 1 228 1 322 1 176 1 71 1 49 1 179 1 74 1 106 2 260 1 209 1 298 1 283 1 234 1 163 1 9 1 55 1 12 1 217 1 195 1 343 1 61 1 222 1 100 1 65 1 226 1 
308 1 
174 5 229 1 176 1 129 1 180 1 183 1 134 1 7 1 136 1 334 1 335 1 336 1 55 2 12 1 237 1 13 1 14 1 192 2 96 1 58 2 341 2 197 1 241 1 97 1 98 2 348 2 65 2 147 1 68 2 148 1 252 1 292 2 102 2 353 2 154 4 293 2 355 1 358 2 29 1 295 6 297 1 209 2 159 1 210 2 262 1 264 1 265 1 266 3 371 5 375 1 82 1 379 1 309 1 83 1 225 2 
147 1 252 1 174 3 229 1 129 1 154 2 355 1 295 2 159 1 136 1 335 1 263 1 264 1 336 1 237 1 14 1 266 1 371 3 96 1 58 1 379 1 309 1 
147 1 68 1 252 1 174 3 229 1 129 1 154 3 355 1 295 1 159 1 136 1 335 1 334 1 263 1 264 1 336 1 237 1 14 1 266 1 371 3 96 1 98 1 379 1 309 1 
147 1 68 1 252 1 102 1 174 3 229 1 129 1 154 3 355 1 295 2 159 1 136 1 335 1 334 1 263 1 264 1 336 1 237 1 266 1 14 1 371 3 96 1 58 1 98 1 379 1 309 1 
147 1 170 1 68 5 252 1 292 2 102 4 174 5 87 1 229 1 353 1 129 1 154 6 293 1 355 1 358 2 29 1 183 1 295 7 134 1 159 1 210 2 233 1 136 1 334 5 335 1 263 1 115 1 264 1 336 1 265 1 237 1 266 3 14 1 369 1 192 2 371 5 96 1 58 4 241 1 98 4 379 1 309 1 83 1 348 2 
174 4 229 1 129 1 183 1 134 1 136 1 335 1 334 1 336 1 237 1 14 1 192 2 96 1 58 2 241 1 98 2 348 2 147 1 148 1 68 2 252 1 292 2 102 2 154 4 353 1 355 1 293 1 29 1 358 2 295 4 159 1 210 2 264 1 265 1 266 2 371 4 379 1 309 1 83 1 225 2 
147 1 68 1 170 1 252 1 292 2 102 2 174 4 229 1 353 1 129 1 154 4 293 1 355 1 358 2 29 1 183 1 295 4 134 1 159 1 210 2 233 1 136 1 334 1 335 1 115 1 264 1 336 1 265 1 237 1 266 2 14 1 192 2 371 4 96 1 58 2 241 1 98 2 379 1 309 1 83 1 348 2 
147 1 68 1 170 1 252 1 292 2 102 2 174 4 229 1 353 1 129 1 154 4 293 1 355 1 358 2 29 1 183 1 295 4 134 1 159 1 210 2 233 1 136 1 334 1 335 1 115 1 264 1 336 1 265 1 237 1 266 2 14 1 192 2 371 4 96 1 58 2 241 1 98 2 379 1 309 1 83 1 348 2 
147 1 68 1 205 1 252 1 102 2 174 4 229 1 353 1 129 1 154 4 293 1 355 1 358 2 29 1 183 1 295 4 159 1 136 1 334 1 54 2 335 1 37 1 115 1 264 1 336 1 265 1 237 1 266 2 14 1 192 2 371 4 96 1 58 2 42 1 241 1 98 2 379 1 309 1 83 1 225 2 203 2 
147 1 68 1 170 1 252 1 292 2 102 3 174 4 229 1 353 1 129 1 154 5 293 1 355 1 358 2 29 1 183 1 295 5 134 1 159 1 210 2 233 1 136 1 334 1 335 1 115 1 264 1 336 1 265 1 237 1 266 2 14 1 369 1 192 2 371 4 96 1 58 3 241 1 98 3 379 1 309 1 83 1 348 2 
147 1 68 1 170 1 252 1 292 2 102 3 174 4 229 1 353 1 129 1 154 5 293 1 355 1 358 2 29 1 183 1 295 5 134 1 159 1 210 2 233 1 136 1 334 1 335 1 115 1 264 1 336 1 265 1 237 1 266 2 14 1 369 1 192 2 371 4 96 1 58 3 241 1 98 3 379 1 309 1 83 1 348 2 
174 4 229 1 129 1 183 1 136 1 335 1 54 2 334 1 336 1 237 1 14 1 192 2 96 1 58 2 241 1 98 2 203 2 147 1 148 1 68 1 252 1 102 2 154 4 353 1 355 1 293 1 29 1 358 2 295 4 159 1 37 1 264 1 265 1 266 2 371 4 379 1 309 1 83 1 225 2 
204 3 172 1 69 2 3 1 104 1 88 1 331 2 185 1 160 1 161 1 366 1 337 1 339 1 238 1 140 1 268 6 303 1 196 3 168 1 376 1 344 1 312 2 84 1 248 1 315 1 224 2 
101 1 204 8 172 2 69 1 3 2 104 1 178 3 357 1 331 4 92 1 6 1 185 2 261 1 212 1 8 1 238 11 339 11 302 1 140 2 268 14 269 1 303 4 240 1 196 6 19 2 59 3 342 2 168 1 376 2 143 1 312 2 84 2 224 1 
204 1 291 1 172 1 176 1 3 1 104 1 327 1 208 1 72 1 181 1 258 1 331 2 111 1 92 1 209 1 262 1 212 1 8 1 264 2 55 1 213 1 12 1 13 1 190 1 267 1 140 1 268 2 303 1 196 1 341 1 376 1 379 1 309 2 43 1 99 1 84 1 224 1 65 1 
172 2 175 1 128 1 176 1 3 2 331 4 92 1 185 4 53 1 137 1 8 1 337 1 55 1 237 1 12 1 13 1 190 1 238 6 339 6 140 2 196 11 19 2 341 1 342 2 344 1 99 1 65 1 101 1 204 10 206 2 153 1 69 4 104 2 72 1 208 1 258 1 111 1 209 1 160 1 261 2 262 1 264 2 366 1 213 1 267 1 268 21 216 1 303 6 219 2 168 4 377 1 376 2 379 1 309 2 312 5 84 2 224 1 315 1 
204 1 149 1 320 1 277 1 253 1 172 2 176 2 3 2 104 2 88 1 208 1 72 1 331 4 296 1 209 8 7 1 262 2 212 1 8 1 264 1 55 8 12 2 214 1 13 3 267 1 140 2 268 2 239 2 194 1 195 1 196 1 341 2 197 1 376 2 379 1 309 1 84 2 314 1 65 7 
204 1 172 1 69 1 3 1 104 1 208 1 331 2 133 1 92 1 185 1 261 1 264 1 339 1 238 1 267 1 140 1 268 3 303 1 15 1 196 2 19 1 342 1 168 1 376 1 379 1 199 1 309 1 312 1 84 1 
101 1 204 2 172 1 339 1 238 1 140 1 268 2 372 1 303 1 104 1 3 1 88 1 19 1 331 2 376 1 185 1 312 1 84 1 
172 1 321 1 339 1 238 1 69 1 140 1 268 2 303 1 104 1 3 1 88 1 196 2 331 2 168 1 376 1 312 1 261 1 84 1 
101 1 204 2 172 1 69 1 3 1 104 1 88 1 331 2 185 1 261 1 238 2 339 2 140 1 268 4 303 2 196 2 19 1 342 1 168 1 376 1 312 2 84 1 
101 1 204 2 277 1 172 1 339 1 238 1 140 1 268 2 372 1 303 1 104 1 3 1 19 1 331 2 376 1 185 1 312 1 84 1 
277 1 172 1 321 1 339 1 238 1 69 1 140 1 268 2 303 1 104 1 3 1 196 2 331 2 168 1 376 1 312 1 261 1 84 1 
101 1 204 2 277 1 172 1 69 1 3 1 104 1 331 2 185 1 261 1 238 2 339 2 140 1 268 4 303 2 196 2 19 1 342 1 168 1 376 1 312 2 84 1 
101 1 204 2 172 1 69 1 3 1 104 1 331 2 185 1 261 1 238 2 339 2 140 1 268 4 303 2 196 2 19 1 342 1 168 1 376 1 312 2 84 1 
204 1 153 1 172 1 176 1 104 1 3 1 258 1 331 2 209 1 262 1 212 1 8 1 264 1 55 1 213 1 12 1 13 1 190 1 140 1 268 2 196 1 341 1 376 1 309 1 99 1 84 1 224 1 65 1 
204 1 172 1 176 1 325 1 104 1 3 1 359 1 331 2 209 1 262 1 212 1 8 1 264 1 55 1 213 1 12 1 13 1 140 1 268 2 196 1 341 1 376 1 309 1 310 1 99 1 84 1 224 1 65 1 
101 1 204 2 172 1 69 1 3 1 104 1 331 2 92 1 185 1 261 1 238 2 339 2 140 1 268 4 303 2 196 2 19 1 342 1 168 1 376 1 312 2 84 1 
101 1 204 2 253 1 153 1 172 1 69 1 176 1 104 1 3 1 258 1 331 2 185 1 209 1 261 1 262 1 264 1 55 1 213 1 12 1 13 1 190 1 339 2 238 2 140 1 268 4 216 1 303 2 196 2 19 1 168 1 342 1 376 1 309 1 312 2 99 1 84 1 65 1 
101 1 204 2 172 1 3 1 104 1 208 1 331 2 90 1 92 1 185 1 261 1 264 1 267 1 238 1 339 1 140 1 268 3 15 1 303 1 196 1 19 1 168 1 342 1 376 1 379 1 199 1 309 1 312 1 84 1 
101 3 204 9 318 2 151 1 69 3 3 2 131 1 178 1 33 1 331 4 185 3 77 1 261 3 285 1 140 2 268 19 269 1 374 1 240 1 196 10 120 1 19 3 59 2 342 3 168 3 376 2 246 2 312 6 84 2 145 1 
101 2 204 14 318 1 171 1 151 1 69 2 3 3 131 2 178 2 33 1 331 6 185 3 77 1 261 2 114 2 94 1 38 1 285 2 140 3 268 26 196 12 240 2 19 3 59 2 168 2 342 3 60 1 376 3 169 1 380 1 246 4 312 4 84 3 145 1 
101 4 204 20 318 1 171 1 151 1 69 4 3 3 131 1 178 3 33 1 331 6 332 1 185 5 160 1 77 1 261 4 161 1 114 1 94 1 38 1 366 1 337 1 285 2 140 3 268 41 269 1 240 3 196 21 120 1 19 4 59 4 342 4 168 5 60 1 169 1 376 3 344 1 380 1 246 4 312 8 84 3 145 1 315 1 
101 3 204 20 318 1 171 1 151 1 69 4 3 4 131 1 178 3 33 1 331 8 332 1 185 5 160 1 77 1 261 3 161 1 114 2 94 1 38 1 366 1 337 1 285 2 140 4 268 38 269 1 240 3 196 18 120 1 19 4 59 4 342 4 168 4 60 1 169 1 376 4 344 1 380 1 246 4 312 7 84 4 145 1 315 1 
101 7 204 27 318 1 171 1 151 1 69 7 3 2 131 1 178 4 357 2 33 1 331 4 185 8 160 1 77 1 261 7 161 1 114 1 94 1 38 1 366 1 337 1 285 1 140 2 268 52 269 2 240 2 196 25 19 7 59 4 342 7 168 8 60 1 169 1 376 2 344 1 380 1 246 4 312 14 84 2 145 1 315 1 
132 1 360 1 351 1 278 1 306 1 165 1 333 1 34 1 382 1 48 1 
317 1 259 1 
361 1 360 1 351 1 306 1 165 1 333 1 126 1 301 1 48 1 
68 1 351 1 2 2 278 1 165 1 174 1 371 1 48 1 360 1 230 1 378 1 306 1 346 1 62 1 333 1 34 1 135 1 382 1 
68 1 351 1 2 2 278 1 165 1 174 1 371 1 48 1 360 1 230 1 378 1 306 1 346 1 62 1 333 1 34 1 135 1 382 1 
68 1 351 1 2 2 278 1 165 1 174 1 371 1 48 1 360 1 230 1 378 1 306 1 346 1 62 1 333 1 34 1 135 1 382 1 
56 1 22 1 35 1 
56 1 22 1 35 1 
103 1 284 1 
56 1 103 1 284 1 
347 1 166 1 
317 1 264 2 351 1 2 1 165 1 267 2 174 1 166 1 191 1 371 1 208 2 48 1 18 1 17 1 259 1 360 1 362 1 306 1 379 2 346 1 62 1 347 1 333 1 309 2 124 1 224 1 365 1 
22 1 35 1 
56 1 103 1 284 1 
146 1 204 1 149 1 172 1 176 1 3 1 104 1 281 1 110 1 331 2 92 1 209 2 262 1 212 1 8 1 264 2 55 2 10 1 12 1 13 1 214 1 140 1 268 2 239 2 16 1 196 1 376 1 379 2 309 2 84 1 65 2 
163 1 55 2 12 1 253 1 287 1 228 1 176 1 71 1 195 1 74 1 106 2 121 1 343 1 61 1 209 2 299 1 234 1 65 2 226 1 
163 1 55 1 12 1 228 1 176 1 71 1 195 1 74 1 106 2 343 1 61 1 209 1 299 1 64 1 234 1 65 1 226 1 
55 1 12 1 189 1 13 1 176 1 71 1 341 1 197 1 121 1 209 1 123 1 262 1 7 1 65 1 
163 1 55 1 12 1 287 1 228 1 176 1 71 1 195 1 74 1 106 2 121 1 343 1 61 1 209 1 299 1 234 1 65 1 226 1 
231 1 
68 1 112 1 353 1 118 1 248 1 334 1 293 1 
68 2 292 1 174 1 353 1 293 1 29 1 183 1 295 1 134 1 210 1 334 1 266 1 371 1 241 1 83 1 348 1 225 1 
0 1 323 1 174 5 176 3 47 1 280 2 180 1 183 4 185 2 334 2 55 3 95 2 139 6 12 4 13 10 193 2 57 6 19 2 341 1 241 4 342 2 198 2 345 2 200 2 99 3 144 1 65 3 68 8 206 2 253 1 292 6 352 2 353 9 255 2 293 8 156 2 257 1 29 4 295 5 112 1 209 3 159 2 261 2 211 3 262 3 266 3 371 5 118 1 168 2 80 1 82 2 307 2 83 4 225 12 
68 5 26 1 171 1 292 3 174 1 353 8 178 1 293 5 180 1 29 2 183 2 295 1 185 2 261 2 334 2 38 1 338 1 95 2 139 5 266 1 371 1 57 5 240 1 19 2 59 1 241 2 342 2 168 2 60 1 169 1 82 1 380 1 200 1 83 2 225 6 
170 1 174 1 128 1 353 2 293 2 208 1 29 1 183 1 107 1 109 1 89 1 185 2 264 1 366 1 95 2 237 1 267 1 371 1 241 1 168 1 344 1 379 1 199 1 200 1 309 1 83 1 23 1 315 1 
68 1 353 1 118 1 293 1 29 1 183 1 241 1 112 1 83 1 334 1 
68 5 206 1 95 2 139 5 292 5 353 5 57 5 293 5 19 2 342 2 168 2 185 2 200 1 261 2 225 10 
68 1 295 1 266 1 174 1 371 1 334 1 
174 3 176 1 353 2 293 2 180 2 29 2 257 1 183 2 295 4 91 1 209 4 262 1 7 1 188 1 55 4 12 1 13 1 266 2 371 3 375 1 341 2 241 1 197 1 97 1 80 2 82 2 83 2 125 1 65 4 
153 1 172 1 176 1 104 1 3 1 208 2 258 1 89 1 331 2 209 1 262 1 8 1 264 3 55 1 213 1 12 1 13 1 190 1 267 2 140 1 268 1 196 1 341 1 376 1 379 2 199 2 309 3 84 1 99 1 224 1 65 1 316 1 
68 4 139 2 292 2 353 1 57 2 293 2 180 1 29 1 183 1 241 1 82 1 83 1 161 1 225 4 334 2 
165 1 324 1 48 1 
165 1 324 1 48 1 
85 1 165 1 34 1 166 1 48 1 
165 1 324 1 48 1 
165 1 113 1 48 1 
165 1 113 1 48 1 
165 1 113 1 48 1 
165 1 48 1 
306 1 333 1 
101 1 204 4 337 1 366 1 69 2 140 2 268 8 3 2 196 4 168 1 331 4 376 2 344 1 185 1 160 1 312 3 161 1 84 2 315 1 114 1 
196 3 204 3 366 1 337 1 168 1 344 1 185 1 69 2 268 6 160 1 312 2 161 1 315 1 248 1 
275 1 101 1 204 2 69 1 140 1 268 4 3 1 196 2 19 1 168 1 331 2 342 1 376 1 185 1 261 1 312 2 84 1 
101 1 204 3 69 1 268 7 269 1 178 1 240 1 196 4 19 1 59 2 168 1 342 1 185 1 261 1 312 2 
101 4 204 11 69 5 3 2 178 2 357 1 331 4 185 3 160 1 261 2 161 1 114 2 366 2 337 1 164 1 140 2 269 1 268 23 196 12 19 2 59 2 342 2 168 3 376 2 344 2 143 1 312 9 84 2 315 1 
196 1 59 1 268 1 
204 1 268 1 178 1 
275 1 101 1 204 3 206 1 140 1 69 2 268 6 3 1 196 3 19 1 331 2 342 1 168 1 376 1 185 1 312 3 261 1 84 1 
101 1 38 1 204 6 171 1 69 1 140 1 268 12 3 1 178 1 240 1 196 6 19 2 59 1 168 2 342 2 331 2 60 1 376 1 169 1 185 2 380 1 312 2 261 2 77 1 84 1 
101 1 204 3 366 1 69 1 268 6 196 3 168 1 344 1 185 1 312 2 315 1 
101 1 204 1 366 1 337 1 164 1 69 1 140 1 268 3 3 1 196 2 331 2 376 1 344 1 160 1 312 2 84 1 114 1 
101 2 204 5 366 2 140 1 69 3 268 10 128 1 3 1 196 5 331 2 168 2 376 1 344 2 185 2 77 1 312 5 84 1 315 1 
101 1 204 2 140 1 268 2 3 1 19 1 331 2 376 1 185 1 77 1 312 1 84 1 
101 1 204 2 69 1 140 1 268 4 3 1 196 2 19 1 168 1 331 2 342 1 376 1 185 1 261 1 312 2 77 1 84 1 
101 1 204 1 366 1 164 1 140 3 69 1 268 3 3 3 196 2 120 1 331 6 376 3 344 1 77 1 312 2 84 3 114 1 
275 1 101 5 204 16 69 7 3 5 178 3 331 10 185 5 160 1 77 1 261 3 161 1 114 2 366 3 337 1 164 1 140 5 268 34 269 1 196 18 240 1 120 1 19 3 59 4 342 3 168 5 376 5 344 3 122 1 312 12 313 1 274 1 84 5 315 2 
204 4 69 2 3 1 178 1 331 2 185 1 160 1 77 1 161 1 337 1 366 1 140 1 268 8 196 4 240 1 59 1 168 1 169 1 376 1 344 1 312 2 84 1 315 1 
275 1 101 1 204 6 69 2 3 2 178 1 331 4 185 2 160 1 77 1 161 1 366 1 337 1 140 2 268 11 269 1 196 5 240 1 19 1 59 2 168 1 342 1 169 1 376 2 344 1 312 3 84 2 315 1 
275 1 101 1 204 9 171 1 69 3 3 3 178 1 331 6 185 3 160 1 77 1 261 2 161 1 114 1 38 1 366 1 337 1 140 3 268 19 196 10 240 1 19 2 59 1 342 2 168 3 169 1 376 3 60 1 344 1 380 1 312 4 84 3 315 1 
275 1 101 2 204 10 171 1 69 3 3 3 178 1 331 6 185 3 160 1 77 1 261 1 161 1 114 1 38 1 366 1 337 1 140 3 268 17 196 7 240 1 19 2 59 1 342 2 168 2 169 1 376 3 60 1 344 1 380 1 312 5 84 3 315 1 
204 4 69 2 3 1 178 1 331 2 185 1 160 1 77 1 161 1 337 1 366 1 140 1 268 8 196 4 240 1 59 1 168 1 169 1 376 1 344 1 312 2 84 1 315 1 
101 1 38 1 204 6 171 1 69 1 140 1 268 12 3 1 178 1 240 1 196 6 19 2 59 1 168 2 342 2 331 2 60 1 376 1 169 1 185 2 380 1 312 2 261 2 77 1 84 1 
101 2 275 1 204 10 171 1 69 3 3 4 178 1 331 8 185 3 160 1 77 1 261 1 161 1 114 2 38 1 366 1 337 1 140 4 268 18 196 8 240 1 19 2 59 1 342 2 168 2 60 1 169 1 376 4 344 1 380 1 312 5 84 4 315 1 
101 3 204 9 171 1 69 3 3 4 178 1 331 8 185 3 77 1 261 2 114 2 38 1 140 4 268 16 196 7 240 1 120 1 19 3 59 1 342 3 168 2 60 1 169 1 376 4 380 1 312 6 84 4 
101 3 204 3 337 2 366 3 69 3 268 7 196 4 168 1 344 3 185 1 160 1 312 6 315 1 
101 1 204 10 171 1 69 3 3 4 178 1 331 8 185 3 160 1 77 1 261 1 161 1 114 2 38 1 366 1 337 1 140 4 268 18 196 8 240 1 120 1 19 2 59 1 342 2 168 2 60 1 169 1 376 4 344 1 380 1 312 4 84 4 315 1 
187 1 264 1 108 1 379 1 309 1 96 1 224 1 
289 1 187 1 264 1 173 1 96 1 130 1 182 1 108 1 81 1 379 1 309 1 224 1 
341 1 197 1 55 1 12 1 13 1 209 1 176 1 262 1 7 1 248 1 65 1 
264 2 55 1 213 1 12 1 13 1 190 1 267 1 176 1 72 1 208 1 341 1 379 1 309 2 209 1 262 1 99 1 224 1 65 1 
264 2 55 1 213 1 237 1 12 1 13 3 352 1 190 1 14 1 267 1 176 1 72 1 208 2 80 1 345 1 379 2 309 2 209 1 262 2 99 2 224 1 335 1 65 1 
352 1 176 1 208 2 72 1 209 2 262 2 335 1 264 2 55 2 213 1 12 1 237 1 13 3 267 1 14 1 80 1 345 1 379 2 309 2 310 1 99 2 224 1 250 1 65 2 
68 1 352 1 174 2 176 1 295 1 184 1 209 3 159 1 211 1 262 1 334 1 55 3 12 1 13 4 371 2 193 1 341 1 271 1 80 1 345 1 99 1 250 1 65 3 
68 1 55 3 12 1 13 4 352 1 174 2 371 2 176 1 255 1 193 1 341 1 295 1 80 1 345 1 159 1 209 3 262 1 99 1 211 1 250 1 334 1 65 3 
55 1 12 1 209 1 176 1 194 1 65 1 
24 1 55 7 320 1 12 3 214 1 253 1 13 3 239 1 176 2 47 1 194 1 195 1 50 1 341 2 296 1 244 1 209 7 99 1 262 2 314 1 65 6 
146 1 204 3 253 1 172 2 153 1 69 2 176 1 3 2 104 2 208 1 72 1 258 1 331 4 92 1 185 1 209 1 160 1 161 1 262 1 137 1 264 2 366 1 337 1 55 1 213 1 12 1 13 1 190 1 339 1 238 1 267 1 140 2 268 6 216 1 303 1 196 3 168 1 376 2 344 1 379 1 309 2 312 2 99 1 84 2 224 2 315 1 65 1 
68 1 174 3 353 1 255 1 280 1 293 1 156 1 29 2 257 1 183 2 295 2 112 1 209 1 159 1 211 1 334 1 365 1 55 1 13 2 266 1 371 3 193 1 118 1 341 1 241 2 198 1 83 2 65 1 
55 2 12 2 253 1 13 2 176 1 193 1 47 1 194 1 209 2 99 1 262 1 144 1 65 2 
290 1 55 4 12 1 253 1 13 1 176 1 341 1 197 1 209 4 7 1 262 1 250 1 65 4 
24 1 55 2 11 1 12 2 13 1 176 1 288 1 73 1 80 1 244 1 209 2 99 1 262 1 65 2 
74 1 106 1 341 1 55 1 343 1 12 1 228 1 209 1 176 1 65 1 
55 2 12 1 253 1 214 1 13 1 176 1 195 1 110 1 209 2 262 1 65 2 
290 1 55 5 12 2 253 1 214 1 13 3 176 2 341 1 197 1 80 1 296 1 209 5 7 1 262 2 314 1 65 4 
290 1 55 5 12 2 253 1 214 1 13 3 176 2 341 1 197 1 80 1 296 1 142 1 209 5 7 1 262 2 65 4 
264 2 55 1 213 1 12 1 13 1 267 1 176 1 72 1 208 1 341 1 379 1 309 2 209 1 310 1 262 1 99 1 224 1 65 1 
24 1 55 1 12 2 13 1 176 1 47 1 50 1 80 1 244 1 209 1 99 1 262 1 65 1 
272 1 245 1 224 1 256 1 119 1 
68 1 237 1 14 1 174 2 371 2 141 1 119 1 256 2 355 1 105 1 272 2 159 1 245 2 311 1 224 1 223 1 334 1 335 1 365 1 
264 1 10 1 16 1 281 1 256 1 119 1 379 1 272 1 309 1 
311 1 223 1 119 1 
329 1 32 1 30 1 248 1 
329 1 179 1 32 1 30 1 222 1 217 1 283 1 
49 1 9 1 283 1 
319 2 152 1 217 1 304 1 179 3 329 1 32 1 30 1 260 1 222 1 381 1 283 3 
329 1 179 2 32 1 30 1 220 1 350 1 222 1 217 1 283 2 
356 1 179 1 106 1 32 1 260 1 343 1 61 1 222 1 70 1 217 1 283 1 
179 1 32 1 30 1 260 1 222 1 217 1 283 1 
329 1 179 1 30 2 260 1 222 1 217 1 283 1 
150 1 217 2 28 1 179 2 20 1 32 1 30 1 260 1 222 2 283 2 
217 1 354 1 329 1 179 3 356 1 30 1 220 2 32 2 260 1 222 1 201 1 283 3 162 1 
163 1 217 1 329 1 179 2 74 1 32 1 30 1 106 2 220 1 260 1 61 1 343 1 364 1 222 1 283 2 
350 1 217 2 329 1 179 4 356 1 30 1 220 2 32 2 260 1 222 2 232 1 201 1 283 4 
329 1 179 1 32 1 30 1 260 1 222 1 217 1 283 1 
319 1 79 1 217 1 304 1 329 2 179 4 356 1 30 2 220 2 32 3 222 1 381 1 201 1 283 4 
138 1 1 1 217 1 179 2 329 1 32 1 30 1 220 1 260 1 222 1 93 1 283 2 
319 2 217 1 304 2 179 3 329 1 32 1 30 1 260 1 5 1 222 1 381 1 283 3 
32 2 215 2 373 1 45 1 
179 1 260 1 367 1 222 1 217 1 283 1 
329 1 179 2 32 1 30 1 220 1 260 1 222 1 217 1 162 1 283 2 
249 1 
329 1 179 1 32 1 30 1 260 1 222 1 217 1 283 1 
319 1 217 1 179 3 329 1 220 1 30 1 32 1 260 1 222 1 283 3 162 1 
356 1 32 1 79 1 201 1 
32 1 30 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 289 251 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 9 298 2 175 1 88 2 200 6 327 1 68 1 231 1 331 2 306 5 157 1 4 1 307 1 76 1 277 2 159 4 108 1 211 2 31 1 246 1 143 2 376 1 147 1 15 9 378 3 355 2 215 1 86 1 
356 9 298 2 175 1 88 2 200 6 327 1 68 1 231 1 331 2 306 5 157 1 4 1 307 1 76 1 277 2 159 4 108 1 31 1 211 2 246 1 143 2 376 1 147 1 15 9 378 3 355 2 215 1 86 1 
356 10 298 2 175 1 88 2 200 7 327 1 68 1 231 1 331 2 306 6 157 1 4 1 307 1 76 1 277 2 159 5 108 1 31 1 211 2 246 1 143 2 376 1 147 1 15 10 378 4 355 2 215 1 86 1 
356 7 298 2 88 2 200 4 327 1 68 1 231 1 331 2 306 4 157 1 4 1 307 1 76 1 277 2 159 3 108 1 31 1 211 1 246 1 143 2 376 1 147 1 15 7 378 2 355 2 215 1 86 1 
356 4 298 1 159 2 175 1 200 3 31 1 211 2 143 1 376 1 331 1 147 1 15 4 157 1 306 3 378 1 355 1 307 1 277 1 
356 2 108 1 88 1 31 1 92 1 143 1 376 1 166 1 331 1 15 2 267 1 306 1 4 1 355 1 307 1 277 1 
356 3 159 1 88 1 200 1 31 1 231 1 376 1 331 2 15 3 306 2 378 1 355 2 307 1 
356 9 298 1 88 1 175 1 200 7 327 1 231 1 331 2 306 5 157 1 307 1 277 1 159 4 370 1 31 1 211 2 373 1 143 1 376 1 147 1 15 9 378 3 355 2 86 1 
356 9 298 1 88 1 175 1 200 7 327 1 231 1 331 2 306 5 157 1 307 1 277 1 159 4 370 1 31 1 211 2 373 1 143 1 376 1 147 1 15 9 378 3 355 2 86 1 
192 1 57 1 12 1 
14 2 57 1 67 1 
180 1 82 1 71 2 297 2 174 2 51 2 156 2 368 2 
294 1 297 3 65 1 174 2 1 1 302 1 178 1 180 1 27 1 48 1 71 3 49 2 203 1 332 1 51 2 3 1 156 2 53 1 333 1 308 1 337 1 366 2 58 2 282 1 368 2 219 1 109 1 312 1 244 1 263 2 347 1 82 1 214 1 17 1 148 2 321 1 379 1 
180 1 170 1 71 1 297 1 78 1 222 1 174 1 51 1 156 1 368 1 
323 1 297 1 57 1 78 1 66 1 339 1 192 1 230 1 221 1 71 1 125 1 252 1 156 1 380 1 
323 1 297 1 57 1 78 1 66 1 174 1 339 1 368 1 192 1 230 1 221 2 71 1 51 1 156 1 380 2 
285 1 221 1 304 1 358 1 380 1 
192 1 34 1 285 1 221 2 57 1 172 1 358 1 380 2 
285 1 221 1 380 1 
170 1 297 1 78 1 174 1 358 1 368 1 180 1 221 1 71 1 222 1 317 1 51 1 156 1 380 1 
57 1 
192 1 285 1 221 2 57 1 172 1 358 1 314 1 380 2 
224 1 57 1 149 1 172 1 173 2 118 1 190 1 358 2 46 2 192 1 69 1 221 5 285 2 354 1 185 2 16 1 334 1 380 5 237 1 
82 1 12 1 
297 2 174 1 301 1 368 1 284 1 82 2 71 2 51 1 156 2 
63 1 220 1 24 1 
294 1 337 1 297 1 65 1 58 1 1 1 178 1 244 1 263 1 347 1 82 1 71 1 49 1 36 1 332 1 214 1 
101 1 297 5 174 4 368 4 301 1 110 1 262 2 82 1 71 5 125 1 291 1 146 1 51 1 156 5 
259 1 170 1 71 2 297 2 78 1 174 2 156 2 368 2 
294 1 337 1 297 2 65 1 174 1 58 1 1 1 368 1 178 1 24 1 244 1 347 1 262 1 263 1 71 2 49 1 291 1 332 1 214 1 156 1 
262 1 82 1 71 3 297 3 51 1 174 3 156 3 368 3 
170 1 71 1 297 1 78 1 174 1 156 1 368 1 
284 1 71 1 297 1 78 1 174 1 51 1 156 1 368 1 301 1 
294 1 323 1 297 4 65 1 66 1 174 3 1 1 301 1 178 1 230 1 180 1 27 1 48 1 71 4 49 1 332 1 51 2 3 1 156 3 53 1 333 1 337 1 105 1 78 1 366 1 10 1 58 1 339 1 282 1 368 3 312 1 244 1 347 1 262 1 263 1 82 1 221 1 291 1 214 1 17 1 148 2 321 1 379 1 380 1 
262 1 82 1 71 2 297 2 125 1 146 1 174 1 156 2 368 1 
323 1 297 3 57 1 78 1 105 1 66 1 174 3 339 1 301 1 368 3 230 1 262 2 221 1 362 1 71 3 291 1 51 1 156 3 380 1 
262 1 63 1 71 2 297 2 174 2 51 1 156 2 368 2 301 1 24 1 
294 1 337 1 297 1 65 1 58 1 1 1 178 1 244 1 263 1 347 1 82 1 71 1 49 1 332 1 214 1 
337 1 297 1 65 1 58 1 1 1 178 1 345 1 60 1 263 1 347 1 82 1 71 1 49 1 332 1 214 1 
41 1 296 1 63 2 21 1 87 1 24 2 27 1 48 1 303 1 3 1 276 1 53 2 257 1 333 1 338 1 135 1 366 4 282 1 219 2 220 2 341 1 349 1 148 2 379 1 
259 1 71 1 297 1 78 1 174 1 339 1 156 1 368 1 
161 1 162 1 
161 1 162 1 
186 1 274 1 
186 1 274 1 
186 1 274 1 
161 1 162 1 139 1 
279 1 161 1 162 1 
56 1 161 2 162 2 186 1 229 1 274 1 
161 1 162 1 139 1 
161 1 162 1 139 1 
161 1 365 1 162 1 
161 1 365 1 162 1 
161 1 365 1 162 1 
43 1 297 2 19 1 174 2 177 1 328 1 70 1 71 2 126 1 156 2 279 1 161 1 367 1 368 2 162 1 241 1 11 1 243 1 165 1 82 1 221 1 145 1 380 1 270 1 
133 1 216 1 57 1 19 3 115 2 161 2 162 2 241 1 229 1 360 1 328 2 193 1 165 2 221 2 145 2 126 2 265 1 97 1 380 2 
143 1 298 1 277 1 
143 1 166 1 277 1 
54 1 143 3 166 1 298 2 198 1 278 1 
54 1 143 2 248 1 166 1 298 1 198 1 
54 2 143 2 166 1 298 1 198 1 
41 1 296 1 18 1 173 1 172 1 64 2 118 2 121 2 227 1 300 1 358 4 46 1 177 1 67 1 185 1 334 1 135 1 57 2 367 1 190 3 371 2 341 1 192 1 32 1 14 3 81 1 285 1 221 5 319 1 39 1 270 1 380 5 
41 3 296 3 18 2 171 1 172 1 173 2 118 6 121 6 89 5 300 1 358 7 359 1 46 2 177 4 67 3 329 1 304 5 185 2 334 1 135 3 57 5 190 8 371 6 341 3 192 1 32 2 140 1 80 1 14 9 142 1 285 6 221 9 354 1 319 3 380 9 
41 1 296 1 18 1 173 1 64 1 118 2 121 2 358 2 46 1 177 1 67 2 185 1 135 1 57 3 190 3 341 1 371 2 192 1 32 1 14 4 81 1 221 3 354 1 319 1 39 1 380 3 
41 2 296 2 18 1 171 1 173 1 64 2 118 4 121 4 358 3 359 1 46 1 177 2 67 3 185 1 135 2 57 4 190 5 371 4 341 2 192 1 32 1 140 1 14 7 221 4 81 1 354 1 319 2 39 1 380 4 
332 1 12 1 158 1 
77 1 332 1 
369 1 
65 1 332 1 1 1 
332 1 340 1 
332 1 1 1 
181 1 65 1 332 3 1 1 158 2 75 1 
6 1 135 1 296 1 104 1 366 7 116 1 199 2 219 4 47 1 374 1 247 1 349 2 330 1 303 3 154 1 98 1 53 3 
6 1 135 1 296 1 104 1 366 7 116 1 199 2 219 4 47 1 374 1 247 1 349 2 330 1 303 3 154 1 98 1 53 3 
6 1 135 1 296 1 104 1 366 7 116 1 199 2 219 4 47 1 374 1 247 1 349 2 330 1 303 3 154 1 155 1 98 1 53 3 
41 2 296 3 116 1 199 3 272 1 47 2 151 1 25 1 330 2 48 1 28 3 152 1 154 1 303 8 131 3 3 1 98 2 53 12 333 1 6 4 135 3 280 1 104 2 366 26 219 14 341 2 374 1 247 1 349 4 319 2 148 2 379 1 62 1 
6 1 135 1 296 1 104 1 136 1 116 1 366 9 199 2 219 5 47 1 25 1 374 1 330 1 349 3 48 2 154 1 303 4 128 1 3 2 98 1 148 4 53 4 333 2 379 2 
322 1 356 2 325 1 298 1 299 1 88 1 200 1 176 1 178 1 49 1 204 1 331 1 306 1 307 1 277 1 5 1 278 1 337 1 106 1 189 1 58 1 31 1 263 1 194 1 143 2 376 1 166 1 266 1 15 2 355 1 
322 1 356 3 325 1 298 1 299 1 88 1 200 2 176 1 178 1 275 1 49 1 204 1 331 1 306 1 74 1 307 1 277 1 278 1 5 1 337 1 106 1 189 1 58 1 263 1 143 2 376 1 166 1 15 3 377 1 355 1 
322 1 356 2 298 1 88 1 299 1 200 2 176 1 178 1 275 1 49 1 204 1 306 1 307 1 278 1 277 1 337 1 106 1 189 1 58 1 263 1 143 2 376 1 166 1 15 2 377 1 
356 1 322 2 299 2 88 2 1 1 178 1 124 1 49 1 204 2 331 1 332 1 74 1 337 1 260 1 58 1 310 1 245 1 263 1 375 1 352 1 214 1 15 1 355 1 
322 1 356 1 325 1 298 1 299 1 88 1 176 1 178 1 275 1 49 1 204 1 331 1 277 1 5 1 278 1 337 1 106 1 189 1 58 1 31 1 263 1 143 2 166 1 266 1 15 1 355 1 
287 1 
271 2 323 1 1 1 46 1 91 1 230 1 202 2 49 2 332 1 156 1 334 1 337 1 208 4 57 2 107 1 58 2 339 1 212 2 14 2 283 1 285 6 167 1 252 1 350 1 214 2 292 2 169 1 18 1 297 1 20 2 172 3 173 1 118 2 117 1 66 1 178 1 67 2 255 1 124 1 71 1 125 1 127 1 185 1 188 2 78 1 190 2 310 1 79 2 192 1 33 1 263 2 221 5 84 1 196 1 380 5 
271 1 323 1 297 1 172 1 66 1 255 1 91 1 230 1 71 1 125 1 156 1 208 2 78 1 107 1 339 1 314 1 221 3 285 2 84 1 167 1 252 1 380 3 
323 1 297 1 172 1 66 1 255 1 91 1 230 1 202 1 71 1 125 1 156 1 208 3 78 1 57 1 107 1 339 1 314 1 192 1 285 1 221 3 84 1 167 1 252 1 380 3 
271 1 323 1 297 1 172 1 66 1 255 1 91 1 230 1 202 1 71 1 125 1 156 1 188 1 208 3 78 1 57 1 107 1 339 1 314 1 192 1 221 3 285 2 84 1 167 1 252 1 380 3 
271 4 323 1 324 1 297 1 20 2 173 1 172 3 118 1 66 1 22 1 357 1 46 1 67 2 255 1 91 1 230 1 202 4 232 1 71 1 125 1 185 1 156 1 334 1 187 1 188 4 208 6 57 5 78 1 107 1 190 1 339 1 79 2 212 2 314 1 192 5 285 7 221 5 84 1 167 1 350 1 252 1 196 1 292 2 380 5 
271 2 323 1 46 1 230 1 91 1 202 2 156 1 334 1 208 4 57 2 107 1 339 1 212 2 14 2 285 4 167 1 350 1 252 1 292 2 297 1 173 1 20 2 172 2 66 1 118 1 255 1 67 2 71 1 125 1 185 1 188 2 78 1 190 1 79 2 192 1 33 1 221 4 84 1 196 1 380 4 
271 2 323 1 324 1 297 1 172 2 20 2 173 1 118 1 66 1 357 1 46 1 67 2 255 1 91 1 230 1 202 2 232 1 71 1 125 1 185 1 156 1 334 1 188 2 208 4 57 1 78 1 107 1 190 1 339 1 79 2 212 2 192 1 285 4 221 4 84 1 167 1 350 1 252 1 196 1 292 2 380 4 
271 2 323 1 324 1 297 1 172 2 20 2 173 1 118 1 66 1 357 1 46 1 67 2 255 1 91 1 230 1 202 2 232 1 71 1 125 1 185 1 156 1 334 1 188 2 208 4 57 1 78 1 107 1 190 1 339 1 79 2 212 2 192 1 285 4 221 4 84 1 167 1 350 1 252 1 196 1 292 2 380 4 
271 2 323 1 297 1 172 2 20 2 173 1 118 1 66 1 120 2 46 1 255 1 91 1 230 1 202 2 232 1 71 1 125 1 185 1 156 1 334 1 188 2 102 1 208 4 57 1 78 1 239 1 107 1 190 1 339 1 192 1 14 2 285 4 221 4 213 2 84 1 144 1 167 1 252 1 196 1 292 2 380 4 
271 3 323 1 324 1 297 1 172 2 20 2 173 1 118 1 66 1 357 1 46 1 67 2 255 1 91 1 230 1 202 3 232 1 71 1 125 1 185 1 156 1 334 1 187 1 188 3 208 5 57 1 78 1 107 1 190 1 339 1 79 2 212 2 192 1 221 4 285 5 84 1 167 1 350 1 252 1 196 1 292 2 380 4 
271 3 323 1 324 1 297 1 172 2 20 2 173 1 118 1 66 1 357 1 46 1 67 2 255 1 91 1 230 1 202 3 232 1 71 1 125 1 185 1 156 1 334 1 187 1 188 3 208 5 57 1 78 1 107 1 190 1 339 1 79 2 212 2 192 1 221 4 285 5 84 1 167 1 350 1 252 1 196 1 292 2 380 4 
271 2 323 1 46 1 230 1 91 1 202 2 156 1 334 1 208 4 57 1 107 1 339 1 14 2 285 4 213 2 167 1 252 1 292 2 297 1 173 1 20 2 172 2 66 1 118 1 120 2 255 1 71 1 125 1 185 1 188 2 78 1 190 1 192 1 33 1 221 4 84 1 144 1 196 1 380 4 
63 1 296 1 116 1 199 1 24 1 47 1 27 1 330 1 48 1 154 1 303 2 3 1 276 1 53 3 333 1 135 1 366 6 282 1 12 1 219 3 220 1 374 1 82 2 349 2 148 2 379 1 
295 1 41 1 63 4 296 1 302 1 24 11 27 1 48 2 28 3 235 1 303 2 236 1 131 3 3 2 53 6 333 2 6 1 135 2 280 1 30 1 366 14 282 2 220 11 219 8 341 2 82 1 349 1 348 1 318 1 319 2 17 1 148 4 379 2 
294 1 63 1 297 2 65 1 174 1 1 1 302 1 178 1 123 1 27 1 49 1 71 2 48 1 332 1 130 1 3 1 156 1 53 1 333 1 335 1 337 1 366 2 58 1 282 1 368 1 219 1 244 1 347 1 263 1 262 1 82 1 291 1 36 1 318 1 214 1 17 1 148 2 379 1 
41 2 199 1 1 2 47 1 2 2 275 1 330 1 49 3 48 3 154 1 332 2 156 1 3 3 53 10 333 3 6 4 337 2 58 3 282 3 341 2 244 2 346 1 347 2 249 1 349 4 291 1 353 2 214 1 17 1 168 2 294 2 296 3 63 7 297 3 116 1 65 2 174 1 302 1 178 2 24 7 27 3 71 3 303 8 364 2 135 3 29 1 366 20 368 1 220 7 219 10 374 1 263 3 262 1 82 2 318 1 319 2 148 6 321 2 379 3 
297 1 174 1 1 2 302 1 228 1 122 1 178 2 124 1 27 2 275 1 71 1 49 7 48 2 72 1 332 3 276 1 156 1 3 2 53 1 333 2 337 2 103 1 9 1 366 2 58 8 368 1 282 2 310 1 59 1 219 1 109 2 13 1 194 1 262 1 263 8 214 2 17 1 148 4 379 2 
71 1 297 1 174 1 51 1 156 1 368 1 301 1 268 1 
6 1 135 1 63 1 366 2 87 1 282 1 220 1 341 1 219 2 24 1 27 1 48 1 303 1 276 1 3 1 148 2 333 1 379 1 
41 1 63 1 296 1 366 2 21 1 282 1 220 1 24 1 27 1 349 1 48 1 303 1 276 1 3 1 148 2 53 2 333 1 379 1 
41 1 63 2 296 1 24 2 27 1 48 1 303 2 3 1 276 1 53 2 333 1 6 1 135 1 366 4 282 1 219 2 341 1 220 2 349 1 319 1 148 2 379 1 
6 1 135 1 63 1 366 2 87 1 282 1 220 1 341 1 219 2 24 1 27 1 48 1 303 1 72 1 3 1 148 2 333 1 379 1 
41 1 63 1 296 1 366 2 21 1 282 1 220 1 24 1 27 1 349 1 48 1 303 1 72 1 3 1 148 2 53 2 333 1 379 1 
41 1 63 2 296 1 24 2 27 1 48 1 72 1 303 2 3 1 53 2 333 1 6 1 135 1 366 4 282 1 219 2 341 1 220 2 349 1 319 1 148 2 379 1 
41 1 63 2 296 1 24 2 27 1 48 1 303 2 3 1 53 2 333 1 6 1 135 1 366 4 282 1 219 2 341 1 220 2 349 1 319 1 148 2 379 1 
294 1 297 1 65 1 1 1 302 1 178 1 27 1 49 1 71 1 48 1 332 1 3 1 53 1 333 1 337 1 366 2 58 1 282 1 219 1 244 1 347 1 263 1 82 1 214 1 17 1 148 2 321 1 379 1 
297 1 65 1 1 1 302 1 178 1 27 1 49 1 71 1 48 1 332 1 3 1 53 1 333 1 337 1 366 2 58 1 282 1 219 1 345 1 60 1 347 1 263 1 82 1 214 1 17 1 148 2 197 1 379 1 
41 1 63 2 296 1 24 2 27 1 48 1 303 2 3 1 53 2 333 1 6 1 135 1 366 4 282 1 219 2 341 1 220 2 349 1 318 1 319 1 148 2 379 1 
294 1 41 1 296 1 63 2 297 1 65 1 1 1 178 1 24 2 2 1 27 1 49 1 71 1 48 1 303 2 332 1 3 1 53 2 333 1 6 1 337 1 135 1 366 4 58 1 282 1 220 2 219 2 341 1 244 1 347 1 263 1 194 1 349 1 319 1 148 2 321 1 379 1 
41 1 296 1 63 1 297 1 174 1 301 1 24 1 27 1 48 1 71 1 303 1 51 1 3 1 156 1 53 1 333 1 6 1 135 1 366 3 282 1 368 1 341 1 219 2 220 1 318 1 319 1 148 2 320 1 379 1 
40 1 293 2 254 2 41 2 296 2 361 1 48 2 28 1 303 4 128 1 96 1 131 1 3 2 52 1 53 7 333 2 6 2 135 2 280 1 366 14 281 1 219 7 341 2 83 1 349 2 319 2 148 4 223 1 379 2 
293 1 40 2 254 4 41 2 296 2 361 2 25 1 48 2 28 2 303 2 128 1 3 2 131 2 53 12 333 2 6 1 207 1 135 3 280 2 366 25 281 1 218 1 219 13 242 1 341 3 83 1 349 1 251 1 35 1 289 1 319 3 148 4 223 1 379 2 
293 1 40 2 254 4 41 3 296 4 116 1 199 1 47 1 361 1 25 2 330 1 48 4 28 3 154 1 303 7 128 1 96 1 131 3 3 4 53 18 205 1 333 4 207 1 6 4 135 4 280 3 366 37 281 1 218 1 219 19 242 1 341 3 374 1 83 1 349 3 251 1 35 1 289 1 319 3 148 8 223 1 379 4 
293 1 40 2 254 4 41 2 296 3 116 1 199 1 47 1 361 1 25 1 330 1 48 3 28 3 154 1 303 4 128 1 96 1 131 3 3 3 53 15 205 1 333 3 6 1 207 1 135 4 280 3 366 32 281 1 218 1 219 17 242 1 341 3 374 1 83 1 349 3 251 1 35 1 289 1 319 3 148 6 223 1 379 3 
293 1 40 1 254 4 41 3 296 4 116 1 199 1 47 1 361 1 25 1 330 1 48 2 28 2 154 1 303 6 128 1 131 2 3 2 53 15 333 2 207 1 6 3 135 4 280 2 366 32 281 1 218 1 219 17 242 1 341 3 374 1 83 1 349 3 251 1 35 1 289 1 319 3 148 4 223 1 379 2 
216 1 165 1 145 1 126 1 161 1 97 1 23 1 162 1 229 1 328 1 
279 1 243 1 
165 1 145 1 126 1 161 1 37 1 162 1 138 1 372 1 328 1 
139 1 163 1 
61 1 56 1 365 1 
133 1 216 1 57 1 19 2 115 1 161 1 241 1 162 1 229 1 328 1 193 1 165 1 221 1 145 1 126 1 265 1 97 1 380 1 
133 1 216 1 57 1 19 2 115 1 161 1 241 1 162 1 229 1 328 1 193 1 165 1 221 1 145 1 126 1 265 1 97 1 380 1 
133 1 216 1 57 1 19 2 115 1 161 1 241 1 162 1 229 1 328 1 193 1 165 1 221 1 145 1 126 1 265 1 97 1 380 1 
56 1 139 1 163 1 
56 1 139 1 163 1 
61 1 365 1 
61 1 56 1 365 1 
70 1 11 1 
43 1 297 2 19 1 115 1 174 2 358 1 177 1 328 1 70 1 71 2 126 1 156 2 133 1 279 1 209 1 161 1 367 1 368 2 162 1 11 1 243 1 165 1 82 1 221 1 145 1 380 1 270 1 
297 2 1 1 302 1 178 1 228 1 27 1 182 1 71 2 48 1 49 2 50 1 332 1 217 1 156 2 3 1 53 1 333 1 337 1 9 1 366 2 58 2 282 1 219 1 109 2 263 2 315 1 318 1 38 1 17 1 148 2 379 1 
322 1 337 1 225 1 325 1 298 1 189 1 58 2 176 1 178 1 343 1 143 2 263 2 194 1 166 1 275 1 49 2 277 1 278 1 132 1 
322 1 337 1 325 1 298 1 189 1 58 1 176 1 343 1 178 1 143 2 263 1 166 1 275 1 49 1 288 1 277 1 278 1 
322 1 337 1 260 1 225 1 58 1 1 1 310 1 178 1 124 1 263 1 49 1 153 1 332 1 214 1 
322 1 337 1 225 1 325 1 298 1 189 1 58 1 176 1 343 1 178 1 143 2 263 1 166 1 275 1 49 1 277 1 278 1 132 1 
119 1 
192 1 69 1 57 1 118 1 190 1 16 1 12 1 
173 1 172 1 118 1 46 1 67 1 185 1 334 1 57 2 190 1 79 1 212 1 192 1 14 1 285 1 221 1 350 1 380 1 
41 2 323 2 226 1 1 3 46 4 49 3 234 2 332 10 158 2 334 4 55 1 7 1 337 4 57 8 58 3 210 2 340 2 341 2 344 2 283 1 14 12 286 1 285 5 214 1 16 1 253 2 18 2 296 2 173 4 172 3 65 3 118 8 121 6 178 3 179 2 67 6 181 1 69 1 363 1 305 2 185 4 364 2 135 2 77 3 190 9 371 6 192 2 194 1 263 3 221 5 316 2 319 2 269 2 380 5 
41 2 296 2 172 1 173 2 118 5 121 5 46 2 179 1 67 3 28 1 185 2 131 1 334 2 135 2 280 1 57 4 240 1 190 7 218 1 371 5 242 1 341 2 192 1 14 6 221 1 285 1 251 1 35 1 289 1 319 2 380 1 
170 1 296 1 297 1 173 1 118 2 174 1 357 1 46 1 179 2 47 1 180 1 330 1 71 1 51 1 185 1 156 1 334 1 135 2 78 1 190 2 368 1 313 1 374 1 221 1 222 1 317 1 269 1 380 1 
57 1 173 1 118 1 190 1 46 1 192 1 69 1 185 1 16 1 334 1 
41 2 135 2 296 2 57 5 118 5 121 5 190 5 341 2 371 5 179 2 67 5 14 10 319 2 364 1 269 1 
192 1 221 1 285 1 57 1 172 1 380 1 
18 2 226 1 173 2 172 2 117 1 118 2 1 1 46 2 178 1 124 1 93 1 49 4 127 1 332 1 185 2 334 1 337 1 58 4 190 2 310 1 111 1 263 4 283 2 286 2 285 4 221 3 354 1 214 2 380 3 
294 1 297 3 65 1 174 2 1 1 178 1 180 1 27 1 48 1 49 1 71 3 51 2 332 1 3 1 156 2 53 1 333 1 337 1 366 1 58 1 368 2 282 1 312 1 244 1 263 1 347 1 82 1 214 1 17 1 148 2 321 1 379 1 
18 1 57 4 173 1 199 1 118 2 121 2 190 1 46 1 371 2 67 2 192 2 14 4 283 1 185 1 334 1 
26 1 145 1 328 1 
216 1 70 1 145 1 264 1 328 1 
26 1 145 1 328 1 
26 1 145 1 328 1 
145 1 342 1 328 1 
145 1 342 1 328 1 
145 1 342 1 328 1 
145 1 328 1 
161 1 162 1 
6 1 135 1 296 1 366 8 116 1 199 1 219 4 47 1 25 1 374 1 349 2 330 1 48 2 303 3 154 1 3 2 148 4 53 4 333 2 379 2 
135 1 296 1 116 1 366 6 199 1 12 1 219 3 47 1 374 1 330 1 349 2 154 1 303 2 53 3 
6 1 41 1 135 1 296 1 238 1 366 4 341 1 219 2 349 1 48 1 303 2 319 1 3 1 148 2 53 2 333 1 379 1 
28 1 280 1 366 2 131 1 219 1 53 1 
295 1 41 2 296 3 116 1 199 1 47 2 25 2 330 2 28 2 48 2 154 1 303 9 131 2 3 2 53 12 333 2 6 4 135 3 134 1 366 23 30 1 341 2 219 11 374 1 348 1 349 5 319 2 148 4 379 2 
366 1 131 1 53 1 
28 1 366 1 219 1 
6 1 41 1 135 1 296 1 238 1 366 6 341 1 219 3 349 2 48 1 303 3 319 1 3 1 364 1 148 2 53 3 379 1 333 1 
41 2 296 2 25 1 28 1 48 2 128 1 303 3 131 1 3 2 53 6 333 2 6 2 135 2 280 1 366 13 218 1 219 7 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 4 379 2 
6 1 135 1 296 1 366 6 219 3 47 1 374 1 330 1 349 1 303 2 53 3 
6 1 134 1 366 3 116 1 219 1 47 1 25 1 349 1 330 1 48 1 303 2 154 1 3 1 148 2 53 2 333 1 379 1 
6 2 135 2 296 2 366 10 219 5 313 1 47 2 374 1 330 2 349 3 48 1 128 1 303 5 3 1 148 2 53 5 379 1 333 1 
6 1 135 1 366 2 341 1 219 2 48 1 128 1 303 1 3 1 148 2 333 1 379 1 
6 1 41 1 135 1 296 1 366 4 341 1 219 2 349 1 48 1 303 2 128 1 319 1 3 1 148 2 53 2 333 1 379 1 
6 1 134 1 366 3 219 1 47 1 25 1 330 1 349 1 48 3 128 1 303 2 96 1 3 3 148 6 53 2 333 3 379 3 
41 2 296 4 116 1 199 1 272 1 47 3 25 2 151 1 330 3 152 1 48 5 28 3 154 1 128 1 303 10 96 1 131 3 3 5 53 15 333 5 6 4 134 1 135 4 280 1 238 1 366 29 219 14 341 2 374 2 349 6 319 2 148 10 379 5 
135 1 296 1 280 1 116 1 366 8 199 1 219 4 47 1 374 1 349 2 330 1 48 1 251 1 28 1 303 2 154 1 128 1 3 1 131 1 148 2 53 4 333 1 379 1 
135 1 296 1 280 1 238 1 116 1 366 8 199 1 219 4 47 1 374 1 349 2 330 1 28 1 48 2 251 1 303 2 154 1 128 1 3 2 131 1 148 4 53 4 333 2 379 2 
41 2 296 2 25 2 28 1 48 4 128 1 303 3 131 1 3 4 53 7 333 4 6 2 135 2 280 1 238 1 366 14 218 1 219 7 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 8 379 4 
41 1 296 1 28 1 48 2 128 1 303 1 131 1 3 2 53 4 333 2 135 2 280 1 238 1 366 10 218 1 219 6 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 4 379 2 
135 1 296 1 280 1 116 1 366 8 199 1 219 4 47 1 374 1 349 2 330 1 48 1 251 1 28 1 303 2 154 1 128 1 3 1 131 1 148 2 53 4 333 1 379 1 
41 2 296 2 25 1 28 1 48 2 128 1 303 3 131 1 3 2 53 6 333 2 6 2 135 2 280 1 366 13 218 1 219 7 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 4 379 2 
41 1 296 1 25 1 48 3 28 1 128 1 303 1 131 1 3 3 53 5 333 3 135 2 280 1 238 1 366 11 218 1 219 6 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 6 379 3 
41 1 296 1 25 1 48 3 28 1 128 1 303 3 96 1 131 1 3 3 53 5 333 3 6 1 135 2 280 1 366 11 218 1 219 6 242 1 341 2 349 2 251 1 35 1 289 1 319 2 148 6 379 3 
6 3 135 1 296 1 366 7 116 1 219 3 47 3 374 1 330 3 349 3 154 2 303 6 53 4 
41 1 296 1 25 1 48 3 28 1 128 1 303 1 96 1 131 1 3 3 53 5 333 3 135 2 280 1 366 11 218 1 219 6 242 1 341 2 349 1 251 1 35 1 289 1 319 2 148 6 379 3 
82 1 71 1 297 1 95 1 125 1 146 1 156 1 
336 1 297 1 273 1 191 1 141 1 82 1 95 1 71 1 290 1 125 1 146 1 156 1 
124 1 337 1 263 1 49 1 332 1 58 1 214 1 1 1 310 1 12 1 178 1 
337 1 297 2 65 1 174 1 58 1 1 1 368 1 178 1 244 1 347 1 262 1 263 1 82 1 71 2 49 1 332 1 214 1 156 1 
297 2 65 2 174 1 1 2 178 1 230 1 49 1 71 2 234 1 332 3 156 2 337 1 78 1 58 1 339 1 368 2 340 1 244 1 263 1 262 1 347 1 82 1 286 1 
297 2 65 2 174 1 1 2 178 1 230 1 94 1 49 2 71 2 234 1 332 3 156 2 337 1 78 1 58 2 339 1 368 2 340 1 60 1 263 2 262 1 347 1 82 1 286 1 
323 1 65 1 1 1 178 1 150 1 94 1 49 3 256 1 234 1 332 4 158 1 337 1 77 1 57 1 58 3 340 1 192 1 263 3 285 1 286 1 221 2 214 1 380 2 
337 1 323 1 77 1 57 1 65 1 58 3 1 1 340 1 178 1 192 1 263 3 94 1 221 2 286 1 285 1 316 1 49 3 234 1 332 4 214 1 158 1 380 2 
13 1 337 1 263 1 49 1 58 1 178 1 
0 1 8 1 337 3 103 1 65 1 58 7 1 2 109 1 228 1 122 1 59 1 178 2 13 1 194 1 263 7 181 1 275 1 49 6 332 3 214 2 113 1 
199 1 1 1 47 1 2 1 330 1 49 1 48 2 154 1 332 1 156 1 3 2 53 3 333 2 337 1 58 1 282 2 244 1 347 1 349 2 168 1 294 1 63 1 296 1 297 2 116 1 65 1 174 1 178 1 24 1 27 2 71 2 182 1 303 2 135 1 366 6 368 1 219 3 220 1 263 1 194 1 262 1 374 1 82 2 318 1 148 4 321 1 379 2 
323 1 226 1 173 2 172 1 118 1 358 1 46 2 69 1 49 1 332 2 185 2 305 1 158 1 334 2 77 1 57 1 58 1 190 1 344 1 192 1 263 1 221 3 285 2 316 1 214 1 16 1 253 1 380 3 
55 1 337 2 65 1 58 2 1 1 178 1 13 1 194 1 263 2 181 1 49 2 332 2 158 1 
337 1 58 4 1 1 310 1 178 1 90 1 124 1 263 4 194 1 94 1 49 4 332 1 214 1 
0 1 100 1 8 1 337 2 29 1 309 1 65 1 58 2 1 1 178 1 263 2 286 1 49 2 332 1 
143 1 337 1 263 1 166 1 49 1 189 1 58 1 214 1 178 1 277 1 
337 1 263 2 194 1 275 1 49 2 332 1 58 2 38 1 1 1 178 1 228 1 
337 2 103 1 58 5 1 2 310 1 122 1 228 1 178 2 90 1 124 1 263 5 194 1 286 1 49 4 332 3 214 1 
337 2 103 1 58 5 44 1 1 2 310 1 228 1 178 2 90 1 124 1 263 5 194 1 286 1 49 4 332 3 214 1 
337 1 297 2 65 1 174 1 58 1 1 1 368 1 178 1 60 1 347 1 262 1 263 1 82 1 71 2 49 1 332 1 214 1 156 1 
0 1 8 1 337 2 65 1 58 1 1 1 178 1 263 1 181 1 286 1 49 1 332 1 113 1 
82 1 233 1 351 1 326 1 258 1 
323 1 261 1 57 1 78 1 105 1 66 1 339 1 358 1 326 2 192 1 230 1 164 1 82 1 221 2 233 2 351 2 129 1 258 1 380 2 
297 1 326 1 315 1 71 1 351 1 50 1 217 1 156 1 258 1 
164 1 261 1 258 1 
376 1 306 1 12 1 307 1 
356 1 376 1 331 1 15 1 306 1 355 1 307 1 
88 1 299 1 15 1 
356 3 31 1 250 1 376 1 112 1 331 1 15 3 306 1 4 2 206 1 355 1 307 1 
356 2 376 1 331 1 15 2 200 1 306 1 211 1 355 1 307 1 
356 1 298 1 159 1 31 1 143 1 331 1 147 1 15 1 306 1 355 1 277 1 
356 1 376 1 331 1 15 1 306 1 31 1 355 1 
356 1 376 2 331 1 15 1 31 1 355 1 307 1 
356 2 137 1 31 1 376 1 195 1 85 1 331 2 15 2 306 1 355 2 
356 3 159 1 200 2 31 1 327 1 376 1 331 1 15 3 306 2 378 1 355 1 307 1 86 1 
356 2 298 1 200 1 31 1 143 2 376 1 166 1 184 1 331 1 15 2 306 1 355 1 307 1 278 1 277 1 
356 4 159 1 175 1 200 2 31 1 211 1 376 1 331 2 15 4 306 2 378 1 355 2 307 1 
356 1 376 1 331 1 15 1 306 1 31 1 355 1 307 1 
356 4 114 1 159 1 200 2 250 1 376 2 112 1 331 1 15 4 306 3 4 1 378 1 355 1 307 2 
356 2 45 1 200 1 31 1 370 1 376 1 183 1 331 1 15 2 306 1 355 1 307 1 
356 3 31 1 250 2 376 1 112 1 331 1 73 1 15 3 306 1 4 2 355 1 307 1 
201 2 160 1 306 2 99 1 
356 1 331 1 15 1 311 1 31 1 355 1 
356 2 376 1 331 1 15 2 200 1 306 1 31 1 327 1 355 1 307 1 
42 1 
356 1 376 1 331 1 15 1 306 1 31 1 355 1 307 1 
356 3 376 1 331 1 15 3 200 1 306 1 31 1 4 1 327 1 355 1 307 1 
114 1 159 1 306 1 378 1 
376 1 306 1 

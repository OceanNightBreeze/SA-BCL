#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 14 6 132 289 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 14 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 14 6 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 14 285 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 14 6 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 14 6 132 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 191 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 191 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 242 1 138 2 368 2 315 1 283 1 363 1 351 2 17 1 108 1 121 1 92 3 110 3 
190 1 24 2 230 1 171 2 315 2 283 1 363 1 106 1 108 1 364 1 110 9 77 1 240 4 318 1 242 6 347 1 246 1 138 5 58 1 368 2 140 2 200 1 351 2 17 3 325 1 121 1 307 2 92 9 
190 1 24 2 230 1 171 2 315 2 283 1 363 1 106 1 108 1 364 1 110 9 77 1 240 4 318 1 242 6 347 1 246 1 138 5 58 1 368 2 140 2 200 1 351 2 17 3 325 1 121 1 307 2 92 9 
190 1 24 2 230 1 171 2 315 2 283 1 363 1 106 1 108 1 364 1 110 10 77 1 240 5 318 1 242 7 347 1 246 1 138 6 58 1 368 2 140 2 200 1 351 2 17 4 325 1 121 1 307 2 92 10 
190 1 24 2 230 1 171 1 315 2 283 1 363 1 106 1 108 1 110 7 77 1 240 3 318 1 242 4 347 1 246 1 138 4 58 1 368 2 140 2 200 1 351 2 17 2 325 1 121 1 307 2 92 7 
77 1 240 2 242 3 24 1 246 1 138 3 368 1 171 2 140 1 283 1 363 1 351 1 17 1 121 1 307 1 364 1 92 4 110 4 
137 1 99 1 190 1 347 1 138 1 24 1 368 1 140 1 315 1 283 1 363 1 351 1 121 1 92 2 267 1 110 2 
313 1 24 1 171 2 315 1 283 1 363 1 108 1 364 1 110 9 77 1 240 4 318 1 242 7 138 5 246 1 58 1 368 2 140 1 351 2 17 3 225 1 121 1 307 1 92 9 
313 1 24 1 171 2 315 1 283 1 363 1 108 1 364 1 110 9 77 1 240 4 318 1 242 7 138 5 246 1 58 1 368 2 140 1 351 2 17 3 225 1 121 1 307 1 92 9 
269 1 127 1 181 1 36 1 248 1 61 1 131 1 197 1 373 1 227 1 65 1 39 1 354 1 381 1 
229 1 
204 1 127 2 229 1 65 2 308 1 145 1 334 1 381 1 
160 1 127 5 82 1 229 1 4 1 194 1 48 2 301 1 87 1 337 2 63 1 339 1 340 2 204 2 65 5 308 1 145 1 381 2 253 1 
229 1 191 1 145 1 
23 2 333 1 229 1 
197 2 131 1 373 2 39 2 146 1 36 2 354 2 61 2 
125 1 168 2 102 1 280 1 331 1 152 2 129 1 196 1 197 2 131 1 73 1 134 1 366 1 241 1 33 1 243 1 56 1 299 1 16 1 36 3 61 2 350 1 201 1 226 1 373 3 118 1 119 1 120 2 305 1 277 1 93 1 206 1 39 2 146 1 123 2 354 2 95 2 
197 1 131 1 373 1 269 1 39 1 181 1 36 1 354 1 248 1 61 1 
255 1 271 1 127 1 229 1 36 1 181 1 373 1 328 1 76 1 65 1 343 1 378 1 145 1 354 1 
255 1 127 2 229 1 36 1 181 1 61 1 197 1 373 1 65 2 76 1 39 1 343 1 378 1 145 1 354 1 
204 1 286 1 127 1 65 1 381 1 
204 1 127 2 229 1 65 2 308 1 145 1 165 1 381 1 
204 1 127 1 65 1 
197 1 373 2 210 1 39 1 146 2 36 2 354 2 5 1 61 1 
11 1 356 1 236 1 
125 1 280 1 331 1 56 1 36 1 259 1 152 1 129 1 201 1 373 1 119 1 206 1 146 1 123 1 134 1 95 1 
125 1 280 1 331 1 56 1 13 1 36 2 61 1 152 1 129 1 201 1 373 2 236 1 119 1 38 1 206 1 39 1 123 1 354 1 134 1 95 1 
191 1 146 1 
210 1 13 1 85 1 45 1 36 5 61 4 197 1 373 5 64 1 328 1 38 2 39 4 146 1 354 5 
67 1 373 2 39 2 181 1 36 2 354 2 248 1 61 2 
197 1 373 3 38 1 39 3 146 1 36 3 354 3 61 3 
373 1 39 1 181 1 36 1 354 1 248 1 61 1 
197 1 373 1 210 1 39 1 181 1 5 1 36 1 354 1 61 1 
125 1 168 1 102 1 280 1 255 1 331 1 210 1 127 1 260 1 129 1 152 1 215 1 197 2 131 1 73 1 76 1 343 1 134 1 366 1 241 1 243 1 56 1 13 1 299 1 16 1 36 4 181 1 61 3 201 1 226 1 373 4 119 1 120 2 277 1 38 1 65 1 93 1 206 1 39 3 378 1 146 1 123 1 354 3 95 1 
373 2 64 1 328 1 38 1 39 1 146 1 36 2 354 2 61 1 
21 1 255 1 210 1 127 1 13 1 229 1 181 1 36 3 61 3 215 1 197 1 373 3 65 1 76 1 38 2 39 3 343 1 378 1 354 3 
356 1 210 1 36 2 61 2 197 1 373 2 236 1 38 1 39 2 354 2 
125 1 280 1 331 1 56 1 36 1 152 1 129 1 201 1 373 1 119 1 206 1 146 1 123 1 134 1 95 1 
125 1 280 1 331 1 36 1 152 1 201 1 373 1 203 1 119 1 29 1 206 1 146 1 123 1 134 1 95 1 
207 1 147 1 356 2 102 1 168 4 281 1 212 1 192 1 196 2 284 1 236 2 366 1 11 2 241 1 346 1 243 1 296 1 274 1 299 1 16 2 37 1 120 2 93 1 252 1 
67 1 373 1 378 1 39 1 181 1 36 1 354 1 61 1 
338 1 15 1 59 1 
130 1 290 1 314 1 15 2 59 2 311 1 
15 1 59 1 
15 1 59 1 
290 1 311 1 
290 1 311 1 
290 1 311 1 
15 1 59 1 317 1 
15 1 59 1 317 1 
15 1 59 1 317 1 
15 1 59 1 254 1 
15 1 59 1 254 1 
15 1 59 1 254 1 
97 1 209 1 127 1 195 1 338 1 287 1 135 1 31 1 159 1 79 1 15 1 59 1 36 2 61 2 183 1 276 1 373 2 88 1 91 1 90 1 65 1 39 2 146 1 354 2 
208 1 209 3 295 2 127 2 229 1 314 1 15 2 59 2 349 1 202 1 27 1 374 1 287 1 88 2 91 2 353 1 65 2 135 2 31 2 
137 1 24 2 307 1 69 2 7 1 
24 1 307 1 140 1 
137 1 24 1 140 1 
137 1 371 1 24 3 69 1 307 2 7 1 
137 1 24 2 69 1 307 1 70 1 7 1 
207 1 23 3 333 1 127 5 3 2 212 1 229 2 192 1 48 1 195 1 337 1 339 1 340 1 155 2 288 2 237 1 32 1 159 1 160 2 319 1 79 1 244 1 84 1 62 1 37 1 63 3 204 1 89 1 65 5 308 1 145 1 381 4 
207 3 23 9 333 3 127 9 3 6 212 3 229 5 192 3 48 2 337 2 339 1 340 2 235 1 286 5 155 6 237 2 160 6 79 4 319 2 162 1 81 1 244 1 62 3 223 1 37 3 166 1 63 8 204 6 66 1 377 5 65 9 308 1 145 1 253 1 381 7 
207 1 23 4 333 2 127 3 229 3 212 1 3 2 192 1 48 1 337 1 340 1 288 1 155 2 237 1 32 1 319 1 79 1 160 2 62 1 37 1 63 3 89 1 65 3 145 1 381 2 253 1 
207 2 23 7 333 3 127 4 229 4 3 4 212 2 192 2 48 1 337 1 340 1 155 4 288 2 237 1 32 1 319 1 79 2 160 4 81 1 62 2 223 1 37 2 63 5 89 1 66 1 65 4 145 1 253 1 381 3 
1 1 
109 1 119 1 191 1 
320 1 119 1 
331 1 119 1 206 1 
119 1 57 1 
331 1 119 1 
158 1 1 1 331 1 109 2 119 2 206 1 278 1 
168 9 101 1 192 2 196 5 49 1 26 1 54 1 157 1 198 1 55 1 296 3 321 1 163 1 322 1 273 1 16 4 37 2 141 1 252 2 
207 3 0 1 312 1 101 2 168 33 102 1 357 3 332 4 212 3 258 1 193 1 192 5 49 1 196 17 173 1 26 1 54 1 157 1 366 1 198 2 55 2 243 1 296 11 35 1 321 2 322 1 163 2 299 1 16 16 62 3 37 5 141 6 120 2 252 5 94 1 
0 1 101 1 102 2 168 11 192 2 25 1 196 6 49 1 26 1 157 1 366 2 198 1 55 1 243 2 296 5 321 1 163 1 322 1 83 1 299 2 16 5 37 2 141 2 120 4 252 3 
168 9 101 1 192 2 49 1 196 5 26 1 54 1 157 1 198 1 55 1 296 3 321 1 163 1 322 1 16 4 37 2 141 1 252 2 
168 9 101 1 192 2 49 1 196 5 26 1 54 1 157 1 198 1 55 1 296 4 321 1 163 1 322 1 16 4 37 2 141 2 252 2 
187 2 280 1 330 1 331 1 105 2 214 1 315 2 47 1 152 1 234 1 134 1 110 1 293 2 113 1 368 1 300 1 351 1 201 1 249 1 119 1 92 1 123 1 95 1 
187 1 280 1 24 2 105 1 315 1 152 1 363 1 74 1 110 1 293 1 137 1 80 1 368 1 348 1 140 1 351 1 201 1 184 1 371 1 250 1 307 1 92 1 18 1 123 1 20 1 95 1 
187 1 280 1 24 2 105 1 315 1 283 1 152 1 363 1 74 1 110 2 293 1 137 1 242 1 80 1 138 1 368 1 348 1 140 1 351 1 201 1 184 1 371 1 185 1 250 1 121 1 307 1 92 2 18 1 123 1 95 1 
187 1 280 1 24 2 257 1 105 1 315 1 283 1 152 1 74 1 110 3 293 1 137 1 242 2 80 1 138 1 368 1 348 1 140 1 351 1 201 1 184 1 371 1 249 1 250 1 121 1 307 1 92 3 123 1 20 1 95 1 
187 1 280 1 24 2 257 1 105 1 315 1 283 1 152 1 74 1 110 2 293 1 137 1 242 2 80 1 138 1 348 1 140 1 201 1 371 1 121 1 307 1 92 2 123 1 20 1 95 1 
41 1 
280 1 331 1 333 2 149 1 229 2 47 1 48 1 152 2 337 1 339 1 234 1 340 1 341 1 343 1 112 1 199 2 160 2 164 1 201 1 63 2 117 1 204 6 119 1 65 5 122 1 308 3 123 2 354 1 23 2 255 1 169 2 127 5 358 4 256 2 261 1 177 2 76 1 265 2 365 1 134 2 220 1 319 1 271 1 36 1 181 1 86 2 182 1 142 2 373 1 228 1 328 1 378 1 145 1 380 1 95 2 
255 1 358 2 127 3 271 1 164 1 334 1 181 1 36 1 86 1 117 1 373 1 204 2 341 1 328 1 76 1 65 3 122 1 308 1 378 1 343 1 365 1 354 1 
255 1 127 3 358 3 256 1 229 1 334 1 341 1 76 1 343 1 365 1 271 1 164 1 36 1 181 1 373 1 117 1 204 1 328 1 122 1 65 3 378 1 308 1 145 1 354 1 
255 1 127 3 358 3 256 1 229 1 334 1 341 1 76 1 343 1 365 1 271 1 164 1 36 1 181 1 86 1 142 1 373 1 117 1 204 2 328 1 122 1 65 3 308 1 378 1 145 1 354 1 
255 1 127 3 358 2 149 1 128 1 334 1 48 1 6 1 337 1 339 1 340 1 132 1 341 1 289 1 76 1 343 1 365 1 160 1 271 1 14 1 164 1 36 1 181 1 86 2 142 2 63 1 117 1 373 1 204 3 328 1 122 1 65 3 308 1 378 1 354 1 
333 2 149 1 229 2 48 1 337 1 339 1 340 1 341 1 343 1 160 1 199 2 164 1 63 1 117 1 204 4 65 4 122 1 308 2 354 1 255 1 23 2 169 2 358 4 127 4 256 2 261 1 177 2 76 1 265 2 365 1 220 1 271 1 181 1 36 1 86 2 142 2 373 1 328 1 378 1 145 1 
255 1 127 2 358 2 149 1 128 1 6 1 48 1 337 1 339 1 340 1 341 1 76 1 343 1 365 1 160 1 271 1 14 1 164 1 36 1 181 1 63 1 373 1 117 1 328 1 122 1 65 2 378 1 354 1 
255 1 127 2 358 2 149 1 128 1 6 1 48 1 337 1 339 1 340 1 341 1 76 1 343 1 365 1 160 1 271 1 14 1 164 1 36 1 181 1 63 1 373 1 117 1 328 1 122 1 65 2 378 1 354 1 
255 1 127 2 358 2 361 1 48 1 337 1 285 1 339 1 340 1 341 1 76 1 343 1 365 1 160 1 271 1 247 1 14 1 164 1 36 1 181 1 63 1 373 1 117 1 328 1 122 1 65 2 378 1 354 1 
255 1 127 2 358 3 149 1 256 1 128 1 48 1 6 1 337 1 339 1 340 1 341 1 132 1 76 1 343 1 365 1 160 1 271 1 14 1 164 1 36 1 181 1 86 1 142 1 63 1 373 1 117 1 204 1 328 1 122 1 65 2 378 1 354 1 
255 1 127 2 358 3 149 1 256 1 128 1 48 1 6 1 337 1 339 1 340 1 341 1 132 1 76 1 343 1 365 1 160 1 271 1 14 1 164 1 36 1 181 1 86 1 142 1 63 1 373 1 117 1 204 1 328 1 122 1 65 2 378 1 354 1 
229 1 48 1 337 1 339 1 340 1 341 1 343 1 160 1 164 1 63 1 117 1 204 4 65 4 122 1 308 2 354 1 255 1 23 2 169 2 358 4 127 4 68 2 256 2 361 1 261 1 76 1 265 2 365 1 220 1 271 1 139 2 181 1 36 1 86 2 142 2 373 1 328 1 378 1 145 1 
280 2 102 2 168 2 331 2 44 1 47 1 172 1 152 7 196 1 234 1 178 1 134 2 366 2 241 2 346 1 33 1 243 2 298 1 323 1 179 1 114 1 299 2 16 1 36 1 61 1 201 2 185 1 226 1 373 1 119 3 120 4 305 2 38 1 39 1 93 2 123 8 20 1 354 1 95 8 
207 1 356 1 102 1 168 3 210 1 212 1 192 1 196 1 197 1 236 1 366 1 11 1 241 1 243 1 296 1 245 1 299 1 16 2 36 1 61 1 62 1 37 1 373 1 120 2 205 1 93 1 39 1 252 1 354 1 
49 1 241 1 102 1 346 1 243 1 120 2 191 1 299 1 93 1 157 1 366 1 
207 1 356 4 102 2 168 14 357 3 332 3 212 2 258 1 192 2 196 8 174 1 72 1 236 11 366 2 11 11 241 1 33 1 243 2 296 2 245 1 35 1 221 1 299 2 16 6 62 2 37 1 141 1 226 1 120 4 167 1 93 2 146 1 252 1 
356 1 125 1 148 1 280 1 102 1 168 2 331 1 259 1 129 1 152 1 196 1 134 1 366 1 12 1 241 1 33 1 243 1 56 1 245 1 13 1 299 1 16 1 36 2 61 1 201 1 370 1 226 1 373 2 119 1 120 2 38 1 206 1 93 1 39 1 146 1 123 1 354 1 95 1 
101 1 102 3 280 2 331 2 231 1 192 4 152 1 49 1 196 11 107 2 51 1 236 6 157 1 11 6 241 3 55 1 243 3 296 5 245 1 56 2 13 1 299 3 16 11 61 1 62 2 201 2 119 2 120 6 206 2 123 1 252 4 354 1 207 2 356 6 125 2 168 22 126 2 212 2 213 1 360 2 129 2 26 1 71 2 73 2 134 1 366 3 33 1 322 1 181 1 36 3 37 4 141 1 226 1 373 3 38 1 39 1 93 3 146 1 95 1 
11 1 356 1 241 1 168 2 346 1 102 1 243 1 296 1 212 1 299 1 192 1 196 2 141 1 284 1 236 1 120 2 93 1 366 1 
11 1 207 1 356 1 241 1 168 2 346 1 102 1 243 1 281 1 296 1 299 1 16 2 37 1 236 1 120 2 93 1 252 1 366 1 
207 1 356 2 102 1 168 4 212 1 192 1 196 2 236 2 366 1 11 2 241 1 346 1 243 1 296 2 299 1 16 2 62 1 37 1 141 1 120 2 93 1 252 1 
11 1 356 1 241 1 168 2 102 1 243 1 296 1 212 1 299 1 192 1 196 2 141 1 284 1 236 1 120 2 93 1 178 1 366 1 
11 1 207 1 356 1 241 1 168 2 102 1 243 1 281 1 296 1 299 1 16 2 37 1 236 1 120 2 93 1 252 1 178 1 366 1 
207 1 356 2 102 1 168 4 212 1 192 1 196 2 236 2 178 1 366 1 11 2 241 1 243 1 296 2 299 1 16 2 62 1 37 1 141 1 120 2 93 1 252 1 
207 1 11 2 356 2 241 1 102 1 168 4 243 1 296 2 212 1 299 1 16 2 192 1 62 1 37 1 196 2 141 1 236 2 120 2 93 1 252 1 366 1 
125 1 168 2 280 1 102 1 331 1 129 1 152 1 196 1 73 1 134 1 366 1 241 1 33 1 243 1 56 1 299 1 16 1 36 1 201 1 226 1 373 1 119 1 120 2 206 1 93 1 146 1 123 1 95 1 
98 1 125 1 168 2 280 1 102 1 331 1 152 1 196 1 29 1 134 1 366 1 241 1 33 1 243 1 299 1 16 1 36 1 201 1 226 1 203 1 373 1 119 1 120 2 206 1 93 1 146 1 123 1 95 1 
207 1 356 2 102 1 168 4 212 1 192 1 196 2 236 2 366 1 11 2 241 1 243 1 245 1 296 2 299 1 16 2 62 1 37 1 141 1 120 2 93 1 252 1 
207 1 356 2 125 1 168 4 280 1 102 1 126 1 331 1 212 1 192 1 129 1 152 1 196 2 236 2 73 1 366 1 11 2 241 1 243 1 296 2 56 1 299 1 16 2 36 1 62 1 37 1 201 1 141 1 185 1 373 1 119 1 120 2 206 1 93 1 252 1 123 1 95 1 
207 1 356 1 102 1 168 3 210 1 212 1 192 1 336 1 196 2 197 1 236 1 366 1 11 1 241 1 243 1 296 1 245 1 299 1 16 1 36 1 61 1 62 1 37 1 141 1 373 1 120 2 93 1 39 1 354 1 
207 2 355 1 102 2 168 13 43 1 357 1 332 2 212 2 258 1 192 2 104 1 25 1 196 6 264 1 53 1 10 1 366 2 243 2 296 4 35 1 299 2 16 7 222 1 62 2 37 2 141 2 116 1 120 4 144 1 252 2 
207 1 355 2 279 1 0 2 22 1 102 3 168 20 43 3 357 2 332 2 212 2 192 2 25 1 263 1 196 11 262 1 264 1 176 1 218 1 10 2 366 3 243 3 296 2 35 2 299 3 16 9 222 1 62 2 37 1 141 1 120 6 144 1 252 1 
207 1 355 1 102 2 168 9 43 1 357 1 332 2 212 1 258 1 192 1 25 1 196 4 264 1 10 1 366 2 243 2 296 2 35 1 299 2 16 5 222 1 62 1 37 1 141 1 116 1 120 4 144 1 252 1 
207 1 355 1 102 2 168 9 43 1 357 1 332 2 212 1 258 1 192 1 25 1 196 4 264 1 10 1 366 2 243 2 296 2 35 1 299 2 16 5 222 1 62 1 37 1 141 1 116 1 120 4 144 1 252 1 
207 6 355 1 0 1 279 1 22 1 102 2 168 41 43 3 357 4 332 4 212 6 258 2 192 6 25 1 49 1 263 1 262 1 196 21 264 1 176 1 218 1 10 1 157 1 366 2 243 2 296 11 35 2 221 2 299 2 16 20 222 1 62 6 37 6 141 6 120 4 144 1 252 5 
136 1 27 1 374 1 88 1 91 1 314 1 15 1 59 1 135 1 31 1 
97 1 338 1 
34 1 88 1 91 1 15 1 156 1 59 1 135 1 335 1 31 1 
317 1 362 1 
130 1 367 1 254 1 
209 2 295 1 127 1 229 1 314 1 15 1 59 1 349 1 202 1 27 1 374 1 287 1 88 1 91 1 353 1 65 1 135 1 31 1 
209 2 295 1 127 1 229 1 314 1 15 1 59 1 349 1 202 1 27 1 374 1 287 1 88 1 91 1 353 1 65 1 135 1 31 1 
209 2 295 1 127 1 229 1 314 1 15 1 59 1 349 1 202 1 27 1 374 1 287 1 88 1 91 1 353 1 65 1 135 1 31 1 
130 1 317 1 362 1 
130 1 317 1 362 1 
367 1 254 1 
130 1 367 1 254 1 
276 1 90 1 
97 1 209 1 127 1 195 1 153 1 338 1 135 1 31 1 295 1 159 1 79 1 15 1 36 2 59 1 349 1 183 1 61 2 276 1 373 2 88 1 91 1 90 1 65 1 39 2 146 1 354 2 381 1 
280 1 102 1 168 2 331 1 151 1 152 2 196 1 238 1 366 1 78 1 241 1 33 1 161 1 243 1 245 1 179 1 114 1 299 1 16 1 36 2 201 1 226 1 373 2 119 1 376 1 120 2 305 2 93 1 123 2 354 2 95 2 
187 1 280 1 331 1 300 1 47 1 152 1 201 1 232 1 224 1 234 1 119 1 123 1 134 1 95 1 
187 1 137 1 188 1 280 1 80 1 24 2 272 1 140 1 152 1 201 1 232 1 184 1 371 1 74 1 307 1 123 1 20 1 95 1 
187 1 137 1 188 1 280 1 80 1 24 2 272 1 140 1 152 2 201 1 232 1 184 1 371 1 185 1 74 1 307 1 123 2 20 1 95 2 
187 1 137 1 294 1 188 1 280 1 80 1 24 2 140 1 152 1 201 1 184 1 371 1 74 1 307 1 123 1 20 1 95 1 
239 1 
160 1 82 1 229 1 48 1 194 1 337 1 339 1 63 1 340 1 145 1 
207 2 160 5 23 10 270 2 333 5 212 2 3 5 229 5 360 1 192 2 62 2 37 2 63 5 155 5 30 1 
127 1 204 1 229 1 65 1 308 1 145 1 
280 1 331 1 127 3 48 2 47 1 152 4 8 1 337 2 339 1 340 2 234 1 134 2 345 1 112 1 319 2 160 2 182 2 60 2 201 1 63 2 228 1 204 4 119 1 65 3 379 1 308 2 123 4 253 1 95 4 
63 1 160 1 82 1 229 1 191 1 145 1 194 1 
23 1 333 1 127 1 149 1 229 2 48 1 337 1 339 1 340 1 177 1 199 1 160 1 63 1 204 1 65 1 308 1 145 1 
100 1 280 4 2 2 331 3 333 6 3 6 229 8 192 2 46 2 282 2 194 1 48 4 152 3 337 4 339 4 340 4 109 2 155 6 160 8 57 2 60 1 62 2 201 3 63 9 204 5 119 10 304 2 352 2 251 1 65 5 206 3 308 3 123 3 207 2 23 12 127 5 359 2 212 2 360 2 76 2 134 1 30 2 319 2 270 2 320 3 82 1 182 1 37 2 185 1 372 1 379 1 145 2 278 1 95 3 
207 2 279 1 22 1 23 6 357 1 127 1 332 1 333 3 3 5 229 5 212 2 192 2 48 2 337 2 262 1 50 1 339 2 340 2 176 1 155 5 218 1 30 1 319 1 160 5 270 2 35 1 182 1 62 2 37 2 63 8 143 1 204 1 65 1 308 1 145 2 
101 1 127 1 128 1 192 2 48 1 337 1 26 1 339 1 131 1 197 1 340 1 30 1 160 2 55 1 269 1 270 2 322 1 181 1 36 1 248 1 61 1 37 1 63 2 373 1 227 1 65 1 39 1 354 1 
125 1 168 1 280 1 102 1 331 1 152 1 129 1 197 2 131 1 73 1 134 1 366 1 241 1 243 1 56 1 299 1 16 1 36 3 61 2 201 1 226 1 373 3 119 1 120 2 277 1 39 2 206 1 93 1 146 1 123 1 354 2 95 1 
23 4 160 2 319 1 333 2 321 1 3 2 229 4 48 1 182 1 337 1 339 1 63 1 340 1 155 2 145 2 
27 1 88 1 75 1 90 1 31 1 
88 1 344 1 31 1 
88 1 344 1 31 1 
88 1 344 1 31 1 
88 1 180 1 31 1 
88 1 180 1 31 1 
88 1 180 1 31 1 
88 1 31 1 
15 1 59 1 
102 1 101 2 168 10 243 1 55 2 296 5 322 1 299 1 16 5 192 2 25 1 196 5 37 2 141 2 26 1 120 2 252 3 366 1 
102 1 168 2 243 1 296 1 212 1 299 1 192 1 25 1 196 2 141 1 120 2 366 1 
207 1 102 1 168 4 243 1 296 2 212 1 299 1 16 2 192 1 25 1 62 1 37 1 196 2 141 1 120 2 252 1 366 1 
0 1 168 3 102 3 101 1 243 3 55 1 296 2 299 3 16 2 25 1 196 1 141 1 116 1 154 1 120 6 252 1 366 3 
207 2 0 1 312 1 101 1 102 4 168 24 357 3 332 3 212 2 193 1 192 4 25 1 49 1 196 12 173 1 26 1 266 1 157 1 366 4 55 1 243 4 296 6 35 1 322 1 299 4 16 12 62 2 37 4 141 3 116 1 120 8 252 3 
0 1 102 2 101 1 168 10 192 2 49 1 196 5 26 1 157 1 366 2 243 2 55 1 296 4 322 1 299 2 16 5 37 2 141 2 120 4 252 2 
49 1 191 1 157 1 
207 1 102 1 168 4 243 1 296 2 212 1 299 1 16 2 192 1 62 1 37 1 196 2 141 1 120 2 266 1 252 1 366 1 
207 1 168 7 357 1 332 2 296 2 35 1 212 1 16 4 258 1 192 1 62 1 37 1 196 3 141 1 252 1 
207 2 0 1 101 1 168 20 102 1 357 2 332 2 212 2 192 4 258 1 49 1 196 10 26 1 157 1 366 1 55 1 243 1 296 5 322 1 221 1 299 1 16 10 62 2 37 4 141 2 120 2 167 1 252 3 
168 1 332 1 16 1 
196 1 168 1 357 1 
207 1 102 1 168 6 243 1 296 3 212 1 360 1 299 1 16 3 192 1 62 1 196 3 37 1 141 1 120 2 266 1 252 2 366 1 
207 2 22 1 279 1 168 12 102 1 357 1 332 1 212 2 192 2 25 1 196 6 262 1 176 1 218 1 366 1 243 1 296 2 35 1 299 1 16 6 62 2 37 2 141 1 120 2 252 1 
168 6 101 1 55 1 296 2 192 1 16 3 196 3 37 1 26 1 141 1 252 1 
0 1 101 1 168 3 102 1 55 1 243 1 296 2 322 1 299 1 16 2 196 1 49 1 141 1 154 1 120 2 252 1 157 1 366 1 
22 1 168 10 102 1 101 1 357 1 332 1 192 2 25 1 196 5 49 1 26 1 157 1 366 1 243 1 55 1 296 3 35 1 322 1 299 1 16 5 37 2 141 1 120 2 252 2 
22 1 101 1 168 13 102 2 357 1 332 2 212 1 258 1 192 3 25 1 49 1 196 7 26 1 266 1 157 1 366 2 55 1 243 2 296 4 35 1 322 1 299 2 16 6 62 1 37 2 141 2 120 4 252 2 
207 2 279 1 22 1 0 1 101 1 168 21 102 3 357 1 332 1 212 2 192 4 25 1 49 1 196 10 262 1 26 1 176 1 218 1 266 1 157 1 366 3 55 1 243 3 296 5 35 1 322 1 299 3 16 11 62 2 37 4 141 2 120 6 252 3 
207 1 0 1 22 1 279 1 101 1 168 19 102 3 357 1 332 1 212 2 192 4 25 1 49 1 196 11 262 1 26 1 176 1 218 1 266 1 157 1 366 3 55 1 243 3 296 6 35 1 322 1 299 3 16 8 62 2 37 3 141 3 120 6 252 3 
22 1 168 10 102 1 101 1 357 1 332 1 192 2 25 1 196 5 49 1 26 1 157 1 366 1 243 1 55 1 296 3 35 1 322 1 299 1 16 5 37 2 141 1 120 2 252 2 
207 2 22 1 279 1 168 12 102 1 357 1 332 1 212 2 192 2 25 1 196 6 262 1 176 1 218 1 366 1 243 1 296 2 35 1 299 1 16 6 62 2 37 2 141 1 120 2 252 1 
207 1 279 1 22 1 0 2 101 1 168 20 102 4 357 1 332 1 212 2 192 4 25 1 49 1 196 11 262 1 26 1 176 1 218 1 266 1 157 1 366 4 55 1 243 4 296 5 35 1 322 1 299 4 16 9 62 2 37 3 141 2 120 8 252 3 
207 2 279 1 22 1 0 2 168 16 102 4 357 1 332 1 212 3 192 3 25 1 196 9 262 1 176 1 218 1 366 4 243 4 296 6 35 1 299 4 16 7 62 3 37 2 141 3 116 1 120 8 252 3 
168 5 101 2 55 2 296 4 322 1 16 3 192 1 37 1 196 2 49 1 26 1 141 2 252 2 157 1 
207 1 279 1 22 1 0 2 101 1 168 20 102 4 357 1 332 1 212 2 192 4 25 1 49 1 196 11 262 1 26 1 176 1 218 1 157 1 366 4 55 1 243 4 296 5 35 1 322 1 299 4 16 9 62 2 37 3 141 2 116 1 120 8 252 3 
373 1 64 1 328 1 369 1 146 1 36 1 354 1 
170 1 369 1 103 1 36 1 52 1 216 1 373 1 64 1 328 1 9 1 146 1 354 1 
292 1 280 1 331 1 211 1 47 1 152 4 201 1 185 1 234 1 119 1 123 4 134 1 95 4 
280 2 331 1 60 1 152 2 201 1 324 1 119 1 28 1 186 1 219 1 206 1 123 2 19 1 95 2 
201 1 137 1 280 1 24 1 74 1 123 1 140 1 134 1 95 1 152 1 
280 1 331 1 114 1 151 1 152 2 201 1 185 1 119 1 123 2 20 1 95 2 
292 1 280 2 331 2 298 1 114 1 44 1 47 1 60 1 152 4 201 2 185 1 234 1 119 3 123 5 134 1 95 5 
292 1 280 2 189 1 331 2 298 1 114 1 47 1 60 1 152 4 201 2 185 1 234 1 119 3 123 5 134 1 95 5 
201 1 280 1 234 1 331 1 119 1 191 1 123 1 134 1 47 1 95 1 152 1 
125 1 280 1 331 1 56 1 36 2 61 1 152 1 201 1 373 2 119 1 38 1 206 1 39 1 146 1 123 1 354 1 134 1 95 1 
125 1 280 1 255 1 331 2 152 1 56 1 57 1 36 2 181 1 60 1 61 1 201 1 373 2 119 3 304 1 38 1 39 2 206 2 378 1 146 1 123 1 354 2 95 1 
125 1 280 1 255 1 331 2 211 1 152 2 57 1 36 2 181 1 60 1 61 1 201 1 203 1 373 2 119 3 304 1 38 1 39 2 206 2 378 1 146 1 123 2 354 2 95 2 
280 1 331 1 127 2 211 1 229 1 152 3 109 1 76 1 134 1 320 1 57 1 60 1 201 1 302 1 204 1 119 4 304 1 65 2 206 1 123 3 145 1 96 1 95 3 
280 1 331 1 127 2 320 1 211 1 57 1 359 1 229 1 60 1 152 3 201 1 109 1 204 1 119 4 304 1 76 1 65 2 206 1 145 1 123 3 134 1 95 3 
201 1 280 1 123 1 95 1 152 1 172 1 
280 3 331 2 298 1 323 1 114 1 44 1 115 1 172 1 152 6 201 2 324 1 185 1 119 3 305 1 206 1 123 7 278 1 19 1 20 1 134 2 95 7 
102 2 280 1 101 1 331 1 192 2 152 1 49 1 196 4 157 1 241 2 243 2 161 1 55 1 56 1 245 1 296 3 299 2 16 4 61 1 201 1 119 1 120 4 206 1 123 1 252 2 354 1 125 1 168 8 126 1 213 1 129 1 26 1 71 1 73 1 366 2 322 1 181 1 36 2 37 2 141 1 185 1 373 2 38 1 39 1 93 2 146 1 95 1 
2 1 127 3 359 1 229 1 282 1 46 1 194 1 48 2 152 1 337 2 339 2 340 2 109 1 76 1 134 1 160 1 320 1 82 1 63 1 204 2 119 2 65 3 379 1 308 1 145 1 123 1 381 1 95 1 
280 2 331 1 172 1 152 2 201 1 185 1 109 1 119 2 251 1 206 1 123 2 278 1 95 2 
125 1 280 1 331 1 36 2 61 1 152 1 201 1 373 2 203 1 119 1 38 1 206 1 39 1 146 1 123 1 354 1 134 1 95 1 
280 2 331 1 115 1 60 1 152 1 201 1 324 1 119 1 206 1 123 1 278 1 19 1 95 1 
111 1 326 1 150 1 146 1 275 1 
111 2 255 1 127 2 229 1 150 1 181 1 316 1 275 2 215 1 326 2 217 1 306 1 76 1 65 2 378 1 343 1 146 1 145 1 381 1 
111 1 78 1 150 1 36 1 373 1 326 1 376 1 238 1 354 1 
217 1 150 1 316 1 
351 1 363 1 138 1 121 1 368 1 92 1 110 1 283 1 
240 1 242 2 190 1 138 3 368 1 283 2 351 1 175 1 17 1 375 1 121 2 342 1 92 4 110 4 
242 1 138 1 368 1 283 1 363 1 351 1 225 1 121 1 92 2 133 1 110 2 268 1 
351 1 363 1 175 2 375 1 190 2 327 1 138 1 121 1 368 1 92 3 110 3 283 1 
42 2 138 2 124 1 310 1 
351 1 363 1 233 1 368 1 92 1 110 1 
351 1 363 1 318 1 242 1 138 1 121 1 368 1 92 2 110 2 283 1 
303 1 
351 1 363 1 138 1 121 1 368 1 92 1 110 1 283 1 
138 1 121 1 191 1 283 1 
351 1 138 1 121 1 368 1 92 1 110 1 283 1 
293 1 110 1 315 1 
351 1 363 1 175 1 375 1 190 2 138 1 121 1 368 1 92 3 309 1 110 3 283 1 
351 1 242 1 138 1 121 1 368 1 92 2 171 1 110 2 283 1 
240 1 246 1 138 1 24 1 368 1 140 1 363 1 351 1 307 1 92 1 110 1 
351 1 363 1 138 1 121 1 368 1 92 1 110 1 
351 1 363 1 121 2 368 1 92 1 110 1 283 1 
40 1 138 1 297 1 368 2 363 1 351 2 121 1 291 1 92 2 110 2 
240 1 318 1 242 2 138 2 58 1 368 1 283 1 363 1 351 1 17 1 121 1 92 3 110 3 
137 1 242 1 138 1 24 2 368 1 140 1 283 1 363 1 351 1 371 1 121 1 307 1 92 2 110 2 329 1 
240 1 242 2 138 2 368 2 171 1 283 1 363 1 351 2 17 1 121 1 92 4 364 1 110 4 
351 1 363 1 318 1 242 1 190 1 138 1 121 1 368 1 92 3 110 3 283 1 
240 1 17 1 138 1 342 1 
138 1 121 1 

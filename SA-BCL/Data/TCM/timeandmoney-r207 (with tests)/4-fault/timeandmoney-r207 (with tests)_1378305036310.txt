#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (208,316) (208,316) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (208,316) 9 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (208,316) (208,316) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 168 1 123 9 69 3 333 1 289 9 97 1 337 1 172 1 199 1 249 1 128 2 132 2 105 2 362 1 251 5 83 1 160 1 298 1 87 6 112 4 282 2 140 2 352 2 27 1 221 1 353 1 381 2 
0 1 168 1 123 9 69 3 333 1 289 9 97 1 337 1 172 1 199 1 249 1 128 2 132 2 105 2 362 1 251 5 83 1 160 1 298 1 87 6 112 4 282 2 140 2 352 2 27 1 221 1 353 1 381 2 
0 1 168 1 123 10 69 4 333 1 289 10 97 1 337 1 172 1 199 1 249 1 128 2 132 2 105 2 362 1 251 6 83 1 160 1 298 1 87 7 112 5 282 2 140 2 352 2 27 1 221 1 353 1 381 2 
0 1 168 1 123 7 69 2 333 1 289 7 97 1 337 1 172 1 199 1 249 1 128 2 132 2 105 2 362 1 251 4 83 1 298 1 87 4 112 3 282 2 140 1 352 2 27 1 221 1 353 1 381 2 
83 1 69 1 123 4 289 4 160 1 298 1 97 1 87 3 112 2 249 1 282 1 140 2 132 1 352 1 105 1 362 1 251 3 381 1 
83 1 168 1 123 2 246 1 289 2 298 1 148 1 378 1 172 1 249 1 282 1 128 1 132 1 105 1 251 1 381 1 
83 1 123 3 69 1 333 1 289 3 298 1 87 1 112 1 249 1 282 2 128 1 105 2 251 2 
69 3 123 9 333 1 289 9 334 1 97 1 199 1 249 1 128 1 132 1 105 2 362 1 251 5 83 1 236 1 298 1 160 1 87 7 112 4 282 2 140 2 27 1 352 1 381 1 
69 3 123 9 333 1 289 9 334 1 97 1 199 1 249 1 128 1 132 1 105 2 362 1 251 5 83 1 236 1 298 1 160 1 87 7 112 4 282 2 140 2 27 1 352 1 381 1 
7 1 102 1 4 1 
7 1 68 2 261 1 
284 2 167 2 254 2 186 1 240 2 124 2 64 1 293 2 
46 2 284 2 167 2 28 1 29 2 31 1 70 1 96 1 33 1 124 2 126 1 248 1 358 1 265 2 311 1 37 1 129 1 315 1 293 2 250 1 234 2 156 1 158 1 111 1 254 3 255 2 323 1 215 1 347 1 348 1 237 1 350 1 113 1 186 1 240 3 64 1 142 1 
226 1 284 1 167 1 254 1 55 1 25 1 240 1 124 1 64 1 293 1 
284 1 357 1 254 1 223 1 184 1 42 1 4 1 7 1 163 1 240 1 55 1 241 1 45 1 82 1 
284 1 167 1 357 2 254 1 223 1 124 1 184 2 42 1 4 1 7 1 163 1 240 1 55 1 293 1 82 1 
67 1 209 1 357 1 184 1 336 1 
7 1 67 1 287 1 357 2 184 2 336 1 4 1 150 1 
67 1 357 1 184 1 
284 1 167 1 357 1 368 1 254 1 184 1 124 1 336 1 226 1 55 1 25 1 240 1 64 1 293 1 
7 1 
7 1 67 1 357 2 184 2 336 1 4 1 196 1 150 1 
67 2 357 5 184 5 336 2 373 2 170 1 61 2 20 1 4 1 150 1 7 1 101 1 280 1 62 1 271 1 173 1 92 1 294 1 355 2 
186 1 102 1 
284 2 167 1 254 2 371 1 71 1 124 1 186 2 240 2 293 1 
345 1 110 1 15 1 
234 1 28 1 29 1 31 1 254 1 255 1 33 1 358 1 350 1 23 1 311 1 37 1 186 1 240 1 142 1 250 1 
284 1 28 1 167 1 234 1 29 1 31 1 254 2 255 1 33 1 171 1 350 1 358 1 311 1 37 1 240 2 15 1 14 1 142 1 293 1 250 1 
284 3 167 3 254 3 186 1 124 1 240 3 171 1 293 3 
284 1 167 1 254 1 55 1 25 1 240 1 293 1 
284 1 167 1 254 1 55 1 371 1 240 1 124 1 71 1 293 1 
46 2 284 3 28 1 167 3 29 1 31 1 357 1 70 1 223 1 96 1 33 1 124 2 71 1 171 1 126 1 248 1 358 1 265 1 311 1 37 1 10 1 129 1 55 1 14 1 293 3 250 1 82 1 18 1 234 1 156 1 158 1 254 4 255 1 323 1 184 1 42 1 215 1 237 1 350 1 163 1 186 1 240 4 64 1 142 1 
284 2 167 1 198 1 254 2 186 1 240 2 293 1 171 1 45 1 
18 1 284 3 167 3 357 1 254 3 223 1 124 1 71 1 184 1 171 2 42 1 7 1 163 1 55 1 240 3 14 1 293 3 165 1 82 1 
284 2 167 2 345 1 254 2 71 1 124 1 171 1 240 2 15 1 293 2 
234 1 28 1 29 1 31 1 254 1 255 1 33 1 358 1 350 1 311 1 37 1 186 1 240 1 142 1 250 1 
234 1 28 1 29 1 31 1 254 1 255 1 181 1 33 1 358 1 350 1 37 1 186 1 240 1 250 1 154 1 
46 2 244 1 70 2 96 1 335 1 248 1 265 4 269 1 129 1 15 2 175 1 84 1 158 1 345 2 253 1 110 2 41 1 323 1 214 1 347 2 237 1 379 1 328 1 143 1 
284 1 167 1 344 1 254 1 55 1 240 1 42 1 293 1 
284 5 167 4 108 1 254 5 71 1 124 1 171 2 198 1 114 1 186 1 240 5 14 1 293 4 45 1 
284 2 167 2 344 1 254 2 55 1 25 1 240 2 293 2 
201 1 188 1 
201 1 188 1 
258 1 372 1 
258 1 372 1 
258 1 372 1 
200 1 201 1 188 1 
200 1 201 1 188 1 
120 1 201 1 188 1 
258 1 201 2 11 1 90 1 372 1 188 2 
200 1 201 1 188 1 
342 1 201 1 188 1 
342 1 201 1 188 1 
342 1 201 1 188 1 
40 1 320 1 107 1 357 2 275 1 34 2 184 2 257 2 75 3 7 1 8 1 302 1 80 1 201 2 11 1 89 2 188 2 131 2 117 2 
284 2 167 2 122 1 120 1 357 1 34 1 75 1 79 1 201 1 293 2 131 1 272 1 40 1 343 1 254 2 182 1 184 1 375 1 89 1 185 1 186 1 240 2 188 1 117 1 
132 1 352 1 381 1 
132 1 148 1 381 1 
65 1 115 1 352 2 148 1 49 1 381 3 
127 1 225 1 65 1 115 1 148 1 381 1 
65 1 115 2 352 1 148 1 381 2 
67 1 68 3 357 5 224 2 261 1 336 4 4 1 150 1 7 2 267 1 79 1 101 1 173 2 231 1 271 3 204 1 232 1 343 1 212 1 253 1 41 1 136 1 276 2 184 5 373 1 375 1 214 1 61 1 301 2 379 1 24 1 355 1 
284 1 336 7 4 1 150 1 7 5 101 1 51 1 55 1 293 1 204 1 294 1 209 5 253 3 254 1 61 2 214 3 300 1 349 1 25 1 64 1 355 2 67 6 167 1 68 9 357 9 224 6 124 1 261 3 226 1 267 3 230 1 231 2 271 8 173 6 317 1 319 1 368 1 235 5 136 2 41 3 184 9 276 6 373 2 375 4 379 3 240 1 
68 4 357 3 224 2 261 2 336 2 4 1 7 3 267 1 231 1 271 3 173 2 232 1 294 1 253 1 136 1 41 1 184 3 276 2 373 1 375 1 61 1 214 1 301 1 379 1 24 1 355 1 
68 8 357 4 224 4 261 4 336 3 4 1 7 5 267 2 230 1 231 1 271 5 173 4 294 1 232 1 319 1 253 2 136 1 41 2 276 4 184 4 373 1 375 2 61 1 214 2 349 1 301 2 379 2 24 1 355 1 
31 1 102 1 243 1 
31 1 292 1 
162 1 
31 1 33 1 
350 1 197 1 367 1 31 3 33 1 243 2 
350 1 31 1 33 1 
31 1 141 1 
244 3 288 1 70 3 253 1 41 1 194 1 183 1 324 1 3 1 74 2 326 1 347 4 265 7 313 1 38 1 328 2 259 1 
244 3 288 1 70 3 253 1 41 1 194 1 183 1 324 1 3 1 74 2 326 1 347 4 265 7 313 1 38 1 328 2 259 1 
244 3 288 1 192 1 70 3 253 1 41 1 194 1 183 1 324 1 3 1 74 2 326 1 347 4 265 7 313 1 38 1 328 2 259 1 
46 2 244 10 47 1 306 1 288 1 70 15 194 2 3 5 74 3 248 1 265 31 267 3 151 1 313 2 38 1 158 1 253 4 41 4 323 1 324 1 183 2 296 1 137 1 214 3 347 16 326 2 237 1 379 3 283 1 220 1 304 3 328 5 66 4 259 1 
46 4 244 4 47 1 288 1 70 4 194 1 3 1 74 2 248 2 265 9 313 1 340 1 38 1 158 2 253 1 41 1 180 1 323 2 183 1 324 1 347 5 326 1 237 2 328 3 
28 1 29 1 123 2 145 1 289 2 148 1 49 1 338 1 99 1 249 1 37 1 128 1 153 1 132 1 105 1 251 1 365 1 83 1 234 1 255 1 298 1 376 1 87 1 282 1 139 1 351 1 242 1 305 1 352 1 381 2 
285 1 28 1 29 1 123 3 145 1 289 3 148 1 49 1 338 1 291 1 99 1 249 1 37 1 128 1 153 1 132 1 105 1 251 1 83 1 234 1 255 1 376 1 87 2 282 1 187 1 351 1 242 1 305 1 352 1 381 2 
285 1 28 1 29 1 123 2 289 2 148 1 49 1 338 1 99 1 249 1 37 1 128 1 153 1 132 1 251 1 83 1 234 1 255 1 87 2 187 1 351 1 242 1 305 1 352 1 381 2 
28 1 29 1 123 1 31 1 33 1 289 1 338 2 358 1 291 1 37 1 361 1 52 1 128 2 54 1 270 1 153 2 103 1 105 1 234 1 255 1 303 1 282 1 351 2 
285 1 28 1 29 1 123 1 145 1 289 1 148 1 49 1 338 1 99 1 37 1 128 1 153 1 132 1 105 1 234 1 255 1 298 1 376 1 282 1 139 1 351 1 242 1 305 1 352 1 381 2 
118 1 
284 1 146 1 4 1 150 3 7 2 101 1 52 1 53 1 12 1 55 1 17 1 295 1 210 2 255 2 254 1 213 2 61 1 216 2 163 1 355 1 67 6 68 2 307 2 28 1 29 2 30 1 357 5 31 1 223 1 169 2 33 1 261 2 125 1 358 2 227 1 229 2 37 1 268 1 361 1 173 2 271 2 231 1 82 1 177 1 234 2 135 4 85 1 274 2 322 1 184 5 373 1 42 1 240 1 241 1 45 1 
177 1 295 1 67 2 284 1 135 2 357 3 254 1 223 1 184 3 146 1 42 1 196 1 150 1 229 1 163 1 268 1 12 1 55 1 240 1 241 1 82 1 45 1 
67 1 284 1 357 3 223 1 146 1 4 1 196 1 150 1 7 1 268 1 12 1 55 1 82 1 295 1 177 1 135 3 254 1 213 1 184 3 42 1 163 1 240 1 241 1 45 1 
284 1 67 2 357 3 223 1 146 1 4 1 196 1 150 1 7 1 229 1 268 1 12 1 55 1 82 1 295 1 177 1 135 3 254 1 274 1 213 1 184 3 42 1 163 1 240 1 241 1 45 1 
284 1 146 1 195 1 4 5 196 1 150 3 7 5 101 1 12 1 55 1 17 1 295 1 210 2 254 1 213 4 61 1 216 2 218 1 163 1 355 1 67 7 307 2 357 5 223 1 169 2 261 2 229 4 268 1 271 1 173 1 82 1 176 1 177 1 273 1 135 6 85 1 274 4 184 5 42 1 373 1 278 1 240 1 241 1 45 1 
284 1 146 1 4 1 150 2 7 2 101 1 12 1 55 1 17 1 295 1 210 2 254 1 213 2 61 1 216 2 163 1 355 1 67 4 307 2 68 2 357 4 223 1 169 2 261 2 229 2 268 1 271 1 173 1 82 1 177 1 135 4 85 1 274 2 322 1 184 4 42 1 373 1 240 1 241 1 45 1 
67 4 284 1 307 2 357 4 223 1 169 2 261 2 146 1 4 1 150 2 7 1 101 1 229 2 268 1 12 1 55 1 173 1 271 1 17 1 82 1 176 1 295 1 177 1 273 1 210 2 135 4 85 1 274 2 254 1 213 2 184 4 42 1 373 1 61 1 216 2 218 1 163 1 240 1 241 1 45 1 355 1 
67 4 284 1 307 2 357 4 223 1 169 2 261 2 146 1 4 1 150 2 7 1 101 1 229 2 268 1 12 1 55 1 173 1 271 1 17 1 82 1 176 1 295 1 177 1 273 1 210 2 135 4 85 1 274 2 254 1 213 2 184 4 42 1 373 1 61 1 216 2 218 1 163 1 240 1 241 1 45 1 355 1 
67 4 284 1 68 2 307 2 357 4 223 1 169 2 247 2 146 1 4 1 150 2 7 1 101 1 229 2 268 1 12 1 55 1 271 1 173 1 82 1 176 1 295 1 177 1 135 4 211 1 85 1 369 2 274 2 254 1 213 2 184 4 59 1 42 1 373 1 61 1 163 1 240 1 241 1 45 1 331 1 355 1 
284 1 67 5 307 2 357 4 223 1 169 2 261 2 146 1 4 1 150 2 7 1 101 1 229 3 268 1 12 1 55 1 173 1 271 1 17 1 82 1 176 1 273 1 295 1 177 1 210 2 135 5 85 1 254 1 274 3 213 3 184 4 373 1 42 1 61 1 278 1 216 2 218 1 163 1 240 1 241 1 45 1 355 1 
284 1 67 5 307 2 357 4 223 1 169 2 261 2 146 1 4 1 150 2 7 1 101 1 229 3 268 1 12 1 55 1 173 1 271 1 17 1 82 1 176 1 273 1 295 1 177 1 210 2 135 5 85 1 254 1 274 3 213 3 184 4 373 1 42 1 61 1 278 1 216 2 218 1 163 1 240 1 241 1 45 1 355 1 
284 1 146 1 247 2 4 1 150 2 7 1 101 1 12 1 55 1 295 1 254 1 213 2 59 1 61 1 163 1 355 1 67 4 307 2 68 2 357 4 223 1 169 2 229 2 268 1 173 1 271 1 82 1 177 1 135 4 85 1 369 2 274 2 322 1 184 4 42 1 373 1 240 1 241 1 45 1 
46 2 244 2 288 1 70 3 96 1 194 1 74 1 248 1 265 6 269 1 313 1 129 1 38 1 102 1 15 1 345 1 158 1 253 1 110 1 41 1 323 1 324 1 347 3 237 1 186 2 328 2 
244 2 46 4 286 1 70 6 96 1 3 1 126 1 248 2 265 14 267 2 129 2 15 11 315 1 363 1 134 1 158 2 345 4 110 11 253 1 256 1 41 2 323 2 137 1 214 2 347 8 237 2 379 1 283 1 186 1 328 1 304 3 66 3 329 1 
46 2 284 1 28 1 167 1 29 1 308 1 31 1 70 1 33 1 96 1 171 1 248 1 126 1 358 1 265 2 100 1 311 1 37 1 129 1 14 1 293 1 315 1 250 1 234 1 345 1 158 1 255 1 256 1 254 2 323 1 347 1 237 1 350 1 23 1 239 1 186 1 240 2 142 1 
46 6 244 8 284 1 285 1 144 1 288 1 96 3 194 1 3 4 248 3 50 1 14 1 15 7 293 1 250 2 156 2 158 3 345 7 253 3 110 7 255 3 254 3 256 1 297 2 19 2 60 2 214 2 347 10 350 2 260 1 167 1 28 2 29 3 31 2 70 10 33 2 171 1 74 1 126 1 358 1 265 20 267 2 311 2 37 2 313 1 38 1 129 3 315 1 81 2 234 3 41 3 323 3 324 1 237 3 379 2 186 2 328 4 240 3 142 2 
46 4 284 1 285 1 167 1 28 2 29 7 189 1 31 3 70 1 96 2 33 2 171 1 248 2 126 1 358 2 265 2 202 1 269 1 37 2 314 1 361 1 52 1 129 2 293 1 315 1 365 1 366 1 234 8 109 1 158 2 254 1 255 8 323 2 347 1 348 2 237 2 43 1 219 1 240 1 
244 1 46 2 284 1 167 1 70 2 96 1 124 1 71 1 248 1 267 1 265 3 129 1 15 1 293 1 345 1 158 1 252 1 110 1 253 1 256 1 254 1 41 1 323 1 214 1 347 1 237 1 379 1 328 1 240 1 
244 1 46 2 345 1 158 1 110 1 41 1 96 1 323 1 3 1 335 1 214 1 248 1 347 2 237 1 265 2 269 1 129 1 15 1 
244 1 46 2 345 1 158 1 110 1 253 1 70 2 96 1 323 1 248 1 237 1 265 2 379 1 269 1 129 1 328 1 15 1 143 1 
46 2 244 2 70 2 96 1 3 1 248 1 267 1 265 4 269 1 129 1 15 2 158 1 345 2 110 2 253 1 41 1 323 1 214 1 347 2 237 1 379 1 328 1 
244 1 46 2 345 1 158 1 110 1 41 1 96 1 323 1 3 1 335 1 214 1 248 1 347 2 237 1 265 2 129 1 15 1 366 1 
244 1 46 2 345 1 158 1 110 1 253 1 70 2 96 1 323 1 248 1 237 1 265 2 379 1 129 1 328 1 15 1 143 1 366 1 
46 2 244 2 70 2 96 1 3 1 248 1 267 1 265 4 129 1 15 2 366 1 158 1 345 2 110 2 253 1 41 1 323 1 214 1 347 2 237 1 379 1 328 1 
46 2 244 2 70 2 96 1 3 1 248 1 265 4 267 1 129 1 15 2 158 1 345 2 110 2 253 1 41 1 323 1 214 1 347 2 237 1 379 1 328 1 
46 2 28 1 29 1 31 1 70 1 33 1 96 1 248 1 126 1 358 1 265 2 311 1 37 1 129 1 315 1 250 1 234 1 156 1 158 1 255 1 254 1 323 1 347 1 237 1 350 1 186 1 240 1 142 1 
46 2 28 1 29 1 31 1 70 1 33 1 96 1 248 1 126 1 358 1 265 2 37 1 129 1 315 1 203 1 250 1 154 1 234 1 158 1 255 1 254 1 181 1 323 1 347 1 237 1 350 1 186 1 240 1 
46 2 244 2 70 2 96 1 3 1 248 1 267 1 265 4 129 1 15 2 158 1 345 2 110 2 253 1 41 1 256 1 323 1 214 1 347 2 237 1 379 1 328 1 
244 2 46 2 28 1 29 1 31 1 70 2 33 1 96 1 3 1 248 1 265 4 267 1 311 1 37 1 129 1 15 2 250 1 365 1 234 1 156 1 345 2 158 1 253 1 110 2 41 1 255 1 254 1 323 1 19 1 214 1 347 2 237 1 350 1 379 1 328 1 240 1 142 1 
244 1 46 2 284 1 167 1 70 1 96 1 124 1 71 1 3 1 248 1 267 1 265 3 129 1 15 1 293 1 158 1 345 1 253 1 110 1 256 1 254 1 41 1 323 1 159 1 214 1 347 2 237 1 379 1 240 1 
46 4 244 6 70 10 3 3 147 2 248 2 76 1 290 1 98 1 265 19 267 3 312 1 39 1 233 1 157 1 158 2 253 3 180 1 41 3 323 2 346 2 137 1 214 3 347 9 237 2 379 3 283 1 328 3 304 1 66 2 
47 2 244 4 46 6 2 1 190 1 70 12 3 2 147 4 248 3 76 1 77 1 290 1 265 26 267 3 312 2 39 1 341 1 233 2 158 3 253 2 180 1 41 3 323 3 277 1 346 1 214 3 347 14 138 1 237 3 379 2 283 2 328 2 304 2 66 2 
244 8 46 6 47 1 2 1 190 1 288 1 194 1 3 4 147 4 248 3 290 1 98 1 341 1 158 3 253 5 346 1 214 4 347 20 304 3 26 1 66 4 70 21 74 1 76 1 77 1 267 4 265 41 312 1 313 1 38 1 39 1 233 2 41 5 180 1 323 3 277 1 324 1 137 1 138 1 237 3 379 4 283 3 328 4 
47 2 46 8 244 7 2 1 288 1 190 1 70 18 194 1 3 3 74 1 147 4 248 4 76 1 77 1 290 1 98 1 265 38 267 4 312 1 313 1 38 1 39 1 341 1 233 2 158 4 253 4 180 1 41 5 323 4 324 1 277 1 346 1 137 1 214 4 138 1 347 20 237 4 379 3 283 3 328 4 304 3 26 1 66 4 
47 1 46 4 244 14 2 1 286 2 288 1 190 1 70 25 194 1 3 7 74 1 147 4 248 2 76 1 77 1 290 1 265 52 267 7 312 1 313 1 38 1 39 1 341 1 233 1 158 2 253 8 180 1 41 8 323 2 324 1 277 1 346 1 137 2 214 7 138 1 347 27 237 2 379 7 283 2 328 7 304 4 66 4 
302 1 80 1 201 1 11 1 89 1 58 1 34 1 188 1 131 1 117 1 
120 1 122 1 
201 1 193 1 89 1 34 1 188 1 205 1 131 1 5 1 117 1 
40 1 107 1 357 1 275 1 184 1 34 1 257 1 75 2 7 1 8 1 302 1 80 1 201 1 11 1 89 1 188 1 131 1 117 1 
40 1 107 1 357 1 275 1 184 1 34 1 257 1 75 2 7 1 8 1 302 1 80 1 201 1 11 1 89 1 188 1 131 1 117 1 
40 1 107 1 357 1 275 1 184 1 34 1 257 1 75 2 7 1 8 1 302 1 80 1 201 1 11 1 89 1 188 1 131 1 117 1 
200 1 279 1 90 1 
200 1 279 1 90 1 
342 1 164 1 
342 1 164 1 90 1 
185 1 182 1 
284 2 122 1 120 1 167 2 357 1 34 1 336 1 75 1 79 1 201 1 293 2 131 1 272 1 343 1 254 2 275 1 182 1 184 1 375 1 257 1 89 1 185 1 186 1 240 2 188 1 117 1 354 1 
200 1 279 1 
342 1 164 1 90 1 
46 2 284 2 28 1 29 2 31 1 245 1 70 1 33 1 96 1 309 1 248 1 126 1 264 1 265 2 37 1 202 1 314 1 129 1 315 1 364 1 234 2 158 1 255 2 256 1 254 2 323 1 347 1 348 2 237 1 22 1 240 2 
28 1 285 1 234 2 29 2 255 2 35 1 376 1 148 1 49 1 338 1 377 1 99 1 37 1 305 1 132 1 352 1 330 1 381 2 365 1 
285 1 234 1 28 1 29 1 255 1 376 1 148 1 49 1 338 1 377 1 99 1 37 1 305 1 132 1 352 1 104 1 381 2 
28 1 234 1 29 1 31 1 255 1 33 1 149 1 338 1 358 1 303 1 37 1 361 1 52 1 330 1 
28 1 285 1 234 1 29 1 255 1 35 1 376 1 148 1 49 1 338 1 377 1 99 1 37 1 305 1 132 1 352 1 330 1 381 2 
217 1 
7 1 62 1 102 1 271 1 173 1 92 1 4 1 
67 1 68 1 357 1 261 1 4 1 150 1 7 2 101 1 173 1 271 1 17 1 210 1 184 1 373 1 61 1 216 1 355 1 
93 1 191 1 4 2 150 3 6 2 7 8 197 1 101 4 292 3 16 1 206 2 57 2 253 2 255 3 60 2 61 4 214 2 350 3 62 1 355 4 67 5 28 4 68 12 29 3 30 1 31 10 357 5 33 3 224 6 261 6 262 1 358 1 78 2 267 2 36 2 37 3 359 2 271 9 231 2 173 8 82 2 365 1 234 3 178 2 370 1 41 2 184 5 276 6 373 4 379 2 141 2 243 2 92 1 44 2 
67 1 68 6 30 1 2 1 357 1 224 5 261 3 4 2 150 1 77 1 7 5 267 2 101 2 359 1 231 1 271 8 173 5 341 1 57 2 253 2 41 2 184 1 276 5 277 1 373 2 325 1 61 2 214 2 138 1 327 1 379 2 283 1 304 1 66 1 355 2 
284 1 167 1 357 1 194 1 124 1 226 1 101 1 359 1 313 1 38 1 55 1 173 2 271 2 293 1 57 2 273 1 321 1 368 1 253 1 254 1 41 2 184 1 373 1 61 1 25 1 240 1 64 1 355 1 
373 1 61 1 4 1 7 1 101 1 62 1 173 1 271 1 92 1 355 1 
68 10 253 2 41 2 224 5 276 5 261 5 60 1 214 2 7 5 267 2 379 2 359 1 173 5 271 5 57 2 
7 1 67 1 357 1 184 1 4 1 150 1 
67 4 28 1 29 4 30 2 191 2 31 1 357 3 33 1 262 1 73 1 125 1 150 2 358 2 101 1 37 1 53 1 361 1 52 1 231 2 271 2 173 2 294 1 234 4 255 4 184 3 374 1 373 2 61 2 355 2 
46 2 284 2 167 2 28 1 29 1 31 1 70 1 33 1 96 1 124 2 126 1 248 1 358 1 265 1 311 1 37 1 129 1 293 2 250 1 234 1 156 1 158 1 255 1 254 3 323 1 215 1 237 1 350 1 186 1 240 3 64 1 142 1 
68 4 30 1 224 2 276 2 261 2 373 1 74 1 61 1 4 2 7 4 101 1 173 2 231 1 271 1 355 1 
238 1 34 1 131 1 
238 1 34 1 131 1 
80 1 32 1 182 1 34 1 131 1 
238 1 34 1 131 1 
332 1 34 1 131 1 
332 1 34 1 131 1 
332 1 34 1 131 1 
34 1 131 1 
201 1 188 1 
244 3 46 4 47 1 158 2 288 1 253 1 70 4 41 1 323 2 324 1 194 1 3 1 74 1 248 2 347 4 237 2 265 8 313 1 38 1 328 2 
244 2 288 1 70 3 253 1 41 1 324 1 194 1 74 1 347 3 265 6 313 1 38 1 102 1 328 2 
244 2 46 2 158 1 70 2 253 1 41 1 323 1 3 1 214 1 248 1 347 2 237 1 267 1 265 4 379 1 281 1 328 1 
244 2 253 1 70 4 41 1 3 1 137 1 214 1 347 3 265 7 267 1 379 1 283 1 328 1 304 1 66 2 
244 9 47 2 46 4 1 1 286 1 288 1 70 12 194 2 3 4 74 1 248 2 267 2 265 23 313 2 38 1 363 1 158 2 253 3 41 3 323 2 324 1 214 2 137 1 347 11 237 2 379 2 304 2 328 5 66 2 
265 1 70 1 66 1 
265 1 304 1 347 1 
46 2 244 3 158 1 70 3 253 1 41 1 323 1 60 1 3 1 214 1 248 1 347 3 237 1 265 6 267 1 379 1 281 1 328 2 
46 2 244 2 2 1 70 6 3 1 248 1 77 1 265 12 267 2 341 1 158 1 253 2 180 1 41 2 323 1 277 1 214 2 347 6 138 1 237 1 379 2 283 1 304 1 328 1 66 1 
244 2 253 1 70 3 41 1 194 1 3 1 347 3 265 6 313 1 38 1 328 1 
244 2 47 1 46 2 1 1 288 1 158 1 70 2 323 1 194 1 324 1 3 1 248 1 347 1 237 1 265 3 313 1 328 1 
46 2 244 5 158 1 321 1 70 5 253 2 180 1 41 2 323 1 194 2 3 2 248 1 347 5 237 1 265 10 313 2 38 1 328 3 
46 2 244 1 158 1 180 1 41 1 323 1 3 1 214 1 248 1 347 2 237 1 265 2 
244 2 46 2 158 1 70 2 253 1 180 1 41 1 323 1 3 1 214 1 248 1 347 2 237 1 267 1 265 4 379 1 328 1 
47 1 46 6 244 2 1 1 158 3 70 2 180 1 323 3 194 1 3 1 248 3 347 1 237 3 98 1 265 3 313 1 328 1 
47 2 46 10 244 12 306 1 1 1 288 1 70 18 194 3 3 5 74 1 248 5 98 1 265 34 267 3 313 3 38 2 158 5 253 5 180 1 41 5 323 5 324 1 296 1 137 1 214 3 347 16 237 5 379 3 281 1 220 1 283 1 304 3 328 7 66 4 
46 2 244 2 288 1 70 4 194 1 74 1 248 1 265 8 313 1 38 1 158 1 253 1 41 1 180 1 323 1 277 1 324 1 347 4 237 1 283 1 304 1 328 2 66 1 
46 4 244 3 288 1 70 5 194 1 3 1 74 1 248 2 265 11 267 1 313 1 38 1 158 2 253 1 180 1 41 2 323 2 324 1 277 1 137 1 214 1 347 6 237 2 281 1 283 1 328 2 304 1 66 2 
46 6 244 4 47 1 2 1 288 1 70 10 194 1 3 1 74 1 248 3 77 1 265 19 267 2 313 1 38 1 341 1 158 3 253 3 180 1 41 3 323 3 324 1 277 1 214 2 347 9 138 1 237 3 379 2 281 1 283 1 304 1 328 3 66 1 
47 1 46 6 244 5 2 1 288 1 70 7 194 1 3 2 74 1 248 3 77 1 265 17 267 2 313 1 38 1 341 1 158 3 253 2 180 1 41 3 323 3 324 1 277 1 214 2 347 10 138 1 237 3 379 1 281 1 283 1 304 1 328 3 66 1 
46 2 244 2 288 1 70 4 194 1 74 1 248 1 265 8 313 1 38 1 158 1 253 1 41 1 180 1 323 1 277 1 324 1 347 4 237 1 283 1 304 1 328 2 66 1 
46 2 244 2 2 1 70 6 3 1 248 1 77 1 265 12 267 2 341 1 158 1 253 2 180 1 41 2 323 1 277 1 214 2 347 6 138 1 237 1 379 2 283 1 304 1 328 1 66 1 
46 8 244 5 47 2 2 1 288 1 70 8 194 1 3 2 74 1 248 4 77 1 265 18 267 2 313 1 38 1 341 1 158 4 253 2 180 1 41 3 323 4 324 1 277 1 214 2 347 10 138 1 237 4 379 1 281 1 283 1 304 1 328 3 66 1 
46 8 244 6 47 2 2 1 70 7 3 3 248 4 77 1 265 16 98 1 267 3 341 1 158 4 253 2 180 1 41 3 323 4 277 1 214 3 347 9 138 1 237 4 379 2 283 1 304 1 328 3 66 1 
244 6 288 2 70 4 253 1 41 1 324 1 194 3 3 3 347 3 265 7 313 3 38 1 328 3 
46 8 244 4 47 2 2 1 288 1 70 8 194 1 3 1 74 1 248 4 77 1 265 18 98 1 267 2 313 1 38 1 341 1 158 4 253 2 180 1 41 3 323 4 324 1 277 1 214 2 347 10 138 1 237 4 379 1 283 1 304 1 328 3 66 1 
106 1 284 1 198 1 254 1 186 1 240 1 45 1 
106 1 356 1 284 1 254 1 72 1 299 1 198 1 88 1 186 1 13 1 240 1 45 1 
358 1 28 1 234 1 29 1 31 1 37 1 52 1 361 1 255 1 33 1 102 1 
284 1 28 1 167 1 234 1 29 1 31 1 254 2 255 1 33 1 171 1 350 1 358 1 37 1 186 1 240 2 293 1 142 1 250 1 
284 2 28 1 167 2 234 1 29 1 31 3 191 1 254 2 255 1 33 2 42 1 171 1 350 2 36 1 163 1 37 1 186 1 55 1 240 2 141 1 293 1 142 1 250 1 
284 2 167 2 28 1 29 2 191 1 31 3 33 2 171 1 36 1 228 1 37 1 55 1 293 1 250 1 154 1 234 2 255 2 254 2 42 1 350 2 163 1 186 1 240 2 141 1 
284 1 67 1 167 1 28 1 29 2 31 4 191 1 357 2 33 1 124 1 4 1 226 1 7 1 358 1 36 1 37 1 152 1 55 1 292 1 293 1 207 1 82 1 234 2 368 1 254 1 255 2 184 2 350 1 25 1 240 1 64 1 141 1 243 1 
67 1 28 1 234 3 29 3 178 1 357 2 191 1 31 4 255 3 33 1 184 2 4 1 7 1 358 1 350 1 36 1 228 1 37 1 292 1 141 1 243 1 82 1 
28 1 234 1 29 1 189 1 37 1 255 1 
208 1 350 1 197 1 358 1 28 1 234 1 29 1 31 1 37 1 255 1 33 1 316 1 
46 4 244 2 284 1 288 1 96 2 194 1 248 2 15 1 293 1 250 1 156 1 345 1 158 2 253 1 110 1 255 1 254 2 256 1 297 1 19 1 347 3 350 1 22 1 167 1 28 1 29 1 31 1 70 3 33 1 171 1 74 1 265 6 311 1 37 1 313 1 129 2 38 1 365 1 234 1 41 1 323 2 324 1 237 2 186 2 240 2 328 2 142 1 
67 2 29 1 357 3 31 2 262 1 336 1 4 1 150 1 7 1 358 1 78 1 101 2 292 1 271 1 173 1 206 1 82 1 234 1 178 1 255 1 184 3 373 2 61 2 62 1 243 1 92 1 44 1 355 2 
234 2 28 2 29 2 189 1 31 2 255 2 33 1 197 1 350 1 37 1 243 1 16 1 365 1 
28 1 234 4 29 4 31 1 255 4 33 1 21 1 358 1 228 1 37 1 361 1 52 1 365 1 
350 1 9 1 28 1 234 1 29 1 144 1 31 1 37 1 255 1 33 1 316 1 86 1 
358 1 28 1 234 1 29 1 37 1 255 1 305 1 132 1 148 1 381 1 
234 2 285 1 28 1 29 2 245 1 31 1 255 2 33 1 202 1 37 1 365 1 
234 5 28 2 29 4 191 1 31 3 109 1 255 5 33 2 21 1 358 1 219 1 202 1 37 2 52 1 361 1 365 1 
234 5 28 2 29 4 191 1 31 3 109 1 255 5 33 2 21 1 358 1 202 1 37 2 52 1 361 1 365 1 155 1 
284 1 28 1 167 1 234 1 29 1 31 1 254 2 255 1 33 1 171 1 350 1 358 1 37 1 186 1 240 2 293 1 250 1 154 1 
208 1 350 1 197 1 28 1 234 1 29 1 31 1 191 1 37 1 255 1 33 1 316 1 
166 1 284 1 179 1 254 1 309 1 264 1 360 1 240 1 364 1 
179 1 91 1 119 1 
166 1 179 1 360 1 186 1 318 1 
166 2 18 1 179 1 357 2 223 1 184 2 42 1 336 1 4 1 7 1 163 1 360 2 186 1 55 1 91 1 56 1 82 1 119 1 318 2 
83 1 249 1 102 1 251 1 
83 1 123 1 249 1 282 1 289 1 105 1 251 1 
123 1 128 1 153 1 
83 1 168 2 94 1 123 3 289 3 298 1 282 1 249 1 339 1 63 1 105 1 251 1 
87 1 83 1 123 2 249 1 282 1 140 1 289 2 105 1 251 1 
123 1 289 1 298 1 97 1 112 1 282 1 352 1 132 1 105 1 251 1 381 1 
123 1 249 1 282 1 289 1 298 1 105 1 251 1 
83 1 123 1 249 2 282 1 289 1 298 1 105 1 
222 1 123 2 289 2 298 1 310 1 249 1 282 2 380 1 105 2 251 1 
83 1 123 3 69 1 289 3 298 1 87 2 112 1 199 1 249 1 282 1 27 1 105 1 251 2 
83 1 123 2 289 2 298 1 148 1 49 1 87 1 249 1 282 1 174 1 352 1 132 1 105 1 251 1 381 2 
83 1 123 4 69 1 289 4 298 1 160 1 87 2 112 1 249 1 282 2 140 1 105 2 251 2 
83 1 123 1 249 1 282 1 289 1 298 1 105 1 251 1 
133 1 83 2 168 1 123 4 69 1 289 4 87 2 112 1 249 2 282 1 339 1 63 1 105 1 251 3 
121 1 83 1 123 2 289 2 334 1 298 1 87 1 249 1 282 1 130 1 105 1 251 1 
83 1 168 2 123 3 289 3 298 1 263 1 282 1 249 1 339 2 63 1 105 1 251 1 
266 1 116 2 161 1 251 2 
123 1 282 1 95 1 289 1 298 1 105 1 
87 1 83 1 123 2 249 1 282 1 289 2 27 1 298 1 105 1 251 1 
48 1 
83 1 123 1 249 1 282 1 289 1 298 1 105 1 251 1 
87 1 83 1 168 1 123 3 249 1 282 1 289 3 27 1 298 1 105 1 251 1 
133 1 112 1 69 1 251 1 
249 1 251 1 

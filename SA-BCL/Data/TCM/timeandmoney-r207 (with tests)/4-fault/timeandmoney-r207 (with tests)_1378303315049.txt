#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (34,77) 155 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (34,77) 155 
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 306 148 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 306 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 306 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 306 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 306 108 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 311 182 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 2 77 1 173 1 253 1 368 1 199 1 117 1 327 3 328 3 191 2 73 2 329 1 240 1 
77 1 327 1 328 1 134 1 191 1 73 1 155 1 199 1 
77 1 327 1 328 1 134 1 191 1 73 1 155 1 199 1 
38 1 197 5 266 2 310 1 173 4 224 1 199 1 362 1 117 1 201 1 318 2 73 2 321 1 52 1 206 1 97 1 77 1 253 1 368 6 188 1 34 1 349 2 327 9 328 9 191 2 138 2 329 3 240 2 
38 1 197 5 266 2 310 1 173 4 224 1 199 1 362 1 117 1 201 1 318 2 73 2 321 1 52 1 206 1 97 1 77 1 253 1 368 6 188 1 34 1 349 2 327 9 328 9 191 2 138 2 329 3 240 2 
38 1 197 6 266 2 310 1 173 5 224 1 199 1 362 1 117 1 201 1 318 2 73 2 321 1 52 1 206 1 97 1 77 1 253 1 368 7 188 1 34 1 349 2 327 10 328 10 191 2 138 2 329 4 240 2 
38 1 197 4 266 2 310 1 173 3 224 1 199 1 362 1 117 1 201 1 318 1 73 2 52 1 206 1 97 1 77 1 253 1 368 4 188 1 34 1 349 2 327 7 328 7 191 2 138 2 329 2 240 2 
321 1 52 1 197 3 266 1 173 2 253 1 368 3 199 1 362 1 117 1 349 1 327 4 328 4 318 2 191 1 73 1 329 1 138 1 
345 1 206 1 197 1 266 1 253 1 199 1 69 1 117 1 339 1 327 2 328 2 201 1 191 1 73 1 138 1 240 1 
53 1 171 1 309 1 28 1 312 1 208 1 333 1 198 1 232 1 33 1 116 1 315 1 135 1 366 1 
26 1 
314 1 125 1 171 2 26 1 28 1 226 1 333 2 347 1 
204 1 264 1 20 1 125 1 171 5 26 1 222 1 28 2 183 1 333 5 184 2 358 1 347 1 22 2 317 1 226 2 353 2 169 1 239 1 
26 1 141 1 347 1 
214 2 26 1 54 1 
33 2 116 2 53 2 208 2 312 1 135 2 11 1 232 2 
194 1 287 1 195 1 312 1 356 2 243 1 41 1 116 2 337 1 316 1 4 1 200 1 151 1 249 1 152 1 293 1 123 1 344 1 158 1 251 1 95 2 53 3 346 1 8 1 27 1 128 2 30 1 208 3 11 1 232 2 256 2 186 2 33 2 35 1 80 1 109 1 135 2 
33 1 116 1 53 1 315 1 309 1 208 1 312 1 135 1 366 1 232 1 
111 1 53 1 308 1 171 1 26 1 39 1 309 1 208 1 333 1 347 1 33 1 273 1 217 1 236 1 
53 1 308 1 171 2 26 1 309 1 208 1 333 2 232 1 347 1 33 1 116 1 135 1 273 1 217 1 236 1 
171 1 28 1 226 1 333 1 17 1 
125 1 171 2 26 1 15 1 28 1 226 1 333 2 347 1 
171 1 226 1 333 1 
53 2 367 1 208 2 11 2 232 1 33 2 116 1 373 1 135 1 
307 1 102 1 269 1 
158 1 95 1 53 1 194 1 8 1 208 1 11 1 356 1 256 1 41 1 337 1 35 1 316 1 151 1 123 1 295 1 
141 1 11 1 
33 3 116 1 53 3 5 1 208 3 135 3 11 1 232 3 
33 1 53 1 309 1 208 1 135 1 366 1 232 1 
33 1 116 1 53 1 367 1 309 1 373 1 208 1 135 1 232 1 
194 1 308 1 171 1 287 1 195 1 309 1 312 1 333 1 356 1 243 1 41 1 337 1 116 2 316 1 200 1 151 1 5 1 293 1 273 1 123 1 344 1 158 1 251 1 96 1 95 1 346 1 53 4 8 1 128 1 30 1 208 4 11 1 232 3 256 1 186 2 323 1 33 3 35 1 80 1 373 1 135 3 166 1 217 1 236 1 
33 2 53 2 325 1 39 1 5 1 208 2 135 1 11 1 232 1 
53 3 171 1 308 1 26 1 309 1 208 3 333 1 232 3 323 1 33 3 116 1 348 1 5 2 373 1 135 3 217 1 166 1 273 1 236 1 
307 1 53 2 208 2 102 1 232 2 33 2 116 1 5 1 373 1 135 2 
158 1 95 1 53 1 194 1 8 1 208 1 11 1 356 1 256 1 41 1 337 1 35 1 316 1 151 1 123 1 
158 1 95 1 53 1 194 1 8 1 208 1 176 1 11 1 356 1 256 1 41 1 35 1 316 1 118 1 123 1 
307 2 287 1 195 1 84 1 355 1 114 1 243 1 269 2 68 1 363 1 200 2 152 2 293 1 205 1 251 1 78 1 30 1 128 4 102 2 186 2 107 1 351 1 133 1 301 1 
33 1 53 1 308 1 309 1 208 1 135 1 255 1 232 1 
158 1 307 1 95 1 194 1 53 2 8 1 208 2 356 1 232 1 256 1 41 1 323 1 33 1 337 1 35 1 316 1 5 1 151 1 135 1 123 1 
53 5 39 1 208 5 268 1 11 1 232 4 323 1 33 5 116 1 325 1 5 2 373 1 135 4 303 1 
33 2 53 2 309 1 208 2 255 1 135 2 366 1 232 2 
46 1 87 1 257 1 
66 1 58 1 262 1 172 1 87 2 257 2 
87 1 257 1 
87 1 257 1 
66 1 172 1 
66 1 172 1 
66 1 172 1 
43 1 87 1 257 1 
43 1 87 1 257 1 
43 1 87 1 257 1 
364 1 87 1 257 1 
364 1 87 1 257 1 
364 1 87 1 257 1 
171 2 1 3 26 1 87 2 333 2 242 1 230 1 231 2 129 2 257 2 277 1 79 2 58 1 36 1 261 2 216 2 302 1 343 1 18 1 
1 1 171 1 87 1 333 1 46 1 124 1 53 2 275 1 208 2 11 1 103 1 232 2 129 1 231 1 257 1 33 2 79 1 132 1 36 1 371 1 216 1 135 2 136 1 167 1 
69 1 25 1 349 1 266 2 283 2 
266 1 349 1 138 1 
69 1 266 1 138 1 
69 1 25 1 349 2 266 3 291 1 283 1 
245 1 69 1 25 1 349 1 266 2 283 1 
65 1 171 5 333 5 114 1 88 1 22 1 71 2 317 1 226 1 23 1 50 2 228 1 125 1 54 1 26 2 276 1 78 1 28 4 184 1 210 2 103 1 347 1 107 1 214 3 132 1 350 1 301 1 136 1 353 1 239 2 169 3 263 1 
65 2 171 9 241 1 67 1 333 9 114 3 88 3 358 1 22 2 70 1 71 6 317 1 226 6 50 6 125 1 54 3 26 5 276 2 78 3 28 7 56 1 184 2 347 1 107 3 214 9 132 4 352 1 301 3 353 2 284 1 17 5 304 5 239 6 169 8 263 1 
65 1 171 3 333 3 114 1 88 1 358 1 22 1 71 2 23 1 50 2 26 3 54 2 276 1 28 2 78 1 184 1 210 1 347 1 107 1 132 1 214 4 350 1 301 1 353 1 169 3 239 2 
65 1 171 4 241 1 333 4 114 2 88 2 358 1 22 1 71 4 23 1 50 4 26 4 54 3 276 1 28 3 78 2 56 1 184 1 210 2 347 1 107 2 214 7 132 2 350 1 301 2 353 1 284 1 169 5 239 4 
153 1 
316 1 141 1 144 1 
316 1 311 1 
316 1 123 1 
316 3 142 1 144 2 123 1 235 1 41 1 
316 1 123 1 41 1 
316 1 82 1 
296 1 24 1 9 1 207 1 84 3 128 7 369 1 107 1 213 1 298 2 363 2 164 1 200 3 340 1 301 1 37 1 152 4 192 1 
0 3 110 1 287 1 84 10 88 3 114 3 243 1 270 1 363 5 200 15 340 1 293 1 152 16 296 2 251 1 24 2 322 1 75 1 207 1 9 5 78 3 128 31 10 1 31 1 186 2 369 2 107 4 213 1 298 3 299 1 37 1 301 4 192 2 374 4 
296 1 110 1 251 2 24 1 287 2 207 1 9 1 84 4 128 9 369 1 186 4 243 2 107 1 213 1 298 2 363 3 200 4 340 1 301 1 152 5 293 2 192 1 92 1 202 1 
296 1 24 1 9 1 207 1 84 3 128 7 369 1 107 1 213 1 298 2 363 2 200 3 340 1 301 1 37 1 152 4 192 1 
296 1 24 1 9 1 207 1 84 3 128 7 369 1 107 1 213 1 298 2 363 2 200 3 340 1 301 1 37 1 152 4 192 1 
158 1 95 1 194 1 101 1 356 1 256 1 187 1 162 1 313 1 12 2 35 1 316 1 327 1 328 1 191 1 294 1 137 1 16 1 123 1 73 1 375 2 240 2 6 2 
194 1 266 2 356 1 335 1 199 1 69 1 150 1 248 1 291 1 48 1 227 1 73 1 6 1 158 1 95 1 256 1 12 1 280 1 349 1 327 1 328 1 191 1 83 1 138 1 375 1 240 1 
194 1 197 1 266 2 356 1 335 1 199 1 69 1 272 1 117 1 150 1 248 1 291 1 48 1 227 1 73 1 6 1 158 1 95 1 253 1 368 1 256 1 12 1 280 1 349 1 327 2 328 2 191 1 138 1 375 1 240 1 
194 1 197 1 266 2 356 1 335 1 69 1 117 1 150 1 291 1 48 1 227 1 73 1 6 1 158 1 95 1 76 1 253 1 368 2 256 1 12 1 280 1 349 1 327 3 328 3 191 1 137 1 83 1 138 1 375 1 240 1 
158 1 95 1 194 1 76 1 197 1 266 2 253 1 368 2 356 1 335 1 256 1 69 1 12 1 117 1 150 1 349 1 327 2 291 1 328 2 227 1 83 1 138 1 375 1 6 1 240 1 
305 1 
39 1 332 1 333 4 336 3 3 1 42 3 44 1 147 1 203 1 53 1 54 2 161 3 208 1 297 5 347 1 14 2 62 1 353 1 217 1 354 1 168 1 219 1 220 1 169 1 19 2 111 1 308 1 171 4 309 1 22 1 317 1 226 5 273 1 125 2 26 1 184 1 324 2 33 1 189 1 81 2 236 1 239 1 
19 2 111 1 171 4 308 1 39 1 309 1 332 1 333 4 22 1 3 1 336 3 42 3 44 1 147 1 317 1 226 5 273 1 203 1 53 1 125 2 26 1 54 2 161 3 208 1 184 1 347 1 324 2 297 5 33 1 189 1 81 2 14 2 353 1 62 1 354 1 217 1 236 1 219 1 168 1 220 1 239 1 169 1 
193 1 111 1 171 4 308 1 39 1 309 1 332 1 333 4 336 2 3 1 22 1 42 2 44 1 317 1 226 4 273 1 122 1 53 1 125 2 26 1 161 2 100 2 181 2 208 1 184 1 347 1 324 2 297 4 33 1 214 2 81 2 62 1 353 1 217 1 236 1 219 1 168 1 169 1 239 1 
65 1 194 3 171 2 139 1 333 2 356 2 41 1 22 1 316 2 317 1 292 1 226 2 294 1 123 2 250 1 158 2 95 2 7 1 125 1 127 1 184 1 256 2 187 1 35 2 60 1 13 1 353 1 169 1 239 1 
111 1 53 1 125 1 308 1 171 3 161 1 39 1 332 1 309 1 208 1 333 3 297 2 314 1 3 1 33 1 226 2 62 1 217 1 273 1 236 1 168 1 219 1 
111 1 53 1 125 1 308 1 171 3 26 1 39 1 332 1 309 1 208 1 333 3 347 1 297 3 314 1 336 1 3 1 33 1 226 1 62 1 217 1 273 1 236 1 168 1 219 1 
111 1 171 3 308 1 39 1 309 1 332 1 333 3 314 1 3 1 336 1 42 1 226 2 273 1 53 1 125 1 26 1 161 1 208 1 297 3 347 1 33 1 62 1 217 1 236 1 219 1 168 1 
39 1 332 1 333 5 3 1 336 4 42 4 44 1 147 1 203 1 53 1 54 2 161 4 208 1 297 6 347 5 14 2 62 1 353 1 217 1 354 1 168 1 219 1 220 1 169 1 19 2 111 1 308 1 171 5 309 1 314 1 22 1 317 1 226 7 273 1 180 1 125 3 26 5 184 1 324 2 33 1 189 1 81 2 236 1 239 1 
193 1 19 2 111 1 171 4 308 1 39 1 309 1 332 1 333 4 336 2 3 1 22 1 42 2 44 1 317 1 226 4 273 1 203 1 53 1 125 2 26 2 54 2 161 2 208 1 184 1 347 1 324 2 297 4 33 1 214 2 81 2 14 2 62 1 353 1 217 1 236 1 219 1 168 1 239 1 169 1 
19 2 111 1 171 4 308 1 39 1 309 1 332 1 333 4 336 2 3 1 22 1 42 2 44 1 147 1 317 1 226 4 273 1 203 1 53 1 125 2 26 1 54 2 161 2 208 1 184 1 347 1 324 2 297 4 33 1 81 2 14 2 62 1 353 1 217 1 354 1 236 1 219 1 168 1 220 1 239 1 169 1 
19 2 111 1 171 4 308 1 39 1 309 1 332 1 333 4 336 2 3 1 22 1 42 2 44 1 147 1 317 1 226 4 273 1 203 1 53 1 125 2 26 1 54 2 161 2 208 1 184 1 347 1 324 2 297 4 33 1 81 2 14 2 62 1 353 1 217 1 354 1 236 1 219 1 168 1 220 1 239 1 169 1 
111 1 171 4 308 1 140 1 39 1 309 1 332 1 333 4 336 2 3 1 22 1 42 2 44 1 147 1 317 1 226 4 122 1 273 1 94 1 53 1 125 2 26 1 161 2 100 2 181 2 208 1 184 1 347 1 324 2 297 4 33 1 214 2 81 2 62 1 353 1 217 1 236 1 219 1 168 1 169 1 239 1 
194 2 331 1 287 2 195 2 356 8 243 2 89 1 244 1 360 1 68 1 272 1 316 3 149 1 4 2 247 1 200 1 5 1 293 2 152 1 294 1 123 2 158 2 95 7 251 2 53 1 208 1 30 2 128 2 232 1 256 8 186 4 187 1 33 1 130 1 35 2 80 1 135 1 109 1 83 1 
307 1 287 1 195 1 84 1 88 1 114 1 269 1 243 1 2 1 116 1 363 1 200 2 293 1 152 1 251 1 53 1 99 1 78 1 30 1 208 1 128 3 102 1 232 1 186 2 33 1 107 1 373 1 301 1 135 1 
307 1 287 1 195 1 141 1 84 2 243 1 269 1 68 1 363 2 200 3 340 1 293 1 152 3 251 1 24 1 207 1 30 1 128 6 102 1 11 2 186 2 107 1 213 1 298 1 301 1 192 1 
307 11 0 3 287 2 195 1 84 2 88 2 114 1 243 2 2 1 269 11 363 1 200 6 319 1 293 2 152 8 156 1 51 1 251 2 322 1 9 1 78 2 30 2 128 14 10 1 102 4 11 1 186 4 107 1 80 1 279 1 301 2 109 1 374 3 
194 1 287 1 195 1 223 1 356 1 41 1 2 1 243 1 337 1 316 1 200 1 151 1 5 1 293 1 152 1 123 1 295 1 158 1 95 1 251 1 53 2 8 1 30 1 208 2 128 2 102 1 11 1 256 1 232 1 323 1 186 2 105 1 33 1 35 1 80 1 135 1 109 1 63 1 
194 2 195 3 287 3 84 8 88 2 243 3 2 1 41 2 146 2 337 2 45 1 90 1 200 10 340 1 5 1 151 2 47 2 293 3 152 10 158 2 95 3 251 3 53 3 346 2 8 2 207 1 9 4 208 3 102 7 11 2 256 3 107 3 213 1 298 1 301 3 109 1 307 7 114 2 356 3 269 7 316 2 363 4 320 1 123 2 24 1 78 2 30 3 128 20 232 1 186 6 323 1 33 1 234 2 35 1 80 1 372 2 135 1 192 1 83 1 
307 1 251 1 195 1 287 1 9 1 84 1 78 1 128 2 30 1 355 1 102 1 269 1 186 2 243 1 68 1 301 1 293 1 152 2 
307 1 251 1 205 1 195 1 287 1 84 1 128 2 30 1 102 1 114 1 269 1 186 2 243 1 107 1 68 1 363 1 200 2 293 1 
307 2 287 1 195 1 84 2 88 1 114 1 243 1 269 2 68 1 363 1 200 2 152 2 293 1 251 1 9 1 78 1 30 1 128 4 102 2 186 2 107 1 301 1 
307 1 251 1 195 1 287 1 9 1 84 1 78 1 128 2 30 1 355 1 102 1 269 1 186 2 243 1 149 1 301 1 293 1 152 2 
307 1 251 1 205 1 195 1 287 1 84 1 128 2 30 1 102 1 114 1 269 1 186 2 243 1 107 1 363 1 149 1 200 2 293 1 
307 2 287 1 195 1 84 2 88 1 114 1 243 1 269 2 149 1 363 1 200 2 152 2 293 1 251 1 9 1 78 1 30 1 128 4 102 2 186 2 107 1 301 1 
307 2 287 1 195 1 84 2 88 1 114 1 243 1 269 2 363 1 200 2 152 2 293 1 251 1 9 1 78 1 128 4 30 1 102 2 186 2 107 1 301 1 
194 1 195 1 287 1 356 1 41 1 243 1 337 1 316 1 200 1 151 1 152 1 293 1 123 1 158 1 95 1 251 1 346 1 53 1 8 1 128 2 208 1 30 1 11 1 256 1 186 2 35 1 80 1 109 1 
194 1 195 1 287 1 176 1 356 1 41 1 243 1 316 1 118 1 200 1 152 1 293 1 123 1 158 1 95 1 251 1 53 1 8 1 128 2 208 1 30 1 11 1 256 1 186 2 35 1 80 1 326 1 109 1 
307 2 287 1 195 1 84 2 88 1 114 1 243 1 2 1 269 2 363 1 200 2 152 2 293 1 251 1 9 1 78 1 30 1 128 4 102 2 186 2 107 1 301 1 
307 2 194 1 195 1 287 1 84 2 114 1 88 1 356 1 269 2 41 1 243 1 337 1 272 1 316 1 363 1 200 2 151 1 47 1 152 2 293 1 123 1 158 1 95 1 251 1 346 1 53 1 8 1 9 1 78 1 128 4 208 1 30 1 102 2 256 1 186 2 107 1 301 1 
307 1 287 1 195 1 84 1 114 1 88 1 40 1 243 1 2 1 269 1 116 1 200 1 293 1 152 2 251 1 53 1 9 1 78 1 30 1 208 1 128 3 102 1 232 1 186 2 107 1 33 1 373 1 301 1 135 1 
306 1 170 1 0 1 112 1 287 2 84 2 86 1 289 1 88 1 114 1 243 2 148 1 363 1 200 5 341 1 293 2 152 4 202 1 251 2 322 1 9 1 78 1 128 9 10 1 186 4 107 1 301 1 374 2 238 1 
306 1 110 2 170 2 0 2 287 3 143 1 84 2 85 1 86 1 289 1 88 2 114 1 243 3 361 1 363 1 200 9 91 1 341 2 293 3 152 11 72 1 202 1 93 1 251 3 322 2 9 1 78 2 128 20 186 6 107 1 108 1 301 2 374 2 238 3 
306 1 170 1 0 1 112 1 287 2 84 2 86 1 289 1 88 1 114 1 243 2 363 1 200 5 341 1 293 2 152 4 202 1 251 2 322 1 9 1 78 1 128 9 10 1 186 4 107 1 108 1 301 1 374 2 238 1 
306 1 170 1 0 1 112 1 287 2 84 2 86 1 289 1 88 1 114 1 243 2 363 1 200 5 341 1 293 2 152 4 202 1 251 2 322 1 9 1 78 1 128 9 10 1 186 4 107 1 108 1 301 1 374 2 238 1 
306 1 110 1 170 1 0 4 287 2 143 1 84 12 85 1 86 1 289 1 88 6 114 6 243 2 361 1 363 6 200 22 340 1 91 1 341 1 72 1 319 2 293 2 152 24 202 1 93 1 251 2 24 1 322 2 207 1 9 6 78 6 128 46 10 2 186 4 107 7 213 1 298 1 108 1 301 7 192 1 374 4 238 3 
79 1 58 1 87 1 216 1 302 1 230 1 357 1 129 1 231 1 257 1 
46 1 167 1 
177 1 79 1 259 1 165 1 87 1 216 1 129 1 231 1 257 1 
171 1 1 2 26 1 333 1 87 1 242 1 230 1 231 1 129 1 257 1 277 1 79 1 58 1 36 1 261 1 216 1 302 1 343 1 
171 1 1 2 26 1 333 1 87 1 242 1 230 1 231 1 129 1 257 1 277 1 79 1 58 1 36 1 261 1 216 1 302 1 343 1 
171 1 1 2 26 1 333 1 87 1 242 1 230 1 231 1 129 1 257 1 277 1 79 1 58 1 36 1 261 1 216 1 302 1 343 1 
43 1 262 1 225 1 
43 1 262 1 225 1 
55 1 364 1 
55 1 262 1 364 1 
124 1 275 1 
171 1 1 1 333 1 87 1 46 1 154 1 343 1 124 1 53 2 275 1 28 1 208 2 11 1 103 1 129 1 231 1 232 2 257 1 33 2 79 1 132 1 371 1 261 1 216 1 136 1 135 2 167 1 
43 1 225 1 
55 1 262 1 364 1 
286 1 194 1 331 1 287 1 195 1 356 2 2 1 243 1 316 1 4 2 200 1 293 1 152 1 123 1 158 1 159 1 274 1 251 1 95 2 53 2 30 1 208 2 128 2 256 2 104 1 186 2 57 1 33 2 130 1 80 1 109 1 
158 1 95 1 194 1 356 1 256 1 162 1 187 1 35 1 131 1 12 1 316 1 246 1 294 1 123 1 
158 1 95 1 194 1 126 1 266 2 356 1 256 1 335 1 69 1 131 1 12 1 280 1 349 1 291 1 190 1 83 1 227 1 138 1 
158 1 95 2 194 1 126 1 266 2 356 2 256 2 335 1 69 1 131 1 12 1 272 1 280 1 349 1 291 1 190 1 83 1 227 1 138 1 
158 1 95 1 194 1 266 2 356 1 256 1 335 1 69 1 12 1 280 1 349 1 291 1 365 1 190 1 83 1 227 1 138 1 
160 1 
264 1 26 1 222 1 184 1 347 1 22 1 317 1 353 1 239 1 169 1 
54 5 26 5 78 2 88 2 114 2 234 1 290 2 107 2 214 10 71 5 301 2 178 1 239 5 169 5 50 5 
171 1 125 1 26 1 333 1 226 1 347 1 
65 1 194 3 171 1 139 1 333 1 356 2 41 1 22 1 316 2 317 1 292 1 226 2 294 1 123 2 250 1 158 2 95 2 7 1 125 1 127 1 184 1 256 2 187 1 35 2 278 1 60 1 13 1 353 1 169 1 239 1 
194 1 195 1 287 1 312 1 356 1 243 1 41 1 116 2 337 1 316 1 200 1 151 1 293 1 123 1 344 1 158 1 251 1 95 1 53 3 346 1 8 1 128 1 208 3 30 1 11 1 256 1 232 2 186 2 33 2 35 1 80 1 135 2 
65 1 54 2 26 4 127 1 184 1 347 2 22 1 214 4 298 1 71 2 317 1 353 1 239 2 169 1 50 2 
264 1 26 1 222 1 141 1 169 1 347 1 239 1 
203 1 19 1 171 1 125 1 26 2 54 1 333 1 184 1 347 1 22 1 214 1 14 1 317 1 226 1 353 1 169 1 239 1 
158 1 95 1 194 1 142 1 182 1 311 1 184 1 356 1 256 1 41 1 22 1 35 1 316 1 317 1 121 1 353 1 123 1 
65 1 0 1 171 1 143 1 85 1 333 1 88 2 114 2 334 1 271 1 290 2 22 2 361 1 71 5 317 2 226 1 72 1 178 1 50 5 93 1 125 1 322 1 54 3 26 5 127 1 78 2 184 2 347 2 107 2 214 6 301 2 353 2 374 1 169 8 239 5 
171 1 309 1 312 1 333 1 198 1 290 2 21 1 22 1 116 1 315 1 340 1 317 1 178 1 366 1 53 1 24 1 208 1 184 1 232 1 107 1 33 1 301 2 353 1 135 1 192 1 354 1 239 2 169 2 
124 1 302 1 129 1 231 1 258 1 
300 1 129 1 231 1 
300 1 129 1 231 1 
300 1 129 1 231 1 
229 1 129 1 231 1 
229 1 129 1 231 1 
229 1 129 1 231 1 
129 1 231 1 
87 1 257 1 
251 1 24 2 287 1 9 2 84 5 128 10 243 1 186 2 21 1 107 2 363 3 200 5 340 1 301 2 293 1 152 5 192 2 202 1 
251 1 287 1 9 1 84 1 78 1 128 2 186 2 243 1 301 1 293 1 152 2 202 1 
251 1 287 1 9 1 84 2 78 1 128 4 114 1 88 1 186 2 243 1 107 1 363 1 200 2 301 1 293 1 152 2 202 1 
110 1 252 1 251 3 24 1 112 1 287 3 9 1 84 2 128 3 186 6 243 3 363 1 200 2 293 3 152 1 192 1 202 1 
110 2 0 3 112 1 287 5 84 12 88 3 114 3 243 5 363 7 200 18 340 2 293 5 152 16 202 1 252 1 251 5 24 3 75 1 322 1 207 1 9 5 78 3 128 34 10 1 31 1 186 10 106 1 107 5 213 1 298 1 299 1 301 5 192 3 374 4 
93 1 251 1 0 1 24 1 322 1 287 1 207 1 84 2 128 8 186 2 243 1 107 1 213 1 298 1 363 2 200 4 340 1 301 1 152 4 293 1 192 1 374 1 202 1 
0 1 287 2 84 3 88 1 243 2 363 2 200 5 340 1 293 2 152 6 202 1 93 1 251 2 24 1 322 1 207 1 9 1 78 1 128 11 10 1 186 4 106 1 107 1 213 1 298 1 301 2 192 1 374 2 
0 1 110 1 287 3 143 1 84 4 85 1 88 2 114 2 243 3 361 1 363 3 200 10 340 1 293 3 152 9 72 1 202 1 93 1 251 3 24 1 322 1 207 1 9 1 78 2 128 19 186 6 106 1 107 3 213 1 298 1 301 3 192 1 374 1 
110 1 0 1 287 3 84 5 143 1 85 1 88 2 114 1 243 3 361 1 363 3 200 7 340 1 293 3 152 10 72 1 202 1 93 1 251 3 24 1 322 1 207 1 9 2 78 2 128 17 186 6 106 1 107 2 213 1 298 1 301 3 192 1 374 1 
93 1 251 1 0 1 24 1 322 1 287 1 207 1 84 2 128 8 186 2 243 1 107 1 213 1 298 1 363 2 200 4 340 1 301 1 152 4 293 1 192 1 374 1 202 1 
0 1 287 1 84 2 143 1 85 1 88 2 114 2 243 1 361 1 363 1 200 6 293 1 152 6 72 1 202 1 93 1 251 1 322 1 9 1 78 2 128 12 186 2 107 2 301 2 374 1 
0 1 110 2 287 4 143 1 84 5 85 1 88 2 114 1 243 4 361 1 363 3 200 8 340 1 293 4 152 10 72 1 202 1 93 1 251 4 24 1 322 1 207 1 9 2 78 2 128 18 186 8 106 1 107 2 213 1 298 1 301 3 192 1 374 1 
0 1 110 2 287 4 112 1 143 1 84 6 85 1 88 3 114 2 243 4 361 1 363 3 200 7 293 4 152 9 72 1 202 1 93 1 251 4 322 1 9 3 78 3 128 16 186 8 107 2 301 3 374 1 
24 3 207 2 9 3 84 6 128 7 107 1 213 1 363 3 200 4 340 1 301 1 152 3 192 3 
0 1 110 2 287 4 112 1 143 1 84 4 85 1 88 2 114 1 243 4 361 1 363 3 200 8 340 1 293 4 152 10 72 1 202 1 93 1 251 4 24 1 322 1 207 1 9 1 78 2 128 18 186 8 107 2 213 1 298 1 301 3 192 1 374 1 
251 2 110 1 24 1 287 2 9 1 207 1 84 3 128 8 186 4 243 2 107 1 213 1 298 1 363 2 200 4 340 1 301 1 152 4 293 2 192 1 
24 1 207 1 141 1 84 2 128 6 107 1 213 1 298 1 363 2 200 3 340 1 301 1 152 3 192 1 
251 1 287 1 9 1 84 2 78 1 128 4 114 1 88 1 186 2 243 1 106 1 107 1 363 1 200 2 301 1 293 1 152 2 
0 1 322 1 9 1 84 2 78 1 128 7 114 1 10 1 88 1 107 1 363 1 200 4 301 1 152 3 374 2 
0 2 110 2 287 2 84 9 88 2 114 2 243 2 363 5 200 12 340 1 152 11 319 1 293 2 156 1 251 2 252 1 24 2 207 1 9 4 78 2 128 23 10 1 186 4 107 3 213 1 298 1 301 3 192 2 374 2 
200 1 128 1 374 1 
0 1 128 1 152 1 
251 1 287 1 9 1 84 3 78 1 128 6 88 1 114 1 243 1 186 2 106 1 234 1 107 1 363 2 200 3 301 1 293 1 152 3 
0 1 287 1 84 2 143 1 85 1 88 2 114 2 243 1 361 1 363 1 200 6 293 1 152 6 72 1 202 1 93 1 251 1 322 1 9 1 78 2 128 12 186 2 107 2 301 2 374 1 
24 1 9 1 84 2 128 6 107 1 363 1 200 3 340 1 301 1 152 3 192 1 
252 1 110 1 251 1 24 1 287 1 9 1 207 1 84 2 128 3 186 2 243 1 213 1 363 1 200 2 152 1 293 1 192 1 
33 1 53 1 325 1 39 1 208 1 11 1 179 1 
53 1 39 1 208 1 267 1 11 1 32 1 145 1 33 1 325 1 119 1 179 1 342 1 
158 1 95 4 194 1 211 1 356 4 256 4 187 1 35 1 272 1 316 1 294 1 218 1 123 1 
158 1 95 2 194 2 139 1 356 2 256 2 41 1 45 1 316 1 61 1 13 1 292 1 123 1 250 1 
158 1 95 1 69 1 194 1 35 1 266 1 356 1 227 1 256 1 138 1 
158 1 159 1 95 2 194 1 316 1 272 1 331 1 356 2 123 1 83 1 256 2 
158 2 95 4 194 2 331 1 211 1 356 5 256 5 187 1 89 1 360 1 35 1 272 1 316 3 61 1 294 1 123 2 
158 2 95 4 194 2 331 1 211 1 356 5 256 5 187 1 360 1 35 1 272 1 316 3 61 1 281 1 294 1 123 2 
158 1 95 1 194 1 35 1 316 1 141 1 294 1 356 1 123 1 256 1 187 1 
158 1 95 1 194 1 53 2 8 1 208 2 11 1 356 1 232 1 256 1 41 1 33 1 337 1 35 1 316 1 5 1 135 1 123 1 
194 1 308 1 309 1 356 1 41 2 359 1 337 1 316 3 5 1 123 2 158 1 95 1 53 2 8 1 208 2 11 1 256 1 232 2 33 2 61 1 82 1 135 1 236 1 
194 1 308 1 309 1 356 2 41 2 359 1 316 3 118 1 5 1 123 2 158 1 95 2 53 2 8 1 208 2 11 1 256 2 232 2 33 2 61 1 82 1 135 1 218 1 236 1 
194 1 171 2 311 1 144 1 333 2 356 3 359 1 41 1 316 4 120 1 226 1 123 1 158 1 95 3 26 1 254 1 256 3 347 1 35 1 61 1 82 1 217 1 218 1 
158 1 95 3 194 1 171 2 26 1 311 1 333 2 144 1 356 3 256 3 41 1 359 1 347 1 35 1 316 4 215 1 82 1 61 1 226 1 217 1 218 1 123 1 
158 1 244 1 95 1 194 1 356 1 256 1 
158 2 95 6 194 3 331 1 139 1 142 1 356 7 256 7 41 1 89 1 244 1 360 1 115 1 35 2 272 1 316 3 4 1 247 1 13 1 83 1 123 2 
307 1 194 1 287 2 195 2 84 2 356 1 269 1 41 1 2 1 243 2 146 1 337 1 316 1 272 1 363 2 200 3 340 1 5 1 151 1 47 1 152 3 293 2 123 1 158 1 274 1 251 2 95 1 53 2 346 1 24 1 8 1 207 1 128 6 30 2 208 2 102 1 11 2 232 1 256 1 186 4 107 1 33 1 213 1 298 1 301 1 135 1 192 1 
264 1 171 3 222 1 174 1 311 1 333 3 144 1 356 1 22 2 316 2 338 1 317 2 226 2 95 1 125 1 26 1 28 1 184 2 256 1 347 1 233 1 35 1 278 1 215 1 353 2 217 1 169 1 239 1 
158 1 95 1 194 1 142 1 144 1 356 1 256 1 41 1 244 1 316 1 121 1 153 1 123 1 
158 1 95 1 194 1 53 2 8 1 208 2 11 1 356 1 232 1 256 1 41 1 33 1 35 1 316 1 118 1 5 1 135 1 123 1 
158 1 95 1 194 2 139 1 142 1 356 1 256 1 41 1 115 1 316 1 61 1 13 1 123 1 
157 1 286 1 330 1 53 1 208 1 104 1 57 1 33 1 260 1 
330 1 285 1 49 1 
157 1 74 1 330 1 260 1 11 1 
157 2 330 1 74 2 308 1 171 2 26 1 309 1 28 1 333 2 11 1 347 1 163 1 260 2 217 1 166 1 273 1 236 1 285 1 49 1 
117 1 197 1 327 1 253 1 328 1 191 1 73 1 199 1 
206 1 197 3 173 1 209 1 253 2 368 2 185 1 212 1 117 2 327 4 328 4 191 1 73 1 329 1 
221 1 113 1 253 1 212 1 199 1 117 1 327 1 328 1 134 1 191 1 73 1 
206 2 197 1 209 1 29 1 253 1 185 2 199 1 117 1 327 3 328 3 191 1 73 1 
370 2 59 1 196 1 197 2 
327 1 328 1 282 1 191 1 73 1 199 1 
117 1 197 1 327 2 253 1 328 2 191 1 368 1 73 1 224 1 199 1 
237 1 
117 1 197 1 327 1 253 1 328 1 191 1 73 1 199 1 
206 1 117 1 197 1 327 3 253 1 328 3 191 1 368 1 73 1 224 1 199 1 
197 1 173 1 212 1 329 1 
197 1 253 1 
117 1 197 1 141 1 253 1 
117 1 197 1 327 1 253 1 328 1 191 1 73 1 
327 1 240 1 6 1 
206 2 98 1 197 1 209 1 253 1 185 1 199 1 117 1 327 3 328 3 191 1 73 1 
117 1 197 1 327 2 253 1 328 2 318 1 191 1 368 1 73 1 
52 1 197 1 266 1 173 1 199 1 349 1 327 1 328 1 191 1 73 1 138 1 
197 1 327 1 253 1 328 1 191 1 73 1 199 1 
117 1 327 1 253 2 328 1 191 1 73 1 199 1 
265 1 197 1 288 1 253 1 175 1 199 1 327 2 328 2 191 2 73 2 
197 2 173 1 253 1 368 2 224 1 199 1 188 1 117 1 327 3 328 3 191 1 73 1 329 1 
64 1 197 1 266 2 253 1 368 1 199 1 69 1 117 1 349 1 327 2 328 2 291 1 191 1 73 1 138 1 
321 1 197 2 173 1 253 1 368 2 199 1 117 1 327 4 328 4 318 1 191 2 73 2 329 1 

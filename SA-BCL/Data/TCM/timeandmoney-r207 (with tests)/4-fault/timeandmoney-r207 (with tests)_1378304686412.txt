#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 180 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 2 185 2 74 5 77 1 219 1 166 2 56 1 168 2 34 1 60 1 36 1 120 3 324 1 86 1 45 9 89 1 151 9 329 2 308 1 111 1 205 2 354 2 331 4 24 1 377 1 312 1 72 1 181 6 
27 2 185 2 74 5 77 1 219 1 166 2 56 1 168 2 34 1 60 1 36 1 120 3 324 1 86 1 45 9 89 1 151 9 329 2 308 1 111 1 205 2 354 2 331 4 24 1 377 1 312 1 72 1 181 6 
27 2 185 2 74 6 77 1 219 1 166 2 56 1 168 2 34 1 60 1 36 1 120 4 324 1 86 1 45 10 89 1 151 10 329 2 308 1 111 1 205 2 354 2 331 5 24 1 377 1 312 1 72 1 181 7 
27 2 185 2 74 4 77 1 166 2 56 1 168 2 34 1 60 1 36 1 120 2 324 1 86 1 45 7 89 1 151 7 329 1 308 1 111 1 205 2 354 2 331 3 24 1 377 1 312 1 72 1 181 4 
45 4 185 1 74 3 151 4 329 2 219 1 308 1 166 1 56 1 205 1 168 1 354 1 331 2 34 1 36 1 120 1 377 1 181 3 
27 1 45 2 185 1 304 1 74 1 151 2 77 1 90 1 155 1 56 1 205 1 354 1 168 1 36 1 377 1 324 1 
205 2 56 1 331 1 354 2 27 1 60 1 45 3 36 1 120 1 74 2 151 3 377 1 181 1 
27 1 185 1 74 5 219 1 342 1 166 1 56 1 168 1 60 1 34 1 36 1 120 3 45 9 89 1 151 9 329 2 308 1 205 2 331 4 354 2 377 1 278 1 312 1 181 7 
27 1 185 1 74 5 219 1 342 1 166 1 56 1 168 1 60 1 34 1 36 1 120 3 45 9 89 1 151 9 329 2 308 1 205 2 331 4 354 2 377 1 278 1 312 1 181 7 
98 1 298 1 180 1 
98 1 317 1 40 2 
327 1 259 2 179 2 192 1 25 2 116 2 276 2 240 2 
215 1 259 2 336 1 340 1 186 1 218 1 116 2 189 1 31 2 222 1 290 1 167 2 62 1 192 1 345 1 141 2 142 2 39 1 327 1 173 1 42 1 272 2 44 1 200 1 18 1 106 1 202 1 67 1 177 1 276 2 21 1 309 1 130 1 179 3 25 2 209 1 240 3 
259 1 255 1 179 1 192 1 150 1 25 1 188 1 116 1 276 1 240 1 
55 1 116 1 188 1 224 1 98 1 59 1 277 1 157 1 179 1 294 1 298 1 240 1 160 1 212 1 
259 1 55 1 276 1 116 1 188 1 224 2 98 1 157 2 179 1 25 1 294 1 298 1 240 1 160 1 212 1 
330 1 224 1 22 1 157 1 311 1 
330 1 0 1 224 2 98 1 22 1 157 2 100 1 298 1 
330 1 224 1 157 1 
259 1 150 1 188 1 276 1 116 1 221 1 224 1 22 1 157 1 255 1 179 1 192 1 25 1 240 1 
98 1 
330 1 0 1 224 2 98 1 22 1 157 2 298 1 121 1 
0 1 182 1 73 1 203 1 110 1 330 2 376 1 224 5 98 1 22 2 157 5 293 1 50 1 208 2 92 2 369 1 298 1 123 2 249 1 
272 1 200 1 44 1 259 1 340 1 79 1 202 1 186 1 116 1 189 1 31 1 222 1 290 1 167 1 179 2 62 1 25 1 122 1 240 2 357 1 
327 1 180 1 
327 2 259 1 116 2 276 1 179 2 25 1 295 1 84 1 240 2 
333 1 143 1 357 1 
327 1 65 1 272 1 44 1 200 1 202 1 340 1 186 1 189 1 31 1 290 1 222 1 167 1 179 1 62 1 240 1 
327 1 147 1 59 1 259 4 179 5 25 4 295 1 79 1 268 1 134 1 276 1 116 5 240 5 122 2 
259 2 255 1 179 2 25 2 339 1 188 1 116 2 240 2 
327 1 259 3 179 3 25 3 276 1 116 3 122 1 240 3 
259 1 255 1 179 1 25 1 188 1 116 1 240 1 
259 1 179 1 25 1 295 1 84 1 188 1 116 1 276 1 240 1 
259 3 336 1 340 1 79 1 186 1 218 1 55 1 116 3 188 1 189 1 31 1 222 1 290 1 224 1 167 1 62 1 227 1 192 1 294 1 295 1 141 1 142 2 122 1 39 1 327 1 42 1 272 1 200 1 44 1 18 1 202 1 67 1 306 1 177 1 276 2 21 1 309 1 130 1 157 1 179 4 25 3 240 4 160 1 212 1 
327 1 59 1 259 1 179 2 25 1 268 1 116 2 240 2 122 1 
259 3 251 1 79 1 55 1 276 1 188 1 116 3 224 1 98 1 157 1 179 3 227 1 294 1 25 3 295 1 122 2 240 3 160 1 212 1 
259 2 276 1 116 2 333 1 179 2 25 2 295 1 122 1 240 2 357 1 
327 1 272 1 44 1 200 1 202 1 340 1 186 1 189 1 31 1 290 1 222 1 167 1 179 1 62 1 240 1 
327 1 272 1 200 1 202 1 340 1 186 1 366 1 189 1 31 1 290 1 222 1 167 1 179 1 95 1 240 1 
42 1 352 1 358 1 336 1 30 1 67 1 177 1 21 1 309 2 130 1 237 1 141 2 142 2 347 1 143 1 357 1 
259 1 179 1 25 1 339 1 55 1 188 1 116 1 240 1 
193 1 144 1 
193 1 144 1 
297 1 264 1 
297 1 264 1 
297 1 264 1 
316 1 193 1 144 1 
316 1 193 1 144 1 
236 1 193 1 144 1 
193 2 297 1 69 1 15 1 264 1 144 2 
316 1 193 1 144 1 
193 1 360 1 144 1 
193 1 360 1 144 1 
193 1 360 1 144 1 
1 1 259 2 361 1 116 2 187 1 117 1 224 1 81 1 193 1 119 1 368 1 144 1 327 1 302 1 230 1 127 1 236 1 254 1 157 1 207 1 179 2 25 2 240 2 135 1 
146 1 361 1 163 1 230 2 262 1 154 1 127 2 253 2 224 2 98 1 254 2 157 2 81 2 193 2 131 1 368 3 15 1 144 2 13 1 
168 1 185 1 166 1 
168 1 185 1 155 1 
124 1 185 3 275 1 287 1 166 2 155 1 
124 1 185 2 287 1 166 1 32 1 155 1 
124 2 185 2 287 1 166 1 155 1 
0 1 183 1 1 1 52 2 317 1 78 1 117 1 224 5 98 2 347 1 298 1 370 1 123 1 40 3 352 1 148 1 17 1 175 2 176 1 203 1 110 3 204 2 330 1 376 2 49 1 22 4 157 5 208 1 132 1 92 1 257 1 135 1 
0 1 183 1 284 5 317 3 117 4 224 9 98 5 195 1 347 3 298 1 370 2 348 1 171 1 123 2 40 9 352 3 148 3 175 6 176 3 126 1 203 1 110 8 204 6 330 6 376 6 22 7 178 1 157 9 50 1 208 2 132 3 92 2 311 5 257 2 279 1 
52 1 317 2 78 1 117 1 224 3 98 3 298 1 347 1 370 1 123 1 40 4 352 1 148 1 175 2 176 1 110 3 204 2 49 1 376 2 22 2 157 3 50 1 208 1 92 1 132 1 257 1 
52 2 317 3 78 1 117 2 224 4 98 4 195 1 298 1 347 2 370 1 348 1 123 1 40 7 352 2 148 2 175 4 176 2 110 5 204 4 49 1 376 4 22 3 178 1 157 4 50 1 208 1 92 1 132 2 257 1 
180 1 189 1 87 1 
170 1 189 1 
94 1 
222 1 186 1 189 1 
315 1 189 1 
186 1 189 1 
222 1 138 1 11 1 186 1 189 3 87 2 
352 1 335 1 282 2 359 1 174 3 104 1 245 1 234 1 309 3 226 2 132 1 209 4 141 7 323 1 228 1 136 1 248 1 
352 1 335 1 282 2 359 1 174 3 104 1 245 1 234 1 309 3 226 2 132 1 209 4 141 7 323 1 228 1 136 1 248 1 
352 1 335 1 282 2 359 1 174 3 104 1 245 1 128 1 234 1 309 3 226 2 132 1 209 4 141 7 323 1 228 1 136 1 248 1 
335 2 3 3 282 5 336 1 359 1 319 1 8 1 245 1 226 3 63 1 323 1 141 31 228 2 142 2 198 1 347 3 299 1 248 1 352 4 148 3 174 10 104 5 176 3 152 1 177 1 232 4 21 1 234 2 309 15 71 1 130 1 209 16 132 4 136 2 
335 1 282 3 113 1 336 2 359 1 61 1 226 2 141 9 323 1 142 4 228 1 248 1 352 1 174 4 104 1 152 1 177 2 21 2 234 1 309 4 130 2 132 1 209 5 136 1 
51 1 27 1 5 1 185 2 74 1 340 1 166 1 31 1 56 1 290 1 168 1 167 1 10 1 322 1 36 1 35 1 272 1 45 2 303 1 151 2 275 1 91 1 155 1 70 1 205 1 354 1 310 1 26 1 377 1 181 1 
27 1 53 1 5 1 185 2 74 1 340 1 165 1 166 1 31 1 290 1 168 1 167 1 10 1 36 1 35 1 272 1 16 1 45 3 303 1 151 3 275 1 91 1 155 1 70 1 205 1 354 1 310 1 26 1 377 1 181 2 
272 1 27 1 16 1 5 1 45 2 185 2 303 1 74 1 151 2 275 1 340 1 91 1 165 1 166 1 155 1 31 1 290 1 70 1 168 1 167 1 310 1 36 1 26 1 377 1 181 2 
27 2 28 1 53 1 340 1 186 1 189 1 31 1 291 1 290 1 167 1 269 1 88 1 300 1 272 1 45 1 201 1 151 1 202 1 91 2 70 2 205 1 354 1 310 2 
51 1 27 1 5 1 185 2 340 1 165 1 166 1 31 1 56 1 290 1 168 1 167 1 10 1 35 1 272 1 45 1 303 1 151 1 275 1 91 1 155 1 70 1 205 1 354 1 310 1 26 1 
328 1 
0 3 337 1 338 2 243 2 340 1 341 1 186 1 55 1 188 1 190 2 189 1 290 1 289 1 98 2 343 1 59 1 292 1 294 1 101 2 296 1 298 1 300 1 105 1 202 2 203 1 109 2 110 2 157 5 208 1 257 1 160 1 212 1 260 4 112 1 317 2 320 2 116 1 31 2 224 5 167 2 321 1 225 1 265 1 372 1 123 1 40 2 88 1 272 2 330 6 376 2 277 1 179 1 92 1 334 2 240 1 
0 1 260 2 55 1 116 1 188 1 190 1 289 1 224 3 59 1 343 1 265 1 294 1 296 1 372 1 121 1 330 2 277 1 157 3 179 1 240 1 160 1 212 1 
0 1 260 3 55 1 116 1 188 1 289 1 224 3 59 1 343 1 98 1 265 1 294 1 296 1 298 1 372 1 121 1 109 1 330 1 277 1 157 3 179 1 240 1 160 1 212 1 
0 1 260 3 55 1 320 1 116 1 188 1 190 1 289 1 224 3 59 1 343 1 98 1 265 1 294 1 296 1 298 1 121 1 372 1 109 1 330 2 277 1 157 3 179 1 240 1 160 1 212 1 
0 3 338 2 243 2 341 1 55 1 188 1 190 4 289 1 343 1 59 1 98 5 294 1 296 1 101 2 298 5 102 1 103 1 203 1 109 4 110 1 157 5 208 1 212 1 160 1 260 6 112 1 317 2 320 4 116 1 224 5 265 1 37 1 372 1 121 1 326 1 123 1 271 1 330 7 376 1 277 1 179 1 92 1 334 2 240 1 
0 2 338 2 243 2 341 1 55 1 188 1 190 2 289 1 59 1 343 1 98 2 292 1 294 1 296 1 101 2 298 1 203 1 110 1 109 2 157 4 208 1 212 1 160 1 260 4 112 1 317 2 320 2 116 1 224 4 265 1 372 1 123 1 40 2 330 4 376 1 277 1 179 1 92 1 334 2 240 1 
0 2 260 4 112 1 338 2 317 2 243 2 341 1 320 2 55 1 116 1 188 1 190 2 289 1 224 4 98 1 59 1 343 1 265 1 294 1 101 2 296 1 298 1 37 1 372 1 102 1 123 1 271 1 203 1 109 2 110 1 330 4 376 1 277 1 157 4 179 1 208 1 92 1 334 2 240 1 160 1 212 1 
0 2 260 4 112 1 338 2 317 2 243 2 341 1 320 2 55 1 116 1 188 1 190 2 289 1 224 4 98 1 59 1 343 1 265 1 294 1 101 2 296 1 298 1 37 1 372 1 102 1 123 1 271 1 203 1 109 2 110 1 330 4 376 1 277 1 157 4 179 1 208 1 92 1 334 2 240 1 160 1 212 1 
0 2 241 2 260 4 112 1 114 1 320 2 364 1 55 1 116 1 188 1 190 2 289 1 224 4 98 1 59 1 343 1 191 2 265 1 294 1 101 2 296 1 298 1 372 1 102 1 123 1 40 2 307 1 203 1 109 2 110 1 330 4 376 1 277 1 157 4 179 1 208 1 92 1 334 2 240 1 160 1 212 1 
0 2 260 5 112 1 338 2 317 2 243 2 341 1 55 1 320 3 116 1 188 1 190 3 289 1 224 4 98 1 59 1 343 1 265 1 294 1 101 2 296 1 298 1 37 1 372 1 102 1 123 1 271 1 103 1 203 1 110 1 109 3 330 5 376 1 277 1 157 4 179 1 208 1 92 1 334 2 240 1 160 1 212 1 
0 2 260 5 112 1 338 2 317 2 243 2 341 1 55 1 320 3 116 1 188 1 190 3 289 1 224 4 98 1 59 1 343 1 265 1 294 1 101 2 296 1 298 1 37 1 372 1 102 1 123 1 271 1 103 1 203 1 110 1 109 3 330 5 376 1 277 1 157 4 179 1 208 1 92 1 334 2 240 1 160 1 212 1 
0 2 241 2 55 1 188 1 190 2 289 1 59 1 343 1 98 1 191 2 292 1 294 1 296 1 101 2 298 1 203 1 110 1 109 2 157 4 208 1 212 1 160 1 260 4 112 1 364 1 320 2 116 1 224 4 265 1 372 1 123 1 40 2 330 4 376 1 277 1 179 1 92 1 334 2 240 1 
282 2 336 1 359 1 30 1 226 1 323 1 141 6 228 1 142 2 143 1 248 1 327 2 42 1 352 1 174 2 67 1 177 1 21 1 309 3 130 1 132 1 209 3 180 1 357 1 136 1 
184 1 3 2 216 1 336 2 188 1 141 9 142 4 198 1 143 7 327 1 42 1 148 2 250 1 18 1 176 2 67 2 232 2 177 2 21 2 309 3 206 1 130 2 333 5 158 1 209 6 132 2 211 1 357 7 
259 1 336 1 75 1 340 1 79 1 186 1 116 1 189 1 31 1 222 1 290 1 167 1 62 1 141 2 142 2 199 1 122 1 327 1 272 1 65 1 42 1 200 1 44 1 66 1 18 1 202 1 106 1 67 1 177 1 21 1 309 1 333 1 130 1 179 2 25 1 158 1 209 1 240 2 
259 1 336 2 7 1 340 1 79 1 186 1 218 1 9 1 96 1 116 1 189 1 31 1 222 1 290 1 139 1 167 1 62 1 196 1 141 5 142 4 143 2 122 1 42 2 272 1 148 1 200 1 44 1 18 1 176 1 202 1 67 2 177 2 21 2 309 2 130 2 179 2 25 1 158 1 209 3 132 1 240 2 357 2 
259 1 336 2 318 1 76 1 340 2 30 1 186 2 165 1 116 1 189 3 31 8 290 2 167 8 322 1 247 1 83 1 141 2 142 4 371 1 122 1 88 1 173 2 300 1 272 7 42 2 18 1 252 1 202 2 106 1 67 2 177 2 21 2 309 1 129 1 130 2 179 1 25 1 209 1 240 1 
282 1 259 1 336 1 116 1 58 1 295 1 141 3 142 2 347 1 143 1 42 1 352 1 148 1 174 1 176 1 67 1 276 1 177 1 21 1 309 2 333 1 130 1 179 1 25 1 158 1 132 1 209 1 240 1 357 1 
42 1 273 1 148 1 336 1 30 1 67 1 177 1 21 1 130 1 132 1 209 2 141 2 142 2 143 1 357 1 
42 1 352 1 336 1 30 1 67 1 177 1 21 1 309 2 130 1 237 1 141 2 142 2 347 1 143 1 357 1 
42 1 148 1 336 1 176 1 30 1 67 1 177 1 21 1 130 1 132 1 209 2 141 2 142 2 143 1 357 1 
42 1 273 1 148 1 336 1 67 1 177 1 21 1 130 1 132 1 209 2 141 2 142 2 371 1 143 1 357 1 
42 1 352 1 336 1 67 1 177 1 21 1 309 2 130 1 237 1 141 2 142 2 347 1 371 1 143 1 357 1 
42 1 148 1 336 1 176 1 67 1 177 1 21 1 130 1 132 1 209 2 141 2 142 2 371 1 143 1 357 1 
42 1 148 1 336 1 176 1 67 1 177 1 21 1 130 1 132 1 209 2 141 2 142 2 143 1 357 1 
336 1 340 1 186 1 218 1 189 1 31 1 222 1 290 1 167 1 62 1 141 2 142 2 327 1 272 1 42 1 200 1 44 1 18 1 106 1 202 1 67 1 177 1 21 1 309 1 130 1 179 1 209 1 240 1 
336 1 340 1 186 1 366 1 189 1 31 1 222 1 290 1 167 1 141 2 142 2 327 1 272 1 42 1 200 1 18 1 106 1 202 1 67 1 177 1 21 1 309 1 130 1 179 1 209 1 95 1 356 1 240 1 
42 1 148 1 336 1 176 1 67 1 177 1 21 1 130 1 158 1 132 1 209 2 141 2 142 2 143 1 357 1 
336 1 340 1 218 1 186 1 189 1 31 1 222 1 290 1 139 1 167 1 62 1 322 1 141 2 142 2 143 1 272 1 42 1 148 1 200 1 44 1 176 1 67 1 177 1 21 1 130 1 179 1 209 2 132 1 240 1 357 1 
259 1 336 1 217 1 116 1 295 1 141 2 142 2 143 1 42 1 148 1 174 1 104 1 176 1 67 1 276 1 177 1 21 1 130 1 333 1 179 1 25 1 158 1 132 1 209 2 240 1 357 1 
3 3 282 4 336 3 6 1 8 3 286 1 61 1 344 1 194 1 141 41 347 4 198 1 142 6 350 2 248 1 351 1 352 5 148 4 104 4 152 1 21 3 309 21 209 20 29 1 359 1 261 1 365 1 226 1 323 1 267 4 228 1 374 1 41 1 174 8 176 4 231 1 177 3 232 4 130 3 132 5 239 1 238 1 136 1 
282 4 3 3 6 1 336 4 359 1 29 1 286 1 8 3 261 1 365 1 61 1 226 1 344 1 194 1 323 1 141 38 228 1 267 4 142 8 198 1 347 3 350 2 351 1 248 1 374 1 41 1 352 4 148 4 174 7 104 3 152 2 176 4 231 1 232 4 177 4 21 4 309 18 130 4 209 20 132 5 238 1 239 1 136 1 
282 7 3 4 6 1 336 2 359 1 29 1 286 1 8 2 261 1 365 1 61 1 226 1 344 1 194 1 323 1 141 52 228 1 267 4 142 4 198 2 347 7 350 1 248 1 374 1 41 1 352 8 148 7 174 14 104 7 152 1 176 7 232 4 177 2 21 2 309 25 206 2 130 2 209 27 132 8 238 1 239 1 136 1 
282 3 3 1 336 2 29 1 8 1 261 1 365 2 61 1 141 19 267 2 142 4 198 1 347 3 350 1 351 1 301 1 352 3 148 3 174 6 104 3 176 3 232 2 177 2 21 2 309 10 130 2 209 9 132 3 238 1 239 1 
282 2 3 2 6 1 336 3 29 2 261 1 8 2 286 1 365 1 61 1 344 1 194 1 141 26 267 4 142 6 347 2 350 2 374 1 352 2 41 1 148 3 174 4 104 2 152 2 176 3 177 3 232 2 21 3 309 12 130 3 209 14 132 3 238 1 239 1 
146 1 43 1 254 1 81 1 193 1 230 1 154 1 127 1 15 1 144 1 
302 1 236 1 
254 1 149 1 81 1 193 1 12 1 230 1 127 1 164 1 144 1 
316 1 107 1 
54 1 360 1 69 1 
146 1 361 1 163 1 230 1 154 1 127 1 253 1 224 1 98 1 157 1 254 1 81 1 193 1 131 1 368 2 15 1 144 1 13 1 
146 1 361 1 163 1 230 1 154 1 127 1 253 1 224 1 98 1 157 1 254 1 81 1 193 1 131 1 368 2 15 1 144 1 13 1 
146 1 361 1 163 1 230 1 154 1 127 1 253 1 224 1 98 1 157 1 254 1 81 1 193 1 131 1 368 2 15 1 144 1 13 1 
316 1 107 1 69 1 
316 1 107 1 69 1 
54 1 360 1 
54 1 360 1 69 1 
207 1 119 1 
1 1 259 2 187 1 116 2 117 1 224 1 81 1 193 1 119 1 368 1 13 1 144 1 327 1 302 1 230 1 253 1 127 1 22 1 236 1 157 1 254 1 207 1 179 2 25 2 280 1 240 2 135 1 
336 1 242 1 76 1 340 1 186 1 220 1 116 2 189 1 31 2 290 1 118 1 80 1 167 2 83 1 141 2 142 2 173 2 42 1 272 2 18 1 19 1 106 1 67 1 177 1 21 1 309 1 130 1 179 2 158 1 209 1 240 2 
272 2 185 2 303 1 275 1 340 1 244 1 165 1 166 1 155 1 31 2 290 1 168 1 167 2 310 1 322 1 35 1 82 1 26 1 378 1 
272 1 185 2 303 1 285 1 275 1 340 1 165 1 166 1 155 1 31 1 290 1 168 1 167 1 310 1 35 1 82 1 26 1 
300 1 272 1 340 1 202 1 186 1 153 1 189 1 31 1 290 1 167 1 310 1 378 1 269 1 88 1 
272 1 185 2 303 1 275 1 340 1 244 1 165 1 166 1 155 1 31 1 290 1 168 1 167 1 310 1 35 1 82 1 26 1 378 1 
229 1 
376 1 98 1 293 1 298 1 180 1 110 1 249 1 
0 1 338 1 317 1 243 1 341 1 224 1 98 2 298 1 123 1 40 1 203 1 110 1 330 1 376 1 157 1 208 1 92 1 
272 1 340 2 202 1 186 1 203 1 189 2 31 1 290 1 222 1 167 1 256 1 208 1 11 1 92 1 170 1 123 1 14 1 
0 1 281 2 3 1 337 1 317 3 8 1 286 1 224 1 98 5 344 1 194 1 347 2 298 2 349 1 123 2 40 6 145 1 374 1 41 1 352 2 148 2 175 5 176 2 203 2 232 1 110 8 330 1 204 5 376 5 355 1 157 1 208 2 92 2 132 2 257 1 
281 2 259 1 359 1 188 1 116 1 221 1 224 1 192 1 228 1 123 1 271 1 145 1 352 1 150 1 203 1 276 1 110 2 353 1 376 2 157 1 255 1 179 1 25 1 208 1 92 1 132 2 240 1 136 1 
203 1 110 1 376 1 98 1 293 1 208 1 92 1 298 1 123 1 249 1 
145 1 352 2 281 2 148 2 7 1 317 5 175 5 176 2 110 5 204 5 376 5 98 5 132 2 347 2 40 10 
330 1 0 1 224 1 98 1 157 1 298 1 
213 1 0 2 337 2 340 1 186 1 189 1 31 4 290 1 167 4 224 3 225 1 99 2 346 1 123 2 88 1 300 1 272 4 105 1 305 1 202 2 203 1 110 2 330 4 376 2 157 3 50 1 208 2 92 2 257 2 
259 2 336 1 340 1 218 1 186 1 116 2 189 1 31 1 290 1 222 1 167 1 62 1 192 1 141 1 142 2 39 1 327 1 272 1 42 1 44 1 200 1 18 1 202 1 67 1 177 1 276 2 21 1 309 1 130 1 179 3 25 2 240 3 
337 1 317 2 175 2 203 1 110 1 204 2 376 2 98 4 226 1 208 1 92 1 257 1 298 2 123 1 40 4 
230 1 127 1 375 1 
230 1 127 1 375 1 
207 1 20 1 230 1 154 1 127 1 
230 1 127 1 375 1 
161 1 230 1 127 1 
161 1 230 1 127 1 
161 1 230 1 127 1 
230 1 127 1 
193 1 144 1 
3 1 282 2 336 1 359 1 8 1 61 1 226 1 194 1 141 8 323 1 142 2 228 1 248 1 352 1 174 2 232 1 177 1 21 1 309 4 130 1 132 1 209 4 136 1 
282 2 3 1 336 2 359 1 8 1 61 1 226 1 194 1 323 1 141 11 228 1 142 4 198 1 248 1 352 1 148 1 174 3 104 1 176 1 232 2 177 2 21 2 156 1 309 5 130 2 209 6 132 2 136 1 
3 1 282 3 336 3 359 1 8 1 286 1 61 1 226 1 344 1 194 1 323 1 141 19 228 1 142 6 347 2 248 1 374 1 41 1 352 3 148 2 174 4 104 1 176 2 152 1 232 1 177 3 21 3 156 1 309 10 130 3 209 9 132 3 136 1 
3 1 282 3 336 3 359 1 8 1 286 1 61 1 226 1 344 1 194 1 323 1 141 17 228 1 142 6 347 1 248 1 374 1 41 1 352 2 148 2 174 5 104 2 152 1 176 2 232 1 177 3 21 3 156 1 309 7 130 3 209 10 132 3 136 1 
3 1 282 2 336 1 359 1 8 1 61 1 226 1 194 1 141 8 323 1 142 2 228 1 248 1 352 1 174 2 232 1 177 1 21 1 309 4 130 1 132 1 209 4 136 1 
3 1 282 1 336 1 8 1 286 1 61 1 344 1 194 1 141 12 142 2 347 2 374 1 41 1 352 2 148 2 174 2 104 1 176 2 232 1 177 1 21 1 309 6 130 1 209 6 132 2 
3 1 282 3 336 4 359 1 8 1 286 1 61 1 226 1 344 1 194 1 323 1 141 18 228 1 142 8 347 1 248 1 374 1 41 1 352 2 148 2 174 5 104 2 176 2 152 2 232 1 177 4 21 4 156 1 309 8 130 4 209 10 132 3 136 1 
3 1 282 3 336 4 8 1 286 1 61 1 344 1 194 1 141 16 142 8 347 2 351 1 374 1 41 1 352 2 148 3 174 6 104 3 176 3 152 2 232 1 177 4 21 4 309 7 130 4 209 9 132 3 
352 1 282 3 174 6 359 1 104 3 309 4 132 1 209 3 141 7 323 1 228 3 248 2 136 3 
3 1 282 3 336 4 359 1 8 1 286 1 61 1 226 1 344 1 194 1 323 1 141 18 228 1 142 8 347 1 248 1 351 1 374 1 41 1 352 2 148 2 174 4 104 1 176 2 152 2 232 1 177 4 21 4 309 8 130 4 209 10 132 3 136 1 
352 1 282 2 336 2 359 1 174 3 104 1 152 1 177 2 21 2 309 4 226 1 130 2 132 1 209 4 141 8 323 1 142 4 228 1 248 1 136 1 
352 1 282 2 174 2 359 1 309 3 226 1 132 1 209 3 323 1 141 6 228 1 180 1 248 1 136 1 
352 1 148 1 282 1 336 1 174 2 104 1 176 1 177 1 21 1 156 1 309 2 130 1 132 1 209 2 141 4 347 1 142 2 
352 1 148 1 282 1 3 1 174 2 104 1 176 1 8 1 232 2 309 4 209 3 132 1 141 7 347 1 198 1 
3 2 282 5 336 2 359 1 226 1 323 1 141 23 228 2 198 1 347 2 142 4 248 1 352 3 148 2 174 9 250 1 104 4 176 2 152 2 232 2 177 2 21 2 309 12 206 1 130 2 132 3 209 11 93 1 136 2 
309 1 141 1 232 1 
3 1 209 1 141 1 
352 1 148 1 282 2 336 1 7 1 174 3 104 1 176 1 177 1 21 1 156 1 309 3 130 1 132 1 209 3 141 6 142 2 347 1 
3 1 282 1 336 1 8 1 286 1 61 1 344 1 194 1 141 12 142 2 347 2 374 1 41 1 352 2 148 2 174 2 104 1 176 2 232 1 177 1 21 1 309 6 130 1 209 6 132 2 
352 1 282 1 359 1 174 2 104 1 309 3 132 1 209 3 141 6 228 1 136 1 
282 1 336 1 174 2 104 1 152 1 177 1 21 1 309 2 130 1 209 1 93 1 141 3 323 1 228 1 142 2 136 1 248 1 
352 2 282 3 336 1 174 5 359 1 104 2 177 1 21 1 309 5 353 1 61 1 130 1 209 5 132 2 141 10 142 2 228 2 136 2 
148 1 336 1 174 1 104 1 177 1 21 1 61 1 130 1 132 1 209 2 141 2 142 2 
352 1 148 1 282 1 336 1 174 2 104 1 176 1 177 1 21 1 309 2 61 1 130 1 132 1 209 2 141 4 347 1 142 2 
282 1 336 3 174 2 104 1 152 1 177 3 21 3 309 2 61 1 130 3 209 1 93 1 141 3 142 6 228 1 351 1 136 1 
3 3 282 7 336 5 359 2 319 1 8 1 61 1 226 1 63 1 323 1 141 34 228 3 142 10 198 1 347 3 299 1 248 1 351 1 352 5 148 3 174 12 104 5 152 2 176 3 232 4 177 5 21 5 156 1 309 18 130 5 209 16 132 5 93 1 136 3 
327 1 59 1 179 1 268 1 116 1 313 1 240 1 
327 1 314 1 116 1 233 1 57 1 223 1 59 1 179 1 268 1 373 1 313 1 240 1 
290 1 300 1 167 1 272 1 340 1 202 1 186 1 180 1 189 1 88 1 31 1 
327 1 272 1 200 1 259 1 44 1 340 1 202 1 186 1 116 1 189 1 31 1 222 1 290 1 167 1 179 2 25 1 122 1 240 2 
327 1 315 1 272 1 283 1 200 1 259 2 44 1 340 1 186 2 55 1 188 1 116 2 189 3 31 1 222 2 290 1 167 1 99 1 179 2 25 1 122 1 240 2 212 1 
327 1 315 1 272 2 283 1 200 1 259 2 340 1 186 2 55 1 188 1 116 2 189 3 31 2 222 2 290 1 167 2 99 1 179 2 25 1 140 1 95 1 122 1 240 2 212 1 
315 1 272 3 283 1 202 1 340 1 186 1 108 1 189 4 31 3 222 1 97 1 330 1 290 1 224 2 167 3 98 1 157 2 99 1 294 1 140 1 298 1 170 1 87 1 
315 1 272 3 125 1 283 1 202 1 340 1 186 1 189 4 31 3 222 1 330 1 290 1 224 2 167 3 98 1 157 2 99 1 294 1 140 1 298 1 170 1 87 1 
290 1 167 1 272 1 247 1 340 1 31 1 
173 1 272 6 318 1 252 1 202 2 340 3 186 2 115 1 165 1 137 1 47 1 189 3 31 7 222 1 290 2 167 7 129 1 322 1 247 1 11 1 83 1 
184 1 282 4 336 2 242 1 340 1 186 1 188 1 189 1 290 1 139 1 62 1 196 1 141 14 142 4 143 1 248 1 352 3 200 1 104 1 67 2 21 2 309 7 353 1 25 1 158 1 209 7 357 1 259 1 359 2 218 1 116 1 31 1 222 1 167 1 226 1 322 1 323 1 228 2 122 1 327 3 272 1 42 2 44 1 174 5 177 2 130 2 179 2 132 3 240 2 136 2 
0 1 189 2 31 1 167 1 224 3 98 1 293 1 294 1 346 1 298 1 170 1 38 1 85 1 123 2 249 1 64 1 87 1 272 1 125 1 202 1 203 2 110 1 330 2 376 1 22 1 157 3 208 2 92 2 
272 2 340 2 186 1 189 2 31 2 222 1 290 1 167 2 322 1 256 1 247 1 11 1 87 1 
300 1 272 4 340 1 202 1 186 1 189 1 31 4 290 1 167 4 322 1 140 1 197 1 88 1 
272 2 340 2 186 1 115 1 137 1 189 1 31 2 235 1 222 1 290 1 332 1 167 2 99 1 210 1 
290 1 168 1 167 1 272 1 185 1 303 1 340 1 202 1 155 1 31 1 
272 2 340 1 186 1 165 1 189 1 31 2 118 1 290 1 167 2 322 1 83 1 
300 1 272 4 318 1 252 1 202 1 340 2 186 2 189 3 31 5 290 2 167 5 99 1 322 1 83 1 197 1 88 1 
300 1 272 4 252 1 202 1 340 2 186 2 189 3 31 5 290 2 167 5 99 1 322 1 83 1 197 1 88 1 270 1 
327 1 272 1 200 1 259 1 340 1 202 1 186 1 116 1 189 1 31 1 222 1 290 1 167 1 179 2 25 1 95 1 122 1 240 2 
272 1 340 2 186 1 115 1 137 1 47 1 189 1 31 1 222 1 290 1 167 1 99 1 11 1 
327 1 48 1 33 1 246 1 159 1 
327 1 162 1 55 1 188 1 68 1 33 2 48 2 224 2 98 1 22 1 157 2 246 1 227 1 294 1 367 1 298 1 159 2 212 1 160 1 
19 1 220 1 116 1 33 1 80 1 179 1 246 1 159 1 240 1 
246 1 367 1 68 1 
36 1 74 1 377 1 180 1 
205 1 354 1 45 1 36 1 74 1 151 1 377 1 
70 1 27 1 151 1 
205 1 56 1 214 1 354 1 45 3 36 1 266 1 74 1 151 3 377 1 324 2 133 1 
205 1 354 1 45 2 36 1 74 1 151 2 329 1 377 1 181 1 
45 1 185 1 74 1 151 1 166 1 56 1 205 1 354 1 331 1 168 1 34 1 
205 1 56 1 354 1 45 1 36 1 74 1 151 1 
205 1 56 1 354 1 45 1 36 2 151 1 377 1 
205 2 56 1 354 2 169 1 45 2 36 1 74 1 151 2 258 1 46 1 
205 1 56 1 331 1 354 1 89 1 45 3 36 1 120 1 74 2 151 3 377 1 312 1 181 2 
45 2 185 2 74 1 151 2 275 1 166 1 155 1 56 1 205 1 354 1 168 1 23 1 36 1 377 1 181 1 
205 2 56 1 331 1 354 2 45 4 36 1 120 1 74 2 151 4 329 1 377 1 219 1 181 2 
205 1 56 1 354 1 45 1 36 1 74 1 151 1 377 1 
172 1 214 1 45 4 74 3 151 4 205 1 354 1 331 1 36 2 120 1 377 2 324 1 133 1 181 2 
205 1 56 1 354 1 4 1 45 2 36 1 74 1 151 2 363 1 377 1 278 1 181 1 
214 2 2 1 45 3 74 1 151 3 56 1 205 1 354 1 36 1 377 1 324 2 133 1 
274 2 74 2 362 1 325 1 
205 1 56 1 354 1 45 1 151 1 288 1 
205 1 56 1 354 1 89 1 45 2 36 1 74 1 151 2 377 1 181 1 
263 1 
205 1 56 1 354 1 45 1 36 1 74 1 151 1 377 1 
205 1 56 1 354 1 89 1 45 3 36 1 74 1 151 3 377 1 324 1 181 1 
172 1 331 1 120 1 74 1 
36 1 74 1 

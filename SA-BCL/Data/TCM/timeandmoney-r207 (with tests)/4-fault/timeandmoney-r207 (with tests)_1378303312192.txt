#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (268,295) 235 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (8,156) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (10,33,133) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (8,156) (8,156) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 47 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (10,33,133) (10,33,133) 271 242 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 47 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 324 115 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (268,295) (268,295) (1,193) 278 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (268,295) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (268,295) (268,295) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (8,156) (8,156) 194 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (268,295) 235 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 336 (19,153) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 336 (19,153) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 336 (238,314) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (8,156) (8,156) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (8,156) (8,156) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 336 (238,314) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 3 175 2 177 1 84 1 181 9 6 6 274 2 91 4 280 2 283 1 286 2 151 1 105 2 289 1 322 1 293 2 292 1 114 1 158 1 297 9 116 1 162 2 163 1 299 1 330 1 169 1 124 1 258 1 
40 3 175 2 177 1 181 9 84 1 6 6 274 2 91 4 280 2 283 1 286 2 151 1 105 2 289 1 322 1 293 2 292 1 114 1 158 1 297 9 116 1 162 2 163 1 299 1 330 1 169 1 124 1 258 1 
40 4 175 2 177 1 181 10 84 1 6 7 274 2 91 5 280 2 283 1 286 2 151 1 105 2 289 1 322 1 293 2 292 1 114 1 158 1 297 10 116 1 162 2 163 1 299 1 330 1 169 1 124 1 258 1 
40 2 175 2 177 1 181 7 84 1 6 4 274 2 91 3 280 1 283 1 286 2 151 1 105 2 289 1 322 1 293 2 292 1 114 1 297 7 116 1 162 2 163 1 299 1 330 1 169 1 124 1 258 1 
40 1 175 1 151 1 105 1 177 1 293 1 181 4 84 1 114 1 158 1 6 3 297 4 274 1 91 2 280 2 169 1 283 1 286 1 
175 1 177 1 322 1 293 1 181 2 68 1 114 1 297 2 274 1 162 1 163 1 233 1 169 1 283 1 17 1 286 1 
40 1 175 2 177 1 293 2 292 1 181 3 114 1 6 1 297 3 91 1 162 1 169 1 283 1 
40 3 175 2 177 1 221 1 181 9 84 1 6 7 274 1 91 4 280 2 283 1 103 1 286 1 151 1 105 1 292 1 293 2 114 1 158 1 297 9 162 1 299 1 169 1 258 1 
40 3 175 2 177 1 221 1 181 9 84 1 6 7 274 1 91 4 280 2 283 1 103 1 286 1 151 1 105 1 292 1 293 2 114 1 158 1 297 9 162 1 299 1 169 1 258 1 
313 1 112 1 47 1 
334 1 112 1 256 2 
327 2 12 2 237 1 2 2 46 2 272 2 309 2 
127 1 24 2 109 2 2 1 202 2 46 1 268 1 228 1 309 1 272 1 12 1 327 1 186 1 235 1 237 1 171 1 
327 1 12 1 237 1 2 1 156 1 46 1 272 1 309 1 
327 1 2 1 33 1 101 1 272 1 10 1 
327 1 12 1 2 1 46 1 272 1 309 1 10 1 
32 1 54 1 142 1 335 1 133 1 
32 1 54 1 313 1 34 1 142 2 112 1 133 2 185 1 
32 1 142 1 133 1 
327 1 12 1 54 1 237 1 2 1 142 1 156 1 46 1 133 1 272 1 309 1 8 1 
112 1 
32 1 54 1 313 1 34 1 142 2 112 1 133 2 244 1 
128 1 20 1 261 2 220 1 25 2 44 1 112 1 29 1 132 2 133 5 49 1 252 1 54 2 32 2 313 1 34 1 142 5 254 1 37 1 
47 1 
12 1 327 2 2 2 46 1 309 1 272 2 125 1 50 1 
327 1 12 1 24 1 109 1 186 1 2 1 166 1 202 1 59 1 46 1 272 1 
2 5 46 4 272 5 309 1 273 1 50 1 12 4 327 5 166 1 57 1 101 1 241 1 59 2 
327 1 12 1 2 1 46 1 272 1 
327 3 12 3 2 3 59 1 46 3 309 1 272 3 
327 1 12 1 2 1 46 1 272 1 
327 1 12 1 2 1 46 1 272 1 309 1 125 1 50 1 
327 2 12 2 2 2 166 1 59 1 46 2 309 1 272 2 50 1 
327 2 12 1 2 2 101 1 241 1 59 1 46 1 272 2 
327 1 12 1 2 1 166 1 59 1 46 1 272 1 
327 1 12 1 2 1 46 1 272 1 309 1 50 1 
24 1 109 1 186 1 202 1 
24 1 109 1 186 1 202 1 
106 1 282 1 333 1 301 1 189 1 5 1 243 2 253 1 
327 1 12 1 2 1 131 1 46 1 272 1 
22 1 320 1 
22 1 320 1 
332 1 190 1 
332 1 190 1 
332 1 190 1 
22 1 196 1 320 1 
22 1 196 1 320 1 
22 1 196 1 320 1 
22 1 320 1 148 1 
176 1 22 2 320 2 332 1 190 1 325 1 
174 1 22 1 320 1 
174 1 22 1 320 1 
174 1 22 1 320 1 
22 1 178 1 320 1 290 1 154 1 2 2 182 1 155 1 225 1 46 2 133 1 69 1 272 2 310 1 275 1 52 1 51 1 327 2 12 2 312 1 142 1 97 1 148 1 
22 2 197 1 320 2 180 1 248 1 263 1 290 2 182 2 112 1 69 2 133 2 325 1 310 1 275 3 51 2 142 2 213 1 100 1 77 2 
105 1 286 1 274 1 
68 1 286 1 274 1 
105 2 129 1 4 1 68 1 31 1 274 3 
105 1 129 1 120 1 68 1 31 1 274 2 
105 1 129 1 68 1 31 2 274 2 
128 1 261 1 178 1 223 1 132 1 133 5 308 1 49 3 53 1 54 4 14 1 313 1 142 5 143 1 97 1 150 1 20 2 107 1 25 1 64 1 294 1 155 1 112 2 70 1 326 2 298 2 32 1 123 2 34 1 334 1 214 1 256 3 
128 1 261 2 44 1 223 3 183 1 132 2 133 9 308 3 49 8 92 1 53 2 54 7 313 1 240 5 142 9 143 3 97 4 150 2 104 1 152 1 20 6 107 1 25 2 291 1 294 3 112 5 70 3 205 1 298 6 32 6 123 6 34 1 334 3 335 5 256 9 
261 1 44 1 223 1 132 1 133 3 308 1 49 3 53 1 54 2 313 1 142 3 143 1 97 1 150 1 20 2 64 1 25 1 294 1 112 3 70 1 326 1 298 2 123 2 334 2 214 1 256 4 
261 1 44 1 223 2 132 1 133 4 308 2 49 5 92 1 53 1 54 3 313 1 142 4 143 2 97 2 150 1 152 1 20 4 25 1 64 1 294 2 112 4 70 2 205 1 326 2 298 4 123 4 334 3 214 1 256 7 
170 1 47 1 207 1 
170 1 16 1 
210 1 
108 1 170 1 285 1 
170 1 208 1 
108 1 170 1 
93 1 108 1 170 3 285 1 255 1 207 2 
218 7 262 1 288 1 264 1 223 1 294 1 130 2 265 1 86 1 85 2 249 1 251 4 122 3 121 1 188 1 315 3 302 1 
218 7 262 1 288 1 264 1 223 1 294 1 130 2 265 1 86 1 85 2 249 1 251 4 122 3 121 1 188 1 315 3 302 1 
259 1 218 7 262 1 288 1 264 1 223 1 294 1 130 2 265 1 86 1 85 2 249 1 251 4 122 3 121 1 188 1 315 3 302 1 
218 31 262 2 305 1 264 1 306 4 265 1 223 4 130 5 85 3 86 5 269 1 308 3 56 1 282 1 143 3 188 2 243 2 315 10 192 1 288 1 106 1 323 1 294 4 249 2 157 3 70 3 251 16 209 1 121 1 122 15 333 1 168 1 301 1 302 2 
218 9 262 1 223 1 130 3 265 1 85 2 86 1 140 1 282 2 188 1 243 4 315 4 192 1 60 1 106 2 288 1 294 1 249 1 251 5 122 4 121 1 333 2 301 2 302 1 
126 1 175 1 260 1 177 1 4 1 83 1 181 2 307 1 6 1 274 2 136 1 146 1 283 1 191 1 286 1 287 1 105 1 24 1 109 1 293 1 202 1 68 1 114 1 250 1 297 2 162 1 300 1 169 1 36 1 78 1 
126 1 175 1 260 1 4 1 43 1 83 1 181 3 307 1 6 2 274 2 136 1 146 1 283 1 191 1 286 1 287 1 105 1 24 1 109 1 321 1 293 1 202 1 68 1 114 1 297 3 162 1 211 1 169 1 36 1 78 1 
126 1 260 1 4 1 83 1 181 2 307 1 6 2 274 2 136 1 283 1 286 1 287 1 105 1 24 1 109 1 321 1 202 1 68 1 114 1 297 2 162 1 211 1 169 1 36 1 78 1 
287 1 126 2 245 1 175 1 108 1 109 1 24 1 82 1 43 1 293 1 181 1 202 1 83 2 30 1 159 1 297 1 89 1 136 2 137 1 162 2 186 1 170 1 36 1 
126 1 175 1 260 1 177 1 4 1 83 1 181 1 307 1 274 2 136 1 146 1 191 1 286 1 287 1 105 1 24 1 109 1 293 1 202 1 68 1 297 1 162 1 211 1 300 1 36 1 78 1 
76 1 
80 1 128 1 261 1 2 1 82 1 132 1 133 2 272 1 271 1 10 1 49 1 53 1 186 2 142 2 101 1 187 1 316 1 242 1 287 1 245 1 20 1 108 1 24 2 109 2 25 1 202 2 161 1 327 1 32 2 33 1 34 1 170 1 36 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
2 1 133 2 271 1 272 1 10 1 327 1 32 1 142 2 34 1 33 1 101 1 242 1 316 1 244 1 217 1 
128 1 261 1 25 1 2 1 132 1 133 1 272 1 271 1 10 1 327 1 142 1 33 1 101 1 242 1 316 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
327 1 2 1 33 1 142 1 101 1 133 1 316 1 242 1 272 1 271 1 10 1 217 1 
128 1 261 1 25 1 2 1 132 1 133 1 272 1 271 1 10 1 327 1 142 1 33 1 101 1 242 1 316 1 217 1 
218 2 106 1 288 1 294 1 130 1 265 1 85 1 5 1 47 1 249 1 251 2 253 1 121 1 333 1 282 1 189 1 301 1 315 1 302 1 243 2 
218 2 106 1 26 1 306 1 157 1 115 1 324 1 251 1 253 1 122 1 333 1 282 1 189 1 301 1 243 2 
218 2 195 1 106 1 26 1 2 1 46 1 135 1 272 1 251 1 253 1 12 1 327 1 117 1 122 1 239 1 166 1 282 1 333 1 59 1 189 1 301 1 243 2 
218 1 1 1 2 1 46 1 268 1 272 1 12 1 186 1 278 1 282 1 189 1 59 1 243 2 106 1 109 1 24 1 26 1 202 1 295 1 253 1 327 1 117 1 122 1 166 1 333 1 301 1 
218 1 195 1 106 1 109 1 24 1 202 1 251 1 253 1 212 1 186 1 333 1 282 1 189 1 301 1 35 1 243 2 
218 2 2 1 223 1 46 1 308 1 309 1 272 1 50 1 12 1 232 1 282 1 143 1 189 1 243 2 106 1 26 1 294 1 70 1 253 1 251 1 327 1 122 1 333 1 301 1 
218 1 106 1 201 1 294 1 5 1 70 1 253 1 251 1 333 1 282 1 189 1 301 1 243 2 
218 1 106 1 65 1 223 1 5 1 253 1 122 1 333 1 282 1 143 1 189 1 301 1 243 2 
218 2 106 1 223 1 294 1 5 1 70 1 308 1 253 1 251 1 122 1 143 1 333 1 282 1 189 1 301 1 243 2 
218 1 106 1 201 1 294 1 70 1 253 1 251 1 333 1 282 1 189 1 301 1 35 1 243 2 
218 1 106 1 65 1 223 1 253 1 122 1 333 1 282 1 143 1 189 1 301 1 35 1 243 2 
218 2 106 1 223 1 294 1 70 1 308 1 253 1 251 1 122 1 143 1 333 1 282 1 189 1 301 1 35 1 243 2 
218 2 106 1 223 1 294 1 70 1 308 1 253 1 251 1 122 1 143 1 333 1 282 1 189 1 301 1 243 2 
24 1 109 1 186 1 202 1 268 1 
24 1 109 1 186 1 27 1 202 1 
218 2 106 1 26 1 223 1 294 1 70 1 308 1 253 1 251 1 122 1 143 1 333 1 282 1 189 1 301 1 243 2 
24 1 109 1 202 1 268 1 295 1 250 1 
218 2 2 1 223 1 46 1 227 1 308 1 309 1 272 1 50 1 12 1 282 1 143 1 189 1 243 2 106 1 26 1 294 1 70 1 253 1 251 1 327 1 122 1 333 1 301 1 
218 19 305 1 306 2 130 3 223 3 86 3 308 3 94 1 13 1 282 2 143 3 243 4 315 6 317 1 60 1 106 2 110 2 318 2 111 1 66 1 294 3 157 1 70 3 251 9 209 1 122 10 333 2 301 2 215 1 339 1 
42 1 218 26 305 2 306 2 130 2 223 2 86 2 48 1 7 1 308 3 13 2 236 1 282 3 143 2 192 2 315 4 243 6 317 1 60 1 106 3 110 1 318 4 111 1 66 1 294 3 157 2 70 3 251 14 73 1 122 12 333 3 301 3 38 1 215 2 
173 1 42 1 218 44 305 3 306 5 265 1 130 4 223 5 85 1 86 4 48 1 7 1 308 5 94 1 236 1 13 2 282 3 143 4 192 1 243 6 315 8 317 1 60 1 288 1 106 3 110 1 318 4 111 1 66 1 294 6 249 1 157 3 70 5 251 22 209 2 73 1 121 1 122 22 333 3 301 3 302 1 38 1 215 1 
173 1 42 1 218 43 305 3 306 5 265 1 130 5 223 5 85 1 86 3 48 1 7 1 308 5 94 1 236 1 13 2 282 4 143 4 192 2 243 8 315 8 317 1 60 1 288 1 106 4 110 1 318 4 111 1 66 1 294 6 249 1 157 3 70 5 251 22 209 2 73 1 121 1 122 21 333 4 301 4 302 1 38 1 215 1 
42 1 218 52 305 2 306 4 265 1 130 7 223 8 85 1 86 7 48 1 7 1 308 7 236 1 13 1 282 2 143 7 192 1 243 4 315 14 317 1 60 1 62 2 288 1 106 2 110 1 318 4 111 1 66 1 294 8 249 1 157 4 70 7 251 27 209 2 73 1 121 1 122 25 333 2 301 2 302 1 38 1 215 1 
61 1 22 1 197 1 320 1 248 1 290 1 182 1 69 1 325 1 51 1 
312 1 148 1 
164 1 22 1 320 1 290 1 200 1 182 1 226 1 69 1 51 1 
75 1 196 1 
174 1 176 1 145 1 
22 1 197 1 320 1 248 1 263 1 290 1 182 1 112 1 133 1 69 1 325 1 310 1 275 2 51 1 142 1 213 1 100 1 77 1 
22 1 197 1 320 1 248 1 263 1 290 1 182 1 112 1 133 1 69 1 325 1 310 1 275 2 51 1 142 1 213 1 100 1 77 1 
22 1 197 1 320 1 248 1 263 1 290 1 182 1 112 1 133 1 69 1 325 1 310 1 275 2 51 1 142 1 213 1 100 1 77 1 
75 1 176 1 196 1 
75 1 176 1 196 1 
174 1 145 1 
174 1 176 1 145 1 
154 1 225 1 
178 1 2 2 182 1 225 1 46 2 133 1 272 2 275 1 51 1 52 1 12 2 54 1 312 1 142 1 97 1 148 1 22 1 320 1 290 1 154 1 155 1 69 1 327 2 213 1 77 1 172 1 
327 2 2 2 266 1 102 1 296 1 272 2 
287 1 39 1 260 1 105 1 109 2 24 2 4 1 202 2 67 1 68 1 250 1 274 2 136 1 211 1 146 1 36 1 286 1 78 1 340 1 
287 1 260 1 105 1 109 1 24 1 4 1 202 1 68 1 274 2 160 1 136 1 211 1 146 1 36 1 286 1 78 1 340 1 
287 1 39 1 245 1 108 1 109 1 24 1 82 1 202 1 30 1 88 1 136 1 186 1 170 1 36 1 
39 1 287 1 260 1 105 1 109 1 24 1 4 1 202 1 67 1 68 1 274 2 136 1 211 1 146 1 36 1 286 1 78 1 340 1 
338 1 
20 1 313 1 112 1 29 1 47 1 37 1 49 1 
128 1 261 1 219 1 132 1 133 1 9 1 49 1 313 1 142 1 20 1 63 1 25 1 112 2 32 1 34 1 334 1 256 1 
261 4 93 1 186 1 99 1 98 1 187 1 285 2 16 3 18 2 19 2 193 2 287 2 20 8 108 2 109 3 24 3 25 4 202 3 294 2 29 1 112 8 207 2 208 1 298 6 32 5 34 3 123 6 36 3 37 1 303 2 216 1 128 4 223 2 45 1 132 4 133 5 308 2 49 9 53 2 311 1 141 2 313 2 142 5 144 2 143 2 147 1 70 2 250 1 74 2 329 2 334 6 167 2 170 8 256 12 
42 1 128 2 261 2 305 1 306 1 3 1 223 2 132 2 133 1 48 1 7 1 308 2 49 8 53 1 236 1 313 2 142 1 143 2 187 1 20 5 25 2 199 1 294 2 112 5 157 1 70 2 298 5 74 2 32 1 34 1 123 5 167 1 334 3 256 6 38 1 
128 1 261 1 81 1 2 1 223 1 132 1 46 1 133 1 8 1 309 1 272 1 49 2 12 1 237 1 142 1 194 1 20 1 25 1 294 1 156 1 249 1 74 2 327 1 121 1 302 1 
128 1 261 1 20 1 25 1 29 1 132 1 112 1 49 1 313 1 37 1 
20 5 294 2 223 2 112 5 70 2 308 2 49 5 298 5 74 2 123 5 167 1 334 5 143 2 256 10 303 1 
32 1 313 1 142 1 34 1 112 1 133 1 
80 1 128 1 261 2 44 1 82 1 132 2 133 3 229 1 49 2 53 2 186 2 142 3 99 2 187 2 147 1 287 1 245 1 20 2 108 1 24 4 109 4 25 2 202 4 161 1 72 1 32 4 34 2 170 1 36 1 
327 1 12 1 24 1 109 1 186 1 235 1 237 1 2 1 202 1 46 1 268 1 272 1 309 1 
128 1 20 2 261 1 25 1 85 1 132 1 112 4 49 1 298 2 53 1 313 2 123 2 334 2 187 1 256 4 
182 1 204 1 51 1 
182 1 204 1 51 1 
182 1 204 1 51 1 
197 1 182 1 225 1 270 1 51 1 
182 1 90 1 51 1 
182 1 90 1 51 1 
182 1 90 1 51 1 
182 1 51 1 
22 1 320 1 
218 8 106 2 288 1 223 1 294 1 130 2 265 1 85 1 86 1 249 1 251 4 121 1 122 4 333 2 282 2 301 2 315 3 243 4 192 1 302 1 
218 6 288 1 265 1 130 2 294 1 223 1 85 1 47 1 249 1 251 3 122 3 121 1 302 1 315 2 
218 4 106 1 130 1 223 1 294 1 86 1 70 1 308 1 251 2 55 1 122 2 143 1 333 1 282 1 301 1 315 2 243 2 
218 7 305 1 306 2 130 1 223 1 294 1 86 1 157 1 70 1 308 1 251 3 209 1 122 4 143 1 315 2 
218 23 306 2 265 1 223 3 130 5 85 1 86 4 308 2 143 2 282 2 315 9 192 2 243 4 62 1 288 1 106 2 294 3 249 2 70 2 157 2 324 1 251 11 209 1 121 1 122 12 333 2 301 2 302 2 257 1 
218 1 122 1 306 1 
218 1 157 1 251 1 
218 6 106 1 294 1 223 1 130 2 86 1 70 1 308 1 251 3 55 1 122 3 282 1 333 1 143 1 301 1 243 2 315 3 303 1 
218 12 42 1 305 1 306 1 223 2 130 1 86 1 48 1 308 2 7 1 236 1 282 1 143 2 243 2 315 2 60 1 106 1 294 2 157 1 70 2 251 6 122 6 333 1 301 1 38 1 
218 6 294 1 223 1 130 1 86 1 249 1 251 3 121 1 122 3 302 1 315 2 
218 3 106 1 288 1 130 1 265 1 86 1 249 1 251 1 122 2 333 1 282 1 301 1 315 2 302 1 192 1 243 2 257 1 
60 1 194 1 218 10 106 1 130 3 294 2 223 2 86 2 249 2 251 5 122 5 121 1 282 1 333 1 301 1 243 2 302 2 315 5 
60 1 218 2 106 1 294 1 86 1 70 1 251 2 333 1 282 1 301 1 243 2 315 1 
60 1 218 4 106 1 130 1 223 1 294 1 86 1 70 1 308 1 251 2 122 2 143 1 333 1 282 1 301 1 315 2 243 2 
60 1 218 3 106 3 130 1 86 1 249 1 251 1 94 1 122 2 333 3 282 3 301 3 192 1 243 6 302 1 315 2 257 1 
218 34 305 1 306 4 265 1 223 5 130 7 85 1 86 5 308 3 94 1 56 1 55 1 282 5 143 3 192 2 243 10 315 12 60 1 288 1 106 5 323 1 294 5 249 3 157 3 70 3 251 16 209 1 121 2 122 18 333 5 168 1 301 5 302 3 257 1 
218 11 305 1 306 2 223 1 130 2 265 1 85 1 308 1 282 1 315 2 243 2 60 1 106 1 288 1 294 2 157 1 70 1 249 1 251 6 209 1 121 1 122 5 333 1 301 1 302 1 38 1 
218 11 305 1 306 2 223 1 130 2 265 1 85 1 86 1 308 1 55 1 282 2 243 4 315 3 60 1 288 1 106 2 294 2 249 1 157 1 70 1 251 6 209 1 121 1 122 5 333 2 301 2 302 1 38 1 
42 1 218 19 305 1 306 1 265 1 223 3 130 3 85 1 86 1 48 1 308 2 7 1 236 1 55 1 282 3 143 2 243 6 315 4 192 1 60 1 288 1 106 3 294 3 249 1 157 1 70 2 251 9 121 1 122 10 333 3 301 3 302 1 38 1 
218 17 42 1 305 1 306 1 265 1 223 2 130 3 85 1 86 2 48 1 308 2 7 1 236 1 55 1 282 3 143 1 192 1 243 6 315 5 60 1 288 1 106 3 294 3 249 1 157 1 70 2 251 10 121 1 122 7 333 3 301 3 302 1 38 1 
218 11 305 1 306 2 223 1 130 2 265 1 85 1 308 1 282 1 315 2 243 2 60 1 106 1 288 1 294 2 157 1 70 1 249 1 251 6 209 1 121 1 122 5 333 1 301 1 302 1 38 1 
218 12 42 1 305 1 306 1 223 2 130 1 86 1 48 1 308 2 7 1 236 1 282 1 143 2 243 2 315 2 60 1 106 1 294 2 157 1 70 2 251 6 122 6 333 1 301 1 38 1 
42 1 218 18 305 1 306 1 265 1 223 2 130 3 85 1 86 2 48 1 7 1 308 2 236 1 55 1 282 4 143 1 243 8 315 5 192 2 60 1 288 1 106 4 294 3 249 1 157 1 70 2 251 10 121 1 122 8 333 4 301 4 302 1 38 1 
42 1 218 16 305 1 306 1 223 2 130 3 86 3 48 1 7 1 308 3 94 1 236 1 282 4 143 2 243 8 315 6 192 2 60 1 106 4 294 3 157 1 70 3 251 9 122 7 333 4 301 4 38 1 
218 7 288 1 223 1 265 2 130 3 294 1 86 3 249 3 251 3 122 4 121 1 302 3 315 6 
42 1 218 18 305 1 306 1 265 1 223 2 130 3 85 1 86 1 48 1 7 1 308 2 94 1 236 1 282 4 143 1 243 8 315 4 192 2 60 1 288 1 106 4 294 3 249 1 157 1 70 2 251 10 121 1 122 8 333 4 301 4 302 1 38 1 
327 1 2 1 101 1 241 1 15 1 272 1 
246 1 222 1 2 1 71 1 272 1 276 1 327 1 119 1 241 1 101 1 15 1 
287 1 245 1 108 1 24 1 109 1 186 1 82 1 202 1 170 1 47 1 36 1 
287 1 108 1 109 1 24 1 153 1 2 1 202 1 46 1 272 1 12 1 327 1 186 1 59 1 170 1 285 1 36 1 336 1 
287 1 108 1 109 1 24 1 153 1 2 1 202 1 46 1 272 1 12 1 327 1 99 1 59 1 170 1 285 1 36 1 336 1 
287 1 108 1 109 1 24 1 2 1 202 1 46 1 272 1 12 1 327 1 238 1 99 1 59 1 170 1 285 1 36 1 336 1 
2 1 46 1 133 2 272 1 309 1 8 1 12 1 237 1 313 1 314 1 142 2 99 1 144 1 285 1 16 1 287 1 108 1 24 1 109 1 202 1 156 1 112 1 207 1 208 1 327 1 165 1 32 1 170 4 36 1 216 1 
2 1 46 1 133 2 272 1 309 1 8 1 12 1 237 1 313 1 142 2 99 1 144 1 285 1 16 1 19 1 287 1 108 1 24 1 109 1 202 1 156 1 112 1 207 1 208 1 327 1 32 1 170 4 36 1 216 1 
287 1 23 1 24 1 109 1 202 1 36 1 
287 2 23 1 108 2 109 7 24 7 198 1 0 1 202 6 267 1 228 1 250 1 211 1 93 1 231 1 186 2 96 1 331 1 170 3 285 1 36 3 304 1 
327 1 12 1 2 1 59 1 46 1 272 1 
128 2 261 2 132 2 133 3 49 1 54 1 186 1 141 1 313 1 142 3 144 1 16 1 147 1 18 1 19 1 193 1 20 1 109 1 24 1 25 2 202 1 112 1 29 1 207 1 32 2 34 1 170 2 37 1 
287 1 93 1 108 1 23 1 24 2 109 2 98 1 202 2 170 2 36 2 285 1 250 1 207 1 
287 1 245 1 108 1 24 4 109 4 186 1 179 1 82 1 202 4 224 1 170 1 36 1 250 1 
287 1 108 1 109 2 24 2 202 2 267 1 328 1 118 1 99 1 58 1 170 1 285 1 36 2 304 1 
287 1 260 1 24 1 109 1 186 1 202 1 68 1 36 1 286 1 274 1 
287 1 108 1 109 2 24 2 202 2 250 1 211 1 231 1 95 1 170 1 36 1 
287 2 245 1 108 2 109 5 24 5 198 1 82 1 202 4 224 1 250 1 231 1 186 1 331 1 99 1 170 3 36 2 
287 2 245 1 108 2 109 5 24 5 198 1 82 1 202 4 224 1 250 1 234 1 231 1 186 1 99 1 170 3 36 2 
287 1 108 1 109 1 24 1 2 1 202 1 46 1 272 1 12 1 327 1 186 1 238 1 59 1 170 1 285 1 36 1 336 1 
287 1 108 1 109 1 24 1 202 1 267 1 93 1 96 1 99 1 170 1 285 1 36 2 304 1 
319 1 2 1 266 1 296 1 272 1 230 1 11 1 327 1 102 1 
319 1 284 1 113 1 
11 1 279 1 319 1 230 1 
11 1 54 1 279 1 319 1 142 1 203 1 284 1 113 1 133 1 230 1 
169 1 283 1 47 1 114 1 
175 1 293 1 181 1 169 1 283 1 114 1 297 1 
162 1 126 1 181 1 
175 1 21 1 177 1 322 2 293 1 181 3 184 1 114 1 297 3 169 1 283 1 149 1 
175 1 280 1 293 1 181 2 169 1 283 1 114 1 6 1 297 2 
175 1 105 1 177 1 293 1 84 1 181 1 286 1 297 1 274 1 91 1 
175 1 177 1 293 1 181 1 283 1 114 1 297 1 
175 1 177 1 293 1 181 1 169 1 283 2 297 1 
175 2 177 1 281 1 293 2 28 1 181 2 283 1 114 1 297 2 138 1 
40 1 175 1 177 1 293 1 181 3 114 1 6 2 297 3 91 1 299 1 169 1 283 1 258 1 
175 1 105 1 177 1 293 1 4 1 181 2 68 1 114 1 134 1 6 1 297 2 274 2 169 1 283 1 286 1 
40 1 175 2 177 1 293 2 181 4 114 1 158 1 6 2 297 4 91 1 280 1 169 1 283 1 
175 1 177 1 293 1 181 1 169 1 283 1 114 1 297 1 
40 1 41 1 175 1 21 1 322 1 293 1 181 4 114 2 6 2 297 4 91 1 169 2 283 2 149 1 
175 1 177 1 221 1 293 1 181 2 114 1 6 1 297 2 206 1 169 1 283 1 337 1 
175 1 21 2 177 1 247 1 322 2 293 1 181 3 114 1 297 3 169 1 283 1 149 1 
277 1 139 1 114 2 79 2 
175 1 177 1 293 1 181 1 297 1 341 1 
175 1 299 1 177 1 293 1 181 2 169 1 283 1 114 1 6 1 297 2 
87 1 
175 1 177 1 293 1 181 1 169 1 283 1 114 1 297 1 
175 1 177 1 322 1 293 1 181 3 6 1 114 1 297 3 299 1 169 1 283 1 
40 1 181 1 6 1 297 1 91 1 
283 1 114 1 

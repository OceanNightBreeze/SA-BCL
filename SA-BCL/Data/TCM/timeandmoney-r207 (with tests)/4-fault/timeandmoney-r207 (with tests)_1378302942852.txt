#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
248 1 91 1 31 1 284 1 342 2 145 2 251 2 39 1 198 1 200 2 253 3 121 1 272 4 155 2 260 1 16 9 185 1 51 1 301 1 302 1 228 5 351 1 229 1 354 2 109 1 244 2 356 9 212 6 
248 1 91 1 31 1 284 1 342 2 145 2 251 2 39 1 198 1 200 2 253 3 121 1 272 4 155 2 260 1 16 9 185 1 51 1 301 1 302 1 228 5 351 1 229 1 354 2 109 1 244 2 356 9 212 6 
248 1 91 1 31 1 284 1 342 2 145 2 251 2 39 1 198 1 200 2 253 4 121 1 272 5 155 2 260 1 16 10 185 1 51 1 301 1 302 1 228 6 351 1 229 1 354 2 109 1 244 2 356 10 212 7 
248 1 91 1 31 1 284 1 342 1 145 2 251 2 39 1 200 2 253 2 121 1 272 3 155 2 260 1 16 7 185 1 51 1 301 1 302 1 228 4 351 1 229 1 354 2 109 1 244 2 356 7 212 4 
260 1 16 4 185 1 51 1 342 2 228 3 351 1 229 1 354 1 251 1 145 1 198 1 253 1 200 1 356 4 272 2 155 1 212 3 
309 1 284 1 16 2 185 1 51 1 228 1 229 1 145 1 251 1 354 1 200 1 121 1 356 2 244 1 281 1 295 1 
16 3 185 1 51 1 228 2 229 1 145 2 39 1 200 2 253 1 356 3 244 1 272 1 212 1 
31 1 342 2 145 2 251 1 39 1 198 1 253 3 200 2 272 4 155 1 156 1 299 1 260 1 16 9 185 1 51 1 301 1 228 5 351 1 229 1 354 1 244 1 356 9 212 7 
31 1 342 2 145 2 251 1 39 1 198 1 253 3 200 2 272 4 155 1 156 1 299 1 260 1 16 9 185 1 51 1 301 1 228 5 351 1 229 1 354 1 244 1 356 9 212 7 
318 1 
296 1 338 1 86 2 
378 1 202 2 261 2 84 1 341 2 364 2 130 2 314 2 
62 1 89 1 64 1 339 1 341 3 93 2 364 2 218 2 37 1 314 2 176 1 268 1 270 1 202 2 344 1 345 1 182 2 105 1 161 1 261 2 15 1 323 1 20 1 129 1 107 1 377 1 130 3 187 2 83 1 378 1 189 1 327 2 357 1 84 1 168 1 231 1 336 1 
97 1 202 1 271 1 160 1 261 1 84 1 341 1 364 1 130 1 314 1 
374 1 338 1 341 1 364 1 130 1 186 1 21 1 267 1 269 1 97 1 98 1 45 1 179 1 307 1 
374 2 338 1 261 1 341 1 364 1 130 1 186 1 314 1 21 1 267 1 269 1 97 1 98 2 202 1 307 1 
110 1 324 1 374 1 214 1 98 1 
110 1 71 1 269 1 374 2 214 1 98 2 338 1 81 1 
110 1 374 1 98 1 
214 1 374 1 160 1 261 1 341 1 34 1 364 1 130 1 314 1 97 1 98 1 271 1 202 1 84 1 
338 1 
110 1 71 1 269 1 374 2 214 1 98 2 338 1 173 1 
214 2 374 5 298 1 338 1 340 1 376 1 70 2 108 2 239 1 71 1 110 2 269 1 167 2 98 5 381 1 190 1 56 1 178 1 240 1 
318 1 
261 1 341 2 364 2 130 2 314 1 378 2 343 1 202 1 9 1 
203 1 237 1 116 1 
182 1 89 1 64 1 339 1 15 1 341 1 93 1 130 1 218 1 37 1 176 1 378 1 166 1 344 1 168 1 231 1 
261 4 341 5 364 5 130 5 314 1 219 1 378 1 202 4 305 1 152 1 9 1 124 2 179 1 358 1 
97 1 279 1 202 2 160 1 261 2 341 2 364 2 130 2 
182 1 89 1 64 1 339 1 261 1 15 1 341 2 93 1 364 1 130 2 218 1 37 1 176 1 202 1 203 1 344 1 168 1 231 1 124 1 358 1 
378 1 202 3 261 3 341 3 124 1 364 3 130 3 314 1 
97 1 202 1 160 1 261 1 341 1 364 1 130 1 
97 1 343 1 202 1 261 1 9 1 341 1 364 1 130 1 314 1 
89 1 64 1 339 1 341 4 93 1 1 1 364 3 218 1 37 1 4 1 176 1 314 2 267 1 268 1 97 1 270 1 98 1 202 3 344 1 9 1 124 1 182 1 374 1 105 1 261 3 15 1 323 1 20 1 129 1 107 1 377 1 130 4 186 1 187 2 21 1 83 1 378 1 327 1 168 1 84 1 231 1 307 1 358 1 336 1 
378 1 202 1 305 1 261 1 341 2 124 1 179 1 364 2 130 2 
374 1 338 1 261 3 32 1 341 3 364 3 1 1 130 3 186 1 314 1 21 1 267 1 97 1 98 1 202 3 9 1 124 2 307 1 358 1 
261 2 341 2 364 2 130 2 237 1 314 1 202 2 203 1 9 1 124 1 
182 1 89 1 64 1 339 1 15 1 341 1 93 1 130 1 218 1 37 1 176 1 378 1 344 1 168 1 231 1 
182 1 89 1 64 1 15 1 341 1 164 1 93 1 130 1 218 1 37 1 176 1 378 1 344 1 231 1 59 1 
62 2 359 1 29 1 237 2 315 1 146 1 268 1 270 1 203 2 150 1 368 1 369 1 370 1 105 1 129 1 323 2 107 1 303 1 377 1 187 2 327 4 114 1 55 1 116 2 
97 1 202 1 279 1 261 1 341 1 364 1 130 1 267 1 
183 1 94 1 
183 1 94 1 
127 1 384 1 
127 1 384 1 
127 1 384 1 
183 1 246 1 94 1 
183 1 246 1 94 1 
183 1 94 1 61 1 
127 1 183 2 57 1 94 2 77 1 384 1 
183 1 246 1 94 1 
366 1 183 1 94 1 
366 1 183 1 94 1 
366 1 183 1 94 1 
225 1 274 1 103 1 374 1 183 1 159 1 261 2 341 2 250 1 94 1 364 2 130 2 378 1 98 1 289 1 202 2 132 1 245 1 25 1 47 1 10 1 223 1 61 1 308 1 
310 1 338 1 341 1 285 1 250 1 94 2 34 1 364 1 143 1 174 1 314 1 286 1 97 1 98 2 202 1 271 1 103 2 374 2 125 1 183 2 160 1 159 2 261 1 130 1 132 2 245 2 84 1 25 2 134 1 192 1 60 1 
155 1 354 1 251 1 
354 1 251 1 295 1 
43 1 155 2 102 1 251 3 224 1 295 1 
43 1 155 1 293 1 102 1 251 2 295 1 
43 1 155 1 102 2 251 2 295 1 
29 1 214 4 171 2 249 1 338 2 340 3 92 1 70 1 146 1 71 1 269 1 98 5 289 1 123 1 220 2 254 2 47 1 370 1 225 1 296 1 374 5 226 1 263 1 350 1 376 2 108 1 110 1 167 1 114 1 190 1 86 3 337 1 
63 1 29 3 214 7 171 6 249 3 338 5 216 1 340 8 92 2 70 2 146 3 71 1 269 1 288 1 98 9 122 1 178 1 220 6 47 4 370 3 296 3 374 9 226 1 300 1 350 2 376 6 108 2 110 6 324 5 167 2 114 3 190 1 282 5 332 1 86 9 
214 2 29 1 338 3 249 1 171 2 340 3 92 1 70 1 146 1 269 1 98 3 123 1 178 1 47 1 254 1 220 2 370 1 296 2 374 3 350 1 376 2 108 1 167 1 114 1 86 4 337 1 
63 1 214 3 29 2 338 4 171 4 249 2 216 1 340 5 92 1 70 1 146 2 269 1 288 1 98 4 123 1 178 1 220 4 47 2 254 2 370 2 296 3 374 4 350 1 376 4 108 1 167 1 114 2 86 7 337 1 
318 1 
290 1 37 1 
383 1 
344 1 15 1 37 1 
380 1 37 1 
15 1 37 1 
7 1 344 1 68 2 15 1 37 3 197 1 
62 4 29 1 349 1 375 1 323 3 3 1 150 3 327 7 44 1 73 1 331 1 333 1 26 2 207 1 368 2 306 1 370 1 
62 4 29 1 349 1 375 1 323 3 3 1 150 3 327 7 44 1 73 1 331 1 333 1 26 2 207 1 368 2 306 1 370 1 
62 4 29 1 349 1 375 1 323 3 3 1 149 1 150 3 327 7 44 1 73 1 331 1 207 1 333 1 26 2 368 2 306 1 370 1 
62 16 29 4 249 3 363 4 3 1 146 3 175 1 270 1 150 10 73 1 44 2 154 1 255 1 207 1 208 1 368 5 370 4 319 1 349 5 14 1 375 2 129 1 323 15 107 1 377 1 187 2 379 1 327 31 330 3 114 3 331 2 26 3 333 2 306 1 
62 5 29 1 13 1 140 1 349 1 375 1 323 4 129 2 107 2 3 1 377 2 175 1 187 4 270 2 150 4 327 9 44 1 73 1 331 1 207 1 333 1 26 2 368 3 370 1 
64 1 65 1 141 1 172 1 235 1 93 1 218 1 145 1 251 2 200 1 74 1 155 1 204 1 295 1 224 1 182 1 16 2 185 1 51 1 228 1 229 1 354 1 266 1 111 1 112 1 356 2 244 1 231 1 212 1 213 1 
64 1 141 1 172 1 235 1 93 1 218 1 145 1 251 2 287 1 200 1 96 1 74 1 155 1 204 1 256 1 224 1 295 1 182 1 16 3 185 1 51 1 228 1 354 1 266 1 112 1 356 3 244 1 231 1 212 2 213 1 
64 1 141 1 172 1 235 1 93 1 218 1 251 2 287 1 96 1 74 1 155 1 295 1 224 1 182 1 16 2 185 1 51 1 228 1 354 1 112 1 244 1 356 2 231 1 212 2 213 1 
182 1 89 1 64 1 157 1 262 1 15 1 50 1 16 1 128 1 93 1 235 2 218 1 37 1 145 1 200 1 42 1 112 2 244 2 356 1 74 2 231 1 256 1 137 1 
64 1 65 1 141 1 172 1 235 1 93 1 218 1 145 1 251 2 287 1 200 1 74 1 155 1 204 1 295 1 224 1 182 1 16 1 229 1 354 1 266 1 112 1 356 1 244 1 231 1 213 1 
276 1 
64 1 338 2 66 2 340 2 341 1 70 1 218 2 71 3 72 2 179 1 296 2 182 2 78 2 262 1 15 1 350 1 130 1 186 1 21 1 131 1 24 1 190 1 231 1 232 1 86 2 136 1 307 1 138 2 90 2 89 2 30 1 93 2 364 1 37 1 267 1 269 1 97 1 42 1 98 5 45 1 99 1 206 1 275 2 374 5 320 1 158 4 162 1 376 2 54 1 108 1 110 6 167 1 211 1 247 1 335 2 
30 1 173 1 341 1 364 1 267 1 71 1 97 1 98 3 45 1 179 1 206 1 374 3 320 1 158 2 130 1 186 1 21 1 131 1 110 2 136 1 307 1 335 1 
338 1 30 1 66 1 173 1 341 1 364 1 267 1 71 1 97 1 269 1 98 3 45 1 179 1 206 1 374 3 320 1 158 3 130 1 186 1 21 1 131 1 110 1 136 1 307 1 
338 1 173 1 30 1 66 1 341 1 364 1 267 1 71 1 97 1 269 1 98 3 72 1 45 1 179 1 206 1 374 3 320 1 158 3 130 1 186 1 21 1 131 1 110 2 136 1 307 1 335 1 
338 5 173 1 66 4 340 1 341 1 70 1 71 3 72 4 179 1 11 1 296 2 78 2 130 1 186 1 131 1 21 1 24 1 190 1 133 1 232 1 136 1 307 1 138 2 90 2 30 1 33 1 364 1 95 1 267 1 97 1 269 5 98 5 45 1 206 1 275 2 374 5 320 1 158 6 376 1 108 1 110 7 325 1 167 1 335 4 
338 2 340 1 66 2 341 1 70 1 71 2 72 2 179 1 296 2 78 2 130 1 186 1 131 1 21 1 24 1 190 1 232 1 86 2 136 1 307 1 138 2 90 2 30 1 364 1 267 1 97 1 269 1 98 4 45 1 99 1 206 1 275 2 374 4 320 1 158 4 376 1 108 1 110 4 167 1 335 2 
90 2 338 1 66 2 340 1 30 1 341 1 364 1 70 1 267 1 71 2 269 1 97 1 98 4 72 2 45 1 179 1 206 1 11 1 296 2 275 2 78 2 374 4 320 1 158 4 376 1 130 1 186 1 108 1 21 1 131 1 110 4 325 1 167 1 24 1 190 1 232 1 133 1 136 1 335 2 307 1 138 2 
90 2 338 1 66 2 340 1 30 1 341 1 364 1 70 1 267 1 71 2 269 1 97 1 98 4 72 2 45 1 179 1 206 1 11 1 296 2 275 2 78 2 374 4 320 1 158 4 376 1 130 1 186 1 108 1 21 1 131 1 110 4 325 1 167 1 24 1 190 1 232 1 133 1 136 1 335 2 307 1 138 2 
90 2 338 1 66 2 0 2 340 1 30 1 341 1 364 1 70 1 267 1 71 2 269 1 97 1 98 4 72 2 45 1 179 1 206 1 11 1 241 2 275 2 259 1 374 4 320 1 158 4 376 1 106 1 130 1 186 1 108 1 21 1 131 1 110 4 167 1 24 1 190 1 86 2 115 1 136 1 335 2 307 1 
90 2 338 1 340 1 30 1 66 3 33 1 341 1 364 1 70 1 267 1 71 2 269 1 97 1 98 4 72 3 45 1 179 1 206 1 11 1 296 2 275 2 78 2 374 4 320 1 158 5 376 1 130 1 108 1 186 1 21 1 131 1 110 5 325 1 167 1 24 1 190 1 232 1 133 1 136 1 307 1 335 3 138 2 
90 2 338 1 340 1 30 1 66 3 33 1 341 1 364 1 70 1 267 1 71 2 269 1 97 1 98 4 72 3 45 1 179 1 206 1 11 1 296 2 275 2 78 2 374 4 320 1 158 5 376 1 130 1 108 1 186 1 21 1 131 1 110 5 325 1 167 1 24 1 190 1 232 1 133 1 136 1 307 1 335 3 138 2 
338 1 340 1 0 2 66 2 341 1 70 1 71 2 72 2 179 1 130 1 186 1 131 1 21 1 24 1 190 1 86 2 136 1 307 1 90 2 30 1 364 1 267 1 97 1 269 1 98 4 45 1 99 1 206 1 241 2 275 2 374 4 320 1 158 4 376 1 108 1 110 4 167 1 115 1 335 2 
268 1 270 1 105 1 55 1 318 1 129 1 107 1 377 1 187 2 
62 8 29 2 249 2 363 3 237 4 146 2 268 2 270 2 150 2 203 11 255 1 100 1 208 1 368 1 370 1 12 1 373 1 105 1 161 1 349 1 20 1 323 6 129 2 107 2 377 2 353 1 187 4 378 1 327 14 329 1 330 3 114 1 116 11 
88 1 118 1 62 1 89 1 64 1 339 1 341 2 93 1 364 1 218 1 37 1 237 1 176 1 268 1 270 1 202 1 344 1 124 1 180 1 182 1 105 1 161 1 261 1 15 1 129 1 20 1 323 1 107 1 377 1 130 2 187 2 378 1 166 1 327 2 329 1 168 1 231 1 358 1 
62 10 64 2 249 2 339 2 341 3 3 1 218 3 176 2 287 1 344 2 73 1 124 1 75 2 182 3 261 1 349 4 15 2 20 1 129 3 130 3 187 6 265 2 188 1 83 2 231 2 26 1 358 1 233 1 89 1 29 3 93 3 364 1 365 2 37 2 237 7 146 2 268 3 270 3 202 1 203 7 150 8 44 1 207 1 368 4 101 1 370 3 105 3 161 1 323 10 107 3 377 3 378 2 327 20 329 1 168 2 114 2 331 1 116 7 117 2 
193 1 62 1 89 2 64 2 341 1 93 8 364 1 218 8 37 3 287 1 268 2 270 2 42 1 202 1 317 1 345 2 124 1 182 7 104 1 278 1 209 1 126 1 105 2 161 1 261 1 242 1 262 1 15 2 129 2 20 1 323 1 107 2 130 1 377 2 187 4 111 1 327 2 55 1 231 2 
62 1 29 1 249 1 341 1 364 1 237 1 314 1 146 1 268 1 270 1 202 1 150 1 203 1 9 1 368 1 370 1 105 1 261 1 163 1 129 1 323 2 107 1 377 1 130 1 187 2 327 3 329 1 114 1 116 1 
62 2 29 1 105 1 349 1 129 1 107 1 303 1 377 1 237 1 187 2 146 1 268 1 270 1 150 1 203 1 327 2 55 1 116 1 
359 1 105 1 129 1 323 2 107 1 377 1 237 1 187 2 268 1 270 1 150 1 203 1 327 2 55 1 114 1 368 1 116 1 370 1 
62 2 29 1 249 1 237 2 146 1 268 1 270 1 203 2 150 2 368 1 370 1 105 1 349 1 129 1 323 2 107 1 377 1 187 2 327 4 55 1 114 1 116 2 
104 1 62 2 29 1 105 1 349 1 129 1 107 1 303 1 377 1 237 1 187 2 146 1 268 1 270 1 150 1 203 1 327 2 116 1 
104 1 359 1 105 1 129 1 323 2 107 1 377 1 237 1 187 2 268 1 270 1 150 1 203 1 327 2 114 1 368 1 116 1 370 1 
62 2 29 1 249 1 237 2 146 1 268 1 270 1 203 2 150 2 368 1 370 1 104 1 105 1 349 1 129 1 323 2 107 1 377 1 187 2 327 4 114 1 116 2 
62 2 29 1 105 1 249 1 349 1 323 2 129 1 107 1 377 1 237 2 187 2 146 1 268 1 270 1 150 2 203 2 327 4 114 1 368 1 116 2 370 1 
62 1 89 1 64 1 339 1 341 1 93 1 218 1 37 1 176 1 268 1 270 1 344 1 182 1 105 1 161 1 15 1 129 1 20 1 323 1 107 1 130 1 377 1 187 2 83 1 378 1 327 2 168 1 231 1 
62 1 89 1 64 1 341 1 93 1 218 1 37 1 176 1 252 1 268 1 270 1 344 1 182 1 105 1 161 1 15 1 164 1 129 1 20 1 323 1 107 1 130 1 377 1 187 2 378 1 327 2 231 1 59 1 
62 2 29 1 249 1 237 2 146 1 268 1 270 1 203 2 150 2 368 1 370 1 105 1 349 1 129 1 323 2 107 1 377 1 187 2 327 4 329 1 114 1 116 2 
62 2 29 1 64 1 249 1 339 1 341 1 93 1 365 1 218 1 237 2 37 1 146 1 176 1 268 1 270 1 150 2 203 2 344 1 368 1 370 1 182 1 105 1 349 1 15 1 323 2 129 1 107 1 130 1 377 1 187 2 83 1 111 1 327 4 114 1 168 1 231 1 116 2 
62 2 29 1 249 1 341 1 364 1 237 1 314 1 146 1 268 1 270 1 202 1 150 1 203 1 8 1 9 1 370 1 105 1 349 1 261 1 323 1 129 1 107 1 377 1 130 1 187 2 327 3 329 1 114 1 116 1 
234 1 62 9 29 3 362 1 140 1 249 3 311 2 363 2 146 3 5 1 270 2 316 2 150 6 46 1 255 1 368 3 208 1 370 3 349 3 129 2 323 10 107 2 377 2 187 4 165 1 326 1 327 19 330 1 114 3 283 1 
234 2 62 14 29 3 362 1 140 1 249 3 215 1 311 1 363 2 175 2 146 3 6 1 5 1 270 3 316 4 150 4 347 1 292 1 368 2 208 2 370 2 349 2 323 12 129 3 19 1 107 3 377 3 187 6 165 1 326 2 327 26 330 2 114 2 135 1 
234 1 62 20 29 5 362 1 140 1 249 4 215 1 311 1 363 4 3 1 175 1 146 4 6 1 5 1 270 3 316 4 150 8 44 1 73 1 46 1 347 1 292 1 255 1 207 1 368 4 208 3 370 5 349 4 19 1 129 3 323 21 107 3 377 3 187 6 165 1 326 2 327 41 330 3 114 4 331 1 58 1 26 1 135 1 
234 1 62 20 29 5 362 1 140 1 249 4 215 1 311 1 363 4 3 1 175 2 146 4 6 1 5 1 270 4 316 4 150 7 44 1 73 1 46 1 347 1 292 1 255 1 207 1 368 4 208 3 370 4 349 3 19 1 129 4 323 18 107 4 377 4 187 8 165 1 326 2 327 38 330 3 114 3 331 1 58 1 26 1 135 1 
234 1 62 27 29 8 362 1 140 1 249 7 215 1 311 1 363 4 3 1 175 1 146 7 6 1 5 1 270 2 316 4 150 14 44 1 73 1 347 1 292 1 255 2 207 1 368 7 208 2 370 8 373 2 349 7 19 1 129 2 323 25 107 2 377 2 187 4 165 1 326 1 327 52 330 4 114 7 331 1 26 1 135 1 
125 1 310 1 183 1 159 1 194 1 94 1 132 1 245 1 25 1 192 1 60 1 
61 1 308 1 
183 1 159 1 321 1 132 1 322 1 245 1 25 1 94 1 76 1 
246 1 352 1 
366 1 77 1 38 1 
310 1 338 1 341 1 285 1 250 1 94 1 34 1 364 1 143 1 174 1 314 1 286 1 97 1 98 1 202 1 271 1 103 2 374 1 125 1 183 1 160 1 159 1 261 1 130 1 132 1 245 1 84 1 25 1 134 1 192 1 60 1 
310 1 338 1 341 1 285 1 250 1 94 1 34 1 364 1 143 1 174 1 314 1 286 1 97 1 98 1 202 1 271 1 103 2 374 1 125 1 183 1 160 1 159 1 261 1 130 1 132 1 245 1 84 1 25 1 134 1 192 1 60 1 
310 1 338 1 341 1 285 1 250 1 94 1 34 1 364 1 143 1 174 1 314 1 286 1 97 1 98 1 202 1 271 1 103 2 374 1 125 1 183 1 160 1 159 1 261 1 130 1 132 1 245 1 84 1 25 1 134 1 192 1 60 1 
246 1 352 1 77 1 
246 1 352 1 77 1 
366 1 38 1 
366 1 77 1 38 1 
10 1 223 1 
214 1 341 2 285 1 94 1 2 1 364 2 98 1 289 1 202 2 47 1 10 1 223 1 103 1 274 1 225 1 374 1 183 1 159 1 261 2 130 2 378 1 132 1 245 1 25 1 134 1 308 1 61 1 
193 1 62 1 64 1 341 2 93 2 364 2 218 2 236 1 37 1 268 1 270 1 346 1 345 2 182 2 105 1 161 1 242 1 15 1 129 1 20 1 323 1 107 1 130 2 377 1 187 2 304 1 210 1 382 1 327 2 329 1 231 1 
182 2 49 1 64 1 172 1 93 2 218 2 354 1 251 2 287 1 266 1 111 1 112 1 22 1 113 1 155 1 231 1 213 1 224 1 295 1 
182 1 49 1 64 1 172 1 93 1 218 1 354 1 251 2 287 1 266 1 112 1 155 1 231 1 222 1 213 1 224 1 295 1 
182 1 89 1 64 1 262 1 15 1 93 1 128 1 218 1 37 1 42 1 112 1 113 1 231 1 181 1 
182 1 49 1 64 1 172 1 93 1 218 1 354 1 251 2 287 1 266 1 112 1 22 1 113 1 155 1 231 1 213 1 224 1 295 1 
82 1 
318 1 
338 2 340 1 70 1 71 1 269 1 98 1 296 1 78 1 374 1 376 1 108 1 110 1 167 1 190 1 232 1 86 1 138 1 
64 4 171 6 338 8 249 2 340 9 67 2 68 2 217 2 70 4 218 3 71 3 344 3 290 3 220 6 182 3 296 6 15 3 350 2 186 2 265 2 190 4 231 3 86 12 191 2 27 2 89 1 29 2 312 2 93 3 37 10 146 2 197 1 269 2 98 5 151 2 48 1 273 1 371 1 370 2 374 5 52 1 376 8 53 1 280 2 108 4 110 5 167 4 111 1 380 2 381 1 114 2 56 1 169 2 247 1 
29 2 171 5 338 5 249 2 215 1 340 8 67 2 363 1 120 1 70 2 146 2 6 1 71 1 269 2 98 1 347 1 292 1 220 5 208 1 370 2 296 3 374 1 350 1 376 5 19 1 108 2 110 1 243 1 167 2 190 2 330 1 114 2 247 1 86 6 27 1 
361 1 29 2 340 2 67 2 341 1 34 1 364 1 70 1 3 1 314 1 97 1 98 1 271 1 202 1 44 1 370 1 374 1 160 1 261 1 376 2 130 1 108 1 167 1 190 1 84 1 331 1 133 1 27 1 
338 1 340 1 376 1 70 1 108 1 167 1 269 1 381 1 190 1 56 1 
296 5 29 2 249 2 171 5 338 5 340 5 67 2 376 5 265 1 146 2 114 2 220 5 86 10 370 2 27 1 
110 1 71 1 269 1 374 1 98 1 338 1 
89 2 64 1 340 2 93 4 70 2 218 4 37 1 71 2 98 3 42 1 178 1 371 2 182 4 372 1 374 3 227 1 262 1 15 1 350 2 376 2 54 1 53 1 108 2 110 4 167 2 211 1 190 1 231 1 247 2 
89 1 64 1 339 1 341 3 93 1 364 2 218 1 37 1 314 2 176 1 268 1 270 1 202 2 344 1 182 1 105 1 261 2 15 1 323 1 20 1 129 1 107 1 377 1 130 3 187 2 83 1 378 1 327 1 84 1 168 1 231 1 336 1 
296 2 171 2 338 4 340 1 350 1 376 2 70 1 108 1 167 1 269 2 190 1 220 2 26 1 86 4 247 1 
159 1 245 1 196 1 
159 1 245 1 196 1 
297 1 159 1 245 1 10 1 238 1 
159 1 245 1 196 1 
28 1 159 1 245 1 
28 1 159 1 245 1 
28 1 159 1 245 1 
159 1 245 1 
183 1 94 1 
62 4 29 1 349 1 323 4 129 2 107 2 3 1 377 2 187 4 175 1 270 2 327 8 150 3 73 1 44 1 331 1 26 1 207 1 368 2 370 1 
318 1 
62 2 29 1 249 1 349 1 323 2 129 1 107 1 377 1 187 2 146 1 270 1 150 2 327 4 114 1 230 1 368 1 370 1 
62 3 29 1 249 1 349 1 363 2 323 4 146 1 327 7 150 2 114 1 330 1 255 1 368 1 208 1 370 1 
62 11 29 3 249 2 363 2 69 1 3 1 146 2 175 2 270 2 150 9 44 2 73 1 255 1 100 1 207 1 368 5 370 3 373 1 349 4 323 12 129 2 107 2 377 2 187 4 327 23 330 2 114 2 331 2 26 1 
327 1 363 1 323 1 
62 1 327 1 330 1 
62 3 29 1 249 1 349 1 129 1 323 3 107 1 377 1 187 2 265 1 146 1 270 1 327 6 150 3 230 1 114 1 368 2 370 1 
62 6 29 2 140 1 249 2 215 1 363 1 146 2 6 1 270 1 150 2 347 1 292 1 208 1 368 1 370 2 349 1 323 6 129 1 19 1 107 1 377 1 187 2 327 12 330 1 114 2 
62 3 29 1 349 1 323 3 3 1 327 6 150 2 44 1 331 1 368 1 370 1 
62 1 349 1 323 2 129 1 69 1 107 1 377 1 175 1 187 2 270 1 150 2 327 3 44 1 73 1 331 1 207 1 368 1 
62 5 361 1 29 2 140 1 349 2 129 1 323 5 107 1 377 1 3 1 187 2 270 1 150 5 327 10 44 2 331 2 368 3 370 2 
62 2 29 1 140 1 349 1 129 1 107 1 377 1 187 2 146 1 270 1 327 2 150 1 
62 2 29 1 140 1 249 1 349 1 323 2 129 1 107 1 377 1 187 2 146 1 270 1 150 2 327 4 114 1 368 1 370 1 
62 1 140 1 349 1 323 2 129 3 69 1 107 3 377 3 175 1 187 6 270 3 327 3 150 2 44 1 46 1 331 1 368 1 
62 16 29 5 140 1 249 3 363 4 69 1 3 2 175 2 146 3 270 5 150 12 44 3 73 1 154 1 46 1 255 1 207 1 208 1 368 7 370 5 14 1 349 5 323 18 129 5 107 5 377 5 187 10 379 1 327 34 230 1 330 3 114 3 331 3 26 1 
62 4 29 1 140 1 363 1 3 1 270 1 150 2 73 1 44 1 347 1 207 1 208 1 368 2 370 1 323 4 129 1 107 1 377 1 187 2 327 8 330 1 331 1 26 1 
62 6 29 2 140 1 249 1 363 2 3 1 146 1 270 2 150 3 44 1 73 1 347 1 255 1 207 1 368 2 208 1 370 1 349 1 323 5 129 2 107 2 377 2 187 4 327 11 230 1 330 1 331 1 26 1 
62 9 29 3 140 1 249 2 215 1 363 1 3 1 146 2 175 1 6 1 270 3 150 4 44 1 73 1 347 1 292 1 207 1 208 1 368 3 370 3 349 1 323 10 129 3 19 1 107 3 377 3 187 6 327 19 230 1 330 1 114 2 331 1 26 1 
62 10 29 3 140 1 249 2 215 1 363 1 3 1 175 1 146 2 6 1 270 3 150 5 44 1 73 1 347 1 292 1 207 1 208 1 368 3 370 2 349 2 323 7 129 3 19 1 107 3 377 3 187 6 327 17 230 1 330 1 114 1 331 1 26 1 
62 4 29 1 140 1 363 1 3 1 270 1 150 2 73 1 44 1 347 1 207 1 208 1 368 2 370 1 323 4 129 1 107 1 377 1 187 2 327 8 330 1 331 1 26 1 
62 6 29 2 140 1 249 2 215 1 363 1 146 2 6 1 270 1 150 2 347 1 292 1 208 1 368 1 370 2 349 1 323 6 129 1 19 1 107 1 377 1 187 2 327 12 330 1 114 2 
62 10 29 3 140 1 249 2 215 1 363 1 3 1 146 2 175 2 6 1 270 4 150 5 44 1 73 1 347 1 292 1 207 1 208 1 368 3 370 2 349 2 323 8 129 4 19 1 107 4 377 4 187 8 327 18 230 1 330 1 114 1 331 1 26 1 
62 9 29 3 140 1 249 3 215 1 363 1 146 3 175 2 6 1 270 4 150 6 347 1 46 1 292 1 208 1 368 3 370 2 349 3 323 7 129 4 19 1 107 4 377 4 187 8 327 16 330 1 114 2 
62 3 29 1 349 3 323 4 3 1 327 7 150 6 73 1 44 3 331 3 207 2 368 3 370 1 
62 10 29 3 140 1 249 2 215 1 363 1 3 1 146 2 175 2 6 1 270 4 150 4 44 1 73 1 347 1 46 1 292 1 207 1 208 1 368 3 370 2 349 1 323 8 129 4 19 1 107 4 377 4 187 8 327 18 330 1 114 1 331 1 26 1 
139 1 378 1 305 1 341 1 179 1 364 1 130 1 
355 1 170 1 23 1 85 1 147 1 
182 1 89 1 318 1 93 1 218 1 
182 1 89 1 64 1 261 1 15 1 341 2 93 1 364 1 130 2 218 1 37 1 176 1 378 1 202 1 344 1 168 1 231 1 124 1 
64 1 341 2 93 1 217 1 364 2 218 1 37 3 176 1 267 1 97 1 202 1 344 2 124 1 371 1 182 1 261 2 15 2 130 2 378 1 380 1 168 1 231 1 307 1 
64 1 341 2 93 2 217 1 364 2 218 2 37 3 176 1 267 1 41 1 97 1 202 1 344 2 124 1 371 1 182 2 261 2 15 2 130 2 378 1 380 1 231 1 59 1 307 1 
89 1 64 1 338 1 68 1 93 3 217 1 218 3 37 4 41 1 269 1 98 2 344 1 290 1 153 1 371 1 182 3 374 2 277 1 15 1 186 1 110 1 380 1 231 1 
182 3 89 1 374 2 64 1 338 1 15 1 68 1 93 3 217 1 218 3 186 1 37 4 110 1 41 1 269 1 98 2 380 1 344 1 290 1 231 1 169 1 371 1 
182 1 64 1 209 1 231 1 93 1 218 1 
193 1 182 6 278 1 89 2 209 1 126 1 64 3 15 2 93 7 218 7 37 3 287 1 197 1 148 1 111 1 344 1 317 1 345 1 291 1 231 2 294 1 
62 3 64 1 339 1 341 2 218 1 3 1 176 1 344 1 73 1 124 1 182 1 261 1 15 1 129 2 130 2 187 4 83 1 231 1 26 1 29 1 93 1 364 1 365 1 237 1 37 1 268 2 270 2 202 1 150 2 203 1 44 1 207 1 368 2 370 1 105 2 323 3 107 2 377 2 210 1 378 2 111 1 327 6 329 1 168 1 331 1 116 1 117 1 
89 1 214 1 338 1 340 1 68 1 93 1 70 2 218 1 37 2 71 1 269 1 98 3 290 1 151 1 182 1 374 3 376 1 53 1 108 2 280 1 186 1 110 2 167 2 381 1 190 2 56 1 169 1 191 1 
182 2 209 1 64 2 68 1 15 1 93 2 218 2 37 2 197 1 111 1 344 1 231 1 48 1 
182 4 89 1 64 1 262 1 15 1 119 1 93 4 218 4 37 1 41 1 111 1 42 1 231 1 
182 2 64 2 184 1 15 1 93 2 218 2 37 1 148 1 201 1 344 1 231 1 294 1 101 1 371 1 
182 1 89 1 64 1 231 1 93 1 218 1 354 1 251 1 213 1 295 1 
193 1 182 2 64 1 111 1 382 1 15 1 231 1 93 2 218 2 37 1 287 1 
182 4 193 1 89 1 278 1 64 2 126 1 262 1 15 2 119 1 93 5 218 5 37 3 42 1 111 1 231 2 371 1 
182 4 193 1 89 1 64 2 126 1 262 1 15 2 119 1 93 5 218 5 37 3 42 1 111 1 231 2 257 1 371 1 
182 1 89 1 64 1 261 1 15 1 341 2 93 1 364 1 130 2 218 1 37 1 176 1 378 1 202 1 344 1 231 1 124 1 59 1 
182 1 64 2 15 1 93 1 218 1 37 1 197 1 148 1 344 1 291 1 231 1 294 1 371 1 
341 1 142 1 364 1 236 1 130 1 304 1 346 1 334 1 258 1 
348 1 18 1 142 1 
378 1 264 1 142 1 334 1 258 1 
214 1 374 2 338 1 348 1 18 1 264 2 142 1 1 1 144 1 186 1 267 1 21 1 378 1 269 1 97 1 98 2 334 2 307 1 258 2 
318 1 
200 1 356 1 16 1 185 1 51 1 228 1 145 1 
244 1 74 1 16 1 
200 1 121 2 356 3 16 3 185 1 51 1 228 1 221 1 229 1 36 1 145 1 313 1 
200 1 356 2 16 2 185 1 51 1 228 1 342 1 212 1 145 1 
260 1 16 1 228 1 229 1 145 1 251 1 354 1 200 1 356 1 272 1 155 1 
200 1 356 1 16 1 185 1 228 1 229 1 145 1 
200 1 356 1 16 1 185 2 51 1 229 1 145 1 
177 1 200 2 356 2 16 2 185 1 228 1 229 1 87 1 145 2 40 1 
31 1 16 3 185 1 51 1 301 1 228 2 229 1 145 1 200 1 253 1 356 3 272 1 212 2 
16 2 185 1 51 1 228 1 229 1 251 2 145 1 354 1 200 1 199 1 356 2 155 1 212 1 295 1 224 1 
16 4 185 1 51 1 342 1 228 2 229 1 145 2 198 1 200 2 253 1 356 4 272 1 212 2 
200 1 356 1 16 1 185 1 51 1 228 1 229 1 145 1 
16 4 185 2 51 2 228 3 36 1 145 1 313 1 200 1 253 1 121 1 356 4 272 1 367 1 212 2 
299 1 16 2 17 1 185 1 51 1 228 1 229 1 145 1 200 1 356 2 205 1 212 1 
200 1 121 2 356 3 195 1 16 3 185 1 51 1 228 1 229 1 36 2 145 1 313 1 
360 1 79 1 228 2 80 2 
200 1 356 1 328 1 16 1 229 1 145 1 
200 1 356 2 31 1 16 2 185 1 51 1 228 1 229 1 212 1 145 1 
35 1 
200 1 356 1 16 1 185 1 51 1 228 1 229 1 145 1 
31 1 16 3 51 1 185 1 228 1 229 1 145 1 200 1 121 1 356 3 212 1 
253 1 272 1 367 1 228 1 
185 1 228 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (192,236,338,345) (192,236,338,345) 346 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 3 27 1 163 1 353 2 338 2 236 2 341 1 132 1 218 1 192 1 122 1 345 3 265 1 
211 2 172 9 27 1 1 1 83 1 85 1 61 2 128 1 338 2 236 2 341 1 132 4 218 1 283 1 192 6 371 1 345 9 265 3 36 2 14 1 159 1 116 2 163 1 353 5 46 1 357 1 122 2 51 1 
211 2 172 9 27 1 1 1 83 1 85 1 61 2 128 1 338 2 236 2 341 1 132 4 218 1 283 1 192 6 371 1 345 9 265 3 36 2 14 1 159 1 116 2 163 1 353 5 46 1 357 1 122 2 51 1 
211 2 172 10 27 1 1 1 83 1 85 1 61 2 128 1 338 2 236 2 341 1 132 5 218 1 283 1 192 7 371 1 345 10 265 4 36 2 14 1 159 1 116 2 163 1 353 6 46 1 357 1 122 2 51 1 
211 2 172 7 27 1 1 1 83 1 85 1 61 1 128 1 338 2 236 2 341 1 132 3 218 1 192 4 371 1 345 7 265 2 36 2 14 1 159 1 116 2 163 1 353 4 46 1 357 1 122 2 51 1 
211 1 172 4 27 1 116 1 163 1 85 1 61 2 353 3 338 1 236 1 132 2 218 1 283 1 192 3 371 1 345 4 265 1 36 1 
14 1 172 2 27 1 115 1 116 1 83 1 163 1 260 1 353 1 338 1 236 1 218 1 122 1 345 2 195 1 36 1 
211 1 172 9 27 1 85 1 61 2 338 2 236 2 341 1 309 1 132 4 218 1 283 1 192 7 371 1 345 9 265 3 36 1 116 1 163 1 353 5 46 1 122 1 147 1 51 1 
211 1 172 9 27 1 85 1 61 2 338 2 236 2 341 1 309 1 132 4 218 1 283 1 192 7 371 1 345 9 265 3 36 1 116 1 163 1 353 5 46 1 122 1 147 1 51 1 
364 1 80 1 98 1 281 1 335 1 327 1 87 1 227 1 282 1 344 1 145 1 76 1 237 1 53 1 
173 1 
364 2 234 1 173 1 152 1 69 1 12 1 335 1 53 2 
112 1 241 1 364 5 234 1 173 1 69 1 335 2 109 1 133 1 356 1 146 1 9 2 153 2 35 1 8 1 154 1 12 2 53 5 66 2 
173 1 69 1 229 1 
173 1 42 2 254 1 
55 1 227 2 344 2 145 2 76 2 237 2 281 1 327 2 
55 1 210 1 257 2 84 1 281 1 235 1 262 1 339 1 129 2 311 1 31 1 344 2 111 1 237 2 136 1 157 1 92 1 16 1 17 1 288 1 139 1 160 1 71 2 40 1 162 1 72 2 327 2 246 1 47 2 295 1 227 3 145 2 205 1 328 1 76 3 208 1 362 1 
87 1 80 1 227 1 282 1 344 1 145 1 76 1 237 1 281 1 327 1 
316 1 364 1 173 1 69 1 120 1 164 1 327 1 87 1 74 1 217 1 294 1 227 1 76 1 53 1 
316 1 364 2 173 1 69 1 120 1 164 1 327 1 87 1 294 1 227 1 344 1 145 1 76 1 237 1 53 2 
277 1 364 1 12 1 335 1 53 1 
364 2 234 1 75 1 173 1 69 1 12 1 335 1 53 2 
364 1 12 1 53 1 
157 1 92 1 68 1 257 1 278 1 71 1 162 1 84 1 369 1 235 1 262 1 327 1 47 1 311 1 227 2 145 1 111 1 76 2 237 1 136 1 
55 2 125 1 327 2 215 1 227 2 344 1 145 1 76 2 237 1 
67 1 278 1 274 1 
157 1 92 1 55 1 257 1 71 1 162 1 351 1 84 1 235 1 262 1 47 1 227 1 311 1 76 1 111 1 136 1 
55 1 229 1 
55 1 227 3 344 1 145 3 76 3 369 1 237 3 327 3 
87 1 227 1 282 1 145 1 76 1 237 1 327 1 
215 1 87 1 227 1 344 1 125 1 145 1 76 1 237 1 327 1 
55 1 210 1 257 1 150 1 364 1 84 1 303 1 369 1 281 1 235 1 262 1 215 1 129 1 87 1 311 1 31 1 344 2 111 1 237 3 136 1 157 1 92 1 316 1 68 1 17 1 288 1 139 1 160 1 162 1 40 1 71 1 72 2 120 1 164 1 327 3 47 1 294 1 227 4 145 3 205 1 328 1 76 4 208 1 53 1 
55 1 217 1 227 2 145 1 110 1 76 2 237 1 369 1 327 2 
316 1 68 1 56 1 364 1 150 1 173 1 369 2 120 1 164 1 327 3 215 1 87 1 294 1 227 3 344 1 145 3 76 3 237 3 53 1 
67 1 278 1 369 1 327 2 215 1 227 2 344 1 145 2 76 2 237 2 
92 1 157 1 55 1 257 1 71 1 162 1 84 1 235 1 262 1 47 1 227 1 311 1 76 1 111 1 136 1 
92 1 157 1 55 1 257 1 71 1 349 1 84 1 235 1 262 1 62 1 47 1 227 1 311 1 76 1 136 1 
256 1 210 1 102 1 278 2 301 1 127 1 189 1 129 4 33 1 314 1 67 2 16 2 17 2 138 1 288 1 139 1 160 1 352 1 72 2 119 1 73 1 205 1 328 1 274 2 
87 1 227 1 331 1 145 1 76 1 237 1 164 1 327 1 
215 1 55 1 68 1 242 1 217 1 227 5 344 1 145 4 110 1 76 5 237 4 369 2 224 1 327 5 
87 1 227 2 331 1 282 1 145 2 76 2 237 2 327 2 
285 1 82 1 3 1 
285 2 313 1 144 1 82 2 126 1 269 1 
285 1 82 1 
285 1 82 1 
313 1 269 1 
313 1 269 1 
313 1 269 1 
285 1 289 1 82 1 
285 1 289 1 82 1 
285 1 289 1 82 1 
285 1 82 1 135 1 
285 1 82 1 135 1 
285 1 82 1 135 1 
285 2 0 1 364 2 279 2 173 1 373 1 82 2 367 2 140 1 304 1 375 3 326 1 99 2 144 1 134 1 88 2 89 1 63 2 53 2 
55 1 364 1 279 1 82 1 3 1 304 1 60 1 131 1 88 1 237 2 63 1 285 1 114 1 18 1 43 1 375 1 327 2 99 1 227 2 145 2 169 1 76 2 123 1 53 1 
211 1 116 2 315 2 195 1 176 1 
211 1 116 1 36 1 
116 1 36 1 195 1 
211 2 116 3 284 1 315 1 195 1 176 1 
211 1 116 2 315 1 50 1 195 1 176 1 
256 1 364 5 234 1 173 2 106 1 335 4 127 1 305 1 60 1 189 1 264 2 178 1 30 1 109 2 133 3 32 1 153 1 9 1 12 1 66 1 158 1 18 1 69 1 201 2 352 1 42 3 43 1 142 1 271 2 356 1 53 5 254 1 
256 3 277 5 364 9 234 1 173 5 335 7 127 3 305 2 306 1 189 3 6 1 178 2 109 6 133 8 32 3 9 2 153 2 154 1 12 6 90 1 66 2 91 1 15 5 69 1 201 6 352 3 141 1 42 9 43 4 202 1 142 1 271 6 356 1 53 9 254 3 
256 1 80 1 364 3 173 3 281 1 335 2 127 1 305 1 189 1 178 1 264 1 87 1 30 1 109 2 133 3 282 1 344 1 32 1 153 1 9 1 154 1 237 1 66 1 158 1 69 1 352 1 201 2 98 1 42 4 43 1 327 1 271 2 227 1 145 1 76 1 53 3 254 2 
256 1 364 2 173 2 335 1 127 1 305 1 189 1 178 1 264 1 30 1 109 2 133 3 32 1 153 1 9 1 154 1 66 1 158 1 201 2 352 1 42 4 43 1 202 1 271 2 53 2 254 2 
64 1 
157 1 26 1 229 1 
157 1 188 1 
157 1 311 1 
157 3 92 1 26 2 311 1 290 1 207 1 
157 1 92 1 311 1 
157 1 350 1 
256 1 17 3 138 2 16 4 70 1 127 1 73 3 291 1 248 1 129 7 308 1 226 2 193 1 7 1 252 1 49 1 231 1 23 1 
232 1 210 1 256 4 368 1 127 4 189 3 340 4 370 1 129 31 308 1 32 3 7 1 193 2 181 3 17 15 16 16 138 5 197 1 70 2 139 1 160 1 352 3 72 2 291 1 223 1 73 10 248 2 143 1 226 3 205 1 49 5 148 1 231 1 23 2 
256 1 210 2 368 1 127 1 190 1 129 9 308 1 193 1 16 5 17 4 138 3 139 2 160 2 70 1 72 4 325 1 73 4 291 1 248 1 226 2 205 2 49 1 23 1 231 1 
256 1 17 3 138 2 16 4 70 1 127 1 73 3 291 1 248 1 129 7 308 1 226 2 193 1 7 1 49 1 231 1 23 1 
256 1 17 3 138 2 16 4 70 1 127 1 73 3 291 1 248 1 129 7 308 1 226 2 193 1 7 1 49 1 231 1 23 1 
157 1 171 2 257 1 172 1 151 1 97 1 71 1 2 1 84 1 235 1 262 1 376 1 225 2 338 1 236 1 250 1 47 1 311 1 343 1 179 1 122 2 345 1 78 2 
171 1 211 1 257 1 172 1 332 1 84 1 262 1 338 1 86 1 236 1 284 1 345 1 36 1 195 1 116 2 71 1 117 1 163 1 222 1 244 1 225 1 270 1 47 1 185 1 122 1 78 1 
171 1 211 1 257 1 275 1 172 2 27 1 332 1 84 1 262 1 338 1 86 1 236 1 218 1 192 1 284 1 345 2 36 1 195 1 116 2 71 1 117 1 163 1 222 1 353 1 225 1 270 1 47 1 185 1 122 1 78 1 
171 1 211 1 257 1 172 3 27 1 104 1 332 1 84 1 262 1 338 1 86 1 236 1 218 1 192 2 284 1 345 3 36 1 195 1 116 2 71 1 222 1 244 1 353 1 225 1 270 1 250 1 47 1 185 1 122 1 78 1 
171 1 257 1 211 1 172 2 27 1 104 1 332 1 84 1 262 1 218 1 192 2 284 1 345 2 195 1 36 1 116 2 71 1 244 1 353 1 225 1 270 1 47 1 185 1 122 1 78 1 
329 1 
54 1 234 3 151 1 4 1 5 1 235 2 337 1 109 2 9 1 153 1 12 6 13 4 238 2 66 1 196 2 157 1 69 1 71 2 120 1 164 1 74 1 294 1 203 1 356 1 360 1 20 2 76 1 253 1 254 2 257 2 364 5 173 2 259 1 84 1 305 1 262 1 216 2 87 1 217 1 311 1 133 2 219 1 266 1 316 1 95 2 324 1 97 1 42 2 183 2 327 1 47 2 227 1 379 2 380 1 53 5 
364 3 234 1 259 1 5 1 87 1 217 1 152 1 12 2 13 2 316 1 324 1 120 1 164 1 327 1 294 1 74 1 227 1 360 1 380 1 76 1 20 1 53 3 
364 3 234 1 173 1 259 1 5 1 216 1 87 1 217 1 152 1 12 1 13 3 316 1 324 1 69 1 120 1 164 1 327 1 294 1 74 1 227 1 360 1 380 1 76 1 53 3 
364 3 234 1 173 1 259 1 5 1 216 1 87 1 217 1 152 1 12 2 13 3 316 1 324 1 69 1 120 1 164 1 327 1 294 1 74 1 227 1 360 1 380 1 379 1 76 1 20 1 53 3 
234 3 5 1 109 1 152 1 9 1 153 1 12 7 13 6 66 1 238 2 196 2 69 5 164 1 120 1 294 1 74 1 251 1 356 1 297 1 360 1 20 4 76 1 253 1 254 2 364 5 173 5 259 1 216 4 177 1 87 1 217 1 133 1 266 1 316 1 317 1 323 1 324 1 95 2 183 2 327 1 227 1 379 4 380 1 53 5 
54 1 234 2 5 1 109 1 9 1 153 1 12 4 13 4 66 1 238 2 196 2 69 1 164 1 120 1 294 1 74 1 356 1 360 1 76 1 20 2 253 1 254 2 364 4 173 2 259 1 216 2 87 1 217 1 133 1 266 1 316 1 324 1 95 2 42 2 183 2 327 1 227 1 380 1 379 2 53 4 
364 4 234 2 173 1 259 1 5 1 216 2 177 1 87 1 109 1 217 1 133 1 153 1 9 1 12 4 266 1 13 4 238 2 66 1 196 2 316 1 317 1 69 1 95 2 324 1 183 2 120 1 164 1 327 1 294 1 74 1 227 1 356 1 297 1 379 2 360 1 380 1 20 2 76 1 253 1 53 4 254 2 
364 4 234 2 173 1 259 1 5 1 216 2 177 1 87 1 109 1 217 1 133 1 153 1 9 1 12 4 266 1 13 4 238 2 66 1 196 2 316 1 317 1 69 1 95 2 324 1 183 2 120 1 164 1 327 1 294 1 74 1 227 1 356 1 297 1 379 2 360 1 380 1 20 2 76 1 253 1 53 4 254 2 
364 4 234 2 173 1 259 1 5 1 216 2 87 1 191 1 109 1 217 1 342 1 133 1 153 1 9 1 12 4 266 1 13 4 238 2 66 1 196 2 156 1 316 1 69 1 324 1 374 2 42 2 120 1 164 1 327 1 293 2 294 1 74 1 227 1 356 1 297 1 379 2 360 1 380 1 20 2 76 1 53 4 
364 4 234 2 173 1 259 1 5 1 216 3 177 1 87 1 109 1 217 1 133 1 153 1 9 1 12 5 266 1 13 5 238 2 66 1 196 2 316 1 317 1 323 1 69 1 95 2 324 1 183 2 120 1 164 1 327 1 294 1 74 1 356 1 227 1 297 1 360 1 380 1 379 3 76 1 20 3 253 1 53 4 254 2 
364 4 234 2 173 1 259 1 5 1 216 3 177 1 87 1 109 1 217 1 133 1 153 1 9 1 12 5 266 1 13 5 238 2 66 1 196 2 316 1 317 1 323 1 69 1 95 2 324 1 183 2 120 1 164 1 327 1 294 1 74 1 356 1 227 1 297 1 360 1 380 1 379 3 76 1 20 3 253 1 53 4 254 2 
54 1 234 2 5 1 109 1 9 1 153 1 12 4 13 4 66 1 238 2 156 1 196 2 69 1 164 1 120 1 293 2 294 1 74 1 356 1 360 1 76 1 20 2 364 4 173 1 259 1 216 2 87 1 217 1 133 1 266 1 316 1 324 1 42 2 374 2 327 1 227 1 380 1 379 2 53 4 
210 2 276 1 275 1 257 8 102 1 151 1 84 2 369 1 235 2 262 2 339 1 129 2 311 2 237 1 240 1 157 3 319 1 16 1 17 1 288 2 139 2 160 2 71 8 97 1 244 1 72 4 327 1 184 1 47 7 227 1 295 2 358 1 145 1 377 1 205 2 328 2 121 1 76 1 208 1 
210 1 256 1 278 1 57 1 127 1 215 1 189 1 129 3 344 1 32 1 237 1 67 1 138 1 16 1 17 2 288 1 139 1 160 1 352 1 72 2 73 1 327 1 227 1 145 1 205 1 328 1 76 1 274 1 79 1 
210 1 256 1 55 2 278 1 102 1 127 1 129 6 308 1 193 1 67 1 138 2 16 3 17 3 288 1 70 1 139 1 160 1 72 2 291 1 73 2 226 1 229 1 205 1 328 1 231 1 274 1 
55 1 149 1 210 2 256 2 278 11 174 1 127 1 339 1 189 1 340 3 129 14 32 2 67 4 181 3 138 1 17 6 16 8 197 1 288 1 139 2 160 2 352 2 72 4 73 2 205 2 328 2 49 1 148 1 52 1 274 11 208 1 77 1 79 1 
55 1 210 1 257 1 84 1 369 1 336 1 235 1 262 1 339 1 129 2 311 1 111 1 237 1 136 1 157 1 92 1 67 1 68 1 17 1 16 1 288 1 160 1 139 1 162 1 71 1 351 1 72 2 327 1 47 1 227 2 145 1 205 1 328 1 359 1 76 2 48 1 208 1 79 1 
101 1 55 2 278 7 235 1 339 1 189 2 193 1 111 2 237 1 157 2 68 1 67 7 17 10 16 10 288 3 70 1 160 3 71 3 162 2 199 2 352 2 244 1 72 6 291 1 73 8 205 3 206 1 76 3 208 1 79 1 210 3 256 3 257 3 84 2 369 1 127 3 262 2 129 20 308 1 310 2 130 2 311 2 32 2 267 2 136 2 92 2 138 4 139 3 40 2 327 1 47 3 226 1 227 3 145 1 328 3 378 1 49 4 231 1 274 7 
210 1 256 1 67 1 278 1 102 1 16 2 288 1 301 1 160 1 139 1 352 1 72 2 73 1 129 2 328 1 205 1 49 1 274 1 
210 1 67 1 278 1 102 1 138 1 17 2 288 1 160 1 139 1 72 2 73 1 119 1 127 1 189 1 129 2 328 1 205 1 274 1 
210 1 256 1 67 2 278 2 102 1 138 1 17 2 16 2 288 1 160 1 139 1 352 1 72 2 127 1 73 2 189 1 129 4 32 1 328 1 205 1 49 1 274 2 
210 1 256 1 67 1 278 1 16 2 288 1 301 1 160 1 139 1 352 1 72 2 73 1 129 2 377 1 328 1 205 1 49 1 274 1 
210 1 67 1 278 1 138 1 17 2 288 1 160 1 139 1 72 2 73 1 119 1 127 1 189 1 129 2 377 1 328 1 205 1 274 1 
210 1 256 1 67 2 278 2 138 1 17 2 16 2 288 1 160 1 139 1 352 1 72 2 127 1 73 2 189 1 129 4 32 1 377 1 328 1 205 1 49 1 274 2 
210 1 256 1 67 2 278 2 138 1 17 2 16 2 288 1 160 1 139 1 352 1 72 2 127 1 73 2 189 1 129 4 32 1 328 1 205 1 49 1 274 2 
55 1 210 1 257 1 84 1 235 1 262 1 339 1 129 2 311 1 111 1 136 1 92 1 157 1 16 1 17 1 288 1 160 1 139 1 162 1 40 1 71 1 72 2 47 1 227 1 328 1 205 1 76 1 208 1 
55 1 210 1 257 1 213 1 84 1 235 1 262 1 339 1 129 2 62 1 311 1 136 1 92 1 157 1 16 1 17 1 288 1 160 1 139 1 349 1 71 1 72 2 47 1 227 1 328 1 205 1 76 1 208 1 
210 1 256 1 67 2 278 2 138 1 17 2 16 2 288 1 160 1 139 1 352 1 72 2 127 1 73 2 189 1 129 4 32 1 328 1 205 1 49 1 274 2 79 1 
256 1 210 1 257 1 275 1 278 2 84 1 127 1 262 1 189 1 129 4 311 1 32 1 111 1 136 1 92 1 157 1 67 2 138 1 17 2 16 2 288 1 160 1 139 1 162 1 40 1 71 1 199 1 352 1 72 2 73 2 47 1 227 1 328 1 205 1 49 1 76 1 274 2 
210 1 256 1 278 1 127 1 215 1 189 1 129 3 344 1 32 1 237 1 67 1 17 1 16 2 288 1 139 1 160 1 352 1 72 2 73 1 327 1 227 1 145 1 296 1 205 1 328 1 49 1 76 1 274 1 79 1 
25 1 210 2 256 3 103 1 366 1 214 1 127 3 189 3 340 2 129 19 32 3 181 1 138 3 17 10 16 9 197 1 139 2 160 2 352 3 72 4 325 1 73 6 165 1 228 1 167 1 205 2 298 2 49 3 148 1 381 2 
25 2 210 3 256 3 366 1 334 1 368 2 214 1 127 2 263 1 189 2 129 26 340 2 32 3 181 2 322 1 321 1 138 2 17 12 16 14 139 3 160 3 352 3 72 6 325 1 73 4 245 1 247 1 228 1 167 2 205 3 298 1 49 2 148 2 381 4 
25 1 210 3 256 5 366 1 334 1 368 1 214 1 127 5 263 1 189 4 340 4 129 41 308 1 32 4 193 1 347 1 321 1 322 1 181 3 138 4 17 21 16 20 197 1 70 1 139 3 160 3 352 4 72 6 325 1 291 1 73 8 245 1 247 1 165 1 226 1 228 1 167 2 205 3 298 1 49 4 148 3 231 1 381 4 
25 1 210 4 256 5 366 1 334 1 368 2 214 1 127 4 263 1 189 3 340 4 129 38 308 1 32 4 193 1 347 1 321 1 322 1 181 3 138 4 17 18 16 20 197 1 70 1 139 4 160 4 352 4 72 8 325 1 291 1 73 7 245 1 247 1 165 1 226 1 228 1 167 2 205 4 298 1 49 3 148 3 231 1 381 4 
149 2 25 1 210 2 256 8 366 1 334 1 368 1 214 1 127 8 263 1 189 7 340 4 129 52 308 1 32 7 193 1 321 1 322 1 181 4 138 7 17 25 16 27 197 2 70 1 139 2 160 2 352 7 72 4 325 1 291 1 73 14 245 1 247 1 226 1 228 1 167 1 205 2 298 1 49 7 148 2 231 1 381 4 
285 1 99 1 0 1 279 1 144 1 373 1 198 1 82 1 88 1 63 1 
3 1 123 1 
330 1 285 1 99 1 279 1 82 1 88 1 63 1 137 1 292 1 
285 1 0 1 364 1 279 1 173 1 373 1 82 1 367 1 140 1 304 1 375 2 326 1 99 1 144 1 134 1 88 1 63 1 53 1 
285 1 0 1 364 1 279 1 173 1 373 1 82 1 367 1 140 1 304 1 375 2 326 1 99 1 144 1 134 1 88 1 63 1 53 1 
285 1 0 1 364 1 279 1 173 1 373 1 82 1 367 1 140 1 304 1 375 2 326 1 99 1 144 1 134 1 88 1 63 1 53 1 
107 1 289 1 126 1 
107 1 289 1 126 1 
108 1 135 1 
108 1 126 1 135 1 
131 1 169 1 
55 1 364 1 279 1 367 1 82 1 3 1 335 1 60 1 131 1 88 1 63 1 237 2 285 1 286 1 114 1 18 1 43 1 375 1 326 1 327 2 99 1 227 2 145 2 169 1 76 2 123 1 53 1 
107 1 289 1 
108 1 126 1 135 1 
210 1 257 2 233 1 84 1 262 1 339 1 129 2 311 1 312 1 157 1 240 1 372 1 320 1 16 1 17 1 288 1 160 1 139 1 71 2 72 2 327 2 184 1 47 2 227 2 295 2 205 1 328 1 76 2 300 1 208 1 79 1 
157 1 239 1 257 1 151 1 71 1 97 1 2 1 84 1 58 1 235 1 262 1 225 1 47 1 311 1 
239 1 211 1 257 1 318 1 116 2 332 1 71 1 280 1 84 1 222 1 244 1 262 1 225 1 47 1 284 1 185 1 36 1 195 1 
239 1 211 1 257 2 275 1 318 1 116 2 332 1 71 2 280 1 84 1 222 1 244 1 262 1 225 1 47 2 284 1 185 1 36 1 195 1 
363 1 211 1 257 1 318 1 116 2 332 1 71 1 84 1 222 1 244 1 262 1 225 1 47 1 284 1 185 1 36 1 195 1 
212 1 
112 1 173 1 69 1 109 1 356 1 133 1 146 1 9 1 153 1 66 1 
256 2 258 1 39 2 173 5 352 2 201 5 42 10 127 2 189 2 271 5 109 5 133 5 32 2 267 1 254 5 
364 1 234 1 173 1 69 1 12 1 53 1 
186 1 257 4 364 3 234 2 151 1 84 1 4 2 235 2 305 2 262 1 175 2 337 1 109 2 311 1 133 2 219 1 153 2 9 2 154 1 12 4 66 2 157 1 71 4 97 1 44 1 354 1 47 4 356 1 53 3 
112 1 109 1 133 1 173 1 69 1 146 1 229 1 
364 1 234 1 173 2 109 1 133 1 153 1 9 1 12 1 66 1 95 1 69 1 42 1 183 1 356 1 253 1 53 1 254 1 
275 1 234 3 333 2 4 1 188 3 235 1 189 2 109 8 9 4 153 4 12 5 66 4 157 10 112 1 69 2 71 3 350 2 200 2 201 6 352 2 290 1 249 1 354 1 356 4 204 1 22 2 254 6 26 2 256 2 257 3 364 5 365 2 173 8 258 2 84 4 261 2 305 2 127 2 262 3 175 1 133 9 311 3 32 2 34 1 267 2 92 3 316 2 39 2 42 12 47 3 271 6 146 1 273 2 53 5 
256 2 364 1 234 1 258 1 173 5 4 1 28 1 305 1 127 2 263 1 189 2 340 1 109 5 133 8 32 2 153 2 9 2 12 1 66 2 322 1 181 1 321 1 39 2 96 1 69 2 201 5 352 2 42 6 245 1 247 1 271 5 356 2 148 1 53 1 254 3 
256 2 364 1 80 1 258 1 281 1 127 1 307 1 87 1 109 2 133 2 282 1 344 1 193 1 153 1 9 1 237 1 66 1 317 1 39 2 70 1 98 1 327 1 227 1 356 1 145 1 76 1 231 1 53 1 
55 1 210 1 257 1 84 1 281 1 235 1 262 1 129 1 31 1 311 1 344 2 111 1 237 2 136 1 92 1 157 1 17 1 288 1 139 1 160 1 71 1 40 1 162 1 72 2 327 2 47 1 227 3 145 2 328 1 205 1 76 3 208 1 
173 4 69 2 201 2 42 4 4 1 305 1 271 2 226 1 109 2 356 1 133 1 9 1 153 1 66 1 254 2 
0 1 279 1 272 1 169 1 88 1 
279 1 88 1 170 1 
279 1 88 1 170 1 
279 1 88 1 170 1 
279 1 88 1 41 1 
279 1 88 1 41 1 
279 1 88 1 41 1 
279 1 88 1 
285 1 82 1 
210 1 256 2 138 3 16 5 17 5 139 1 160 1 70 2 72 2 325 1 73 5 127 2 307 1 129 10 193 2 205 1 49 2 231 1 
210 1 256 1 16 2 160 1 139 1 352 1 325 1 72 2 73 1 129 2 205 1 49 1 
210 1 256 1 138 1 17 2 16 2 160 1 139 1 352 1 325 1 72 2 127 1 73 2 189 1 129 4 32 1 205 1 49 1 
210 3 17 2 138 1 16 1 124 1 160 3 139 3 70 1 368 1 325 1 72 6 73 2 129 3 165 1 193 1 205 3 49 1 
232 1 210 5 256 5 124 1 368 2 127 5 189 3 340 4 129 34 308 1 32 3 193 3 268 1 181 3 17 18 16 16 138 7 197 1 70 3 139 5 160 5 352 3 72 10 325 1 291 1 223 1 73 12 143 1 226 1 165 1 205 5 49 5 148 1 231 2 
256 1 210 1 127 1 129 8 340 1 308 1 193 1 181 1 322 1 17 4 16 4 138 2 139 1 160 1 70 1 72 2 325 1 291 1 73 2 226 1 205 1 148 1 231 1 
210 2 256 2 127 1 129 11 340 2 308 1 32 1 193 1 268 1 322 1 181 1 138 2 17 5 16 6 197 1 70 1 139 2 160 2 352 1 325 1 72 4 291 1 73 3 226 1 205 2 49 1 148 1 231 1 
210 3 256 3 368 1 127 3 263 1 189 2 129 19 340 1 308 1 32 2 193 1 268 1 181 1 322 1 321 1 17 10 16 9 138 3 70 1 139 3 160 3 352 2 72 6 325 1 291 1 73 4 245 1 247 1 226 1 205 3 49 1 148 1 231 1 
210 3 256 3 368 1 127 2 263 1 189 1 129 17 340 1 308 1 32 2 193 1 268 1 181 1 322 1 321 1 17 7 16 10 138 3 70 1 139 3 160 3 352 2 72 6 325 1 291 1 73 5 245 1 247 1 226 1 205 3 49 2 148 1 231 1 
256 1 210 1 127 1 129 8 340 1 308 1 193 1 181 1 322 1 17 4 16 4 138 2 139 1 160 1 70 1 72 2 325 1 291 1 73 2 226 1 205 1 148 1 231 1 
210 1 256 2 127 2 263 1 189 2 129 12 340 1 32 2 181 1 322 1 321 1 17 6 16 6 138 1 139 1 160 1 352 2 72 2 325 1 73 2 245 1 247 1 205 1 49 1 148 1 
210 4 256 3 368 2 127 2 263 1 189 1 129 18 340 1 308 1 32 2 193 1 268 1 322 1 181 1 321 1 17 8 16 10 138 3 70 1 139 4 160 4 352 2 72 8 325 1 291 1 73 5 245 1 247 1 226 1 205 4 49 2 148 1 231 1 
210 4 256 3 368 2 127 2 263 1 189 2 129 16 340 1 32 3 322 1 181 1 321 1 17 7 16 9 138 3 139 4 160 4 352 3 325 1 72 8 73 6 245 1 247 1 165 1 205 4 49 3 148 1 
256 1 17 4 138 3 16 3 70 3 127 1 291 1 73 6 129 7 308 2 193 3 49 3 231 1 
210 4 256 3 368 2 127 2 263 1 189 1 129 18 340 1 308 1 32 2 193 1 322 1 181 1 321 1 17 8 16 10 138 3 70 1 139 4 160 4 352 2 325 1 72 8 291 1 73 4 245 1 247 1 226 1 165 1 205 4 49 1 148 1 231 1 
256 1 210 2 17 4 16 4 138 2 160 2 139 2 70 1 368 1 72 4 127 1 73 3 291 1 129 8 308 1 226 1 193 1 205 2 49 1 231 1 
256 1 17 3 138 2 16 3 70 1 291 1 73 2 127 1 129 6 308 1 226 1 193 1 229 1 231 1 
268 1 210 1 256 1 138 1 17 2 16 2 160 1 139 1 352 1 72 2 127 1 73 2 189 1 129 4 32 1 205 1 49 1 
256 1 181 1 138 1 17 4 16 3 197 1 352 1 127 1 73 2 189 1 340 2 129 7 32 1 49 1 148 1 
256 3 149 1 210 2 124 1 368 2 127 3 189 2 129 23 340 2 308 1 32 2 193 2 181 2 16 11 17 12 138 5 197 1 70 2 160 2 139 2 352 2 72 4 291 1 73 9 226 1 205 2 49 4 231 1 77 1 
129 1 340 1 17 1 
129 1 181 1 16 1 
210 1 268 1 256 1 17 3 16 3 138 2 139 1 160 1 352 1 72 2 73 3 127 1 189 1 129 6 32 1 205 1 49 1 267 1 
210 1 256 2 127 2 263 1 189 2 129 12 340 1 32 2 181 1 322 1 321 1 17 6 16 6 138 1 139 1 160 1 352 2 72 2 325 1 73 2 245 1 247 1 205 1 49 1 148 1 
256 1 16 3 17 3 138 1 70 1 127 1 73 2 129 6 193 1 49 1 231 1 
210 1 16 1 138 1 17 2 124 1 70 1 160 1 139 1 368 1 72 2 73 2 291 1 129 3 308 1 193 1 205 1 49 1 
55 1 113 1 217 1 227 1 110 1 76 1 327 1 
255 1 55 1 113 1 327 1 217 1 355 1 227 1 110 1 76 1 21 1 194 1 65 1 
157 1 275 1 257 4 47 4 311 1 151 1 97 1 71 4 10 1 84 1 230 1 235 1 262 1 
92 1 157 1 24 1 257 1 243 1 71 1 118 1 84 2 262 1 47 1 311 1 166 1 206 1 
257 1 47 1 116 1 332 1 71 1 84 1 235 1 36 1 195 1 262 1 
240 1 157 1 275 1 257 2 320 1 71 2 84 1 244 1 262 1 47 2 311 1 
240 1 157 3 257 5 275 1 151 1 97 1 71 5 84 2 235 1 262 2 175 1 47 4 311 2 358 1 121 1 230 1 
240 1 157 3 257 5 275 1 151 1 187 1 97 1 71 5 84 2 235 1 262 2 175 1 47 4 311 2 358 1 230 1 
157 1 257 1 47 1 311 1 151 1 97 1 229 1 71 1 84 1 235 1 262 1 
157 1 92 1 55 1 257 1 71 1 84 1 369 1 235 1 262 1 327 1 47 1 311 1 227 2 145 1 76 2 111 1 237 1 136 1 
157 3 92 2 55 1 257 1 350 1 71 1 200 1 84 1 369 1 164 1 120 1 262 1 327 2 175 1 87 1 47 1 311 2 227 2 145 1 76 2 111 1 237 2 136 1 
157 3 92 2 55 1 257 2 350 1 71 2 349 1 200 1 84 1 369 1 164 1 120 1 262 1 327 2 175 1 87 1 47 2 311 2 227 2 145 1 10 1 76 2 237 2 136 1 
92 1 157 4 316 1 26 1 257 3 364 2 287 1 173 1 69 1 350 1 71 3 200 1 84 1 235 1 188 1 262 1 175 1 47 3 311 1 10 1 12 1 155 1 53 2 
92 1 157 4 316 1 26 1 257 3 364 2 173 1 69 1 350 1 71 3 200 1 84 1 261 1 235 1 188 1 262 1 175 1 47 3 311 1 10 1 12 1 53 2 
257 1 276 1 47 1 71 1 84 1 262 1 
92 1 157 1 24 1 257 1 243 1 37 1 71 1 84 2 290 1 235 1 262 1 47 1 311 1 
55 2 256 1 210 2 275 1 257 1 278 1 84 1 369 1 127 1 262 1 129 6 308 1 310 1 311 1 193 1 111 1 237 1 136 1 157 1 92 1 67 1 17 3 16 3 138 2 288 2 70 1 160 2 139 2 71 1 40 1 162 1 199 1 72 4 73 2 291 1 327 1 47 1 226 1 227 2 145 1 205 2 328 2 76 2 274 1 231 1 300 1 79 1 
26 1 257 1 364 3 234 1 365 1 173 1 333 1 261 1 335 1 235 1 188 1 109 1 133 1 153 2 9 2 12 2 66 2 157 2 316 1 112 1 69 1 71 1 47 1 354 1 356 2 146 1 22 1 53 3 
92 1 157 2 26 1 275 1 276 1 257 2 71 2 84 2 290 1 262 1 47 2 311 1 34 1 
157 1 92 1 55 1 257 1 71 1 349 1 84 1 369 1 235 1 262 1 327 1 47 1 311 1 227 2 145 1 76 2 237 1 136 1 
92 1 157 1 24 1 257 1 243 1 37 1 71 1 84 2 290 1 262 1 175 1 47 1 311 1 
55 1 209 1 94 1 161 1 105 1 
55 1 316 1 209 2 220 1 364 2 150 1 38 1 94 2 173 1 69 1 161 2 105 1 335 1 164 1 120 1 87 1 294 1 180 1 53 2 
209 1 372 1 233 1 94 1 105 1 327 1 312 1 227 1 76 1 
38 1 105 1 180 1 
236 1 172 1 27 1 218 1 163 1 345 1 353 1 338 1 
172 4 81 1 27 2 83 1 221 1 29 1 353 3 338 1 236 1 132 1 218 2 192 2 345 4 265 1 
172 2 27 1 163 1 353 1 338 1 45 1 236 1 218 1 192 1 147 1 345 2 100 1 
172 3 81 2 27 1 163 1 302 1 83 2 29 1 353 1 338 1 236 1 218 1 345 3 
93 2 168 1 353 2 348 1 
236 1 172 1 163 1 345 1 361 1 338 1 
236 1 46 1 172 2 27 1 218 1 192 1 163 1 345 2 353 1 338 1 
182 1 
236 1 172 1 27 1 218 1 163 1 345 1 353 1 338 1 
27 1 218 1 229 1 353 1 
236 1 172 1 27 1 218 1 345 1 353 1 338 1 
172 1 122 1 78 1 
172 3 81 1 27 1 163 1 83 2 29 1 353 1 338 1 236 1 19 1 218 1 345 3 
236 1 172 2 27 1 218 1 192 1 345 2 353 1 61 1 338 1 
211 1 172 1 116 1 163 1 353 1 338 1 236 1 132 1 371 1 345 1 36 1 
236 1 172 1 27 1 163 1 345 1 353 1 338 1 
236 1 172 1 27 2 218 1 163 1 345 1 338 1 
236 2 172 2 27 1 11 1 163 1 345 2 299 1 59 1 353 1 338 2 
172 3 27 1 163 1 353 2 338 1 236 1 46 1 132 1 218 1 192 2 345 3 51 1 265 1 
236 1 172 1 192 1 116 1 163 1 345 2 346 1 195 1 338 1 
172 4 27 1 163 1 61 1 353 2 338 2 236 2 132 1 218 1 283 1 192 2 345 4 265 1 
236 1 46 1 172 3 27 1 218 1 192 1 83 1 163 1 345 3 353 1 338 1 
132 1 221 1 265 1 353 1 
27 1 353 1 

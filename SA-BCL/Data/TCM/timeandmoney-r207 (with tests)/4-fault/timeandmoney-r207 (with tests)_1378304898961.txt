#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 227 344 (149,285) (149,285) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 227 344 (149,285) (149,285) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 227 344 (149,285) (149,285) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 227 344 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 227 344 351 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 227 344 351 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
367 1 27 1 227 2 177 1 149 1 210 2 344 1 247 2 277 2 37 2 295 1 216 3 184 1 92 1 73 7 93 1 301 4 235 1 136 7 356 1 80 2 285 1 361 2 236 1 
367 1 277 2 37 2 295 1 27 1 216 3 184 1 92 1 93 1 73 7 227 2 177 1 301 4 235 1 136 7 149 1 356 1 210 2 285 1 80 2 344 1 247 2 236 1 361 2 
367 1 277 2 37 2 295 1 27 1 216 3 184 1 92 1 93 1 73 7 227 2 177 1 301 4 235 1 136 7 149 1 356 1 210 2 285 1 80 2 344 1 247 2 236 1 361 2 
367 1 27 1 227 2 177 1 149 1 210 2 344 1 247 2 277 2 37 2 375 1 295 1 216 3 184 1 92 1 73 7 93 1 301 4 235 1 136 7 356 1 47 1 80 2 285 1 220 1 361 2 236 1 
73 2 227 1 177 1 301 1 235 1 277 1 136 2 37 1 216 1 210 1 344 1 361 1 92 1 
367 1 277 1 101 1 375 1 184 1 92 1 73 2 227 1 136 2 138 1 47 1 210 1 80 1 220 1 198 1 361 1 
277 2 375 1 216 1 92 1 73 3 301 1 136 3 47 1 80 1 220 1 247 1 361 2 236 1 
277 2 37 1 295 1 216 3 351 1 92 1 93 1 73 7 227 1 177 1 301 5 235 1 136 7 231 1 210 1 80 1 344 1 247 2 361 2 236 1 
277 2 37 1 295 1 216 3 351 1 92 1 93 1 73 7 227 1 177 1 301 5 235 1 136 7 231 1 210 1 80 1 344 1 247 2 361 2 236 1 
165 1 86 1 12 1 
165 1 364 2 79 1 
88 1 31 1 99 2 16 2 104 2 355 2 308 2 169 2 
287 1 25 1 99 2 173 1 54 2 123 2 225 1 308 2 28 1 4 1 270 1 31 1 291 2 104 2 230 1 293 1 35 1 88 1 248 1 16 3 181 1 232 1 183 1 217 2 132 1 133 1 39 1 40 1 380 1 355 2 137 2 218 1 169 3 219 1 140 1 197 1 119 1 199 1 330 1 
31 1 36 1 324 1 99 1 16 1 104 1 355 1 308 1 169 1 132 1 
13 1 128 1 172 1 99 1 16 1 69 1 307 1 102 1 296 1 132 1 165 1 228 1 169 1 12 1 
13 1 128 1 172 1 99 1 16 1 307 2 308 1 296 2 132 1 165 1 355 1 104 1 228 1 169 1 12 1 
164 1 117 1 307 1 296 1 38 1 
165 1 164 1 223 1 241 1 307 2 296 2 38 1 12 1 
307 1 296 1 38 1 
36 1 99 1 16 1 307 1 308 1 296 1 132 1 164 1 31 1 324 1 355 1 104 1 169 1 171 1 
165 1 
165 1 164 1 223 1 151 1 307 2 296 2 38 1 12 1 
81 1 240 1 159 1 223 1 294 2 307 5 296 5 309 1 268 2 38 2 205 1 165 1 164 2 115 1 326 2 8 1 195 1 315 1 12 1 
287 1 173 1 99 1 160 1 16 2 54 1 308 1 183 1 217 1 4 1 39 1 40 1 166 1 104 1 62 1 137 1 218 1 169 2 330 1 293 1 
88 1 86 1 
88 2 99 2 16 2 308 1 334 1 297 1 355 1 104 1 169 2 
262 1 62 1 170 1 
287 1 88 1 173 1 16 1 54 1 183 1 217 1 206 1 4 1 39 1 40 1 137 1 218 1 169 1 293 1 330 1 
88 1 166 1 99 3 355 1 16 3 104 3 308 3 169 3 
324 1 99 1 16 1 104 1 308 1 169 1 132 1 
99 1 16 1 104 1 355 1 308 1 334 1 169 1 297 1 132 1 
287 1 172 1 25 1 173 1 99 3 54 1 123 1 308 3 307 1 4 1 270 1 31 1 291 2 104 3 340 1 228 1 230 1 293 1 88 1 13 1 128 1 374 1 16 4 160 1 181 1 232 1 296 1 297 1 183 1 217 1 132 1 133 1 39 1 40 1 166 1 380 1 355 2 137 1 218 1 169 4 197 1 119 1 199 1 330 1 
88 1 166 1 99 2 16 2 104 1 308 1 169 2 102 1 66 1 
121 1 13 1 374 1 128 1 172 1 99 3 160 1 16 3 307 1 308 3 296 1 297 1 132 1 165 1 166 2 355 1 104 3 228 1 169 3 
166 1 99 2 16 2 104 2 355 1 62 1 308 2 169 2 297 1 170 1 
287 1 88 1 173 1 16 1 54 1 183 1 217 1 4 1 39 1 40 1 137 1 218 1 169 1 293 1 330 1 
287 1 88 1 16 1 54 1 183 1 217 1 4 1 40 1 284 1 137 1 341 1 218 1 169 1 293 1 330 1 
262 2 25 1 123 4 225 2 263 1 369 1 270 1 312 1 291 2 373 1 209 1 106 1 179 1 62 2 161 1 181 1 130 1 280 1 133 2 380 1 358 1 197 1 170 2 199 1 
172 1 99 1 16 1 104 1 308 1 289 1 169 1 132 1 
365 1 88 1 99 5 16 5 160 1 308 4 102 1 297 1 166 2 381 1 104 4 355 1 169 5 66 1 
324 1 99 2 16 2 104 2 308 2 289 1 169 2 132 1 
234 1 85 1 
234 1 85 1 
233 1 336 1 
233 1 336 1 
233 1 336 1 
234 1 85 1 318 1 
234 1 85 1 318 1 
24 1 234 1 85 1 
233 1 234 2 85 2 229 1 267 1 336 1 
234 1 85 1 318 1 
316 1 234 1 85 1 
316 1 234 1 85 1 
316 1 234 1 85 1 
50 1 52 1 249 1 176 1 307 2 113 2 266 1 296 2 226 2 354 2 165 1 300 2 18 2 234 2 85 2 229 1 273 1 180 1 328 3 
332 1 52 1 288 1 24 1 99 2 201 1 308 2 307 1 339 1 85 1 104 2 88 1 16 2 113 1 296 1 354 1 300 1 167 1 234 1 18 1 189 1 168 1 169 2 328 1 
227 1 37 1 210 1 
227 1 101 1 210 1 
256 1 37 2 101 1 203 1 210 3 56 1 
37 1 101 1 203 1 350 1 210 2 56 1 
37 1 101 1 203 2 210 2 56 1 
332 1 364 3 51 1 81 1 201 1 223 1 263 1 307 5 268 1 337 1 6 1 312 1 207 2 209 1 107 1 109 1 315 2 67 1 12 1 294 1 182 1 296 5 38 1 323 2 299 2 164 4 165 2 167 1 326 1 358 1 79 1 195 3 
364 9 51 2 81 1 201 4 223 1 263 3 307 9 268 2 205 1 337 3 6 1 312 3 207 6 208 1 209 3 107 2 315 6 12 1 111 1 294 2 250 5 296 9 162 1 322 1 38 6 299 6 164 7 165 5 43 1 117 5 326 2 358 3 79 3 360 1 195 8 
364 4 51 1 201 1 307 3 263 1 268 1 205 1 337 1 312 1 207 2 209 1 107 1 109 1 315 2 67 1 12 1 294 1 296 3 323 1 299 2 165 3 164 2 326 1 358 1 79 2 195 3 
364 7 51 1 201 2 307 4 263 2 268 1 205 1 337 2 312 2 207 4 209 2 107 1 109 1 315 4 67 1 12 1 294 1 296 4 322 1 323 2 299 4 165 4 164 3 43 1 326 1 358 2 79 3 360 1 195 5 
86 1 319 1 183 1 
17 1 183 1 
377 1 
183 1 330 1 
40 1 178 1 319 2 33 1 183 3 330 1 
40 1 183 1 330 1 
313 1 183 1 
123 7 263 1 225 4 130 3 83 2 369 2 71 1 30 1 133 3 283 1 312 1 60 1 245 1 193 1 246 1 142 1 156 1 
123 7 263 1 225 4 130 3 83 2 369 2 71 1 30 1 133 3 283 1 312 1 60 1 245 1 193 1 246 1 142 1 156 1 
123 7 263 1 225 4 130 3 264 1 83 2 369 2 71 1 30 1 133 3 283 1 312 1 60 1 245 1 193 1 246 1 142 1 156 1 
123 31 225 16 263 4 83 3 335 1 310 1 369 5 337 3 30 5 270 1 60 1 291 2 312 4 245 2 209 3 246 1 274 4 156 1 181 1 89 1 349 1 130 10 131 1 71 2 133 15 379 1 283 2 193 2 358 3 142 1 197 1 329 1 199 1 222 3 
123 9 263 2 225 5 83 1 369 2 30 1 270 1 312 2 291 2 60 1 245 1 246 1 181 1 130 3 70 1 71 1 90 1 133 4 283 1 45 1 193 1 142 1 197 1 199 1 
287 1 54 1 101 1 57 1 227 1 61 1 63 1 314 1 210 2 346 1 110 1 293 1 277 1 37 1 375 1 298 1 217 1 92 1 73 2 94 1 301 1 256 1 136 2 192 1 137 1 47 1 80 1 220 1 48 1 361 1 
363 1 287 1 54 1 100 1 101 1 243 1 227 1 61 1 63 1 314 1 210 2 346 1 110 1 293 1 277 1 37 1 375 1 298 1 217 1 73 3 94 1 256 1 301 2 136 3 192 1 137 1 47 1 80 1 220 1 361 1 
287 1 54 1 100 1 101 1 243 1 227 1 61 1 210 2 346 1 110 1 293 1 37 1 375 1 298 1 217 1 73 2 94 1 301 2 256 1 136 2 192 1 137 1 47 1 80 1 220 1 
287 1 363 1 54 1 175 1 4 1 338 1 61 2 293 1 276 1 277 1 183 1 298 2 217 1 73 1 136 1 19 1 192 2 357 1 137 1 80 2 361 1 331 1 330 1 
287 1 54 1 100 1 101 1 227 1 61 1 63 1 314 1 210 2 346 1 110 1 293 1 277 1 37 1 298 1 217 1 92 1 73 1 94 1 256 1 136 1 192 1 137 1 80 1 48 1 361 1 
376 1 
287 1 51 1 99 1 333 2 54 2 102 1 147 2 4 2 338 1 10 1 65 1 11 1 345 1 12 1 293 1 213 1 13 1 16 1 294 1 69 1 112 2 251 1 296 5 253 2 217 2 255 2 165 2 75 2 77 4 357 1 118 1 79 2 169 1 120 2 364 2 81 1 172 1 223 3 307 5 268 1 228 1 126 1 315 2 128 1 320 1 38 6 183 1 378 1 132 1 191 1 326 1 137 2 95 1 195 2 330 1 
172 1 99 1 223 1 307 3 102 1 151 1 228 1 126 1 11 1 13 1 128 1 16 1 69 1 112 1 320 1 296 3 38 2 378 1 132 1 77 2 118 1 169 1 
172 1 99 1 223 1 307 3 102 1 151 1 228 1 126 1 11 1 12 1 13 1 128 1 16 1 69 1 320 1 296 3 253 1 38 1 378 1 132 1 165 1 77 3 118 1 169 1 
172 1 99 1 223 1 307 3 102 1 147 1 151 1 228 1 126 1 11 1 12 1 13 1 128 1 16 1 69 1 112 1 320 1 296 3 253 1 38 2 378 1 132 1 165 1 77 3 118 1 169 1 
99 1 333 2 102 1 147 4 151 1 11 1 345 1 12 5 13 1 16 1 294 1 69 1 112 4 296 5 251 1 253 4 255 2 165 5 75 2 77 6 118 1 169 1 302 1 79 2 120 2 81 1 172 1 223 3 307 5 268 1 228 1 126 1 315 1 128 1 320 1 38 7 378 1 132 1 185 1 186 1 326 1 139 1 195 1 97 1 
99 1 333 2 102 1 147 2 11 1 345 1 12 1 13 1 16 1 294 1 69 1 112 2 296 4 251 1 253 2 255 2 165 2 75 2 77 4 118 1 169 1 79 2 120 2 364 2 81 1 172 1 223 2 307 4 268 1 228 1 126 1 315 1 128 1 320 1 38 4 378 1 132 1 326 1 191 1 195 1 
81 1 172 1 99 1 333 2 223 2 307 4 102 1 268 1 147 2 228 1 126 1 11 1 315 1 345 1 12 1 13 1 128 1 16 1 294 1 69 1 112 2 320 1 251 1 296 4 253 2 38 4 378 1 255 2 132 1 165 1 186 1 75 2 77 4 326 1 118 1 139 1 79 2 169 1 302 1 195 1 120 2 
81 1 172 1 99 1 333 2 223 2 307 4 102 1 268 1 147 2 228 1 126 1 11 1 315 1 345 1 12 1 13 1 128 1 16 1 294 1 69 1 112 2 320 1 251 1 296 4 253 2 38 4 378 1 255 2 132 1 165 1 186 1 75 2 77 4 326 1 118 1 139 1 79 2 169 1 302 1 195 1 120 2 
364 2 81 1 172 1 82 1 99 1 333 2 223 2 307 4 102 1 268 1 147 2 372 2 271 1 228 1 126 1 11 1 315 1 12 1 13 1 128 1 16 1 294 1 69 1 112 2 320 1 251 1 296 4 253 2 38 4 378 1 132 1 165 1 186 1 75 2 77 4 116 1 327 2 326 1 118 1 169 1 195 1 
81 1 172 1 99 1 333 2 223 2 307 4 102 1 268 1 147 3 228 1 126 1 11 1 315 1 345 1 12 1 13 1 128 1 16 1 294 1 69 1 112 3 320 1 251 1 296 4 253 3 38 5 378 1 255 2 132 1 165 1 186 1 75 2 77 5 326 1 118 1 139 1 79 2 302 1 169 1 195 1 97 1 120 2 
81 1 172 1 99 1 333 2 223 2 307 4 102 1 268 1 147 3 228 1 126 1 11 1 315 1 345 1 12 1 13 1 128 1 16 1 294 1 69 1 112 3 320 1 251 1 296 4 253 3 38 5 378 1 255 2 132 1 165 1 186 1 75 2 77 5 326 1 118 1 139 1 79 2 302 1 169 1 195 1 97 1 120 2 
99 1 333 2 102 1 147 2 11 1 12 1 13 1 16 1 294 1 69 1 112 2 296 4 251 1 253 2 165 1 75 2 77 4 118 1 169 1 364 2 81 1 172 1 82 1 223 2 307 4 268 1 372 2 228 1 126 1 315 1 128 1 320 1 38 4 378 1 132 1 326 1 327 2 191 1 195 1 
88 2 262 1 25 1 123 6 181 1 225 3 263 1 83 1 130 2 369 2 71 1 133 3 270 1 380 1 312 1 60 1 373 1 291 2 86 1 62 1 193 1 246 1 142 1 197 1 170 1 199 1 
262 11 25 1 123 14 225 8 263 2 242 1 28 1 2 1 310 1 369 1 30 1 337 2 270 2 291 4 312 1 209 1 62 11 230 1 274 3 88 1 181 2 130 2 131 1 133 6 135 1 380 2 44 1 358 2 194 1 197 2 170 4 199 2 222 3 
287 1 22 1 173 1 25 1 99 1 54 1 123 2 308 1 225 1 265 1 28 1 4 1 206 1 270 1 291 2 104 1 230 1 293 1 88 1 16 2 160 1 181 1 183 1 217 1 39 1 133 1 40 1 135 1 166 1 380 1 76 1 137 1 218 1 169 2 197 1 170 1 330 1 199 1 
287 2 238 1 99 1 100 1 54 3 146 2 337 2 4 1 60 1 291 6 104 1 105 2 209 2 62 7 246 1 154 2 293 2 160 1 16 3 71 1 217 3 166 1 218 2 358 2 169 3 119 2 170 7 262 7 25 3 173 2 306 1 305 1 123 20 308 1 263 3 225 10 83 1 28 1 369 4 30 4 270 3 312 3 230 1 88 2 181 3 130 8 183 2 133 10 39 2 135 1 40 2 380 3 137 3 193 1 142 1 197 3 199 3 330 2 49 2 
287 2 99 1 25 2 100 1 54 7 123 2 308 1 225 1 28 1 290 1 57 1 4 2 270 2 338 1 373 1 291 4 104 1 7 1 230 1 153 1 293 2 16 1 181 2 214 1 183 3 72 1 217 8 133 1 166 1 380 2 190 1 357 1 137 8 259 1 169 1 140 2 197 2 199 2 330 2 
262 1 25 1 99 1 123 3 308 1 263 1 225 1 204 1 369 1 337 1 270 1 291 2 312 1 104 1 209 1 62 1 16 1 181 1 130 1 297 1 133 2 135 1 380 1 355 1 358 1 169 1 197 1 170 1 199 1 
262 1 25 1 123 2 181 1 263 1 225 2 130 1 280 1 30 1 270 1 380 1 373 1 291 2 62 1 358 1 197 1 170 1 199 1 
262 1 25 1 123 2 181 1 130 1 369 1 133 2 270 1 380 1 373 1 291 2 312 1 209 1 62 1 179 1 197 1 170 1 199 1 
262 2 25 1 123 4 225 2 263 1 369 1 337 1 30 1 270 1 291 2 373 1 312 1 209 1 62 2 181 1 130 2 133 2 380 1 358 1 197 1 170 2 199 1 
262 1 25 1 123 2 181 1 263 1 225 2 130 1 280 1 30 1 270 1 380 1 291 2 62 1 259 1 358 1 197 1 170 1 199 1 
262 1 25 1 123 2 181 1 130 1 369 1 133 2 270 1 380 1 291 2 312 1 209 1 62 1 179 1 259 1 197 1 170 1 199 1 
262 2 25 1 123 4 225 2 263 1 369 1 337 1 30 1 270 1 291 2 312 1 209 1 62 2 181 1 130 2 133 2 380 1 259 1 358 1 197 1 170 2 199 1 
262 2 25 1 123 4 225 2 263 1 369 1 337 1 30 1 270 1 291 2 312 1 209 1 62 2 181 1 130 2 133 2 380 1 358 1 197 1 170 2 199 1 
287 1 173 1 25 1 54 1 123 2 225 1 28 1 4 1 270 1 291 2 230 1 293 1 88 1 16 1 181 1 183 1 217 1 39 1 133 1 40 1 380 1 137 1 218 1 169 1 197 1 119 1 330 1 199 1 
287 1 25 1 54 1 123 2 225 1 28 1 4 1 270 1 291 2 341 1 230 1 343 1 293 1 88 1 16 1 181 1 183 1 217 1 133 1 40 1 380 1 284 1 137 1 218 1 169 1 197 1 330 1 199 1 
262 2 25 1 123 4 225 2 263 1 369 1 337 1 30 1 270 1 291 2 312 1 209 1 62 2 181 1 130 2 133 2 135 1 380 1 358 1 197 1 170 2 199 1 
287 1 262 2 173 1 25 1 54 1 123 4 225 2 263 1 369 1 30 1 57 1 337 1 270 1 312 1 291 2 209 1 62 2 154 1 293 1 16 1 181 1 130 2 183 1 217 1 133 2 39 1 40 1 380 1 137 1 358 1 218 1 169 1 197 1 170 2 119 1 330 1 199 1 
262 1 25 1 99 1 123 3 308 1 263 1 225 2 202 1 30 1 337 1 270 1 312 1 291 2 104 1 209 1 62 1 16 1 181 1 130 1 297 1 133 1 135 1 380 1 355 1 358 1 169 1 197 1 170 1 199 1 
239 2 144 1 337 4 5 1 291 6 60 1 209 4 152 4 64 1 246 1 158 1 347 1 215 1 71 1 258 1 78 1 358 4 222 3 23 1 123 41 263 5 225 20 83 1 310 3 369 4 30 4 270 3 371 1 312 5 274 4 34 1 127 1 181 3 130 8 131 1 90 1 133 21 379 1 193 1 142 1 197 3 143 1 199 3 
23 1 239 2 144 1 123 38 225 20 263 5 83 1 310 3 369 4 337 4 30 3 5 1 270 4 371 1 60 1 291 8 312 4 209 3 152 4 246 1 64 1 274 4 34 1 127 1 158 1 347 1 181 4 215 1 130 7 131 1 71 1 90 1 133 18 379 2 258 1 78 1 193 1 358 4 142 1 197 4 143 1 199 4 222 3 
23 1 239 1 144 1 123 52 225 27 263 8 83 1 310 2 369 7 337 7 30 7 270 2 371 1 60 1 291 4 312 8 209 7 152 4 246 1 64 1 274 4 34 1 127 1 158 1 347 1 181 2 130 14 131 2 71 1 90 1 133 25 379 1 258 1 78 1 193 1 358 7 142 1 194 2 197 2 143 1 199 2 222 4 
239 1 123 19 225 9 263 3 310 1 369 3 337 3 30 3 5 1 270 2 371 1 291 4 312 3 209 3 152 2 64 1 274 2 127 1 181 2 130 6 131 1 90 1 353 1 133 10 78 2 358 3 197 2 143 1 199 2 222 1 
23 1 239 2 123 26 144 1 225 14 263 3 310 2 369 2 30 2 337 3 270 3 371 1 312 2 291 6 209 2 152 4 64 2 274 2 34 1 127 1 158 1 347 1 181 3 130 4 90 1 133 12 379 2 258 1 78 1 358 3 197 3 143 1 199 3 222 2 
300 1 234 1 18 1 85 1 229 1 113 1 266 1 180 1 311 1 354 1 
24 1 288 1 
300 1 234 1 18 1 85 1 279 1 113 1 382 1 362 1 354 1 
52 1 249 1 176 1 307 1 113 1 266 1 296 1 226 1 354 1 165 1 300 1 18 1 234 1 85 1 229 1 273 1 180 1 328 2 
52 1 249 1 176 1 307 1 113 1 266 1 296 1 226 1 354 1 165 1 300 1 18 1 234 1 85 1 229 1 273 1 180 1 328 2 
52 1 249 1 176 1 307 1 113 1 266 1 296 1 226 1 354 1 165 1 300 1 18 1 234 1 85 1 229 1 273 1 180 1 328 2 
318 1 267 1 155 1 
318 1 267 1 155 1 
316 1 32 1 
316 1 32 1 267 1 
339 1 168 1 
332 1 288 1 24 1 174 1 99 2 201 1 307 1 308 2 226 1 339 1 85 1 104 2 273 1 88 1 16 2 113 1 296 1 354 1 164 1 300 1 167 1 234 1 18 1 189 1 168 1 169 2 328 1 
318 1 155 1 
316 1 32 1 267 1 
287 1 0 1 25 1 99 2 54 2 1 1 123 2 225 1 28 1 103 1 270 1 291 2 7 1 230 1 153 1 293 1 14 1 16 2 181 1 183 1 217 2 134 1 133 1 135 1 380 1 137 2 169 2 140 2 197 1 330 1 199 1 
287 1 100 1 54 2 26 1 37 1 101 1 368 1 217 2 57 1 227 1 94 1 256 1 61 1 137 2 9 1 210 2 314 1 110 1 293 1 
287 1 68 1 100 1 54 1 37 1 101 1 368 1 217 1 227 1 94 1 256 1 61 1 137 1 210 2 314 1 110 1 293 1 
287 1 54 1 3 1 183 1 217 1 4 1 338 1 61 1 357 1 137 1 9 1 293 1 330 1 331 1 
287 1 100 1 54 1 26 1 37 1 101 1 368 1 217 1 227 1 94 1 256 1 61 1 137 1 9 1 210 2 314 1 110 1 293 1 
46 1 
165 1 115 1 240 1 86 1 195 1 315 1 12 1 
364 1 81 1 223 1 294 1 307 1 296 1 38 1 268 1 255 1 165 2 326 1 79 1 195 1 345 1 315 1 12 1 120 1 
287 4 51 2 240 1 54 3 57 1 146 2 337 2 4 1 148 2 59 2 207 6 209 2 342 2 10 1 211 1 212 2 12 2 293 3 294 4 296 5 217 3 114 2 299 6 74 1 165 8 115 1 257 2 17 3 20 2 358 2 79 6 364 12 81 4 223 3 307 5 263 2 268 4 178 1 312 2 313 2 228 2 315 8 275 1 319 2 183 10 38 5 187 1 40 3 326 4 137 3 141 1 195 9 286 2 330 3 
364 6 23 1 51 1 81 2 122 1 223 1 144 1 307 1 263 2 29 1 310 1 268 2 337 2 59 2 207 5 312 2 209 2 10 1 274 1 34 1 315 5 158 1 12 2 294 2 296 1 38 1 299 5 165 5 258 1 326 2 20 1 358 2 79 3 195 8 222 1 
81 1 99 1 307 1 263 2 308 1 268 1 31 1 59 2 60 1 312 1 104 1 315 2 36 1 16 1 294 1 296 1 71 1 132 1 324 1 355 1 45 1 326 1 20 1 193 1 169 1 302 1 195 2 171 1 
165 1 115 1 81 1 240 1 326 1 294 1 195 1 315 1 268 1 12 1 
364 10 263 2 146 1 337 2 299 5 165 5 59 2 207 5 312 2 209 2 20 1 358 2 79 5 195 5 315 5 
165 1 223 1 307 1 296 1 38 1 12 1 
287 1 51 2 81 1 54 4 223 2 307 3 268 2 205 1 4 2 338 1 10 2 65 1 211 1 315 2 293 1 275 2 213 1 294 2 252 1 296 3 183 1 38 4 217 4 91 1 326 2 357 1 137 4 195 2 330 1 
287 1 99 2 173 1 25 1 54 1 123 1 308 2 4 1 31 1 270 1 291 2 104 2 230 1 293 1 88 1 16 3 181 1 232 1 183 1 217 1 133 1 39 1 40 1 380 1 355 2 137 1 218 1 169 3 197 1 119 1 199 1 330 1 
364 4 51 1 81 1 294 1 83 1 268 1 299 2 165 4 207 2 326 1 79 2 10 1 195 1 315 2 12 2 
244 1 113 1 354 1 
244 1 113 1 354 1 
237 1 339 1 113 1 180 1 354 1 
244 1 113 1 354 1 
224 1 113 1 354 1 
224 1 113 1 354 1 
224 1 113 1 354 1 
113 1 354 1 
234 1 85 1 
123 8 263 1 225 4 83 1 310 1 369 2 270 1 312 1 291 2 60 1 246 1 274 1 181 1 130 2 71 1 90 1 133 4 258 1 193 1 142 1 197 1 222 1 199 1 
123 11 225 6 263 2 83 1 310 1 369 2 337 1 30 1 269 1 270 2 312 1 60 1 291 4 246 1 274 2 181 2 130 3 131 1 71 1 90 1 133 5 258 1 193 1 358 1 142 1 197 2 199 2 222 1 
23 1 123 19 144 1 225 9 263 3 83 1 310 1 369 3 30 1 337 2 269 1 270 3 60 1 291 6 312 3 209 2 246 1 274 1 34 1 158 1 181 3 130 4 71 1 90 1 133 10 379 1 258 1 193 1 358 2 142 1 197 3 222 1 199 3 
23 1 123 17 144 1 225 10 263 3 83 1 310 1 369 3 30 2 337 2 269 1 270 3 60 1 291 6 312 2 209 1 246 1 274 1 34 1 158 1 181 3 130 5 71 1 90 1 133 7 379 1 258 1 193 1 358 2 142 1 197 3 222 1 199 3 
123 8 263 1 225 4 83 1 310 1 369 2 270 1 312 1 291 2 60 1 246 1 274 1 181 1 130 2 71 1 90 1 133 4 258 1 193 1 142 1 197 1 222 1 199 1 
23 1 123 12 144 1 225 6 263 2 310 1 369 1 30 1 337 2 270 1 291 2 312 2 209 2 274 1 34 1 158 1 181 1 130 2 90 1 133 6 258 1 358 2 197 1 222 1 199 1 
23 1 123 18 144 1 225 10 263 3 83 1 310 1 369 3 30 2 337 2 269 1 270 4 60 1 291 8 312 2 209 1 246 1 274 1 34 1 158 1 181 4 130 5 71 1 90 1 133 8 379 2 258 1 193 1 358 2 142 1 197 4 199 4 222 1 
23 1 123 16 144 1 225 9 263 3 310 1 369 3 30 3 337 3 5 1 270 4 291 8 312 2 209 2 274 1 34 1 158 1 181 4 130 6 90 1 133 7 379 2 258 1 358 3 197 4 199 4 222 1 
123 7 263 1 225 3 130 6 71 3 369 3 30 3 133 4 312 1 60 1 193 3 246 1 142 2 
23 1 123 18 144 1 225 10 263 3 83 1 310 1 369 3 30 1 337 2 5 1 270 4 60 1 291 8 312 2 209 1 246 1 274 1 34 1 158 1 181 4 130 4 71 1 90 1 133 8 379 2 258 1 193 1 358 2 142 1 197 4 199 4 222 1 
123 8 181 2 263 1 225 4 83 1 130 3 369 2 71 1 30 1 133 4 270 2 379 1 312 1 60 1 291 4 193 1 246 1 142 1 197 2 199 2 
123 6 263 1 225 3 83 1 130 2 71 1 369 2 133 3 60 1 312 1 86 1 193 1 246 1 142 1 
181 1 123 4 263 1 225 2 130 2 369 1 337 1 30 1 133 2 269 1 270 1 312 1 291 2 209 1 358 1 197 1 199 1 
123 7 225 3 263 1 130 2 310 1 131 1 369 1 337 1 30 1 133 4 312 1 209 1 358 1 274 2 222 1 
123 23 263 3 225 11 83 1 369 5 30 4 337 2 270 2 60 1 312 3 291 4 209 2 246 1 274 2 15 1 181 2 130 9 131 1 71 2 133 12 379 2 44 1 193 2 358 2 142 1 194 1 197 2 222 2 199 2 
133 1 123 1 274 1 
123 1 225 1 222 1 
181 1 123 6 263 1 225 3 130 3 369 2 146 1 337 1 30 1 269 1 133 3 270 1 291 2 312 1 209 1 358 1 197 1 199 1 
23 1 123 12 144 1 225 6 263 2 310 1 369 1 30 1 337 2 270 1 291 2 312 2 209 2 274 1 34 1 158 1 181 1 130 2 90 1 133 6 258 1 358 2 197 1 222 1 199 1 
123 6 263 1 225 3 130 2 71 1 369 1 30 1 133 3 60 1 312 1 193 1 
15 1 123 3 181 1 225 1 130 2 369 1 71 1 30 1 133 2 379 1 270 1 291 2 193 1 246 1 142 1 197 1 199 1 
181 1 123 10 225 5 263 2 130 5 71 2 369 3 90 1 30 2 133 5 270 1 291 2 60 1 312 2 45 1 193 2 197 1 199 1 
181 1 123 2 263 1 225 2 130 1 90 1 30 1 270 1 291 2 358 1 197 1 199 1 
181 1 123 4 263 1 225 2 130 2 369 1 90 1 337 1 30 1 133 2 270 1 312 1 291 2 209 1 358 1 197 1 199 1 
15 1 123 3 181 3 225 1 130 2 71 1 369 1 90 1 30 1 5 1 133 2 379 1 270 3 291 6 193 1 197 3 199 3 
123 34 225 16 263 5 83 1 310 1 369 7 337 3 30 5 269 1 5 1 270 5 60 2 291 10 312 5 209 3 246 1 274 4 15 1 89 1 181 5 349 1 130 12 131 1 71 3 90 1 133 18 379 2 193 3 358 3 142 1 197 5 329 1 199 5 222 3 
88 1 42 1 99 1 16 1 169 1 102 1 66 1 
88 1 99 1 348 1 16 1 129 1 102 1 352 1 254 1 42 1 169 1 196 1 66 1 
287 1 4 1 338 1 86 1 54 1 357 1 137 1 183 1 217 1 293 1 330 1 
287 1 88 1 99 1 173 1 16 2 54 1 308 1 183 1 217 1 4 1 40 1 166 1 104 1 137 1 218 1 169 2 330 1 293 1 
287 1 172 1 173 1 99 2 54 1 308 2 104 1 313 1 212 1 293 1 88 1 275 1 13 1 16 2 183 3 217 1 132 1 166 1 40 2 137 1 218 1 169 2 330 2 
287 1 172 1 99 2 54 2 308 2 125 1 104 1 313 1 341 1 212 1 293 1 88 1 275 1 13 1 16 2 183 3 217 2 132 1 166 1 40 2 137 2 218 1 169 2 330 2 
287 1 275 1 54 3 317 1 307 2 319 1 124 1 125 1 296 2 183 4 38 1 217 3 4 1 165 1 40 1 17 1 313 1 228 1 137 3 212 1 12 1 330 1 293 1 
287 1 275 1 54 3 307 2 319 1 125 1 296 2 183 4 38 1 217 3 4 1 165 1 40 1 17 1 313 1 228 1 137 3 342 1 212 1 12 1 330 1 293 1 
287 1 54 1 214 1 137 1 217 1 293 1 
287 3 366 1 100 1 54 6 214 1 183 3 72 1 217 7 290 1 57 1 4 2 40 1 178 1 190 1 7 1 137 7 260 1 140 1 330 2 21 1 293 2 
287 1 99 1 54 1 57 1 291 4 60 1 104 1 105 1 62 1 154 1 246 1 293 1 14 1 16 2 71 1 217 1 166 1 218 1 169 2 170 1 119 1 262 1 173 1 25 2 123 6 308 1 263 1 225 3 83 1 369 2 270 2 312 1 88 2 181 2 130 2 183 1 39 1 133 3 135 1 40 1 380 2 137 1 193 1 142 1 197 2 199 2 330 1 
81 2 240 1 54 1 223 1 307 3 268 2 4 1 148 1 228 1 342 1 211 1 315 1 12 1 294 2 319 1 296 3 183 2 38 2 217 1 165 1 164 1 115 1 257 1 17 1 326 2 137 1 195 1 286 1 
287 2 54 2 319 1 214 1 183 2 217 2 57 1 40 1 178 1 137 2 141 1 330 1 293 1 
287 1 54 4 125 1 183 1 217 4 57 1 4 1 338 1 357 1 137 4 221 1 330 1 293 1 
287 2 275 1 366 1 238 1 54 2 281 1 183 1 217 2 58 1 40 1 137 2 330 1 21 1 293 1 
287 1 4 1 227 1 94 1 54 1 101 1 137 1 210 1 217 1 293 1 
287 1 54 2 100 1 183 1 217 2 57 1 134 1 7 1 137 2 330 1 293 1 
287 2 275 1 54 4 183 3 217 5 57 1 290 1 4 1 338 1 190 1 7 1 357 1 137 5 221 1 330 2 293 2 
287 2 275 1 54 4 321 1 183 3 217 5 57 1 290 1 4 1 338 1 7 1 357 1 137 5 221 1 330 2 293 2 
287 1 88 1 99 1 16 2 54 1 308 1 183 1 217 1 4 1 40 1 166 1 104 1 137 1 341 1 218 1 169 2 330 1 293 1 
287 2 366 1 275 1 54 1 183 1 217 1 40 1 178 1 137 1 260 1 330 1 21 1 293 1 
88 1 278 1 359 1 157 1 282 1 
88 1 13 1 172 1 374 1 128 1 278 2 307 2 296 2 84 1 132 1 282 1 165 1 164 1 188 1 228 1 359 2 292 1 12 1 157 2 
0 1 99 1 278 1 16 1 1 1 103 1 282 1 169 1 157 1 
188 1 292 1 282 1 
86 1 375 1 47 1 220 1 
73 1 277 1 136 1 375 1 47 1 220 1 361 1 
136 1 192 1 80 1 
73 3 367 2 53 1 277 1 136 3 375 1 47 1 55 1 220 1 96 1 361 1 92 1 
73 2 301 1 235 1 277 1 136 2 375 1 47 1 220 1 361 1 
73 1 227 1 177 1 277 1 136 1 37 1 216 1 210 1 361 1 92 1 
73 1 277 1 136 1 375 1 220 1 361 1 92 1 
73 1 277 1 136 1 375 2 47 1 361 1 92 1 
73 2 303 1 277 2 136 2 375 1 108 1 220 1 87 1 361 2 92 1 
277 1 375 1 295 1 216 1 92 1 73 3 93 1 301 2 136 3 47 1 220 1 247 1 361 1 
277 1 101 1 37 1 375 1 92 1 73 2 227 1 256 1 301 1 136 2 47 1 210 2 220 1 261 1 361 1 
277 2 375 1 216 1 145 1 92 1 73 4 301 2 235 1 136 4 47 1 220 1 247 1 361 2 
73 1 277 1 136 1 375 1 47 1 220 1 361 1 92 1 
200 1 367 1 53 1 277 1 375 2 216 1 73 4 301 2 136 4 47 2 220 2 247 1 96 1 361 1 
277 1 375 1 163 1 92 1 73 2 41 1 301 1 136 2 47 1 231 1 220 1 361 1 
73 3 367 2 53 2 277 1 136 3 375 1 47 1 220 1 370 1 96 1 361 1 92 1 
98 1 150 2 272 1 220 2 
73 1 325 1 277 1 136 1 361 1 92 1 
93 1 73 2 301 1 277 1 136 2 375 1 47 1 220 1 361 1 92 1 
304 1 
73 1 277 1 136 1 375 1 47 1 220 1 361 1 92 1 
367 1 277 1 375 1 92 1 73 3 93 1 301 1 136 3 47 1 220 1 361 1 
73 1 301 1 136 1 216 1 247 1 
375 1 220 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (67,182) 273 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (67,182) 273 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 2 355 9 130 1 87 1 272 2 106 2 136 1 276 5 166 2 10 9 67 1 277 3 342 1 144 1 326 6 175 2 308 2 176 1 37 1 119 1 258 1 75 1 20 1 332 2 182 1 316 4 39 1 155 1 
42 2 355 9 130 1 87 1 272 2 106 2 136 1 276 5 10 9 166 2 67 1 277 3 342 1 144 1 326 6 175 2 308 2 176 1 37 1 119 1 258 1 75 1 20 1 332 2 182 1 316 4 39 1 155 1 
42 2 355 10 130 1 87 1 272 2 106 2 136 1 276 6 10 10 166 2 67 1 277 4 342 1 144 1 326 7 175 2 308 2 176 1 37 1 119 1 258 1 75 1 20 1 332 2 182 1 316 5 39 1 155 1 
42 2 355 7 130 1 87 1 272 2 106 2 276 4 10 7 166 1 67 1 277 2 342 1 144 1 326 4 175 2 308 2 176 1 37 1 119 1 258 1 75 1 20 1 332 2 182 1 316 3 39 1 155 1 
144 1 326 3 355 4 175 1 308 1 272 1 37 1 106 1 136 1 276 3 258 1 10 4 75 1 166 2 332 1 277 1 316 2 155 1 
126 1 42 1 355 2 130 1 175 1 308 1 272 1 176 1 37 1 276 1 258 1 10 2 323 1 332 1 113 1 155 1 
326 1 42 1 355 3 175 2 272 2 37 1 276 2 258 1 10 3 67 1 277 1 316 1 155 1 
178 1 10 1 355 1 67 1 175 1 272 1 273 1 155 1 
178 1 10 1 355 1 67 1 175 1 272 1 273 1 155 1 
12 1 281 1 220 1 
363 1 220 1 65 2 
165 2 338 1 199 1 339 2 138 2 43 2 125 2 134 2 
127 1 85 1 270 1 321 1 43 2 132 1 134 3 135 2 245 1 165 2 338 1 339 2 138 2 322 1 229 1 301 1 230 1 94 1 199 1 201 1 98 2 100 1 345 1 328 1 207 1 282 2 208 2 370 2 312 1 74 1 150 1 259 1 260 1 121 1 125 3 80 1 333 1 
2 1 165 1 338 1 298 1 339 1 138 1 43 1 169 1 125 1 134 1 
171 1 41 1 174 1 233 1 134 1 274 1 275 1 339 1 298 1 92 1 12 1 125 1 220 1 154 1 
171 2 174 1 43 1 233 1 134 1 274 1 275 1 165 1 138 1 339 1 298 1 92 2 12 1 125 1 220 1 
171 1 116 1 57 1 92 1 192 1 
171 2 116 1 271 1 57 1 92 2 12 1 209 1 220 1 
171 1 57 1 92 1 
171 1 116 1 2 1 43 1 131 1 134 1 338 1 165 1 298 1 138 1 339 1 92 1 169 1 125 1 
220 1 
107 1 171 2 116 1 57 1 92 2 12 1 209 1 220 1 
171 5 353 1 116 2 305 2 269 2 223 1 335 1 187 1 118 2 209 1 66 1 57 2 239 1 21 1 92 5 12 1 214 1 170 1 220 1 
199 1 281 1 
25 1 199 2 43 1 134 2 165 1 313 1 339 2 138 1 125 2 
158 1 147 1 224 1 
251 1 199 1 201 1 98 1 282 1 208 1 132 1 134 1 150 1 259 1 322 1 121 1 229 1 301 1 125 1 333 1 
201 1 98 1 147 1 43 1 282 1 132 1 208 1 134 2 150 1 210 1 259 1 56 1 165 1 339 1 322 1 121 1 229 1 301 1 125 2 333 1 
210 1 165 3 138 1 199 1 339 3 43 3 125 3 134 3 
2 1 165 1 298 1 339 1 43 1 125 1 134 1 
25 1 165 1 298 1 313 1 339 1 138 1 43 1 125 1 134 1 
25 1 85 1 321 1 43 3 132 1 5 1 134 4 135 2 274 1 245 1 275 1 165 3 338 1 322 1 138 2 339 3 298 1 229 1 92 1 301 1 230 1 171 1 199 1 201 1 174 1 98 1 345 1 233 1 207 1 282 1 208 1 370 1 284 1 74 1 312 1 150 1 210 1 259 1 56 1 260 1 121 1 125 4 80 1 333 1 
210 1 211 1 165 1 199 1 339 2 43 1 125 2 134 2 154 1 
25 1 171 1 156 1 174 1 43 3 233 1 134 3 5 1 274 1 275 1 210 2 56 1 165 3 138 1 298 1 339 3 92 1 125 3 220 1 
25 1 43 2 147 1 224 1 134 2 210 1 165 2 138 1 339 2 125 2 
199 1 201 1 98 1 282 1 208 1 132 1 134 1 150 1 259 1 322 1 121 1 229 1 301 1 125 1 333 1 
199 1 201 1 98 1 282 1 208 1 132 1 134 1 361 1 259 1 121 1 229 1 301 1 262 1 125 1 333 1 
85 1 318 1 158 2 4 1 358 1 224 2 135 2 245 1 8 1 11 1 230 1 69 1 194 1 50 1 147 2 100 2 345 1 207 2 370 4 314 1 260 1 215 1 289 1 80 1 
331 1 165 1 298 1 339 1 174 1 43 1 125 1 134 1 
25 1 199 1 145 1 43 4 204 1 134 5 210 2 211 1 165 4 56 1 339 5 138 1 125 5 154 1 
331 1 2 1 165 2 298 1 339 2 43 2 125 2 134 2 
58 1 177 1 
58 1 177 1 
196 1 310 1 
196 1 310 1 
196 1 310 1 
58 1 73 1 177 1 
58 1 177 1 70 1 
196 1 58 2 240 1 310 1 177 2 267 1 
58 1 73 1 177 1 
58 1 73 1 177 1 
58 1 302 1 177 1 
58 1 302 1 177 1 
58 1 302 1 177 1 
171 2 62 2 72 1 64 2 368 1 329 1 371 1 330 1 177 2 148 2 257 3 109 1 9 2 58 2 92 2 350 1 153 2 240 1 220 1 
62 1 64 1 43 2 27 1 90 1 134 2 189 1 165 2 9 1 339 2 92 1 299 1 70 1 171 1 199 1 172 1 202 1 177 1 257 1 58 1 350 1 153 1 125 2 241 1 
332 1 308 1 106 1 
332 1 323 1 308 1 
268 1 185 1 323 1 287 1 308 3 106 2 
268 1 364 1 323 1 287 1 308 2 106 1 
268 1 323 1 287 2 308 2 106 1 
353 2 2 1 269 1 43 1 358 1 88 1 131 1 134 1 65 3 91 1 47 1 363 1 137 1 165 1 338 1 298 1 339 1 138 1 110 1 92 5 12 1 13 2 69 1 169 1 50 1 171 5 116 4 305 1 202 1 118 1 205 2 209 1 57 1 239 3 21 1 215 1 217 2 264 1 125 1 220 2 
2 1 43 1 88 1 131 1 134 1 47 1 246 1 338 1 339 1 138 1 298 1 92 5 12 1 13 2 192 2 50 1 305 1 202 1 205 2 209 1 57 3 21 1 215 1 264 1 220 2 353 2 269 1 358 1 65 3 363 1 165 1 110 1 169 1 69 1 171 5 116 4 118 1 373 1 376 2 239 3 125 1 
353 2 2 1 269 1 223 1 43 1 358 1 88 1 131 1 134 1 91 1 65 3 47 1 363 1 137 1 165 1 338 1 298 1 339 1 138 1 92 3 12 1 13 2 169 1 69 1 50 1 171 3 116 2 305 1 202 1 118 1 205 2 239 3 215 1 217 1 125 1 264 1 220 2 
2 1 43 1 88 1 131 1 134 1 91 1 47 1 137 1 338 1 298 1 138 1 339 1 92 4 12 1 13 4 93 1 50 2 305 1 202 2 205 4 215 2 217 2 264 2 220 4 353 4 354 1 269 1 223 1 358 2 65 7 363 3 165 1 69 2 169 1 171 4 116 3 365 1 118 1 239 5 125 1 
121 1 281 1 78 1 
347 1 121 1 
84 1 
259 1 121 1 
149 1 259 1 121 3 191 1 78 2 132 1 
259 1 121 1 132 1 
121 1 234 1 
81 1 242 1 52 1 319 1 367 1 100 4 207 3 309 1 89 1 6 1 370 7 236 2 8 3 11 2 215 1 69 1 291 1 
81 1 242 1 52 1 319 1 367 1 100 4 207 3 309 1 89 1 6 1 370 7 236 2 8 3 11 2 215 1 69 1 291 1 
81 1 242 1 52 1 319 1 367 1 100 4 207 3 309 1 89 1 6 1 370 7 236 2 8 3 180 1 11 2 215 1 69 1 291 1 
81 1 242 5 85 1 319 2 296 1 356 1 89 1 358 3 6 2 28 1 135 2 163 4 8 10 340 1 11 5 112 1 230 1 69 4 115 1 50 3 52 2 367 1 203 3 100 16 345 1 207 15 309 2 370 31 236 3 215 4 264 3 291 1 80 1 351 1 
81 1 52 1 242 1 85 2 319 1 367 1 296 1 100 5 345 2 207 4 309 1 6 1 370 9 236 2 135 4 179 1 8 4 261 1 11 3 215 1 230 2 69 1 291 1 80 2 
221 1 42 1 355 2 185 1 186 1 334 1 272 1 106 1 360 1 276 1 10 2 323 1 15 1 142 1 326 1 71 1 252 1 201 1 98 1 175 1 308 2 282 1 37 1 208 1 258 1 374 1 238 1 332 1 333 1 155 1 
221 1 42 1 185 1 355 3 186 1 334 1 272 1 106 1 360 1 276 1 337 1 10 3 323 1 300 1 341 1 15 1 326 2 71 1 252 1 201 1 98 1 175 1 308 2 282 1 37 1 208 1 258 1 374 1 332 1 333 1 
42 1 221 1 355 2 185 1 186 1 334 1 106 1 276 1 337 1 10 2 323 1 341 1 15 1 326 2 252 1 201 1 98 1 308 2 282 1 37 1 208 1 258 1 374 1 332 1 333 1 
221 2 42 2 355 1 272 1 225 1 362 1 228 1 10 1 229 1 300 1 15 2 201 1 98 1 175 1 282 1 208 1 259 1 374 2 152 1 121 1 333 1 266 1 293 1 
221 1 42 1 355 1 185 1 186 1 334 1 272 1 106 1 360 1 337 1 10 1 323 1 15 1 142 1 71 1 252 1 201 1 98 1 175 1 308 2 282 1 208 1 374 1 332 1 333 1 155 1 
162 1 
1 2 41 1 243 2 336 1 133 1 134 1 47 1 339 1 298 1 48 1 92 5 248 1 12 1 143 2 305 1 201 1 98 2 208 2 209 3 259 1 57 6 21 1 349 4 220 2 154 1 61 2 353 2 269 1 65 2 274 1 362 1 363 2 228 1 275 1 108 2 229 2 31 1 278 1 171 5 366 1 174 1 327 2 35 2 369 1 118 1 233 1 282 2 283 1 121 1 77 1 239 2 125 1 183 1 292 1 333 1 
41 1 134 1 133 1 274 1 107 1 275 1 108 1 339 1 298 1 92 3 31 1 171 3 366 1 174 1 233 1 209 1 77 1 57 2 349 2 125 1 183 1 154 1 
41 1 61 1 134 1 133 1 274 1 107 1 275 1 339 1 298 1 92 3 12 1 31 1 171 3 366 1 174 1 233 1 209 1 57 1 77 1 349 3 125 1 183 1 220 1 154 1 
41 1 61 1 243 1 134 1 133 1 274 1 107 1 275 1 108 1 339 1 298 1 92 3 12 1 31 1 171 3 366 1 174 1 233 1 209 1 77 1 57 2 349 3 125 1 183 1 220 1 154 1 
0 1 41 1 1 2 243 4 336 1 134 1 133 1 298 1 339 1 92 5 12 5 304 1 143 2 344 1 198 1 305 1 209 3 57 7 21 1 349 6 220 5 154 1 61 4 353 1 269 1 274 1 107 1 275 1 363 2 108 4 31 1 232 1 171 5 174 1 366 1 327 2 233 1 118 1 35 2 77 1 239 1 125 1 183 1 292 1 
41 1 1 2 243 2 336 1 134 1 133 1 298 1 339 1 92 4 12 1 143 2 305 1 209 2 57 4 21 1 349 4 220 2 154 1 353 1 61 2 269 1 274 1 65 2 275 1 363 2 108 2 31 1 278 1 171 4 174 1 366 1 327 2 233 1 118 1 35 2 77 1 239 1 125 1 292 1 183 1 
61 2 1 2 353 1 41 1 269 1 243 2 336 1 134 1 133 1 274 1 363 2 275 1 108 2 339 1 298 1 92 4 12 1 31 1 304 1 143 2 344 1 171 4 305 1 198 1 366 1 174 1 327 2 35 2 233 1 118 1 209 2 57 4 77 1 239 1 21 1 349 4 125 1 292 1 183 1 220 1 154 1 
61 2 1 2 353 1 41 1 269 1 243 2 336 1 134 1 133 1 274 1 363 2 275 1 108 2 339 1 298 1 92 4 12 1 31 1 304 1 143 2 344 1 171 4 305 1 198 1 366 1 174 1 327 2 35 2 233 1 118 1 209 2 57 4 77 1 239 1 21 1 349 4 125 1 292 1 183 1 220 1 154 1 
26 1 61 2 1 2 353 1 41 1 269 1 243 2 336 1 134 1 133 1 65 2 274 1 161 1 275 1 108 2 339 1 298 1 92 4 12 1 31 1 344 1 171 4 305 1 366 1 174 1 53 2 35 2 233 1 118 1 209 2 237 2 256 1 57 4 77 1 239 1 21 1 349 4 125 1 183 1 220 1 154 1 
1 2 353 1 41 1 61 3 269 1 243 3 336 1 134 1 133 1 274 1 363 2 275 1 108 3 339 1 298 1 92 4 12 1 31 1 304 1 143 2 232 1 344 1 171 4 305 1 198 1 366 1 174 1 327 2 35 2 118 1 233 1 209 2 77 1 57 5 239 1 21 1 349 5 125 1 292 1 183 1 220 1 154 1 
1 2 353 1 41 1 61 3 269 1 243 3 336 1 134 1 133 1 274 1 363 2 275 1 108 3 339 1 298 1 92 4 12 1 31 1 304 1 143 2 232 1 344 1 171 4 305 1 198 1 366 1 174 1 327 2 35 2 118 1 233 1 209 2 77 1 57 5 239 1 21 1 349 5 125 1 292 1 183 1 220 1 154 1 
41 1 1 2 243 2 336 1 134 1 133 1 298 1 339 1 92 4 12 1 305 1 53 2 209 2 256 1 57 4 21 1 349 4 220 1 154 1 353 1 61 2 269 1 274 1 65 2 275 1 108 2 31 1 278 1 171 4 174 1 366 1 233 1 118 1 35 2 237 2 77 1 239 1 125 1 183 1 
81 1 52 1 199 2 85 1 158 1 367 1 147 1 100 3 345 1 281 1 207 3 224 1 370 6 6 1 236 1 135 2 245 1 8 2 314 1 260 1 11 2 215 1 230 1 69 1 80 1 291 1 
242 1 85 2 158 11 321 1 358 1 224 4 135 4 163 3 245 1 8 2 340 1 167 1 11 1 230 2 49 1 69 2 343 1 50 2 199 1 147 11 203 3 345 2 100 8 328 1 207 6 370 14 235 1 260 2 215 1 219 1 264 2 80 2 351 1 
85 1 43 1 321 1 132 1 224 1 134 2 135 2 245 1 165 1 322 1 339 1 229 1 301 1 230 1 49 1 193 1 231 1 251 1 199 1 201 1 98 1 345 1 100 1 282 1 207 1 328 1 208 1 370 2 150 1 210 1 259 1 56 1 121 1 260 1 213 1 125 2 80 1 333 1 
81 1 242 4 85 3 43 1 132 2 6 1 134 3 135 6 245 3 337 1 339 1 8 8 11 4 301 2 49 1 50 2 52 1 96 2 199 2 201 2 98 3 147 7 345 3 100 10 207 10 254 2 208 3 150 2 210 1 56 1 259 2 260 3 315 2 215 3 22 1 264 2 158 7 321 1 105 1 358 2 224 7 227 1 165 1 322 2 229 1 230 3 69 3 367 1 328 1 282 3 370 20 236 1 74 2 121 2 288 2 125 3 291 1 80 3 333 2 
157 1 128 1 85 2 270 2 43 1 321 1 134 1 135 4 46 1 362 1 245 2 228 1 337 1 165 1 339 1 229 2 230 2 117 1 201 2 98 8 345 2 100 1 282 8 328 1 207 1 255 1 208 7 54 1 370 2 210 1 259 2 238 1 314 1 212 1 121 3 260 2 125 1 80 2 333 2 
25 1 85 1 158 1 43 1 358 1 224 1 134 1 135 2 245 1 165 1 8 1 138 1 339 1 11 1 230 1 49 1 69 1 50 1 147 1 345 1 100 1 207 2 370 3 260 1 122 1 215 1 125 1 264 1 80 1 
242 1 85 1 318 1 158 1 147 1 345 1 100 2 224 1 370 2 135 2 245 1 8 1 314 1 260 1 230 1 69 1 80 1 50 1 
85 1 158 1 147 1 345 1 358 1 207 2 224 1 370 2 135 2 245 1 8 1 314 1 260 1 11 1 215 1 230 1 80 1 194 1 
242 1 85 1 158 2 358 1 224 2 135 2 245 1 8 2 11 1 230 1 69 1 50 1 147 2 100 2 345 1 207 2 370 4 314 1 260 1 215 1 264 1 80 1 
242 1 85 1 318 1 158 1 147 1 345 1 100 2 224 1 370 2 135 2 46 1 245 1 8 1 260 1 230 1 69 1 80 1 50 1 
85 1 158 1 147 1 345 1 358 1 207 2 224 1 370 2 135 2 46 1 245 1 8 1 260 1 11 1 215 1 230 1 80 1 194 1 
242 1 85 1 158 2 358 1 224 2 135 2 46 1 245 1 8 2 11 1 230 1 69 1 50 1 147 2 100 2 345 1 207 2 370 4 260 1 215 1 264 1 80 1 
242 1 85 1 158 2 358 1 224 2 135 2 245 1 8 2 11 1 230 1 69 1 50 1 147 2 100 2 345 1 207 2 370 4 260 1 215 1 264 1 80 1 
85 1 321 1 132 1 134 1 135 2 245 1 322 1 229 1 301 1 230 1 199 1 201 1 98 1 100 1 345 1 328 1 282 1 207 1 208 1 370 2 74 1 150 1 259 1 121 1 260 1 125 1 80 1 333 1 
85 1 321 1 132 1 134 1 361 1 135 2 245 1 229 1 301 1 230 1 199 1 201 1 98 1 100 1 345 1 328 1 282 1 207 1 208 1 370 2 259 1 121 1 260 1 377 1 262 1 125 1 80 1 333 1 
242 1 85 1 158 2 358 1 224 2 135 2 245 1 8 2 11 1 230 1 49 1 69 1 50 1 147 2 100 2 345 1 207 2 370 4 260 1 215 1 264 1 80 1 
242 1 85 1 158 2 358 1 224 2 132 1 134 1 135 2 245 1 8 2 322 1 11 1 301 1 230 1 69 1 50 1 96 1 201 1 98 1 147 2 100 2 345 1 207 2 282 1 208 1 370 4 74 1 150 1 259 1 238 1 121 1 260 1 215 1 125 1 264 1 80 1 333 1 
25 1 242 1 85 1 320 1 158 1 43 1 358 1 224 1 134 1 135 2 245 1 165 1 8 1 138 1 339 1 230 1 49 1 69 1 50 1 147 1 345 1 100 2 207 1 370 3 260 1 215 1 125 1 264 1 80 1 
242 3 85 2 159 2 358 3 135 4 297 2 163 2 8 6 340 1 11 3 168 1 230 2 324 1 69 3 250 1 50 3 200 1 203 1 306 1 345 2 100 9 207 10 370 19 38 1 261 1 215 3 263 1 264 3 80 2 351 1 
242 2 85 3 159 4 296 2 358 2 135 6 297 1 226 1 163 2 247 1 8 4 340 2 11 2 249 1 168 2 230 3 324 2 69 3 14 1 50 3 173 1 203 2 306 1 345 3 100 14 207 12 370 26 38 1 261 1 215 2 263 1 264 3 80 3 24 1 
81 1 242 4 85 3 159 4 296 1 358 4 6 1 135 6 297 1 226 1 163 4 247 1 8 8 340 3 11 4 249 1 168 1 230 3 324 2 69 5 14 1 50 4 52 1 200 1 173 1 367 1 203 3 306 1 345 3 100 20 207 21 370 41 236 1 38 1 261 1 215 5 290 1 263 1 264 4 291 1 24 1 80 3 351 1 
81 1 242 3 85 4 159 4 296 2 358 3 6 1 135 8 297 1 226 1 163 4 247 1 8 7 340 3 11 4 249 1 168 1 230 4 324 2 69 5 14 1 50 4 52 1 200 1 173 1 367 1 203 3 306 1 345 4 100 20 207 18 370 38 236 1 38 1 261 1 215 4 290 1 263 1 264 4 291 1 24 1 80 4 351 1 
81 1 242 7 85 2 159 4 296 1 358 7 6 1 135 4 297 1 226 1 163 4 247 1 8 14 340 2 11 7 249 1 168 1 230 2 324 1 69 8 14 1 50 7 52 1 173 1 367 1 203 4 306 1 345 2 100 27 207 25 370 52 236 1 38 1 261 1 215 8 263 1 219 2 264 7 291 1 24 1 80 2 351 2 
51 1 62 1 109 1 9 1 64 1 58 1 153 1 240 1 329 1 177 1 
90 1 70 1 
62 1 222 1 9 1 76 1 64 1 58 1 86 1 153 1 177 1 
171 1 62 1 72 1 64 1 368 1 329 1 330 1 177 1 148 1 257 2 109 1 9 1 58 1 350 1 92 1 153 1 240 1 220 1 
171 1 62 1 72 1 64 1 368 1 329 1 330 1 177 1 148 1 257 2 109 1 9 1 58 1 350 1 92 1 153 1 240 1 220 1 
171 1 62 1 72 1 64 1 368 1 329 1 330 1 177 1 148 1 257 2 109 1 9 1 58 1 350 1 92 1 153 1 240 1 220 1 
104 1 73 1 267 1 
104 1 73 1 267 1 
286 1 302 1 
286 1 302 1 267 1 
172 1 241 1 
62 1 295 1 64 1 43 2 27 1 90 1 134 2 189 1 165 2 9 1 339 2 92 1 299 1 70 1 171 1 116 1 199 1 72 1 172 1 202 1 177 1 148 1 257 1 58 1 153 1 125 2 241 1 
104 1 73 1 
286 1 302 1 267 1 
157 1 85 1 270 2 321 1 188 1 359 1 134 2 45 1 135 2 245 1 339 2 49 1 230 1 32 1 117 1 201 1 253 1 98 2 345 1 100 1 282 2 328 1 207 1 208 2 370 2 259 1 121 1 260 1 125 2 80 1 333 1 
184 1 185 1 252 1 201 1 98 2 334 1 308 2 282 2 208 2 106 1 360 1 337 1 374 1 238 1 332 1 323 1 59 1 333 1 378 1 
184 1 185 1 252 1 201 1 98 1 334 1 308 2 282 1 208 1 106 1 360 1 19 1 337 1 374 1 332 1 323 1 333 1 
201 1 98 1 282 1 208 1 362 1 228 1 259 1 374 1 121 1 229 1 141 1 333 1 378 1 293 1 
184 1 185 1 252 1 201 1 98 1 334 1 308 2 282 1 208 1 106 1 360 1 337 1 374 1 332 1 323 1 59 1 333 1 378 1 
294 1 
353 1 239 1 335 1 12 1 281 1 170 1 220 1 
353 1 269 1 65 1 363 1 92 1 12 1 143 1 171 1 305 1 327 1 118 1 209 1 57 1 239 1 21 1 292 1 220 2 
335 1 132 3 47 2 7 2 140 1 92 5 12 2 191 1 13 6 303 2 50 2 95 1 16 2 305 4 201 3 98 3 205 6 208 3 209 3 101 1 347 3 259 3 348 2 57 5 21 4 315 2 215 2 264 2 220 8 60 2 353 8 269 4 358 2 65 12 363 6 229 1 114 1 69 2 170 1 171 5 369 1 118 4 233 2 234 2 282 3 36 2 372 2 120 2 238 1 121 10 123 1 239 9 78 2 333 4 
353 5 269 2 358 2 65 6 47 1 226 1 163 1 363 3 247 1 340 1 92 1 12 2 13 5 69 2 14 1 50 2 16 1 171 1 305 2 173 1 203 1 369 1 118 2 205 5 209 1 372 2 57 1 239 8 21 2 215 2 216 1 124 1 264 2 24 1 220 5 
81 1 353 2 2 1 269 1 43 1 131 1 134 1 6 1 338 1 165 1 298 1 138 1 339 1 92 1 69 2 169 1 304 1 16 1 171 1 52 1 305 1 34 1 118 1 372 2 21 1 239 2 215 1 125 1 
353 1 305 1 269 1 335 1 118 1 21 1 239 1 12 1 170 1 220 1 
16 1 353 5 205 5 358 2 372 2 65 10 363 5 239 5 315 1 215 2 13 5 69 2 264 2 220 5 50 2 
171 1 57 1 92 1 12 1 209 1 220 1 
353 2 269 2 223 1 132 1 29 1 47 2 362 1 228 1 229 2 140 2 248 1 92 3 114 1 195 1 279 1 171 3 305 2 201 2 98 4 307 1 118 2 369 2 206 1 282 4 208 4 283 1 209 2 259 2 121 2 57 4 21 1 239 2 79 1 333 3 
85 1 321 1 43 2 132 1 134 3 135 2 245 1 165 2 338 1 339 2 138 2 322 1 229 1 301 1 230 1 199 1 201 1 98 1 345 1 207 1 282 1 208 1 370 1 312 1 74 1 150 1 259 1 121 1 260 1 125 3 80 1 333 1 
353 2 305 1 269 1 118 1 369 1 205 2 236 1 65 4 47 1 363 2 21 1 239 1 12 2 13 2 220 4 
9 1 64 1 44 1 
109 1 9 1 64 1 55 1 241 1 
9 1 64 1 44 1 
9 1 64 1 44 1 
40 1 9 1 64 1 
40 1 9 1 64 1 
40 1 9 1 64 1 
9 1 64 1 
58 1 177 1 
81 1 242 1 52 1 85 2 367 1 296 1 100 4 345 2 207 4 370 8 6 1 236 1 135 4 8 3 11 2 215 1 230 2 69 1 80 2 291 1 
81 1 52 1 367 1 100 3 281 1 207 3 6 1 370 6 236 1 8 2 11 2 215 1 69 1 291 1 
242 1 85 1 345 1 100 2 207 2 358 1 370 4 135 2 8 2 11 1 215 1 230 1 102 1 69 1 264 1 80 1 50 1 
242 1 203 1 100 3 358 1 207 4 370 7 163 2 8 2 340 1 11 1 215 1 69 1 264 1 351 1 50 1 
81 1 242 4 85 2 296 2 358 2 6 2 135 4 163 2 8 9 11 5 230 2 69 3 343 1 50 2 52 2 367 1 203 2 100 11 345 2 346 1 207 12 370 23 236 1 215 3 264 2 219 1 291 1 80 2 351 1 
163 1 207 1 370 1 
203 1 100 1 370 1 
242 1 85 1 345 1 100 3 207 3 358 1 370 6 135 2 8 3 11 2 315 1 215 1 230 1 102 1 69 1 264 1 80 1 50 1 
242 1 85 1 358 2 135 2 226 1 163 1 247 1 8 2 340 1 11 1 230 1 69 2 14 1 50 2 173 1 203 1 345 1 100 6 207 6 370 12 261 1 215 2 264 2 24 1 80 1 
81 1 242 1 52 1 8 2 11 1 100 3 215 1 207 3 69 1 6 1 370 6 
242 1 52 1 85 1 367 1 296 1 100 1 345 1 346 1 207 2 6 1 370 3 135 2 8 2 11 1 230 1 80 1 291 1 
81 1 52 2 242 2 85 1 345 1 100 5 34 1 207 5 6 2 370 10 135 2 8 5 261 1 11 3 215 2 230 1 69 2 80 1 
242 1 8 1 85 1 261 1 100 2 345 1 230 1 69 1 370 2 80 1 50 1 135 2 
242 1 85 1 345 1 100 2 207 2 358 1 370 4 135 2 8 2 261 1 11 1 215 1 230 1 69 1 264 1 80 1 50 1 
52 1 242 1 200 1 85 3 296 1 345 3 100 1 346 1 207 2 370 3 6 1 135 6 8 2 261 1 11 1 230 3 80 3 
81 2 242 5 85 5 296 2 356 1 358 3 6 3 28 1 135 10 163 4 8 12 340 1 11 7 230 5 69 5 115 1 50 3 52 3 200 1 367 1 203 3 345 5 100 16 346 1 207 18 370 34 236 1 261 1 215 5 102 1 264 3 291 1 80 5 351 1 
81 1 52 1 85 1 367 1 203 1 100 4 345 1 207 4 6 1 370 8 236 1 135 2 163 1 8 2 261 1 340 1 11 2 215 1 230 1 69 1 291 1 80 1 24 1 
81 1 242 1 85 2 6 1 135 4 163 2 8 3 340 1 11 2 230 2 69 2 50 1 52 1 367 1 203 1 345 2 100 6 207 5 370 11 236 1 261 1 215 1 102 1 264 1 291 1 24 1 80 2 351 1 
81 1 242 1 85 3 296 1 358 2 6 1 135 6 226 1 163 1 247 1 8 4 340 1 11 3 230 3 69 3 14 1 50 2 52 1 173 1 367 1 203 1 345 3 100 9 207 10 370 19 236 1 261 1 215 3 102 1 264 2 291 1 24 1 80 3 
81 1 242 2 85 3 296 1 358 1 6 1 135 6 226 1 163 1 247 1 8 5 340 1 11 3 230 3 69 3 14 1 50 2 52 1 173 1 367 1 203 1 345 3 100 10 207 7 370 17 236 1 261 1 215 2 102 1 264 2 291 1 24 1 80 3 
81 1 52 1 85 1 367 1 203 1 100 4 345 1 207 4 6 1 370 8 236 1 135 2 163 1 8 2 261 1 340 1 11 2 215 1 230 1 69 1 291 1 80 1 24 1 
242 1 85 1 358 2 135 2 226 1 163 1 247 1 8 2 340 1 11 1 230 1 69 2 14 1 50 2 173 1 203 1 345 1 100 6 207 6 370 12 261 1 215 2 264 2 24 1 80 1 
81 1 242 2 85 4 296 2 358 1 6 1 135 8 226 1 163 1 247 1 8 5 340 1 11 3 230 4 69 3 14 1 50 2 52 1 173 1 367 1 203 1 345 4 100 10 207 8 370 18 236 1 261 1 215 2 102 1 264 2 291 1 24 1 80 4 
242 3 85 4 296 2 358 2 135 8 226 1 163 1 247 1 8 6 340 1 11 3 230 4 69 3 14 1 50 3 200 1 173 1 203 1 345 4 100 9 207 7 370 16 261 1 215 2 264 3 24 1 80 4 
81 1 52 3 242 3 367 2 100 3 207 4 370 7 6 3 8 6 11 3 215 1 69 1 291 1 
81 1 242 1 85 4 296 2 358 1 6 1 135 8 226 1 163 1 247 1 8 4 340 1 11 3 230 4 69 3 14 1 50 2 52 1 200 1 173 1 367 1 203 1 345 4 100 10 207 8 370 18 236 1 261 1 215 2 264 2 291 1 24 1 80 4 
211 1 199 1 339 1 125 1 18 1 134 1 154 1 
352 1 82 1 197 1 199 1 18 1 134 1 190 1 211 1 151 1 339 1 125 1 154 1 
362 1 228 1 259 1 201 1 121 1 98 1 229 1 281 1 282 1 208 1 333 1 
199 1 201 1 98 1 43 1 282 1 132 1 208 1 134 2 150 1 210 1 259 1 165 1 339 1 121 1 229 1 301 1 125 2 333 1 
199 1 174 1 201 1 98 1 43 1 234 1 282 1 132 2 208 1 134 2 150 1 7 1 275 1 210 1 259 2 165 2 298 1 339 2 121 3 140 1 301 1 125 2 333 1 
199 1 174 1 201 1 98 2 43 1 234 1 282 2 132 2 208 2 134 2 361 1 7 1 275 1 210 1 259 2 165 2 298 1 339 2 121 3 140 1 301 1 125 2 103 1 333 1 
171 2 201 1 98 3 233 1 234 1 282 3 132 1 208 3 7 1 347 1 259 1 139 1 121 4 57 1 229 1 92 2 140 1 12 1 68 1 78 1 103 1 220 1 333 1 
171 2 201 1 98 3 233 1 234 1 282 3 132 1 208 3 7 1 347 1 259 1 121 4 57 1 229 1 92 2 140 1 12 1 78 1 103 1 220 1 333 1 60 1 
201 1 98 1 282 1 208 1 54 1 333 1 
279 1 157 1 128 1 270 1 201 2 98 7 307 1 282 7 160 1 255 1 208 6 132 1 54 1 337 1 259 2 238 1 212 1 121 3 229 2 191 1 333 3 
81 1 85 2 43 1 132 1 134 2 6 1 135 4 245 2 339 1 8 2 11 2 301 1 49 1 96 1 52 1 199 2 253 1 201 1 98 1 147 1 345 2 100 3 254 1 207 3 208 1 150 1 210 1 259 1 260 2 215 1 158 1 224 1 165 1 322 1 230 2 69 1 367 1 282 1 370 6 236 1 74 1 238 1 121 1 125 2 80 2 291 1 333 1 
353 1 269 2 335 1 229 1 92 3 12 1 114 1 170 1 171 3 116 1 305 2 98 1 118 2 233 1 282 1 36 1 208 1 209 1 120 1 347 1 348 1 121 2 57 2 239 1 21 2 78 1 220 1 60 1 
201 1 98 2 282 2 208 2 132 1 54 1 259 1 238 1 121 2 123 1 191 1 78 1 333 2 
201 1 98 4 282 4 208 4 362 1 228 1 259 1 238 1 121 1 229 1 111 1 103 1 333 1 
195 1 279 1 201 1 98 2 307 1 282 2 208 2 132 1 227 1 259 1 121 1 140 1 79 1 333 2 
252 1 201 1 98 1 332 1 323 1 229 1 308 1 282 1 208 1 333 1 
157 1 201 1 98 2 282 2 208 2 359 1 337 1 259 1 238 1 121 1 333 1 
157 1 201 2 98 5 282 5 208 4 255 1 362 1 228 1 259 2 238 1 212 1 121 3 229 1 111 1 140 1 333 2 
97 1 157 1 201 2 98 5 282 5 208 4 255 1 362 1 228 1 259 2 238 1 121 3 229 1 111 1 140 1 333 2 
199 1 201 1 98 1 43 1 282 1 132 1 208 1 134 2 361 1 210 1 259 1 165 1 339 1 121 1 229 1 301 1 125 2 333 1 
279 1 201 1 98 1 307 1 282 1 160 1 208 1 132 1 259 1 121 1 140 1 191 1 333 2 
317 1 164 1 199 1 17 1 23 1 
171 2 317 2 116 1 199 1 174 1 233 1 17 2 5 1 274 1 244 1 275 1 285 1 164 1 298 1 92 2 12 1 23 2 220 1 265 1 
32 1 17 1 188 1 134 1 45 1 164 1 339 1 23 1 125 1 
244 1 285 1 164 1 
276 1 258 1 281 1 37 1 
276 1 258 1 10 1 355 1 175 1 272 1 37 1 
42 1 10 1 15 1 
355 1 146 1 99 1 280 1 175 1 272 1 37 1 258 1 10 1 155 1 
326 1 276 1 258 1 166 1 10 2 355 2 175 1 272 1 37 1 
144 1 276 1 10 1 355 1 332 1 175 1 308 1 272 1 316 1 106 1 155 1 
276 1 10 1 355 1 175 1 272 1 37 1 155 1 
258 1 10 1 355 1 175 1 272 1 37 2 155 1 
83 1 355 2 129 1 175 2 272 2 37 1 276 1 10 2 375 1 155 1 
326 2 355 3 175 1 272 1 37 1 276 2 258 1 10 3 20 1 277 1 342 1 316 1 155 1 
326 1 355 2 185 1 175 1 308 2 272 1 37 1 106 1 276 1 258 1 10 2 323 1 332 1 181 1 155 1 
326 2 355 4 175 2 272 2 37 1 136 1 276 2 258 1 10 4 166 1 277 1 316 1 155 1 
276 1 258 1 10 1 355 1 175 1 272 1 37 1 155 1 
326 2 355 3 99 1 146 2 280 1 175 1 272 1 37 2 276 2 258 2 10 3 277 1 316 1 
355 1 63 1 146 1 175 1 272 1 37 1 178 1 258 1 10 1 218 1 155 1 
355 1 146 1 99 1 175 1 272 1 37 1 311 1 258 1 10 1 155 1 
276 2 3 1 33 1 357 2 
10 1 355 1 175 1 272 1 30 1 155 1 
326 1 276 1 258 1 10 2 355 2 175 1 342 1 272 1 37 1 155 1 
325 1 
276 1 258 1 10 1 355 1 175 1 272 1 37 1 155 1 
326 1 276 1 258 1 10 3 355 3 130 1 175 1 342 1 272 1 37 1 155 1 
276 1 146 1 277 1 316 1 
276 1 37 1 

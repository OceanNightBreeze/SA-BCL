#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) (61,211) (61,211) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) (61,211) (61,211) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) (61,211) (61,211) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) (61,211) (61,211) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 38 (26,96,204,344) 157 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) 230 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 38 325 (187,299) 230 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (170,348) 216 298 (283,361) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (170,348) 216 298 (283,361) (283,361) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (170,348) 216 298 (283,361) (283,361) 324 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 38 (26,96,204,344) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 38 325 354 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 38 325 314 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 38 325 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 1 325 1 147 1 220 1 138 1 118 2 197 1 65 1 125 2 291 3 365 1 296 3 299 1 269 1 186 1 211 1 187 1 48 1 61 1 301 2 
38 1 325 1 147 1 220 1 138 1 118 2 197 1 65 1 125 2 291 3 365 1 296 3 299 1 269 1 186 1 211 1 187 1 48 1 61 1 301 2 
38 1 325 1 147 1 220 1 138 1 118 2 197 1 65 1 125 2 291 3 365 1 296 3 299 1 269 1 186 1 211 1 187 1 48 1 61 1 301 2 
38 1 325 1 147 1 220 1 138 1 118 2 197 1 65 1 125 2 291 3 365 1 296 3 299 1 269 1 186 1 211 1 187 1 48 1 61 1 301 2 
291 2 125 1 26 1 296 2 38 1 200 1 147 1 99 1 48 1 157 1 118 1 197 1 
220 1 76 1 118 1 46 1 197 1 65 1 125 1 291 2 296 2 365 1 209 1 186 1 48 1 318 1 301 1 72 1 
291 2 125 2 296 2 38 1 325 1 147 1 187 1 48 1 118 2 197 1 301 1 
96 1 38 1 325 1 147 1 118 2 197 1 125 2 291 3 296 3 230 1 200 1 187 1 48 1 301 1 
96 1 38 1 325 1 147 1 118 2 197 1 125 2 291 3 296 3 230 1 200 1 187 1 48 1 301 1 
27 1 21 1 162 1 
165 1 21 1 237 2 
78 2 298 1 195 2 353 2 170 2 106 2 31 1 216 2 
97 1 20 1 195 3 358 2 170 2 359 2 276 1 327 1 329 1 330 1 152 1 333 1 78 2 298 1 79 1 82 2 340 1 305 1 44 1 262 1 310 1 106 2 31 1 107 1 64 1 374 1 141 2 12 1 352 1 353 3 35 1 143 2 50 1 320 1 94 1 188 1 216 2 
361 1 298 1 170 1 216 1 
0 1 1 1 27 1 51 1 195 1 235 1 21 1 106 1 109 1 183 1 174 1 353 1 142 1 155 1 
1 1 27 1 51 2 195 1 235 1 21 1 170 1 106 1 109 1 174 2 78 1 353 1 142 1 155 1 216 1 
174 1 51 1 234 1 218 1 372 1 
27 1 174 2 51 2 234 1 277 1 372 1 21 1 129 1 
174 1 51 1 372 1 
361 1 174 1 51 1 234 1 283 1 298 1 170 1 216 1 
21 1 
27 1 174 2 51 2 234 1 273 1 372 1 21 1 129 1 
371 1 202 2 27 1 234 2 51 5 252 1 372 2 21 1 101 1 66 1 290 1 174 5 10 1 69 2 350 1 292 2 129 1 130 1 271 1 
31 1 162 1 
195 2 170 1 106 2 31 2 313 1 78 1 353 2 178 1 216 1 
243 1 153 1 289 1 
20 1 262 1 195 1 31 1 64 1 374 1 330 1 141 1 79 1 12 1 166 1 353 1 143 1 82 1 50 1 188 1 
73 1 20 1 262 1 195 2 170 1 106 1 374 1 64 1 289 1 330 1 78 1 141 1 380 1 12 1 79 1 353 2 143 1 82 1 50 1 188 1 
0 1 73 2 39 1 132 1 146 1 195 5 170 4 106 5 31 1 78 4 380 1 353 5 178 1 216 1 
78 2 195 2 142 1 353 2 170 2 106 2 348 1 2 1 
73 1 78 3 195 3 353 3 170 3 106 3 31 1 216 1 
78 1 195 1 142 1 353 1 170 1 106 1 2 1 
313 1 78 1 195 1 142 1 353 1 170 1 106 1 216 1 178 1 
73 1 1 1 51 1 20 1 97 1 195 4 358 1 170 3 359 2 276 1 327 1 330 1 174 1 333 1 78 3 298 1 79 1 155 1 156 1 82 1 178 1 340 1 262 1 235 1 137 1 310 1 106 3 31 1 107 1 374 1 64 1 109 1 141 1 380 1 12 1 352 1 353 4 142 1 143 1 50 1 320 1 188 1 94 1 216 2 
0 1 73 1 78 1 39 1 195 2 353 2 170 1 106 2 31 1 
1 1 73 2 51 1 28 1 195 3 235 1 21 1 170 3 137 1 106 3 109 1 174 1 78 3 380 1 142 1 353 3 155 1 216 1 178 1 
73 1 195 2 170 2 106 2 289 1 243 1 78 2 353 2 178 1 216 1 
20 1 262 1 195 1 31 1 64 1 374 1 330 1 141 1 79 1 12 1 353 1 143 1 82 1 50 1 188 1 
20 1 53 1 262 1 195 1 265 1 31 1 374 1 330 1 141 1 79 1 12 1 353 1 143 1 82 1 50 1 
358 4 224 1 359 2 225 1 121 1 276 1 327 1 58 1 333 1 153 2 60 1 340 1 44 2 307 1 310 1 238 1 107 2 289 2 243 2 352 1 91 1 95 1 217 1 272 1 
109 1 78 1 195 1 142 1 353 1 170 1 106 1 348 1 
248 1 198 1 
248 1 198 1 
17 1 81 1 
17 1 81 1 
17 1 81 1 
248 1 115 1 198 1 
248 1 180 1 198 1 
17 1 248 2 207 1 81 1 198 2 16 1 
248 1 115 1 198 1 
248 1 115 1 198 1 
37 1 248 1 198 1 
37 1 248 1 198 1 
37 1 248 1 198 1 
248 1 51 1 18 1 251 1 195 2 326 1 170 2 221 1 198 1 174 1 4 1 78 2 102 1 131 1 203 1 282 1 285 1 180 1 135 1 264 1 106 2 31 1 86 1 353 2 
281 1 322 1 131 2 248 2 51 2 251 3 135 2 21 1 136 1 45 1 221 2 198 2 240 2 174 2 4 1 86 2 232 1 259 1 16 1 
365 1 269 1 65 1 
365 1 76 1 65 1 
365 3 269 2 76 1 233 1 93 1 15 1 
365 2 269 1 76 1 127 1 93 1 15 1 
365 2 269 1 76 1 93 2 15 1 
51 5 252 2 21 2 224 1 174 5 334 2 102 1 129 1 60 1 202 1 371 3 103 2 234 4 27 1 306 1 285 1 263 1 372 1 264 1 237 3 69 1 10 1 244 1 292 1 165 1 212 1 168 1 91 1 90 1 49 2 95 1 319 1 
51 9 218 5 252 6 21 5 22 1 224 3 172 1 331 1 174 9 129 1 60 3 338 5 202 2 371 8 103 6 234 7 27 1 306 3 263 2 372 6 264 4 237 9 345 1 349 1 66 1 10 1 69 2 292 2 165 3 212 1 91 3 49 6 95 3 317 1 319 2 
51 3 252 2 21 3 224 1 174 3 334 1 60 1 202 1 371 3 27 1 234 2 103 2 306 1 263 1 264 1 237 4 66 1 69 1 244 1 292 1 165 2 90 1 91 1 49 2 319 1 95 1 
51 4 252 4 21 4 224 2 172 1 174 4 334 2 60 2 202 1 371 5 27 1 103 4 234 3 306 2 263 1 264 2 237 7 345 1 349 1 66 1 69 1 244 1 292 1 165 3 90 1 91 2 49 4 319 1 95 2 
249 1 50 1 162 1 
160 1 50 1 
279 1 
12 1 79 1 50 1 
208 1 50 1 
12 1 50 1 
249 2 12 1 79 1 210 1 50 3 370 1 
104 1 192 1 44 1 358 1 225 2 311 1 70 1 231 1 154 1 213 1 316 1 381 1 272 1 
104 1 192 1 44 1 358 1 225 2 311 1 70 1 231 1 154 1 213 1 316 1 381 1 272 1 
104 1 192 1 44 1 358 1 225 2 311 1 68 1 70 1 231 1 154 1 213 1 316 1 381 1 272 1 
294 4 192 2 358 25 149 1 359 2 225 9 224 3 119 1 276 1 333 1 231 1 154 2 175 1 60 3 158 1 340 1 104 1 306 3 44 13 286 3 284 1 107 12 311 5 11 1 70 2 34 1 352 1 213 2 91 3 316 2 381 1 95 3 272 4 
340 2 104 1 192 1 44 2 358 3 225 3 359 4 107 1 328 1 276 2 311 1 70 1 333 2 154 1 175 1 352 2 213 1 316 1 381 1 261 1 272 2 
77 1 76 1 118 1 197 1 256 1 25 1 360 1 332 1 330 1 125 1 296 2 365 2 200 1 366 1 233 1 82 1 301 1 302 1 288 1 374 1 65 1 267 1 291 2 141 1 209 1 269 1 48 1 89 1 143 1 72 1 
77 1 76 1 118 1 360 1 332 1 330 1 125 1 296 3 257 1 365 2 200 2 366 1 233 1 82 1 260 1 301 1 302 1 288 1 374 1 65 1 267 1 291 3 141 1 376 1 209 1 269 1 48 1 89 1 143 1 72 1 
77 1 76 1 360 1 332 1 330 1 296 2 257 1 365 2 200 2 366 1 233 1 82 1 301 1 374 1 267 1 65 1 291 2 141 1 376 1 209 1 269 1 48 1 89 1 143 1 72 1 
323 1 145 1 169 1 63 1 262 1 133 1 77 2 222 1 118 1 374 1 360 2 330 1 125 1 291 1 296 1 141 1 12 1 89 2 143 1 82 1 50 1 260 1 301 2 
77 1 76 1 118 1 197 1 256 1 360 1 332 1 330 1 125 1 296 1 365 2 366 1 233 1 82 1 301 1 302 1 288 1 374 1 65 1 267 1 291 1 141 1 376 1 269 1 89 1 143 1 
250 1 
0 1 1 1 113 1 222 1 40 1 123 1 174 5 330 1 41 1 129 3 82 2 339 1 287 1 84 2 235 1 237 2 85 1 183 1 10 1 141 2 292 1 12 1 353 1 142 1 143 2 245 2 293 2 50 1 51 5 194 2 252 2 195 1 196 2 21 2 255 2 100 1 362 4 201 1 155 1 371 2 202 1 27 1 63 1 263 1 262 2 372 6 308 1 106 1 374 1 32 1 163 1 109 1 69 1 71 2 165 2 
0 1 1 1 51 3 113 1 273 1 195 1 123 1 174 3 362 2 201 1 155 1 129 1 339 1 235 1 372 2 106 1 163 1 109 1 183 1 71 1 353 1 142 1 
0 1 1 1 51 3 113 1 273 1 194 1 195 1 21 1 123 1 174 3 362 3 201 1 155 1 129 1 339 1 27 1 372 1 235 1 106 1 163 1 109 1 183 1 353 1 142 1 
0 1 1 1 51 3 273 1 113 1 194 1 195 1 21 1 123 1 174 3 362 3 201 1 129 1 155 1 339 1 27 1 235 1 372 2 106 1 163 1 109 1 183 1 71 1 353 1 142 1 245 1 
0 1 1 1 51 5 113 1 273 1 98 1 274 1 194 4 252 1 195 1 196 2 21 5 255 2 40 1 123 1 174 5 362 6 201 1 129 3 155 1 371 1 202 1 339 1 27 5 287 1 84 2 372 7 235 1 106 1 163 1 109 1 183 1 69 1 10 1 71 4 292 1 165 2 315 1 353 1 142 1 13 1 92 1 293 2 245 4 
1 1 0 1 113 1 40 1 123 1 174 4 129 2 339 1 287 1 235 1 84 2 237 2 183 1 10 1 292 1 142 1 353 1 293 2 245 2 51 4 194 2 252 1 195 1 196 2 21 2 255 2 362 4 201 1 155 1 202 1 371 1 27 1 372 4 106 1 163 1 32 1 109 1 69 1 71 2 165 2 
0 1 1 1 51 4 113 1 98 1 194 2 252 1 195 1 196 2 21 1 255 2 40 1 123 1 174 4 362 4 201 1 129 2 155 1 371 1 339 1 202 1 27 1 287 1 372 4 84 2 235 1 106 1 163 1 109 1 183 1 10 1 69 1 71 2 292 1 165 2 315 1 353 1 142 1 92 1 245 2 293 2 
0 1 1 1 51 4 113 1 98 1 194 2 252 1 195 1 196 2 21 1 255 2 40 1 123 1 174 4 362 4 201 1 129 2 155 1 371 1 339 1 202 1 27 1 287 1 372 4 84 2 235 1 106 1 163 1 109 1 183 1 10 1 69 1 71 2 292 1 165 2 315 1 353 1 142 1 92 1 245 2 293 2 
0 1 1 1 51 4 191 1 113 1 194 2 275 2 252 1 195 1 21 1 255 2 40 1 171 1 123 1 174 4 362 4 201 1 368 1 129 2 155 1 303 2 371 1 339 1 202 1 27 1 372 4 235 1 237 2 106 1 163 1 109 1 183 1 10 1 69 1 71 2 292 1 315 1 353 1 142 1 245 2 293 2 
0 1 1 1 51 4 113 1 98 1 274 1 194 3 252 1 195 1 196 2 21 1 255 2 40 1 123 1 174 4 362 5 201 1 129 2 155 1 371 1 202 1 339 1 27 1 287 1 84 2 235 1 372 5 106 1 163 1 109 1 183 1 69 1 10 1 71 3 292 1 165 2 315 1 353 1 142 1 92 1 293 2 245 3 
0 1 1 1 51 4 113 1 98 1 274 1 194 3 252 1 195 1 196 2 21 1 255 2 40 1 123 1 174 4 362 5 201 1 129 2 155 1 371 1 202 1 339 1 27 1 287 1 84 2 235 1 372 5 106 1 163 1 109 1 183 1 69 1 10 1 71 3 292 1 165 2 315 1 353 1 142 1 92 1 293 2 245 3 
1 1 0 1 113 1 275 2 40 1 123 1 174 4 129 2 339 1 235 1 237 2 183 1 10 1 292 1 142 1 353 1 293 2 245 2 51 4 194 2 252 1 195 1 21 1 255 2 362 4 201 1 368 1 155 1 303 2 202 1 371 1 27 1 372 4 106 1 163 1 32 1 109 1 69 1 71 2 
340 1 104 1 192 1 310 1 225 1 359 2 162 1 327 1 276 1 58 1 333 1 352 1 316 1 381 1 272 1 
294 3 193 1 116 1 358 14 225 2 359 4 224 1 276 2 327 1 152 1 333 2 153 11 335 1 128 1 60 1 340 2 306 2 44 8 286 3 310 2 31 1 107 6 289 11 311 1 243 4 11 1 352 2 34 1 167 1 91 2 320 1 95 2 272 1 
73 1 20 1 193 1 195 2 358 2 170 1 359 2 226 1 23 1 276 1 327 1 330 1 78 1 333 1 152 1 79 1 82 1 340 1 44 1 262 1 310 1 106 1 31 1 374 1 64 1 107 1 47 1 243 1 141 1 380 1 12 1 166 1 352 1 353 2 143 1 50 1 188 1 320 1 
73 1 170 1 225 7 224 2 327 3 276 3 330 2 229 1 333 3 78 1 79 2 278 2 82 3 340 3 44 7 140 1 289 6 243 6 141 3 12 2 352 3 353 3 143 3 91 2 50 2 94 2 188 2 95 2 247 1 192 1 20 2 193 1 195 3 358 14 359 6 152 1 153 6 60 2 104 1 306 2 262 1 310 3 106 1 107 7 64 2 374 2 311 4 376 1 379 2 380 1 214 2 316 1 381 1 320 1 272 3 321 2 
73 1 190 1 195 1 74 1 358 2 170 1 222 1 359 4 25 1 276 2 327 2 58 1 330 2 3 1 78 1 333 2 152 1 258 1 82 8 340 2 305 2 44 1 262 2 63 1 346 1 139 1 310 2 106 1 374 2 107 1 376 1 141 7 378 1 12 2 352 2 353 1 143 8 50 3 320 1 
193 1 195 1 358 3 170 1 225 1 359 2 224 1 276 1 327 1 333 1 78 1 153 1 60 1 178 1 340 1 306 1 44 1 310 1 106 1 107 2 289 1 243 1 164 1 352 1 353 1 91 1 95 1 216 1 272 1 
340 1 44 2 358 2 310 1 238 1 225 1 359 2 289 1 327 1 276 1 58 1 311 1 243 1 333 1 153 1 352 1 91 1 95 1 
340 1 307 1 358 2 310 1 225 1 359 2 224 1 107 2 289 1 327 1 276 1 58 1 243 1 333 1 153 1 352 1 60 1 272 1 
358 4 359 2 225 2 224 1 276 1 327 1 58 1 333 1 153 2 60 1 340 1 306 1 44 2 310 1 107 2 289 2 311 1 243 2 352 1 91 1 95 1 272 1 
340 1 190 1 44 2 358 2 310 1 238 1 225 1 359 2 289 1 327 1 276 1 311 1 243 1 333 1 153 1 352 1 91 1 95 1 
340 1 190 1 307 1 358 2 310 1 225 1 359 2 224 1 107 2 289 1 327 1 276 1 243 1 333 1 153 1 352 1 60 1 272 1 
190 1 358 4 359 2 225 2 224 1 276 1 327 1 333 1 153 2 60 1 340 1 306 1 44 2 310 1 107 2 289 2 311 1 243 2 352 1 91 1 95 1 272 1 
358 4 359 2 225 2 224 1 276 1 327 1 333 1 153 2 60 1 340 1 306 1 44 2 310 1 107 2 289 2 311 1 243 2 352 1 91 1 95 1 272 1 
20 1 195 1 358 2 359 2 327 1 276 1 330 1 152 1 333 1 79 1 82 1 340 1 44 1 262 1 310 1 31 1 374 1 64 1 107 1 141 1 12 1 352 1 353 1 143 1 50 1 188 1 94 1 320 1 
20 1 53 1 195 1 358 2 359 2 327 1 276 1 330 1 152 1 333 1 79 1 82 1 340 1 44 1 262 1 265 1 310 1 239 1 31 1 374 1 107 1 141 1 12 1 352 1 353 1 143 1 50 1 320 1 
193 1 358 4 359 2 225 2 224 1 276 1 327 1 333 1 153 2 60 1 340 1 306 1 44 2 310 1 107 2 289 2 311 1 243 2 352 1 91 1 95 1 272 1 
20 1 195 1 358 4 224 1 225 2 359 2 25 1 327 1 276 1 330 1 333 1 153 2 79 1 82 1 60 1 340 1 306 1 44 2 310 1 107 2 374 1 64 1 289 2 311 1 243 2 141 1 12 1 352 1 353 1 91 1 143 1 50 1 95 1 188 1 94 1 272 1 321 1 
193 1 195 1 358 3 170 1 224 1 225 1 359 2 276 1 327 1 333 1 78 1 153 1 60 1 178 1 340 1 306 1 44 2 310 1 106 1 107 1 289 1 311 1 243 1 352 1 353 1 91 1 95 1 216 1 246 1 
294 2 358 19 359 4 225 6 224 3 276 2 328 1 333 2 60 3 43 1 177 1 340 2 306 3 7 1 44 9 286 1 205 1 342 1 343 1 107 10 67 2 110 1 311 3 11 1 268 2 352 2 34 1 91 3 95 3 272 3 
189 1 294 2 52 1 253 1 358 26 225 4 359 6 224 2 276 3 328 1 122 1 333 3 175 2 60 2 43 2 177 1 340 3 159 1 306 3 7 1 44 14 286 2 205 2 343 1 107 12 347 1 67 1 311 2 11 2 268 4 352 3 91 3 95 3 272 2 
224 4 225 7 328 1 276 3 122 1 333 3 175 1 43 2 177 1 340 3 44 17 7 1 286 3 342 1 343 1 347 1 11 3 352 3 91 4 95 4 189 1 294 4 192 1 52 1 253 1 358 36 359 6 369 1 60 4 159 1 306 4 104 1 205 1 107 19 311 4 67 1 268 4 34 1 316 1 381 1 272 3 
224 3 225 7 328 1 276 4 122 1 333 4 175 2 43 2 177 1 340 4 44 17 7 1 286 3 342 1 343 1 347 1 11 3 352 4 91 4 95 4 189 1 294 4 192 1 52 1 253 1 358 33 359 8 60 3 369 1 159 1 306 4 104 1 205 1 107 16 311 3 67 1 268 4 34 1 316 1 381 1 272 4 
189 1 294 4 192 1 52 1 253 1 358 47 359 4 225 13 224 7 122 1 276 2 328 1 333 2 175 1 128 2 60 7 43 1 177 1 159 1 340 2 104 1 306 7 7 1 44 24 286 4 205 1 343 1 107 23 347 1 67 1 311 7 11 2 268 4 352 2 34 2 91 7 316 1 381 1 95 7 272 6 
281 1 131 1 248 1 86 1 236 1 135 1 45 1 221 1 198 1 16 1 
18 1 180 1 
131 1 248 1 86 1 181 1 135 1 161 1 221 1 198 1 144 1 
115 1 182 1 
37 1 59 1 207 1 
281 1 322 1 131 1 51 1 248 1 251 2 135 1 21 1 136 1 45 1 221 1 198 1 240 1 174 1 4 1 86 1 259 1 16 1 
281 1 322 1 131 1 51 1 248 1 251 2 135 1 21 1 136 1 45 1 221 1 198 1 240 1 174 1 4 1 86 1 259 1 16 1 
281 1 322 1 131 1 51 1 248 1 251 2 135 1 21 1 136 1 45 1 221 1 198 1 240 1 174 1 4 1 86 1 259 1 16 1 
115 1 207 1 182 1 
115 1 207 1 182 1 
37 1 59 1 
37 1 59 1 207 1 
203 1 326 1 
51 1 248 1 18 1 251 1 195 2 326 1 117 1 221 1 170 2 198 1 174 1 78 2 102 1 259 1 131 1 203 1 234 1 282 1 285 1 180 1 135 1 264 1 106 2 31 1 240 1 86 1 353 2 
19 1 193 1 195 2 74 1 358 2 359 2 327 1 276 1 330 1 151 1 333 1 152 1 300 1 336 1 82 2 340 1 305 2 44 1 8 1 310 1 106 2 374 1 107 1 141 2 378 1 12 1 352 1 353 2 143 2 50 1 320 1 
355 1 76 1 374 1 65 1 25 1 330 1 332 1 365 2 376 1 141 2 184 1 366 1 269 1 185 1 233 1 143 2 89 1 82 2 302 1 
355 1 76 1 374 1 65 1 57 1 332 1 330 1 365 2 376 1 141 1 366 1 269 1 233 1 143 1 89 1 82 1 302 1 
169 1 262 1 63 1 222 1 374 1 330 1 141 1 184 1 12 1 143 1 89 1 111 1 82 1 50 1 
355 1 76 1 374 1 65 1 332 1 330 1 365 2 376 1 141 1 184 1 366 1 269 1 185 1 233 1 143 1 89 1 82 1 302 1 
199 1 
371 1 27 1 252 1 21 1 101 1 162 1 130 1 
51 1 252 1 196 1 21 2 174 1 129 1 371 1 202 1 27 1 287 1 84 1 372 1 237 1 69 1 10 1 292 1 165 1 
1 2 219 2 223 1 224 2 330 3 174 5 126 1 79 3 278 2 82 3 129 3 130 1 6 2 341 1 237 12 242 2 10 4 141 3 292 4 12 3 351 2 143 3 91 2 49 6 50 10 95 2 249 2 51 5 252 8 21 8 101 1 25 1 364 2 60 2 371 9 202 4 27 2 62 2 103 6 306 2 263 2 160 3 262 1 372 5 308 1 29 1 373 2 374 4 208 2 69 4 377 2 210 1 165 6 270 1 
189 1 51 1 294 1 252 5 253 1 21 5 224 2 122 1 173 1 174 1 129 1 60 2 371 8 202 2 159 1 304 1 62 2 103 5 27 2 306 2 286 1 263 1 372 1 308 1 237 6 373 1 347 1 69 2 10 2 11 1 292 2 165 3 91 2 49 5 95 2 
371 2 202 1 51 1 62 2 192 1 283 1 98 1 252 1 324 1 170 1 361 1 312 1 174 1 10 1 69 1 298 1 292 1 91 1 316 1 60 1 216 1 
202 1 371 1 27 1 252 1 21 1 101 1 10 1 69 1 292 1 130 1 
371 5 62 2 103 5 306 2 252 5 237 10 21 5 373 1 224 2 278 1 165 5 91 2 49 5 60 2 95 2 
27 1 174 1 51 1 372 1 21 1 129 1 
51 3 252 2 222 1 223 1 330 1 174 3 41 1 297 1 82 4 129 2 5 1 202 2 371 2 262 2 263 2 63 1 372 4 308 2 85 1 374 1 66 1 69 2 10 1 141 4 292 2 12 1 143 4 50 1 270 2 
97 1 20 1 195 3 358 1 170 2 359 2 276 1 327 1 330 1 333 1 78 2 298 1 79 1 82 1 340 1 262 1 310 1 106 2 31 1 107 1 64 1 374 1 141 1 12 1 352 1 353 3 143 1 50 1 320 1 94 1 188 1 216 2 
202 1 371 1 103 2 27 2 252 2 263 1 308 1 237 4 21 4 10 1 69 1 292 1 165 2 213 1 49 2 
131 1 367 1 221 1 
131 1 326 1 45 1 337 1 221 1 
131 1 367 1 221 1 
131 1 367 1 221 1 
131 1 254 1 221 1 
131 1 254 1 221 1 
131 1 254 1 221 1 
131 1 221 1 
248 1 198 1 
340 2 104 1 44 1 192 1 358 2 225 2 359 4 107 1 276 2 311 1 333 2 352 2 175 1 316 1 381 1 272 1 
104 1 192 1 316 1 225 1 381 1 162 1 272 1 
340 1 306 1 44 2 358 4 105 1 224 1 225 2 359 2 107 2 276 1 311 1 333 1 352 1 91 1 60 1 95 1 272 1 
294 2 306 1 44 3 286 1 358 7 224 1 225 2 107 4 311 1 11 1 34 1 91 1 60 1 95 1 272 1 
294 2 192 4 324 1 358 27 224 2 225 11 359 4 276 2 333 2 175 2 335 1 128 1 60 3 340 2 104 1 306 2 44 13 286 2 107 14 312 1 311 5 34 1 352 2 88 1 213 1 91 3 316 4 381 1 95 2 272 6 
294 1 358 1 107 1 
44 1 286 1 358 1 
340 1 306 1 44 3 358 6 105 1 359 2 225 3 224 1 107 3 276 1 311 1 333 1 278 1 352 1 91 1 60 1 95 1 272 2 
189 1 294 1 253 1 358 12 359 2 224 2 225 2 122 1 276 1 328 1 333 1 60 2 340 1 159 1 306 2 44 6 286 1 107 6 347 1 311 1 11 1 352 1 91 2 95 2 272 1 
44 3 192 1 358 6 225 2 107 3 312 1 311 1 91 1 316 1 60 1 272 1 
192 3 324 1 358 12 359 2 225 6 276 1 333 1 175 1 60 1 340 1 104 1 44 6 107 6 311 3 312 1 352 1 88 1 213 1 91 1 316 3 381 1 272 3 
340 1 192 2 44 5 324 1 358 10 359 2 225 5 107 5 276 1 328 1 311 2 312 1 333 1 352 1 91 2 316 2 60 2 272 3 
340 1 44 2 358 2 359 2 225 1 328 1 276 1 311 1 333 1 352 1 91 1 95 1 
340 1 306 1 44 2 358 4 224 1 225 2 359 2 107 2 328 1 276 1 311 1 333 1 352 1 91 1 60 1 95 1 272 1 
340 3 192 1 44 1 342 1 358 3 359 6 225 2 107 2 328 1 276 3 311 1 333 3 175 1 88 1 352 3 316 1 272 1 
294 4 192 3 358 28 149 1 359 10 225 11 224 3 276 5 328 1 333 5 175 2 60 4 158 1 340 5 104 1 306 3 44 13 284 1 286 3 342 1 105 1 107 15 312 1 311 5 11 1 88 1 352 5 34 1 91 4 316 3 381 1 95 3 272 6 
340 1 294 1 104 1 192 1 44 1 286 1 358 2 225 1 359 2 107 1 328 1 276 1 122 1 333 1 11 1 352 1 316 1 381 1 272 1 
294 2 192 1 358 5 359 4 225 2 122 1 328 1 276 2 333 2 340 2 104 1 306 1 44 3 286 1 105 1 107 2 311 1 11 1 352 2 34 1 91 1 316 1 381 1 95 1 272 1 
189 1 294 1 192 1 253 1 358 13 359 6 224 2 225 3 122 1 276 3 328 1 333 3 175 1 60 2 340 3 159 1 104 1 306 2 44 6 286 1 105 1 107 7 347 1 311 1 11 1 352 3 91 2 316 1 381 1 95 2 272 2 
189 1 294 1 192 1 253 1 358 11 359 6 224 1 225 4 122 1 276 3 328 1 333 3 175 1 60 1 340 3 159 1 104 1 306 2 44 7 286 1 105 1 107 4 347 1 311 2 11 1 352 3 91 2 316 1 381 1 95 2 272 2 
340 1 294 1 104 1 192 1 44 1 286 1 358 2 225 1 359 2 107 1 328 1 276 1 122 1 333 1 11 1 352 1 316 1 381 1 272 1 
189 1 294 1 253 1 358 12 359 2 224 2 225 2 122 1 276 1 328 1 333 1 60 2 340 1 159 1 306 2 44 6 286 1 107 6 347 1 311 1 11 1 352 1 91 2 95 2 272 1 
189 1 294 1 192 1 253 1 358 12 359 8 224 1 225 4 122 1 276 4 328 1 333 4 175 2 60 1 340 4 159 1 104 1 306 2 44 7 286 1 105 1 107 5 347 1 311 2 11 1 352 4 91 2 316 1 381 1 95 2 272 2 
189 1 294 1 253 1 358 16 359 8 224 2 225 6 122 1 328 1 276 4 333 4 175 2 60 2 340 4 159 1 306 3 44 9 286 1 342 1 107 7 347 1 311 3 11 1 352 4 91 3 95 3 272 3 
104 2 192 2 44 1 358 2 225 4 107 1 311 2 316 2 381 1 272 2 
189 1 294 1 192 1 253 1 358 12 359 8 224 1 225 3 122 1 328 1 276 4 333 4 175 2 60 1 340 4 159 1 104 1 306 2 44 7 286 1 342 1 107 5 347 1 311 1 11 1 352 4 91 2 316 1 381 1 95 2 272 2 
0 1 39 1 195 1 353 1 56 1 106 1 31 1 
0 1 39 1 195 1 148 1 56 1 150 1 106 1 31 1 24 1 228 1 353 1 83 1 
330 1 141 1 12 1 63 1 262 1 222 1 143 1 82 1 50 1 374 1 162 1 
73 1 20 1 262 1 195 2 170 1 106 1 31 1 374 1 330 1 78 1 141 1 12 1 79 1 353 2 143 1 82 1 50 1 188 1 
73 1 20 1 195 2 170 1 330 1 78 2 79 2 82 1 6 1 235 1 106 2 31 1 374 1 109 1 208 1 141 1 12 2 353 2 142 1 143 1 50 3 188 1 270 1 
73 1 20 1 195 2 170 1 330 1 78 2 79 2 82 2 6 1 235 1 265 1 106 2 31 1 374 1 109 1 208 1 141 2 12 2 353 2 142 1 143 2 50 3 36 1 270 1 
1 1 249 1 51 2 21 1 330 1 174 2 79 1 82 3 6 1 27 1 160 1 262 1 372 1 134 1 374 1 241 1 208 1 141 3 12 1 143 3 50 4 36 1 270 1 
1 1 27 1 51 2 249 1 219 1 262 1 160 1 372 1 21 1 374 1 208 1 174 2 330 1 141 3 12 1 79 1 143 3 82 3 50 4 36 1 270 1 6 1 
330 1 141 1 143 1 258 1 82 1 374 1 
305 1 357 1 262 2 346 1 139 1 374 3 25 1 120 1 330 2 3 1 376 1 141 6 378 1 42 1 210 1 79 1 12 2 258 1 143 7 82 7 50 3 
73 1 192 1 20 1 193 1 195 2 170 1 225 1 359 4 25 1 276 2 327 2 330 1 78 1 333 2 79 1 336 1 82 1 340 2 104 1 310 2 106 1 374 1 64 1 141 1 12 1 352 2 353 2 143 1 214 1 316 1 50 1 381 1 94 1 188 1 272 1 321 1 
1 1 51 3 249 1 219 1 252 1 21 1 223 1 101 1 174 3 82 1 129 1 130 1 371 1 202 2 27 1 234 1 262 1 160 1 372 2 242 1 69 2 10 2 141 1 377 1 292 2 351 1 143 1 50 2 
249 1 341 1 374 2 25 1 330 1 141 2 210 1 79 1 12 1 258 1 143 2 82 2 50 2 
262 1 63 1 222 1 374 1 25 1 330 1 141 4 12 1 143 4 82 4 215 1 50 1 36 1 
357 1 140 1 374 2 330 1 375 1 363 1 141 2 42 1 79 1 12 1 143 2 82 2 50 1 270 1 
330 1 365 1 141 1 366 1 262 1 76 1 143 1 82 1 374 1 65 1 
19 1 374 1 25 1 330 1 141 2 376 1 378 1 12 1 143 2 82 2 50 1 
63 1 262 1 222 1 346 1 374 2 25 1 330 2 3 1 141 4 378 1 12 2 143 5 82 5 215 1 50 3 270 1 
179 1 63 1 262 1 222 1 346 1 374 2 25 1 330 2 141 4 378 1 12 2 143 5 82 5 215 1 50 3 270 1 
73 1 20 1 262 1 195 2 170 1 265 1 106 1 31 1 374 1 330 1 78 1 141 1 12 1 79 1 353 2 143 1 82 1 50 1 
357 1 374 2 120 1 330 1 141 1 42 1 210 1 79 1 12 1 143 1 82 1 50 1 270 1 
112 1 124 1 309 1 31 1 266 1 
1 1 27 1 234 1 51 2 112 2 235 1 21 1 55 1 309 2 137 1 31 1 266 2 109 1 174 2 124 1 80 1 142 1 14 1 155 1 
124 1 151 1 112 1 195 1 300 1 353 1 8 1 106 1 266 1 
124 1 55 1 14 1 
209 1 48 1 162 1 72 1 
291 1 125 1 296 1 209 1 48 1 118 1 72 1 
291 1 77 1 301 1 
356 1 220 2 118 1 197 1 30 1 125 1 291 3 296 3 209 1 48 1 280 1 72 1 
291 2 125 1 296 2 200 1 209 1 99 1 48 1 118 1 72 1 
291 1 125 1 26 1 296 1 38 1 147 1 48 1 118 1 197 1 
291 1 125 1 296 1 48 1 118 1 197 1 72 1 
291 1 125 1 296 1 209 1 118 1 197 1 72 2 
227 1 291 2 125 2 296 2 87 1 75 1 48 1 118 2 197 1 72 1 
291 2 125 1 296 2 38 1 200 1 325 1 147 1 48 1 118 1 354 1 197 1 9 1 
76 1 118 1 197 1 65 1 33 1 125 1 291 2 365 2 296 2 200 1 209 1 269 1 48 1 233 1 72 1 
291 2 125 1 296 2 38 1 200 1 314 1 325 1 147 1 99 1 48 1 118 1 197 1 
291 1 125 1 296 1 209 1 48 1 118 1 197 1 72 1 
125 1 291 2 296 2 38 1 200 1 325 1 147 2 48 1 118 1 
96 1 204 1 344 1 118 1 197 1 125 1 291 2 296 2 200 1 209 1 48 1 72 1 
220 2 118 1 30 1 197 1 125 1 291 3 296 3 209 1 48 1 176 1 280 2 72 1 
114 1 54 1 206 2 48 2 
291 1 125 1 296 1 118 1 197 1 108 1 
291 2 125 1 296 2 200 1 209 1 48 1 118 1 197 1 72 1 9 1 
295 1 
291 1 125 1 296 1 209 1 48 1 118 1 197 1 72 1 
291 3 125 1 296 3 200 1 209 1 220 1 48 1 118 1 197 1 9 1 72 1 
291 1 296 1 200 1 38 1 325 1 48 1 
48 1 72 1 

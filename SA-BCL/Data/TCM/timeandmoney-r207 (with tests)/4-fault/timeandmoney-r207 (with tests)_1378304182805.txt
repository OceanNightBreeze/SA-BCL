#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 261 138 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (225,347) (176,233) (176,233) 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 353 2 192 123 13 240 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (30,164) 236 353 2 192 56 313 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 353 2 192 123 286 234 90 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 353 2 192 123 286 234 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 353 2 192 123 286 234 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 353 2 192 123 286 234 90 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (225,347) (225,347) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 261 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (225,347) (176,233) (176,233) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (225,347) (176,233) (176,233) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (225,347) (176,233) (176,233) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 261 138 41 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 353 2 192 123 13 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 353 2 192 123 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 353 2 192 56 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 353 2 192 123 306 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 1 113 2 207 1 3 1 185 6 210 1 325 1 305 1 87 4 167 2 91 1 360 1 361 1 51 1 150 5 96 9 170 1 363 1 337 3 12 2 311 2 57 1 271 2 126 1 343 2 245 2 373 9 181 1 
255 1 113 2 207 1 3 1 185 6 210 1 325 1 305 1 87 4 167 2 91 1 360 1 361 1 51 1 150 5 96 9 170 1 363 1 337 3 12 2 311 2 57 1 271 2 126 1 343 2 245 2 373 9 181 1 
255 1 113 2 207 1 3 1 185 7 210 1 325 1 305 1 87 5 167 2 91 1 360 1 361 1 51 1 150 6 96 10 170 1 363 1 337 4 12 2 311 2 57 1 271 2 126 1 343 2 245 2 373 10 181 1 
255 1 113 2 3 1 185 4 210 1 325 1 305 1 87 3 167 1 91 1 360 1 361 1 51 1 150 4 96 7 170 1 363 1 337 2 12 2 311 2 57 1 271 2 126 1 343 2 245 2 373 7 181 1 
113 1 337 1 12 1 311 1 57 1 207 1 185 3 271 1 245 1 87 2 167 2 91 1 360 1 51 1 150 3 373 4 96 4 181 1 
170 1 333 1 113 1 279 1 12 1 311 1 57 1 3 1 343 1 198 1 245 1 360 1 51 1 150 1 373 2 96 2 
337 1 12 2 311 2 57 1 126 1 185 1 343 1 87 1 360 1 51 1 150 2 373 3 96 3 
113 1 45 1 207 1 185 7 325 1 87 4 167 2 91 1 360 1 51 1 150 5 96 9 362 1 363 1 337 3 12 2 311 2 57 1 126 1 271 1 343 1 245 1 373 9 181 1 
113 1 45 1 207 1 185 7 325 1 87 4 167 2 91 1 360 1 51 1 150 5 96 9 362 1 363 1 337 3 12 2 311 2 57 1 126 1 271 1 343 1 245 1 373 9 181 1 
332 1 137 1 277 1 217 1 310 1 165 1 53 1 229 1 352 1 341 1 354 1 179 1 89 1 168 1 
129 1 
129 1 137 2 326 1 310 2 61 1 280 1 352 1 17 1 
137 5 216 1 36 1 310 5 334 1 112 2 278 1 280 2 352 2 324 2 129 1 284 1 40 1 326 1 70 1 15 1 17 1 194 2 64 1 
129 1 326 1 117 1 
129 1 39 1 213 2 
332 2 217 2 49 1 165 2 89 2 179 2 168 1 354 2 
165 3 228 1 1 1 84 1 354 3 283 2 142 1 69 1 49 1 89 2 285 1 359 1 327 1 72 1 212 2 168 1 169 1 332 2 292 1 8 2 152 1 217 2 218 1 336 1 55 1 312 1 125 1 315 1 130 2 179 2 251 1 372 1 180 1 162 1 254 2 18 1 300 1 
332 1 277 1 217 1 165 1 53 1 89 1 179 1 168 1 341 1 354 1 
137 1 35 1 217 1 165 1 310 1 53 1 156 1 354 1 129 1 48 1 326 1 106 1 147 1 149 1 
332 1 137 2 35 1 217 1 310 2 165 1 53 1 354 1 129 1 48 1 326 1 179 1 89 1 106 1 147 1 
137 1 310 1 280 1 281 1 352 1 
275 1 129 1 137 2 326 1 310 2 280 1 352 1 17 1 
137 1 310 1 280 1 
164 1 236 1 371 1 
8 1 152 1 165 1 228 1 336 1 1 1 125 1 354 1 38 1 315 1 130 1 49 1 372 1 254 1 18 1 300 1 
332 1 217 2 165 2 124 1 29 1 354 2 49 2 179 1 89 1 
164 1 152 1 8 1 217 1 165 2 336 1 228 1 1 1 230 1 125 1 315 1 354 2 67 1 130 1 179 1 89 1 372 1 18 1 254 1 300 1 
49 1 117 1 
332 1 217 5 165 5 220 1 29 1 230 1 156 1 208 1 354 5 67 2 49 1 179 4 89 4 93 1 
217 2 165 2 53 1 89 2 179 2 155 1 341 1 354 2 
332 1 217 3 49 1 165 3 89 3 179 3 354 3 67 1 
217 1 165 1 53 1 89 1 179 1 341 1 354 1 
332 1 217 1 165 1 53 1 89 1 179 1 124 1 29 1 354 1 
137 1 165 4 228 1 1 1 27 1 29 1 230 1 354 4 67 1 283 1 142 1 69 1 48 1 49 1 89 3 285 1 359 1 327 1 72 1 147 1 212 2 168 1 169 1 332 2 152 1 35 1 8 1 217 3 218 1 310 1 336 1 53 1 312 1 125 1 315 1 130 1 159 1 179 3 106 1 251 1 372 1 18 1 254 1 300 1 
217 2 49 1 165 2 89 1 179 1 156 1 208 1 354 2 67 1 
332 1 137 1 35 1 217 3 310 1 165 3 53 1 29 1 230 1 27 1 366 1 354 3 67 2 129 1 48 1 179 3 89 3 106 1 147 1 
164 1 332 1 217 2 165 2 89 2 179 2 29 1 371 1 354 2 67 1 
8 1 152 1 165 1 228 1 336 1 1 1 125 1 354 1 315 1 130 1 49 1 372 1 254 1 18 1 300 1 
195 1 8 1 152 1 165 1 228 1 336 1 1 1 244 1 354 1 315 1 130 1 49 1 372 1 254 1 300 1 
182 1 164 2 349 1 30 1 206 1 353 1 142 2 283 4 236 2 285 1 359 1 327 1 72 1 212 2 264 1 312 1 268 1 365 1 224 1 298 1 251 1 371 2 162 2 110 1 
35 1 217 1 165 1 53 1 89 1 179 1 155 1 354 1 
317 1 73 1 
317 1 73 1 
19 1 146 1 
19 1 146 1 
19 1 146 1 
196 1 317 1 73 1 
196 1 317 1 73 1 
317 1 10 1 73 1 
19 1 317 2 296 1 146 1 26 1 73 2 
196 1 317 1 73 1 
317 1 21 1 73 1 
317 1 21 1 73 1 
317 1 21 1 73 1 
137 1 217 1 138 1 165 1 310 1 99 1 100 1 58 1 354 1 261 1 119 1 223 1 179 1 89 1 16 1 120 1 249 1 193 1 
137 2 310 2 111 1 100 2 176 1 129 1 119 2 233 1 16 2 120 2 249 1 225 1 193 2 214 1 
333 1 245 2 78 1 85 2 271 1 
245 1 113 1 271 1 
333 1 245 1 113 1 
333 1 245 3 23 1 78 1 85 1 271 2 
333 1 245 2 356 1 78 1 85 1 271 1 
137 5 112 1 278 1 280 1 2 1 352 4 206 1 324 1 353 1 326 1 308 1 358 1 213 3 194 1 241 1 216 2 310 5 242 2 174 2 99 1 365 1 58 1 60 1 103 1 39 1 316 2 129 2 40 3 223 1 298 1 17 1 274 1 
137 9 44 1 112 2 278 1 280 6 281 5 2 3 352 7 206 3 324 2 353 3 326 1 357 1 358 2 213 9 194 2 172 5 216 6 310 9 242 6 365 3 58 4 37 1 60 1 14 1 103 2 39 3 316 6 129 5 105 1 40 8 15 1 298 3 17 1 299 1 
137 3 112 1 352 2 2 1 206 1 324 1 353 1 326 1 308 1 358 1 213 4 194 1 216 2 310 3 174 1 242 2 58 1 365 1 103 1 129 3 39 2 316 2 40 3 15 1 298 1 274 1 
137 4 112 1 352 3 2 2 206 2 324 1 353 2 326 1 308 1 357 1 358 1 213 7 194 1 216 4 310 4 242 4 174 2 58 2 365 2 37 1 103 1 129 4 39 3 316 4 40 5 15 1 298 2 299 1 274 1 
132 1 
248 1 117 1 372 1 
372 1 81 1 
372 1 315 1 300 1 
372 1 63 1 
372 1 315 1 
133 1 248 2 372 3 315 1 342 1 300 1 
349 2 219 2 98 1 205 1 177 1 365 1 142 3 283 7 369 1 224 3 298 1 107 1 287 1 211 1 370 1 330 1 7 1 162 4 
219 1 98 1 123 1 365 1 2 1 353 1 13 1 283 5 142 1 107 2 238 1 62 1 240 1 192 1 162 4 
349 3 139 1 205 1 283 9 142 4 285 2 359 2 327 2 212 4 211 1 287 1 7 1 290 1 219 2 98 1 177 1 365 1 369 1 224 4 134 1 298 1 107 1 251 2 162 5 
349 2 219 2 98 1 205 1 177 1 365 1 142 3 283 7 369 1 224 3 298 1 107 1 287 1 211 1 330 1 7 1 162 4 
349 2 219 2 98 1 205 1 177 1 365 1 142 3 283 7 369 1 224 3 298 1 107 1 287 1 211 1 330 1 7 1 162 4 
333 1 152 1 8 1 23 1 228 1 113 1 12 1 140 1 311 1 297 1 141 1 271 1 272 1 343 1 245 2 130 1 246 1 88 1 273 1 6 1 51 1 109 1 373 1 254 1 80 1 96 1 
322 1 228 1 1 1 140 2 143 1 96 1 152 1 8 1 266 1 173 1 12 1 311 1 340 1 315 1 343 2 130 1 158 1 273 2 201 1 372 1 254 1 373 1 80 2 
228 1 23 1 113 1 140 1 185 1 88 1 360 1 51 1 6 1 150 1 96 2 333 1 8 1 265 1 152 1 12 1 311 1 57 1 297 1 271 1 272 1 343 1 130 1 245 2 246 1 273 1 109 1 80 1 254 1 373 2 
227 1 228 1 23 1 113 1 140 1 141 1 185 1 143 1 188 1 88 1 6 1 96 2 333 1 8 1 152 1 12 1 311 1 297 1 271 1 272 1 343 1 130 1 245 2 273 1 109 1 80 1 254 1 373 2 
130 1 8 1 188 1 140 1 141 1 254 1 
74 1 
42 1 137 5 184 2 228 1 278 1 1 2 280 6 324 1 48 1 326 1 147 1 328 1 191 2 149 1 194 1 291 1 8 2 152 1 97 4 154 2 295 1 53 1 197 1 243 2 340 1 156 1 104 1 106 1 201 1 17 3 254 2 20 2 165 1 112 1 25 1 115 1 260 2 354 1 209 2 358 1 213 2 33 1 215 1 35 1 216 2 217 1 310 5 175 1 269 1 315 1 129 2 39 2 130 2 40 2 372 1 
291 1 42 1 137 3 97 2 35 1 217 1 310 3 165 1 53 1 25 1 280 2 197 1 243 1 156 1 354 1 104 1 48 1 61 1 106 1 147 1 149 1 17 1 
42 1 137 3 165 1 25 1 280 1 354 1 48 1 326 1 147 1 149 1 291 1 35 1 97 3 217 1 310 3 53 1 154 1 197 1 156 1 104 1 129 1 61 1 106 1 17 1 
42 1 137 3 165 1 25 1 280 2 354 1 48 1 326 1 147 1 149 1 191 1 291 1 35 1 97 3 217 1 310 3 53 1 154 1 197 1 243 1 156 1 104 1 129 1 61 1 106 1 17 1 
42 1 137 5 184 2 278 1 280 7 324 1 48 1 326 5 147 1 191 4 149 1 194 1 291 1 97 6 53 1 154 4 101 1 197 1 243 4 156 1 104 1 61 1 106 1 17 3 20 2 165 1 112 1 25 1 260 2 354 1 209 2 307 1 215 1 34 1 35 1 217 1 216 1 310 5 267 1 269 1 76 1 129 5 39 2 40 1 
42 1 137 4 184 2 278 1 280 4 324 1 48 1 326 1 147 1 149 1 191 2 194 1 291 1 97 4 53 1 154 2 197 1 243 2 156 1 104 1 106 1 17 2 20 2 165 1 112 1 25 1 260 2 354 1 209 2 213 2 33 1 215 1 35 1 217 1 216 1 310 4 269 1 39 2 129 2 40 1 
42 1 137 4 20 2 184 2 165 1 112 1 278 1 25 1 280 4 324 1 260 2 354 1 209 2 48 1 326 1 307 1 147 1 191 2 149 1 194 1 215 1 291 1 35 1 97 4 216 1 217 1 267 1 310 4 154 2 53 1 269 1 197 1 243 2 156 1 76 1 129 1 39 2 104 1 40 1 106 1 17 2 
42 1 137 4 20 2 184 2 165 1 112 1 278 1 25 1 280 4 324 1 260 2 354 1 209 2 48 1 326 1 307 1 147 1 191 2 149 1 194 1 215 1 291 1 35 1 97 4 216 1 217 1 267 1 310 4 154 2 53 1 269 1 197 1 243 2 156 1 76 1 129 1 39 2 104 1 40 1 106 1 17 2 
42 1 137 4 165 1 112 1 278 1 25 1 280 4 324 1 260 2 354 1 209 2 48 1 326 1 144 2 239 1 147 1 213 2 191 2 149 1 194 1 215 1 291 1 35 1 97 4 216 1 217 1 267 1 310 4 154 2 53 1 197 1 243 2 156 1 221 1 129 1 104 1 345 2 40 1 106 1 17 2 161 1 
42 1 137 4 20 2 184 2 165 1 112 1 278 1 25 1 280 5 324 1 260 2 354 1 209 2 48 1 326 1 307 1 147 1 149 1 191 3 194 1 215 1 291 1 35 1 97 5 216 1 217 1 267 1 310 4 53 1 154 3 101 1 269 1 197 1 243 3 76 1 156 1 129 1 39 2 104 1 40 1 106 1 17 2 
42 1 137 4 20 2 184 2 165 1 112 1 278 1 25 1 280 5 324 1 260 2 354 1 209 2 48 1 326 1 307 1 147 1 149 1 191 3 194 1 215 1 291 1 35 1 97 5 216 1 217 1 267 1 310 4 53 1 154 3 101 1 269 1 197 1 243 3 76 1 156 1 129 1 39 2 104 1 40 1 106 1 17 2 
42 1 137 4 278 1 280 4 324 1 48 1 144 2 326 1 147 1 149 1 191 2 194 1 291 1 97 4 53 1 154 2 197 1 243 2 156 1 104 1 345 2 106 1 17 2 161 1 165 1 112 1 25 1 260 2 354 1 209 2 213 2 33 1 215 1 35 1 217 1 216 1 310 4 129 1 40 1 
165 1 228 1 1 1 354 1 118 1 67 1 283 2 142 1 69 1 89 1 285 2 359 2 327 2 72 2 212 4 265 1 264 1 152 1 8 3 217 1 55 1 312 2 340 1 315 1 344 1 130 3 179 1 251 2 319 1 201 1 372 1 180 1 254 3 162 1 
164 1 264 1 349 2 219 1 205 1 312 1 177 1 365 1 117 1 142 3 283 6 49 2 224 2 236 1 298 1 285 1 72 1 251 1 327 1 359 1 287 1 212 2 211 1 371 1 7 1 162 3 
164 4 56 1 312 1 365 1 2 1 353 1 313 1 283 4 142 1 236 4 285 1 238 1 62 1 108 1 72 1 251 1 327 1 359 1 212 2 192 1 162 3 
165 2 228 1 1 1 28 1 230 1 354 2 67 1 142 1 283 2 69 1 49 1 89 1 50 1 285 1 327 1 72 1 359 1 212 2 152 1 8 1 217 1 336 1 55 1 312 1 125 1 315 1 38 1 102 1 130 1 179 1 251 1 108 1 371 1 372 1 18 1 254 1 162 1 300 1 
83 2 228 2 1 1 230 1 2 2 141 1 142 10 283 20 49 2 89 1 236 7 285 3 327 3 287 1 7 1 52 2 8 3 152 2 336 2 55 1 346 1 298 3 108 1 251 3 254 3 18 2 162 10 300 2 164 7 349 4 165 3 205 1 206 2 353 2 354 3 67 1 262 2 69 1 359 3 72 3 211 1 212 6 217 1 218 2 219 1 177 1 312 3 125 2 365 3 314 1 315 2 318 1 130 3 369 4 224 8 179 1 371 7 372 2 320 2 
164 1 349 1 165 1 29 1 2 1 206 1 353 1 354 1 283 3 142 2 236 1 89 1 285 1 359 1 327 1 72 1 212 2 332 1 217 1 312 1 365 1 178 1 224 1 179 1 298 1 251 1 108 1 371 1 162 1 
164 1 264 1 312 1 268 1 365 1 353 1 283 2 369 1 224 1 236 1 285 1 72 1 251 1 327 1 359 1 212 2 371 1 162 2 
164 1 182 1 264 1 349 1 312 1 206 1 283 2 142 2 224 1 236 1 285 1 298 1 72 1 251 1 327 1 359 1 212 2 371 1 
164 2 349 1 2 1 206 1 353 1 283 4 142 2 236 2 285 1 359 1 327 1 72 1 212 2 264 1 312 1 365 1 369 1 224 2 298 1 251 1 371 2 162 2 
164 1 312 1 268 1 365 1 353 1 118 1 283 2 369 1 224 1 236 1 285 1 72 1 251 1 327 1 359 1 212 2 371 1 162 2 
164 1 182 1 349 1 312 1 206 1 118 1 283 2 142 2 224 1 236 1 285 1 298 1 72 1 251 1 327 1 359 1 212 2 371 1 
164 2 349 1 2 1 206 1 353 1 118 1 283 4 142 2 236 2 285 1 359 1 327 1 72 1 212 2 312 1 365 1 369 1 224 2 298 1 251 1 371 2 162 2 
164 2 349 1 2 1 206 1 353 1 283 4 142 2 236 2 285 1 359 1 327 1 72 1 212 2 312 1 365 1 369 1 224 2 298 1 251 1 371 2 162 2 
165 1 228 1 1 1 354 1 283 2 142 1 69 1 49 1 285 1 72 1 327 1 359 1 212 2 152 1 8 1 218 1 336 1 55 1 312 1 125 1 315 1 130 1 251 1 372 1 162 1 18 1 254 1 300 1 
165 1 228 1 1 1 354 1 283 2 142 1 69 1 49 1 285 1 72 1 327 1 359 1 212 2 195 1 152 1 8 1 336 1 55 1 312 1 244 1 315 1 128 1 130 1 251 1 372 1 162 1 254 1 300 1 
164 2 349 1 2 1 206 1 353 1 283 4 142 2 236 2 285 1 359 1 327 1 72 1 212 2 312 1 365 1 369 1 224 2 298 1 251 1 108 1 371 2 162 2 
164 2 349 1 165 1 228 1 2 1 206 1 353 1 354 1 142 2 283 4 236 2 285 1 72 1 327 1 359 1 212 2 152 1 8 1 265 1 218 1 336 1 312 1 365 1 125 1 315 1 130 1 369 1 224 2 298 1 251 1 371 2 372 1 162 2 18 1 320 1 254 1 300 1 
164 1 165 1 29 1 2 1 206 1 353 1 354 1 142 1 283 3 89 1 236 1 285 1 190 1 359 1 327 1 72 1 212 2 332 1 217 1 312 1 365 1 369 1 224 1 179 1 298 1 251 1 108 1 371 1 162 2 
301 1 123 1 365 1 2 1 353 1 283 6 142 2 131 1 234 1 237 1 134 1 90 1 285 2 238 1 62 1 251 2 327 2 359 2 212 4 286 1 192 1 162 4 
321 1 301 4 349 2 350 1 139 2 2 3 206 2 353 3 186 1 142 12 283 26 234 2 306 1 90 1 285 3 238 2 359 3 327 3 286 2 212 6 123 2 365 3 127 1 367 1 131 1 369 2 247 1 224 4 134 1 298 2 251 3 62 2 135 1 162 14 
301 1 123 1 365 1 2 1 353 1 283 6 142 2 131 1 234 1 237 1 134 1 90 1 285 2 238 1 62 1 251 2 327 2 359 2 212 4 286 1 192 1 162 4 
301 1 123 1 365 1 2 1 353 1 283 6 142 2 131 1 234 1 237 1 134 1 90 1 285 2 238 1 62 1 251 2 327 2 359 2 212 4 286 1 192 1 162 4 
301 1 349 1 205 1 2 1 353 1 142 4 283 11 234 1 90 1 238 1 285 1 359 1 327 1 287 1 286 1 212 2 211 1 192 1 7 1 219 1 123 1 177 1 365 2 131 1 224 1 134 1 298 1 251 1 62 1 162 7 
119 1 120 1 16 1 225 1 347 1 193 1 
203 1 
289 1 
261 1 
119 1 120 1 16 1 114 1 193 1 
137 1 310 1 111 1 100 2 176 1 129 1 119 1 233 1 16 1 120 1 249 1 225 1 193 1 214 1 
137 1 310 1 111 1 100 2 176 1 129 1 119 1 233 1 16 1 120 1 249 1 225 1 193 1 214 1 
137 1 310 1 111 1 100 2 176 1 129 1 119 1 233 1 16 1 120 1 249 1 225 1 193 1 214 1 
203 1 
203 1 
289 1 
289 1 
256 1 65 1 
137 1 310 1 138 1 111 1 99 1 100 1 58 1 352 1 261 1 119 1 223 1 16 1 120 1 193 1 214 1 41 1 
165 2 228 1 354 2 283 2 142 1 69 1 235 1 285 1 72 1 327 1 359 1 329 1 212 2 152 1 153 1 8 2 151 1 217 2 75 1 55 1 312 1 315 1 344 1 130 2 251 1 108 1 372 1 180 2 348 1 162 1 254 2 
333 1 152 1 8 1 293 1 23 1 228 1 113 1 141 1 297 1 271 1 272 1 304 1 245 2 130 1 71 1 6 1 254 1 80 1 
152 1 8 1 322 1 228 1 1 1 340 1 315 1 46 1 130 1 71 1 201 1 372 1 254 1 80 1 
333 1 152 1 8 2 265 1 293 1 23 1 228 1 113 1 141 1 297 1 271 1 272 1 304 1 245 2 130 2 71 1 6 1 254 2 80 1 
333 1 8 1 152 1 23 1 228 1 113 1 141 1 297 1 271 1 272 1 304 1 245 2 130 1 160 1 6 1 254 1 80 1 
171 1 
276 1 216 5 242 5 2 2 365 2 206 2 353 2 262 1 316 5 39 5 129 5 40 5 200 2 298 2 213 10 
129 1 137 1 326 1 310 1 280 1 17 1 
137 3 228 1 112 2 278 1 1 2 115 1 280 4 231 2 324 2 358 2 194 2 152 1 8 4 216 2 310 3 295 1 338 1 9 1 175 2 340 1 59 1 315 1 130 4 40 2 15 1 201 1 17 2 372 1 254 4 
36 1 216 1 112 1 278 1 324 1 129 1 40 1 70 1 326 1 194 1 
129 1 40 1 216 1 36 1 326 1 70 1 117 1 
137 1 20 1 184 1 112 1 278 1 280 1 324 1 326 1 213 1 194 1 216 1 310 1 269 1 39 1 129 2 40 1 17 1 
226 2 276 2 43 1 137 5 323 2 228 3 278 4 1 1 280 5 231 1 2 2 324 4 326 2 92 2 5 2 194 4 152 4 8 3 242 6 59 1 248 2 200 2 250 1 106 2 298 2 253 1 17 3 63 2 254 3 300 3 112 4 206 2 353 2 355 2 262 2 70 1 358 2 213 12 265 1 36 1 216 8 310 5 175 1 365 2 315 3 316 6 39 6 129 8 130 3 40 9 133 1 79 2 372 10 81 3 
276 1 137 1 350 1 112 2 278 2 280 1 2 2 324 2 206 2 353 2 31 1 186 1 306 1 326 2 358 1 238 1 213 6 194 2 121 1 216 5 310 1 242 5 123 1 175 1 365 2 367 1 316 5 39 3 129 5 40 8 200 2 298 2 62 1 135 1 17 1 
276 1 137 1 277 1 165 1 112 1 278 1 229 1 324 1 354 1 232 1 89 1 287 1 168 1 194 1 7 1 332 1 216 2 217 1 310 1 53 1 177 1 365 2 341 1 76 1 40 2 179 1 200 2 298 1 
165 3 228 1 1 1 354 3 283 1 142 1 69 1 49 1 89 2 285 1 359 1 327 1 72 1 212 2 168 1 169 1 332 2 8 1 152 1 217 2 218 1 336 1 312 1 125 1 315 1 130 1 179 2 251 1 372 1 254 1 18 1 300 1 
216 2 242 2 112 1 219 1 278 1 175 1 324 1 316 2 39 2 129 4 40 1 326 2 358 1 213 4 194 1 
119 1 120 1 339 1 
119 1 120 1 339 1 
136 1 256 1 119 1 120 1 288 1 
119 1 120 1 339 1 
183 1 119 1 120 1 
183 1 119 1 120 1 
183 1 119 1 120 1 
119 1 120 1 
317 1 73 1 
349 3 177 2 365 2 232 1 283 10 142 5 369 2 224 5 134 1 285 1 298 2 359 1 327 1 251 1 212 2 287 2 7 1 162 5 
365 1 353 1 283 2 369 1 224 1 134 1 285 1 251 1 327 1 359 1 212 2 162 2 
349 1 2 1 365 1 206 1 353 1 142 2 283 4 369 1 224 2 134 1 298 1 285 1 251 1 327 1 359 1 212 2 162 2 
349 1 139 1 24 1 177 1 142 2 283 3 369 1 224 2 237 1 134 1 285 3 251 3 327 3 359 3 212 6 287 1 162 1 
202 1 349 3 139 1 205 1 2 3 206 2 353 3 142 11 283 24 263 1 237 1 238 3 285 4 359 4 327 4 287 1 211 1 212 8 192 1 7 1 219 1 123 1 177 1 365 4 13 1 369 2 224 5 134 1 298 3 251 4 62 3 162 13 374 1 
349 2 219 1 139 1 205 1 177 1 365 1 142 4 283 8 369 1 224 3 298 1 285 2 251 2 327 2 359 2 212 4 211 1 287 1 7 1 162 4 
349 2 219 1 205 1 177 1 365 1 117 1 142 3 283 6 224 2 298 1 211 1 287 1 7 1 162 3 
349 1 2 1 365 1 206 1 353 1 142 2 283 4 369 1 224 2 298 1 285 1 251 1 327 1 359 1 212 2 162 2 374 1 
283 4 142 1 123 1 238 1 62 1 365 1 2 1 192 1 353 1 162 3 
283 4 142 1 238 1 56 1 62 1 365 1 2 1 192 1 353 1 162 3 
283 1 142 1 238 1 
283 1 62 1 162 1 
349 2 2 1 365 1 206 1 353 1 262 1 142 3 283 6 369 1 224 3 285 1 298 1 359 1 327 1 251 1 212 2 162 3 374 1 
349 1 350 1 2 2 206 2 353 2 283 12 142 6 186 1 306 1 238 1 285 1 359 1 327 1 212 2 123 1 365 2 367 1 369 1 224 2 134 1 298 2 62 1 251 1 135 1 162 6 
349 1 177 1 365 1 283 6 142 3 369 1 224 2 298 1 287 1 7 1 162 3 
349 1 139 1 24 1 205 1 177 1 142 2 283 3 369 1 224 2 285 1 251 1 327 1 359 1 287 1 211 1 212 2 162 1 
349 2 205 1 283 8 142 4 306 1 238 1 285 1 359 1 327 1 212 2 211 1 287 1 7 1 219 1 123 1 177 1 365 1 224 2 134 1 298 1 62 1 251 1 162 4 
123 1 365 1 2 1 353 1 142 1 283 4 306 1 134 1 285 2 238 1 62 1 251 2 327 2 359 2 212 4 192 1 162 3 374 1 
349 3 350 1 139 1 205 1 2 2 206 2 353 2 186 1 283 19 142 10 306 1 238 1 285 3 359 3 327 3 287 1 211 1 212 6 7 1 219 1 123 1 177 1 365 3 367 1 369 1 224 4 134 1 298 3 62 1 251 3 135 1 162 9 374 1 
349 3 350 1 139 1 205 1 2 2 206 1 353 2 283 17 142 7 186 1 306 1 238 1 285 3 359 3 327 3 287 1 211 1 212 6 7 1 219 1 123 1 177 1 365 3 367 1 369 2 224 5 134 1 298 2 62 1 251 3 135 1 162 10 374 1 
349 2 205 1 283 8 142 4 306 1 238 1 285 1 359 1 327 1 212 2 211 1 287 1 7 1 219 1 123 1 177 1 365 1 224 2 134 1 298 1 62 1 251 1 162 4 
349 1 350 1 2 2 206 2 353 2 283 12 142 6 186 1 306 1 238 1 285 1 359 1 327 1 212 2 123 1 365 2 367 1 369 1 224 2 134 1 298 2 62 1 251 1 135 1 162 6 
349 3 350 1 139 2 205 1 2 2 206 1 353 2 186 1 283 18 142 8 306 1 238 1 285 4 359 4 327 4 287 1 211 1 212 8 7 1 219 1 123 1 177 1 365 3 367 1 369 2 224 5 134 1 298 2 251 4 62 1 135 1 162 10 374 1 
349 3 350 1 139 2 2 3 206 2 353 3 186 1 283 16 142 7 306 1 237 1 238 1 285 4 359 4 327 4 212 8 123 1 365 3 367 1 369 3 224 6 134 1 298 2 251 4 62 1 135 1 162 9 
349 3 205 1 177 3 365 1 142 4 283 7 369 3 224 6 298 1 211 2 287 3 7 1 162 3 
349 3 350 1 139 2 205 1 2 2 206 1 353 2 186 1 283 18 142 8 306 1 237 1 238 1 285 4 359 4 327 4 287 1 211 1 212 8 7 1 219 1 123 1 177 1 365 3 367 1 369 1 224 4 134 1 298 2 251 4 62 1 135 1 162 10 
217 1 49 1 165 1 156 1 116 1 208 1 354 1 
217 1 165 1 11 1 116 1 156 1 282 1 208 1 354 1 77 1 47 1 49 1 309 1 
8 2 152 2 22 1 228 1 231 1 315 1 157 1 222 1 130 2 4 1 346 1 372 1 254 2 300 1 
333 1 245 1 152 1 130 1 8 1 228 1 113 1 1 1 297 1 254 1 
152 1 153 1 130 2 8 2 265 1 228 1 329 1 372 1 141 1 315 1 254 2 
152 1 8 4 265 1 335 1 228 1 1 1 340 1 315 1 130 4 252 1 201 1 372 1 254 4 
152 1 130 1 8 1 228 1 1 1 201 1 340 1 117 1 372 1 315 1 254 1 
152 1 8 1 217 1 165 2 336 1 228 1 1 1 315 1 354 2 67 1 130 1 49 1 179 1 89 1 372 1 254 1 18 1 300 1 
35 1 152 1 8 1 323 1 217 2 165 2 53 1 336 1 228 1 231 1 315 2 354 2 67 1 130 1 49 1 179 1 89 2 147 1 63 1 372 3 254 1 18 1 300 2 
195 1 35 1 152 1 8 2 323 1 217 2 165 2 53 1 336 1 228 1 231 1 315 2 354 2 67 1 130 2 49 1 179 1 89 2 147 1 252 1 63 1 372 3 254 2 300 2 
137 2 152 1 8 3 323 1 310 2 122 1 228 1 1 1 280 1 231 1 315 1 129 1 187 1 130 3 326 1 248 1 106 1 252 1 63 1 372 4 254 3 300 1 81 1 
137 2 152 1 8 3 323 1 310 2 228 1 1 1 280 1 231 1 315 1 355 1 129 1 130 3 326 1 248 1 106 1 252 1 63 1 372 4 254 3 300 1 81 1 
152 1 130 1 8 1 228 1 166 1 254 1 
265 1 8 2 152 2 204 1 22 1 228 1 1 1 315 1 222 1 130 2 133 1 319 1 372 1 254 2 300 1 
164 1 349 2 165 2 228 1 83 1 205 1 354 2 67 1 142 3 283 6 49 2 235 1 236 1 89 1 285 2 327 2 72 2 359 2 287 1 211 1 212 4 7 1 152 1 265 1 8 1 217 1 218 1 336 1 219 1 177 1 312 2 365 1 125 1 315 1 130 1 224 2 179 1 298 1 251 2 108 1 371 1 372 1 162 3 254 1 320 1 18 1 300 1 
226 1 137 3 112 2 278 2 1 1 280 2 352 1 324 2 355 1 326 1 70 1 5 1 194 2 8 1 216 1 36 1 310 3 59 1 129 1 130 1 40 1 248 1 106 1 79 1 17 1 372 2 254 1 81 1 
43 1 265 1 8 2 152 2 228 1 315 1 130 2 166 1 133 1 248 1 372 2 254 2 300 1 
195 1 152 1 8 1 217 1 165 2 336 1 228 1 1 1 315 1 354 2 67 1 130 1 49 1 179 1 89 1 372 1 254 1 300 1 
8 1 152 2 204 1 22 1 228 1 231 1 315 1 222 1 130 1 133 1 372 1 254 1 300 1 
8 5 265 1 152 2 257 1 335 1 228 2 1 1 231 1 340 1 315 2 130 5 201 1 329 1 372 3 254 4 331 1 
8 5 265 1 152 2 257 1 364 1 335 1 228 2 1 1 231 1 340 1 315 2 130 5 201 1 329 1 372 3 254 4 
163 1 49 1 303 1 259 1 66 1 
163 2 137 2 35 1 310 2 53 1 0 1 303 2 27 1 352 1 259 2 66 1 129 1 48 1 49 1 326 1 145 1 189 1 106 1 147 1 
151 1 217 1 165 1 75 1 303 1 259 1 66 1 354 1 348 1 
0 1 189 1 66 1 
227 1 170 1 337 1 12 1 258 1 311 1 57 2 185 2 68 1 87 1 360 2 150 3 373 4 96 4 
362 1 294 1 12 1 311 1 57 1 185 1 32 1 360 1 51 1 150 1 373 2 96 2 
170 2 302 1 12 1 258 1 311 1 57 1 68 2 360 1 51 1 150 1 373 3 96 3 
86 1 148 2 150 2 95 1 
12 1 311 1 51 1 270 1 373 1 96 1 
325 1 12 1 360 1 311 1 57 1 51 1 150 1 185 1 373 2 96 2 
82 1 
12 1 360 1 311 1 57 1 51 1 150 1 373 1 96 1 
12 1 360 1 311 1 57 1 51 1 150 1 373 1 96 1 
360 1 57 1 117 1 150 1 
12 1 360 1 311 1 57 1 150 1 373 1 96 1 
343 1 273 1 373 1 
170 2 12 1 311 1 258 1 57 1 68 1 360 1 51 1 150 1 94 1 373 3 96 3 
167 1 12 1 360 1 311 1 57 1 150 1 185 1 373 2 96 2 
245 1 87 1 113 1 12 1 311 1 51 1 150 1 271 1 373 1 181 1 96 1 
12 1 311 1 57 1 51 1 150 1 373 1 96 1 
12 1 360 1 311 1 57 2 51 1 373 1 96 1 
351 1 54 1 12 2 311 2 57 1 199 1 51 1 150 1 373 2 96 2 
363 1 337 1 12 1 311 1 57 1 185 2 325 1 87 1 360 1 51 1 150 2 373 3 96 3 
333 1 23 1 113 1 12 1 311 1 57 1 271 1 185 1 245 2 368 1 360 1 51 1 150 1 373 2 96 2 
337 1 12 2 311 2 57 1 207 1 185 2 87 1 167 1 360 1 51 1 150 2 373 4 96 4 
170 1 12 1 311 1 57 1 185 1 325 1 360 1 51 1 150 1 373 3 96 3 
227 1 87 1 337 1 150 1 
57 1 150 1 

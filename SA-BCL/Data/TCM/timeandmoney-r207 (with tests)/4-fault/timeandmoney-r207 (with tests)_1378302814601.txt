#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 119 346 93 373 284 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 119 346 93 373 284 349 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 119 346 93 373 284 349 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 119 346 93 373 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 119 346 93 373 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 119 346 93 373 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 2 84 6 362 1 338 1 141 1 363 5 314 9 112 1 269 9 88 1 170 2 272 3 11 1 274 1 254 1 275 1 33 1 325 1 123 2 228 2 76 1 303 1 98 2 233 1 80 4 212 2 213 1 20 2 
186 2 84 6 362 1 338 1 141 1 363 5 314 9 112 1 269 9 88 1 170 2 272 3 11 1 274 1 254 1 275 1 33 1 325 1 123 2 228 2 76 1 303 1 98 2 233 1 80 4 212 2 213 1 20 2 
186 2 84 7 362 1 338 1 141 1 363 6 314 10 112 1 269 10 88 1 170 2 272 4 11 1 274 1 254 1 275 1 33 1 325 1 123 2 228 2 76 1 303 1 98 2 233 1 80 5 212 2 213 1 20 2 
186 2 84 4 362 1 141 1 363 4 314 7 112 1 269 7 88 1 170 2 272 2 11 1 274 1 254 1 275 1 33 1 325 1 123 1 228 2 76 1 303 1 98 2 233 1 80 3 212 2 213 1 20 2 
186 1 84 3 123 2 362 1 338 1 141 1 363 3 314 4 303 1 98 1 269 4 170 1 80 2 272 1 212 1 213 1 20 1 254 1 
186 1 228 1 2 1 363 1 141 1 314 2 303 1 266 1 315 1 112 1 98 1 269 2 88 1 212 1 213 1 20 1 
84 1 228 1 141 1 363 2 314 3 303 1 98 2 269 3 80 1 272 1 213 1 11 1 20 2 
186 1 84 7 362 1 338 1 141 1 363 5 314 9 269 9 170 1 317 1 272 3 11 1 274 1 254 1 123 2 228 1 125 1 303 1 98 2 233 1 80 4 212 1 213 1 20 2 
186 1 84 7 362 1 338 1 141 1 363 5 314 9 269 9 170 1 317 1 272 3 11 1 274 1 254 1 123 2 228 1 125 1 303 1 98 2 233 1 80 4 212 1 213 1 20 2 
250 1 355 1 367 1 
336 1 367 1 191 2 
372 1 39 1 293 2 316 2 140 2 178 2 45 2 111 2 
48 1 287 1 140 2 139 2 111 2 4 1 114 1 27 1 293 3 316 2 171 1 318 1 224 1 197 1 32 1 175 1 372 1 12 1 146 1 255 2 276 1 348 1 226 1 277 1 77 2 178 3 78 2 374 1 278 1 129 1 208 1 39 1 210 1 184 2 18 1 63 1 45 2 
372 1 162 1 293 1 316 1 140 1 310 1 178 1 45 1 111 1 19 1 
72 1 285 1 204 1 242 1 67 1 178 1 327 1 367 1 316 1 293 1 174 1 355 1 116 1 310 1 
72 1 204 2 242 1 140 1 67 2 111 1 178 1 327 1 367 1 316 1 293 1 355 1 116 1 310 1 45 1 
207 1 204 1 142 1 67 1 343 1 
207 1 323 1 204 2 142 1 67 2 355 1 273 1 367 1 
207 1 204 1 67 1 
372 1 162 1 204 1 67 1 140 1 111 1 178 1 316 1 293 1 142 1 9 1 310 1 45 1 19 1 
367 1 
207 1 322 1 204 2 142 1 67 2 355 1 273 1 367 1 
225 1 345 1 360 1 204 5 67 5 166 2 367 1 16 1 113 2 207 2 135 1 222 1 354 2 142 2 355 1 340 1 118 1 273 1 319 1 
39 1 250 1 
371 1 39 2 293 2 316 2 140 1 45 1 111 1 178 2 196 1 
193 1 1 1 300 1 
276 1 277 1 48 1 287 1 139 1 178 1 4 1 78 1 278 1 5 1 39 1 27 1 293 1 318 1 184 1 175 1 
1 1 276 1 277 1 48 1 287 1 140 1 139 1 178 2 4 1 278 1 78 1 291 1 27 1 316 1 293 2 318 1 296 1 184 1 45 1 175 1 
39 1 293 3 316 3 296 1 140 3 111 1 178 3 45 3 
293 1 316 1 140 1 310 1 178 1 45 1 19 1 
371 1 293 1 316 1 140 1 310 1 178 1 45 1 111 1 196 1 
163 1 48 1 287 1 242 1 140 3 67 1 139 1 4 1 111 2 114 1 291 1 27 1 293 4 316 3 171 1 318 1 296 1 116 1 197 1 175 1 371 1 372 1 146 1 72 1 255 2 276 1 348 1 226 1 277 1 204 1 77 1 328 1 178 4 327 1 278 1 374 1 78 1 129 1 39 1 210 1 184 1 310 1 18 1 45 3 
39 1 293 2 316 2 285 1 296 1 66 1 140 1 178 2 45 1 
371 1 72 1 163 1 204 1 242 1 67 1 140 3 111 1 178 3 327 1 367 1 291 1 316 3 293 3 296 2 310 1 116 1 45 3 334 1 
371 1 1 1 293 2 316 2 296 1 300 1 140 2 178 2 45 2 111 1 
276 1 48 1 277 1 287 1 139 1 178 1 4 1 78 1 278 1 39 1 27 1 293 1 318 1 184 1 175 1 
276 1 48 1 277 1 139 1 178 1 366 1 78 1 36 1 278 1 39 1 27 1 293 1 318 1 184 1 175 1 
46 1 1 2 138 1 85 1 114 1 193 2 249 1 171 1 224 2 119 1 176 1 146 2 255 2 348 1 226 1 300 2 77 4 129 1 130 1 181 1 99 1 235 1 62 1 18 1 
293 1 316 1 140 1 310 1 109 1 327 1 178 1 45 1 
371 1 65 1 285 1 75 1 66 1 140 4 178 5 111 1 39 1 291 1 316 5 293 5 296 2 45 4 
293 2 316 2 140 2 310 1 109 1 178 2 45 2 19 1 
105 1 331 1 
105 1 331 1 
15 1 219 1 
15 1 219 1 
15 1 219 1 
105 1 221 1 331 1 
105 1 221 1 331 1 
353 1 105 1 331 1 
105 2 331 2 308 1 364 1 15 1 219 1 
105 1 221 1 331 1 
238 1 105 1 331 1 
238 1 105 1 331 1 
238 1 105 1 331 1 
105 2 335 2 204 2 107 1 67 2 339 3 289 1 367 1 329 2 352 1 259 2 247 1 331 2 308 1 295 1 270 2 156 2 71 1 198 1 
105 1 335 1 361 1 189 1 140 2 339 1 67 1 289 1 316 2 293 2 270 1 321 1 204 1 178 2 329 1 259 1 133 1 353 1 39 1 331 1 151 1 136 1 377 1 45 2 
186 1 170 1 212 1 
186 1 212 1 266 1 
260 1 186 3 170 2 25 1 266 1 59 1 
232 1 260 1 186 2 170 1 266 1 59 1 
260 2 186 2 170 1 266 1 59 1 
104 1 240 2 164 2 313 1 336 1 166 1 67 5 367 2 191 3 113 1 89 2 142 4 119 1 118 3 273 1 321 1 176 1 225 2 346 1 204 5 150 1 130 1 133 1 181 1 207 1 135 1 136 1 354 1 355 1 44 1 333 1 185 1 
239 1 104 1 164 6 336 3 67 9 166 2 367 5 191 9 113 2 89 6 142 7 271 1 119 3 118 8 273 1 343 5 200 1 53 1 176 3 225 6 345 1 346 3 204 9 281 1 130 3 181 3 207 6 38 5 135 1 136 4 354 2 157 1 355 1 44 2 333 2 
240 1 313 1 164 2 336 2 166 1 67 3 367 3 113 1 191 4 142 2 89 2 118 3 119 1 176 1 225 2 345 1 346 1 204 3 130 1 181 1 136 1 354 1 355 1 44 1 333 1 185 1 
240 2 164 4 313 1 336 3 166 1 67 4 367 4 191 7 113 1 89 4 142 3 118 5 119 2 53 1 176 2 225 4 345 1 346 2 204 4 281 1 130 2 181 2 136 2 354 1 355 1 157 1 44 1 333 1 185 1 
277 1 250 1 237 1 
277 1 120 1 
155 1 
277 1 48 1 
83 1 277 3 48 1 237 2 128 1 175 1 
277 1 48 1 175 1 
277 1 95 1 
46 2 146 3 22 2 241 1 216 1 77 7 130 1 181 1 290 1 100 1 369 1 249 3 248 1 376 1 153 1 224 4 236 1 
46 2 146 3 22 2 241 1 216 1 77 7 130 1 181 1 290 1 100 1 369 1 249 3 248 1 376 1 153 1 224 4 236 1 
46 2 146 3 22 2 241 1 216 1 77 7 130 1 181 1 290 1 100 1 369 1 249 3 248 1 376 1 153 1 224 4 236 1 359 1 
46 5 22 3 21 1 241 1 216 2 86 4 290 2 369 5 248 2 29 1 249 10 171 1 224 16 50 1 70 1 119 3 320 1 146 15 176 3 255 2 54 3 346 3 348 1 226 1 77 31 126 1 57 1 130 4 181 4 100 1 376 1 153 1 236 2 18 1 
46 3 22 2 21 1 241 1 216 1 290 1 369 1 249 4 248 1 171 2 224 5 146 4 255 4 348 2 226 2 77 9 180 1 130 1 181 1 100 1 153 1 236 1 18 2 158 1 
186 2 84 1 363 1 139 1 141 1 25 1 314 2 245 1 266 1 269 2 170 1 252 1 299 1 145 1 202 1 276 1 228 1 148 1 303 1 78 1 278 1 98 1 378 1 154 1 212 1 184 1 380 1 213 1 358 1 20 1 
186 2 84 2 363 1 139 1 25 1 314 3 245 1 266 1 218 1 269 3 170 1 294 1 252 1 299 1 202 1 276 1 228 1 148 1 303 1 78 1 278 1 98 1 304 1 378 1 154 1 212 1 184 1 213 1 358 1 20 1 
186 2 84 2 363 1 139 1 25 1 314 2 245 1 266 1 218 1 269 2 170 1 294 1 252 1 299 1 276 1 228 1 303 1 78 1 278 1 378 1 154 1 184 1 212 1 213 1 358 1 
0 1 48 1 139 1 314 1 245 2 269 1 318 1 35 1 276 1 277 1 228 2 14 1 278 1 78 1 98 1 304 1 330 1 378 2 184 1 160 1 356 1 358 2 20 1 
186 2 139 1 141 1 25 1 314 1 245 1 266 1 218 1 269 1 170 1 252 1 299 1 145 1 202 1 276 1 228 1 148 1 78 1 278 1 98 1 378 1 154 1 212 1 184 1 358 1 20 1 
326 1 
48 1 188 1 336 2 285 1 242 1 337 1 139 2 191 2 293 1 195 2 51 1 55 1 347 4 147 1 204 5 207 6 17 1 354 1 61 2 355 1 310 1 160 1 67 5 166 1 367 2 113 1 220 1 316 1 318 2 69 2 174 1 30 1 116 1 118 2 273 3 121 2 73 2 35 1 225 2 72 1 122 1 276 1 277 1 127 2 179 1 178 1 327 1 78 2 278 1 280 1 135 1 182 2 184 2 333 1 282 1 
322 1 72 1 347 2 55 1 188 1 147 1 204 3 285 1 242 1 67 3 127 1 327 1 179 1 178 1 207 2 220 1 316 1 293 1 174 1 310 1 116 1 273 1 
188 1 285 1 242 1 67 3 367 1 220 1 293 1 316 1 174 1 116 1 195 1 273 1 322 1 72 1 55 1 347 3 147 1 204 3 178 1 179 1 327 1 207 1 310 1 355 1 
188 1 285 1 242 1 67 3 367 1 220 1 293 1 316 1 174 1 116 1 195 1 273 1 322 1 72 1 55 1 347 3 147 1 204 3 127 1 178 1 179 1 327 1 207 2 182 1 310 1 355 1 
188 1 285 1 336 2 242 1 337 1 293 1 195 4 51 1 347 6 55 1 147 1 204 5 207 7 306 1 354 1 61 2 310 1 355 5 67 5 166 1 367 5 113 1 220 1 316 1 370 1 174 1 69 2 116 1 118 1 273 3 322 1 121 2 72 1 225 1 73 2 127 4 327 1 178 1 179 1 230 1 234 1 79 1 135 1 182 4 
188 1 336 2 285 1 242 1 337 1 166 1 67 4 367 2 191 2 113 1 220 1 316 1 293 1 69 2 174 1 116 1 195 2 118 1 273 2 51 1 121 2 73 2 225 1 72 1 55 1 347 4 147 1 204 4 127 2 179 1 178 1 327 1 207 4 135 1 354 1 182 2 61 2 355 1 310 1 282 1 
188 1 336 2 285 1 337 1 242 1 67 4 166 1 367 1 113 1 220 1 293 1 316 1 370 1 69 2 174 1 116 1 195 2 118 1 273 2 51 1 121 2 73 2 225 1 72 1 55 1 347 4 147 1 204 4 127 2 178 1 179 1 327 1 207 4 79 1 234 1 135 1 354 1 182 2 61 2 355 1 310 1 
188 1 336 2 285 1 337 1 242 1 67 4 166 1 367 1 113 1 220 1 293 1 316 1 370 1 69 2 174 1 116 1 195 2 118 1 273 2 51 1 121 2 73 2 225 1 72 1 55 1 347 4 147 1 204 4 127 2 178 1 179 1 327 1 207 4 79 1 234 1 135 1 354 1 182 2 61 2 355 1 310 1 
188 1 286 2 285 1 242 1 67 4 166 1 367 1 191 2 113 1 220 1 293 1 316 1 69 2 174 1 116 1 195 2 118 1 273 2 51 1 121 2 225 1 72 1 55 1 347 4 203 2 147 1 204 4 127 2 56 1 178 1 179 1 327 1 279 1 207 4 79 1 135 1 354 1 182 2 355 1 310 1 64 1 
188 1 336 2 285 1 337 1 242 1 166 1 67 4 367 1 113 1 220 1 293 1 316 1 370 1 69 2 174 1 116 1 118 1 195 3 273 2 51 1 121 2 73 2 225 1 72 1 55 1 347 5 147 1 204 4 127 3 178 1 179 1 327 1 230 1 207 5 79 1 234 1 135 1 354 1 61 2 182 3 355 1 310 1 
188 1 336 2 285 1 337 1 242 1 166 1 67 4 367 1 113 1 220 1 293 1 316 1 370 1 69 2 174 1 116 1 118 1 195 3 273 2 51 1 121 2 73 2 225 1 72 1 55 1 347 5 147 1 204 4 127 3 178 1 179 1 327 1 230 1 207 5 79 1 234 1 135 1 354 1 61 2 182 3 355 1 310 1 
188 1 286 2 285 1 242 1 166 1 67 4 367 1 191 2 113 1 220 1 316 1 293 1 69 2 174 1 116 1 195 2 118 1 273 2 51 1 121 2 225 1 72 1 55 1 347 4 203 2 147 1 204 4 127 2 179 1 178 1 327 1 56 1 207 4 135 1 354 1 182 2 355 1 310 1 282 1 
46 2 1 1 146 3 22 1 255 2 241 1 226 1 348 1 300 1 77 6 129 1 130 1 114 1 193 1 181 1 39 2 100 1 249 2 248 1 171 1 250 1 153 1 224 3 62 1 236 1 18 1 
46 1 1 8 86 2 108 1 114 1 193 8 369 1 249 2 29 1 171 1 224 6 119 2 146 4 176 1 255 2 54 2 346 2 348 1 226 1 300 3 77 10 129 1 131 1 130 1 181 2 101 1 43 1 18 1 82 1 
48 1 287 1 139 1 108 1 140 1 4 1 5 1 114 1 291 1 27 1 293 2 316 1 171 1 318 1 296 1 224 1 90 1 197 1 175 1 146 1 256 1 255 2 276 1 277 1 226 1 348 1 300 1 77 2 302 1 178 2 278 1 78 1 129 1 39 1 184 1 18 1 45 1 63 1 
46 4 1 7 241 1 48 2 287 2 139 3 140 1 4 2 193 7 291 1 293 3 248 1 249 8 296 1 197 1 92 2 146 10 255 6 344 2 346 2 348 3 94 1 300 7 205 2 100 1 153 1 18 3 63 1 22 1 108 1 218 1 114 3 27 2 316 1 369 4 171 3 318 1 224 10 119 2 175 2 176 2 276 2 226 3 277 2 77 20 229 2 178 3 78 3 374 2 278 2 129 3 130 3 181 3 39 2 137 1 184 3 236 1 45 1 381 1 
214 1 215 1 48 2 140 1 139 8 267 1 218 1 87 1 114 2 169 1 293 1 316 1 171 2 172 1 318 2 296 1 224 1 197 1 52 1 146 1 35 1 255 4 276 2 277 3 348 2 226 2 77 2 178 1 278 2 78 8 129 2 208 2 62 1 184 7 380 1 18 2 45 1 63 1 160 1 
46 1 1 1 23 1 108 1 140 1 111 1 114 1 193 1 316 1 293 1 249 1 171 1 224 1 119 1 371 1 176 1 146 2 255 2 346 1 348 1 226 1 300 1 77 3 178 1 129 1 130 1 181 1 18 1 45 1 
1 1 255 2 226 1 348 1 300 1 77 2 129 1 114 1 193 1 181 1 369 1 249 1 171 1 235 1 62 1 224 2 18 1 119 1 
46 1 1 1 176 1 146 2 255 2 226 1 348 1 300 1 77 2 129 1 114 1 130 1 193 1 99 1 249 1 171 1 62 1 18 1 
46 1 1 2 114 1 193 2 369 1 249 2 171 1 224 2 119 1 176 1 146 2 346 1 255 2 348 1 226 1 300 2 77 4 129 1 130 1 181 1 62 1 18 1 
52 1 1 1 255 2 226 1 348 1 300 1 77 2 129 1 114 1 193 1 181 1 369 1 249 1 171 1 235 1 224 2 18 1 119 1 
46 1 52 1 1 1 176 1 146 2 255 2 226 1 348 1 300 1 77 2 129 1 114 1 130 1 193 1 99 1 249 1 171 1 18 1 
46 1 1 2 114 1 193 2 369 1 249 2 171 1 224 2 119 1 52 1 176 1 146 2 346 1 255 2 348 1 226 1 300 2 77 4 129 1 130 1 181 1 18 1 
46 1 1 2 114 1 193 2 369 1 249 2 171 1 224 2 119 1 176 1 146 2 346 1 255 2 348 1 226 1 300 2 77 4 129 1 130 1 181 1 18 1 
48 1 287 1 139 1 4 1 114 1 27 1 293 1 171 1 318 1 224 1 197 1 175 1 146 1 255 2 276 1 277 1 226 1 348 1 77 2 178 1 278 1 374 1 78 1 129 1 39 1 184 1 18 1 63 1 
48 1 139 1 366 1 114 1 27 1 293 1 171 1 318 1 224 1 194 1 197 1 175 1 146 1 255 2 276 1 277 1 226 1 348 1 77 2 178 1 278 1 36 1 78 1 129 1 39 1 184 1 18 1 63 1 
46 1 1 2 108 1 114 1 193 2 369 1 249 2 171 1 224 2 119 1 176 1 146 2 346 1 255 2 348 1 226 1 300 2 77 4 129 1 130 1 181 1 18 1 
46 1 1 2 48 1 287 1 139 1 4 1 114 1 193 2 27 1 369 1 293 1 249 2 171 1 224 2 119 1 175 1 146 2 176 1 255 2 346 1 276 1 277 1 226 1 348 1 300 2 77 4 229 1 178 1 278 1 374 1 78 1 129 1 130 1 181 1 184 1 380 1 18 1 
1 1 108 1 140 1 111 1 114 1 193 1 369 1 316 1 293 1 249 1 171 1 224 2 298 1 119 1 371 1 146 1 176 1 255 2 346 1 348 1 226 1 300 1 77 3 178 1 129 1 130 1 181 1 18 1 45 1 
46 3 284 1 106 2 86 2 246 1 292 1 369 3 29 1 249 6 171 2 224 9 91 2 119 3 31 1 320 1 201 1 146 10 176 3 255 4 54 1 346 3 348 2 226 2 349 1 77 19 206 1 130 3 181 3 18 2 158 1 
46 1 21 1 284 2 106 2 217 1 86 2 246 1 28 1 249 1 171 2 224 9 119 2 320 2 201 2 146 8 176 1 255 4 54 2 346 2 348 2 226 2 93 1 349 1 373 1 77 17 130 1 181 2 332 1 18 2 158 1 
46 4 284 1 241 1 86 4 246 1 292 1 249 8 248 1 91 1 201 2 146 21 346 4 54 3 255 6 348 3 349 1 93 1 100 1 305 1 153 1 18 3 158 1 21 1 22 1 106 4 217 1 28 1 369 4 29 1 171 3 224 20 119 4 320 3 31 1 176 4 226 3 373 1 77 41 130 5 181 5 332 1 236 1 81 1 
46 3 21 1 284 1 106 3 217 1 86 4 246 1 292 1 28 1 369 2 29 1 249 5 171 3 224 15 91 1 119 4 31 1 320 3 201 2 146 15 176 3 255 6 54 3 346 4 348 3 226 3 93 1 373 1 349 1 77 30 130 3 181 4 332 1 18 3 158 1 81 1 
46 6 22 1 241 1 284 1 106 2 217 1 86 4 246 1 28 1 369 4 248 1 29 2 249 10 171 1 224 22 119 6 320 2 201 1 146 19 176 5 255 2 54 4 346 6 348 1 226 1 93 1 373 1 349 1 77 41 130 6 181 7 100 1 101 2 332 1 153 1 236 1 18 1 158 1 
259 1 105 1 335 1 331 1 177 1 308 1 107 1 270 1 329 1 352 1 
353 1 377 1 
259 1 105 1 187 1 335 1 331 1 270 1 329 1 199 1 132 1 
105 1 335 1 204 1 107 1 67 1 339 2 289 1 367 1 329 1 352 1 259 1 247 1 331 1 308 1 295 1 270 1 156 1 71 1 
105 1 335 1 204 1 107 1 67 1 339 2 289 1 367 1 329 1 352 1 259 1 247 1 331 1 308 1 295 1 270 1 156 1 71 1 
105 1 335 1 204 1 107 1 67 1 339 2 289 1 367 1 329 1 352 1 259 1 247 1 331 1 308 1 295 1 270 1 156 1 71 1 
324 1 221 1 364 1 
324 1 221 1 364 1 
238 1 34 1 
238 1 34 1 364 1 
361 1 189 1 
105 1 335 1 361 1 189 1 67 1 339 1 140 2 247 1 293 2 316 2 142 1 270 1 342 1 321 1 204 1 178 2 329 1 259 1 133 1 353 1 39 1 331 1 151 1 136 1 377 1 156 1 45 2 
324 1 221 1 
238 1 34 1 364 1 
214 1 48 1 139 2 108 1 267 1 114 1 293 2 316 2 7 1 171 1 224 1 197 1 146 1 74 1 255 2 276 1 277 1 226 1 348 1 77 2 301 1 178 2 278 1 78 2 129 1 37 1 208 2 261 1 184 2 18 1 63 1 
186 2 202 1 276 1 139 2 25 1 266 1 278 1 218 1 78 2 231 1 170 1 378 1 154 1 212 1 184 2 379 1 380 1 297 1 299 1 
186 2 202 1 276 1 139 1 25 1 266 1 218 1 78 1 278 1 231 1 170 1 378 1 154 1 212 1 184 1 117 1 299 1 
35 1 276 1 277 1 48 1 265 1 139 1 278 1 78 1 330 1 318 1 378 1 184 1 379 1 160 1 
186 2 202 1 276 1 139 1 25 1 266 1 278 1 218 1 78 1 231 1 170 1 378 1 154 1 212 1 184 1 379 1 297 1 299 1 
253 1 
225 1 360 1 250 1 355 1 340 1 118 1 367 1 
336 1 337 1 166 1 67 1 367 2 113 1 191 1 118 1 273 1 73 1 225 1 204 1 207 1 135 1 354 1 61 1 355 1 
48 3 336 6 139 3 6 1 191 12 8 2 89 6 340 1 143 1 346 2 204 5 149 2 95 2 205 2 258 2 96 2 97 1 207 5 60 2 307 2 354 4 355 2 159 2 164 6 360 1 166 4 67 5 365 1 268 2 367 8 113 4 318 1 30 1 118 9 119 2 273 3 175 3 120 3 72 2 225 8 176 2 276 3 277 10 128 1 278 4 78 3 130 2 181 2 135 4 184 3 380 1 333 2 42 1 237 2 
164 5 336 3 217 1 67 1 86 1 166 2 268 2 367 5 191 6 113 2 192 1 28 1 89 5 30 1 118 8 119 2 273 1 320 1 225 5 176 2 54 1 346 2 204 1 257 1 93 1 373 1 130 2 207 1 181 2 135 2 307 1 332 1 354 2 355 2 333 1 
162 1 166 1 67 1 140 1 111 1 268 2 113 1 293 1 316 1 248 1 115 1 370 1 9 1 118 2 372 1 225 2 204 1 178 1 130 1 181 2 100 1 135 1 307 1 354 1 310 1 236 1 45 1 19 1 
225 1 360 1 166 1 367 1 113 1 135 1 354 1 340 1 355 1 118 1 
225 5 176 2 346 2 164 5 336 5 205 1 268 2 367 5 191 10 130 2 181 2 307 1 89 5 119 2 118 5 
207 1 204 1 67 1 355 1 273 1 367 1 
48 1 166 2 139 4 67 3 365 1 26 1 6 2 113 2 318 2 30 2 118 2 273 2 225 2 35 1 345 1 122 1 276 1 277 1 204 3 350 1 278 1 78 4 207 4 135 1 17 1 354 2 184 4 333 2 160 1 
48 1 287 1 139 1 140 2 111 2 4 1 114 1 27 1 293 3 316 2 171 1 318 1 197 1 175 1 372 1 146 1 255 2 276 1 348 1 226 1 277 1 77 1 178 3 78 1 374 1 278 1 129 1 39 1 210 1 184 1 18 1 45 2 
225 2 22 1 164 2 336 2 166 1 367 4 191 4 113 1 135 1 354 1 89 2 355 2 30 1 333 1 118 1 
259 1 335 1 24 1 
259 1 335 1 24 1 
259 1 335 1 107 1 13 1 189 1 
259 1 335 1 24 1 
259 1 335 1 41 1 
259 1 335 1 41 1 
259 1 335 1 41 1 
259 1 335 1 
105 1 331 1 
46 2 146 4 22 1 255 4 21 1 241 1 226 2 348 2 77 8 130 1 181 1 100 1 369 1 249 3 248 1 171 2 153 1 224 4 236 1 18 2 
181 1 46 2 100 1 146 3 22 1 249 2 248 1 241 1 153 1 250 1 77 6 224 3 236 1 130 1 
46 1 146 2 176 1 255 2 346 1 226 1 348 1 77 4 130 1 181 1 134 1 369 1 249 2 171 1 224 2 18 1 119 1 
46 1 176 1 146 4 54 1 346 1 86 2 77 7 130 1 181 1 369 1 29 1 249 2 224 3 119 1 320 1 
46 5 22 1 21 2 241 1 86 2 68 1 369 4 248 2 249 9 29 1 171 2 224 11 119 2 146 12 176 2 346 2 54 2 255 4 226 2 348 2 77 23 130 3 181 3 100 1 101 1 153 1 236 2 18 2 82 1 
146 1 77 1 86 1 
54 1 77 1 224 1 
46 2 146 3 176 1 255 2 346 1 348 1 226 1 77 6 205 1 130 1 181 1 134 1 369 1 249 3 171 1 224 3 18 1 119 1 
46 1 217 1 86 1 28 1 369 1 249 2 171 1 224 6 119 2 320 1 146 6 176 2 54 1 255 2 346 2 348 1 226 1 373 1 93 1 77 12 130 2 181 2 332 1 18 1 158 1 
46 1 146 3 77 6 130 1 181 1 100 1 369 1 248 1 249 2 224 3 236 1 
46 1 146 2 21 1 255 2 241 1 226 1 348 1 77 3 68 1 369 1 249 2 248 1 171 1 153 1 224 1 236 1 18 1 
46 3 146 5 255 2 348 1 226 1 77 10 130 2 181 2 100 1 369 2 115 1 248 2 249 5 171 1 224 5 236 2 18 1 158 1 
255 2 226 1 348 1 77 2 181 1 369 1 249 1 171 1 224 2 18 1 119 1 158 1 
46 1 146 2 176 1 255 2 346 1 226 1 348 1 77 4 130 1 181 1 369 1 249 2 171 1 224 2 18 1 119 1 158 1 
46 1 146 2 21 1 255 6 226 3 348 3 77 3 68 1 292 1 369 1 248 1 249 2 171 3 224 1 236 1 18 3 158 1 
46 7 22 1 21 2 241 1 86 4 68 1 292 1 369 5 248 3 29 1 249 12 171 5 224 16 70 1 119 3 320 1 146 18 176 3 255 10 54 3 346 3 348 5 226 5 126 1 77 34 57 1 130 5 181 5 100 2 134 1 153 1 236 3 18 5 158 1 
46 2 22 1 241 1 86 1 248 1 249 2 171 1 224 4 320 1 146 4 54 1 255 2 348 1 226 1 373 1 77 8 130 1 181 1 100 1 153 1 236 1 18 1 158 1 
46 2 22 1 241 1 86 2 369 1 248 1 29 1 249 3 171 2 224 6 119 1 320 1 146 5 255 4 54 1 346 1 348 2 226 2 373 1 77 11 130 1 181 2 100 1 134 1 153 1 236 1 18 2 158 1 
46 3 22 1 21 1 241 1 217 1 86 1 28 1 369 1 248 1 249 4 171 3 224 9 119 2 320 1 146 10 176 2 54 1 255 6 346 2 348 3 226 3 373 1 93 1 77 19 130 3 181 3 100 1 134 1 332 1 153 1 236 1 18 3 158 1 
46 1 176 1 146 4 346 2 255 2 54 1 226 1 348 1 217 1 93 1 373 1 86 1 77 10 130 1 181 2 28 1 249 1 332 1 171 1 224 6 119 2 18 1 158 1 320 1 
46 2 22 1 241 1 86 1 248 1 249 2 171 1 224 4 320 1 146 4 54 1 255 2 348 1 226 1 373 1 77 8 130 1 181 1 100 1 153 1 236 1 18 1 158 1 
46 1 217 1 86 1 28 1 369 1 249 2 171 1 224 6 119 2 320 1 146 6 176 2 54 1 255 2 346 2 348 1 226 1 373 1 93 1 77 12 130 2 181 2 332 1 18 1 158 1 
46 1 21 1 217 1 86 1 28 1 249 1 171 3 224 6 119 2 320 1 146 5 176 1 255 6 54 1 346 2 348 3 226 3 93 1 373 1 77 11 130 1 181 2 134 1 332 1 18 3 158 1 
46 3 21 2 217 1 86 1 292 1 28 1 369 3 249 6 171 4 224 9 119 3 320 1 146 7 176 2 255 8 54 1 346 3 348 4 226 4 93 1 373 1 77 16 130 2 181 3 332 1 18 4 158 1 
46 3 146 4 241 1 77 7 130 1 181 1 100 1 369 3 248 3 249 6 153 2 224 3 236 3 
46 1 21 1 217 1 86 1 292 1 28 1 249 1 171 3 224 6 119 2 320 1 146 5 176 1 255 6 54 1 346 2 348 3 226 3 93 1 373 1 77 11 130 1 181 2 332 1 18 3 158 1 
39 1 293 1 316 1 124 1 285 1 66 1 178 1 
124 1 285 1 66 1 244 1 110 1 178 1 190 1 39 1 316 1 293 1 211 1 311 1 
35 1 276 1 277 1 48 1 250 1 318 1 139 1 184 1 160 1 278 1 78 1 
276 1 277 1 48 1 287 1 140 1 139 1 178 2 278 1 78 1 39 1 27 1 316 1 293 2 318 1 296 1 184 1 45 1 175 1 
276 1 277 3 48 2 242 1 287 1 140 2 139 1 149 1 95 1 327 1 178 2 278 1 78 1 6 1 39 1 27 1 316 2 293 2 296 1 184 1 310 1 45 1 175 2 
312 1 48 2 242 1 139 2 140 2 366 1 6 1 27 1 293 2 316 2 296 1 175 2 276 1 277 3 149 1 95 1 178 2 327 1 78 2 278 1 39 1 184 2 310 1 45 1 
312 1 48 1 139 3 67 2 367 1 6 1 49 1 251 1 318 1 175 1 120 1 72 1 276 1 277 4 204 2 149 1 95 1 78 3 278 1 207 1 184 3 355 1 237 1 
72 1 312 1 276 1 48 1 277 4 204 2 67 2 139 3 149 1 95 1 258 1 367 1 278 1 78 3 6 1 207 1 318 1 184 3 355 1 237 1 175 1 120 1 
169 1 276 1 139 1 184 1 278 1 78 1 
215 1 276 2 264 1 227 1 48 2 277 3 139 7 267 1 128 1 218 1 78 7 278 3 87 1 208 1 169 1 172 1 318 2 184 6 380 1 341 1 175 1 
46 2 1 1 22 1 241 1 48 1 287 1 108 1 140 1 139 1 4 1 114 2 193 1 27 1 293 2 316 1 249 2 248 1 171 2 7 1 296 1 224 3 175 1 146 3 255 4 344 1 276 1 277 1 226 2 348 2 300 1 77 6 229 1 178 2 278 1 78 1 374 1 129 2 130 1 181 1 39 2 100 1 153 1 184 1 236 1 380 1 18 2 45 1 
360 1 139 1 166 2 67 3 365 1 367 1 113 2 318 1 8 1 142 1 340 1 118 1 273 1 120 1 225 1 72 1 277 2 204 3 258 1 78 1 96 1 207 2 135 2 354 2 184 1 355 1 237 1 159 1 
169 1 276 1 277 2 48 1 139 2 184 2 380 1 237 1 128 1 278 2 78 2 175 1 97 1 
35 1 312 1 276 1 48 1 277 1 139 4 278 1 78 4 318 1 309 1 184 4 380 1 160 1 
276 1 264 1 48 1 277 1 94 1 139 2 78 2 278 2 6 1 152 1 173 1 184 2 341 1 175 1 
186 1 276 1 318 1 154 1 212 1 139 1 184 1 266 1 278 1 78 1 
276 1 277 1 48 1 139 2 184 2 301 1 380 1 267 1 278 1 218 1 78 2 
215 1 35 1 276 2 48 2 277 3 139 5 267 1 78 5 278 2 87 1 6 1 318 1 309 1 184 4 380 1 160 1 
35 1 276 2 48 2 277 3 139 5 267 1 78 5 278 2 87 1 6 1 209 1 318 1 309 1 184 4 380 1 160 1 
276 1 277 1 48 1 140 1 139 1 178 2 366 1 278 1 78 1 39 1 27 1 316 1 293 2 318 1 296 1 184 1 45 1 175 1 
276 1 264 1 227 1 48 1 277 1 139 1 128 1 78 1 278 2 6 1 184 1 341 1 175 1 
39 1 165 1 161 1 375 1 351 1 
72 1 163 1 204 2 242 1 243 1 67 2 165 2 327 1 367 1 375 2 351 2 39 1 102 1 142 1 355 1 310 1 116 1 161 1 103 1 
293 1 316 1 74 1 261 1 178 1 161 1 375 1 37 1 351 1 
102 1 161 1 103 1 
250 1 363 1 303 1 213 1 
269 1 363 1 314 1 303 1 213 1 98 1 20 1 
228 1 314 1 358 1 
263 1 283 1 363 1 141 1 314 3 303 1 98 1 269 3 88 2 213 1 357 1 20 1 
269 2 84 1 123 1 363 1 314 2 303 1 213 1 98 1 20 1 
186 1 269 1 170 1 80 1 212 1 363 1 141 1 314 1 254 1 98 1 20 1 
269 1 363 1 141 1 314 1 213 1 98 1 20 1 
269 1 141 1 314 1 303 1 213 2 98 1 20 1 
3 1 363 1 141 1 314 2 98 2 269 2 262 1 10 1 213 1 20 2 
84 2 141 1 363 2 314 3 303 1 98 1 233 1 269 3 80 1 272 1 213 1 274 1 20 1 
186 2 84 1 363 1 141 1 25 1 314 2 303 1 266 1 98 1 269 2 170 1 223 1 212 1 213 1 20 1 
269 4 84 2 123 1 80 1 338 1 363 2 272 1 141 1 314 4 303 1 213 1 98 2 20 2 
269 1 363 1 141 1 314 1 303 1 213 1 98 1 20 1 
263 1 84 2 363 3 314 4 303 2 98 1 269 4 88 1 80 1 183 1 272 1 213 2 357 1 20 1 
84 1 363 1 141 1 314 2 288 1 303 1 98 1 269 2 317 1 40 1 213 1 20 1 
263 2 363 1 141 1 314 3 303 1 98 1 269 3 88 2 213 1 357 1 20 1 144 1 
368 1 168 2 47 1 363 2 
269 1 141 1 314 1 58 1 98 1 20 1 
269 2 84 1 363 1 141 1 314 2 303 1 213 1 274 1 98 1 20 1 
167 1 
269 1 363 1 141 1 314 1 303 1 213 1 98 1 20 1 
269 3 88 1 84 1 363 1 141 1 314 3 303 1 213 1 274 1 98 1 20 1 
80 1 183 1 363 1 272 1 
363 1 213 1 

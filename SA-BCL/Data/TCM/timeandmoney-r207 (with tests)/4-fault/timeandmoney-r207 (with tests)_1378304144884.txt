#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 330 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 191 47 211 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 351 1 7 6 91 1 297 1 64 1 134 2 65 5 115 3 53 1 333 2 198 1 55 1 307 1 15 1 339 1 233 1 171 2 234 2 101 4 260 9 372 1 286 2 266 9 81 2 33 2 242 1 243 1 
222 1 351 1 7 6 91 1 297 1 64 1 134 2 65 5 115 3 53 1 333 2 198 1 55 1 307 1 15 1 339 1 233 1 171 2 234 2 101 4 260 9 372 1 286 2 266 9 81 2 33 2 242 1 243 1 
222 1 351 1 7 7 91 1 297 1 64 1 134 2 65 6 115 4 53 1 333 2 198 1 55 1 307 1 15 1 339 1 233 1 171 2 234 2 101 5 260 10 372 1 286 2 266 10 81 2 33 2 242 1 243 1 
222 1 351 1 7 4 91 1 297 1 64 1 134 2 65 4 115 2 53 1 333 2 198 1 55 1 307 1 15 1 339 1 233 1 171 2 234 2 101 3 260 7 372 1 286 2 266 7 81 2 33 1 242 1 
222 1 234 1 101 2 351 1 7 3 260 4 64 1 134 1 286 1 65 3 115 1 266 4 333 1 198 1 33 2 243 1 171 1 233 1 
222 1 87 1 234 1 351 1 260 2 21 1 164 1 65 1 286 1 134 1 266 2 198 1 81 1 55 1 242 1 171 1 
222 1 101 1 351 1 7 1 260 3 91 1 286 2 65 2 115 1 266 3 198 1 81 1 171 2 
222 1 324 1 351 1 7 7 91 1 64 1 65 5 134 1 115 3 333 1 198 1 307 1 15 1 171 2 233 1 101 4 234 1 260 9 285 1 286 2 266 9 81 1 33 2 243 1 
222 1 324 1 351 1 7 7 91 1 64 1 65 5 134 1 115 3 333 1 198 1 307 1 15 1 171 2 233 1 101 4 234 1 260 9 285 1 286 2 266 9 81 1 33 2 243 1 
343 1 92 1 123 1 
341 1 191 2 92 1 
240 1 157 2 11 2 106 2 75 1 54 2 311 2 187 2 
189 1 157 3 328 1 356 2 331 1 163 1 273 1 116 1 229 1 11 2 167 1 208 1 54 2 13 1 336 2 98 2 170 1 311 2 100 1 71 1 368 1 75 1 200 1 121 2 25 1 59 1 126 1 217 2 240 1 267 1 106 3 323 1 132 1 154 1 63 1 221 1 187 2 
239 1 240 1 157 1 11 1 106 1 54 1 292 1 311 1 187 1 114 1 
145 1 157 1 282 1 92 1 123 1 162 1 182 1 11 1 345 1 106 1 292 1 184 1 140 1 340 1 
145 1 157 1 282 1 92 1 123 1 11 1 345 1 106 1 54 1 184 2 292 1 311 1 140 1 187 1 340 2 
238 1 202 1 118 1 184 1 340 1 
238 1 118 1 183 1 184 2 42 1 92 1 123 1 340 2 
118 1 184 1 340 1 
157 1 280 1 114 1 238 1 239 1 240 1 11 1 106 1 54 1 292 1 184 1 311 1 187 1 340 1 
92 1 
238 1 118 1 183 1 184 2 92 1 123 1 366 1 340 2 
199 1 90 1 225 1 281 2 92 1 123 1 76 1 316 1 195 1 26 1 104 1 238 2 118 2 183 1 184 5 203 2 231 2 119 1 340 5 
343 1 75 1 
350 1 157 2 11 2 106 2 67 1 75 2 54 1 311 1 187 1 
346 1 254 1 127 1 
100 1 189 1 157 1 75 1 200 1 121 1 356 1 59 1 126 1 262 1 106 1 167 1 208 1 336 1 323 1 154 1 
39 1 157 5 20 2 75 1 182 1 11 5 106 5 67 1 45 1 54 1 12 1 311 4 84 1 187 4 
360 1 157 2 11 2 106 2 292 1 311 2 187 2 114 1 
189 1 100 1 157 2 20 1 200 1 121 1 356 1 59 1 126 1 127 1 11 1 167 1 106 2 208 1 323 1 336 1 84 1 311 1 154 1 187 1 
157 3 11 3 106 3 20 1 75 1 54 1 311 3 187 3 
157 1 11 1 106 1 292 1 311 1 187 1 114 1 
350 1 157 1 11 1 106 1 67 1 54 1 292 1 311 1 187 1 
189 1 157 4 356 1 331 1 163 1 116 1 229 1 11 3 167 1 67 1 208 1 54 2 336 1 98 1 311 3 140 1 340 1 100 1 145 1 368 1 20 1 75 1 200 1 121 1 282 1 25 1 59 1 126 1 217 2 150 1 267 1 240 1 345 1 106 4 292 1 184 1 323 1 132 1 84 1 154 1 48 1 63 1 221 1 187 3 
157 2 11 2 106 2 20 1 75 1 45 1 311 1 182 1 187 1 
145 1 157 3 20 2 282 1 92 1 11 3 345 1 106 3 67 1 54 1 184 1 292 1 84 1 311 3 48 1 140 1 187 3 155 1 340 1 
157 2 20 1 127 1 11 2 106 2 67 1 54 1 311 2 254 1 187 2 
100 1 189 1 157 1 75 1 200 1 121 1 356 1 59 1 126 1 106 1 167 1 208 1 336 1 323 1 154 1 
189 1 157 1 75 1 200 1 121 1 356 1 59 1 126 1 250 1 344 1 106 1 167 1 336 1 323 1 154 1 
224 1 112 1 331 1 93 1 301 1 116 1 229 1 98 4 254 2 71 2 368 1 25 1 217 2 127 2 78 1 152 1 29 1 346 2 291 1 85 1 221 1 63 2 
360 1 157 1 11 1 106 1 292 1 311 1 140 1 187 1 
377 1 347 1 
377 1 347 1 
194 1 160 1 
194 1 160 1 
194 1 160 1 
377 1 364 1 347 1 
377 1 364 1 347 1 
4 1 377 1 347 1 
377 2 40 1 194 1 185 1 160 1 347 2 
377 1 364 1 347 1 
158 1 377 1 347 1 
158 1 377 1 347 1 
158 1 377 1 347 1 
86 1 157 2 4 1 135 1 274 1 11 2 253 1 311 2 340 1 367 1 142 1 144 1 177 1 75 1 125 1 318 1 219 1 106 2 377 1 128 1 184 1 32 1 187 2 347 1 
86 2 142 2 143 1 144 3 88 1 259 2 205 1 147 1 214 1 40 1 92 1 318 2 358 1 274 1 377 2 184 2 32 2 347 2 340 2 
134 1 234 1 333 1 
134 1 234 1 164 1 
134 3 265 1 333 2 192 1 308 1 164 1 
134 2 265 1 333 1 308 1 169 1 164 1 
134 2 265 1 333 1 308 2 164 1 
224 1 191 3 92 2 9 2 299 1 93 1 332 2 251 1 118 1 231 1 119 1 340 5 341 1 199 2 120 1 281 1 122 2 123 1 316 3 216 1 125 1 342 1 238 4 105 1 219 1 61 1 183 1 128 1 291 1 184 5 203 1 85 1 
238 1 190 1 184 1 38 1 232 1 340 1 
224 1 191 4 92 3 9 1 93 1 332 2 251 1 231 1 340 3 341 2 199 2 120 1 281 1 122 2 123 1 76 1 316 3 125 1 342 1 238 2 105 1 61 1 291 1 184 3 203 1 85 1 
281 1 76 1 330 1 342 1 61 1 184 1 203 1 231 1 340 1 
343 1 148 1 126 1 
176 1 126 1 
44 1 
200 1 154 1 126 1 
41 1 126 1 
154 1 126 1 
17 1 188 1 200 1 148 2 154 1 126 3 
224 1 18 1 71 4 313 1 247 1 111 1 151 3 264 2 275 1 83 1 131 1 378 2 310 1 209 1 98 7 63 3 85 1 
224 1 18 1 71 4 313 1 247 1 111 1 151 3 264 2 275 1 83 1 131 1 378 2 310 1 209 1 98 7 63 3 85 1 
224 1 18 1 71 4 313 1 247 1 111 1 151 3 264 2 252 1 275 1 83 1 131 1 378 2 310 1 209 1 98 7 63 3 85 1 
224 5 295 4 247 1 111 2 331 2 93 4 137 1 116 2 229 2 207 1 275 5 37 2 209 1 310 2 98 37 277 1 70 1 18 1 71 19 313 2 120 4 315 1 215 1 217 4 264 3 151 8 320 4 291 4 83 2 131 1 378 3 109 1 186 1 221 2 63 18 85 5 
224 1 247 1 111 1 193 1 331 2 116 2 229 2 275 1 37 1 209 1 310 1 98 9 71 5 313 1 24 1 217 4 264 2 151 4 83 1 378 3 131 1 85 1 221 2 63 4 
222 1 189 1 351 1 7 1 327 1 192 1 113 1 356 1 164 1 94 1 65 1 134 2 136 1 333 1 167 1 198 1 334 1 336 1 171 1 172 1 234 1 260 2 121 1 286 1 288 1 201 1 374 1 266 2 81 1 294 1 
222 1 189 1 351 1 327 1 7 2 192 1 113 1 356 1 164 1 65 1 134 2 136 1 333 1 167 1 334 1 97 1 336 1 363 1 171 1 172 1 234 1 260 3 121 1 286 1 201 1 374 1 266 3 81 1 293 1 294 1 
222 1 189 1 351 1 327 1 7 2 192 1 113 1 356 1 164 1 65 1 134 2 136 1 167 1 333 1 334 1 97 1 336 1 234 1 260 2 121 1 201 1 374 1 266 2 81 1 293 1 
189 1 245 1 327 2 260 1 121 1 113 2 356 1 59 1 10 1 126 1 286 1 218 1 228 1 117 1 266 1 167 1 81 2 334 2 335 1 363 1 336 1 154 1 171 1 
189 1 327 1 192 1 113 1 356 1 164 1 94 1 134 2 136 1 333 1 167 1 198 1 334 1 97 1 336 1 171 1 172 1 234 1 260 1 121 1 286 1 201 1 374 1 266 1 81 1 294 1 
300 1 
189 1 51 1 89 1 191 2 5 1 133 1 92 2 95 1 11 1 335 1 14 2 336 2 231 1 140 1 340 5 145 1 341 2 235 2 199 2 281 1 282 1 23 2 59 2 345 1 106 1 107 2 292 1 203 1 154 1 348 2 245 1 157 1 352 1 204 1 356 2 162 1 161 1 251 1 167 1 118 6 36 1 362 1 119 1 255 2 74 2 73 4 121 2 123 1 181 1 316 2 182 1 126 1 183 3 184 5 47 1 
51 1 157 1 5 1 162 1 95 1 11 1 118 2 36 1 362 1 140 1 366 1 340 3 145 1 73 2 282 1 182 1 345 1 106 1 183 1 184 3 292 1 107 1 
51 1 157 1 5 1 92 1 162 1 95 1 11 1 118 1 36 1 362 1 14 1 140 1 366 1 340 3 145 1 73 3 282 1 123 1 182 1 345 1 106 1 183 1 184 3 292 1 
51 1 157 1 5 1 92 1 162 1 95 1 11 1 118 2 36 1 362 1 14 1 140 1 366 1 340 3 145 1 73 3 235 1 282 1 123 1 182 1 345 1 106 1 183 1 184 3 292 1 107 1 
51 1 5 1 92 5 95 1 11 1 14 4 338 1 231 1 140 1 99 1 340 5 145 1 341 2 235 4 199 1 281 1 282 1 23 2 345 1 106 1 107 4 292 1 203 1 348 2 157 1 34 1 162 1 161 1 118 7 206 1 36 1 362 1 366 1 119 1 255 2 211 1 73 6 74 2 123 5 316 1 182 1 183 3 184 5 47 1 
51 1 157 1 191 2 5 1 133 1 92 2 162 1 161 1 95 1 11 1 118 4 36 1 14 2 362 1 231 1 140 1 119 1 340 4 255 2 145 1 341 2 235 2 74 2 199 1 73 4 281 1 282 1 23 2 123 1 316 1 182 1 345 1 106 1 183 2 107 2 184 4 292 1 203 1 47 1 348 2 
51 1 157 1 5 1 92 1 161 1 162 1 95 1 11 1 118 4 206 1 36 1 14 2 362 1 338 1 231 1 140 1 119 1 340 4 255 2 211 1 145 1 341 2 235 2 74 2 199 1 73 4 281 1 282 1 23 2 123 1 316 1 182 1 345 1 106 1 183 2 107 2 184 4 292 1 203 1 47 1 348 2 
51 1 157 1 5 1 92 1 161 1 162 1 95 1 11 1 118 4 206 1 36 1 14 2 362 1 338 1 231 1 140 1 119 1 340 4 255 2 211 1 145 1 341 2 235 2 74 2 199 1 73 4 281 1 282 1 23 2 123 1 316 1 182 1 345 1 106 1 183 2 107 2 184 4 292 1 203 1 47 1 348 2 
51 1 246 1 157 1 191 1 5 1 162 1 95 1 11 1 36 1 362 1 231 1 140 1 119 1 340 2 211 1 145 1 312 1 199 1 73 2 19 1 281 1 282 1 23 1 316 1 182 1 321 1 345 1 106 1 184 2 292 1 203 1 47 1 348 1 
51 1 157 1 5 1 92 1 161 1 162 1 95 1 11 1 206 1 118 5 36 1 362 1 14 3 231 1 338 1 140 1 99 1 119 1 340 4 255 2 211 1 145 1 341 2 74 2 199 1 73 5 235 3 281 1 282 1 23 2 123 1 316 1 182 1 345 1 106 1 183 2 184 4 292 1 107 3 203 1 47 1 348 2 
51 1 157 1 5 1 92 1 161 1 162 1 95 1 11 1 206 1 118 5 36 1 362 1 14 3 231 1 338 1 140 1 99 1 119 1 340 4 255 2 211 1 145 1 341 2 74 2 199 1 73 5 235 3 281 1 282 1 23 2 123 1 316 1 182 1 345 1 106 1 183 2 184 4 292 1 107 3 203 1 47 1 348 2 
51 1 157 1 191 2 5 1 133 1 248 2 92 1 162 1 95 1 11 1 118 4 36 1 14 2 362 1 231 1 140 1 119 1 340 4 145 1 312 1 235 2 199 1 73 4 281 1 282 1 23 2 123 1 316 1 182 1 321 2 345 1 106 1 183 2 107 2 184 4 292 1 203 1 47 1 348 2 
224 1 247 1 331 1 116 1 229 1 310 1 209 1 98 6 254 1 71 3 368 1 75 2 25 1 127 1 217 2 151 2 264 1 343 1 29 1 346 1 83 1 378 2 131 1 221 1 85 1 63 3 
224 2 295 3 331 2 93 2 273 1 116 2 137 1 229 2 275 1 361 1 365 1 16 1 98 14 254 4 277 1 71 8 368 1 120 2 75 1 315 1 25 2 217 4 127 11 151 1 27 1 320 3 346 11 291 1 132 1 63 6 221 2 85 1 
189 1 157 2 356 1 331 1 273 1 116 1 229 1 11 1 167 1 208 1 336 1 361 1 311 1 98 2 254 1 100 1 72 1 71 1 368 1 20 1 75 1 200 1 121 1 25 1 59 1 126 1 262 1 217 2 287 1 28 1 106 2 323 1 132 1 84 1 154 1 187 1 221 1 63 1 
189 2 224 3 331 3 93 2 273 1 229 3 11 1 97 1 275 4 336 3 98 20 100 2 278 2 20 1 200 2 25 3 59 1 284 1 151 6 106 3 346 7 291 2 154 2 63 10 157 3 247 1 356 3 302 1 116 3 167 2 305 2 208 2 361 1 310 1 209 1 311 1 254 7 71 10 368 3 120 2 75 2 121 3 126 2 217 6 127 7 264 1 319 2 375 1 267 2 79 2 83 1 323 2 131 1 378 2 132 1 84 1 85 3 221 3 187 1 
189 2 245 1 157 1 356 8 331 2 303 1 273 1 116 2 229 2 11 1 167 2 139 1 96 1 97 1 335 1 69 1 336 7 311 1 98 2 170 2 256 1 71 1 20 1 368 2 261 1 121 8 25 2 59 2 126 3 217 4 288 1 106 1 29 1 108 1 132 1 154 2 187 1 221 2 63 1 
224 1 157 1 331 1 93 1 116 1 229 1 11 1 67 1 54 1 361 1 311 1 98 3 254 1 173 1 71 1 368 1 120 1 25 1 127 1 217 2 106 1 346 1 291 1 187 1 221 1 85 1 63 2 
224 1 71 2 368 1 25 1 331 1 93 1 127 1 217 2 78 1 151 1 116 1 229 1 346 1 29 1 275 1 98 2 254 1 221 1 
368 1 25 1 331 1 301 1 127 1 217 2 116 1 229 1 346 1 29 1 291 1 98 2 254 1 221 1 85 1 63 2 
224 1 71 2 368 1 120 1 25 1 331 1 93 1 127 2 217 2 151 1 116 1 229 1 346 2 29 1 291 1 275 1 98 4 254 2 63 2 85 1 221 1 
224 1 71 2 368 1 25 1 331 1 93 1 127 1 217 2 78 1 151 1 116 1 229 1 346 1 139 1 275 1 98 2 254 1 221 1 
368 1 25 1 331 1 301 1 127 1 217 2 116 1 229 1 346 1 139 1 291 1 98 2 254 1 221 1 85 1 63 2 
224 1 71 2 368 1 120 1 25 1 331 1 93 1 127 2 217 2 116 1 229 1 346 2 139 1 291 1 98 4 254 2 63 2 85 1 221 1 
224 1 71 2 368 1 120 1 25 1 331 1 93 1 127 2 217 2 151 1 116 1 229 1 346 2 291 1 275 1 98 4 254 2 63 2 85 1 221 1 
189 1 157 1 356 1 331 1 273 1 116 1 229 1 167 1 208 1 336 1 98 2 100 1 71 1 368 1 75 1 200 1 121 1 25 1 59 1 126 1 217 2 267 1 106 1 323 1 132 1 154 1 221 1 63 1 
189 1 326 1 157 1 356 1 331 1 273 1 116 1 250 1 229 1 167 1 336 1 98 2 71 1 368 1 75 1 200 1 121 1 25 1 59 1 126 1 217 2 344 1 106 1 323 1 132 1 154 1 221 1 63 1 
224 1 71 2 368 1 120 1 25 1 331 1 93 1 127 2 217 2 151 1 116 1 229 1 346 2 291 1 275 1 361 1 98 4 254 2 63 2 85 1 221 1 
224 1 189 1 157 1 356 1 331 1 93 1 116 1 229 1 167 1 208 1 275 1 336 1 98 4 254 2 100 1 71 2 368 1 120 1 200 1 121 1 25 1 126 1 127 2 217 2 151 1 288 1 267 1 79 1 106 1 346 2 291 1 323 1 154 1 63 2 85 1 221 1 
224 1 157 1 331 1 93 1 116 1 229 1 11 1 67 1 275 1 54 1 361 1 311 1 98 3 254 1 71 2 368 1 120 1 25 1 217 2 127 1 151 1 289 1 106 1 346 1 291 1 63 1 85 1 187 1 221 1 
224 9 2 1 193 1 329 1 52 1 331 4 93 8 196 1 137 2 229 4 275 9 98 57 277 2 146 1 102 1 149 1 151 11 291 7 290 2 63 27 110 1 295 4 247 1 116 4 168 1 37 2 209 1 310 1 71 30 174 1 175 4 120 8 315 2 371 1 43 1 217 8 264 1 320 4 82 1 83 1 378 2 131 1 85 8 221 4 
224 3 2 2 295 2 193 1 52 1 329 2 331 3 196 1 93 3 116 3 229 3 275 2 37 2 98 26 277 2 71 14 174 1 146 1 175 4 102 1 120 3 371 1 43 1 149 1 217 6 151 3 320 2 290 1 291 2 82 1 378 1 85 2 63 12 221 3 
224 9 2 2 193 1 329 1 52 1 331 4 93 7 196 1 137 2 229 4 275 9 98 64 277 3 146 1 102 1 149 1 151 12 291 7 290 1 63 31 295 5 247 2 116 4 168 1 37 2 209 2 310 2 71 33 174 1 175 4 120 7 315 2 371 1 43 1 124 1 217 8 264 2 320 5 82 1 83 2 378 3 131 2 85 9 221 4 
224 8 2 1 193 1 329 1 52 1 331 4 93 7 196 1 137 2 229 4 275 7 98 53 277 2 146 1 102 1 149 1 151 9 291 6 290 1 63 25 295 4 247 1 116 4 168 1 37 2 209 1 310 1 71 28 174 1 175 4 120 7 315 2 371 1 43 1 217 8 264 1 320 4 82 1 83 1 378 2 131 1 85 7 221 4 
224 8 295 4 2 1 247 1 193 1 52 1 329 1 331 2 196 1 93 7 116 2 137 2 229 2 37 1 275 7 310 1 209 1 98 52 277 2 71 27 174 1 146 1 175 4 102 1 120 7 315 2 371 1 43 1 149 1 217 4 264 1 151 8 320 4 290 1 291 7 83 1 82 1 131 1 378 1 221 2 63 25 85 8 
318 1 142 1 86 1 358 1 147 1 377 1 40 1 32 1 62 1 347 1 
135 1 4 1 
318 1 142 1 86 1 377 1 296 1 370 1 32 1 272 1 347 1 
355 1 364 1 
158 1 185 1 263 1 
86 1 142 1 143 1 144 2 88 1 259 1 147 1 214 1 40 1 92 1 318 1 358 1 274 1 377 1 184 1 32 1 347 1 340 1 
86 1 142 1 143 1 144 2 88 1 259 1 147 1 214 1 40 1 92 1 318 1 358 1 274 1 377 1 184 1 32 1 347 1 340 1 
86 1 142 1 143 1 144 2 88 1 259 1 147 1 214 1 40 1 92 1 318 1 358 1 274 1 377 1 184 1 32 1 347 1 340 1 
355 1 364 1 185 1 
355 1 364 1 185 1 
158 1 263 1 
158 1 185 1 263 1 
253 1 367 1 
86 1 157 2 4 1 135 1 138 1 11 2 253 1 311 2 340 1 367 1 143 1 142 1 144 1 177 1 259 1 75 1 125 1 318 1 238 1 219 1 106 2 377 1 128 1 184 1 32 1 347 1 187 2 
189 1 157 2 353 1 356 2 331 1 303 1 227 1 273 1 116 1 229 1 11 2 167 1 361 1 336 2 337 1 98 2 170 2 71 1 279 1 368 1 121 2 22 1 25 1 126 1 217 2 106 2 108 1 132 1 154 1 221 1 63 1 
189 1 234 1 180 1 192 1 121 2 103 1 356 2 164 1 134 2 288 1 374 1 136 1 220 1 333 1 167 1 334 1 97 1 336 2 294 1 
189 1 234 1 192 1 121 1 103 1 356 1 164 1 283 1 134 2 374 1 136 1 333 1 167 1 334 1 97 1 336 1 294 1 
189 1 245 1 121 1 356 1 59 1 126 1 218 1 220 1 167 1 334 1 30 1 335 1 336 1 154 1 
189 1 234 1 180 1 192 1 121 1 103 1 356 1 164 1 134 2 374 1 136 1 220 1 333 1 167 1 334 1 97 1 336 1 294 1 
268 1 
343 1 199 1 90 1 92 1 123 1 316 1 26 1 
191 1 92 2 161 1 118 1 231 1 119 1 340 1 255 1 341 1 74 1 199 1 281 1 123 1 316 1 183 1 184 1 203 1 
189 3 224 2 271 1 3 1 90 1 191 12 8 2 92 8 93 2 332 6 230 2 336 3 231 4 340 5 17 1 141 2 145 2 341 6 199 8 200 3 281 4 148 2 26 1 59 1 288 1 60 1 291 2 203 4 31 2 154 3 156 2 356 3 357 2 359 1 251 2 167 4 304 1 118 5 309 2 119 4 176 3 120 2 121 3 41 2 122 6 123 2 181 1 316 9 126 10 319 2 183 3 184 5 85 2 
224 2 295 1 191 6 35 1 92 5 93 2 332 5 251 1 118 1 231 2 277 1 119 2 340 1 174 1 146 1 341 3 199 5 213 2 102 1 120 2 281 2 122 5 181 1 371 1 123 2 316 8 43 1 317 1 320 1 183 1 291 2 184 1 31 1 203 2 85 2 
224 2 157 1 114 1 11 1 206 1 54 1 310 1 231 1 311 1 119 1 340 1 199 2 213 2 236 1 281 1 280 1 316 2 239 1 240 1 106 1 292 1 184 1 31 1 83 1 203 1 131 1 85 1 187 1 
199 1 90 1 281 1 123 1 92 1 316 1 26 1 203 1 231 1 119 1 
224 2 341 5 199 5 191 10 120 2 122 5 92 5 316 5 93 2 332 5 319 1 291 2 31 1 85 2 
118 1 183 1 184 1 92 1 123 1 340 1 
189 1 245 1 89 1 3 2 204 1 226 1 356 4 359 1 251 2 167 1 118 4 335 1 336 4 231 2 119 1 340 3 199 2 281 2 121 4 76 1 181 2 316 2 59 2 126 1 183 2 322 1 184 3 203 2 154 1 
189 1 157 3 356 1 331 1 163 1 116 1 229 1 11 2 167 1 208 1 54 2 336 1 98 1 311 2 100 1 368 1 75 1 200 1 121 1 25 1 59 1 126 1 217 2 240 1 267 1 106 3 323 1 132 1 154 1 63 1 221 1 187 2 
341 2 199 2 191 4 281 1 122 2 123 2 92 4 181 1 316 1 332 2 264 1 251 1 203 1 231 1 119 1 
318 1 68 1 32 1 
318 1 68 1 32 1 
318 1 358 1 306 1 32 1 367 1 
318 1 68 1 32 1 
318 1 80 1 32 1 
318 1 80 1 32 1 
318 1 80 1 32 1 
318 1 32 1 
377 1 347 1 
224 1 71 4 247 1 331 2 217 4 264 1 151 3 116 2 229 2 275 1 37 1 83 1 131 1 378 2 209 1 310 1 98 8 85 1 63 4 221 2 
224 1 71 3 247 1 264 1 151 2 343 1 83 1 209 1 310 1 378 2 131 1 98 6 63 3 85 1 
224 1 71 2 120 1 331 1 93 1 217 2 197 1 116 1 229 1 291 1 98 4 63 2 85 1 221 1 
224 2 71 6 295 2 120 2 315 1 93 2 151 2 320 2 137 1 291 2 275 2 98 12 85 2 277 1 63 6 
224 4 295 2 247 1 331 2 93 2 137 1 116 2 229 2 207 1 275 5 37 2 310 4 209 1 98 30 71 14 236 1 120 2 315 1 217 4 264 1 151 10 320 2 27 1 291 2 83 4 131 2 378 5 63 16 85 4 221 2 
295 1 98 1 63 1 
320 1 71 1 98 1 
224 1 71 3 120 1 331 1 93 1 217 2 319 1 151 1 116 1 197 1 229 1 275 1 291 1 98 6 221 1 63 3 85 1 
224 2 295 1 193 1 331 1 93 2 116 1 229 1 275 1 98 12 277 1 71 6 146 1 174 1 102 1 120 2 371 1 43 1 217 2 151 1 320 1 291 2 63 6 221 1 85 2 
224 1 71 3 151 2 275 1 83 1 131 1 310 1 378 1 98 6 85 1 63 3 
71 1 247 1 331 1 217 2 151 2 116 1 229 1 207 1 275 1 37 1 83 1 378 1 310 1 209 1 98 3 63 2 221 1 
224 2 71 5 236 1 193 1 331 1 217 2 151 5 116 1 229 1 275 2 83 2 310 2 378 3 131 1 98 10 221 1 63 5 85 2 
224 1 71 2 193 1 331 1 93 1 217 2 151 1 116 1 229 1 275 1 98 2 221 1 
224 1 71 2 120 1 193 1 331 1 93 1 217 2 151 1 116 1 229 1 291 1 275 1 98 4 63 2 85 1 221 1 
71 1 193 1 331 3 217 6 151 2 116 3 229 3 207 1 168 1 37 1 275 1 83 1 310 1 378 1 98 3 63 2 221 3 
224 6 295 4 247 1 193 1 331 5 93 4 197 1 116 5 137 1 229 5 207 1 168 1 37 2 275 7 310 3 209 1 98 41 277 1 70 1 71 20 120 4 315 1 217 10 264 1 151 11 320 4 291 4 83 3 131 2 378 4 109 1 186 1 63 21 221 5 85 6 
224 1 295 1 247 1 193 1 331 1 116 1 229 1 209 1 310 1 98 8 277 1 71 4 146 1 217 2 264 1 151 2 320 1 83 1 378 2 131 1 85 1 63 4 221 1 
224 2 295 2 247 1 193 1 331 2 93 1 116 2 197 1 137 1 229 2 275 1 310 1 209 1 98 11 277 1 71 6 146 1 120 1 217 4 264 1 151 3 320 1 83 1 131 1 378 2 85 1 63 5 221 2 
224 3 295 1 247 1 193 1 331 3 93 2 197 1 116 3 229 3 275 1 37 1 310 1 209 1 98 19 277 1 71 9 146 1 174 1 102 1 120 2 371 1 43 1 217 6 264 1 151 4 320 1 291 2 83 1 131 1 378 3 63 10 221 3 85 3 
224 3 295 1 247 1 193 1 331 3 93 2 197 1 116 3 229 3 37 1 275 2 310 1 209 1 98 17 277 1 71 10 146 1 174 1 102 1 120 2 371 1 43 1 217 6 264 1 151 4 320 1 291 1 83 1 131 1 378 2 63 7 221 3 85 2 
224 1 295 1 247 1 193 1 331 1 116 1 229 1 209 1 310 1 98 8 277 1 71 4 146 1 217 2 264 1 151 2 320 1 83 1 378 2 131 1 85 1 63 4 221 1 
224 2 295 1 193 1 331 1 93 2 116 1 229 1 275 1 98 12 277 1 71 6 146 1 174 1 102 1 120 2 371 1 43 1 217 2 151 1 320 1 291 2 63 6 221 1 85 2 
224 3 295 1 247 1 193 1 331 4 93 2 197 1 116 4 229 4 275 2 37 2 310 1 209 1 98 18 277 1 71 10 174 1 146 1 102 1 120 2 371 1 43 1 217 8 264 1 151 5 320 1 291 1 83 1 131 1 378 3 63 8 221 4 85 2 
224 2 295 1 193 1 331 3 93 2 116 3 229 3 168 1 37 1 275 2 98 11 277 1 71 7 146 1 174 1 102 1 120 2 371 1 43 1 217 6 151 2 320 1 291 1 63 4 221 3 85 1 
224 1 71 3 247 1 151 6 275 3 83 3 209 2 310 3 378 3 131 1 98 7 63 4 85 1 
224 3 295 1 247 1 193 1 331 4 93 2 116 4 229 4 168 1 275 1 37 2 310 1 209 1 98 18 277 1 71 10 174 1 146 1 102 1 120 2 371 1 43 1 217 8 264 1 151 4 320 1 291 1 83 1 131 1 378 3 63 8 221 4 85 2 
210 1 157 1 11 1 106 1 75 1 45 1 182 1 
210 1 1 1 157 1 75 1 159 1 182 1 376 1 11 1 106 1 45 1 49 1 349 1 
189 1 343 1 245 1 167 1 121 1 335 1 356 1 336 1 154 1 59 1 126 1 
100 1 189 1 157 2 20 1 75 1 200 1 121 1 356 1 59 1 126 1 11 1 167 1 106 2 323 1 336 1 311 1 154 1 187 1 
189 1 157 2 3 1 356 1 357 1 11 2 167 1 336 1 311 2 140 1 100 1 20 1 75 1 200 2 121 1 282 1 41 1 126 3 106 2 292 1 323 1 154 2 187 1 
189 1 157 2 3 1 356 2 357 1 11 2 167 1 336 2 311 2 140 1 178 1 20 1 75 1 200 2 121 2 282 1 41 1 126 3 344 1 106 2 292 1 323 1 154 2 187 1 
189 1 3 1 6 1 356 3 92 1 357 1 167 1 118 1 336 3 340 2 145 1 178 1 176 1 200 1 121 3 41 1 148 1 123 1 59 1 126 4 46 1 184 2 154 1 
141 1 189 1 145 1 178 1 3 1 176 1 200 1 121 3 41 1 356 3 92 1 123 1 148 1 59 1 357 1 126 4 167 1 118 1 184 2 336 3 154 1 340 2 
189 1 167 1 96 1 121 1 356 1 336 1 
17 1 189 2 256 1 212 1 179 1 261 1 200 1 121 7 356 7 59 2 126 3 288 1 167 3 96 1 97 1 108 1 69 1 336 6 170 1 276 1 154 2 
224 1 189 1 157 2 247 1 356 1 331 2 116 2 229 2 11 1 167 1 305 1 208 1 361 1 336 1 310 1 209 1 98 6 311 1 254 1 100 1 71 3 279 1 368 2 20 1 75 2 200 1 121 1 25 2 126 1 127 1 217 4 264 1 151 2 288 1 267 1 106 2 79 1 346 1 83 1 323 1 131 1 378 2 154 1 63 3 85 1 187 1 221 2 
90 1 356 1 92 1 359 1 118 2 230 1 336 1 309 1 231 2 119 2 340 3 141 1 145 1 199 1 176 1 281 2 121 1 123 1 148 1 316 1 26 1 59 1 126 2 238 1 183 1 184 3 203 2 156 1 
17 1 189 1 200 1 121 2 356 2 148 1 126 2 288 1 60 1 167 2 96 1 336 2 154 1 
189 1 245 1 178 1 121 4 356 4 59 1 126 1 237 1 288 1 167 1 335 1 336 4 154 1 
189 1 3 1 179 1 200 1 121 2 356 2 126 1 375 1 167 2 241 1 269 1 336 2 276 1 154 1 
134 1 189 1 136 1 234 1 167 1 121 1 356 1 336 1 164 1 59 1 
189 1 121 2 356 2 126 1 288 1 167 1 97 1 336 2 108 1 337 1 154 1 
189 2 256 1 245 1 3 1 121 5 356 5 59 1 126 3 237 1 288 1 167 2 335 1 336 4 69 1 108 1 154 2 
189 2 256 1 245 1 3 1 249 1 121 5 356 5 59 1 126 3 237 1 288 1 167 2 335 1 336 4 108 1 154 2 
189 1 157 2 20 1 75 1 200 1 121 1 356 1 59 1 126 1 344 1 11 1 167 1 106 2 323 1 336 1 311 1 154 1 187 1 
17 1 189 1 212 1 3 1 179 1 200 1 121 1 356 1 126 1 167 2 336 1 276 1 154 1 
257 1 75 1 369 1 129 1 56 1 
145 1 257 2 57 1 354 1 75 1 369 2 282 1 92 1 123 1 238 1 345 1 153 1 292 1 184 2 129 2 56 1 140 1 48 1 340 2 
227 1 257 1 157 1 11 1 106 1 353 1 369 1 22 1 56 1 
354 1 153 1 56 1 
65 1 222 1 343 1 351 1 
65 1 222 1 286 1 266 1 351 1 260 1 171 1 
266 1 327 1 81 1 
222 1 351 1 260 3 65 1 286 1 373 1 266 3 198 1 55 2 130 1 171 1 50 1 
65 1 222 1 286 1 266 2 351 1 7 1 260 2 33 1 171 1 
134 1 65 1 286 1 234 1 101 1 266 1 333 1 198 1 260 1 233 1 171 1 
65 1 286 1 266 1 351 1 198 1 260 1 171 1 
222 1 286 1 266 1 351 2 198 1 260 1 171 1 
351 1 260 2 65 1 165 1 286 2 166 1 66 1 266 2 198 1 171 2 
222 1 101 1 351 1 7 2 260 3 286 1 65 2 115 1 266 3 198 1 307 1 15 1 171 1 
222 1 244 1 234 1 351 1 7 1 260 2 192 1 164 1 65 1 134 2 286 1 266 2 333 1 198 1 171 1 
222 1 101 1 351 1 7 2 260 4 286 2 65 2 115 1 266 4 198 1 33 1 243 1 171 2 
65 1 222 1 286 1 266 1 351 1 198 1 260 1 171 1 
222 2 101 1 351 2 258 1 7 2 260 4 373 1 286 1 65 3 115 1 266 4 55 1 50 1 171 1 
223 1 222 1 0 1 351 1 7 1 260 2 285 1 65 1 286 1 266 2 198 1 171 1 
222 1 351 1 260 3 298 1 373 1 65 1 286 1 266 3 198 1 55 2 171 1 50 2 
65 2 270 1 325 1 314 2 
286 1 266 1 198 1 260 1 58 1 171 1 
65 1 222 1 286 1 266 2 351 1 7 1 198 1 260 2 307 1 171 1 
77 1 
65 1 222 1 286 1 266 1 351 1 198 1 260 1 171 1 
222 1 351 1 7 1 260 3 286 1 65 1 266 3 198 1 55 1 307 1 171 1 
65 1 115 1 101 1 258 1 
65 1 351 1 

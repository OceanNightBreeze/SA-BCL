#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 4 318 1 125 1 245 2 294 2 226 3 342 6 82 2 249 1 162 2 252 1 281 1 324 1 9 2 215 2 93 5 258 1 147 1 310 1 13 1 116 9 334 1 335 1 312 1 176 1 16 1 238 9 44 2 
204 4 318 1 125 1 245 2 294 2 226 3 342 6 82 2 249 1 162 2 252 1 281 1 324 1 215 2 9 2 93 5 258 1 147 1 310 1 13 1 116 9 334 1 335 1 312 1 176 1 16 1 238 9 44 2 
204 5 318 1 125 1 245 2 294 2 226 4 342 7 82 2 249 1 162 2 252 1 281 1 324 1 215 2 9 2 93 6 258 1 147 1 310 1 13 1 116 10 334 1 335 1 312 1 176 1 16 1 238 10 44 2 
204 3 318 1 125 1 245 2 294 2 226 2 342 4 82 2 249 1 162 2 252 1 281 1 324 1 215 2 9 1 93 4 258 1 147 1 13 1 116 7 334 1 335 1 312 1 176 1 16 1 238 7 44 2 
204 2 245 1 294 1 215 1 9 2 93 3 147 1 226 1 310 1 334 1 116 4 342 3 82 1 176 1 249 1 16 1 238 4 44 1 
270 1 245 1 294 1 215 1 93 1 147 1 13 1 334 1 116 2 335 1 176 1 162 1 238 2 315 1 29 1 44 1 
204 1 125 1 245 2 93 2 147 1 226 1 334 1 116 3 342 1 176 1 162 1 238 3 44 2 
204 4 125 1 245 2 294 1 226 3 133 1 342 7 82 1 249 1 162 1 281 1 346 1 9 2 215 1 93 5 258 1 147 1 310 1 116 9 334 1 176 1 16 1 238 9 44 2 
204 4 125 1 245 2 294 1 226 3 133 1 342 7 82 1 249 1 162 1 281 1 346 1 9 2 215 1 93 5 258 1 147 1 310 1 116 9 334 1 176 1 16 1 238 9 44 2 
377 1 189 1 274 1 
303 2 336 1 274 1 
187 2 28 2 349 2 319 2 69 1 111 2 250 2 79 1 
20 1 206 1 319 3 69 1 340 1 0 1 225 1 27 1 359 1 247 1 79 1 108 2 187 3 28 2 134 2 135 1 111 2 7 1 83 1 250 2 53 1 143 1 361 1 327 2 362 1 148 1 196 1 115 1 349 2 311 1 174 1 154 1 200 1 337 2 120 1 64 1 179 2 
231 1 187 1 28 1 349 1 319 1 111 1 97 1 25 1 250 1 79 1 
65 1 167 1 319 1 345 1 25 1 274 1 34 1 3 1 28 1 187 1 372 1 373 1 189 1 317 1 
167 1 319 1 345 2 25 1 274 1 34 1 349 1 28 1 187 1 373 2 372 1 111 1 250 1 189 1 317 1 
142 1 373 1 345 1 287 1 183 1 
142 1 219 1 207 1 373 2 345 2 183 1 189 1 274 1 
142 1 373 1 345 1 
231 1 319 1 345 1 25 1 183 1 79 1 349 1 28 1 187 1 373 1 111 1 97 1 313 1 250 1 
274 1 
142 1 219 1 373 2 345 2 136 1 183 1 189 1 274 1 
203 1 142 2 213 1 254 1 345 5 306 1 183 2 158 1 274 1 50 1 219 1 188 1 373 5 301 2 6 2 189 1 251 1 43 1 353 2 
69 1 377 1 
319 2 69 2 222 1 217 1 28 2 187 2 349 1 111 1 250 1 
186 1 118 1 190 1 
319 1 69 1 269 1 27 1 359 1 247 1 108 1 148 1 187 1 311 1 134 1 174 1 7 1 83 1 337 1 53 1 
169 1 319 2 74 1 27 1 359 1 247 1 148 1 108 1 186 1 349 1 28 1 187 2 311 1 174 1 134 1 111 1 7 1 83 1 337 1 53 1 
65 1 169 2 319 5 69 1 31 1 192 1 157 1 74 1 217 1 349 4 28 5 187 5 111 4 250 1 
231 1 240 1 187 2 28 2 349 2 319 2 111 2 25 1 
169 1 187 3 28 3 349 3 319 3 69 1 111 3 250 1 
231 1 187 1 28 1 349 1 319 1 111 1 25 1 
187 1 28 1 349 1 319 1 111 1 222 1 25 1 250 1 217 1 
20 1 206 1 319 4 69 1 340 1 74 1 25 1 225 1 27 1 359 1 247 1 79 1 108 1 187 4 28 3 134 1 111 3 7 1 83 1 250 2 53 1 167 1 169 1 143 1 361 1 345 1 327 1 362 1 92 1 217 1 34 1 148 1 196 1 115 1 349 3 311 1 174 1 372 1 373 1 197 1 337 1 64 1 179 2 317 1 
65 1 169 1 187 2 28 2 349 1 319 2 69 1 192 1 111 1 
167 1 169 2 319 3 345 1 74 1 25 1 92 1 217 1 274 1 34 1 349 3 28 3 187 3 373 1 372 1 111 3 250 1 112 1 317 1 
169 1 319 2 217 1 186 1 349 2 28 2 187 2 111 2 250 1 190 1 
319 1 69 1 27 1 359 1 247 1 108 1 148 1 187 1 311 1 134 1 174 1 7 1 83 1 337 1 53 1 
66 1 319 1 69 1 27 1 359 1 247 1 108 1 148 1 187 1 134 1 174 1 7 1 264 1 337 1 53 1 
20 1 123 1 340 1 23 1 182 1 297 1 275 1 186 2 135 2 343 1 190 2 55 1 361 1 143 2 362 1 327 4 284 1 172 1 348 1 196 1 117 1 118 2 64 1 179 2 
240 1 187 1 28 1 349 1 319 1 372 1 111 1 25 1 
291 1 230 1 
291 1 230 1 
248 1 88 1 
248 1 88 1 
248 1 88 1 
350 1 291 1 230 1 
350 1 291 1 230 1 
60 1 291 1 230 1 
241 1 248 1 291 2 214 1 88 1 230 2 
350 1 291 1 230 1 
291 1 280 1 230 1 
291 1 280 1 230 1 
291 1 280 1 230 1 
319 2 69 1 243 1 181 1 78 1 300 1 28 2 187 2 111 2 227 1 86 1 230 1 360 1 345 1 59 1 234 1 349 2 371 1 373 1 60 1 291 1 261 1 379 1 153 1 
241 1 71 1 345 2 171 2 341 1 127 1 274 1 234 2 300 2 371 3 373 2 291 2 227 1 237 1 18 1 153 2 84 1 86 2 230 2 
82 1 294 1 215 1 
294 1 215 1 29 1 
202 1 283 1 82 2 40 1 215 3 29 1 
202 1 82 1 33 1 40 1 215 2 29 1 
202 1 82 1 40 2 215 2 29 1 
203 3 123 1 243 1 183 4 274 2 322 2 188 2 343 1 301 1 6 1 228 2 165 1 189 1 360 1 303 3 142 1 55 1 345 5 306 1 363 1 348 1 219 1 373 5 261 1 260 1 336 1 263 1 19 1 155 1 177 1 156 2 353 1 
203 8 123 3 183 7 274 5 184 1 322 6 188 6 51 1 343 3 301 2 6 2 164 1 228 6 189 1 360 4 303 9 142 6 55 3 254 1 345 9 306 1 363 2 287 5 256 1 367 1 348 3 219 1 373 9 336 3 263 3 41 5 62 1 155 2 177 1 353 2 
203 3 123 1 183 2 274 3 188 2 322 2 301 1 343 1 6 1 228 2 189 1 360 1 303 4 55 1 254 1 345 3 363 1 348 1 373 3 260 1 336 2 263 1 19 1 155 1 156 1 353 1 
203 5 123 2 183 3 274 4 184 1 322 4 188 4 51 1 301 1 343 2 6 1 228 4 189 1 360 2 303 7 55 2 254 1 345 4 363 1 256 1 348 2 373 4 260 1 336 3 263 2 19 1 155 1 156 2 353 1 
193 1 377 1 247 1 
296 1 247 1 
293 1 
174 1 7 1 247 1 
24 1 247 1 
174 1 247 1 
174 1 72 1 193 2 7 1 247 3 265 1 
143 3 123 1 255 1 327 7 104 1 223 1 297 3 321 1 275 2 259 1 343 1 81 1 220 2 135 4 39 1 381 1 141 1 
143 3 123 1 255 1 327 7 104 1 223 1 297 3 321 1 275 2 259 1 343 1 81 1 220 2 135 4 39 1 381 1 141 1 
143 3 123 1 255 1 327 7 104 1 223 1 297 3 321 1 275 2 259 1 343 1 81 1 220 2 135 4 39 1 209 1 381 1 141 1 
20 1 123 4 340 1 244 4 104 1 223 1 105 1 297 10 48 1 299 3 321 1 275 5 135 16 81 2 343 4 211 1 141 1 55 3 143 15 255 2 362 1 327 31 289 1 259 2 348 3 220 3 39 5 263 3 380 1 64 1 179 2 381 2 121 1 316 1 
20 2 123 1 340 2 104 1 320 1 223 1 297 4 275 3 321 1 343 1 135 5 81 1 143 4 255 1 362 2 327 9 259 1 35 1 220 2 39 1 380 1 64 2 179 4 381 1 
245 1 294 1 27 1 185 1 108 1 323 1 342 1 134 1 82 1 162 1 29 1 140 1 87 1 53 1 283 1 304 1 215 2 195 1 93 1 147 1 116 2 334 1 176 1 150 1 221 1 152 1 98 1 238 2 337 1 44 1 
67 1 245 1 294 1 27 1 185 1 108 1 323 1 134 1 342 2 82 1 162 1 29 1 140 1 53 1 283 1 304 1 215 2 195 1 93 1 147 1 218 1 116 3 14 1 176 1 221 1 152 1 98 1 238 3 337 1 44 1 
67 1 294 1 27 1 185 1 108 1 323 1 134 1 342 2 82 1 162 1 29 1 53 1 283 1 304 1 215 2 195 1 93 1 147 1 218 1 116 2 176 1 221 1 98 1 238 2 337 1 
45 1 245 1 103 1 106 1 27 1 359 1 247 1 107 1 185 2 108 1 134 1 162 2 53 1 195 2 366 1 368 1 116 1 14 1 174 1 221 2 238 1 337 1 44 1 
283 1 304 1 245 1 294 1 215 2 27 1 195 1 108 1 185 1 218 1 323 1 334 1 116 1 134 1 82 1 162 1 98 1 152 1 221 1 29 1 238 1 140 1 337 1 87 1 44 1 53 1 
139 1 
45 1 203 2 47 1 159 2 3 1 247 1 108 2 160 1 301 1 6 1 53 1 303 2 167 1 56 4 113 1 345 5 306 1 308 1 219 3 174 1 314 2 353 1 317 1 65 1 180 2 319 1 25 1 274 2 273 2 27 1 359 2 130 2 80 1 28 1 187 1 188 2 134 2 189 1 138 2 85 1 142 6 325 1 191 1 232 1 34 1 368 1 96 2 373 5 372 1 151 1 336 2 155 1 337 2 100 1 101 1 
142 2 167 1 65 1 56 2 325 1 319 1 345 3 232 1 25 1 34 1 3 1 219 1 28 1 187 1 160 1 372 1 373 3 136 1 151 1 314 1 101 1 317 1 
65 1 319 1 25 1 274 1 3 1 187 1 28 1 160 1 136 1 138 1 189 1 142 1 167 1 56 3 325 1 345 3 232 1 34 1 219 1 373 3 372 1 151 1 317 1 101 1 
65 1 319 1 25 1 274 1 3 1 159 1 187 1 28 1 160 1 136 1 138 1 189 1 167 1 142 2 56 3 325 1 345 3 232 1 34 1 219 1 373 3 372 1 151 1 314 1 317 1 101 1 
203 1 46 1 159 4 3 1 160 1 161 1 301 1 6 1 167 1 56 6 113 1 345 5 306 1 219 3 314 4 353 1 317 1 65 1 354 1 180 2 319 1 25 1 274 5 273 2 130 2 187 1 28 1 188 1 136 1 138 4 189 5 85 1 142 7 325 1 90 1 232 1 194 1 34 1 96 2 372 1 373 5 151 1 336 2 101 1 
203 1 3 1 159 2 160 1 301 1 6 1 167 1 303 2 56 4 113 1 345 4 306 1 308 1 219 2 314 2 353 1 317 1 65 1 180 2 319 1 25 1 273 2 274 2 130 2 187 1 28 1 188 1 138 2 189 1 85 1 142 4 325 1 232 1 34 1 96 2 372 1 373 4 151 1 336 2 101 1 
46 1 203 1 65 1 354 1 180 2 319 1 25 1 274 1 273 2 159 2 3 1 130 2 187 1 28 1 188 1 160 1 301 1 6 1 189 1 138 2 85 1 142 4 167 1 56 4 113 1 325 1 345 4 90 1 306 1 232 1 34 1 219 2 96 2 373 4 372 1 151 1 336 2 314 2 353 1 317 1 101 1 
46 1 203 1 65 1 354 1 180 2 319 1 25 1 274 1 273 2 159 2 3 1 130 2 187 1 28 1 188 1 160 1 301 1 6 1 189 1 138 2 85 1 142 4 167 1 56 4 113 1 325 1 345 4 90 1 306 1 232 1 34 1 219 2 96 2 373 4 372 1 151 1 336 2 314 2 353 1 317 1 101 1 
46 1 203 1 65 1 180 2 319 1 25 1 129 2 274 1 273 2 159 2 3 1 276 1 187 1 28 1 188 1 160 1 301 1 6 1 189 1 138 2 52 1 85 1 142 4 303 2 167 1 56 4 325 1 345 4 306 1 232 1 8 2 34 1 219 2 373 4 372 1 151 1 314 2 119 1 353 1 317 1 101 1 
46 1 203 1 65 1 354 1 180 2 319 1 25 1 274 1 273 2 3 1 159 3 130 2 187 1 28 1 188 1 160 1 161 1 301 1 6 1 189 1 138 3 85 1 167 1 142 5 56 5 113 1 325 1 345 4 90 1 306 1 232 1 34 1 219 2 96 2 373 4 372 1 151 1 336 2 314 3 353 1 317 1 101 1 
46 1 203 1 65 1 354 1 180 2 319 1 25 1 274 1 273 2 3 1 159 3 130 2 187 1 28 1 188 1 160 1 161 1 301 1 6 1 189 1 138 3 85 1 167 1 142 5 56 5 113 1 325 1 345 4 90 1 306 1 232 1 34 1 219 2 96 2 373 4 372 1 151 1 336 2 314 3 353 1 317 1 101 1 
203 1 65 1 180 2 319 1 25 1 129 2 274 1 273 2 159 2 3 1 28 1 187 1 188 1 160 1 301 1 6 1 189 1 138 2 52 1 85 1 142 4 303 2 167 1 56 4 325 1 345 4 306 1 232 1 308 1 8 2 34 1 219 2 373 4 372 1 151 1 314 2 353 1 317 1 101 1 
20 1 123 1 340 1 69 2 104 1 223 1 297 2 275 2 321 1 186 1 343 1 135 3 190 1 361 1 143 3 255 1 362 1 327 6 284 1 259 1 196 1 220 1 377 1 118 1 64 1 179 2 
20 2 206 1 339 1 123 1 69 1 340 2 244 3 0 1 295 1 297 2 48 1 299 3 275 1 186 11 135 8 343 2 190 4 55 2 143 6 361 1 114 1 145 1 362 2 327 14 58 1 348 1 196 2 39 1 263 2 118 11 64 2 179 4 316 1 
20 1 339 1 206 1 319 2 69 1 340 1 269 1 74 1 0 1 27 1 359 1 247 1 108 1 187 2 28 1 134 1 208 1 111 1 135 1 7 1 83 1 53 1 190 1 169 1 361 1 143 1 30 1 362 1 327 2 330 1 148 1 196 1 349 1 311 1 174 1 337 1 179 2 64 1 
206 1 339 1 340 3 0 1 104 1 297 8 247 2 108 3 111 1 343 3 210 1 7 2 53 2 169 1 55 2 255 1 305 2 307 1 257 2 259 1 348 2 218 1 349 1 311 2 174 2 220 1 263 2 118 7 64 3 179 6 20 3 123 3 319 3 69 2 73 1 74 1 223 1 26 2 225 2 27 2 359 1 321 1 275 4 186 7 28 1 187 3 277 2 134 3 135 10 83 2 190 7 143 10 361 3 362 3 327 20 148 2 196 3 39 4 337 3 
266 1 20 2 45 1 206 1 319 1 340 2 0 1 27 2 359 2 247 3 108 7 187 1 28 1 134 8 111 1 135 1 89 1 53 2 169 1 361 2 143 1 362 2 327 2 284 1 309 1 368 1 218 1 196 2 349 1 174 2 15 1 150 1 38 1 61 1 239 1 337 8 120 2 64 2 179 4 
20 1 339 1 123 1 319 1 340 1 271 1 297 1 275 1 186 1 28 1 187 1 111 1 343 1 135 1 250 1 190 1 55 1 361 1 143 2 362 1 327 3 217 1 348 1 196 1 349 1 263 1 118 1 64 1 179 2 
20 1 55 1 361 1 340 1 327 2 362 1 284 1 172 1 297 1 186 1 196 1 343 1 135 2 39 1 118 1 179 2 64 1 190 1 
20 1 361 1 123 1 143 2 340 1 327 2 362 1 284 1 297 1 275 1 348 1 186 1 196 1 117 1 118 1 179 2 64 1 190 1 
20 1 123 1 340 1 297 2 275 1 186 2 135 2 343 1 190 2 55 1 361 1 143 2 362 1 327 4 284 1 348 1 196 1 39 1 263 1 118 2 64 1 179 2 
20 1 55 1 361 1 340 1 327 2 362 1 172 1 297 1 186 1 196 1 343 1 135 2 39 1 118 1 89 1 179 2 64 1 190 1 
20 1 361 1 123 1 143 2 340 1 327 2 362 1 297 1 275 1 348 1 186 1 196 1 117 1 118 1 89 1 179 2 64 1 190 1 
20 1 123 1 340 1 297 2 275 1 186 2 135 2 343 1 89 1 190 2 55 1 361 1 143 2 362 1 327 4 348 1 196 1 39 1 263 1 118 2 64 1 179 2 
20 1 123 1 340 1 297 2 275 1 186 2 135 2 343 1 190 2 55 1 361 1 143 2 327 4 362 1 348 1 196 1 39 1 263 1 118 2 64 1 179 2 
20 1 206 1 319 1 69 1 340 1 0 1 225 1 27 1 359 1 247 1 108 1 187 1 134 1 135 1 7 1 83 1 53 1 361 1 143 1 327 2 362 1 148 1 196 1 311 1 174 1 337 1 179 2 64 1 
20 1 66 1 206 1 319 1 69 1 340 1 0 1 27 1 359 1 4 1 247 1 108 1 187 1 134 1 135 1 7 1 53 1 361 1 143 1 327 2 362 1 148 1 196 1 174 1 264 1 337 1 179 2 64 1 
20 1 339 1 123 1 340 1 297 2 275 1 186 2 135 2 343 1 190 2 55 1 361 1 143 2 362 1 327 4 348 1 196 1 39 1 263 1 118 2 64 1 179 2 
20 1 123 1 319 1 340 1 26 1 297 2 225 1 27 1 275 1 247 1 108 1 186 2 187 1 134 1 135 2 343 1 7 1 83 1 190 2 53 1 55 1 143 2 361 1 327 4 362 1 348 1 148 1 196 1 311 1 174 1 39 1 150 1 263 1 118 2 337 1 179 2 64 1 
20 1 123 1 339 1 319 1 340 1 297 1 186 1 28 1 187 1 111 1 343 1 135 2 250 1 190 1 55 1 143 1 361 1 362 1 327 3 217 1 348 1 196 1 349 1 39 1 262 1 263 1 118 1 64 1 179 2 
338 1 340 3 102 1 244 4 104 1 297 8 48 3 299 3 343 5 302 1 55 4 168 1 255 1 216 1 347 1 259 1 348 4 220 1 263 4 63 1 179 6 64 3 316 1 20 3 123 5 356 1 223 1 272 1 275 4 321 1 135 20 143 21 282 2 327 41 362 3 332 4 35 1 39 4 292 1 378 1 376 1 380 1 201 1 
338 1 20 4 123 4 102 1 340 4 244 4 356 1 104 1 223 1 272 1 297 7 48 3 299 3 321 1 275 4 135 20 343 5 302 1 168 1 55 4 282 2 143 18 255 1 362 4 327 38 216 1 347 1 259 1 332 4 348 3 35 1 220 1 39 3 376 1 378 1 292 1 263 4 380 2 63 1 201 1 64 4 179 8 316 1 
338 1 20 2 123 8 340 2 244 4 356 1 104 1 223 1 272 1 297 14 48 2 299 4 321 1 275 7 135 27 343 8 302 1 168 1 55 7 282 1 143 25 255 1 145 2 362 2 327 52 347 1 259 1 332 4 348 7 35 1 220 1 39 7 376 1 378 1 292 1 263 7 380 1 63 1 201 1 64 2 179 4 316 2 
338 1 20 2 123 3 102 1 340 2 244 2 356 2 76 1 272 1 297 6 48 1 299 1 275 3 135 9 343 3 55 3 282 1 143 10 362 2 327 19 332 2 348 3 35 1 39 3 376 1 292 1 263 3 64 2 179 4 316 1 
338 2 20 3 123 2 340 3 244 2 356 1 297 4 272 1 48 2 299 2 275 2 135 14 343 3 302 1 168 1 55 3 143 12 282 2 362 3 327 26 347 1 332 4 348 2 35 1 39 2 376 1 378 1 292 1 263 3 380 2 63 1 64 3 179 6 201 1 
300 1 241 1 291 1 127 1 237 1 153 1 86 1 352 1 234 1 230 1 
60 1 59 1 
300 1 205 1 291 1 153 1 42 1 86 1 229 1 234 1 230 1 
350 1 365 1 
331 1 214 1 280 1 
241 1 71 1 345 1 171 1 127 1 274 1 234 1 300 1 371 2 373 1 227 1 291 1 237 1 18 1 153 1 84 1 86 1 230 1 
241 1 71 1 345 1 171 1 127 1 274 1 234 1 300 1 371 2 373 1 227 1 291 1 237 1 18 1 153 1 84 1 86 1 230 1 
241 1 71 1 345 1 171 1 127 1 274 1 234 1 300 1 371 2 373 1 227 1 291 1 237 1 18 1 153 1 84 1 86 1 230 1 
350 1 214 1 365 1 
350 1 214 1 365 1 
331 1 280 1 
331 1 214 1 280 1 
181 1 379 1 
319 2 69 1 243 1 181 1 183 1 78 1 300 1 187 2 28 2 111 2 86 1 230 1 360 1 171 1 345 1 59 1 234 1 349 2 371 1 373 1 60 1 291 1 261 1 18 1 379 1 153 1 99 1 
20 1 339 1 206 1 319 2 340 1 355 1 0 1 27 1 247 1 108 2 187 2 28 2 134 2 135 1 53 1 361 1 143 1 57 1 362 1 327 2 196 1 174 1 351 1 374 1 236 1 38 1 61 1 337 2 120 2 179 2 64 1 
283 1 304 1 328 1 294 1 215 2 27 1 195 1 108 2 132 1 218 1 323 1 134 2 82 1 150 1 29 1 337 2 140 1 166 1 53 1 
283 1 304 1 328 1 294 1 215 2 329 1 195 1 27 1 108 1 218 1 323 1 134 1 82 1 29 1 337 1 140 1 53 1 
45 1 27 1 195 1 359 1 247 1 107 1 368 1 108 1 132 1 174 1 134 1 17 1 337 1 53 1 
283 1 304 1 328 1 294 1 215 2 27 1 195 1 108 1 132 1 218 1 323 1 134 1 82 1 29 1 337 1 140 1 166 1 53 1 
290 1 
203 1 213 1 50 1 188 1 377 1 189 1 274 1 
203 1 274 2 130 1 188 1 301 1 6 1 189 1 303 1 142 1 113 1 345 1 306 1 96 1 219 1 373 1 336 1 353 1 
203 9 296 3 246 2 247 10 108 3 50 1 110 1 301 4 343 2 6 4 7 3 163 1 53 3 54 2 167 2 303 12 213 1 55 2 170 2 345 5 305 2 306 4 173 2 348 2 219 3 174 3 263 2 353 4 265 1 123 2 68 1 24 2 27 4 274 8 77 2 359 1 322 6 188 8 134 3 228 6 189 2 279 2 142 5 144 2 193 2 333 2 373 5 375 1 150 1 336 6 199 1 155 2 337 3 100 1 
203 8 123 2 244 1 48 1 274 5 299 1 131 1 322 5 188 5 278 1 301 2 343 2 6 2 228 5 189 2 302 1 142 1 303 6 168 1 55 2 144 1 345 1 306 2 347 1 173 2 348 2 219 1 373 1 336 3 263 2 155 1 63 1 100 1 201 1 353 2 
203 2 354 1 123 1 319 1 25 1 2 1 321 1 79 1 187 1 28 1 188 2 301 1 343 2 111 1 6 1 250 1 231 1 144 1 255 1 345 1 306 1 259 1 173 2 349 1 373 1 97 1 313 1 353 1 
203 1 213 1 306 1 274 1 50 1 188 1 301 1 6 1 189 1 353 1 
303 10 203 5 55 2 123 2 144 1 305 1 274 5 173 2 348 2 188 5 322 5 343 2 263 2 228 5 336 5 
142 1 219 1 373 1 345 1 189 1 274 1 
203 2 45 1 21 1 70 1 47 1 27 3 359 2 247 2 108 4 80 1 188 2 134 4 301 2 137 1 6 2 7 1 163 2 53 2 142 4 254 1 345 3 306 1 11 1 94 1 368 1 219 2 174 2 373 3 375 1 337 4 155 2 178 1 353 2 100 2 
20 1 206 1 319 3 69 1 340 1 225 1 27 1 359 1 247 1 79 1 108 1 187 3 28 2 134 1 111 2 7 1 83 1 250 2 53 1 143 1 361 1 327 1 362 1 148 1 115 1 196 1 349 2 311 1 174 1 337 1 64 1 179 2 
303 4 203 1 306 1 274 4 322 2 188 2 220 1 301 1 6 1 228 2 336 2 189 2 155 1 353 1 100 1 
153 1 234 1 369 1 
153 1 234 1 369 1 
149 1 181 1 127 1 153 1 234 1 
153 1 234 1 369 1 
126 1 153 1 234 1 
126 1 153 1 234 1 
126 1 153 1 234 1 
153 1 234 1 
291 1 230 1 
20 1 123 1 340 1 244 1 104 1 223 1 297 2 48 1 299 1 275 2 321 1 343 1 135 4 143 4 255 1 327 8 362 1 259 1 35 1 220 1 201 1 64 1 179 2 
20 2 123 1 340 2 244 2 104 1 223 1 357 1 297 3 48 1 299 1 321 1 275 2 135 6 343 2 55 1 143 5 255 1 327 11 362 2 259 1 35 1 220 1 39 1 263 1 201 1 64 2 179 4 316 1 
20 3 123 3 340 3 244 1 104 1 223 1 357 1 297 4 48 1 299 1 321 1 275 3 135 9 343 3 302 1 168 1 55 2 143 10 255 1 327 19 362 3 347 1 259 1 348 2 35 1 220 1 39 1 263 2 380 1 63 1 201 1 64 3 179 6 
20 3 123 2 340 3 244 1 104 1 223 1 357 1 297 5 48 1 299 1 321 1 275 3 135 10 343 3 302 1 168 1 55 2 143 7 255 1 327 17 362 3 347 1 259 1 348 1 35 1 220 1 39 2 263 2 380 1 63 1 201 1 64 3 179 6 
20 1 123 1 340 1 244 1 104 1 223 1 297 2 48 1 299 1 275 2 321 1 343 1 135 4 143 4 255 1 327 8 362 1 259 1 35 1 220 1 201 1 64 1 179 2 
20 1 123 2 340 1 244 1 297 2 48 1 299 1 275 1 135 6 343 2 302 1 168 1 55 2 143 6 327 12 362 1 347 1 348 2 35 1 39 1 263 2 63 1 201 1 64 1 179 2 
20 4 123 2 340 4 244 1 104 1 223 1 357 1 297 5 48 1 299 1 321 1 275 3 135 10 343 3 302 1 168 1 55 2 143 8 255 1 327 18 362 4 347 1 259 1 348 1 35 1 220 1 39 2 263 2 380 2 63 1 201 1 64 4 179 8 
20 4 123 2 340 4 102 1 244 1 297 6 48 1 299 1 275 3 135 9 343 3 302 1 168 1 55 3 143 7 327 16 362 4 347 1 348 2 35 1 39 3 263 3 380 2 63 1 201 1 64 4 179 8 
143 4 123 1 255 3 327 7 104 1 223 2 297 6 275 3 321 1 259 3 343 1 135 3 39 3 
20 4 123 2 340 4 102 1 244 1 104 1 223 1 297 4 48 1 299 1 321 1 275 3 135 10 343 3 302 1 168 1 55 2 143 8 255 1 327 18 362 4 347 1 259 1 348 1 35 1 220 1 39 1 263 2 380 2 63 1 201 1 64 4 179 8 
20 2 123 1 143 4 340 2 255 1 327 8 362 2 104 1 223 1 297 3 321 1 275 2 259 1 220 1 343 1 135 4 39 1 380 1 179 4 64 2 
143 3 123 1 255 1 327 6 104 1 223 1 297 2 275 2 321 1 259 1 220 1 343 1 135 3 377 1 
20 1 55 1 143 2 123 1 340 1 362 1 327 4 357 1 297 2 275 1 348 1 343 1 135 2 39 1 263 1 179 2 64 1 
55 1 123 1 143 4 244 2 327 7 297 2 48 1 299 1 275 1 348 1 135 3 343 1 39 1 263 1 316 1 
20 2 123 3 340 2 244 2 104 1 223 1 297 9 299 2 321 1 275 5 343 3 135 11 55 2 143 12 255 2 145 1 327 23 362 2 58 1 259 2 348 2 220 1 39 4 263 2 198 1 380 2 179 4 64 2 316 1 
143 1 327 1 244 1 
135 1 327 1 299 1 
20 1 55 1 143 3 123 1 340 1 305 1 362 1 327 6 357 1 297 3 275 2 348 1 343 1 135 3 39 1 263 1 64 1 179 2 
20 1 123 2 340 1 244 1 297 2 48 1 299 1 275 1 135 6 343 2 302 1 168 1 55 2 143 6 327 12 362 1 347 1 348 2 35 1 39 1 263 2 63 1 201 1 64 1 179 2 
123 1 143 3 255 1 327 6 297 2 321 1 275 1 259 1 343 1 135 3 39 1 
20 1 143 2 255 1 340 1 327 3 362 1 104 1 223 1 297 2 275 1 259 1 135 1 39 1 198 1 380 1 179 2 64 1 
20 1 143 5 123 2 340 1 255 2 362 1 327 10 297 5 2 1 275 3 321 1 259 2 35 1 135 5 343 2 39 2 64 1 179 2 
20 1 55 1 340 1 362 1 327 2 297 1 35 1 343 1 135 2 39 1 179 2 64 1 
20 1 55 1 143 2 123 1 340 1 362 1 327 4 297 2 275 1 348 1 35 1 343 1 135 2 39 1 263 1 179 2 64 1 
20 3 143 2 102 1 340 3 255 1 327 3 362 3 297 2 275 1 259 1 35 1 135 1 39 1 198 1 380 1 179 6 64 3 
20 5 123 5 102 1 340 5 244 4 104 1 223 1 357 1 105 1 297 12 48 1 299 3 321 2 275 7 135 16 343 5 55 3 143 18 255 3 362 5 327 34 289 1 259 3 348 3 35 1 220 1 39 5 198 1 263 3 380 2 121 1 64 5 179 10 316 1 
65 1 187 1 28 1 95 1 319 1 69 1 192 1 
267 1 65 1 319 1 69 1 326 1 192 1 91 1 10 1 298 1 95 1 28 1 187 1 
45 1 108 1 174 1 134 1 377 1 27 1 337 1 359 1 247 1 53 1 368 1 
169 1 319 2 69 1 27 1 359 1 247 1 148 1 108 1 349 1 28 1 187 2 174 1 134 1 111 1 7 1 83 1 337 1 53 1 
319 2 69 1 24 1 25 1 27 1 247 3 108 1 187 2 28 2 134 1 111 1 7 2 83 1 163 1 53 1 54 1 169 1 34 1 148 1 349 2 174 2 372 1 337 1 
66 1 319 2 69 1 24 1 25 1 27 1 247 3 108 2 187 2 28 2 134 2 111 1 7 2 163 1 53 1 54 1 169 1 34 1 148 1 12 1 349 2 174 2 372 1 337 2 
167 1 142 1 345 2 24 1 193 1 364 1 296 1 274 1 27 1 359 1 247 4 108 3 12 1 174 1 373 2 134 3 7 1 163 1 189 1 344 1 337 3 54 1 53 1 
167 1 142 1 345 2 24 1 193 1 296 1 274 1 27 1 359 1 247 4 108 3 12 1 333 1 174 1 373 2 134 3 7 1 163 1 189 1 337 3 54 1 53 1 
108 1 134 1 27 1 337 1 239 1 53 1 
266 1 309 1 27 3 359 2 247 3 94 1 108 6 218 1 370 1 134 7 174 2 15 1 150 1 137 1 61 1 7 1 239 1 337 7 120 1 265 1 53 2 
339 1 340 2 104 1 297 2 247 1 108 1 111 1 343 1 7 1 53 1 169 1 255 1 259 1 349 1 311 1 174 1 351 1 220 1 118 1 64 2 179 4 20 2 123 1 319 2 69 2 223 1 26 1 225 1 27 1 275 2 321 1 186 1 28 1 187 2 277 1 134 1 135 3 83 1 190 1 361 2 143 3 362 2 327 6 148 1 196 2 150 1 337 1 
203 1 183 1 296 1 274 1 359 1 77 1 247 2 108 1 50 1 188 1 134 1 301 2 6 2 189 1 279 1 142 2 167 1 213 1 170 1 345 3 306 2 193 1 333 1 219 1 373 3 375 1 337 1 353 2 
193 1 27 2 247 2 108 2 110 1 134 2 174 1 150 1 7 1 239 1 337 2 265 1 53 1 
45 1 27 1 359 1 247 1 368 1 108 4 49 1 12 1 134 4 174 1 150 1 337 4 53 1 
21 1 307 1 27 2 247 1 94 1 108 2 134 2 174 1 137 1 7 1 163 1 337 2 178 1 53 1 
108 1 134 1 304 1 294 1 215 1 29 1 27 1 337 1 359 1 53 1 
27 1 247 1 108 2 218 1 134 2 174 1 150 1 236 1 61 1 337 2 53 1 
45 1 266 1 309 1 27 2 359 1 247 3 368 1 108 4 49 1 134 5 174 2 150 1 61 1 163 1 337 5 53 2 
45 1 266 1 27 2 359 1 247 3 368 1 108 4 49 1 134 5 174 2 175 1 150 1 61 1 163 1 337 5 53 2 
169 1 66 1 319 2 69 1 27 1 359 1 247 1 148 1 108 1 349 1 28 1 187 2 174 1 134 1 111 1 7 1 337 1 53 1 
27 2 247 1 94 1 108 1 370 1 134 1 174 1 137 1 7 1 163 1 337 1 265 1 53 1 
5 1 69 1 32 1 75 1 233 1 
167 1 212 1 69 1 345 2 32 2 268 1 233 1 75 2 25 1 183 1 92 1 274 1 34 1 235 1 5 2 372 1 373 2 189 1 317 1 
187 1 28 1 319 1 57 1 374 1 32 1 355 1 233 1 75 1 
268 1 233 1 235 1 
147 1 176 1 377 1 93 1 
147 1 116 1 176 1 245 1 238 1 44 1 93 1 
185 1 162 1 238 1 
147 1 13 2 116 3 334 1 36 1 176 1 285 1 245 1 1 1 238 3 44 1 93 1 
147 1 116 2 342 1 176 1 245 1 9 1 238 2 44 1 93 1 
204 1 116 1 334 1 82 1 16 1 245 1 294 1 215 1 238 1 44 1 93 1 
147 1 116 1 334 1 245 1 238 1 44 1 93 1 
147 2 116 1 334 1 176 1 245 1 238 1 44 1 
245 2 358 1 93 1 147 1 334 1 116 2 37 1 238 2 44 2 122 1 
204 1 245 1 93 2 258 1 147 1 226 1 334 1 116 3 342 2 176 1 238 3 44 1 281 1 
283 1 22 1 245 1 294 1 215 2 93 1 147 1 334 1 116 2 342 1 82 1 176 1 29 1 238 2 44 1 
204 1 245 2 9 1 93 2 147 1 226 1 310 1 334 1 116 4 342 2 176 1 238 4 44 2 
147 1 116 1 334 1 176 1 245 1 238 1 44 1 93 1 
204 1 124 1 245 1 1 1 93 3 147 2 226 1 13 1 116 4 36 1 342 2 176 2 238 4 44 1 
245 1 224 1 146 1 93 1 147 1 133 1 334 1 116 2 342 1 176 1 238 2 44 1 
147 1 109 1 13 2 116 3 334 1 36 2 176 1 245 1 1 1 238 3 44 1 93 1 
242 1 128 2 288 1 93 2 
253 1 116 1 334 1 245 1 238 1 44 1 
147 1 116 2 334 1 342 1 176 1 245 1 238 2 44 1 93 1 258 1 
286 1 
147 1 116 1 334 1 176 1 245 1 238 1 44 1 93 1 
245 1 93 1 258 1 147 1 13 1 334 1 116 3 342 1 176 1 238 3 44 1 
204 1 226 1 124 1 93 1 
147 1 93 1 

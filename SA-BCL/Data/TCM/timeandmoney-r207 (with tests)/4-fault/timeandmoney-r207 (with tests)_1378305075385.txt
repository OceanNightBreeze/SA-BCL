#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 88 328 207 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 88 328 207 200 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 88 328 207 (103,113) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 88 328 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 88 328 207 (103,113) (103,113) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 88 276 270 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 88 328 207 (103,113) (103,113) 155 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 88 328 207 200 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 88 169 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 88 169 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 88 169 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 88 169 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 88 169 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 5 57 1 4 1 122 1 205 1 125 2 124 1 291 6 213 1 214 1 256 1 174 1 135 4 226 2 179 2 33 1 106 3 34 9 110 1 109 1 40 1 84 2 142 9 326 2 112 1 285 1 146 2 147 2 
242 5 57 1 4 1 122 1 205 1 124 1 125 2 291 6 213 1 214 1 256 1 174 1 135 4 226 2 179 2 33 1 106 3 34 9 110 1 109 1 40 1 84 2 142 9 326 2 112 1 285 1 146 2 147 2 
242 6 57 1 4 1 122 1 205 1 124 1 125 2 291 7 213 1 214 1 256 1 174 1 135 5 226 2 179 2 33 1 106 4 34 10 110 1 109 1 40 1 84 2 142 10 326 2 112 1 285 1 146 2 147 2 
242 4 57 1 4 1 122 1 205 1 124 1 125 1 291 4 213 1 214 1 174 1 135 3 226 2 179 2 33 1 106 2 34 7 110 1 109 1 40 1 84 2 142 7 326 2 112 1 285 1 146 2 147 2 
242 3 226 1 179 1 4 1 205 1 125 2 291 3 106 1 34 4 109 1 256 1 142 4 326 1 174 1 146 1 285 1 147 1 135 2 
242 1 179 1 4 1 205 1 124 1 34 2 189 1 254 1 214 1 84 1 142 2 326 1 174 1 146 1 219 1 147 1 
242 2 4 1 122 1 205 1 291 1 106 1 34 3 84 1 142 3 174 1 146 2 147 2 135 1 
242 5 122 1 4 1 205 1 125 2 291 7 126 1 208 1 256 1 174 1 135 4 226 1 179 1 33 1 106 3 34 9 109 1 84 1 142 9 326 1 112 1 146 2 285 1 147 2 
242 5 122 1 4 1 205 1 125 2 291 7 126 1 208 1 256 1 174 1 135 4 226 1 179 1 33 1 106 3 34 9 109 1 84 1 142 9 326 1 112 1 146 2 285 1 147 2 
225 1 85 1 111 1 
2 2 85 1 241 1 
88 1 328 1 207 1 
88 1 328 1 207 1 200 1 
88 1 328 1 113 1 207 1 
225 1 311 1 261 1 3 1 203 1 108 1 81 1 324 1 69 1 85 1 305 1 218 1 19 1 115 1 
88 1 328 1 
167 1 69 1 104 1 305 1 330 1 
225 1 167 1 69 2 85 1 196 1 49 1 305 2 330 1 
167 1 69 1 305 1 
88 1 69 1 103 1 328 1 305 1 113 1 207 1 330 1 
85 1 
225 1 167 1 69 2 85 1 49 1 7 1 305 2 330 1 
26 1 225 1 1 1 227 1 267 2 289 1 79 1 35 2 39 1 281 1 167 2 69 5 85 1 215 2 236 1 49 1 305 5 97 1 330 2 
94 1 133 1 
94 1 133 1 
206 1 66 1 
206 1 66 1 
206 1 66 1 
94 1 131 1 133 1 
94 1 131 1 133 1 
94 1 133 1 177 1 
94 2 206 1 64 1 133 2 230 1 66 1 
94 1 131 1 133 1 
119 1 94 1 133 1 
119 1 94 1 133 1 
119 1 94 1 133 1 
253 1 94 1 87 1 88 1 69 1 305 1 327 1 105 1 144 1 114 1 133 1 
87 2 154 1 121 1 59 2 105 2 230 1 129 1 94 2 253 3 69 2 85 1 305 2 327 1 144 2 306 1 114 2 133 2 240 1 201 1 
226 1 179 1 326 1 
179 1 254 1 326 1 
226 2 179 3 254 1 234 1 283 1 61 1 
226 1 166 1 179 2 254 1 234 1 283 1 
226 1 179 2 254 1 234 2 283 1 
150 1 0 2 2 3 1 1 246 2 290 1 293 1 161 1 167 1 13 1 69 5 215 1 130 1 16 1 305 5 258 1 312 1 225 1 265 2 267 1 35 1 320 1 39 2 192 1 281 3 85 2 49 1 284 1 53 1 330 4 332 1 241 1 
0 6 2 9 1 1 246 6 293 3 161 2 252 1 167 6 13 1 69 9 215 2 130 4 16 2 305 9 304 1 258 3 225 1 227 1 266 1 267 2 228 1 316 5 104 5 35 2 39 6 192 3 281 8 282 1 85 5 49 1 284 3 330 7 332 3 334 1 241 3 
0 2 2 4 246 2 290 1 293 1 161 1 69 3 215 1 130 1 16 1 305 3 258 1 225 1 227 1 265 1 267 1 35 1 39 2 192 1 281 3 85 3 284 1 53 1 330 2 332 1 241 2 
0 4 2 7 246 4 290 1 293 2 161 1 252 1 69 4 215 1 130 2 16 1 305 4 258 2 225 1 227 1 265 2 267 1 228 1 35 1 39 4 192 2 281 5 85 4 284 2 53 1 330 3 332 2 334 1 241 3 
182 1 314 1 111 1 89 1 292 1 
89 1 36 1 
178 1 
260 1 89 1 199 1 
117 1 89 1 
260 1 89 1 
260 1 178 1 89 3 292 2 303 1 199 1 286 1 
28 3 183 1 317 2 293 1 92 1 278 3 37 1 192 1 43 2 15 1 47 1 302 1 197 7 96 1 257 4 149 1 309 1 
28 3 183 1 317 2 293 1 92 1 278 3 37 1 192 1 43 2 15 1 47 1 302 1 197 7 96 1 257 4 149 1 309 1 
28 3 183 1 317 2 293 1 92 1 278 3 37 1 41 1 192 1 43 2 15 1 47 1 302 1 197 7 96 1 257 4 149 1 309 1 
243 1 248 1 9 1 92 1 293 4 294 1 12 1 255 4 170 1 15 2 302 2 96 1 257 16 258 3 309 2 137 2 310 1 28 15 183 5 317 3 37 1 278 10 192 4 43 5 233 1 47 1 143 3 197 31 48 1 284 3 54 1 51 1 332 3 149 2 
248 2 293 1 92 1 12 2 15 1 302 1 257 5 309 1 137 4 310 2 28 4 183 1 32 1 317 2 278 4 37 1 192 1 43 3 48 2 197 9 47 1 51 1 287 1 149 1 
242 1 152 1 4 1 205 1 204 1 291 1 157 1 61 1 296 1 299 2 254 1 300 1 174 1 25 1 74 1 226 1 179 2 30 1 34 2 319 1 187 1 231 1 84 1 142 2 326 1 86 1 238 2 329 2 146 1 147 1 239 1 
242 1 120 1 152 1 205 1 204 1 157 1 291 2 61 1 299 1 254 1 174 1 25 1 136 1 74 1 226 1 179 2 30 1 34 3 319 1 187 1 231 1 84 1 142 3 326 1 238 1 329 1 331 1 146 1 147 1 239 1 
242 1 120 1 205 1 204 1 157 1 291 2 61 1 299 1 254 1 174 1 25 1 74 1 226 1 179 2 30 1 34 2 187 1 231 1 84 1 142 2 326 1 238 1 329 1 331 1 239 1 
260 1 136 1 244 1 30 2 204 1 89 1 269 1 138 1 157 2 34 1 160 1 63 1 231 2 68 1 299 1 84 2 142 1 235 1 238 1 329 1 146 1 147 1 25 1 
74 1 226 1 179 2 152 1 30 1 4 1 204 1 157 1 34 1 61 1 187 1 319 1 296 1 231 1 299 1 254 1 84 1 142 1 326 1 238 1 329 1 146 1 331 1 239 1 147 1 25 1 
325 1 
151 1 2 2 1 1 3 1 89 1 158 1 160 1 161 1 162 2 251 1 167 6 99 2 19 1 25 1 260 1 261 1 268 1 267 1 269 1 102 1 272 2 108 1 35 1 275 2 39 2 281 2 194 1 45 1 46 2 49 3 198 2 115 1 118 1 203 1 204 1 60 1 63 2 299 2 69 5 215 1 216 2 305 5 218 1 221 4 224 1 225 1 311 1 81 1 321 1 324 1 85 2 238 2 329 2 333 1 241 2 
151 1 118 1 311 1 261 1 3 1 203 1 7 1 158 1 108 1 81 1 251 1 167 2 324 1 194 1 69 3 46 1 49 1 305 3 218 1 19 1 115 1 221 2 
225 1 151 1 118 1 311 1 261 1 3 1 203 1 7 1 158 1 108 1 275 1 81 1 251 1 167 1 324 1 194 1 69 3 85 1 49 1 305 3 218 1 19 1 115 1 221 3 
225 1 151 1 118 1 311 1 261 1 3 1 203 1 7 1 158 1 108 1 275 1 81 1 162 1 251 1 167 2 324 1 194 1 69 3 85 1 46 1 49 1 305 3 218 1 19 1 115 1 221 3 
151 1 1 1 3 1 7 1 158 1 162 4 251 1 167 7 99 2 19 1 100 1 22 1 261 1 264 1 181 1 267 1 102 1 272 2 108 1 35 1 275 4 39 1 281 1 194 1 46 4 49 3 198 2 115 1 118 1 203 1 69 5 215 1 305 5 216 2 218 1 73 1 221 6 224 1 311 1 225 5 81 1 324 1 85 5 241 2 
151 1 1 1 2 2 3 1 158 1 251 1 162 2 167 4 99 2 19 1 261 1 267 1 102 1 272 2 108 1 35 1 275 2 39 1 281 1 194 1 45 1 46 2 49 2 198 2 115 1 118 1 203 1 69 4 215 1 305 4 216 2 218 1 221 4 224 1 311 1 225 1 81 1 324 1 85 2 241 2 
118 1 151 1 1 1 3 1 203 1 158 1 162 2 251 1 167 4 69 4 215 1 216 2 305 4 99 2 218 1 19 1 221 4 22 1 224 1 225 1 261 1 311 1 264 1 181 1 267 1 102 1 272 2 108 1 35 1 275 2 81 1 39 1 281 1 324 1 194 1 85 1 46 2 49 2 198 2 115 1 241 2 
118 1 151 1 1 1 3 1 203 1 158 1 162 2 251 1 167 4 69 4 215 1 216 2 305 4 99 2 218 1 19 1 221 4 22 1 224 1 225 1 261 1 311 1 264 1 181 1 267 1 102 1 272 2 108 1 35 1 275 2 81 1 39 1 281 1 324 1 194 1 85 1 46 2 49 2 198 2 115 1 241 2 
118 1 151 1 2 2 1 1 3 1 203 1 250 2 158 1 10 1 162 2 251 1 11 2 167 4 69 4 215 1 216 2 305 4 218 1 19 1 221 4 224 1 225 1 261 1 311 1 264 1 78 1 267 1 272 2 185 1 108 1 35 1 275 2 81 1 39 1 281 1 324 1 194 1 85 1 46 2 49 2 115 1 
118 1 151 1 1 1 3 1 203 1 158 1 251 1 162 3 167 5 69 4 215 1 216 2 305 4 99 2 218 1 19 1 100 1 221 5 22 1 224 1 225 1 261 1 311 1 264 1 267 1 181 1 102 1 272 2 108 1 35 1 275 3 81 1 39 1 281 1 324 1 194 1 85 1 46 3 49 2 198 2 115 1 241 2 
118 1 151 1 1 1 3 1 203 1 158 1 251 1 162 3 167 5 69 4 215 1 216 2 305 4 99 2 218 1 19 1 100 1 221 5 22 1 224 1 225 1 261 1 311 1 264 1 267 1 181 1 102 1 272 2 108 1 35 1 275 3 81 1 39 1 281 1 324 1 194 1 85 1 46 3 49 2 198 2 115 1 241 2 
118 1 151 1 2 2 1 1 3 1 203 1 250 2 158 1 162 2 251 1 11 2 167 4 69 4 215 1 216 2 305 4 218 1 19 1 221 4 224 1 225 1 311 1 261 1 267 1 272 2 185 1 108 1 35 1 275 2 81 1 39 1 281 1 324 1 194 1 85 1 45 1 46 2 49 2 115 1 
243 1 202 2 248 2 293 3 93 1 298 1 12 2 168 1 255 2 170 1 257 9 258 3 307 1 223 2 76 1 137 4 310 2 28 10 29 1 183 3 32 1 278 6 43 3 192 3 195 1 48 2 197 19 143 1 284 3 332 3 
202 4 248 3 249 1 293 3 12 3 168 1 301 1 170 2 255 2 172 1 257 14 17 1 258 3 307 1 223 1 76 2 28 12 137 6 310 3 29 1 183 2 32 1 188 1 278 4 191 1 43 2 192 2 195 2 48 3 197 26 143 2 284 2 51 2 332 3 
243 1 202 4 249 1 248 3 92 1 293 5 163 1 298 1 12 3 168 1 301 1 255 4 170 3 302 1 172 1 17 1 257 20 258 4 307 1 223 1 76 2 137 6 310 3 28 21 29 1 183 4 317 1 32 1 188 1 37 1 278 8 191 1 43 4 192 5 47 1 195 1 48 3 197 41 143 3 284 4 51 1 332 4 149 1 
243 1 202 4 249 1 248 4 92 1 293 5 163 1 298 1 12 4 168 1 301 1 255 4 170 3 302 1 172 1 17 1 257 20 258 4 307 1 223 1 76 2 137 8 310 4 28 18 29 1 183 3 317 1 32 1 188 1 37 1 278 7 191 1 43 4 192 4 47 1 195 1 48 4 197 38 143 3 284 3 51 2 332 4 149 1 
243 2 202 4 249 1 248 2 92 1 293 8 12 2 168 1 301 1 255 4 170 2 302 1 172 1 17 1 257 27 258 7 307 1 223 1 76 1 137 4 310 2 28 25 29 1 184 2 183 7 317 1 32 1 188 1 37 1 278 14 191 1 43 7 192 8 47 1 195 1 48 2 197 52 143 4 284 7 51 1 332 7 149 1 
38 1 129 1 94 1 87 1 154 1 105 1 144 1 114 1 133 1 230 1 
222 1 177 1 
94 1 87 1 105 1 144 1 274 1 114 1 20 1 133 1 67 1 
131 1 237 1 
119 1 64 1 175 1 
87 1 154 1 121 1 59 1 105 1 230 1 129 1 94 1 253 2 69 1 85 1 327 1 305 1 144 1 306 1 114 1 133 1 201 1 
87 1 154 1 121 1 59 1 105 1 230 1 129 1 94 1 253 2 69 1 85 1 327 1 305 1 144 1 306 1 114 1 133 1 201 1 
87 1 154 1 121 1 59 1 105 1 230 1 129 1 94 1 253 2 69 1 85 1 327 1 305 1 144 1 306 1 114 1 133 1 201 1 
131 1 237 1 64 1 
131 1 237 1 64 1 
119 1 175 1 
119 1 64 1 175 1 
56 1 165 1 
56 1 150 1 312 1 87 1 88 1 59 1 270 1 105 1 276 1 165 1 253 1 94 1 69 1 130 1 305 1 144 1 114 1 330 1 133 1 222 1 201 1 177 1 
247 1 5 1 204 1 89 1 248 1 128 1 295 1 299 2 12 1 300 2 257 1 173 1 132 1 25 1 260 1 310 1 137 2 28 1 101 1 229 1 271 1 108 2 81 2 322 1 324 2 193 1 48 1 197 2 238 2 50 1 329 2 
226 1 179 2 313 1 152 1 204 1 61 1 187 1 277 1 231 1 299 2 254 1 326 1 86 1 238 2 329 2 331 1 21 1 239 1 25 1 
226 1 179 2 58 1 313 1 152 1 204 1 61 1 187 1 231 1 299 1 254 1 326 1 238 1 329 1 331 1 239 1 25 1 
260 1 262 1 244 1 204 1 89 1 269 1 63 1 160 1 231 1 299 1 238 1 329 1 21 1 25 1 
226 1 179 2 313 1 152 1 204 1 61 1 187 1 277 1 231 1 299 1 254 1 326 1 238 1 329 1 331 1 21 1 239 1 25 1 
14 1 
26 1 225 1 39 1 281 1 85 1 111 1 236 1 
1 1 2 1 167 1 69 1 215 1 305 1 99 1 225 1 267 1 102 1 35 1 39 1 281 1 85 2 49 1 198 1 241 1 
0 6 1 4 2 12 246 6 89 10 161 2 164 2 167 5 171 2 258 2 25 4 26 1 260 3 267 4 35 4 36 3 279 2 39 8 281 9 192 2 49 3 284 2 199 3 55 1 286 1 115 2 117 2 204 3 63 1 292 2 65 2 293 2 299 3 69 5 215 4 305 5 217 2 220 2 225 2 77 2 315 2 80 1 321 1 139 1 140 2 83 1 141 1 85 8 86 1 236 1 238 3 329 3 332 2 241 6 
0 5 2 6 1 2 246 5 249 1 293 2 161 1 164 2 167 1 212 1 69 1 301 1 255 1 170 1 215 2 305 1 17 1 258 2 225 2 267 2 315 1 35 2 188 1 321 1 190 1 191 1 39 5 281 8 192 2 85 5 143 1 49 1 284 2 332 2 241 3 
1 1 88 1 181 1 267 1 155 1 103 1 207 1 35 1 293 1 164 2 39 1 281 2 192 1 69 1 215 1 47 1 302 1 328 1 305 1 113 1 149 1 
26 1 225 1 1 1 267 1 35 1 39 1 281 1 215 1 85 1 236 1 
0 5 2 10 315 1 246 5 65 1 293 2 164 2 39 5 192 2 281 5 85 5 284 2 258 2 332 2 241 5 
225 1 167 1 69 1 85 1 49 1 305 1 
1 1 204 1 89 1 63 2 160 1 161 2 299 4 167 4 69 3 215 2 305 3 25 1 260 1 180 1 227 1 268 1 267 2 269 1 107 1 35 2 80 1 321 2 139 2 39 2 281 2 49 2 238 4 329 4 333 1 
88 1 328 1 207 1 200 1 
0 2 225 2 2 4 1 1 267 1 246 2 317 1 35 1 161 1 321 1 39 2 281 1 215 1 85 4 241 2 
105 1 273 1 114 1 
105 1 273 1 114 1 
56 1 154 1 105 1 318 1 114 1 
105 1 273 1 114 1 
105 1 52 1 114 1 
105 1 52 1 114 1 
105 1 52 1 114 1 
105 1 114 1 
94 1 133 1 
28 4 310 2 137 4 183 1 317 1 248 2 293 1 92 1 278 3 37 1 12 2 192 1 43 2 47 1 197 8 48 2 302 1 257 4 51 1 149 1 
28 3 317 1 92 1 293 1 37 1 278 2 43 2 192 1 111 1 302 1 47 1 197 6 257 3 149 1 
28 2 310 1 137 2 183 1 248 1 293 1 278 2 12 1 43 1 192 1 48 1 197 4 284 1 257 2 258 1 134 1 332 1 
28 4 243 1 183 1 293 1 278 2 43 1 192 1 170 1 255 2 197 7 143 1 284 1 257 3 258 1 332 1 
243 1 248 2 92 1 293 3 12 2 210 1 255 2 302 2 257 11 258 2 176 1 28 12 310 2 137 4 183 4 184 1 317 1 37 1 278 9 192 3 43 5 47 1 143 2 197 23 48 2 284 2 51 2 332 2 149 2 
28 1 255 1 197 1 
197 1 143 1 257 1 
137 2 310 1 28 3 183 1 248 1 65 1 293 1 278 3 12 1 192 1 43 2 48 1 197 6 257 3 284 1 258 1 134 1 332 1 
248 1 249 1 293 2 12 1 255 1 170 1 301 1 257 6 17 1 258 2 28 6 137 2 310 1 183 1 32 1 188 1 278 2 191 1 192 2 43 1 143 1 197 12 48 1 284 2 332 2 
28 3 183 1 293 1 278 2 192 1 43 1 47 1 197 6 302 1 257 3 149 1 
28 2 310 1 137 2 183 1 248 1 92 1 278 2 37 1 210 1 12 1 43 1 302 1 197 3 48 1 257 1 51 1 149 1 
137 2 310 1 28 5 155 1 183 2 32 1 248 1 293 2 278 5 12 1 43 3 192 2 48 1 302 2 197 10 47 1 257 5 149 2 
278 1 12 1 137 2 310 1 183 1 197 2 48 1 257 2 32 1 258 1 248 1 293 1 
28 2 310 1 137 2 183 1 32 1 248 1 293 1 278 2 12 1 43 1 192 1 48 1 197 4 284 1 257 2 258 1 332 1 
28 2 310 3 137 6 183 1 32 1 248 3 278 2 210 1 298 1 12 3 43 1 197 3 48 3 302 1 257 1 51 1 149 1 
243 1 248 5 9 1 92 1 294 1 293 5 210 1 298 1 12 5 255 4 170 1 302 3 257 16 258 3 134 1 28 18 137 10 310 5 183 5 317 1 32 1 37 1 278 12 192 5 43 7 233 1 47 2 48 5 197 34 143 3 284 3 51 2 332 3 149 3 
248 1 293 1 92 1 12 1 255 1 170 1 302 1 257 4 28 4 137 2 310 1 317 1 32 1 188 1 37 1 278 2 192 1 43 2 143 1 197 8 48 1 47 1 149 1 
243 1 248 2 92 1 293 2 12 2 255 2 170 1 302 1 257 6 258 1 134 1 28 5 137 4 310 2 183 1 317 1 32 1 188 1 37 1 278 3 192 1 43 2 47 1 197 11 48 2 143 1 332 1 149 1 
248 3 249 1 92 1 293 3 12 3 301 1 255 1 170 1 302 1 257 9 17 1 258 2 134 1 28 10 137 6 310 3 183 1 317 1 32 1 188 1 37 1 278 4 191 1 192 3 43 3 47 1 143 1 197 19 48 3 284 2 51 1 332 2 149 1 
248 3 249 1 92 1 293 3 12 3 255 1 170 1 301 1 302 1 257 10 17 1 258 2 134 1 28 7 137 6 310 3 183 2 317 1 32 1 188 1 37 1 278 5 191 1 192 2 43 3 47 1 143 1 197 17 48 3 284 1 51 1 332 2 149 1 
248 1 293 1 92 1 12 1 255 1 170 1 302 1 257 4 28 4 137 2 310 1 317 1 32 1 188 1 37 1 278 2 192 1 43 2 143 1 197 8 48 1 47 1 149 1 
248 1 249 1 293 2 12 1 255 1 170 1 301 1 257 6 17 1 258 2 28 6 137 2 310 1 183 1 32 1 188 1 278 2 191 1 192 2 43 1 143 1 197 12 48 1 284 2 332 2 
248 4 249 1 92 1 293 3 12 4 301 1 255 1 170 1 302 1 257 10 17 1 258 2 134 1 28 8 137 8 310 4 183 2 317 1 32 1 188 1 37 1 278 5 191 1 192 2 43 3 47 1 197 18 48 4 143 1 284 1 51 2 332 2 149 1 
248 4 249 1 293 3 12 4 298 1 301 1 255 1 170 1 257 9 17 1 258 3 28 7 137 8 310 4 183 3 32 1 188 1 278 6 191 1 192 2 43 3 197 16 48 4 143 1 284 2 51 2 332 3 
28 4 183 3 92 1 293 1 37 2 278 6 192 1 43 3 197 7 302 3 47 1 257 3 149 3 
248 4 249 1 92 1 293 3 12 4 298 1 301 1 255 1 170 1 302 1 257 10 17 1 258 2 28 8 137 8 310 4 183 1 317 1 32 1 188 1 37 1 278 4 191 1 192 2 43 3 47 1 197 18 48 4 143 1 284 1 51 2 332 2 149 1 
27 1 42 1 263 1 324 1 108 1 19 1 81 1 
75 1 27 1 263 1 108 1 127 1 91 1 81 1 82 1 42 1 324 1 18 1 19 1 
260 1 299 1 111 1 204 1 89 1 269 1 238 1 329 1 160 1 63 1 25 1 
88 1 169 1 
88 1 169 1 
88 1 169 1 
117 1 204 1 89 4 159 1 63 1 292 1 299 3 297 1 167 1 69 2 171 1 305 2 25 1 260 1 225 1 36 1 139 1 232 1 85 1 238 3 329 3 199 1 115 1 
260 1 225 1 117 1 77 1 89 4 204 1 63 1 292 1 36 1 139 1 232 1 299 3 167 1 69 2 85 1 171 1 305 2 238 3 329 3 199 1 115 1 25 1 
299 1 245 1 204 1 238 1 329 1 25 1 
260 2 101 1 245 1 153 1 89 3 204 2 186 1 90 1 63 2 8 1 299 7 300 1 86 1 98 1 238 7 329 6 145 1 199 1 331 1 286 1 25 3 
88 1 169 1 
1 2 89 2 63 1 292 1 299 1 167 2 69 3 215 2 305 3 217 1 220 1 26 1 225 1 77 1 267 2 35 2 80 1 36 1 39 1 140 1 281 1 85 1 236 1 49 1 238 1 329 1 330 1 115 1 
260 1 245 1 89 2 204 1 292 1 299 2 141 1 86 1 238 2 329 2 199 1 286 1 25 2 
260 1 288 1 269 1 89 1 204 1 63 1 160 1 232 1 299 4 86 1 238 4 329 4 25 1 
260 1 153 1 89 1 204 1 186 1 139 1 299 2 323 1 95 1 238 2 329 2 199 1 308 1 25 2 
299 1 179 1 254 1 326 1 204 1 238 1 329 1 63 1 239 1 25 1 
260 1 299 2 101 1 322 1 204 1 89 1 86 1 238 2 329 2 331 1 25 1 
260 2 101 1 288 1 269 1 89 3 204 2 160 1 63 1 90 1 8 1 139 1 299 5 86 1 238 5 329 4 25 2 
260 2 101 1 288 1 269 1 89 3 204 2 160 1 63 1 8 1 139 1 299 5 86 1 238 5 329 4 72 1 25 2 
88 1 169 1 
260 1 153 1 89 1 204 1 186 1 139 1 299 1 98 1 238 1 329 1 199 1 286 1 25 2 
242 1 111 1 205 1 174 1 
242 1 142 1 205 1 34 1 174 1 146 1 147 1 
84 1 157 1 34 1 
242 1 4 1 31 1 124 2 205 1 34 3 44 1 142 3 259 1 174 1 146 1 147 1 
242 1 142 2 205 1 125 1 291 1 34 2 174 1 146 1 147 1 
242 1 226 1 179 1 142 1 4 1 326 1 34 1 285 1 146 1 135 1 147 1 
242 1 142 1 4 1 34 1 174 1 146 1 147 1 
142 1 4 1 205 1 34 1 174 2 146 1 147 1 
242 1 142 2 4 1 6 1 123 1 34 2 174 1 146 2 147 2 23 1 
242 2 4 1 205 1 33 1 291 2 106 1 34 3 142 3 112 1 174 1 146 1 147 1 135 1 
242 1 226 1 179 2 4 1 205 1 291 1 34 2 61 1 209 1 254 1 142 2 326 1 174 1 146 1 147 1 
242 2 4 1 205 1 125 1 291 2 106 1 34 4 142 4 256 1 174 1 146 2 147 2 135 1 
242 1 142 1 4 1 205 1 34 1 174 1 146 1 147 1 
242 3 124 1 205 2 291 2 106 1 34 4 44 1 142 4 259 1 174 2 146 1 147 1 135 1 24 1 
242 1 4 1 205 1 291 1 34 2 126 1 142 2 174 1 146 1 147 1 116 1 148 1 
242 1 4 1 124 2 205 1 34 3 62 1 44 1 142 3 259 2 174 1 146 1 147 1 
242 2 70 1 71 2 156 1 
280 1 142 1 4 1 34 1 146 1 147 1 
242 1 142 2 4 1 205 1 291 1 112 1 34 2 174 1 146 1 147 1 
211 1 
242 1 142 1 4 1 205 1 34 1 174 1 146 1 147 1 
242 1 4 1 124 1 205 1 291 1 34 3 142 3 112 1 174 1 146 1 147 1 
242 1 106 1 135 1 24 1 
242 1 174 1 

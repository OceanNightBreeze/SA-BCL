#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 29 160 283 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 29 160 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 29 160 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 2 77 9 230 2 162 5 211 2 214 1 262 3 263 1 60 1 287 2 61 1 37 1 11 1 39 1 292 1 294 1 175 2 18 1 110 2 19 1 248 9 269 6 48 1 373 2 91 1 49 1 115 1 274 4 
303 2 77 9 230 2 162 5 211 2 214 1 262 3 263 1 60 1 61 1 287 2 37 1 11 1 39 1 292 1 294 1 175 2 18 1 110 2 19 1 248 9 269 6 48 1 373 2 91 1 49 1 115 1 274 4 
303 2 77 10 230 2 162 6 211 2 214 1 262 4 263 1 60 1 61 1 287 2 37 1 11 1 39 1 292 1 294 1 175 2 18 1 110 2 19 1 248 10 269 7 48 1 373 2 91 1 49 1 115 1 274 5 
303 2 77 7 230 2 162 4 211 2 262 2 263 1 60 1 61 1 287 1 37 1 11 1 39 1 292 1 294 1 175 2 18 1 110 2 19 1 248 7 269 4 48 1 373 2 91 1 49 1 115 1 274 3 
303 1 292 1 230 1 77 4 162 3 175 1 18 1 211 1 248 4 269 3 214 1 262 1 60 1 373 1 287 2 115 1 274 2 39 1 
303 1 292 1 230 1 77 2 162 1 175 1 294 1 355 1 248 2 110 1 211 1 60 1 91 1 39 1 137 1 244 1 
292 1 230 2 77 3 162 2 175 2 248 3 110 1 269 1 262 1 60 1 49 1 274 1 39 1 
184 1 303 1 77 9 230 2 162 5 211 1 214 1 262 3 263 1 60 1 287 2 39 1 13 1 292 1 175 2 18 1 110 1 248 9 269 7 48 1 373 1 49 1 115 1 274 4 
184 1 303 1 77 9 230 2 162 5 211 1 214 1 262 3 263 1 60 1 287 2 39 1 13 1 292 1 175 2 18 1 110 1 248 9 269 7 48 1 373 1 49 1 115 1 274 4 
302 1 189 1 341 1 
341 1 36 2 169 1 
116 2 293 2 155 1 163 2 282 2 41 2 166 2 173 1 
116 2 301 1 352 1 325 1 79 1 163 2 305 1 306 2 282 3 6 1 166 2 356 2 34 1 307 1 361 2 170 1 41 3 104 1 365 1 172 1 173 1 68 1 339 2 145 1 69 1 293 2 195 1 71 1 72 1 347 2 348 1 155 1 198 1 252 1 320 1 322 1 275 1 
116 1 293 1 155 1 354 1 163 1 282 1 41 1 227 1 166 1 30 1 
302 1 116 1 341 1 259 1 108 1 354 1 282 1 261 1 147 1 187 1 103 1 334 1 41 1 338 1 
302 1 116 1 341 1 293 1 108 2 163 1 354 1 147 2 282 1 261 1 166 1 187 1 103 1 41 1 338 1 
309 1 108 1 147 1 8 1 359 1 
302 1 341 1 309 1 108 2 147 2 94 1 314 1 359 1 
108 1 147 1 359 1 
116 1 293 1 108 1 354 1 163 1 147 1 282 1 166 1 142 1 309 1 155 1 227 1 41 1 30 1 
341 1 
302 1 341 1 309 1 108 2 147 2 350 1 314 1 359 1 
302 1 257 1 341 1 118 2 108 5 147 5 33 1 221 1 359 2 112 1 309 2 226 1 200 1 336 1 157 1 289 2 266 1 159 2 314 1 
189 1 173 1 
116 2 258 1 293 1 163 1 282 2 166 1 135 1 41 2 173 2 
276 1 10 1 171 1 
301 1 69 1 145 1 195 1 306 1 282 1 6 1 356 1 133 1 34 1 170 1 41 1 365 1 173 1 68 1 339 1 
116 3 293 3 163 3 38 1 282 3 41 3 166 1 173 1 
116 1 293 1 354 1 163 1 282 1 41 1 30 1 
116 1 258 1 293 1 354 1 163 1 135 1 282 1 41 1 166 1 
301 1 116 3 300 1 352 1 325 1 79 1 163 3 354 1 305 1 281 1 306 1 6 1 261 1 282 4 166 2 356 1 187 1 34 1 307 1 361 2 103 1 38 1 170 1 41 4 104 1 365 1 172 1 173 1 338 1 241 1 68 1 339 1 145 1 69 1 293 3 108 1 195 1 71 1 147 1 347 1 155 1 198 1 135 1 275 1 
116 2 259 1 293 1 163 1 38 1 282 2 41 2 173 1 331 1 
300 1 116 3 341 1 293 3 108 1 354 1 163 3 281 1 147 1 282 3 261 1 166 1 187 1 374 1 103 1 135 1 38 2 41 3 338 1 
116 2 276 1 293 2 163 2 282 2 166 1 10 1 38 1 135 1 41 2 
301 1 69 1 145 1 195 1 306 1 282 1 6 1 356 1 34 1 170 1 41 1 365 1 173 1 339 1 68 1 
301 1 69 1 145 1 306 1 282 1 6 1 356 1 150 1 170 1 41 1 365 1 173 1 367 1 339 1 68 1 
276 2 325 1 78 1 79 1 80 1 101 1 10 2 361 2 104 1 65 1 172 1 171 2 67 1 246 1 71 1 45 1 345 1 152 1 347 4 74 1 198 1 320 2 199 1 275 2 
116 1 293 1 354 1 163 1 372 1 282 1 41 1 187 1 
301 1 300 1 116 1 145 1 69 1 293 1 163 1 195 1 306 1 6 1 282 2 356 1 34 1 10 1 38 1 170 1 41 2 365 1 68 1 339 1 
116 5 300 1 259 1 144 1 293 4 163 4 282 5 166 1 331 1 38 2 135 1 41 5 180 1 173 1 
116 2 293 2 354 1 163 2 372 1 282 2 41 2 30 1 
267 1 271 1 
267 1 271 1 
368 1 237 1 
368 1 237 1 
368 1 237 1 
267 1 271 1 380 1 
267 1 256 1 271 1 
368 1 267 2 321 1 139 1 237 1 271 2 
267 1 271 1 380 1 
267 1 271 1 380 1 
267 1 271 1 174 1 
267 1 271 1 174 1 
267 1 271 1 174 1 
76 1 341 1 267 2 97 1 108 2 54 2 218 2 32 2 330 1 147 2 271 2 9 2 92 1 321 1 255 1 95 2 14 1 228 1 242 3 
116 2 97 1 207 1 54 1 163 2 32 1 280 1 282 2 41 2 64 1 173 1 366 1 242 1 267 1 293 2 108 1 342 1 218 1 147 1 271 1 295 1 251 1 95 1 256 1 
373 1 303 1 211 1 
303 1 211 1 137 1 
373 2 134 1 303 3 273 1 219 1 137 1 
373 1 134 1 303 2 273 1 47 1 137 1 
373 1 134 1 303 2 273 2 137 1 
302 1 118 1 280 1 56 1 33 2 101 1 59 1 359 1 36 3 309 4 216 2 311 1 127 1 169 1 289 1 65 1 366 1 314 1 15 2 341 2 108 5 90 1 147 5 345 1 74 1 23 2 112 1 113 1 251 1 200 3 377 1 159 1 
117 1 302 1 118 2 185 1 5 1 33 6 101 3 121 1 8 5 59 2 359 6 36 9 309 7 311 1 127 2 169 3 289 2 65 3 266 1 314 1 15 6 341 5 245 1 108 9 90 3 147 9 46 5 345 3 74 3 23 6 112 1 251 4 200 8 204 1 159 2 
302 1 118 1 56 1 101 1 33 2 59 1 36 4 309 2 216 1 127 1 169 2 289 1 65 1 266 1 15 2 341 3 108 3 90 1 147 3 345 1 74 1 23 2 113 1 251 1 200 3 159 1 
302 1 118 1 185 1 56 1 101 2 33 4 121 1 59 1 36 7 216 2 309 3 127 1 169 3 289 1 65 2 266 1 15 4 341 4 245 1 108 4 90 2 147 4 345 2 74 2 23 4 113 1 251 2 200 5 159 1 
189 1 146 1 68 1 
327 1 68 1 
89 1 
145 1 68 1 
145 1 146 2 167 1 365 1 66 1 68 3 
145 1 365 1 68 1 
68 1 138 1 
1 1 370 1 278 1 165 1 17 1 247 1 80 2 45 3 148 1 101 1 347 7 197 1 320 4 65 1 106 1 378 2 275 3 
1 1 370 1 278 1 165 1 17 1 247 1 80 2 45 3 148 1 101 1 347 7 197 1 320 4 65 1 106 1 378 2 275 3 
1 1 370 1 278 1 165 1 17 1 247 1 80 2 45 3 148 1 101 1 347 7 197 1 320 4 65 1 106 1 351 1 378 2 275 3 
1 2 278 2 79 1 165 1 80 5 101 4 284 1 308 1 361 2 362 4 239 1 86 1 104 1 106 2 65 4 172 1 107 1 370 2 90 3 17 1 247 5 71 1 148 1 45 10 149 1 111 1 345 3 347 31 74 3 154 3 197 1 320 16 378 3 275 15 
1 1 278 2 79 1 165 2 80 3 212 1 101 3 361 2 104 1 106 1 65 3 172 1 370 2 17 1 247 1 43 1 71 1 148 1 45 4 176 1 347 14 320 8 378 2 275 6 
301 1 303 2 77 2 230 1 162 1 306 1 211 1 356 1 236 1 60 1 123 1 288 1 39 1 170 1 105 1 191 1 339 1 292 1 175 1 315 1 344 1 248 2 110 1 219 1 269 1 373 1 375 1 114 1 158 1 137 1 
301 1 303 2 77 3 230 1 162 1 306 1 211 1 356 1 236 1 288 1 265 1 39 1 170 1 105 1 191 1 339 1 292 1 175 1 315 1 219 1 248 3 110 1 269 2 132 1 373 1 375 1 114 1 158 1 379 1 137 1 
301 1 303 2 77 2 162 1 306 1 211 1 356 1 236 1 288 1 265 1 39 1 170 1 105 1 191 1 339 1 292 1 110 1 248 2 219 1 269 2 132 1 373 1 375 1 158 1 137 1 
301 1 145 1 69 1 230 1 77 1 175 1 234 1 306 1 110 2 248 1 356 1 102 1 238 1 298 1 93 1 170 1 158 2 105 2 191 2 205 1 379 1 68 1 339 1 
301 1 303 2 77 1 230 1 306 1 211 1 356 1 236 1 60 1 123 1 288 1 170 1 105 1 191 1 339 1 175 1 315 1 248 1 110 1 219 1 132 1 373 1 375 1 114 1 158 1 137 1 
28 1 
183 2 277 2 3 2 234 1 59 1 140 2 289 1 339 2 68 1 341 1 145 1 69 2 108 4 147 4 73 1 112 1 75 1 253 1 200 2 349 2 159 1 301 1 118 1 304 1 353 2 119 1 306 2 356 2 357 1 33 2 359 6 83 1 360 1 36 2 84 2 170 1 363 1 169 2 313 1 314 3 270 1 224 1 93 1 381 2 
304 1 108 2 119 1 147 2 270 1 73 1 359 2 360 1 350 1 314 1 381 1 
183 1 360 1 304 1 119 1 108 1 147 1 349 1 270 1 73 1 
183 1 304 1 108 2 119 1 147 2 270 1 140 1 73 1 359 2 360 1 350 1 349 1 314 1 381 1 
160 1 304 1 108 2 119 1 147 2 283 1 270 1 140 2 359 3 73 1 360 1 350 1 314 1 29 1 381 2 
302 1 183 2 277 2 118 1 304 1 353 2 119 1 3 2 357 1 33 1 140 2 359 4 360 1 84 2 36 2 363 1 169 2 289 1 314 2 341 2 108 3 147 3 270 1 73 1 112 1 253 1 200 1 349 2 159 1 381 2 
360 1 304 1 119 1 108 1 147 1 270 1 29 1 73 1 
360 1 304 1 119 1 108 1 147 1 270 1 29 1 73 1 
302 1 183 2 96 1 118 1 304 1 353 2 119 1 98 1 3 2 357 1 33 1 140 2 359 4 360 1 36 2 289 1 240 1 314 2 341 1 108 3 147 3 270 1 73 1 296 2 112 1 225 1 319 2 200 1 349 2 159 1 381 2 
183 1 160 1 304 1 108 1 119 1 147 1 270 1 140 1 73 1 359 1 360 1 349 1 29 1 381 1 
183 1 160 1 304 1 108 1 119 1 147 1 270 1 140 1 73 1 359 1 360 1 349 1 29 1 381 1 
302 1 183 2 118 1 304 1 353 2 119 1 3 2 357 1 33 1 140 2 359 4 360 1 36 2 289 1 314 2 341 1 108 3 147 3 270 1 73 1 296 2 112 1 225 1 319 2 253 1 200 1 349 2 159 1 381 2 
276 1 325 1 78 1 370 1 278 1 79 1 165 1 17 1 80 2 71 1 45 2 148 1 101 1 347 6 189 1 10 1 198 1 361 2 320 3 104 1 65 1 171 1 378 1 172 1 173 2 275 3 
31 1 352 1 276 4 325 1 231 1 79 2 80 1 358 1 101 2 284 1 10 11 361 4 362 3 104 2 65 1 172 2 171 11 107 1 173 1 90 2 247 1 71 2 45 2 345 1 347 14 74 2 348 1 154 3 178 1 198 2 320 8 136 1 275 6 
301 1 31 1 116 1 300 1 276 1 352 1 325 1 163 1 79 1 306 1 6 1 282 2 356 1 34 1 361 2 38 1 170 1 41 2 104 1 365 1 172 1 173 1 68 1 339 1 145 1 69 1 293 1 195 1 71 1 316 1 133 1 347 2 348 1 198 1 376 1 320 1 27 1 275 1 
276 7 325 3 278 1 233 1 282 3 6 2 7 2 101 3 332 2 10 7 104 3 12 2 65 3 339 3 68 2 69 1 145 2 293 1 195 2 17 1 71 3 247 4 148 1 21 1 345 2 347 20 74 2 348 1 198 3 300 1 116 1 31 1 301 2 352 1 79 3 163 1 165 1 80 4 306 3 356 3 34 2 307 2 125 2 361 6 38 1 170 2 41 3 365 2 172 3 171 7 173 2 370 1 90 2 45 8 132 1 320 10 181 1 378 1 275 10 
116 1 301 2 352 1 325 2 78 1 163 1 79 2 234 1 306 8 282 1 356 7 361 4 38 1 170 2 41 1 335 1 104 2 143 1 290 1 172 2 68 3 339 8 69 2 145 2 293 1 128 1 16 1 344 1 71 2 249 1 132 1 346 1 347 2 348 1 198 2 320 1 93 1 322 2 275 1 
31 1 116 1 276 1 325 1 163 1 79 1 80 1 282 1 166 1 57 1 101 1 10 1 361 2 41 1 104 1 65 1 171 1 172 1 293 1 90 1 71 1 45 1 345 1 74 1 347 3 198 1 320 1 135 1 275 2 
276 1 325 1 78 1 79 1 247 1 71 1 45 1 101 1 347 2 74 1 10 1 198 1 361 2 320 2 199 1 104 1 171 1 172 1 
276 1 325 1 78 1 79 1 80 1 71 1 45 1 345 1 152 1 347 2 10 1 198 1 361 2 104 1 65 1 171 1 172 1 275 2 
276 2 325 1 78 1 79 1 80 1 101 1 10 2 361 2 104 1 65 1 172 1 171 2 90 1 71 1 247 1 45 2 345 1 74 1 347 4 198 1 320 2 275 2 
276 1 325 1 79 1 247 1 71 1 45 1 101 1 347 2 74 1 10 1 198 1 361 2 320 2 199 1 335 1 104 1 171 1 172 1 
276 1 325 1 79 1 80 1 71 1 45 1 345 1 152 1 347 2 10 1 198 1 361 2 335 1 104 1 65 1 171 1 172 1 275 2 
276 2 325 1 79 1 80 1 101 1 10 2 361 2 335 1 104 1 65 1 172 1 171 2 90 1 71 1 247 1 45 2 345 1 74 1 347 4 198 1 320 2 275 2 
276 2 325 1 90 1 79 1 80 1 247 1 71 1 45 2 101 1 345 1 74 1 347 4 10 2 198 1 361 2 320 2 104 1 65 1 171 2 172 1 275 2 
301 1 352 1 325 1 79 1 306 1 6 1 282 1 356 1 34 1 307 1 361 2 170 1 41 1 104 1 365 1 172 1 173 1 339 1 68 1 145 1 69 1 195 1 71 1 347 2 348 1 198 1 320 1 275 1 
301 1 352 1 325 1 79 1 306 1 6 1 282 1 356 1 168 1 361 2 170 1 41 1 104 1 365 1 172 1 173 1 367 1 339 1 68 1 145 1 69 1 71 1 150 1 347 2 348 1 198 1 320 1 275 1 
31 1 276 2 325 1 79 1 80 1 101 1 10 2 361 2 104 1 65 1 172 1 171 2 90 1 71 1 247 1 45 2 345 1 74 1 347 4 198 1 320 2 275 2 
301 1 276 2 325 1 79 1 80 1 306 1 6 1 282 1 356 1 101 1 34 1 307 1 10 2 361 2 170 1 41 1 12 1 104 1 65 1 365 1 171 2 172 1 339 1 68 1 145 1 90 1 195 1 247 1 344 1 71 1 45 2 345 1 347 4 74 1 198 1 320 2 275 2 
31 1 116 1 276 1 325 1 206 1 163 1 79 1 282 1 166 1 101 1 10 1 361 2 41 1 104 1 65 1 172 1 171 1 293 1 90 1 247 1 71 1 45 1 345 1 74 1 347 3 198 1 320 2 135 1 275 1 
161 2 79 2 80 3 212 1 101 3 284 1 58 1 35 1 333 1 361 4 362 2 312 1 104 2 65 3 172 2 107 1 90 3 71 2 247 3 45 6 20 1 345 3 22 1 153 1 347 19 74 3 154 1 320 9 51 2 275 10 
0 1 161 4 79 3 80 2 212 1 101 3 58 2 284 2 35 1 310 1 361 6 362 2 312 1 364 1 104 3 42 1 65 2 172 3 340 1 90 3 247 2 71 3 111 2 45 4 20 2 345 2 22 1 347 26 74 3 154 2 320 14 51 1 53 1 275 12 
0 1 161 4 278 1 79 3 165 1 80 4 212 1 101 5 284 3 58 1 35 1 124 1 310 1 361 6 362 4 312 1 364 1 104 3 42 1 65 5 172 3 107 1 340 1 370 1 90 4 17 1 71 3 247 4 148 1 111 1 45 8 20 2 345 4 22 1 153 1 347 41 74 4 154 3 320 20 378 1 51 1 53 1 275 21 
0 1 161 4 278 1 79 4 165 1 80 4 212 1 101 5 284 3 58 1 35 1 124 1 310 1 361 8 362 4 312 1 364 1 104 4 42 1 65 4 172 4 107 1 340 1 370 1 90 4 17 1 71 4 247 3 148 1 111 2 45 7 20 2 345 3 22 1 153 1 347 38 74 4 154 3 320 20 378 1 51 1 53 1 275 18 
0 1 161 4 278 1 231 2 79 2 165 1 80 7 212 1 101 8 284 2 58 1 35 1 310 1 361 4 362 4 312 1 364 1 104 2 42 1 65 8 172 2 107 2 340 1 370 1 90 7 17 1 71 2 247 7 148 1 111 1 45 14 20 1 345 7 22 1 347 52 74 7 154 4 320 27 378 1 51 1 53 1 275 25 
285 1 267 1 54 1 218 1 321 1 32 1 255 1 95 1 271 1 228 1 
256 1 64 1 
267 1 250 1 54 1 218 1 32 1 235 1 95 1 131 1 271 1 
76 1 341 1 97 1 267 1 108 1 54 1 218 1 32 1 330 1 147 1 271 1 9 1 92 1 321 1 255 1 95 1 228 1 242 2 
76 1 341 1 97 1 267 1 108 1 54 1 218 1 32 1 330 1 147 1 271 1 9 1 92 1 321 1 255 1 95 1 228 1 242 2 
76 1 341 1 97 1 267 1 108 1 54 1 218 1 32 1 330 1 147 1 271 1 9 1 92 1 321 1 255 1 95 1 228 1 242 2 
99 1 139 1 380 1 
99 1 139 1 380 1 
141 1 174 1 
141 1 139 1 174 1 
207 1 342 1 
116 2 207 1 54 1 163 2 32 1 280 1 282 2 9 1 309 1 41 2 64 1 173 1 366 1 242 1 267 1 293 2 108 1 342 1 218 1 147 1 271 1 295 1 92 1 297 1 251 1 95 1 256 1 
99 1 380 1 
141 1 139 1 174 1 
301 1 31 1 116 2 352 1 325 1 279 1 79 1 306 2 282 2 356 2 286 1 361 2 170 1 41 2 88 1 104 1 290 1 172 1 68 1 339 2 145 1 16 1 71 1 196 1 272 1 347 2 348 1 198 1 320 1 322 2 275 1 
301 1 303 2 109 1 306 2 344 1 328 1 211 1 219 1 356 2 132 1 236 1 373 1 288 1 114 1 170 1 87 1 158 1 137 1 339 2 
301 1 303 2 306 1 328 1 211 1 219 1 356 1 132 1 236 1 373 1 288 1 114 1 170 1 201 1 158 1 137 1 339 1 
301 1 145 1 69 1 109 1 234 1 306 1 356 1 130 1 102 1 93 1 170 1 158 1 68 1 339 1 
301 1 303 2 109 1 306 1 328 1 211 1 219 1 356 1 132 1 236 1 373 1 288 1 114 1 170 1 87 1 158 1 137 1 339 1 
129 1 
302 1 189 1 341 1 200 1 336 1 33 1 221 1 
302 1 277 1 118 1 33 1 359 1 36 1 84 1 169 1 363 1 289 1 314 1 341 2 108 1 147 1 112 1 200 1 159 1 
327 3 4 1 329 2 101 2 59 2 190 2 103 2 336 1 289 4 65 2 66 1 68 10 339 3 15 6 193 1 145 3 69 1 341 8 108 5 343 2 344 1 146 2 147 5 345 2 74 2 112 4 23 6 24 2 200 9 203 1 159 4 302 2 301 3 118 4 164 1 306 3 356 3 33 8 213 2 264 1 359 5 125 2 36 12 85 2 170 4 169 6 365 3 313 1 314 3 90 2 317 2 221 1 182 2 138 2 
0 1 302 2 118 2 260 1 33 5 101 2 59 1 284 1 359 1 188 1 36 6 190 2 310 1 362 1 169 3 364 1 289 2 42 1 65 2 313 1 314 1 15 5 340 1 341 5 108 1 90 2 147 1 345 2 74 2 23 5 112 2 154 1 24 1 200 8 159 2 
116 1 118 1 278 1 354 1 163 1 55 1 165 1 282 1 166 1 101 2 33 2 142 1 190 2 41 1 289 1 65 1 293 1 370 1 108 1 43 1 147 1 112 1 24 1 155 1 200 2 227 1 159 1 30 1 
302 1 341 1 118 1 33 1 221 1 112 1 336 1 200 1 289 1 159 1 
341 5 90 2 101 2 33 5 345 2 74 2 23 5 125 1 36 10 24 1 190 2 169 5 200 5 65 2 15 5 
302 1 341 1 108 1 147 1 314 1 359 1 
301 1 118 2 234 1 209 1 306 4 356 4 33 2 59 2 83 1 359 4 170 1 289 2 266 1 313 2 314 2 68 1 339 4 193 2 145 1 69 2 108 3 147 3 177 1 112 1 224 1 93 1 200 2 203 1 159 2 
116 2 301 1 352 1 325 1 79 1 163 2 305 1 306 1 282 3 6 1 356 1 166 2 34 1 307 1 361 2 170 1 41 3 104 1 365 1 172 1 173 1 339 1 68 1 69 1 145 1 293 2 195 1 71 1 347 1 155 1 198 1 275 1 
302 2 341 4 118 1 33 2 59 1 23 2 112 1 36 4 169 2 200 1 289 1 378 1 159 1 313 1 15 2 
218 1 63 1 95 1 
194 1 207 1 218 1 255 1 95 1 
218 1 63 1 95 1 
218 1 63 1 95 1 
218 1 299 1 95 1 
218 1 299 1 95 1 
218 1 299 1 95 1 
218 1 95 1 
267 1 271 1 
370 1 278 1 79 2 165 1 17 1 247 1 80 2 71 2 45 3 111 1 148 1 101 1 347 8 361 4 320 4 104 2 65 1 378 1 172 2 275 4 
370 1 278 1 17 1 165 1 80 2 148 1 45 2 101 1 189 1 347 6 320 3 65 1 378 1 275 3 
90 1 79 1 80 1 71 1 247 1 45 2 101 1 345 1 74 1 347 4 361 2 320 2 156 1 104 1 65 1 172 1 275 2 
90 1 80 1 247 1 45 2 101 1 345 1 284 1 347 7 74 1 154 1 362 2 320 3 65 1 107 1 275 4 
278 2 231 1 79 2 165 1 80 5 358 1 101 3 361 4 362 2 104 2 65 3 107 1 172 2 370 2 90 2 17 1 247 4 71 2 148 1 45 9 111 2 345 2 74 2 347 23 154 2 320 11 378 1 324 1 275 12 
347 1 362 1 275 1 
347 1 154 1 320 1 
90 1 79 1 71 1 247 1 80 2 45 3 101 1 345 1 347 6 74 1 125 1 361 2 320 3 156 1 104 1 65 1 172 1 275 3 
0 1 79 1 80 1 212 1 101 2 284 1 310 1 361 2 362 1 364 1 104 1 65 2 42 1 172 1 340 1 90 2 247 1 71 1 45 2 345 2 347 12 74 2 154 1 320 6 275 6 
370 1 278 1 165 1 80 1 247 1 45 2 101 1 347 6 320 3 65 1 275 3 
370 1 278 1 79 1 17 1 247 1 80 1 71 1 45 2 148 1 111 1 347 3 361 2 320 1 104 1 172 1 324 1 275 2 
370 2 278 2 79 1 165 1 71 1 43 1 80 3 247 2 212 1 45 5 101 2 347 10 361 2 320 5 104 1 65 2 172 1 275 5 
79 1 71 1 247 1 212 1 45 1 101 1 74 1 347 2 361 2 320 2 104 1 172 1 
90 1 79 1 80 1 71 1 247 1 212 1 45 2 101 1 345 1 74 1 347 4 361 2 320 2 104 1 65 1 172 1 275 2 
370 1 278 1 79 3 71 3 80 1 247 1 212 1 111 1 45 2 153 1 347 3 361 6 320 1 104 3 172 3 324 1 275 2 
278 3 79 5 165 2 80 7 212 1 101 5 284 1 308 1 361 10 362 4 239 1 104 5 65 5 172 5 107 1 370 3 90 3 17 1 71 5 247 5 148 1 111 2 149 1 45 12 345 3 153 1 347 34 74 3 154 3 320 16 156 1 378 1 324 1 275 18 
278 1 79 1 165 1 80 2 212 1 101 1 284 1 361 2 362 1 104 1 65 1 172 1 340 1 370 1 17 1 71 1 148 1 45 2 347 8 154 1 320 4 378 1 275 4 
278 1 79 2 165 1 80 2 212 1 101 2 284 1 361 4 362 2 104 2 65 1 172 2 107 1 340 1 370 1 90 1 17 1 71 2 247 1 148 1 45 3 347 11 74 1 154 1 320 6 156 1 378 1 275 5 
0 1 278 1 79 3 165 1 80 3 212 1 101 3 284 1 310 1 361 6 362 1 364 1 104 3 65 3 42 1 172 3 340 1 370 1 90 2 17 1 247 1 71 3 148 1 45 4 111 1 345 2 347 19 74 2 154 1 320 9 156 1 378 1 275 10 
0 1 278 1 79 3 165 1 80 3 212 1 101 3 284 1 310 1 361 6 362 1 364 1 104 3 65 2 42 1 172 3 340 1 370 1 90 2 17 1 247 2 71 3 148 1 111 1 45 5 345 1 347 17 74 2 154 1 320 10 156 1 378 1 275 7 
278 1 79 1 165 1 80 2 212 1 101 1 284 1 361 2 362 1 104 1 65 1 172 1 340 1 370 1 17 1 71 1 148 1 45 2 347 8 154 1 320 4 378 1 275 4 
0 1 79 1 80 1 212 1 101 2 284 1 310 1 361 2 362 1 364 1 104 1 65 2 42 1 172 1 340 1 90 2 247 1 71 1 45 2 345 2 347 12 74 2 154 1 320 6 275 6 
0 1 278 1 79 4 165 1 80 3 212 1 101 3 284 1 310 1 361 8 362 1 364 1 104 4 42 1 65 2 172 4 340 1 370 1 90 2 17 1 247 2 71 4 148 1 45 5 111 2 345 1 347 18 74 2 154 1 320 10 156 1 378 1 275 8 
0 1 79 4 80 3 212 1 101 3 284 1 310 1 361 8 362 1 364 1 104 4 42 1 65 2 172 4 340 1 90 3 247 3 71 4 45 6 111 2 345 2 347 16 153 1 74 3 154 1 320 9 275 7 
370 3 278 3 17 1 165 1 80 3 247 3 148 2 45 6 101 1 347 7 320 3 65 1 275 4 
0 1 278 1 79 4 165 1 80 3 212 1 101 3 284 1 310 1 361 8 362 1 364 1 104 4 42 1 65 2 172 4 340 1 370 1 90 2 17 1 247 1 71 4 148 1 45 4 111 2 345 1 347 18 153 1 74 2 154 1 320 10 378 1 275 8 
116 1 259 1 2 1 282 1 41 1 173 1 331 1 
116 1 259 1 2 1 282 1 331 1 122 1 223 1 318 1 62 1 40 1 41 1 173 1 
301 1 189 1 145 1 69 1 234 1 93 1 170 1 306 1 356 1 68 1 339 1 
116 1 301 1 145 1 69 1 293 1 163 1 306 1 6 1 282 2 356 1 34 1 38 1 170 1 41 2 365 1 173 1 68 1 339 1 
301 1 116 2 163 1 354 1 306 1 282 2 6 1 356 1 187 1 34 1 213 1 38 1 170 1 41 2 365 2 173 1 338 1 339 1 68 3 193 1 145 2 293 2 138 1 
301 1 116 2 163 1 354 1 306 2 282 2 6 1 356 2 187 1 213 1 215 1 38 1 170 1 41 2 365 2 173 1 338 1 367 1 339 2 68 3 193 1 145 2 293 2 138 1 
302 1 193 1 301 1 69 1 341 1 145 1 108 2 327 1 306 3 147 2 146 1 356 3 151 1 213 1 215 1 359 1 126 1 103 1 170 1 365 1 138 1 339 3 68 4 
302 1 193 1 301 1 69 1 341 1 145 1 108 2 343 1 327 1 306 3 147 2 146 1 356 3 213 1 215 1 359 1 103 1 170 1 365 1 138 1 339 3 68 4 
301 1 170 1 306 1 356 1 143 1 339 1 
301 2 69 2 145 2 128 1 344 1 306 7 268 1 120 1 356 6 249 1 132 1 346 1 170 3 322 1 143 1 290 1 365 1 217 1 66 1 339 7 68 3 
301 1 31 1 116 1 276 1 325 2 278 1 163 1 79 2 165 1 80 2 306 1 6 1 282 2 356 1 101 1 34 1 332 1 307 1 10 1 361 4 38 1 170 1 41 2 104 2 12 1 65 1 365 1 171 1 172 2 173 2 68 1 339 1 145 1 293 1 370 1 195 1 17 1 71 2 344 1 196 1 45 2 148 1 347 6 198 2 320 3 378 1 275 3 
302 1 118 2 327 1 306 1 329 1 356 1 33 1 359 2 309 1 103 1 85 1 336 1 289 2 314 1 339 1 68 2 341 1 69 1 108 3 343 1 317 1 147 3 146 1 221 1 112 2 200 1 203 1 159 2 
301 1 145 1 344 1 306 2 146 1 356 2 264 1 170 2 143 1 365 1 66 1 339 2 68 2 
369 1 301 1 69 1 145 1 234 1 306 4 344 1 356 4 215 1 93 1 170 1 339 4 68 1 
193 1 301 1 145 1 306 2 268 1 356 2 222 1 254 1 170 2 181 1 365 1 217 1 339 2 68 1 
301 1 303 1 69 1 288 1 170 1 306 1 211 1 356 1 137 1 339 1 
301 1 145 1 344 1 306 2 356 2 132 1 272 1 170 1 290 1 339 2 68 1 
369 1 193 1 301 2 69 1 145 2 128 1 234 1 306 5 344 1 356 4 249 1 93 1 170 2 290 1 339 5 68 3 
369 1 193 1 301 2 69 1 145 2 234 1 306 5 344 1 356 4 249 1 93 1 170 2 202 1 290 1 339 5 68 3 
116 1 301 1 145 1 69 1 293 1 163 1 306 1 6 1 282 2 356 1 38 1 170 1 41 2 365 1 173 1 367 1 68 1 339 1 
193 1 301 1 145 1 306 1 268 1 120 1 356 1 170 2 365 1 217 1 66 1 339 1 68 1 
116 1 279 1 282 1 286 1 50 1 25 1 41 1 88 1 192 1 
25 1 81 1 323 1 
371 1 50 1 25 1 173 1 192 1 
302 1 341 1 108 2 371 2 354 1 281 1 147 2 261 1 81 1 187 1 309 1 25 1 50 2 103 1 323 1 173 1 338 1 243 1 192 2 
189 1 292 1 162 1 39 1 
292 1 77 1 230 1 162 1 175 1 39 1 248 1 
77 1 110 1 191 1 
60 1 91 2 292 1 77 3 230 1 162 1 232 1 175 1 39 1 179 1 248 3 186 1 
292 1 77 2 230 1 287 1 162 1 175 1 39 1 248 2 269 1 
303 1 230 1 77 1 162 1 175 1 18 1 248 1 211 1 60 1 373 1 274 1 
60 1 77 1 230 1 162 1 175 1 39 1 248 1 
60 1 292 1 77 1 230 1 175 1 39 2 248 1 
230 2 77 2 162 1 175 2 210 1 248 2 60 1 39 1 52 1 229 1 
292 1 230 1 77 3 162 2 175 1 248 3 269 2 263 1 262 1 48 1 60 1 274 1 39 1 
303 2 292 1 230 1 77 2 162 1 100 1 175 1 248 2 219 1 211 1 269 1 60 1 373 1 39 1 137 1 
292 1 230 2 77 4 162 2 175 2 248 4 269 2 214 1 262 1 60 1 287 1 274 1 39 1 
60 1 292 1 77 1 230 1 162 1 175 1 39 1 248 1 
292 2 77 4 230 1 326 1 162 3 232 1 175 1 248 4 269 2 262 1 91 1 274 1 179 1 39 2 
60 1 292 1 77 2 230 1 162 1 175 1 39 1 44 1 248 2 269 1 13 1 220 1 
230 1 77 3 292 1 162 1 232 1 175 1 248 3 60 1 91 2 179 2 39 1 291 1 
70 1 162 2 208 2 82 1 
60 1 77 1 230 1 26 1 175 1 248 1 
60 1 292 1 77 2 230 1 162 1 175 1 39 1 248 2 269 1 263 1 
337 1 
60 1 292 1 77 1 230 1 162 1 175 1 39 1 248 1 
60 1 91 1 292 1 77 3 230 1 162 1 175 1 39 1 248 3 269 1 263 1 
326 1 162 1 274 1 262 1 
162 1 39 1 

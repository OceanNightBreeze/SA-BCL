#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 3 289 2 53 9 211 1 362 6 119 1 337 2 369 1 268 1 338 1 221 1 37 1 107 1 38 1 200 1 128 5 148 2 17 2 378 1 20 2 319 2 282 1 131 1 22 1 321 4 48 1 88 9 351 2 
74 3 289 2 53 9 211 1 362 6 119 1 337 2 369 1 268 1 338 1 221 1 37 1 107 1 38 1 200 1 128 5 148 2 17 2 378 1 319 2 20 2 282 1 131 1 22 1 321 4 48 1 88 9 351 2 
74 4 289 2 53 10 211 1 362 7 119 1 337 2 369 1 268 1 338 1 221 1 37 1 107 1 38 1 200 1 128 6 148 2 17 2 378 1 319 2 20 2 282 1 131 1 22 1 321 5 48 1 88 10 351 2 
74 2 289 2 53 7 211 1 362 4 119 1 337 2 369 1 268 1 338 1 221 1 37 1 107 1 200 1 128 4 148 2 17 2 378 1 319 2 20 1 282 1 131 1 22 1 321 3 48 1 88 7 351 2 
369 1 74 1 37 1 107 1 38 1 289 1 53 4 200 1 128 3 148 1 17 1 362 3 319 1 20 2 131 1 321 2 351 1 88 4 
369 1 268 1 178 1 53 2 275 1 128 1 200 1 63 1 148 1 17 1 319 1 131 1 48 1 337 1 351 1 88 2 
369 1 74 1 53 3 200 1 128 2 362 1 319 2 131 1 22 1 321 1 337 1 351 2 88 3 
74 3 289 1 53 9 362 7 264 1 337 1 369 1 338 1 37 1 107 1 38 1 200 1 128 5 148 1 17 1 249 1 378 1 319 2 20 2 131 1 321 4 22 1 88 9 351 2 
74 3 289 1 53 9 362 7 264 1 337 1 369 1 338 1 37 1 107 1 38 1 200 1 128 5 148 1 17 1 249 1 378 1 319 2 20 2 131 1 321 4 22 1 88 9 351 2 
191 1 255 1 136 1 
326 2 136 1 343 1 
109 2 354 2 90 1 98 2 122 2 27 2 266 1 329 2 
137 1 354 2 90 1 232 1 355 2 357 1 27 2 139 1 329 2 93 2 259 1 331 1 309 1 98 3 122 3 100 1 336 1 266 1 9 1 219 2 143 1 370 1 166 1 58 2 316 1 60 1 168 1 372 1 169 1 109 2 67 2 133 1 175 1 380 1 206 1 72 1 231 1 
109 1 11 1 354 1 90 1 98 1 122 1 27 1 116 1 151 1 329 1 
354 1 371 1 295 1 40 1 118 1 191 1 5 1 98 1 122 1 349 1 174 1 101 1 151 1 136 1 
354 1 371 1 27 1 40 1 329 1 191 1 109 1 5 1 98 1 122 1 174 2 349 2 101 1 151 1 136 1 
302 1 162 1 174 1 349 1 114 1 
191 1 358 1 302 1 174 2 349 2 41 1 114 1 136 1 
302 1 174 1 349 1 
11 1 90 1 354 1 233 1 116 1 27 1 329 1 109 1 98 1 122 1 349 1 174 1 151 1 114 1 
136 1 
191 1 302 1 161 1 174 2 349 2 41 1 114 1 136 1 
356 1 302 2 41 1 359 1 43 1 171 2 191 1 77 1 345 2 130 1 78 1 332 2 239 1 349 5 174 5 366 1 114 2 285 1 136 1 
354 1 370 1 166 1 314 1 355 1 357 1 169 1 372 1 329 1 93 1 344 1 109 1 309 1 98 2 122 2 175 1 72 1 206 1 163 1 219 1 
255 1 266 1 
354 2 155 1 27 1 329 1 109 1 278 1 98 2 122 2 266 2 
210 1 350 1 163 1 
370 1 355 1 166 1 357 1 234 1 372 1 169 1 93 1 309 1 98 1 122 1 175 1 266 1 206 1 72 1 219 1 
354 5 314 2 155 1 27 1 146 1 295 1 329 4 344 1 109 4 213 1 214 1 98 5 122 5 266 1 
109 2 11 1 354 2 333 1 98 2 122 2 151 1 329 2 
109 3 354 3 314 1 98 3 122 3 27 1 266 1 329 3 
109 1 11 1 354 1 98 1 122 1 151 1 329 1 
109 1 278 1 354 1 98 1 122 1 27 1 155 1 151 1 329 1 
354 3 90 1 232 1 355 1 357 1 27 2 155 1 139 1 329 3 93 1 331 1 5 1 309 1 6 1 98 4 122 4 100 1 336 1 101 1 266 1 9 1 218 1 219 1 143 1 370 1 166 1 314 1 371 1 58 1 316 1 40 1 169 1 372 1 344 1 109 3 67 2 133 1 349 1 174 1 175 1 72 1 151 1 206 1 231 1 
109 1 354 2 314 1 98 2 122 2 146 1 295 1 266 1 329 1 
354 3 314 2 371 1 27 1 155 1 40 1 329 3 344 1 109 3 5 1 98 3 6 1 122 3 292 1 174 1 349 1 101 1 151 1 136 1 
109 2 354 2 314 1 98 2 122 2 27 1 155 1 210 1 329 2 163 1 
370 1 355 1 166 1 357 1 372 1 169 1 93 1 309 1 98 1 122 1 175 1 266 1 206 1 72 1 219 1 
370 1 355 1 166 1 357 1 372 1 169 1 93 1 307 1 98 1 122 1 71 1 266 1 206 1 72 1 219 1 
154 1 232 1 139 1 185 1 210 2 158 1 54 1 290 1 331 1 29 1 240 1 9 1 245 1 163 2 316 1 58 4 294 1 373 1 67 2 150 1 133 2 350 2 380 2 231 1 
109 1 354 1 371 1 98 1 333 1 122 1 151 1 329 1 
145 1 44 1 
145 1 44 1 
202 1 25 1 
202 1 25 1 
202 1 25 1 
145 1 15 1 44 1 
145 1 15 1 44 1 
145 1 304 1 44 1 
202 1 25 1 287 1 346 1 145 2 44 2 
145 1 15 1 44 1 
120 1 145 1 44 1 
120 1 145 1 44 1 
120 1 145 1 44 1 
324 1 269 1 354 2 325 1 299 1 0 1 341 1 145 1 235 1 328 1 83 1 304 1 224 1 329 2 44 1 28 1 109 2 98 2 122 2 132 1 113 1 349 1 174 1 266 1 
300 1 325 2 299 2 287 1 36 1 145 2 235 1 328 3 83 2 224 2 44 2 363 1 79 1 70 1 349 2 174 2 56 2 136 1 104 1 
17 1 289 1 148 1 
17 1 275 1 148 1 
69 1 263 1 289 2 367 1 275 1 148 3 
69 1 263 1 289 1 275 1 148 2 376 1 
263 1 69 2 289 1 275 1 148 2 
324 1 326 3 180 1 256 1 302 1 186 2 257 1 290 1 191 1 29 1 332 1 99 1 216 1 41 1 373 1 170 1 171 1 43 1 343 1 129 2 345 1 130 2 281 1 113 1 132 1 150 1 174 5 349 5 114 4 229 2 136 2 285 3 
353 1 90 1 354 1 302 1 233 1 116 1 27 1 329 1 191 1 98 1 122 1 162 1 11 1 126 1 109 1 174 2 349 2 151 1 114 2 136 1 323 1 
324 1 354 1 90 1 326 4 180 1 27 1 116 1 233 1 257 1 186 2 329 1 290 1 191 1 29 1 78 1 332 1 98 1 99 1 122 1 216 1 11 1 170 1 373 1 171 1 343 2 109 1 345 1 129 2 130 2 150 1 174 3 349 3 151 1 114 2 229 1 136 3 285 3 
324 2 90 1 326 5 180 1 233 1 186 3 290 1 329 1 191 1 332 1 98 1 99 1 11 1 343 2 109 1 345 1 150 2 349 4 151 1 114 3 207 1 354 1 116 1 27 1 257 1 212 1 78 1 29 1 122 1 216 2 373 2 170 1 171 1 129 3 130 4 279 1 174 4 229 2 285 3 136 3 
75 1 370 1 255 1 
370 1 253 1 
223 1 
370 1 166 1 357 1 
370 1 52 1 
370 1 166 1 
75 2 370 3 166 1 357 1 348 1 187 1 
144 1 58 5 91 1 156 1 294 3 158 4 290 1 258 2 297 1 192 1 320 1 149 1 124 1 150 1 133 3 380 2 243 1 
144 1 58 6 91 1 156 1 294 3 158 4 290 1 258 2 297 1 192 1 320 1 149 1 124 1 150 1 133 4 380 2 243 1 
164 1 144 1 58 5 91 1 156 1 294 3 158 4 290 1 258 2 297 1 192 1 320 1 149 1 124 1 150 1 133 3 380 2 243 1 
152 1 232 1 91 5 209 1 156 2 117 1 158 13 236 3 258 3 290 5 308 1 331 1 192 2 159 1 29 2 124 3 216 2 243 1 144 2 246 3 316 1 58 35 294 8 373 2 297 1 67 2 320 1 149 3 150 5 133 19 380 16 230 1 231 1 254 1 
232 2 91 1 209 1 156 1 158 5 290 1 258 2 331 2 192 1 124 1 310 1 243 1 144 1 58 8 316 2 294 4 18 1 67 4 320 1 149 1 150 1 133 5 380 3 231 2 
327 1 355 1 289 1 188 1 53 2 93 1 362 1 262 1 265 1 367 1 337 1 103 1 219 1 369 1 35 1 198 1 372 1 275 1 128 1 200 1 108 1 148 2 17 1 319 1 131 1 72 1 252 1 73 1 88 2 351 1 
327 1 355 1 289 1 51 1 188 1 53 3 93 1 362 2 291 1 262 1 265 1 367 1 337 1 311 1 103 1 219 1 369 1 198 1 372 1 275 1 128 1 108 1 148 2 17 1 319 1 131 1 72 1 73 1 88 3 351 1 
355 1 289 1 51 1 53 2 93 1 362 2 291 1 262 1 265 1 367 1 337 1 103 1 219 1 369 1 198 1 372 1 275 1 128 1 108 1 148 2 17 1 131 1 72 1 73 1 88 2 
286 1 355 1 53 1 93 1 265 2 337 2 311 1 142 1 219 1 370 1 247 1 166 1 198 2 372 1 274 1 319 1 21 1 206 1 72 1 322 1 88 1 351 1 73 2 
327 1 35 1 355 1 198 1 289 1 372 1 188 1 275 1 53 1 200 1 148 2 108 1 93 1 17 1 262 1 319 1 291 1 265 1 367 1 337 1 72 1 103 1 351 1 88 1 219 1 73 1 
19 1 
326 2 181 2 138 1 184 1 3 4 93 2 189 1 191 1 238 1 141 1 5 1 332 1 98 1 242 1 101 1 244 1 339 1 106 2 199 2 296 1 295 1 343 2 345 1 349 5 206 2 72 1 151 1 354 1 355 2 302 6 306 1 118 1 122 1 219 2 370 1 166 1 371 1 272 2 125 1 40 1 274 1 41 3 372 1 374 2 170 1 375 2 43 1 171 1 130 2 280 1 174 5 228 2 136 2 322 1 285 2 
354 1 371 1 181 1 302 2 40 1 296 1 295 1 41 1 3 2 306 1 118 1 189 1 238 1 141 1 5 1 98 1 122 1 161 1 349 3 174 3 101 1 151 1 
354 1 371 1 302 1 40 1 296 1 295 1 41 1 3 3 375 1 306 1 118 1 189 1 191 1 238 1 141 1 5 1 98 1 122 1 161 1 349 3 174 3 101 1 151 1 136 1 
354 1 181 1 302 2 3 3 118 1 306 1 189 1 238 1 191 1 5 1 141 1 98 1 122 1 161 1 101 1 371 1 295 1 296 1 40 1 41 1 375 1 174 3 349 3 228 1 151 1 136 1 
90 1 354 2 181 2 27 1 116 1 233 1 302 3 3 2 329 1 118 1 306 1 189 1 191 1 238 1 31 1 141 1 5 1 98 2 122 2 161 1 101 1 11 1 371 1 295 1 296 1 40 1 41 1 109 1 174 3 349 3 24 1 228 2 151 2 136 1 
354 1 326 2 181 2 302 4 3 4 118 1 306 1 189 1 191 1 238 1 141 1 5 1 332 1 98 1 122 1 242 1 101 1 339 1 371 1 106 2 272 2 199 2 296 1 295 1 40 1 41 2 374 2 375 2 171 1 43 1 343 2 345 1 130 1 280 1 174 4 349 4 228 2 151 1 136 2 285 1 
354 1 181 2 302 4 288 1 3 4 118 1 306 1 189 1 191 1 238 1 5 1 141 1 332 1 98 1 122 1 242 1 101 1 371 1 106 2 271 1 272 2 199 2 295 1 296 1 40 1 41 2 374 2 375 2 43 1 171 1 343 2 345 1 130 1 280 1 227 1 174 4 349 4 228 2 151 1 136 1 285 1 
354 1 181 2 302 4 288 1 3 4 118 1 306 1 189 1 191 1 238 1 5 1 141 1 332 1 98 1 122 1 242 1 101 1 371 1 106 2 271 1 272 2 199 2 295 1 296 1 40 1 41 2 374 2 375 2 43 1 171 1 343 2 345 1 130 1 280 1 227 1 174 4 349 4 228 2 151 1 136 1 285 1 
354 1 326 2 181 2 182 1 302 4 50 1 3 4 118 1 306 1 189 1 191 1 238 1 5 1 141 1 97 2 332 1 98 1 122 1 242 1 101 1 80 1 371 1 106 2 271 1 295 1 296 1 40 1 41 2 374 2 375 2 43 1 171 1 345 1 130 1 379 2 174 4 349 4 228 2 151 1 136 1 285 1 
354 1 181 3 288 1 302 5 3 5 118 1 306 1 189 1 191 1 238 1 5 1 141 1 31 1 332 1 98 1 122 1 242 1 101 1 371 1 106 2 271 1 272 2 199 2 295 1 296 1 40 1 41 2 374 2 171 1 43 1 375 3 343 2 345 1 130 1 280 1 227 1 174 4 349 4 228 3 151 1 136 1 285 1 
354 1 181 3 288 1 302 5 3 5 118 1 306 1 189 1 191 1 238 1 5 1 141 1 31 1 332 1 98 1 122 1 242 1 101 1 371 1 106 2 271 1 272 2 199 2 295 1 296 1 40 1 41 2 374 2 171 1 43 1 375 3 343 2 345 1 130 1 280 1 227 1 174 4 349 4 228 3 151 1 136 1 285 1 
354 1 326 2 181 2 302 4 50 1 3 4 118 1 306 1 189 1 191 1 238 1 141 1 5 1 97 2 332 1 98 1 122 1 242 1 101 1 339 1 371 1 106 2 296 1 295 1 40 1 41 2 374 2 375 2 171 1 43 1 345 1 130 1 379 2 174 4 349 4 228 2 151 1 136 1 285 1 
232 1 255 1 139 1 210 1 158 2 290 1 258 1 331 1 192 1 124 1 243 1 9 1 266 1 245 1 163 1 316 1 58 5 294 2 67 2 320 1 149 1 150 1 133 3 350 1 380 2 231 1 
152 1 232 2 91 1 115 1 139 1 158 2 210 4 236 3 290 1 259 1 331 2 193 1 29 1 216 2 266 1 9 2 163 11 143 1 246 3 340 1 316 2 58 14 294 1 273 1 373 2 225 1 67 4 150 2 133 6 350 11 86 1 380 8 231 2 
354 1 355 1 232 1 357 1 301 1 234 1 139 1 210 1 93 1 329 1 259 1 331 1 193 1 309 1 98 2 122 2 32 1 266 1 9 1 219 1 143 1 12 1 370 1 166 1 314 1 316 1 58 2 169 1 372 1 344 1 109 1 67 2 133 1 175 1 72 1 206 1 380 1 231 1 
49 2 232 3 91 4 139 3 290 3 93 3 329 1 331 3 192 1 291 1 193 1 98 3 100 2 243 1 9 3 143 1 196 2 58 19 294 4 344 1 109 1 67 6 149 1 150 3 23 2 205 2 350 7 206 1 72 2 354 1 355 3 357 2 208 1 210 7 158 8 258 1 259 1 29 2 309 2 122 3 124 1 216 2 266 1 219 3 163 7 370 2 314 1 166 2 316 3 372 2 169 2 82 1 373 2 320 1 85 1 133 10 175 2 380 9 231 3 
354 1 355 8 232 2 303 1 139 2 329 1 93 7 259 1 331 2 361 1 291 1 98 1 55 1 122 1 241 1 9 2 245 1 105 1 219 8 143 1 370 3 314 1 166 2 316 2 58 2 60 2 372 2 274 1 276 1 109 1 67 4 133 1 72 2 206 2 380 1 252 1 176 1 322 1 231 2 
354 1 232 1 27 1 155 1 139 1 158 1 210 1 329 1 290 1 331 1 193 1 29 1 98 1 122 1 216 1 9 1 163 1 316 1 58 3 294 1 39 1 373 1 109 1 67 2 150 1 133 2 350 1 380 1 231 1 
232 1 58 2 316 1 91 1 139 1 158 1 210 1 373 1 331 1 67 2 150 1 240 1 350 1 9 1 380 2 245 1 163 1 231 1 
232 1 58 2 316 1 294 1 139 1 158 1 210 1 54 1 290 1 331 1 67 2 29 1 133 2 350 1 9 1 245 1 163 1 231 1 
232 1 91 1 139 1 210 2 158 2 290 1 331 1 29 1 216 1 9 1 245 1 163 2 316 1 58 4 294 1 373 1 67 2 150 1 133 2 350 2 380 2 231 1 
232 1 58 2 316 1 91 1 303 1 139 1 158 1 210 1 373 1 331 1 67 2 150 1 240 1 350 1 9 1 380 2 163 1 231 1 
232 1 58 2 316 1 294 1 303 1 139 1 158 1 210 1 54 1 290 1 331 1 67 2 29 1 133 2 350 1 9 1 163 1 231 1 
232 1 91 1 303 1 139 1 210 2 158 2 290 1 331 1 29 1 216 1 9 1 163 2 316 1 58 4 294 1 373 1 67 2 150 1 133 2 350 2 380 2 231 1 
232 1 91 1 139 1 210 2 158 2 290 1 331 1 29 1 216 1 9 1 163 2 58 4 316 1 294 1 373 1 67 2 150 1 133 2 350 2 380 2 231 1 
355 1 232 1 357 1 139 1 93 1 259 1 331 1 309 1 98 1 122 1 100 1 266 1 9 1 219 1 143 1 370 1 166 1 58 2 316 1 169 1 372 1 67 2 133 1 175 1 380 1 72 1 206 1 231 1 
355 1 232 1 357 1 139 1 93 1 259 1 307 1 331 1 98 1 122 1 266 1 9 1 219 1 143 1 370 1 166 1 58 2 316 1 169 1 372 1 67 2 71 1 133 1 380 1 72 1 206 1 135 1 231 1 
232 1 91 1 139 1 210 2 158 2 290 1 331 1 193 1 29 1 216 1 9 1 163 2 316 1 58 4 294 1 373 1 67 2 150 1 133 2 350 2 380 2 231 1 
355 1 232 1 357 1 91 1 139 1 158 2 210 2 290 1 93 1 331 1 29 1 309 1 98 1 122 1 100 1 216 1 9 1 163 2 219 1 370 1 196 1 166 1 58 4 316 1 294 1 169 1 372 1 373 1 67 2 150 1 133 2 175 1 350 2 380 2 72 1 252 1 231 1 
354 1 232 1 91 1 27 1 155 1 139 1 158 1 4 1 210 1 290 1 329 1 331 1 29 1 193 1 98 1 122 1 216 1 9 1 163 1 316 1 58 3 373 1 109 1 67 2 150 1 133 1 350 1 380 2 231 1 
152 3 179 1 232 3 91 4 209 1 183 1 157 1 158 9 236 4 95 1 258 1 290 5 190 1 331 3 192 1 29 4 334 1 160 1 124 1 216 4 243 1 368 1 246 3 316 3 58 40 294 5 342 1 373 4 201 4 18 1 111 2 67 6 320 1 149 1 298 1 347 1 150 5 133 21 47 1 86 1 380 19 352 1 231 3 
152 3 179 1 232 4 91 3 209 2 183 1 157 1 158 8 236 4 95 1 258 1 290 4 190 1 331 4 192 1 29 3 334 1 160 1 124 1 216 4 243 1 368 1 246 3 316 4 58 38 294 5 342 1 373 4 201 4 18 1 111 2 67 8 320 1 149 1 298 1 347 1 150 5 133 19 47 1 86 1 380 19 352 1 231 4 
152 2 179 1 232 2 91 7 209 1 183 1 157 1 158 15 236 4 95 1 258 1 290 8 331 2 192 1 29 7 334 1 160 1 124 1 216 7 243 1 368 1 246 4 316 2 58 52 294 8 342 1 373 7 225 2 201 4 18 1 111 1 67 4 320 1 149 1 298 1 347 1 150 8 133 26 47 1 86 2 380 26 231 2 
177 1 152 1 179 1 232 2 91 3 183 1 158 6 236 2 95 2 290 3 331 2 29 3 334 1 216 3 368 1 246 1 316 2 58 19 294 3 373 3 201 2 18 1 111 1 67 4 150 3 133 10 86 1 380 9 352 1 231 2 
152 2 179 2 232 3 91 2 209 2 183 1 157 1 158 4 236 2 95 1 290 2 331 3 29 2 334 1 160 1 216 3 368 1 246 2 316 3 58 26 294 2 342 1 373 3 201 4 18 1 111 2 67 6 298 1 347 1 150 3 133 12 47 1 380 14 231 3 
300 1 299 1 325 1 363 1 287 1 145 1 283 1 83 1 224 1 44 1 
0 1 304 1 
140 1 299 1 325 1 364 1 145 1 62 1 83 1 224 1 44 1 
15 1 127 1 
120 1 346 1 92 1 
300 1 325 1 299 1 287 1 36 1 145 1 235 1 328 2 83 1 224 1 44 1 363 1 79 1 70 1 349 1 174 1 56 1 136 1 
300 1 325 1 299 1 287 1 36 1 145 1 235 1 328 2 83 1 224 1 44 1 363 1 79 1 70 1 349 1 174 1 56 1 136 1 
300 1 325 1 299 1 287 1 36 1 145 1 235 1 328 2 83 1 224 1 44 1 363 1 79 1 70 1 349 1 174 1 56 1 136 1 
346 1 15 1 127 1 
346 1 15 1 127 1 
120 1 92 1 
120 1 346 1 92 1 
28 1 341 1 
324 1 299 1 325 1 354 2 0 1 328 1 304 1 329 2 28 1 98 2 122 2 56 1 266 1 269 1 36 1 341 1 145 1 83 1 224 1 44 1 109 2 113 1 132 1 174 1 349 1 251 1 114 1 
354 2 355 2 232 1 139 1 305 1 93 2 259 1 331 1 193 1 98 2 55 1 122 2 9 1 217 1 219 2 143 1 220 1 370 1 57 1 166 1 316 1 58 2 60 2 372 1 276 1 377 1 67 2 133 1 72 1 380 1 231 1 
355 2 289 1 372 1 188 1 275 1 148 2 93 2 17 1 291 1 84 1 262 1 112 1 215 1 367 1 72 1 252 1 103 1 219 2 73 1 
355 1 289 1 188 1 372 1 275 1 147 1 148 2 93 1 17 1 291 1 262 1 215 1 367 1 72 1 103 1 219 1 73 1 
153 1 370 1 166 1 355 1 372 1 274 1 93 1 112 1 72 1 206 1 142 1 322 1 219 1 73 1 
355 1 289 1 372 1 188 1 275 1 148 2 93 1 17 1 291 1 84 1 262 1 112 1 215 1 367 1 72 1 103 1 219 1 73 1 
2 1 
191 1 77 1 130 1 255 1 359 1 285 1 136 1 
326 1 302 1 272 1 199 1 41 1 43 1 171 1 343 1 191 1 345 1 130 1 332 1 280 1 174 1 349 1 136 2 285 1 
326 12 1 1 186 6 52 2 93 3 290 2 191 2 332 4 194 1 244 1 59 2 64 1 343 6 65 2 248 1 345 4 348 1 204 2 250 2 150 2 349 5 23 2 72 3 206 1 252 1 253 3 75 2 355 3 357 3 302 5 359 1 77 1 260 2 29 2 365 2 123 2 216 2 34 1 219 3 165 2 370 10 166 3 40 2 372 4 41 3 170 2 373 2 43 4 171 4 129 6 130 8 174 5 285 9 136 8 
152 1 326 6 302 1 157 1 186 5 236 1 290 2 191 2 29 2 332 2 160 1 216 2 244 1 165 1 246 1 315 1 317 1 342 1 41 1 170 1 373 2 171 2 43 2 343 3 129 5 345 2 130 5 298 1 250 2 150 2 174 1 349 1 47 1 285 8 136 5 
90 1 354 1 288 1 233 1 116 1 27 1 290 1 329 1 192 1 332 1 98 1 122 1 124 1 165 1 11 1 171 1 43 1 109 1 345 1 130 2 149 1 250 2 150 2 174 1 349 1 151 1 230 1 285 2 
359 1 43 1 171 1 191 1 77 1 345 1 130 1 332 1 136 1 285 1 
165 1 326 10 186 5 373 2 343 5 290 2 129 5 130 5 29 2 250 2 150 2 23 1 216 2 136 5 285 5 
191 1 302 1 174 1 349 1 41 1 136 1 
355 4 184 1 1 1 302 4 93 4 78 1 332 2 244 2 34 2 219 4 370 1 166 1 270 1 61 1 125 1 372 1 41 2 274 1 170 2 171 2 43 1 345 2 130 2 349 3 174 3 72 1 206 2 285 2 322 1 
354 2 90 1 355 1 232 1 357 1 27 2 139 1 93 1 329 2 331 1 309 1 98 3 122 3 100 1 336 1 266 1 9 1 219 1 143 1 370 1 166 1 58 1 316 1 372 1 169 1 109 2 67 2 133 1 175 1 206 1 72 1 231 1 
326 4 186 2 170 1 43 1 171 1 258 1 343 2 191 1 129 2 345 1 130 1 332 1 250 1 244 1 285 2 136 3 
299 1 83 1 42 1 
299 1 83 1 42 1 
300 1 299 1 341 1 134 1 83 1 
299 1 83 1 42 1 
68 1 299 1 83 1 
68 1 299 1 83 1 
68 1 299 1 83 1 
299 1 83 1 
145 1 44 1 
152 1 232 1 158 2 236 1 258 1 290 1 331 1 192 1 124 1 243 1 246 1 58 7 316 1 294 2 18 1 67 2 320 1 298 1 149 1 150 1 133 4 380 3 231 1 
152 1 232 2 91 1 158 3 236 2 258 1 290 1 331 2 192 1 261 1 124 1 216 1 243 1 246 1 58 10 316 2 294 2 373 1 18 1 67 4 320 1 149 1 298 1 150 2 133 5 86 1 380 5 231 2 
152 1 232 3 91 1 209 1 157 1 158 4 236 1 258 1 290 3 331 3 192 1 261 1 29 2 160 1 124 1 216 2 243 1 246 1 58 18 316 3 294 3 342 1 373 2 18 1 67 6 320 1 149 1 298 1 150 3 133 10 47 1 380 8 231 3 
152 1 232 3 91 2 209 1 157 1 158 5 236 1 258 1 290 2 331 3 192 1 261 1 29 1 160 1 124 1 216 2 243 1 246 1 58 16 316 3 294 3 342 1 373 2 18 1 67 6 320 1 149 1 298 1 150 3 133 7 47 1 380 9 231 3 
152 1 232 1 158 2 236 1 258 1 290 1 331 1 192 1 124 1 243 1 246 1 58 7 316 1 294 2 18 1 67 2 320 1 298 1 149 1 150 1 133 4 380 3 231 1 
152 1 232 1 91 1 157 1 158 2 236 1 290 2 331 1 29 2 160 1 216 2 246 1 58 12 316 1 294 1 342 1 373 2 18 1 67 2 298 1 150 2 133 6 47 1 380 6 231 1 
152 1 232 4 91 2 209 2 157 1 158 5 236 1 258 1 290 2 331 4 192 1 261 1 29 1 160 1 124 1 216 2 243 1 246 1 58 17 316 4 294 3 342 1 373 2 18 1 67 8 320 1 149 1 298 1 150 3 133 8 47 1 380 9 231 4 
152 1 232 4 91 3 209 2 157 1 158 6 236 1 290 2 331 4 29 2 160 1 216 3 246 1 58 16 316 4 294 3 342 1 373 3 18 1 67 8 298 1 150 3 133 7 47 1 380 9 231 4 352 1 
58 7 91 3 294 3 158 6 290 1 192 1 320 1 149 3 124 3 150 1 133 4 243 2 380 3 
152 1 232 4 91 1 209 2 157 1 158 4 236 1 258 1 290 2 331 4 192 1 29 1 160 1 124 1 216 2 243 1 246 1 58 17 316 4 294 3 342 1 373 2 18 1 67 8 320 1 149 1 298 1 150 3 133 8 47 1 380 9 231 4 352 1 
232 2 58 7 316 2 91 1 209 1 294 2 158 3 258 1 290 1 331 2 192 1 67 4 320 1 149 1 124 1 150 1 133 4 380 3 243 1 231 2 
255 1 58 5 294 2 158 2 258 1 290 1 192 1 320 1 149 1 124 1 150 1 133 3 243 1 380 2 
232 1 316 1 58 4 91 1 294 1 158 2 373 1 290 1 331 1 67 2 29 1 261 1 150 1 133 2 216 1 380 2 231 1 
152 1 246 1 58 7 91 1 294 1 373 1 158 2 236 2 290 1 29 1 150 1 133 4 216 1 86 1 380 3 
232 2 91 4 209 2 158 9 236 2 258 1 290 3 331 2 192 1 29 2 124 2 216 2 243 1 246 2 13 1 58 22 340 1 316 2 294 5 373 2 225 1 67 4 320 1 149 2 150 3 133 12 86 1 380 10 231 2 
58 1 133 1 236 1 
246 1 58 1 380 1 
232 1 316 1 58 6 91 1 294 2 373 1 158 3 290 1 331 1 67 2 261 1 29 1 150 1 23 1 133 3 216 1 380 3 231 1 
152 1 232 1 91 1 157 1 158 2 236 1 290 2 331 1 29 2 160 1 216 2 246 1 58 12 316 1 294 1 342 1 373 2 18 1 67 2 298 1 150 2 133 6 47 1 380 6 231 1 
58 6 91 1 294 1 158 2 290 1 192 1 149 1 124 1 150 1 133 3 380 3 
13 1 232 1 58 3 316 1 91 1 209 1 294 1 158 2 331 1 67 2 320 1 149 1 124 1 133 2 380 1 243 1 231 1 
232 1 316 1 58 10 91 2 294 3 158 5 290 2 331 1 18 1 67 2 192 1 149 2 124 2 150 2 133 5 380 5 230 1 231 1 
232 1 316 1 58 2 91 1 373 1 158 1 18 1 331 1 67 2 150 1 380 2 231 1 
232 1 316 1 58 4 91 1 294 1 158 2 373 1 290 1 18 1 331 1 67 2 29 1 150 1 133 2 216 1 380 2 231 1 
13 1 232 3 58 3 316 3 91 1 209 1 294 1 158 2 18 1 331 3 67 6 149 1 124 1 133 2 380 1 352 1 231 3 
152 1 232 5 91 5 209 2 158 12 236 4 258 1 290 5 308 1 331 5 192 2 159 1 261 1 29 3 124 3 216 3 243 1 13 1 246 3 316 5 58 33 294 7 373 3 18 1 67 10 320 1 149 3 150 5 133 18 86 1 380 15 254 1 352 1 231 5 
354 1 98 1 122 1 146 1 295 1 266 1 87 1 
267 1 354 1 26 1 146 1 295 1 16 1 98 1 122 1 293 1 266 1 284 1 87 1 
370 1 166 1 355 1 255 1 372 1 274 1 72 1 206 1 322 1 93 1 219 1 
354 1 370 1 166 1 314 1 355 1 357 1 169 1 372 1 329 1 93 1 109 1 98 2 122 2 175 1 266 1 206 1 72 1 219 1 
354 2 355 1 357 2 52 1 93 1 329 1 98 2 122 2 101 1 266 1 219 1 34 1 370 3 314 1 166 2 371 1 372 1 169 1 65 1 109 2 175 1 72 1 151 1 
354 2 355 2 357 2 52 1 93 2 329 1 307 1 98 2 122 2 101 1 266 1 10 1 219 2 34 1 370 3 314 1 166 2 371 1 372 1 169 1 65 1 109 2 72 1 151 1 
75 1 355 3 357 1 302 1 52 1 93 3 191 1 7 1 10 1 219 3 34 1 370 4 166 1 40 1 372 1 65 1 173 1 174 2 349 2 72 1 206 1 136 1 253 1 
75 1 370 4 166 1 355 3 357 1 302 1 40 1 52 1 372 1 93 3 65 1 191 1 204 1 349 2 174 2 206 1 72 1 136 1 10 1 34 1 219 3 253 1 
361 1 355 1 372 1 72 1 93 1 219 1 
370 3 197 1 355 7 166 2 357 1 60 1 372 3 93 6 277 1 361 1 66 1 291 1 55 1 348 1 241 1 206 2 72 2 252 1 176 1 105 1 219 7 
49 1 232 2 139 2 93 1 329 1 290 1 331 2 192 1 193 1 98 2 100 1 9 2 243 1 57 1 196 1 58 5 294 2 109 1 67 4 149 1 150 1 350 1 72 1 252 1 354 1 355 1 357 1 210 1 158 2 258 1 309 1 122 2 124 1 266 1 219 1 163 1 370 1 314 1 166 1 316 2 372 1 169 1 320 1 133 3 175 1 380 2 231 2 
75 1 355 1 1 1 302 2 359 1 93 1 191 1 77 1 260 1 332 2 123 1 219 1 370 2 59 1 40 1 41 1 171 2 43 2 345 2 130 1 204 1 174 3 349 3 206 1 114 1 285 1 136 1 253 1 
75 1 370 2 355 2 166 1 357 1 372 2 64 1 93 2 361 1 348 1 72 1 252 1 219 2 
370 1 355 4 166 1 372 1 274 1 93 4 8 1 206 1 72 1 252 1 322 1 10 1 219 4 
370 1 197 1 355 2 166 1 357 1 14 1 372 2 82 1 93 2 66 1 121 1 72 1 34 1 219 2 
17 1 355 1 372 1 275 1 72 1 206 1 148 1 103 1 93 1 219 1 
370 1 291 1 166 1 355 2 55 1 372 1 72 1 93 2 252 1 217 1 219 2 
370 3 355 5 166 2 274 1 372 2 93 4 55 1 8 1 241 1 206 1 72 2 322 1 252 1 34 1 219 5 105 1 
370 3 355 5 166 2 274 1 372 2 93 4 318 1 55 1 8 1 206 1 72 2 322 1 252 1 34 1 219 5 105 1 
354 1 370 1 166 1 314 1 355 1 357 1 169 1 372 1 329 1 93 1 307 1 109 1 98 2 122 2 266 1 206 1 72 1 219 1 
370 1 197 1 355 1 166 1 357 1 372 2 93 1 277 1 66 1 348 1 72 1 34 1 219 1 
30 1 167 1 46 1 266 1 237 1 
371 1 167 2 40 1 237 1 191 1 110 1 30 2 5 1 6 1 335 1 46 2 349 2 174 2 101 1 266 1 151 1 114 1 136 1 312 1 
220 1 354 1 167 1 237 1 305 1 377 1 98 1 122 1 46 1 
335 1 312 1 237 1 
369 1 255 1 131 1 128 1 
369 1 319 1 131 1 53 1 128 1 88 1 351 1 
198 1 337 1 53 1 
369 1 53 3 128 1 200 1 172 1 319 1 226 1 131 1 48 2 102 1 351 1 88 3 
369 1 362 1 20 1 319 1 131 1 53 2 128 1 88 2 351 1 
17 1 319 1 37 1 289 1 321 1 53 1 128 1 200 1 148 1 88 1 351 1 
319 1 131 1 53 1 128 1 200 1 88 1 351 1 
369 1 319 1 131 2 53 1 200 1 88 1 351 1 
89 1 222 1 53 2 128 1 200 1 94 1 319 2 131 1 351 2 88 2 
369 1 74 1 338 1 53 3 200 1 128 2 378 1 362 2 319 1 131 1 321 1 351 1 88 3 
369 1 289 1 275 1 53 2 128 1 200 1 148 2 17 1 362 1 319 1 131 1 195 1 367 1 351 1 88 2 
369 1 74 1 38 1 53 4 200 1 128 2 362 2 319 2 20 1 131 1 321 1 351 2 88 4 
369 1 319 1 131 1 53 1 128 1 200 1 88 1 351 1 
369 2 74 1 53 4 128 3 96 1 172 1 362 2 226 1 319 1 131 2 321 1 48 1 88 4 351 1 
369 1 53 2 128 1 200 1 203 1 45 1 249 1 362 1 319 1 131 1 351 1 88 2 
369 1 53 3 128 1 200 1 76 1 172 2 226 1 319 1 131 1 48 2 351 1 88 3 
81 1 128 2 313 2 33 1 
319 1 53 1 200 1 330 1 88 1 351 1 
369 1 362 1 338 1 319 1 131 1 53 2 128 1 200 1 88 2 351 1 
360 1 
369 1 319 1 131 1 53 1 128 1 200 1 88 1 351 1 
369 1 338 1 53 3 200 1 128 1 362 1 319 1 131 1 48 1 351 1 88 3 
96 1 74 1 321 1 128 1 
131 1 128 1 

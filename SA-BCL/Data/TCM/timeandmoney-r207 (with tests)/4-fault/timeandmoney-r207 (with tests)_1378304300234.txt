#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 359 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 359 54 50 48 222 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 359 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 359 54 50 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 359 54 50 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 359 54 50 48 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 359 54 50 48 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 337 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 337 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
192 1 169 4 250 9 83 2 313 2 223 2 252 1 151 1 56 1 348 9 203 2 36 1 127 1 177 3 208 1 330 1 209 1 307 6 15 1 242 2 18 1 267 5 74 1 116 1 77 2 309 2 360 1 310 1 
192 1 169 4 250 9 83 2 313 2 223 2 252 1 151 1 56 1 348 9 203 2 36 1 127 1 177 3 208 1 330 1 209 1 307 6 15 1 242 2 18 1 267 5 74 1 116 1 77 2 360 1 309 2 310 1 
192 1 169 5 250 10 83 2 313 2 223 2 252 1 151 1 56 1 348 10 203 2 36 1 127 1 177 4 208 1 330 1 209 1 307 7 15 1 242 2 18 1 267 6 74 1 116 1 77 2 360 1 309 2 310 1 
192 1 169 3 250 7 83 2 313 2 223 2 252 1 151 1 56 1 348 7 203 2 36 1 127 1 177 2 208 1 330 1 307 4 15 1 242 2 18 1 267 4 74 1 116 1 77 2 360 1 309 1 310 1 
169 2 177 1 330 1 250 4 209 1 307 3 83 1 223 1 252 1 242 1 151 1 267 3 74 1 77 1 348 4 309 2 203 1 127 1 
25 1 330 1 250 2 83 1 223 1 313 1 252 1 242 1 356 1 18 1 267 1 74 1 77 1 348 2 201 1 310 1 
192 1 169 1 177 1 330 1 250 3 307 1 313 1 252 1 242 2 267 2 74 1 77 2 348 3 
169 4 192 1 250 9 83 1 313 1 223 1 252 1 227 1 151 1 56 1 228 1 348 9 203 1 127 1 177 3 330 1 307 7 209 1 242 2 267 5 74 1 77 2 360 1 309 2 
169 4 192 1 250 9 83 1 313 1 223 1 252 1 227 1 151 1 56 1 228 1 348 9 203 1 127 1 177 3 330 1 307 7 209 1 242 2 267 5 74 1 77 2 360 1 309 2 
337 1 351 1 176 1 
194 1 176 1 44 2 
161 2 162 2 89 2 344 2 63 2 64 1 102 1 6 2 
51 1 24 1 3 1 343 1 80 1 6 2 124 1 89 3 344 2 321 2 126 1 57 1 155 1 37 1 328 2 331 1 63 3 40 1 64 1 179 1 41 2 132 1 160 1 181 1 67 1 211 1 161 2 375 1 162 2 71 1 268 1 142 1 102 1 289 2 213 2 214 1 339 1 
161 1 17 1 162 1 89 1 344 1 245 1 63 1 102 1 6 1 60 1 
63 1 351 1 182 1 174 1 70 1 263 1 162 1 89 1 254 1 176 1 60 1 301 1 258 1 373 1 
63 1 351 1 6 1 182 1 263 1 161 1 162 1 344 1 89 1 254 1 176 1 60 1 301 2 373 2 258 1 
27 1 312 1 297 1 301 1 373 1 
55 1 27 1 351 1 312 1 176 1 301 2 367 1 373 2 
312 1 301 1 373 1 
326 1 27 1 63 1 6 1 17 1 161 1 162 1 344 1 89 1 245 1 102 1 60 1 301 1 373 1 
176 1 
55 1 27 1 351 1 312 1 176 1 99 1 301 2 373 2 
105 1 27 2 351 1 312 2 30 1 136 2 107 2 239 1 55 1 21 1 345 2 76 1 378 1 324 1 272 1 176 1 325 1 301 5 373 5 
337 1 64 1 
63 2 64 2 6 1 161 1 162 2 89 2 344 1 246 1 199 1 
119 1 112 1 13 1 
24 1 328 1 63 1 40 1 64 1 80 1 41 1 160 1 181 1 173 1 71 1 89 1 289 1 142 1 214 1 339 1 
161 3 162 3 205 1 89 3 344 3 63 3 64 1 6 1 
161 1 162 1 89 1 344 1 245 1 63 1 60 1 
161 1 162 1 89 1 344 1 63 1 246 1 6 1 199 1 60 1 
24 1 3 1 343 1 80 1 106 1 6 2 89 4 344 3 321 2 254 1 126 1 57 1 154 1 60 1 301 1 258 1 373 1 37 1 205 1 328 1 331 1 40 1 63 4 64 1 132 1 41 1 160 1 374 1 181 1 211 1 182 1 263 1 161 3 375 1 71 1 162 3 268 1 246 1 142 1 102 1 289 1 213 1 339 1 214 1 
70 1 161 1 162 2 205 1 89 2 344 1 63 2 64 1 354 1 
205 2 63 3 6 1 374 1 182 1 263 1 161 3 162 3 344 3 89 3 254 1 246 1 176 1 167 1 301 1 60 1 154 1 373 1 258 1 
205 1 63 2 119 1 6 1 13 1 161 2 162 2 344 2 89 2 246 1 
24 1 328 1 63 1 40 1 64 1 80 1 41 1 160 1 181 1 71 1 89 1 289 1 142 1 214 1 339 1 
170 1 24 1 328 1 63 1 40 1 64 1 80 1 41 1 160 1 181 1 89 1 289 1 142 1 214 1 248 1 
51 2 145 1 3 1 119 2 366 1 226 1 322 1 346 1 321 2 9 1 57 1 126 2 37 1 156 1 331 1 112 2 66 1 42 1 13 2 211 1 114 1 268 1 23 1 213 4 
263 1 161 1 162 1 89 1 344 1 63 1 60 1 282 1 
24 1 205 1 328 1 40 1 63 2 80 1 41 1 13 1 160 1 374 1 181 1 161 1 162 1 71 1 344 1 89 2 142 1 289 1 339 1 214 1 
205 2 79 1 63 4 64 1 374 1 6 1 161 4 162 4 344 4 89 4 246 1 152 1 380 1 60 1 
161 2 162 2 89 2 344 2 245 1 63 2 60 1 282 1 
361 1 381 1 
361 1 381 1 
94 1 90 1 
94 1 90 1 
94 1 90 1 
361 1 140 1 381 1 
361 1 140 1 381 1 
361 1 95 1 381 1 
361 2 244 1 305 1 94 1 90 1 381 2 
361 1 140 1 381 1 
361 1 191 1 381 1 
361 1 191 1 381 1 
361 1 191 1 381 1 
361 2 327 1 2 2 221 2 305 1 28 2 7 1 224 1 355 1 16 1 319 2 101 1 269 2 176 1 110 1 92 3 301 2 381 2 373 2 
361 1 2 1 52 1 221 1 364 1 33 1 319 1 344 2 89 2 323 1 92 1 300 1 301 1 372 1 373 1 63 2 64 1 95 1 355 1 161 2 162 2 358 1 269 1 381 1 
83 1 223 1 203 1 
25 1 83 1 223 1 
25 1 376 1 117 1 121 1 223 3 203 2 
25 1 376 1 117 1 29 1 223 2 203 1 
25 1 376 1 117 2 223 2 203 1 
293 1 52 1 105 2 27 4 145 1 364 1 312 1 365 2 194 1 276 1 366 1 278 1 107 1 55 1 345 1 9 1 324 3 176 2 325 1 301 5 373 5 131 2 351 1 133 1 136 1 237 2 44 3 20 1 358 1 72 1 23 1 379 1 
105 6 295 5 27 7 145 3 312 6 81 1 365 6 194 3 366 3 297 5 278 3 107 2 225 1 55 1 345 2 9 3 324 8 176 5 325 1 301 9 373 9 131 6 351 1 133 2 136 2 183 1 44 9 19 1 358 4 20 2 23 3 377 1 378 1 216 1 379 1 
293 1 27 2 105 2 145 1 365 2 194 2 276 1 366 1 107 1 278 1 345 1 9 1 324 3 176 3 301 3 373 3 351 1 131 2 133 1 136 1 237 1 44 4 20 1 358 1 23 1 378 1 
293 1 27 3 105 4 145 2 365 4 194 3 276 1 366 2 107 1 278 2 345 1 9 2 324 5 176 4 301 4 373 4 351 1 131 4 133 1 136 1 237 2 183 1 44 7 20 1 358 2 23 2 377 1 378 1 216 1 
304 1 337 1 80 1 
274 1 80 1 
45 1 
80 1 142 1 
45 1 304 2 80 2 142 1 148 1 181 1 137 1 
80 1 142 1 181 1 
253 1 80 1 
303 2 156 5 51 8 294 1 145 3 296 2 332 1 66 4 65 1 135 2 9 3 270 1 215 1 126 6 164 2 213 14 229 1 190 1 
303 2 156 7 51 8 294 3 145 3 296 2 332 1 66 4 65 1 135 2 9 3 270 1 215 1 126 6 164 2 213 14 229 1 190 1 
51 8 294 1 145 3 296 2 9 3 126 6 229 1 303 2 156 5 332 1 65 1 66 4 333 1 135 2 270 1 213 14 164 2 215 1 190 1 
51 21 118 1 294 7 145 6 3 1 296 3 342 1 4 1 366 3 278 3 317 1 318 1 370 3 321 2 9 6 126 19 229 2 303 2 156 14 331 1 332 1 306 1 65 1 66 7 236 1 135 3 211 1 268 1 23 3 270 2 215 1 164 3 213 40 165 4 190 1 
51 9 294 2 145 3 3 2 296 2 342 1 321 4 9 3 126 7 91 1 229 1 303 2 156 7 157 1 331 2 66 5 65 1 211 2 135 2 268 2 270 1 215 1 213 16 164 2 190 1 
24 1 25 1 146 1 249 1 250 2 82 1 83 1 121 1 313 1 223 2 252 1 371 1 348 2 203 1 128 1 350 1 328 1 178 1 330 1 158 1 307 1 41 1 160 1 238 1 242 1 267 1 74 1 289 1 77 1 103 1 
78 1 24 1 25 1 146 1 249 1 250 3 82 1 83 1 121 1 313 1 223 2 348 3 203 1 128 1 350 1 328 1 178 1 330 1 307 2 41 1 97 1 160 1 238 1 242 1 267 1 74 1 289 1 77 1 189 1 103 1 
78 1 24 1 25 1 249 1 250 2 82 1 121 1 83 1 313 1 223 2 348 2 203 1 350 1 328 1 178 1 330 1 307 2 41 1 160 1 238 1 267 1 74 1 289 1 189 1 103 1 
24 1 249 2 250 1 80 1 53 1 313 2 31 1 32 1 348 1 328 1 180 1 41 1 97 1 160 1 238 2 242 1 287 1 288 1 289 1 142 1 214 1 77 1 103 2 
78 1 24 1 25 1 146 1 249 1 250 1 82 1 83 1 121 1 313 1 223 2 252 1 348 1 203 1 128 1 350 1 328 1 178 1 158 1 41 1 160 1 238 1 242 1 289 1 77 1 103 1 
43 1 
105 2 341 1 53 1 107 1 8 1 55 1 345 1 254 1 198 1 301 3 60 1 258 1 63 1 160 1 70 1 263 1 162 1 20 1 264 1 359 1 266 1 75 2 214 2 271 1 24 1 312 2 80 1 122 1 123 1 174 1 125 1 89 1 324 2 325 1 373 3 328 2 233 1 39 1 180 1 41 2 136 1 182 1 243 1 187 1 142 1 289 2 
312 2 122 1 174 1 149 1 55 1 89 1 254 1 301 3 60 1 373 3 258 1 233 1 63 1 182 1 99 1 70 1 263 1 162 1 264 1 266 1 187 1 75 2 
312 1 122 1 174 1 55 1 89 1 254 1 34 1 176 1 301 3 60 1 373 3 258 1 233 1 63 1 351 1 182 1 99 1 70 1 263 1 162 1 264 1 266 1 187 1 75 3 
219 1 312 2 122 1 174 1 149 1 55 1 89 1 254 1 34 1 176 1 301 3 60 1 373 3 258 1 233 1 63 1 351 1 182 1 99 1 70 1 263 1 162 1 264 1 266 1 187 1 75 3 
219 2 105 1 312 3 222 1 54 1 122 1 107 1 174 1 149 2 8 1 55 1 279 1 89 1 345 1 254 1 324 1 198 1 325 1 301 3 60 1 373 3 258 1 233 1 63 1 136 1 182 1 99 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 2 48 1 271 1 50 1 
105 1 122 1 107 1 174 1 8 1 89 1 345 1 254 1 324 1 198 1 325 1 301 2 60 1 373 2 258 1 233 1 63 1 136 1 182 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 2 271 1 
105 1 54 1 122 1 107 1 174 1 8 1 89 1 279 1 254 1 345 1 324 1 198 1 325 1 301 2 60 1 373 2 258 1 233 1 63 1 182 1 136 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 2 271 1 50 1 
105 1 54 1 122 1 107 1 174 1 8 1 89 1 279 1 254 1 345 1 324 1 198 1 325 1 301 2 60 1 373 2 258 1 233 1 63 1 182 1 136 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 2 271 1 50 1 
217 2 1 1 219 2 105 1 312 4 54 1 122 1 86 2 107 1 174 1 149 2 55 2 8 2 89 1 254 1 345 1 34 2 324 1 176 1 325 1 301 4 60 1 373 4 258 1 233 1 63 1 351 1 182 1 136 1 44 2 70 1 263 1 162 1 163 1 264 1 265 1 359 1 266 1 187 1 75 4 271 2 
219 1 105 1 312 1 54 1 122 1 107 1 174 1 149 1 8 1 279 1 89 1 345 1 254 1 34 1 324 1 198 1 325 1 301 2 60 1 373 2 258 1 233 1 63 1 136 1 182 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 3 48 1 271 1 50 1 
219 1 105 1 312 1 54 1 122 1 107 1 174 1 149 1 8 1 279 1 89 1 345 1 254 1 34 1 324 1 198 1 325 1 301 2 60 1 373 2 258 1 233 1 63 1 136 1 182 1 70 1 263 1 162 1 243 1 264 1 359 1 266 1 187 1 75 3 48 1 271 1 50 1 
105 1 107 1 149 2 8 2 55 2 254 1 345 1 60 1 301 4 258 1 206 1 63 1 351 1 263 1 70 1 162 1 163 1 264 1 266 1 359 1 75 4 271 2 217 2 219 2 312 4 122 1 86 2 174 1 89 1 34 2 324 1 176 1 325 1 373 4 233 1 182 1 136 1 44 2 187 1 
303 1 37 1 51 3 156 2 145 1 3 1 296 1 331 1 64 2 66 2 65 1 135 1 211 1 226 1 337 1 268 1 321 2 9 1 126 2 213 5 57 1 164 1 190 1 
51 8 294 1 3 2 145 2 119 4 343 1 4 1 366 1 278 2 317 1 124 1 370 3 321 4 9 1 126 6 57 2 349 1 37 1 156 2 331 2 64 1 66 1 259 1 112 11 13 11 211 2 240 1 336 1 268 2 286 1 23 2 213 14 165 3 
51 1 24 1 3 1 119 1 80 1 343 1 173 1 124 1 195 1 89 2 344 1 321 2 57 1 126 1 37 1 328 1 205 1 40 1 331 1 63 2 64 1 259 1 41 1 160 1 374 1 14 1 181 1 211 1 161 1 71 1 162 1 268 1 188 1 142 1 289 1 339 1 214 1 213 2 
51 14 294 1 3 3 145 5 296 1 343 1 150 1 344 1 9 5 57 3 60 1 303 2 10 2 156 7 205 1 63 3 64 3 65 1 259 1 112 6 66 6 160 2 13 6 211 3 161 1 162 1 71 2 268 3 22 2 23 2 215 1 164 2 214 1 213 27 24 2 79 1 119 6 80 2 366 2 278 2 124 1 89 3 321 6 280 2 126 13 37 3 93 2 328 1 331 3 40 2 41 1 132 2 374 1 181 2 135 2 289 1 142 2 339 2 190 1 292 1 
51 1 78 1 24 2 3 2 193 1 80 3 343 1 53 1 124 1 298 1 226 1 89 1 344 1 371 1 321 4 57 2 126 1 109 1 155 2 37 2 205 1 328 8 63 1 331 2 180 1 235 1 234 1 41 7 160 2 211 2 262 1 100 1 161 1 162 1 268 2 289 8 142 2 214 2 213 2 
51 1 3 1 145 1 119 1 6 1 366 1 278 1 344 1 89 1 321 2 9 1 57 1 126 2 37 1 156 1 331 1 63 1 66 1 112 1 259 1 13 1 211 1 241 1 161 1 162 1 268 1 246 1 23 1 213 3 
37 1 156 1 51 2 294 1 3 1 145 1 331 1 119 1 112 1 13 1 211 1 226 1 114 1 268 1 321 2 23 1 213 2 57 1 
37 1 156 1 3 1 331 1 119 1 66 1 112 1 13 1 211 1 366 1 226 1 268 1 321 2 322 1 9 1 213 2 57 1 126 2 
51 2 294 1 145 1 3 1 119 2 366 1 278 1 226 1 321 2 9 1 57 1 126 2 37 1 156 2 331 1 112 2 66 1 13 2 211 1 268 1 23 1 213 4 
37 1 156 1 51 2 294 1 193 1 3 1 145 1 331 1 119 1 112 1 13 1 211 1 114 1 268 1 321 2 23 1 213 2 57 1 
37 1 156 1 193 1 3 1 331 1 119 1 66 1 112 1 13 1 211 1 366 1 268 1 321 2 322 1 9 1 213 2 57 1 126 2 
51 2 294 1 145 1 3 1 193 1 119 2 366 1 278 1 321 2 9 1 57 1 126 2 37 1 156 2 331 1 112 2 66 1 13 2 211 1 268 1 23 1 213 4 
51 2 294 1 145 1 3 1 119 2 366 1 278 1 321 2 9 1 57 1 126 2 37 1 156 2 331 1 112 2 66 1 13 2 211 1 268 1 23 1 213 4 
51 1 24 1 3 1 80 1 343 1 124 1 89 1 321 2 57 1 126 1 37 1 328 1 40 1 63 1 331 1 64 1 132 1 41 1 160 1 181 1 211 1 71 1 268 1 142 1 289 1 213 2 339 1 214 1 
51 1 24 1 170 1 3 1 80 1 343 1 124 1 89 1 321 2 57 1 126 1 37 1 328 1 40 1 63 1 331 1 64 1 41 1 160 1 181 1 211 1 268 1 142 1 289 1 213 2 214 1 143 1 248 1 
51 2 294 1 145 1 3 1 119 2 366 1 278 1 321 2 9 1 57 1 126 2 37 1 156 2 331 1 259 1 112 2 66 1 13 2 211 1 268 1 23 1 213 4 
51 2 24 1 294 1 145 1 3 1 119 2 80 1 366 1 278 1 89 1 371 1 321 2 9 1 126 2 57 1 37 1 156 2 328 1 40 1 63 1 331 1 66 1 112 2 132 1 41 1 13 2 160 1 181 1 211 1 71 1 268 1 22 1 23 1 289 1 142 1 213 4 339 1 
51 2 294 1 3 1 145 1 119 1 6 1 366 1 278 1 344 1 89 1 321 2 9 1 126 1 57 1 37 1 156 1 331 1 63 1 259 1 112 1 13 1 211 1 261 1 161 1 162 1 268 1 246 1 23 1 213 3 
51 9 294 3 3 2 145 3 120 1 4 1 366 3 278 3 317 1 370 1 321 4 9 3 126 10 91 1 200 1 202 2 256 1 156 6 130 1 331 2 66 3 134 1 68 1 211 2 69 1 268 2 23 3 47 2 213 19 165 2 
51 14 294 2 26 1 3 3 145 3 342 2 120 1 366 2 278 3 317 2 88 1 370 2 321 6 9 2 175 1 126 12 91 1 200 2 202 4 257 1 230 1 156 4 130 1 331 3 96 1 66 2 68 2 211 3 69 1 268 3 23 3 47 1 213 26 165 2 
51 20 26 1 294 4 3 3 145 5 296 1 342 1 120 1 4 1 366 4 278 4 317 3 88 1 370 3 321 6 9 5 175 1 126 21 91 1 200 2 202 4 230 1 257 1 303 1 156 8 329 1 130 1 331 3 65 1 96 1 66 4 134 1 68 1 135 1 211 3 69 1 268 3 23 4 47 1 164 1 213 41 165 4 190 1 
51 20 26 1 294 3 3 4 145 5 296 1 342 2 120 1 4 1 366 3 278 4 317 3 88 1 370 3 321 8 9 4 175 1 126 18 91 1 200 2 202 4 230 1 257 1 303 1 156 7 329 1 130 1 331 4 65 1 96 1 66 4 134 1 68 1 135 1 211 4 69 1 268 4 23 4 47 1 164 1 213 38 165 4 190 1 
51 27 26 1 294 7 3 2 145 8 296 1 342 1 120 1 4 2 366 7 278 7 317 2 88 1 370 4 321 4 9 8 175 1 126 25 91 1 200 1 202 4 230 1 257 1 303 1 156 14 130 1 331 2 65 1 96 1 66 7 68 1 135 1 211 2 69 1 240 2 268 2 23 7 47 1 164 1 213 52 165 4 190 1 
361 1 16 1 319 1 2 1 221 1 101 1 305 1 269 1 316 1 381 1 
95 1 323 1 
369 1 361 1 319 1 2 1 221 1 171 1 269 1 283 1 381 1 
361 1 327 1 2 1 221 1 305 1 28 1 224 1 355 1 16 1 319 1 101 1 269 1 176 1 110 1 92 2 301 1 373 1 381 1 
361 1 327 1 2 1 221 1 305 1 28 1 224 1 355 1 16 1 319 1 101 1 269 1 176 1 110 1 92 2 301 1 373 1 381 1 
361 1 327 1 2 1 221 1 305 1 28 1 224 1 355 1 16 1 319 1 101 1 269 1 176 1 110 1 92 2 301 1 373 1 381 1 
244 1 140 1 113 1 
244 1 140 1 113 1 
191 1 197 1 
191 1 244 1 197 1 
33 1 372 1 
361 1 27 1 2 1 52 1 221 1 28 1 364 1 251 1 33 1 319 1 89 2 344 2 323 1 92 1 300 1 301 1 372 1 373 1 327 1 63 2 64 1 95 1 161 2 162 2 358 1 269 1 381 1 
140 1 113 1 
191 1 244 1 197 1 
51 1 24 1 340 1 3 1 80 1 343 1 5 1 124 1 89 2 321 2 57 1 126 1 155 2 37 1 328 2 63 2 331 1 235 1 259 1 41 2 160 1 211 1 334 1 100 1 162 2 268 1 212 1 142 1 289 2 213 2 104 1 
24 1 78 1 350 1 25 1 328 2 178 1 146 1 147 1 83 1 121 1 41 2 260 1 223 2 160 1 238 1 196 1 371 1 289 2 203 1 
0 1 78 1 350 1 24 1 25 1 328 1 178 1 146 1 83 1 121 1 41 1 260 1 223 2 160 1 238 1 289 1 203 1 
24 1 328 1 147 1 80 1 180 1 53 1 41 1 353 1 160 1 238 1 287 1 142 1 289 1 214 1 
78 1 350 1 24 1 25 1 328 1 178 1 146 1 147 1 83 1 121 1 41 1 260 1 223 2 160 1 238 1 196 1 289 1 203 1 
368 1 
337 1 105 1 351 1 76 1 30 1 324 1 176 1 
243 1 105 1 345 1 324 1 198 1 136 1 107 1 325 1 
105 8 145 2 194 6 107 4 55 3 345 4 253 2 9 2 153 2 301 5 61 2 10 2 304 2 351 2 111 2 160 4 308 2 20 2 115 1 23 2 76 1 214 1 274 3 24 3 363 1 312 5 80 10 30 1 365 6 277 1 366 2 87 1 278 2 125 1 371 1 281 2 324 9 176 8 325 4 373 5 328 3 131 6 41 3 181 3 136 4 182 2 98 2 137 1 44 12 138 2 186 1 142 3 289 3 291 2 
105 5 26 1 145 2 312 1 365 5 194 3 366 2 107 2 278 2 317 1 55 1 370 1 125 1 345 2 9 2 175 1 324 8 35 1 176 5 325 2 301 1 61 1 373 1 257 1 230 1 131 5 351 2 96 1 136 2 44 6 138 2 20 1 185 1 23 2 165 1 
105 2 145 2 6 1 107 1 89 1 279 1 344 1 345 1 9 1 324 2 325 1 60 1 301 1 61 1 373 1 303 1 326 1 63 1 135 1 136 1 138 2 17 1 161 1 162 1 245 1 102 1 164 1 215 1 
105 1 345 1 351 1 76 1 30 1 324 1 176 1 136 1 107 1 325 1 
10 1 105 5 145 2 131 5 365 5 194 5 366 2 278 2 44 10 138 2 23 2 9 2 324 5 176 5 61 1 
55 1 351 1 312 1 176 1 301 1 373 1 
24 1 105 2 341 1 312 4 80 1 53 1 107 2 87 1 123 1 55 2 125 2 345 2 324 2 325 1 301 3 231 1 373 3 328 4 180 1 41 4 160 1 136 2 184 1 20 2 186 2 378 1 142 1 289 4 214 2 
24 1 3 1 343 1 80 1 6 2 89 3 344 2 321 2 126 1 57 1 37 1 328 1 331 1 63 3 40 1 64 1 41 1 132 1 160 1 181 1 211 1 161 2 375 1 162 2 71 1 268 1 289 1 102 1 142 1 213 1 214 1 339 1 
105 2 296 1 131 2 351 2 365 2 194 2 136 1 107 1 44 4 20 1 125 1 345 1 324 1 176 4 325 1 
302 1 319 1 221 1 
302 1 319 1 221 1 
232 1 33 1 319 1 221 1 101 1 
302 1 319 1 221 1 
319 1 221 1 12 1 
319 1 221 1 12 1 
319 1 221 1 12 1 
319 1 221 1 
361 1 381 1 
51 9 294 3 3 2 145 3 296 1 342 1 321 4 9 3 126 8 303 2 156 7 331 2 65 1 66 4 135 2 211 2 268 2 215 1 164 2 213 17 190 1 
303 1 156 2 51 3 145 1 296 1 65 1 66 2 135 1 337 1 9 1 126 2 164 1 213 5 190 1 
156 2 51 2 294 1 3 1 145 1 331 1 66 1 210 1 366 1 211 1 278 1 268 1 321 2 23 1 9 1 126 2 213 4 
51 3 156 2 294 1 145 1 66 1 4 1 366 1 278 1 317 1 370 1 23 1 9 1 126 4 213 7 165 2 
51 13 294 2 145 5 3 1 296 1 342 1 4 1 366 2 278 2 370 2 321 2 9 5 126 12 349 1 303 2 156 7 331 1 65 1 66 5 135 2 211 1 240 1 268 1 23 2 215 1 164 2 213 25 165 2 190 1 
213 1 126 1 165 1 
51 1 370 1 213 1 
10 1 51 3 156 3 294 1 3 1 145 1 331 1 66 2 210 1 211 1 366 1 278 1 268 1 321 2 23 1 9 1 126 3 213 6 
51 6 294 1 26 1 3 1 145 2 366 2 278 2 317 1 370 1 321 2 9 2 175 1 126 6 91 1 257 1 230 1 156 2 331 1 66 1 96 1 211 1 268 1 23 2 213 12 165 1 
303 1 51 3 156 2 294 1 145 1 66 1 135 1 9 1 213 6 126 3 164 1 
51 1 156 2 294 1 3 1 331 1 342 1 66 1 65 1 135 1 211 1 268 1 321 2 164 1 126 2 213 3 347 1 190 1 
303 1 156 5 51 5 294 2 3 1 145 2 331 1 66 3 211 1 135 2 268 1 321 2 9 2 215 1 164 2 213 10 126 5 91 1 
51 2 156 1 294 1 3 1 145 1 331 1 211 1 268 1 321 2 23 1 213 2 91 1 
156 2 51 2 294 1 3 1 145 1 331 1 66 1 366 1 211 1 278 1 268 1 321 2 23 1 9 1 126 2 213 4 91 1 
156 2 51 1 294 1 3 3 331 3 342 1 66 1 134 1 211 3 135 1 268 3 321 6 126 2 213 3 164 1 91 1 347 1 
51 16 118 1 294 4 3 4 145 5 296 1 342 1 366 2 278 2 317 1 370 3 321 8 9 5 126 15 91 1 303 2 156 9 331 4 306 1 65 1 66 5 210 1 236 1 134 1 135 2 211 4 268 4 23 2 215 1 164 2 213 31 165 3 190 1 
51 8 294 1 145 3 3 1 296 1 317 1 370 1 321 2 9 3 126 7 91 1 257 1 303 2 156 5 331 1 65 1 66 4 211 1 135 2 268 1 215 1 213 15 164 2 165 1 190 1 
51 10 294 2 3 2 145 4 296 1 4 1 278 1 317 1 370 1 321 4 9 3 126 8 91 1 257 1 303 2 156 6 331 2 66 4 65 1 210 1 135 2 211 2 268 2 23 1 215 1 164 2 213 18 165 2 190 1 
51 13 294 2 26 1 3 3 145 5 296 1 342 1 366 2 278 2 317 1 370 1 321 6 9 5 175 1 126 13 91 1 257 1 230 1 303 2 156 7 331 3 65 1 96 1 66 5 210 1 135 2 211 3 268 3 23 2 215 1 164 2 213 26 165 1 190 1 
51 14 294 4 26 1 3 3 145 5 296 1 342 1 366 1 278 2 317 1 370 1 321 6 9 4 175 1 126 10 91 1 257 1 230 1 303 2 156 9 331 3 65 1 66 5 96 1 210 1 135 2 211 3 268 3 23 2 215 1 164 2 213 24 165 1 190 1 
51 8 294 1 145 3 3 1 296 1 317 1 370 1 321 2 9 3 126 7 91 1 257 1 303 2 156 5 331 1 65 1 66 4 211 1 135 2 268 1 215 1 213 15 164 2 165 1 190 1 
51 6 294 1 26 1 3 1 145 2 366 2 278 2 317 1 370 1 321 2 9 2 175 1 126 6 91 1 257 1 230 1 156 2 331 1 66 1 96 1 211 1 268 1 23 2 213 12 165 1 
51 14 294 2 26 1 3 4 145 5 296 1 342 2 366 1 278 2 317 1 370 1 321 8 9 4 175 1 126 11 91 1 257 1 230 1 303 2 156 7 331 4 65 1 96 1 66 5 210 1 135 2 211 4 268 4 23 2 215 1 164 2 213 25 165 1 190 1 
51 9 294 3 26 1 3 4 145 3 342 2 366 2 278 3 317 1 370 1 321 8 9 2 175 1 126 7 91 1 257 1 230 1 156 6 331 4 96 1 66 3 134 1 211 4 268 4 23 3 213 16 165 1 
303 1 156 6 51 3 294 3 145 1 65 1 66 3 135 3 9 1 126 4 213 7 164 3 190 2 
51 14 294 2 26 1 3 4 145 5 296 1 342 2 366 1 278 2 317 1 370 1 321 8 9 4 175 1 126 11 91 1 257 1 230 1 303 2 156 7 331 4 65 1 96 1 66 5 134 1 135 2 211 4 268 4 23 2 215 1 164 2 213 25 165 1 190 1 
70 1 162 1 89 1 63 1 64 1 290 1 354 1 
129 1 63 1 64 1 354 1 70 1 162 1 89 1 290 1 59 1 273 1 168 1 204 1 
337 1 24 1 328 1 80 1 180 1 142 1 53 1 289 1 41 1 214 1 160 1 
24 1 205 1 328 1 40 1 63 2 64 1 80 1 41 1 160 1 181 1 161 1 162 1 344 1 89 2 142 1 289 1 214 1 339 1 
24 1 80 3 89 2 344 1 253 1 281 1 60 1 258 1 328 1 205 1 63 2 40 1 64 1 41 1 160 1 181 2 263 1 161 2 162 2 186 1 289 1 142 2 339 1 
24 1 80 3 85 1 89 2 344 1 253 1 281 1 60 1 258 1 328 2 205 1 63 2 40 1 64 1 41 2 160 1 181 2 263 1 161 2 162 2 186 1 289 2 142 2 248 1 
274 1 24 1 312 1 80 4 85 1 253 1 281 1 255 1 176 1 301 2 373 2 304 1 328 3 351 1 41 3 160 1 181 1 182 1 186 1 289 3 142 1 214 1 311 1 
274 1 304 1 24 1 328 3 351 1 312 1 80 4 41 3 160 1 181 1 308 1 85 1 182 1 186 1 253 1 142 1 281 1 289 3 214 1 176 1 301 2 373 2 
24 1 328 1 289 1 41 1 160 1 262 1 
78 1 24 2 328 7 80 3 352 1 235 1 234 1 41 6 160 3 181 1 137 1 262 1 298 1 371 1 73 1 289 7 142 2 214 2 109 1 166 1 155 1 
51 7 294 1 3 2 145 3 296 1 344 1 9 3 57 2 60 1 303 2 156 5 205 1 63 2 64 3 259 1 65 1 66 4 160 1 211 2 161 1 71 1 162 1 268 2 22 1 212 1 215 1 164 2 213 13 24 1 79 1 80 1 89 2 371 1 321 4 126 6 37 2 93 1 328 1 331 2 40 1 132 1 41 1 181 1 135 2 289 1 142 1 339 1 190 1 
274 1 105 1 27 1 312 2 80 2 30 1 107 2 87 1 55 1 345 2 324 1 176 1 153 1 325 2 301 3 373 3 304 1 328 1 351 1 111 1 41 1 308 1 136 2 182 1 98 1 76 1 289 1 214 1 
304 1 24 1 328 2 363 1 80 2 41 2 160 2 181 1 137 1 262 1 371 1 289 2 142 1 
24 1 328 4 180 1 80 1 53 1 41 4 160 1 85 1 320 1 371 1 289 4 142 1 214 1 
24 1 328 2 220 1 80 1 352 1 41 2 160 2 181 1 357 1 186 1 73 1 289 2 141 1 142 1 
24 1 350 1 25 1 328 1 289 1 83 1 41 1 214 1 223 1 160 1 
78 1 24 1 328 2 80 1 235 1 41 2 160 1 334 1 371 1 289 2 142 1 
24 2 328 5 180 1 80 3 53 1 234 1 235 1 41 4 160 2 298 1 320 1 186 1 371 1 289 5 142 2 214 1 
218 1 24 2 328 5 180 1 80 3 53 1 235 1 41 4 160 2 298 1 320 1 186 1 371 1 289 5 142 2 214 1 
24 1 205 1 328 1 40 1 63 2 64 1 80 1 41 1 160 1 181 1 161 1 162 1 344 1 89 2 142 1 289 1 214 1 248 1 
24 1 328 1 80 1 352 1 41 1 160 2 181 1 137 1 186 1 73 1 289 1 142 1 166 1 
340 1 62 1 63 1 5 1 315 1 335 1 162 1 89 1 104 1 
159 1 84 1 315 1 
62 1 64 1 11 1 315 1 335 1 
27 1 62 2 351 1 64 1 159 1 172 1 11 2 84 1 182 1 315 1 335 2 263 1 254 1 176 1 60 1 301 2 154 1 258 1 373 2 
337 1 267 1 330 1 74 1 
242 1 267 1 330 1 250 1 74 1 77 1 348 1 
250 1 313 1 103 1 
362 1 144 1 250 3 330 1 314 1 252 1 242 1 267 1 74 1 77 1 348 3 310 2 
242 1 267 1 330 1 250 2 74 1 307 1 77 1 348 2 309 1 
169 1 250 1 83 1 223 1 252 1 242 1 267 1 77 1 348 1 203 1 127 1 
242 1 267 1 330 1 250 1 77 1 348 1 252 1 
242 1 330 2 250 1 74 1 77 1 348 1 252 1 
275 1 330 1 250 2 252 1 242 2 46 1 267 1 77 2 348 2 247 1 
169 1 177 1 330 1 250 3 307 2 252 1 242 1 267 2 56 1 74 1 77 1 348 3 360 1 
25 1 330 1 250 2 307 1 121 1 83 1 223 2 252 1 242 1 267 1 74 1 77 1 108 1 348 2 203 1 
169 1 177 1 330 1 250 4 209 1 307 2 252 1 242 2 267 2 74 1 77 2 348 4 309 1 
242 1 267 1 330 1 250 1 74 1 77 1 348 1 252 1 
169 1 177 1 144 1 330 2 250 4 307 2 314 1 242 1 267 3 74 2 338 1 77 1 348 4 310 1 
207 1 330 1 250 2 307 1 252 1 242 1 267 1 74 1 228 1 77 1 299 1 348 2 
144 1 250 3 330 1 314 2 252 1 242 1 284 1 267 1 74 1 77 1 348 3 310 2 
267 2 285 2 139 1 58 1 
242 1 38 1 250 1 77 1 348 1 252 1 
242 1 267 1 330 1 250 2 74 1 307 1 77 1 348 2 360 1 252 1 
49 1 
242 1 267 1 330 1 250 1 74 1 77 1 348 1 252 1 
250 3 330 1 307 1 252 1 242 1 267 1 74 1 77 1 348 3 360 1 310 1 
169 1 177 1 267 1 338 1 
267 1 330 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) (14,221) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (14,221) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) (14,221) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (120,123,161,169) (120,123,161,169) (120,123,161,169) 144 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
90 1 204 1 323 1 
303 2 167 1 323 1 
239 2 267 2 158 2 124 1 252 2 147 2 140 2 309 1 
259 1 89 2 136 1 262 1 46 1 140 2 189 1 267 3 147 2 56 1 154 1 305 2 100 1 102 1 61 2 308 1 309 1 157 1 239 3 64 1 158 2 20 2 201 1 314 2 242 1 243 1 248 1 285 1 170 1 250 1 124 1 252 2 75 1 327 1 216 1 84 1 183 1 
239 1 267 1 158 1 197 1 252 1 288 1 147 1 23 1 140 1 309 1 
239 1 2 1 45 1 135 1 90 1 5 1 323 1 267 1 173 1 252 1 288 1 289 1 37 1 59 1 
239 1 158 1 2 2 45 1 135 1 90 1 5 2 140 1 323 1 267 1 173 1 252 1 147 1 288 1 59 1 
11 1 2 1 5 1 29 1 122 1 
2 2 44 1 90 1 48 1 5 2 29 1 323 1 122 1 
2 1 5 1 122 1 
239 1 197 1 158 1 2 1 23 1 29 1 5 1 140 1 267 1 252 1 288 1 147 1 15 1 309 1 
323 1 
2 2 90 1 48 1 50 1 5 2 29 1 323 1 122 1 
2 5 222 1 69 2 317 1 90 1 48 1 244 1 29 2 5 5 51 2 323 1 228 1 122 2 143 1 325 1 191 1 101 1 214 2 280 1 
124 1 204 1 
239 2 158 1 140 1 267 2 252 2 124 2 147 1 275 1 41 1 
202 1 78 1 131 1 
239 1 281 1 64 1 20 1 314 1 201 1 262 1 46 1 243 1 248 1 285 1 267 1 124 1 56 1 305 1 327 1 
239 2 64 1 20 1 201 1 110 1 314 1 46 1 262 1 243 1 318 1 248 1 140 1 285 1 267 2 252 1 147 1 56 1 305 1 78 1 327 1 
239 3 158 1 267 3 124 1 252 3 147 3 318 1 140 3 
239 1 267 1 252 1 288 1 147 1 23 1 140 1 
239 1 267 1 158 1 252 1 288 1 147 1 275 1 41 1 140 1 
259 1 2 1 89 2 45 1 136 1 46 1 262 1 135 1 140 3 5 1 189 1 267 4 147 3 56 1 275 1 154 1 100 1 305 1 59 1 102 1 61 1 309 1 157 1 239 4 64 1 158 2 20 1 201 1 110 1 314 1 243 1 318 1 248 1 285 1 170 1 173 1 250 1 124 1 252 3 288 1 76 1 176 1 327 1 183 1 
239 2 267 2 124 1 252 2 147 1 97 1 289 1 318 1 140 1 
239 3 158 1 2 1 110 1 45 1 135 1 318 2 5 1 140 3 323 1 267 3 173 1 252 3 288 1 147 3 275 1 176 1 13 1 59 1 
239 2 158 1 202 1 318 1 140 2 267 2 252 2 147 2 275 1 78 1 
239 1 64 1 20 1 314 1 201 1 262 1 46 1 243 1 248 1 285 1 267 1 124 1 56 1 305 1 327 1 
239 1 64 1 20 1 314 1 201 1 262 1 46 1 243 1 248 1 285 1 267 1 124 1 125 1 57 1 305 1 
219 1 89 2 136 1 264 1 47 1 52 1 189 1 141 1 58 1 154 1 276 1 102 1 103 1 61 4 157 1 202 2 242 2 319 1 119 1 170 2 35 1 78 2 131 2 183 1 
239 1 173 1 267 1 252 1 288 1 147 1 140 1 286 1 
239 5 158 1 110 1 318 2 140 4 267 5 252 5 124 1 147 4 174 1 97 1 289 1 275 1 63 1 
239 2 267 2 252 2 288 1 147 2 23 1 140 2 286 1 
108 1 24 1 
108 1 24 1 
270 1 71 1 
270 1 71 1 
270 1 71 1 
108 1 55 1 24 1 
108 1 24 1 91 1 
270 1 108 2 274 1 24 2 81 1 71 1 
108 1 55 1 24 1 
108 1 55 1 24 1 
108 1 24 1 168 1 
108 1 24 1 168 1 
108 1 24 1 168 1 
42 1 108 2 240 2 2 2 160 2 163 1 24 2 5 2 323 1 190 1 287 2 93 1 302 2 34 1 96 3 77 1 81 1 307 1 85 2 
42 1 2 1 87 1 220 1 140 2 5 1 226 1 91 1 267 2 147 2 302 1 96 1 239 2 240 1 108 1 312 1 160 1 24 1 249 1 210 1 124 1 252 2 85 1 182 1 
266 1 95 1 68 1 
95 1 68 1 187 1 
266 2 175 1 68 3 38 1 40 1 187 1 
266 1 175 1 68 2 38 1 187 1 188 1 
266 1 175 2 68 2 38 1 187 1 
2 5 134 1 48 1 90 1 4 2 140 1 51 1 5 5 52 1 141 1 143 1 267 1 147 1 194 1 149 2 303 3 235 1 15 1 62 2 280 2 309 1 239 1 158 1 197 1 283 1 23 1 69 1 317 3 246 1 206 1 167 1 29 4 119 1 122 1 323 2 252 1 288 1 35 1 214 1 182 1 
2 5 134 1 138 1 48 1 299 2 90 1 4 2 51 1 5 5 140 1 52 1 141 1 143 1 267 1 11 2 194 1 147 1 303 3 235 1 15 1 62 2 280 2 309 1 239 1 197 1 158 1 283 1 23 1 69 1 111 1 317 3 167 1 29 4 119 1 122 3 323 2 252 1 288 1 35 1 214 1 182 1 
2 3 134 1 90 1 4 2 140 1 51 1 5 3 52 1 141 1 267 1 147 1 149 1 303 3 15 1 235 1 280 2 62 2 309 1 239 1 158 1 197 1 283 1 23 1 69 1 317 3 246 1 206 1 167 1 29 2 119 1 323 2 325 1 252 1 288 1 35 1 214 1 182 1 
2 4 134 1 90 1 4 4 51 1 5 4 52 2 141 2 149 2 303 7 235 1 62 4 280 4 282 1 284 1 283 2 162 1 69 1 317 5 246 1 206 1 167 3 29 3 119 2 323 4 325 1 35 2 214 1 182 2 
204 1 285 1 257 1 
292 1 285 1 
118 1 
201 1 285 1 
64 1 260 1 201 1 114 1 285 3 257 2 
64 1 201 1 285 1 
94 1 285 1 
241 1 242 4 264 2 119 1 52 1 170 3 121 1 32 1 208 1 253 2 153 1 304 1 276 3 179 1 255 1 61 7 215 1 
241 1 242 4 264 2 119 1 52 1 170 3 121 1 32 1 208 1 253 2 153 1 304 1 276 3 179 1 255 1 61 7 215 1 
241 1 242 4 264 2 119 1 52 1 170 3 121 1 32 1 208 1 231 1 253 2 153 1 304 1 276 3 179 1 255 1 61 7 215 1 
133 4 89 2 136 1 264 5 52 4 189 1 141 3 301 3 268 1 145 1 153 2 304 2 276 10 102 1 61 31 157 1 159 1 241 2 283 3 242 16 112 1 164 1 119 4 121 1 170 15 32 1 208 2 253 3 35 3 179 1 255 1 329 1 215 5 258 1 
89 4 136 2 264 3 52 1 189 2 304 1 153 1 276 4 102 2 61 9 157 2 159 1 241 1 242 5 320 1 119 1 170 4 121 1 32 1 208 1 253 2 254 1 179 1 215 1 
123 1 144 1 148 1 169 1 120 1 
123 1 148 1 221 1 169 1 120 1 
123 1 148 1 161 1 14 1 
123 1 148 1 221 1 169 1 120 1 
123 1 144 1 148 1 169 1 120 1 
225 1 
2 5 3 1 262 1 90 1 5 5 9 1 10 1 267 1 269 1 272 2 280 2 106 1 18 2 20 2 109 2 201 1 207 1 285 1 122 6 288 1 127 2 289 1 290 2 36 1 37 1 291 1 213 4 214 1 218 1 45 1 297 2 135 1 48 3 51 1 143 1 303 2 151 1 305 2 59 1 235 1 239 1 66 2 314 2 69 1 317 2 243 1 245 1 248 2 167 2 323 2 322 1 173 1 252 1 82 1 328 1 
2 3 3 1 45 1 135 1 297 1 48 1 50 1 5 3 267 1 59 1 106 1 239 1 322 1 122 2 173 1 252 1 288 1 289 1 37 1 213 2 328 1 218 1 
2 3 3 1 45 1 135 1 90 1 48 1 50 1 5 3 267 1 59 1 106 1 239 1 122 1 322 1 323 1 173 1 252 1 288 1 289 1 127 1 37 1 213 3 328 1 218 1 
2 3 3 1 45 1 135 1 297 1 48 1 90 1 50 1 5 3 267 1 59 1 106 1 239 1 109 1 322 1 122 2 323 1 173 1 252 1 288 1 289 1 127 1 37 1 213 3 328 1 218 1 
2 5 184 1 3 1 90 5 5 5 7 1 267 1 98 1 272 2 280 1 106 1 18 2 109 4 122 7 288 1 289 1 127 4 290 2 37 1 213 6 214 1 218 1 45 1 43 1 297 4 135 1 48 3 50 1 300 1 51 1 143 1 151 1 59 1 239 1 66 2 69 1 317 1 245 1 167 2 322 1 323 5 173 1 252 1 328 1 
2 4 3 1 90 1 5 4 267 1 269 1 272 2 280 1 106 1 18 2 109 2 122 4 288 1 289 1 127 2 290 2 37 1 213 4 214 1 218 1 45 1 135 1 297 2 48 2 51 1 143 1 151 1 303 2 59 1 239 1 66 2 69 1 317 1 245 1 167 2 322 1 323 2 173 1 252 1 328 1 
2 4 3 1 45 1 43 1 297 2 135 1 90 1 48 2 300 1 51 1 5 4 143 1 267 1 272 2 98 1 151 1 59 1 280 1 106 1 239 1 18 2 109 2 66 2 69 1 317 1 245 1 167 2 323 1 122 4 322 1 173 1 252 1 288 1 127 2 289 1 290 2 37 1 213 4 328 1 214 1 218 1 
2 4 3 1 45 1 43 1 297 2 135 1 90 1 48 2 300 1 51 1 5 4 143 1 267 1 272 2 98 1 151 1 59 1 280 1 106 1 239 1 18 2 109 2 66 2 69 1 317 1 245 1 167 2 323 1 122 4 322 1 173 1 252 1 288 1 127 2 289 1 290 2 37 1 213 4 328 1 214 1 218 1 
0 2 2 4 3 1 45 1 297 2 135 1 90 1 48 2 300 1 51 1 5 4 143 1 267 1 272 2 303 2 59 1 280 1 106 1 239 1 18 2 198 2 109 2 69 1 317 1 245 1 323 1 122 4 322 1 173 1 252 1 288 1 127 2 289 1 326 1 37 1 213 4 328 1 130 1 256 1 214 1 218 1 
2 4 184 1 3 1 43 1 45 1 135 1 297 3 90 1 48 2 300 1 51 1 5 4 143 1 267 1 272 2 98 1 151 1 59 1 280 1 106 1 239 1 18 2 109 3 66 2 69 1 317 1 245 1 167 2 323 1 322 1 122 5 173 1 252 1 288 1 289 1 127 3 290 2 37 1 213 5 328 1 214 1 218 1 
2 4 184 1 3 1 43 1 45 1 135 1 297 3 90 1 48 2 300 1 51 1 5 4 143 1 267 1 272 2 98 1 151 1 59 1 280 1 106 1 239 1 18 2 109 3 66 2 69 1 317 1 245 1 167 2 323 1 322 1 122 5 173 1 252 1 288 1 289 1 127 3 290 2 37 1 213 5 328 1 214 1 218 1 
0 2 2 4 3 1 90 1 5 4 267 1 269 1 272 2 280 1 106 1 18 2 198 2 109 2 122 4 288 1 289 1 127 2 37 1 213 4 214 1 218 1 45 1 135 1 297 2 48 2 51 1 143 1 303 2 59 1 239 1 69 1 317 1 245 1 322 1 323 1 173 1 252 1 326 1 328 1 
157 1 89 2 202 1 242 3 136 1 264 2 204 1 319 1 119 1 52 1 170 3 121 1 189 1 32 1 124 2 253 1 153 1 304 1 276 2 154 1 78 1 179 1 102 1 131 1 61 6 183 1 
259 1 133 3 89 4 136 2 264 1 6 1 52 2 189 2 141 2 301 3 152 1 276 2 154 2 102 2 61 14 308 1 238 1 157 2 283 2 202 4 242 8 112 1 119 1 170 6 124 1 35 1 78 11 129 1 131 11 329 1 215 1 181 1 183 1 
259 1 89 2 46 1 262 1 136 1 140 1 189 1 267 2 147 1 56 1 305 1 154 1 102 1 61 2 308 1 239 2 157 1 64 1 281 1 20 1 201 1 314 1 110 1 202 1 316 1 242 1 25 1 243 1 248 1 318 1 205 1 285 1 170 1 124 1 252 1 327 1 181 1 183 1 
259 1 89 6 262 2 264 4 189 3 267 3 271 1 100 2 276 8 102 3 279 2 20 3 110 1 201 2 283 2 202 7 119 3 285 2 121 1 32 1 124 2 33 2 35 2 131 7 215 4 295 2 136 3 46 2 140 1 52 3 141 2 147 1 56 2 153 1 304 1 305 3 154 3 236 1 61 20 308 1 157 3 239 3 64 2 313 2 314 3 242 10 243 2 248 1 318 1 166 1 170 10 324 1 252 1 253 1 78 7 327 2 179 1 181 1 183 3 
259 1 88 1 89 4 262 2 136 2 140 1 189 2 10 1 267 1 147 1 305 8 154 2 277 1 102 2 61 2 308 1 237 1 239 1 157 2 20 8 67 1 314 7 201 2 242 1 243 2 247 1 318 1 248 2 116 1 319 1 285 3 207 1 321 1 170 1 171 1 324 1 252 1 75 2 183 2 
89 2 136 1 264 1 140 1 52 1 189 1 141 1 267 1 147 1 275 1 276 1 154 1 102 1 61 3 157 1 239 1 158 1 283 1 202 1 242 1 119 1 170 2 252 1 126 1 35 1 78 1 131 1 181 1 183 1 
157 1 89 2 202 1 136 1 242 2 319 1 52 1 189 1 141 1 276 1 154 1 78 1 102 1 103 1 131 1 61 2 215 1 183 1 
157 1 89 2 202 1 136 1 264 1 47 1 319 1 119 1 170 2 189 1 35 1 276 1 154 1 78 1 102 1 131 1 61 2 183 1 
89 2 136 1 264 1 52 1 141 1 189 1 154 1 276 2 102 1 61 4 157 1 283 1 202 2 242 2 319 1 119 1 170 2 35 1 78 2 131 2 215 1 183 1 
157 1 89 2 202 1 136 1 242 2 52 1 321 1 189 1 141 1 276 1 154 1 78 1 102 1 103 1 131 1 61 2 215 1 183 1 
157 1 89 2 202 1 136 1 264 1 47 1 119 1 321 1 170 2 189 1 35 1 276 1 154 1 78 1 102 1 131 1 61 2 183 1 
89 2 136 1 264 1 52 1 141 1 189 1 154 1 276 2 102 1 61 4 157 1 283 1 202 2 242 2 119 1 321 1 170 2 35 1 78 2 131 2 215 1 183 1 
89 2 136 1 264 1 52 1 141 1 189 1 154 1 276 2 102 1 61 4 157 1 283 1 202 2 242 2 119 1 170 2 35 1 78 2 131 2 215 1 183 1 
259 1 89 2 46 1 262 1 136 1 189 1 267 1 56 1 100 1 305 1 154 1 102 1 61 2 308 1 239 1 157 1 64 1 20 1 201 1 314 1 242 1 243 1 248 1 285 1 170 1 124 1 327 1 183 1 
259 1 89 2 46 1 262 1 136 1 189 1 267 1 57 1 305 1 154 1 102 1 61 2 308 1 239 1 157 1 64 1 20 1 201 1 314 1 242 1 243 1 248 1 117 1 285 1 170 1 124 1 125 1 183 1 
89 2 136 1 264 1 52 1 141 1 189 1 154 1 276 2 102 1 61 4 157 1 283 1 202 2 242 2 119 1 170 2 35 1 78 2 131 2 215 1 181 1 183 1 
89 2 46 1 262 1 136 1 264 1 52 1 141 1 189 1 267 1 56 1 276 2 100 1 305 1 154 1 102 1 61 4 239 1 157 1 64 1 20 1 313 1 314 1 201 1 283 1 202 2 242 2 243 1 119 1 285 1 170 2 171 1 35 1 78 2 327 1 131 2 215 1 183 1 
89 2 136 1 140 1 52 1 189 1 141 1 267 1 147 1 275 1 276 1 154 1 102 1 61 3 16 1 157 1 239 1 158 1 283 1 202 1 242 2 119 1 170 1 252 1 35 1 78 1 131 1 215 1 181 1 183 1 
133 2 89 4 136 2 264 3 185 1 52 3 189 2 141 3 229 1 301 1 146 1 276 6 234 1 102 2 278 1 61 19 157 2 200 1 283 3 242 9 113 2 112 1 165 1 119 3 170 10 254 1 35 3 329 1 215 3 331 2 
133 2 89 2 136 1 185 1 52 1 265 1 189 1 141 1 301 2 234 1 102 1 278 2 61 16 157 1 200 1 283 1 242 8 112 2 113 1 26 1 165 2 119 1 170 8 35 1 254 1 331 4 
133 4 89 4 136 2 264 1 185 1 52 2 265 1 189 2 141 2 301 3 146 1 276 3 234 1 102 2 278 2 61 23 157 2 200 1 283 2 242 11 113 1 112 3 26 1 72 1 165 1 119 2 170 12 254 1 35 2 329 1 215 2 331 4 
133 4 89 4 136 2 264 2 185 1 52 2 265 1 189 2 141 2 301 3 146 1 276 4 234 1 102 2 278 2 61 23 157 2 200 1 283 2 242 11 113 1 112 3 26 1 72 1 165 1 119 2 170 12 254 1 35 2 329 1 215 2 331 4 
133 4 89 2 136 1 264 8 185 1 52 8 265 1 189 1 141 5 301 4 152 2 153 3 304 3 276 13 234 1 102 1 278 1 61 51 157 1 200 1 283 5 242 27 113 1 112 2 26 1 165 1 119 8 121 3 170 24 32 3 253 3 254 1 35 5 179 3 329 2 215 5 331 4 
190 1 240 1 108 1 93 1 302 1 160 1 24 1 81 1 73 1 85 1 
220 1 91 1 
240 1 108 1 302 1 160 1 261 1 212 1 24 1 217 1 85 1 
42 1 2 1 108 1 240 1 160 1 24 1 5 1 323 1 190 1 287 1 93 1 302 1 34 1 96 2 77 1 81 1 307 1 85 1 
42 1 2 1 108 1 240 1 160 1 24 1 5 1 323 1 190 1 287 1 93 1 302 1 34 1 96 2 77 1 81 1 307 1 85 1 
42 1 2 1 108 1 240 1 160 1 24 1 5 1 323 1 190 1 287 1 93 1 302 1 34 1 96 2 77 1 81 1 307 1 85 1 
55 1 274 1 178 1 
55 1 274 1 178 1 
263 1 168 1 
274 1 263 1 168 1 
87 1 226 1 
2 1 87 1 220 1 5 1 140 2 226 1 91 1 267 2 302 1 147 2 96 1 307 1 239 2 240 1 108 1 312 1 160 1 24 1 29 1 249 1 287 1 210 1 124 1 252 2 293 1 85 1 182 1 
55 1 178 1 
274 1 263 1 168 1 
1 1 259 1 88 1 89 2 262 1 136 1 8 1 189 1 267 2 305 2 154 1 102 1 61 2 308 1 237 1 239 2 157 1 20 2 65 1 201 1 314 2 242 1 243 1 285 1 31 1 170 1 252 2 75 2 330 1 181 1 183 1 
310 1 107 1 20 2 199 1 314 2 68 2 262 1 243 1 187 1 142 1 171 1 266 1 324 1 95 1 193 1 177 1 305 2 40 1 79 1 
311 1 310 1 20 1 199 1 314 1 68 2 262 1 243 1 187 1 266 1 324 1 95 1 193 1 177 1 305 1 40 1 79 1 
20 1 201 1 314 1 262 1 243 1 248 1 285 1 207 1 142 1 53 1 10 1 232 1 177 1 305 1 
310 1 107 1 20 1 199 1 314 1 68 2 262 1 243 1 187 1 142 1 266 1 324 1 95 1 193 1 177 1 305 1 40 1 79 1 
230 1 
222 1 317 1 90 1 204 1 280 1 323 1 228 1 
2 1 48 1 90 1 51 1 5 1 143 1 151 1 303 1 280 1 66 1 69 1 317 1 167 1 323 2 122 1 290 1 214 1 
2 5 260 1 262 4 90 2 4 6 5 5 92 2 94 2 280 8 105 2 20 3 22 1 201 3 283 2 28 2 285 10 119 2 122 5 33 2 35 2 36 1 39 1 292 3 214 4 222 1 45 2 48 3 223 1 224 2 51 4 52 2 227 1 228 1 141 2 143 4 150 1 303 12 305 3 235 2 62 6 64 3 314 3 315 2 69 4 70 2 317 9 243 3 248 1 167 6 171 1 323 8 172 2 83 2 257 2 
133 1 90 1 4 2 140 1 51 1 265 1 143 1 267 1 301 1 147 1 303 2 15 1 235 1 62 2 280 2 309 1 239 1 158 1 197 1 23 1 69 1 112 1 70 1 317 2 28 1 167 1 323 2 252 1 288 1 211 1 36 1 214 1 
2 1 43 1 298 1 51 1 5 1 140 1 52 2 143 1 267 1 147 1 153 1 304 1 15 1 280 2 309 1 239 1 197 1 158 1 23 1 69 1 70 2 317 2 28 1 119 1 252 1 288 1 179 1 214 1 
222 1 69 1 90 1 317 1 51 1 228 1 323 1 143 1 214 1 280 1 
283 2 70 2 317 5 28 1 4 5 167 5 52 2 119 2 141 2 323 5 33 1 303 10 35 2 280 5 62 5 
2 1 90 1 48 1 5 1 323 1 122 1 
2 3 262 1 48 2 51 2 5 3 143 1 10 1 150 2 305 4 235 2 156 1 280 2 20 4 201 1 314 4 69 2 243 1 317 2 248 2 285 1 207 1 122 4 325 1 36 2 128 1 291 1 39 1 82 1 214 2 
259 1 89 2 136 1 262 1 46 1 140 2 189 1 267 3 147 2 56 1 305 1 100 1 154 1 102 1 61 1 309 1 157 1 239 3 158 2 64 1 20 1 314 1 201 1 243 1 248 1 285 1 170 1 250 1 124 1 252 2 327 1 183 1 
69 1 317 1 90 2 4 2 167 2 51 1 323 4 143 1 253 1 303 4 36 1 235 1 214 1 62 2 280 2 
19 1 240 1 85 1 
240 1 27 1 186 1 226 1 85 1 
19 1 240 1 85 1 
19 1 240 1 85 1 
240 1 74 1 85 1 
240 1 74 1 85 1 
240 1 74 1 85 1 
240 1 85 1 
108 1 24 1 
157 2 159 1 89 4 242 4 136 2 264 2 119 1 52 1 170 4 121 1 189 2 32 1 253 1 304 1 153 1 276 3 179 1 102 2 61 8 215 1 
242 3 264 2 204 1 52 1 119 1 170 3 121 1 32 1 253 1 304 1 153 1 276 2 179 1 61 6 
157 1 89 2 283 1 136 1 242 2 264 1 119 1 52 1 170 2 189 1 141 1 35 1 276 2 102 1 60 1 61 4 215 1 
133 2 283 1 242 3 264 1 112 1 119 1 52 1 170 4 141 1 301 1 35 1 276 2 329 1 61 7 215 1 
133 2 89 4 136 2 264 5 52 3 141 2 189 2 301 2 152 1 153 2 304 2 276 9 102 2 61 23 238 1 157 2 159 2 283 2 242 11 119 3 121 1 170 12 32 1 253 1 35 2 179 1 329 1 294 1 215 4 
133 1 61 1 170 1 
301 1 242 1 61 1 
157 1 89 2 283 1 136 1 242 3 264 2 52 1 119 1 170 3 189 1 141 1 33 1 35 1 276 3 102 1 60 1 61 6 215 1 
157 1 133 1 89 2 242 1 136 1 112 1 265 1 170 1 189 1 301 1 254 1 102 1 61 2 
242 3 264 1 52 1 119 1 170 3 304 1 153 1 276 2 179 1 61 6 215 1 
157 1 159 1 89 2 242 1 136 1 264 1 121 1 170 2 189 1 32 1 153 1 304 1 276 2 102 1 294 1 61 3 215 1 
157 1 89 2 136 1 242 5 298 1 264 3 52 2 119 2 170 5 189 1 254 1 304 2 153 2 276 5 102 1 179 1 61 10 215 2 
157 1 89 2 136 1 242 2 52 1 189 1 141 1 254 1 276 1 102 1 61 2 215 1 
157 1 89 2 283 1 136 1 242 2 264 1 119 1 52 1 170 2 189 1 141 1 35 1 254 1 276 2 102 1 61 4 215 1 
157 3 159 1 89 6 136 3 242 1 264 1 170 2 189 3 146 1 254 1 304 1 153 1 276 2 102 3 294 1 61 3 215 1 
133 4 89 10 136 5 264 7 52 5 189 5 141 3 268 1 301 3 146 1 153 3 304 3 276 12 102 5 60 1 61 34 157 5 159 2 283 3 242 16 112 1 164 1 119 5 121 1 170 18 32 1 253 1 254 1 35 3 179 2 329 1 294 1 215 5 258 1 
133 1 89 4 296 1 136 2 298 1 264 5 52 5 265 1 189 2 141 2 301 1 153 2 304 2 276 9 196 1 102 2 61 24 104 1 157 2 159 1 283 2 242 14 112 1 119 4 121 1 170 10 32 1 253 1 254 1 35 1 179 2 132 1 215 4 
133 2 296 1 89 6 136 3 264 3 52 4 265 1 189 3 141 3 301 1 153 1 304 1 196 1 276 5 102 3 61 20 60 1 104 1 157 3 159 1 283 3 242 12 112 1 119 2 121 1 170 8 32 1 253 1 254 1 35 1 179 1 329 1 132 1 215 2 
133 1 89 4 136 2 298 1 264 3 52 3 265 1 189 2 301 1 304 2 153 2 276 4 102 2 61 15 60 1 157 2 242 8 112 1 119 3 170 7 121 1 32 1 253 1 254 1 179 2 215 1 
133 1 89 4 136 2 298 1 264 4 52 3 265 1 189 2 301 1 304 2 153 2 276 7 102 2 61 15 60 1 157 2 242 8 112 1 119 3 170 7 121 1 32 1 253 1 254 1 179 2 215 3 
133 1 89 4 296 1 136 2 298 1 264 5 52 5 265 1 189 2 141 2 301 1 153 2 304 2 276 9 196 1 102 2 61 24 104 1 157 2 159 1 283 2 242 14 112 1 119 4 121 1 170 10 32 1 253 1 254 1 35 1 179 2 132 1 215 4 
157 1 133 1 89 2 242 1 136 1 112 1 265 1 170 1 189 1 301 1 254 1 102 1 61 2 
157 2 133 1 89 4 242 1 136 2 112 1 265 1 170 1 189 2 301 1 254 1 102 2 60 1 61 2 
157 2 133 1 89 4 242 1 136 2 112 1 265 1 170 1 189 2 301 1 146 1 254 1 102 2 61 2 
242 3 264 3 119 1 52 1 170 4 121 2 32 1 304 3 153 3 276 6 179 1 61 7 215 3 
157 2 133 1 89 4 242 1 136 2 112 1 265 1 170 1 189 2 301 1 146 1 254 1 102 2 61 2 
239 1 267 1 124 1 252 1 12 1 97 1 289 1 
239 1 137 1 115 1 267 1 124 1 252 1 12 1 97 1 99 1 289 1 306 1 180 1 
10 1 20 1 201 1 314 1 262 1 305 1 243 1 204 1 248 1 285 1 207 1 
239 2 64 1 20 1 201 1 314 1 46 1 262 1 243 1 318 1 248 1 140 1 285 1 267 2 124 1 252 1 147 1 305 1 327 1 
262 1 46 1 140 1 92 1 267 2 147 2 94 1 150 1 305 1 59 1 239 2 64 2 20 1 314 1 201 2 243 1 318 1 285 3 173 1 124 1 252 2 288 1 327 1 
262 1 46 1 139 1 140 1 92 1 267 2 147 2 94 1 150 1 305 2 59 1 239 2 64 2 20 2 314 2 201 2 243 1 318 1 285 3 173 1 124 1 252 2 288 1 125 1 
2 2 45 1 262 1 90 1 139 1 5 2 92 1 94 1 150 1 195 1 305 3 64 1 20 3 314 3 201 1 243 1 248 1 285 4 122 1 323 1 292 1 257 1 332 1 
64 1 2 2 20 3 201 1 314 3 45 1 262 1 90 1 243 1 248 1 139 1 5 2 285 4 323 1 92 1 122 1 172 1 94 1 150 1 305 3 292 1 257 1 
20 1 314 1 67 1 262 1 305 1 243 1 
237 1 64 1 20 7 260 1 67 1 314 6 201 2 262 3 243 2 247 1 49 1 248 2 116 1 285 3 171 1 324 1 75 1 273 1 305 7 155 1 277 1 
89 4 46 1 262 1 136 2 264 2 140 1 52 1 189 2 267 2 147 1 56 1 153 1 304 1 276 2 154 2 305 1 100 1 102 2 61 6 279 1 239 2 157 2 64 1 20 1 313 1 201 1 314 1 202 1 242 3 243 1 318 1 119 1 285 1 170 3 121 1 32 1 171 1 124 2 252 1 253 1 78 1 327 1 179 1 131 1 330 1 181 1 183 2 
2 3 222 1 45 1 90 1 48 1 224 1 51 2 5 3 228 1 143 2 305 1 280 1 105 1 20 1 314 1 69 2 317 1 248 1 29 1 285 2 323 1 122 2 172 1 39 1 292 1 214 2 83 1 257 1 
64 1 20 2 260 1 67 1 314 2 201 1 262 2 243 1 223 1 285 2 171 1 305 2 257 1 
20 4 21 1 314 4 201 1 262 1 243 1 248 1 139 1 207 1 285 1 171 1 10 1 305 4 
64 1 20 2 314 2 201 1 262 2 243 1 49 1 285 1 233 1 54 1 150 1 271 1 305 2 155 1 
20 1 95 1 199 1 314 1 68 1 262 1 305 1 243 1 248 1 187 1 
237 1 20 2 314 2 201 1 262 1 243 1 8 1 285 1 171 1 324 1 305 2 
237 1 20 5 21 1 314 4 201 2 262 2 243 2 248 1 247 1 207 1 285 3 171 1 10 1 150 1 305 5 277 1 
237 1 20 5 21 1 314 4 201 2 203 1 262 2 243 2 248 1 247 1 207 1 285 3 171 1 10 1 150 1 305 5 
239 2 64 1 20 1 201 1 314 1 46 1 262 1 243 1 318 1 248 1 140 1 285 1 267 2 124 1 252 1 147 1 125 1 305 1 
64 1 20 1 260 1 150 1 201 1 273 1 314 1 262 2 155 1 305 1 243 1 49 1 285 1 
209 1 192 1 124 1 80 1 17 1 
86 1 2 2 45 1 135 1 90 1 29 1 5 2 30 1 323 1 209 2 173 1 192 1 124 1 251 1 288 1 176 1 59 1 80 2 17 2 
1 1 239 1 65 1 31 1 192 1 267 1 252 1 80 1 17 1 
86 1 192 1 251 1 

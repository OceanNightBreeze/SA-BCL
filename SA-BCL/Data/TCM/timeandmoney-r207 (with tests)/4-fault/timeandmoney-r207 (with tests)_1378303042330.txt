#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 2 304 1 348 2 347 2 272 1 48 1 13 1 50 1 279 1 33 1 249 1 145 1 119 1 149 1 311 1 201 1 230 1 95 2 253 3 206 2 207 4 231 6 79 9 181 2 357 2 358 9 257 1 106 5 
67 2 304 1 347 2 348 2 272 1 48 1 13 1 50 1 279 1 33 1 249 1 145 1 119 1 149 1 311 1 201 1 230 1 95 2 253 3 206 2 207 4 231 6 79 9 181 2 357 2 358 9 257 1 106 5 
67 2 304 1 347 2 348 2 272 1 48 1 13 1 50 1 279 1 33 1 249 1 145 1 119 1 149 1 311 1 201 1 230 1 95 2 253 4 206 2 207 5 231 7 79 10 181 2 357 2 358 10 257 1 106 6 
67 2 304 1 347 2 348 1 272 1 48 1 13 1 50 1 279 1 33 1 249 1 145 1 119 1 149 1 311 1 201 1 230 1 95 2 253 2 206 2 207 3 231 4 79 7 181 2 357 2 358 7 106 4 
311 1 95 1 253 1 206 1 348 2 231 3 207 2 347 1 272 1 181 1 79 4 357 1 358 4 257 1 50 1 13 1 279 1 106 3 
311 1 110 1 201 1 95 1 287 1 67 1 206 1 272 1 79 2 181 1 357 1 358 2 279 1 106 1 249 1 197 1 
311 1 95 2 67 1 253 1 304 1 206 2 207 1 231 1 272 1 79 3 358 3 279 1 106 2 
67 1 304 1 348 2 347 1 272 1 48 1 50 1 13 1 279 1 119 1 311 1 95 2 253 3 101 1 207 4 231 7 206 2 79 9 181 1 357 1 358 9 257 1 106 5 63 1 
67 1 304 1 348 2 347 1 272 1 48 1 50 1 13 1 279 1 119 1 311 1 95 2 253 3 101 1 207 4 231 7 206 2 79 9 181 1 357 1 358 9 257 1 106 5 63 1 
237 1 86 1 10 1 
307 1 223 2 10 1 
349 2 183 2 37 1 54 2 7 1 75 2 94 2 251 2 
65 1 29 1 219 1 245 1 87 1 142 1 7 1 172 1 90 1 371 2 328 1 349 3 49 1 74 1 75 2 122 1 94 3 251 2 153 1 20 1 37 1 54 2 155 1 254 2 352 1 98 1 205 1 157 1 255 2 209 1 210 1 356 2 317 1 183 2 342 1 213 2 241 1 
349 1 35 1 183 1 37 1 302 1 54 1 46 1 75 1 94 1 251 1 
54 1 46 1 56 1 77 1 143 1 10 1 273 1 349 1 237 1 174 1 186 1 94 1 148 1 283 1 
54 1 46 1 143 1 10 1 273 2 349 1 237 1 183 1 174 2 186 1 75 1 94 1 251 1 148 1 283 1 
174 1 128 1 224 1 195 1 273 1 
237 1 174 2 333 1 128 1 224 1 164 1 10 1 273 2 
174 1 224 1 273 1 
35 1 302 1 37 1 112 1 54 1 46 1 273 1 349 1 174 1 183 1 128 1 75 1 94 1 251 1 
10 1 
237 1 174 2 128 1 224 1 164 1 262 1 10 1 273 2 
66 1 168 1 340 1 69 2 325 1 24 1 208 1 10 1 273 5 237 1 174 5 296 1 128 2 118 2 224 2 164 1 239 2 131 1 199 1 
86 1 7 1 
150 1 54 2 7 2 349 2 183 1 331 1 75 1 94 2 251 1 
267 1 327 1 290 1 
65 1 153 1 29 1 87 1 155 1 254 1 7 1 255 1 157 1 210 1 349 1 222 1 342 1 213 1 94 1 241 1 
65 1 29 1 153 1 87 1 155 1 190 1 54 1 254 1 157 1 255 1 327 1 210 1 160 1 349 2 183 1 342 1 213 1 94 2 241 1 251 1 
150 1 54 5 190 1 77 1 7 1 160 2 349 5 27 1 38 1 183 4 250 1 75 1 94 5 251 4 
349 2 35 1 183 2 184 1 54 2 46 1 94 2 251 2 
160 1 349 3 183 3 54 3 7 1 75 1 94 3 251 3 
349 1 35 1 183 1 54 1 46 1 94 1 251 1 
349 1 150 1 183 1 331 1 54 1 46 1 75 1 94 1 251 1 
65 1 29 1 111 1 219 1 87 1 245 1 190 1 46 1 7 1 143 1 371 1 273 1 328 1 349 4 174 1 122 1 75 2 94 4 148 1 251 3 283 1 150 1 153 1 20 1 37 1 125 1 155 1 54 3 254 1 352 1 98 1 205 1 157 1 255 1 209 1 210 1 160 1 356 2 317 1 183 3 342 1 213 1 186 1 241 1 
349 2 160 1 38 1 183 1 54 2 7 1 77 1 94 2 251 1 
150 1 125 1 190 1 54 3 44 1 46 1 143 1 10 1 273 1 160 2 349 3 174 1 183 3 186 1 75 1 94 3 251 3 148 1 283 1 
150 1 267 1 54 2 327 1 160 1 349 2 183 2 75 1 94 2 251 2 
65 1 153 1 29 1 87 1 155 1 254 1 7 1 255 1 157 1 210 1 349 1 342 1 213 1 94 1 241 1 
153 1 29 1 87 1 155 1 345 1 254 1 7 1 255 1 157 1 210 1 349 1 276 1 213 1 94 1 241 1 
109 1 266 1 1 1 267 2 219 1 169 1 172 2 327 2 371 4 328 1 17 1 176 1 98 1 205 1 352 2 378 1 290 2 209 1 379 1 182 1 356 2 317 1 319 1 320 1 
349 1 183 1 184 1 54 1 46 1 94 1 283 1 251 1 
277 1 104 1 
277 1 104 1 
68 1 274 1 
68 1 274 1 
68 1 274 1 
277 1 248 1 104 1 
277 1 248 1 104 1 
277 1 198 1 104 1 
277 2 179 1 68 1 350 1 104 2 274 1 
277 1 248 1 104 1 
277 1 43 1 104 1 
277 1 43 1 104 1 
277 1 43 1 104 1 
264 1 301 1 218 1 4 1 344 1 167 1 140 1 270 1 7 1 370 1 273 1 349 2 277 1 174 1 94 2 198 1 251 2 51 1 375 1 314 1 54 2 22 1 104 1 183 2 
243 1 375 2 51 2 264 1 301 2 314 2 344 3 346 1 179 1 45 2 232 1 10 1 104 2 273 2 58 1 277 2 174 2 359 1 263 1 
357 1 347 1 181 1 
357 1 287 1 181 1 
175 1 173 1 357 3 287 1 9 1 347 2 
175 1 173 1 357 2 137 1 287 1 347 1 
173 1 175 2 357 2 287 1 347 1 
2 1 66 1 4 1 169 1 270 1 69 1 370 1 10 2 273 5 31 1 307 1 174 5 223 3 118 1 224 1 120 1 282 2 17 1 76 1 313 2 55 1 378 1 316 1 24 3 379 1 237 1 296 2 128 4 212 2 239 1 164 1 108 1 
2 1 66 1 4 4 168 1 169 3 69 2 10 5 273 9 307 3 329 1 174 9 223 9 224 6 118 2 195 5 334 1 120 3 282 6 17 3 124 1 313 6 57 5 378 3 316 2 24 8 379 3 355 1 237 1 296 6 128 7 298 1 214 1 164 1 239 2 108 2 
4 1 169 1 168 1 69 1 10 3 273 3 307 2 174 3 223 4 118 1 120 1 17 1 282 2 76 1 313 2 55 1 378 1 316 1 24 3 379 1 237 1 296 2 128 2 212 1 239 1 108 1 
4 2 169 2 168 1 69 1 10 4 273 4 307 3 174 4 223 7 118 1 334 1 120 2 282 4 17 2 76 1 124 1 313 4 55 1 378 2 316 1 24 5 379 2 237 1 296 4 128 3 212 2 298 1 239 1 108 1 
86 1 91 1 241 1 
241 1 382 1 
60 1 
29 1 157 1 241 1 
71 1 241 1 
29 1 241 1 
188 1 29 1 82 1 157 1 91 2 241 3 
1 4 172 8 371 15 330 2 309 2 19 1 228 1 252 2 352 7 233 1 378 3 235 1 182 5 379 3 127 1 238 1 161 2 40 1 
1 4 172 8 371 15 330 2 309 2 19 1 228 3 252 2 352 7 233 1 378 3 235 1 182 7 379 3 127 1 238 1 161 2 40 1 
1 4 172 8 371 15 330 2 309 2 72 1 19 1 228 1 252 2 352 7 233 1 378 3 235 1 182 5 379 3 127 1 238 1 161 2 40 1 
1 3 219 1 169 3 367 1 172 11 371 22 328 1 192 4 309 1 120 3 17 3 351 1 200 3 228 4 252 1 98 1 205 1 352 11 377 1 354 1 233 1 378 3 235 1 379 3 182 7 356 2 292 1 59 1 161 1 297 1 
1 5 219 2 172 9 371 17 328 2 330 2 309 2 196 1 19 1 228 2 252 2 98 2 205 2 352 8 377 1 378 3 233 1 235 1 379 3 182 7 356 4 238 1 163 1 161 2 40 1 
364 1 87 1 67 1 366 1 141 1 8 1 9 1 347 1 272 1 306 1 117 1 279 1 311 1 284 1 95 1 155 1 287 1 254 1 99 1 255 1 231 1 206 1 181 1 79 2 357 2 358 2 106 1 213 1 258 1 85 1 
324 1 363 1 87 1 67 1 366 1 141 1 9 1 8 1 347 1 272 1 117 1 279 1 16 1 284 1 95 1 155 1 287 1 254 1 99 1 255 1 206 1 231 2 181 1 79 3 357 2 358 3 106 1 213 1 258 1 85 1 
324 1 87 1 67 1 366 1 8 1 9 1 347 1 272 1 279 1 16 1 284 1 155 1 287 1 254 1 99 1 255 1 231 2 79 2 181 1 357 2 358 2 106 1 213 1 258 1 85 1 
300 1 363 1 284 2 153 1 285 1 95 1 67 2 254 1 171 1 99 2 255 1 8 2 206 1 79 1 185 1 358 1 213 1 
364 1 87 1 67 1 366 1 141 1 8 1 9 1 347 1 117 1 16 1 311 1 284 1 95 1 155 1 287 1 254 1 99 1 255 1 206 1 181 1 79 1 357 2 358 1 213 1 258 1 85 1 
159 1 
242 1 42 1 135 1 3 2 87 1 303 4 46 1 143 1 305 1 10 2 307 2 349 1 11 1 14 2 94 1 148 1 153 2 155 1 54 1 203 2 254 2 56 1 156 1 255 2 24 2 256 2 360 1 213 2 107 1 164 3 108 1 29 1 66 1 170 2 114 2 69 1 369 1 273 5 174 5 223 2 224 6 118 1 225 1 34 1 283 1 123 1 178 1 77 1 80 2 237 1 81 1 296 2 239 1 186 1 241 1 
42 1 303 2 46 1 114 1 143 1 369 1 273 3 349 1 11 1 174 3 224 2 94 1 148 1 283 1 54 1 178 1 77 1 56 1 107 1 164 1 186 1 262 1 
42 1 303 3 46 1 143 1 369 1 10 1 273 3 349 1 11 1 174 3 224 1 94 1 148 1 283 1 54 1 178 1 77 1 56 1 80 1 237 1 107 1 164 1 186 1 262 1 
42 1 303 3 46 1 170 1 114 1 143 1 369 1 10 1 273 3 349 1 11 1 174 3 224 2 94 1 148 1 283 1 54 1 178 1 77 1 56 1 80 1 237 1 107 1 164 1 186 1 262 1 
42 1 3 2 303 6 46 1 143 1 10 5 349 1 307 2 11 1 14 2 247 1 94 1 148 1 54 1 203 2 56 1 156 1 24 1 256 2 107 1 164 3 261 1 262 1 217 1 66 1 170 4 114 4 69 1 369 1 273 5 174 5 224 7 118 1 34 1 283 1 178 1 77 1 288 1 291 1 80 4 237 5 296 1 239 1 186 1 
42 1 3 2 303 4 46 1 143 1 10 2 349 1 307 2 11 1 14 2 94 1 148 1 54 1 203 2 156 1 56 1 24 1 256 2 107 1 164 2 66 1 170 2 114 2 69 1 369 1 273 4 174 4 223 2 118 1 224 4 34 1 283 1 123 1 178 1 77 1 80 2 237 1 296 1 239 1 186 1 
217 1 42 1 66 1 3 2 303 4 170 2 46 1 114 2 69 1 143 1 369 1 10 1 273 4 307 2 349 1 11 1 174 4 14 2 247 1 224 4 118 1 34 1 94 1 148 1 283 1 54 1 178 1 203 2 156 1 77 1 56 1 24 1 288 1 256 2 80 2 237 1 296 1 107 1 164 2 239 1 186 1 
217 1 42 1 66 1 3 2 303 4 170 2 46 1 114 2 69 1 143 1 369 1 10 1 273 4 307 2 349 1 11 1 174 4 14 2 247 1 224 4 118 1 34 1 94 1 148 1 283 1 54 1 178 1 203 2 156 1 77 1 56 1 24 1 288 1 256 2 80 2 237 1 296 1 107 1 164 2 239 1 186 1 
42 1 66 1 244 2 303 4 170 2 46 1 114 2 69 1 143 1 369 1 10 1 273 4 349 1 11 1 174 4 14 2 223 2 247 1 224 4 118 1 34 1 94 1 148 1 283 1 18 1 54 1 178 1 77 1 56 1 24 1 341 1 256 2 80 2 237 1 296 1 107 1 164 2 239 1 186 1 130 1 132 2 
217 1 42 1 66 1 3 2 303 5 46 1 170 3 114 3 69 1 143 1 369 1 10 1 273 4 307 2 349 1 11 1 174 4 14 2 247 1 118 1 224 5 34 1 94 1 148 1 283 1 54 1 178 1 203 2 156 1 77 1 56 1 24 1 288 1 256 2 80 3 237 1 296 1 107 1 164 2 239 1 186 1 261 1 
217 1 42 1 66 1 3 2 303 5 46 1 170 3 114 3 69 1 143 1 369 1 10 1 273 4 307 2 349 1 11 1 174 4 14 2 247 1 118 1 224 5 34 1 94 1 148 1 283 1 54 1 178 1 203 2 156 1 77 1 56 1 24 1 288 1 256 2 80 3 237 1 296 1 107 1 164 2 239 1 186 1 261 1 
42 1 244 2 303 4 46 1 143 1 10 1 349 1 11 1 14 2 94 1 148 1 54 1 56 1 24 1 256 2 107 1 164 2 66 1 170 2 114 2 69 1 369 1 273 4 174 4 223 2 118 1 224 4 34 1 283 1 123 1 178 1 77 1 341 1 80 2 237 1 296 1 239 1 186 1 132 2 
266 1 1 2 267 1 86 1 219 1 7 2 172 3 327 1 371 6 328 1 330 1 309 1 19 1 252 1 98 1 205 1 352 3 378 1 290 1 209 1 182 2 379 1 356 2 317 1 238 1 161 1 
1 1 267 4 219 2 169 1 368 1 7 1 172 8 327 11 371 14 192 3 328 2 49 1 120 2 17 2 351 1 228 1 151 1 200 3 20 1 97 1 352 6 98 2 205 2 354 1 378 1 290 11 209 2 182 2 379 2 356 4 317 1 294 1 322 1 
166 1 65 1 267 1 29 1 87 1 219 1 190 1 7 1 172 1 371 2 222 1 328 1 349 2 49 1 94 2 251 1 153 1 20 1 155 1 54 1 254 1 205 1 98 1 352 1 157 1 255 1 236 1 210 1 209 1 160 1 356 2 317 1 183 1 294 1 342 1 213 1 129 1 241 1 
1 6 136 2 87 2 190 1 46 1 7 3 349 3 49 1 12 2 309 2 94 3 17 2 251 1 19 1 153 1 154 2 20 1 252 2 53 1 54 1 155 2 315 1 254 1 352 14 98 3 205 3 255 1 157 2 209 3 210 2 160 1 356 6 317 3 161 1 213 1 62 2 65 2 267 7 29 2 219 3 169 2 172 14 327 7 371 28 328 3 330 2 120 2 122 2 228 1 378 5 290 7 182 7 379 5 183 1 294 1 238 1 342 2 343 1 40 1 241 2 
242 1 266 1 29 2 269 1 87 2 219 2 5 1 172 1 90 2 371 2 306 1 349 1 328 2 49 1 280 1 16 1 94 1 251 1 177 1 153 2 20 1 54 1 155 2 254 7 98 2 205 2 352 1 255 8 234 1 209 2 160 1 356 4 183 1 317 2 81 1 259 1 213 8 260 1 241 3 
0 1 1 1 267 1 219 1 169 1 172 1 327 1 371 3 328 1 349 1 120 1 75 1 94 1 17 1 251 1 150 1 54 1 98 1 205 1 352 2 378 1 290 1 209 1 182 1 379 1 356 2 317 1 183 1 294 1 
266 1 176 1 228 1 267 1 219 1 205 1 98 1 172 2 327 1 290 1 371 2 209 1 182 1 328 1 379 1 356 2 317 1 17 1 
1 1 266 1 267 1 219 1 169 1 205 1 98 1 352 2 327 1 378 1 290 1 371 2 209 1 182 1 328 1 356 2 317 1 319 1 
266 1 1 1 267 2 219 1 169 1 172 2 327 2 371 4 328 1 120 1 17 1 228 1 98 1 205 1 352 2 378 1 290 2 209 1 379 1 182 2 356 2 317 1 
176 1 228 1 267 1 5 1 219 1 205 1 98 1 172 2 327 1 290 1 371 2 209 1 182 1 328 1 379 1 356 2 317 1 17 1 
1 1 267 1 5 1 219 1 169 1 205 1 98 1 352 2 327 1 378 1 290 1 371 2 209 1 182 1 328 1 356 2 317 1 319 1 
1 1 267 2 219 1 5 1 169 1 172 2 327 2 371 4 328 1 120 1 17 1 228 1 98 1 205 1 352 2 378 1 290 2 209 1 379 1 182 2 356 2 317 1 
1 1 267 2 219 1 169 1 172 2 327 2 371 4 328 1 120 1 17 1 228 1 98 1 205 1 352 2 378 1 290 2 209 1 379 1 182 2 356 2 317 1 
65 1 29 1 87 1 219 1 7 1 172 1 371 2 349 1 328 1 49 1 122 1 94 1 153 1 20 1 155 1 254 1 205 1 98 1 352 1 157 1 255 1 210 1 209 1 356 2 317 1 342 1 213 1 241 1 
29 1 87 1 219 1 191 1 345 1 7 1 172 1 371 2 276 1 349 1 328 1 49 1 94 1 153 1 20 1 155 1 254 1 205 1 98 1 352 1 157 1 255 1 210 1 209 1 356 2 317 1 213 1 241 1 
1 1 267 2 219 1 169 1 172 2 327 2 371 4 328 1 120 1 17 1 228 1 98 1 205 1 352 2 378 1 290 2 209 1 379 1 182 2 356 2 317 1 294 1 
1 1 267 2 65 1 29 1 87 1 219 1 169 1 172 2 327 2 371 4 306 1 349 1 328 1 120 1 122 1 17 1 94 1 228 1 154 1 155 1 254 1 352 2 205 1 98 1 157 1 255 1 378 1 290 2 210 1 209 1 182 2 379 1 356 2 317 1 342 1 213 1 241 1 
267 1 219 1 169 1 271 1 172 2 327 1 371 3 328 1 349 1 120 1 75 1 94 1 17 1 251 1 150 1 228 1 54 1 352 1 98 1 205 1 378 1 290 1 209 1 182 1 379 1 356 2 317 1 183 1 294 1 
265 1 1 3 268 1 219 2 6 1 169 3 47 1 172 9 116 1 371 19 192 2 328 2 275 1 15 2 196 1 120 3 17 3 351 1 200 1 228 3 98 2 205 2 352 10 354 1 378 3 25 1 379 3 182 6 356 4 133 2 
187 1 1 2 268 1 219 3 169 2 113 1 47 2 172 14 116 1 371 26 328 3 275 1 192 2 372 1 15 4 196 1 120 3 17 3 228 2 200 2 377 2 352 12 98 3 205 3 180 1 378 2 354 2 25 2 182 4 379 3 356 6 83 1 323 1 133 1 
187 1 1 3 47 2 192 4 309 1 15 4 196 1 146 1 17 4 351 1 19 1 200 3 252 1 352 21 205 3 98 3 354 3 25 1 356 6 161 1 323 1 265 1 268 1 219 3 169 4 113 1 172 20 371 41 116 1 275 1 328 3 330 1 372 1 120 4 228 4 377 1 378 5 180 1 182 7 379 5 238 1 83 1 133 1 
187 1 1 4 47 2 192 4 309 1 15 4 196 1 146 1 17 4 351 1 19 1 200 3 252 1 352 18 205 4 98 4 354 3 25 1 356 8 161 1 323 1 265 1 268 1 219 4 169 3 113 1 172 20 371 38 116 1 275 1 328 4 330 1 372 1 120 4 228 3 377 2 378 4 180 1 182 7 379 5 238 1 83 1 133 1 
187 1 1 6 268 1 219 2 169 7 113 1 368 2 47 1 172 27 116 1 371 52 192 4 328 2 275 1 330 1 309 1 372 1 15 4 196 1 120 7 17 7 19 1 351 2 200 4 228 7 252 1 377 1 98 2 205 2 352 25 180 1 354 2 378 8 25 1 379 8 182 13 356 4 238 1 161 1 83 1 323 1 133 1 
51 1 375 1 58 1 277 1 301 1 152 1 359 1 314 1 179 1 104 1 
22 1 198 1 
193 1 51 1 375 1 277 1 301 1 36 1 286 1 314 1 104 1 
134 1 248 1 
43 1 211 1 350 1 
243 1 264 1 375 1 51 1 301 1 314 1 344 2 179 1 45 1 232 1 10 1 104 1 273 1 58 1 174 1 277 1 359 1 263 1 
243 1 264 1 375 1 51 1 301 1 314 1 344 2 179 1 45 1 232 1 10 1 104 1 273 1 58 1 174 1 277 1 359 1 263 1 
243 1 264 1 375 1 51 1 301 1 314 1 344 2 179 1 45 1 232 1 10 1 104 1 273 1 58 1 174 1 277 1 359 1 263 1 
134 1 248 1 350 1 
134 1 248 1 350 1 
43 1 211 1 
43 1 211 1 350 1 
167 1 140 1 
362 1 301 1 218 1 4 1 344 1 167 1 45 1 140 1 270 1 7 1 370 1 273 1 349 2 174 1 277 1 94 2 198 1 251 2 51 1 375 1 314 1 54 2 22 1 232 1 104 1 183 2 128 1 
29 1 87 1 219 1 139 1 172 1 90 2 371 2 349 2 328 1 49 1 246 1 280 1 94 2 336 1 20 1 155 1 54 2 254 2 205 1 98 1 352 1 255 2 234 1 209 1 356 2 317 1 294 1 213 2 61 1 41 1 241 1 
52 1 87 1 155 1 287 1 366 1 254 2 99 1 9 1 255 2 347 1 181 1 306 1 117 1 357 2 213 2 258 1 194 1 215 1 16 1 
87 1 155 1 287 1 366 1 254 1 99 1 9 1 255 1 347 1 181 1 117 1 357 2 39 1 213 1 258 1 194 1 16 1 
300 1 153 1 138 1 213 1 254 1 215 1 99 1 255 1 
52 1 87 1 155 1 287 1 366 1 254 1 99 1 9 1 255 1 347 1 181 1 117 1 357 2 213 1 258 1 194 1 215 1 16 1 
373 1 
237 1 296 1 86 1 24 1 208 1 10 1 199 1 
66 1 3 1 69 1 10 2 273 1 307 1 174 1 223 1 118 1 224 1 203 1 156 1 24 1 237 1 296 1 239 1 164 1 
189 2 188 1 87 3 89 2 143 2 91 2 10 8 306 1 307 6 92 2 12 2 310 1 144 1 17 2 199 1 153 1 313 6 155 4 202 2 254 3 204 2 157 3 255 3 208 1 24 9 103 2 213 3 164 3 108 2 165 2 29 3 66 4 169 2 69 4 273 5 174 5 32 2 71 2 278 1 223 12 118 4 224 5 225 1 120 2 121 1 282 6 378 2 379 2 237 2 296 8 239 4 381 1 382 3 241 10 
187 1 66 2 169 2 113 1 69 2 10 5 273 1 192 1 307 3 174 1 372 1 223 6 224 1 118 2 225 1 120 2 282 5 17 2 200 1 313 5 337 1 338 1 103 1 24 8 354 1 378 2 379 2 237 2 296 5 164 1 239 2 108 1 83 1 323 1 165 2 
66 1 302 1 112 1 46 1 69 1 273 1 349 1 174 1 330 1 309 1 118 1 75 1 94 1 251 1 35 1 37 1 252 1 54 1 103 1 378 1 24 2 288 1 379 2 183 1 296 2 40 1 239 1 165 2 
66 1 69 1 208 1 24 1 10 1 237 1 296 1 118 1 239 1 199 1 
313 5 169 2 103 1 378 2 24 5 10 5 379 2 307 5 12 1 296 5 223 10 120 2 165 2 17 2 282 5 
237 1 174 1 224 1 164 1 10 1 273 1 
242 1 29 1 66 1 87 1 168 1 326 1 69 2 70 1 305 1 273 3 174 3 278 2 118 2 224 4 225 2 153 2 155 1 254 4 255 4 24 2 81 1 296 2 360 1 213 4 239 2 164 2 108 2 381 1 241 1 
65 1 29 1 245 1 87 1 219 1 7 1 371 1 328 1 349 3 75 2 122 1 94 3 251 2 153 1 20 1 37 1 54 2 155 1 254 1 352 1 98 1 205 1 255 1 157 1 210 1 209 1 356 2 183 2 317 1 342 1 213 1 241 1 
66 1 313 2 69 1 24 1 10 4 307 2 237 2 161 1 296 2 223 4 118 1 239 1 225 1 108 1 282 2 
51 1 376 1 314 1 
51 1 376 1 314 1 
51 1 58 1 318 1 314 1 140 1 
51 1 376 1 314 1 
51 1 314 1 28 1 
51 1 314 1 28 1 
51 1 314 1 28 1 
51 1 314 1 
277 1 104 1 
1 4 219 2 172 9 371 18 328 2 330 2 309 2 19 1 228 3 252 2 377 1 98 2 205 2 352 9 378 3 182 7 379 3 356 4 238 1 161 1 40 1 
19 1 1 2 86 1 252 1 352 3 172 3 378 1 371 6 182 2 379 1 330 1 238 1 161 1 309 1 
1 1 228 1 219 1 169 1 88 1 352 2 205 1 98 1 172 2 378 1 371 4 182 2 328 1 379 1 356 2 120 1 17 1 
351 1 1 1 200 1 228 1 169 1 352 4 172 3 378 1 354 1 371 7 192 2 379 1 182 2 120 1 17 1 
1 5 219 1 169 2 368 1 172 13 371 26 192 2 328 1 330 2 309 2 120 2 17 2 19 1 351 1 200 2 151 1 228 2 252 2 352 13 377 1 205 1 98 1 378 5 379 5 182 7 356 2 238 1 161 1 40 1 
192 1 352 1 371 1 
200 1 172 1 371 1 
1 2 228 1 219 1 88 1 169 1 98 1 205 1 352 3 172 3 378 1 371 6 328 1 379 1 182 3 356 2 12 1 120 1 17 1 
187 1 1 1 219 1 169 2 113 1 172 6 371 12 192 1 328 1 372 1 196 1 120 2 17 2 228 1 200 1 352 6 98 1 205 1 354 1 378 2 379 2 182 2 356 2 83 1 323 1 
1 1 228 1 252 1 352 3 172 3 378 1 371 6 379 1 182 2 330 1 309 1 
19 1 1 1 228 1 252 1 219 1 352 2 377 1 205 1 98 1 172 1 371 3 182 2 328 1 356 2 238 1 309 1 162 1 
1 2 228 1 252 1 352 4 172 4 378 2 371 8 182 3 379 2 330 1 309 1 40 1 
228 1 219 1 205 1 98 1 172 2 371 2 328 1 379 1 182 1 356 2 196 1 17 1 
1 1 228 1 219 1 169 1 352 2 205 1 98 1 172 2 378 1 371 4 182 2 328 1 379 1 356 2 196 1 120 1 17 1 
265 1 1 1 228 1 219 3 252 1 377 1 352 2 205 3 98 3 172 1 371 3 328 3 182 2 356 6 162 1 309 1 196 1 
265 1 1 5 219 4 88 1 169 2 367 1 172 16 371 32 192 3 328 4 330 2 309 2 196 1 120 2 17 2 19 1 200 3 228 4 252 2 377 1 352 16 98 4 205 4 354 1 378 5 379 5 182 9 356 8 292 1 238 1 161 1 59 1 40 1 
187 1 1 4 219 1 172 8 371 16 192 1 328 1 330 2 309 2 196 1 19 1 228 1 200 1 252 2 352 8 98 1 205 1 378 3 354 1 379 3 182 5 356 2 238 1 161 1 40 1 
187 1 1 4 219 2 88 1 172 10 371 19 192 2 328 2 330 2 309 2 196 1 120 1 17 1 19 1 351 1 200 1 228 2 252 2 352 9 98 2 205 2 378 3 354 1 379 4 182 6 356 4 238 1 161 1 40 1 
187 1 1 5 219 3 88 1 169 2 113 1 172 13 371 27 192 1 328 3 330 2 309 2 372 1 196 1 120 2 17 2 19 1 228 2 200 1 252 2 352 14 98 3 205 3 377 1 354 1 378 5 379 5 182 7 356 6 238 1 161 1 40 1 83 1 323 1 
187 1 1 5 219 3 88 1 169 1 113 1 172 14 371 25 192 1 328 3 330 2 309 2 372 1 196 1 120 2 17 2 19 1 228 4 200 1 252 2 377 1 352 11 98 3 205 3 354 1 378 4 379 5 182 9 356 6 238 1 161 1 40 1 83 1 323 1 
187 1 1 4 219 1 172 8 371 16 192 1 328 1 330 2 309 2 196 1 19 1 228 1 200 1 252 2 352 8 98 1 205 1 378 3 354 1 379 3 182 5 356 2 238 1 161 1 40 1 
187 1 1 1 219 1 169 2 113 1 172 6 371 12 192 1 328 1 372 1 196 1 120 2 17 2 228 1 200 1 352 6 98 1 205 1 354 1 378 2 379 2 182 2 356 2 83 1 323 1 
187 1 1 5 219 4 88 1 169 1 113 1 172 14 371 26 192 1 328 4 330 2 309 2 372 1 196 1 120 2 17 2 19 1 228 2 200 1 252 2 352 12 98 4 205 4 377 2 354 1 378 4 379 5 182 7 356 8 238 1 161 1 40 1 83 1 323 1 
187 1 265 1 1 3 219 4 169 2 113 1 172 9 371 16 192 1 328 4 372 1 196 1 120 3 17 3 228 3 200 1 352 7 98 4 205 4 377 2 354 1 378 2 379 3 182 6 356 8 83 1 323 1 
19 1 1 3 228 3 252 3 352 4 172 3 378 1 371 7 182 6 379 1 330 1 238 2 309 3 
187 1 265 1 1 5 219 4 169 1 113 1 172 14 371 26 192 1 328 4 330 2 309 2 372 1 196 1 120 2 17 2 19 1 228 2 200 1 252 2 352 12 98 4 205 4 377 2 354 1 378 4 379 5 182 7 356 8 238 1 161 1 40 1 83 1 323 1 
349 1 38 1 54 1 7 1 77 1 94 1 147 1 
54 1 23 1 7 1 77 1 289 1 349 1 38 1 308 1 321 1 299 1 147 1 94 1 
242 1 29 1 81 1 153 1 87 1 86 1 155 1 213 1 254 1 255 1 241 1 
29 1 153 1 87 1 155 1 54 1 254 1 7 1 157 1 255 1 210 1 160 1 349 2 183 1 342 1 213 1 94 2 241 1 251 1 
29 2 87 1 155 1 54 2 46 1 254 1 7 1 157 2 255 1 210 1 160 1 349 2 32 1 183 2 71 1 342 1 278 1 213 1 186 1 94 2 283 1 241 3 251 1 
29 2 87 1 220 1 46 1 7 1 276 1 349 2 32 1 71 1 278 1 94 2 251 1 283 1 54 2 155 1 254 2 255 2 157 2 210 1 160 1 183 2 213 2 186 1 241 3 
153 1 29 1 87 1 155 1 220 1 254 3 143 1 157 1 100 1 255 3 10 1 91 1 273 2 237 1 32 1 174 2 71 1 278 1 213 3 224 1 281 1 382 1 241 4 
153 1 29 1 87 1 155 1 220 1 254 3 143 1 157 1 255 3 10 1 91 1 273 2 237 1 32 1 174 2 92 1 71 1 278 1 213 3 224 1 382 1 241 4 
87 1 155 1 213 1 259 1 254 1 255 1 
188 1 177 1 153 2 29 2 269 1 87 2 21 1 155 3 254 6 255 7 157 1 90 1 234 1 102 1 306 1 259 1 213 7 260 1 16 1 361 1 241 3 
1 4 136 1 87 1 46 1 7 3 306 1 349 2 309 2 94 2 251 1 19 1 154 1 252 2 54 1 155 1 254 1 98 2 205 2 352 7 255 1 157 1 209 2 210 1 160 1 356 4 317 2 161 1 213 1 267 1 65 1 29 1 219 2 172 7 327 1 371 14 328 2 330 2 122 1 228 1 336 1 378 3 290 1 182 5 379 3 183 1 294 1 238 1 342 1 343 1 40 1 241 1 
189 1 66 2 89 1 69 2 143 1 10 1 91 1 273 3 174 3 92 1 118 2 224 2 199 1 153 1 202 1 254 1 255 1 24 1 208 1 237 1 296 1 128 1 213 1 239 2 164 1 381 1 382 1 241 2 
188 1 29 1 87 1 155 2 254 2 255 2 157 1 91 1 306 1 259 1 213 2 310 1 241 2 
242 1 153 1 29 1 87 1 155 1 96 1 220 1 254 4 255 4 306 1 81 1 213 4 241 1 
64 1 29 1 87 1 365 1 21 1 155 2 254 2 221 1 255 2 157 1 278 1 213 2 361 1 241 1 
357 1 153 1 87 1 155 1 287 1 258 1 213 1 254 1 255 1 181 1 
29 1 87 1 155 1 254 2 255 2 234 1 306 1 213 2 61 1 16 1 241 1 
242 1 177 1 153 1 29 2 87 2 155 2 96 1 254 4 255 5 234 1 306 1 81 1 278 1 213 5 260 1 241 3 
242 1 153 1 29 2 87 2 155 2 96 1 254 4 255 5 234 1 306 1 81 1 278 1 73 1 213 5 260 1 241 3 
29 1 153 1 87 1 155 1 54 1 254 1 7 1 157 1 255 1 210 1 160 1 349 2 276 1 183 1 213 1 94 2 241 1 251 1 
188 1 29 1 87 1 21 1 155 2 254 1 255 1 157 1 102 1 278 1 213 1 361 1 241 1 
295 1 335 1 7 1 84 1 115 1 
335 2 125 1 46 1 7 1 339 1 143 1 78 1 10 1 115 1 273 2 237 1 174 2 295 2 128 1 186 1 374 1 84 2 283 1 148 1 
349 1 295 1 335 1 246 1 54 1 139 1 41 1 94 1 115 1 
374 1 339 1 115 1 
86 1 279 1 106 1 272 1 
358 1 279 1 95 1 106 1 206 1 272 1 79 1 
67 1 8 1 79 1 
26 1 311 1 229 1 358 3 201 2 105 1 279 1 95 1 106 1 206 1 272 1 79 3 
358 2 279 1 95 1 106 1 231 1 348 1 206 1 272 1 79 2 
311 1 95 1 206 1 207 1 347 1 79 1 181 1 357 1 358 1 13 1 106 1 
311 1 358 1 279 1 95 1 106 1 206 1 79 1 
311 1 358 1 279 2 95 1 206 1 272 1 79 1 
311 1 95 2 158 1 206 2 79 2 293 1 358 2 279 1 106 1 93 1 
311 1 95 1 253 1 206 1 231 2 207 1 272 1 79 3 48 1 358 3 279 1 106 2 119 1 
311 1 95 1 287 1 9 1 206 1 347 1 231 1 272 1 79 2 181 1 357 2 358 2 279 1 106 1 240 1 
311 1 95 2 253 1 206 2 348 1 231 2 207 1 272 1 79 4 358 4 257 1 279 1 106 2 
311 1 358 1 279 1 95 1 106 1 206 1 272 1 79 1 
229 1 201 1 95 1 253 1 231 2 206 1 207 1 272 2 79 4 26 1 380 1 358 4 279 2 106 3 
311 1 95 1 206 1 231 1 79 2 272 1 358 2 332 1 279 1 106 1 216 1 63 1 
311 1 227 1 229 1 201 2 95 1 206 1 79 3 272 1 26 2 358 3 279 1 106 1 
106 2 126 2 226 1 353 1 
311 1 358 1 95 1 30 1 206 1 79 1 
311 1 358 2 279 1 95 1 106 1 119 1 231 1 206 1 272 1 79 2 
312 1 
311 1 358 1 279 1 95 1 106 1 206 1 272 1 79 1 
311 1 201 1 95 1 231 1 206 1 79 3 272 1 358 3 279 1 106 1 119 1 
380 1 106 1 253 1 207 1 
279 1 106 1 

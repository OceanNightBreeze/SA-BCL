#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (153,281) (153,281) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (153,281) (153,281) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (153,281) (153,281) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (153,281) (153,281) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
281 1 298 1 201 1 366 1 221 1 153 1 192 1 6 1 140 1 177 1 98 1 
281 1 298 1 201 1 366 1 221 1 153 1 192 1 6 1 140 1 177 1 98 1 
281 1 298 1 201 1 366 1 221 1 153 1 192 1 6 1 140 1 177 1 98 1 
281 1 298 1 201 1 366 1 221 1 153 1 192 1 6 1 140 1 177 1 98 1 
308 1 80 1 366 1 232 1 5 2 255 1 6 4 71 3 103 2 237 1 298 4 25 1 250 1 192 1 97 1 139 1 140 1 10 3 
308 1 80 1 183 1 366 1 19 1 266 1 6 2 298 2 201 1 250 1 192 1 212 1 10 1 140 1 139 1 98 1 
53 1 308 1 366 2 5 1 6 3 71 1 298 3 201 1 250 1 192 1 140 2 97 1 10 2 
114 1 5 4 222 1 71 7 6 9 298 9 201 1 25 1 250 1 342 1 97 3 10 5 53 1 308 1 80 1 81 1 366 2 232 1 255 1 103 2 237 1 192 1 140 2 139 1 
114 1 5 4 222 1 71 7 6 9 298 9 201 1 25 1 250 1 342 1 97 3 10 5 53 1 308 1 80 1 81 1 366 2 232 1 255 1 103 2 237 1 192 1 140 2 139 1 
32 1 313 1 7 1 
338 1 313 1 155 2 
370 2 195 1 70 1 285 2 337 2 367 2 161 2 133 2 
195 1 1 1 70 1 118 1 265 1 320 1 198 1 337 2 267 1 173 1 21 1 248 1 74 1 364 2 300 1 227 1 323 1 325 2 182 1 158 2 367 3 161 2 279 1 133 2 280 1 188 1 370 2 166 1 168 1 66 1 257 1 284 2 258 1 285 3 331 1 191 2 260 1 
370 1 195 1 315 1 285 1 231 1 337 1 367 1 161 1 268 1 133 1 
205 1 12 1 335 1 276 1 355 1 231 1 367 1 313 1 7 1 134 1 370 1 52 1 285 1 372 1 
205 1 12 1 276 1 355 1 337 1 231 1 161 1 367 1 313 1 7 1 133 1 370 1 52 2 285 1 372 2 
341 1 52 1 264 1 309 1 372 1 
52 2 264 1 290 1 309 1 313 1 7 1 108 1 372 2 
52 1 264 1 372 1 
195 1 309 1 231 1 337 1 161 1 367 1 268 1 104 1 133 1 370 1 315 1 52 1 285 1 372 1 
313 1 
275 1 52 2 264 1 290 1 309 1 313 1 7 1 372 2 
353 1 354 1 58 2 264 2 244 1 290 1 309 2 234 1 121 1 339 2 313 1 7 1 321 1 179 1 52 5 75 2 226 1 373 1 372 5 
70 1 32 1 
54 1 70 2 159 1 337 1 367 2 161 1 133 1 370 2 285 2 
24 1 154 1 317 1 
365 1 70 1 158 1 265 1 367 1 248 1 74 1 66 1 284 1 300 1 285 1 331 1 258 1 323 1 325 1 260 1 
158 1 265 1 245 1 337 1 367 2 133 1 370 1 248 1 66 1 74 1 8 1 300 1 284 1 258 1 331 1 285 2 323 1 317 1 325 1 260 1 
253 1 70 1 119 1 159 1 231 1 245 2 337 4 367 4 161 1 133 4 38 1 370 4 8 1 285 4 
370 2 299 1 285 2 231 1 337 2 367 2 268 1 133 2 
370 3 70 1 285 3 245 1 337 3 161 1 367 3 133 3 
370 1 285 1 231 1 337 1 367 1 268 1 133 1 
370 1 54 1 285 1 159 1 231 1 337 1 367 1 161 1 133 1 
195 1 1 1 70 1 265 1 355 1 198 1 337 3 245 1 267 1 21 1 248 1 74 1 8 1 52 1 364 2 300 1 227 1 323 1 325 1 205 1 182 1 12 1 276 1 158 1 159 1 231 1 161 2 367 4 279 1 16 1 133 3 188 1 370 3 166 1 66 1 257 1 284 1 258 1 331 1 285 4 191 1 142 1 372 1 260 1 
370 2 70 1 285 2 337 1 245 1 367 2 134 1 85 1 133 1 
205 1 12 1 276 1 159 1 355 1 231 1 245 2 337 3 161 1 367 3 313 1 133 3 370 3 17 1 52 1 8 1 285 3 142 1 372 1 
159 1 245 1 337 2 161 1 367 2 133 2 370 2 24 1 285 2 317 1 
70 1 158 1 265 1 367 1 248 1 74 1 66 1 284 1 300 1 285 1 331 1 258 1 323 1 325 1 260 1 
70 1 158 1 265 1 367 1 120 1 248 1 362 1 74 1 66 1 284 1 285 1 331 1 258 1 323 1 325 1 
320 2 198 1 21 1 293 1 361 1 24 2 364 2 95 1 227 2 251 1 154 2 156 1 307 1 100 1 182 1 328 1 207 1 279 1 64 1 188 1 166 1 191 4 138 1 317 2 
370 1 299 1 276 1 285 1 231 1 337 1 367 1 133 1 
181 1 326 1 
181 1 326 1 
304 1 223 1 
304 1 223 1 
304 1 223 1 
137 1 181 1 326 1 
137 1 181 1 326 1 
181 1 225 1 326 1 
242 1 160 1 304 1 223 1 181 2 326 2 
137 1 181 1 326 1 
181 1 176 1 326 1 
181 1 176 1 326 1 
181 1 176 1 326 1 
70 1 2 1 48 1 337 2 225 1 50 1 52 1 271 1 303 1 181 1 326 1 277 1 13 1 367 2 133 2 330 1 370 2 65 1 40 1 285 2 286 1 88 1 109 1 372 1 
242 1 277 2 48 1 37 1 313 1 50 2 167 1 283 1 52 2 40 2 286 2 42 1 181 2 109 3 143 1 372 2 68 2 194 1 326 2 
80 1 255 1 139 1 
80 1 19 1 139 1 
86 1 80 3 19 1 255 2 186 1 340 1 
86 1 80 2 19 1 255 1 213 1 186 1 
86 1 80 2 19 1 255 1 186 2 
353 2 241 1 243 1 334 2 289 2 2 1 319 1 264 1 290 1 338 1 121 3 339 1 7 1 175 2 52 5 75 1 301 1 303 1 251 1 252 1 155 3 156 1 100 1 328 1 58 1 309 4 15 1 313 2 330 1 332 1 373 1 372 5 
353 6 334 6 2 4 220 1 319 3 264 6 290 1 338 3 121 8 339 2 7 1 175 6 321 1 341 5 52 9 75 2 301 1 180 1 251 3 252 2 155 9 156 3 100 3 328 3 101 1 184 5 58 2 309 7 256 1 311 1 61 1 313 5 332 2 372 9 373 1 
353 2 241 1 2 1 289 1 334 2 319 1 338 2 121 3 339 1 7 1 175 2 321 1 52 3 75 1 251 1 252 1 155 4 156 1 100 1 328 1 58 1 309 2 15 1 313 3 332 1 372 3 
353 4 241 1 334 4 2 2 289 2 220 1 319 2 338 3 121 5 339 1 7 1 175 4 321 1 52 4 75 1 180 1 251 2 252 1 155 7 156 2 100 2 328 2 58 1 309 3 15 1 311 1 313 4 332 1 372 4 
248 1 115 1 32 1 
248 1 82 1 
28 1 
248 1 66 1 258 1 
248 1 105 1 
248 1 258 1 
248 3 66 1 115 2 258 1 129 1 33 1 
156 1 352 1 274 1 328 1 113 1 263 2 320 4 207 3 293 2 211 1 26 1 76 1 124 1 191 7 322 1 227 3 127 1 
156 1 352 1 274 1 328 1 113 1 263 2 320 4 207 3 293 2 211 1 26 1 76 1 124 1 191 7 322 1 227 3 127 1 
156 1 352 1 274 1 328 1 113 1 263 2 320 4 207 3 293 2 63 1 211 1 26 1 76 1 124 1 191 7 322 1 227 3 127 1 
352 1 144 1 45 1 113 2 263 3 319 3 320 16 293 5 364 2 26 5 76 1 124 2 322 1 227 15 302 1 251 3 127 2 156 4 274 2 100 3 182 1 328 4 59 1 235 1 207 10 208 4 279 1 314 1 211 1 188 1 166 1 191 31 43 1 239 3 
352 1 113 1 263 2 320 5 293 3 364 4 26 1 76 1 124 1 322 1 227 4 302 1 29 1 127 1 156 1 57 1 274 1 182 2 328 1 207 4 279 2 188 2 166 2 191 9 
172 1 3 1 19 1 265 1 71 1 6 2 340 1 294 1 152 1 73 1 298 2 74 1 201 1 250 1 203 1 10 1 325 1 99 1 308 1 80 2 344 1 366 1 158 1 255 1 282 1 284 1 192 1 139 1 140 1 218 1 
0 1 172 1 3 1 19 1 265 1 6 3 71 2 340 1 73 1 298 3 74 1 201 1 250 1 203 1 10 1 324 1 325 1 99 1 308 1 80 2 344 1 366 1 158 1 255 1 233 1 282 1 284 1 139 1 140 1 218 1 
0 1 172 1 3 1 19 1 265 1 6 2 71 2 340 1 73 1 298 2 74 1 201 1 250 1 10 1 324 1 325 1 308 1 80 2 344 1 158 1 255 1 282 1 284 1 139 1 218 1 
46 1 172 2 3 2 366 1 31 1 158 1 265 1 233 1 6 1 248 1 164 1 74 1 298 1 201 2 282 2 363 1 284 1 258 1 350 1 323 1 140 1 11 1 325 1 
172 1 3 1 19 1 265 1 6 1 340 1 294 1 73 1 298 1 74 1 201 1 203 1 324 1 325 1 99 1 80 2 344 1 366 1 158 1 255 1 282 1 284 1 192 1 139 1 140 1 218 1 
224 1 
288 1 46 1 145 2 335 1 290 3 338 2 339 1 7 1 247 2 295 1 248 1 52 5 96 1 155 2 11 1 205 1 12 1 254 2 58 1 158 2 313 2 163 2 258 1 216 1 353 2 219 1 171 2 264 6 265 1 355 1 121 2 178 4 74 1 75 1 272 1 323 2 325 2 276 1 128 1 34 2 231 1 367 1 132 2 36 1 134 1 370 1 39 1 284 2 332 1 285 1 41 1 238 1 372 5 373 1 374 1 
205 1 275 1 12 1 335 1 276 1 264 2 128 1 290 1 355 1 231 1 367 1 36 1 295 1 134 1 370 1 163 1 178 2 52 3 285 1 272 1 374 1 372 3 
145 1 335 1 264 1 355 1 290 1 7 1 295 1 178 3 52 3 272 1 205 1 12 1 275 1 276 1 128 1 231 1 367 1 36 1 313 1 134 1 370 1 285 1 372 3 374 1 
145 1 335 1 264 2 290 1 355 1 7 1 295 1 247 1 178 3 52 3 272 1 205 1 275 1 12 1 276 1 128 1 231 1 367 1 36 1 313 1 134 1 370 1 163 1 285 1 372 3 374 1 
353 1 219 1 240 1 171 2 145 4 335 1 264 7 290 3 355 1 338 2 121 1 339 1 7 5 295 1 247 4 178 6 52 5 75 1 272 1 205 1 275 1 12 1 254 2 276 1 58 1 128 1 34 2 231 1 367 1 132 2 36 1 313 5 162 1 134 1 370 1 163 4 189 1 135 1 285 1 216 1 44 1 373 1 372 5 374 1 
353 1 219 1 145 2 171 2 335 1 264 4 290 2 355 1 338 2 121 1 339 1 7 1 247 2 295 1 178 4 52 4 75 1 272 1 96 1 155 2 205 1 12 1 254 2 276 1 128 1 58 1 34 2 231 1 367 1 132 2 36 1 313 2 134 1 370 1 163 2 285 1 216 1 373 1 372 4 374 1 
353 1 219 1 145 2 171 2 335 1 264 4 290 2 355 1 338 2 121 1 339 1 7 1 247 2 295 1 178 4 52 4 75 1 272 1 205 1 12 1 254 2 276 1 128 1 58 1 34 2 231 1 367 1 132 2 36 1 313 1 162 1 134 1 370 1 163 2 135 1 285 1 216 1 44 1 372 4 374 1 373 1 
353 1 219 1 145 2 171 2 335 1 264 4 290 2 355 1 338 2 121 1 339 1 7 1 247 2 295 1 178 4 52 4 75 1 272 1 205 1 12 1 254 2 276 1 128 1 58 1 34 2 231 1 367 1 132 2 36 1 313 1 162 1 134 1 370 1 163 2 135 1 285 1 216 1 44 1 372 4 374 1 373 1 
353 1 219 1 145 2 171 2 335 1 264 4 290 2 355 1 121 1 149 1 339 1 7 1 247 2 295 1 178 4 23 1 52 4 75 1 123 1 272 1 305 2 155 2 205 1 273 2 12 1 254 2 276 1 128 1 58 1 231 1 367 1 36 1 313 1 134 1 370 1 163 2 135 1 285 1 372 4 374 1 373 1 
353 1 219 1 240 1 171 2 145 3 335 1 264 5 290 2 355 1 338 2 121 1 339 1 7 1 295 1 247 3 178 5 52 4 75 1 272 1 205 1 12 1 254 2 276 1 58 1 128 1 34 2 231 1 367 1 132 2 36 1 313 1 162 1 134 1 370 1 163 3 135 1 285 1 216 1 44 1 373 1 372 4 374 1 
353 1 219 1 240 1 171 2 145 3 335 1 264 5 290 2 355 1 338 2 121 1 339 1 7 1 295 1 247 3 178 5 52 4 75 1 272 1 205 1 12 1 254 2 276 1 58 1 128 1 34 2 231 1 367 1 132 2 36 1 313 1 162 1 134 1 370 1 163 3 135 1 285 1 216 1 44 1 373 1 372 4 374 1 
353 1 219 1 145 2 171 2 335 1 264 4 290 2 355 1 121 1 149 1 339 1 7 1 247 2 295 1 178 4 52 4 75 1 272 1 96 1 305 2 155 2 205 1 273 2 12 1 254 2 276 1 128 1 58 1 231 1 367 1 36 1 313 1 134 1 370 1 163 2 285 1 373 1 372 4 374 1 
352 1 113 1 70 2 263 1 198 1 320 3 21 1 293 2 24 1 364 2 76 1 322 1 227 3 154 1 307 1 156 1 274 1 182 1 328 1 32 1 207 2 279 1 188 1 166 1 191 6 317 1 
45 1 70 1 318 1 319 2 198 1 320 8 267 1 360 1 21 2 293 1 24 4 26 1 364 4 94 1 227 6 77 1 154 11 251 1 156 1 100 2 182 2 328 2 235 1 207 2 208 3 279 2 188 2 166 2 168 1 191 14 170 1 317 11 239 3 
70 1 265 1 198 1 337 1 245 1 320 1 267 1 360 1 21 1 269 1 248 1 24 1 74 1 8 1 300 1 364 2 227 1 323 1 325 1 55 1 365 1 182 1 158 1 367 2 279 1 133 1 370 1 188 1 165 1 166 1 66 1 168 1 284 1 258 1 331 1 285 2 191 2 260 1 
245 1 337 1 198 3 89 2 293 4 248 2 8 1 300 2 202 2 154 7 251 2 156 3 56 1 100 2 158 3 310 2 207 8 62 2 166 3 168 1 66 2 257 2 258 2 169 1 317 7 260 2 352 1 70 2 113 1 263 1 319 2 265 2 358 1 320 10 267 1 360 1 21 3 24 7 74 2 364 6 26 4 76 1 322 1 227 10 323 1 324 1 325 3 274 1 182 3 328 3 367 3 279 3 133 1 188 3 370 1 284 3 285 3 331 2 191 20 
46 1 265 2 118 2 337 1 245 1 198 2 320 1 267 1 200 1 21 2 248 3 152 1 74 2 364 4 227 1 323 2 324 1 325 8 11 1 307 1 182 2 158 7 14 1 346 1 367 1 348 1 209 1 279 2 236 1 133 1 370 1 188 2 166 2 168 1 284 8 285 1 258 2 191 2 136 1 
319 1 198 1 337 1 320 1 360 1 21 1 293 1 24 1 364 2 227 2 154 1 251 1 156 1 100 1 182 1 328 1 159 1 207 1 161 1 367 1 279 1 133 1 188 1 370 1 166 1 285 1 191 3 18 1 317 1 
307 1 100 1 182 1 328 1 198 1 320 2 207 1 21 1 279 1 188 1 24 1 166 1 26 1 364 2 191 2 138 1 154 1 317 1 
307 1 156 1 182 1 198 1 207 1 21 1 293 1 279 1 188 1 64 1 24 1 166 1 364 2 191 2 227 2 154 1 251 1 317 1 
319 1 320 2 198 1 21 1 293 1 24 2 364 2 26 1 227 2 154 2 251 1 307 1 156 1 100 1 182 1 328 1 207 2 279 1 188 1 166 1 191 4 317 2 
100 1 182 1 328 1 198 1 320 2 207 1 200 1 21 1 279 1 188 1 24 1 166 1 26 1 364 2 191 2 138 1 154 1 317 1 
156 1 182 1 198 1 207 1 200 1 21 1 293 1 279 1 188 1 64 1 24 1 166 1 364 2 191 2 227 2 154 1 251 1 317 1 
319 1 320 2 198 1 200 1 21 1 293 1 24 2 364 2 26 1 227 2 154 2 251 1 156 1 100 1 182 1 328 1 207 2 279 1 188 1 166 1 191 4 317 2 
319 1 320 2 198 1 21 1 293 1 24 2 364 2 26 1 227 2 154 2 251 1 156 1 100 1 182 1 328 1 207 2 279 1 188 1 166 1 191 4 317 2 
70 1 265 1 320 1 198 1 267 1 21 1 248 1 74 1 300 1 364 2 227 1 323 1 325 1 182 1 158 1 367 1 279 1 188 1 166 1 168 1 66 1 257 1 284 1 258 1 331 1 285 1 191 2 260 1 
70 1 265 1 320 1 198 1 291 1 267 1 120 1 21 1 248 1 362 1 74 1 364 2 227 1 323 1 325 1 182 1 158 1 367 1 279 1 188 1 166 1 168 1 66 1 284 1 258 1 331 1 285 1 191 2 
319 1 320 2 198 1 360 1 21 1 293 1 24 2 364 2 26 1 227 2 154 2 251 1 156 1 100 1 182 1 328 1 207 2 279 1 188 1 166 1 191 4 317 2 
319 1 265 1 320 2 198 1 21 1 293 1 248 1 24 2 152 1 74 1 26 1 300 1 364 2 227 2 251 1 154 2 325 1 156 1 100 1 182 1 328 1 158 1 207 2 367 1 62 1 279 1 188 1 166 1 66 1 257 1 284 1 331 1 258 1 285 1 191 4 317 2 260 1 
319 1 198 1 337 1 320 2 360 1 21 1 24 1 26 1 364 2 227 1 251 1 154 1 156 1 100 1 182 1 328 1 159 1 207 1 161 1 35 1 367 1 279 1 133 1 188 1 370 1 166 1 285 1 191 3 317 1 
45 1 319 3 356 1 320 9 293 3 72 1 296 1 151 1 364 4 26 3 27 1 227 10 251 3 29 1 229 2 156 3 100 3 182 2 345 2 328 3 235 1 207 6 208 2 279 2 188 2 166 2 191 19 193 1 217 1 239 1 
4 1 319 3 356 2 320 14 174 1 293 2 72 1 296 2 151 1 26 2 364 6 302 2 227 12 204 1 251 2 29 1 156 2 229 4 100 3 182 3 345 1 328 3 206 1 83 1 207 4 235 2 208 2 279 3 188 3 166 3 191 26 351 1 193 1 239 2 
45 1 4 1 293 4 151 1 296 1 302 1 204 1 251 4 156 5 100 4 345 1 206 1 207 8 208 4 166 3 351 1 217 1 352 1 113 1 263 1 319 4 356 2 320 20 20 1 174 1 72 1 26 4 364 6 76 1 322 1 227 21 29 1 229 4 274 1 182 3 328 5 83 1 235 3 279 3 188 3 191 41 193 1 239 3 
352 1 45 1 113 1 263 1 4 1 319 4 356 2 320 20 20 1 174 1 293 4 72 1 296 1 151 1 364 8 26 3 76 1 322 1 302 2 227 18 204 1 251 3 29 1 229 4 156 4 274 1 100 4 182 4 345 1 328 5 206 1 83 1 235 3 207 7 208 4 279 4 188 4 166 4 191 38 351 1 193 1 217 1 239 3 
352 1 45 2 113 1 263 1 318 2 4 1 319 7 356 1 320 27 174 1 293 7 72 1 296 1 151 1 364 4 26 7 76 1 322 1 302 1 227 25 204 1 251 7 29 1 229 4 156 8 274 1 100 7 182 2 345 1 328 8 206 1 83 1 235 2 207 14 208 4 279 2 188 2 166 2 191 52 351 1 193 1 239 4 
262 1 146 1 265 1 118 2 198 1 320 1 267 1 360 1 21 1 248 1 74 1 364 2 227 1 325 2 126 1 182 1 158 2 60 1 278 1 346 1 367 2 279 1 236 1 370 2 188 1 166 1 168 1 284 2 258 1 285 2 191 2 
99 1 80 2 112 1 19 1 3 1 158 2 265 1 255 1 336 1 340 1 152 1 73 1 74 1 284 2 228 1 139 1 324 1 218 1 325 2 
99 1 80 2 112 1 19 1 3 1 158 1 265 1 255 1 340 1 329 1 73 1 74 1 284 1 139 1 324 1 218 1 325 1 
306 1 46 1 3 1 158 1 265 1 336 1 248 1 74 1 284 1 363 1 258 1 323 1 325 1 11 1 
99 1 80 2 112 1 19 1 3 1 158 1 265 1 255 1 336 1 340 1 73 1 74 1 284 1 228 1 139 1 324 1 218 1 325 1 
150 1 
353 1 354 1 32 1 244 1 121 1 313 1 7 1 
353 1 264 1 290 1 338 1 121 1 339 1 7 1 52 1 75 1 155 1 58 1 34 1 132 1 313 2 216 1 373 1 372 1 
196 2 334 6 244 1 290 3 338 6 339 4 7 2 248 6 297 1 152 1 52 5 251 2 155 12 157 1 156 2 100 2 12 2 58 4 158 3 310 2 313 8 210 2 66 1 258 1 316 2 259 2 214 1 353 8 354 1 115 2 116 2 264 5 319 2 265 2 121 9 175 6 122 1 74 1 75 4 125 2 323 1 325 3 82 3 328 2 129 1 368 1 369 2 284 3 332 2 41 1 373 4 372 5 
353 5 334 5 264 1 4 1 319 2 290 1 359 1 338 3 121 8 339 2 174 1 7 2 175 5 52 1 75 2 251 2 155 6 156 2 100 2 328 2 206 1 185 1 58 2 83 1 235 1 208 1 313 5 210 1 332 1 259 2 41 1 351 1 372 1 373 2 239 1 
353 2 195 1 113 1 337 1 121 2 339 1 268 1 93 1 52 1 75 1 76 1 156 1 274 1 328 2 58 1 231 1 367 1 161 1 162 1 104 1 133 1 210 1 370 1 315 1 285 1 259 2 373 1 372 1 
353 1 354 1 58 1 244 1 121 1 339 1 7 1 313 1 75 1 373 1 
353 5 156 2 100 2 328 2 334 5 319 2 310 1 338 5 121 5 313 5 175 5 210 1 259 2 251 2 155 10 
52 1 264 1 290 1 313 1 7 1 372 1 
353 2 288 1 46 1 264 4 265 1 290 2 147 1 121 2 339 2 321 1 248 1 74 1 52 3 75 2 323 2 325 4 11 1 157 1 58 2 158 4 187 1 284 4 258 1 332 2 41 2 214 2 238 1 373 1 372 3 
195 1 1 1 70 1 265 1 337 2 198 1 267 1 21 1 248 1 74 1 364 2 300 1 227 1 323 1 325 1 182 1 158 1 367 3 161 2 279 1 133 2 188 1 370 2 166 1 66 1 257 1 284 1 285 3 331 1 258 1 191 1 260 1 
353 2 334 2 263 1 58 1 338 2 121 1 339 1 7 2 313 4 175 2 75 1 332 1 41 1 373 1 155 4 
50 1 286 1 110 1 
50 1 286 1 110 1 
65 1 50 1 286 1 343 1 143 1 
50 1 286 1 110 1 
50 1 117 1 286 1 
50 1 117 1 286 1 
50 1 117 1 286 1 
50 1 286 1 
181 1 326 1 
156 1 352 1 274 1 182 2 328 1 113 1 263 1 320 4 207 3 293 2 279 2 188 2 166 2 26 1 364 4 76 1 191 8 322 1 227 4 302 1 
352 1 156 1 274 1 113 1 328 1 263 1 32 1 320 3 207 2 293 2 76 1 191 6 322 1 227 3 
156 1 100 1 197 1 182 1 328 1 319 1 320 2 207 2 293 1 279 1 188 1 166 1 364 2 26 1 191 4 227 2 251 1 
156 1 45 1 100 1 328 1 319 1 320 3 235 1 207 2 208 2 293 1 26 1 191 7 227 4 251 1 239 1 
352 1 45 1 113 2 263 1 318 1 319 2 320 11 292 1 293 5 26 4 364 4 76 1 94 1 322 1 227 12 302 2 251 2 156 3 274 2 100 2 182 2 328 3 207 9 208 2 279 2 188 2 166 2 191 23 239 2 
191 1 227 1 208 1 
191 1 320 1 239 1 
156 1 100 1 182 1 197 1 328 1 319 1 310 1 320 3 207 3 279 1 293 2 188 1 166 1 364 2 26 1 191 6 227 3 251 1 
4 1 319 2 320 6 174 1 293 1 26 1 364 2 227 6 251 2 29 1 156 2 100 2 182 1 328 2 206 1 83 1 235 1 207 2 208 1 279 1 188 1 166 1 191 12 351 1 239 1 
156 1 274 1 328 1 113 1 320 3 207 2 293 1 26 1 76 1 191 6 227 3 
352 1 274 1 182 1 113 1 320 1 292 1 207 2 293 1 279 1 188 1 166 1 26 1 364 2 191 3 322 1 227 2 302 1 
156 2 274 2 182 1 113 2 328 2 320 5 207 5 279 1 293 3 188 1 166 1 93 1 364 2 26 2 76 1 191 10 227 5 29 1 
100 1 182 1 328 1 320 2 207 1 279 1 188 1 166 1 364 2 26 1 191 2 29 1 
156 1 100 1 182 1 328 1 319 1 320 2 207 2 293 1 279 1 188 1 166 1 364 2 26 1 191 4 227 2 251 1 29 1 
274 1 182 3 113 1 320 1 292 1 207 2 279 3 293 1 188 3 166 3 364 6 26 1 191 3 302 1 227 2 217 1 29 1 
352 1 144 1 45 1 197 1 113 3 263 1 319 3 320 16 292 1 293 7 364 10 26 5 76 2 322 1 302 2 227 18 251 3 29 1 156 5 274 3 100 3 182 5 328 5 235 1 207 12 208 4 279 5 314 1 188 5 166 5 191 34 43 1 217 1 239 3 
352 1 113 1 263 1 320 4 293 2 364 2 76 1 322 1 227 4 29 1 156 1 274 1 182 1 328 1 235 1 207 2 208 1 279 1 188 1 166 1 191 8 351 1 239 1 
352 1 45 1 197 1 113 1 263 1 319 1 320 6 293 2 364 4 26 1 76 1 322 1 227 5 29 1 156 1 274 1 100 1 182 2 328 2 235 1 207 3 208 2 279 2 188 2 166 2 191 11 351 1 239 1 
352 1 197 1 113 1 263 1 4 1 319 2 320 9 174 1 293 3 26 1 364 6 76 1 322 1 227 10 302 1 251 2 29 1 156 3 274 1 100 2 182 3 328 3 206 1 83 1 235 1 207 4 208 1 279 3 188 3 166 3 191 19 351 1 239 1 
352 1 197 1 113 1 263 1 4 1 319 2 320 10 174 1 293 3 26 2 364 6 76 1 322 1 302 1 227 7 251 1 29 1 156 2 274 1 100 2 182 3 328 3 206 1 83 1 235 1 207 5 208 1 279 3 188 3 166 3 191 17 351 1 239 1 
352 1 113 1 263 1 320 4 293 2 364 2 76 1 322 1 227 4 29 1 156 1 274 1 182 1 328 1 235 1 207 2 208 1 279 1 188 1 166 1 191 8 351 1 239 1 
4 1 319 2 320 6 174 1 293 1 26 1 364 2 227 6 251 2 29 1 156 2 100 2 182 1 328 2 206 1 83 1 235 1 207 2 208 1 279 1 188 1 166 1 191 12 351 1 239 1 
352 1 197 1 113 1 263 1 4 1 319 2 320 10 174 1 293 3 26 2 364 8 76 1 322 1 227 8 302 2 251 1 29 1 156 2 274 1 100 2 182 4 328 3 206 1 83 1 235 1 207 5 208 1 279 4 188 4 166 4 191 18 351 1 239 1 
4 1 319 3 320 9 174 1 293 3 26 3 364 8 227 7 302 2 251 2 29 1 156 2 100 3 182 4 328 3 206 1 83 1 235 1 207 6 208 1 279 4 188 4 166 4 191 16 351 1 217 1 239 1 
156 1 352 1 274 3 113 3 328 1 320 3 207 6 293 3 26 3 76 1 191 7 322 2 227 4 
352 1 113 1 263 1 4 1 319 2 320 10 174 1 293 3 26 1 364 8 76 1 322 1 227 8 302 2 251 1 29 1 156 2 274 1 100 2 182 4 328 3 206 1 83 1 235 1 207 4 208 1 279 4 188 4 166 4 191 18 351 1 217 1 239 1 
370 1 92 1 70 1 285 1 367 1 134 1 85 1 
30 1 70 1 246 1 148 1 367 1 347 1 85 1 134 1 22 1 370 1 92 1 285 1 
248 1 46 1 74 1 284 1 258 1 32 1 158 1 265 1 323 1 11 1 325 1 
70 1 158 1 265 1 245 1 337 1 367 2 133 1 370 1 248 1 66 1 74 1 284 1 300 1 258 1 331 1 285 2 323 1 325 1 
70 1 276 1 158 1 355 1 265 1 231 1 245 1 337 2 367 2 349 1 133 1 370 2 248 3 66 2 74 1 105 1 284 1 300 1 258 2 331 1 285 2 214 1 325 1 
47 1 70 1 265 1 355 1 337 2 245 1 120 1 248 3 74 1 325 2 276 1 158 2 231 1 367 2 349 1 133 1 370 2 66 2 284 2 105 1 285 2 331 1 258 2 214 1 
195 1 337 1 7 1 268 1 248 1 52 1 325 1 82 1 158 1 231 1 161 1 367 1 313 1 104 1 133 1 370 1 315 1 284 1 285 1 333 1 214 1 372 1 
195 1 116 1 337 1 7 1 268 1 248 1 52 1 325 1 82 1 158 1 231 1 161 1 367 1 313 1 104 1 133 1 370 1 315 1 284 1 285 1 214 1 372 1 
74 1 284 1 158 1 265 1 14 1 325 1 
327 1 158 6 118 1 129 1 265 3 14 1 346 1 84 1 348 1 209 1 248 3 152 1 66 1 74 2 284 7 258 2 136 1 323 2 215 1 324 1 325 7 
245 1 337 1 198 2 89 1 293 2 248 1 152 1 300 1 154 1 156 1 158 1 60 1 207 2 62 1 166 2 66 1 257 1 258 1 317 1 260 1 352 1 113 1 70 2 263 1 265 1 320 3 360 1 21 2 24 1 74 1 364 4 76 1 322 1 227 3 325 1 274 1 182 2 328 1 367 2 279 2 133 1 188 2 370 1 284 1 285 2 331 1 191 6 
353 1 196 1 354 1 115 1 116 1 264 2 244 1 290 1 121 1 339 2 7 1 248 2 52 3 75 2 125 1 323 1 325 1 157 1 12 1 82 1 158 1 58 2 309 1 313 1 284 1 316 1 373 2 372 3 
115 1 158 2 129 1 265 2 14 1 297 1 248 2 152 1 66 1 74 1 284 2 258 1 325 2 
46 1 47 1 158 4 265 1 248 1 152 1 74 1 284 4 258 1 323 1 79 1 325 4 11 1 
56 1 327 1 158 2 265 2 49 1 248 1 66 1 74 1 284 2 258 1 249 1 214 1 215 1 325 2 
80 1 73 1 74 1 19 1 284 1 158 1 265 1 323 1 139 1 325 1 
262 1 158 2 265 1 346 1 248 1 152 1 74 1 284 2 258 1 324 1 325 2 
46 1 158 4 265 2 346 1 348 1 209 1 248 3 152 1 74 2 284 5 258 2 214 1 323 1 79 1 11 1 325 5 
46 1 158 4 265 2 346 1 131 1 348 1 248 3 152 1 74 2 284 5 258 2 214 1 323 1 79 1 11 1 325 5 
70 1 158 1 265 1 245 1 337 1 367 2 120 1 133 1 370 1 248 1 66 1 74 1 284 1 258 1 331 1 285 2 323 1 325 1 
327 1 158 1 129 1 265 2 84 1 248 1 66 1 74 1 284 1 258 1 214 1 215 1 325 1 
51 1 70 1 67 1 312 1 107 1 
205 1 12 1 70 1 276 1 355 1 309 1 357 1 231 1 102 1 312 2 313 1 7 1 51 2 52 2 190 1 67 2 107 1 142 1 372 2 
370 1 51 1 285 1 146 1 278 1 367 1 107 1 312 1 126 1 
190 1 357 1 107 1 
308 1 32 1 250 1 10 1 
308 1 298 1 366 1 250 1 6 1 10 1 140 1 
298 1 201 1 172 1 
308 1 183 2 366 1 6 3 298 3 106 1 192 1 250 1 287 1 10 1 140 1 141 1 
308 1 298 2 366 1 250 1 71 1 6 2 10 1 103 1 140 1 
80 1 366 1 232 1 5 1 255 1 6 1 298 1 192 1 140 1 10 1 139 1 
298 1 366 1 250 1 192 1 6 1 10 1 140 1 
308 1 298 1 366 1 250 2 192 1 6 1 140 1 
366 2 6 2 91 1 270 1 298 2 250 1 192 1 10 1 140 2 78 1 
308 1 81 1 114 1 366 1 5 1 6 3 71 2 298 3 250 1 192 1 140 1 97 1 10 2 
308 1 80 2 19 1 366 1 255 1 6 2 71 1 340 1 87 1 298 2 250 1 192 1 10 1 140 1 139 1 
308 1 366 2 5 1 6 4 71 2 103 1 237 1 298 4 250 1 192 1 140 2 97 1 10 2 
308 1 298 1 366 1 250 1 192 1 6 1 10 1 140 1 
308 2 69 1 183 1 366 1 5 1 71 2 6 4 298 4 106 1 250 2 287 1 140 1 97 1 10 3 
308 1 366 1 130 1 222 1 6 2 71 1 298 2 250 1 192 1 9 1 10 1 140 1 
308 1 183 2 366 1 6 3 298 3 106 1 371 1 192 1 250 1 287 2 10 1 140 1 
261 2 230 1 10 2 111 1 
298 1 366 1 192 1 199 1 6 1 140 1 
308 1 81 1 298 2 366 1 250 1 192 1 71 1 6 2 10 1 140 1 
90 1 
308 1 298 1 366 1 250 1 192 1 6 1 10 1 140 1 
308 1 81 1 183 1 366 1 71 1 6 3 298 3 192 1 250 1 140 1 10 1 
69 1 5 1 10 1 97 1 
250 1 10 1 

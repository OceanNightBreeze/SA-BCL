#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) 103 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 24 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) 103 279 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 265 287 210 (67,362) 291 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 316 (156,201,351) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 117 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 265 287 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 5 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 265 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 265 287 220 338 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 265 262 328 (101,212) (240,243) (240,243) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 265 262 328 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 24 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) (218,310) (114,125) 55 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 265 262 328 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 265 287 210 (67,362) 291 216 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) (218,310) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 295 326 170 150 219 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 295 326 170 150 219 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 295 326 170 150 219 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 295 326 170 150 219 19 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 265 13 290 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 265 262 328 (101,212) (101,212) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 265 287 220 341 160 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 265 262 328 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) 103 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 295 326 170 150 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 117 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 265 287 210 (67,362) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 12 (67,362) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 12 (26,113) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 265 287 220 276 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 265 287 210 (26,113) 17 (218,310) (218,310) (114,125) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 12 (26,113) 82 293 (114,125) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 265 287 220 341 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 265 262 328 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 265 287 349 230 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 265 13 290 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 265 13 155 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 265 13 20 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 265 287 210 (67,362) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 265 287 220 276 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 6 86 1 257 1 21 1 236 1 115 1 239 2 207 4 263 1 208 2 68 1 342 9 242 1 48 2 175 2 178 1 246 3 250 2 321 2 320 1 251 1 100 1 56 9 195 1 297 1 296 2 129 1 146 5 
60 6 86 1 257 1 21 1 236 1 115 1 239 2 207 4 263 1 68 1 208 2 342 9 242 1 48 2 175 2 178 1 246 3 250 2 321 2 320 1 251 1 100 1 56 9 195 1 297 1 296 2 129 1 146 5 
60 7 86 1 257 1 21 1 236 1 115 1 239 2 207 5 263 1 68 1 208 2 342 10 242 1 48 2 175 2 178 1 246 4 250 2 321 2 320 1 251 1 100 1 56 10 195 1 297 1 296 2 129 1 146 6 
60 4 257 1 21 1 236 1 115 1 239 2 207 3 263 1 68 1 208 1 342 7 242 1 48 2 175 2 178 1 246 2 250 2 321 2 320 1 251 1 100 1 56 7 195 1 297 1 296 2 129 1 146 4 
60 3 86 1 257 1 321 1 251 1 100 1 239 1 56 4 207 2 263 1 208 2 297 1 296 1 342 4 48 1 175 1 246 1 146 3 
257 1 1 1 21 1 250 1 320 1 321 1 251 1 239 1 56 2 297 1 342 2 296 1 48 1 180 1 7 1 146 1 
60 1 257 1 250 1 321 2 251 1 115 1 56 3 207 1 297 1 342 3 48 2 246 1 146 2 
60 7 86 1 257 1 115 1 239 1 207 4 263 1 208 2 342 9 48 2 175 1 119 1 246 3 250 1 321 2 251 1 100 1 56 9 195 1 297 1 296 1 129 1 330 1 146 5 
60 7 86 1 257 1 115 1 239 1 207 4 263 1 208 2 342 9 48 2 175 1 119 1 246 3 250 1 321 2 251 1 100 1 56 9 195 1 297 1 296 1 129 1 330 1 146 5 
117 1 171 1 97 1 
281 2 171 1 340 1 
196 2 332 2 168 2 192 2 244 2 177 1 214 1 53 2 
42 1 332 1 168 1 113 1 66 2 310 1 283 2 265 1 287 1 289 1 210 1 346 1 176 1 244 1 214 1 53 1 192 1 196 1 103 1 273 1 17 1 300 2 131 1 
166 1 196 1 332 1 168 1 34 1 192 1 323 1 244 1 214 1 53 1 
318 1 166 1 332 1 99 1 186 1 171 1 223 1 196 1 106 1 29 1 244 1 52 1 317 1 97 1 
318 2 166 1 332 1 99 2 168 1 192 1 186 1 171 1 223 1 196 1 29 1 244 1 52 1 97 1 53 1 
128 1 318 1 99 1 50 1 215 1 
85 1 318 2 99 2 50 1 9 1 171 1 215 1 97 1 
318 1 99 1 50 1 
318 1 166 1 99 1 332 1 168 1 34 1 323 1 192 1 127 1 196 1 244 1 215 1 214 1 53 1 
171 1 
318 2 99 2 50 1 9 1 134 1 171 1 215 1 97 1 
318 5 99 5 234 1 335 1 334 2 124 2 354 1 149 1 171 1 80 1 153 2 187 1 286 1 50 2 233 1 9 1 215 2 97 1 182 1 
117 1 177 1 
98 1 332 2 306 1 168 1 192 1 196 2 244 2 177 2 53 1 
292 1 213 1 226 1 
42 1 265 1 287 1 289 1 210 1 113 1 346 1 24 1 17 1 300 1 66 1 283 1 
42 1 332 1 168 1 113 1 294 1 66 1 283 1 196 1 265 1 287 1 289 1 210 1 346 1 17 1 300 1 244 1 348 1 53 1 
73 1 332 5 306 1 258 1 168 4 294 2 192 1 196 5 299 1 244 5 177 1 348 1 317 1 53 4 
166 1 196 2 332 2 168 2 34 1 162 1 244 2 53 2 
196 3 332 3 168 3 294 1 192 1 244 3 177 1 53 3 
166 1 196 1 332 1 168 1 34 1 244 1 53 1 
166 1 98 1 196 1 332 1 306 1 168 1 192 1 244 1 53 1 
42 1 166 1 279 1 332 3 306 1 168 3 113 1 66 1 310 1 186 1 283 1 265 1 287 1 289 1 210 1 29 1 346 1 244 3 52 1 348 1 214 1 53 3 318 1 99 1 294 1 192 2 223 1 325 1 196 3 103 1 17 1 300 1 
196 2 332 2 168 1 299 1 294 1 244 2 177 1 317 1 53 1 
318 1 166 1 99 1 332 3 306 1 168 3 294 2 192 1 186 1 171 1 223 1 158 1 325 1 196 3 29 1 244 3 52 1 348 1 53 3 
332 2 306 1 168 2 294 1 192 1 226 1 196 2 213 1 244 2 53 2 
42 1 265 1 287 1 289 1 210 1 113 1 346 1 17 1 300 1 66 1 283 1 
42 1 265 1 291 1 287 1 289 1 210 1 346 1 300 1 66 1 362 1 283 1 
108 2 23 1 167 1 2 2 259 1 88 1 89 1 152 1 266 1 136 1 70 1 213 2 245 1 247 1 292 2 222 1 295 1 226 2 179 2 144 1 105 1 16 1 39 1 81 4 
166 1 196 1 332 1 168 1 162 1 52 1 244 1 53 1 
351 1 107 1 
351 1 107 1 
316 1 156 1 
316 1 156 1 
316 1 156 1 
351 1 193 1 107 1 
351 1 316 1 156 1 107 1 
351 1 201 1 107 1 
351 1 193 1 107 1 
351 1 193 1 107 1 
351 1 238 1 107 1 
351 1 238 1 107 1 
351 1 238 1 107 1 
183 1 332 2 201 1 235 1 168 2 147 1 282 1 237 1 94 1 69 1 244 2 177 1 53 2 318 1 351 1 99 1 271 1 14 1 254 1 196 2 232 1 107 1 198 1 304 1 
318 2 183 2 351 2 99 2 140 1 184 2 336 1 147 2 14 2 282 1 171 1 254 2 143 1 69 3 345 1 57 1 188 1 107 2 132 1 
296 1 175 1 239 1 
296 1 1 1 239 1 
1 1 288 1 260 1 175 2 239 3 194 1 
1 1 288 1 175 1 239 2 224 1 194 1 
1 1 288 2 175 1 239 2 194 1 
234 2 23 1 334 1 281 3 204 1 171 2 340 1 153 1 135 1 51 2 50 1 96 1 211 2 70 1 9 1 215 4 97 1 318 5 271 1 99 5 124 1 141 1 295 1 77 1 326 1 16 1 38 2 233 3 232 1 58 1 198 1 182 1 
234 6 23 3 334 2 64 1 281 9 308 1 171 5 340 3 153 2 285 1 135 2 28 1 51 6 50 6 211 6 70 3 9 1 215 7 97 1 318 9 99 9 123 5 124 2 141 1 295 3 326 3 128 5 80 1 145 1 16 3 161 1 232 4 233 8 58 2 182 1 
234 2 23 1 334 1 281 4 171 3 340 2 153 1 135 1 96 1 51 2 211 2 70 1 215 2 97 1 318 3 99 3 124 1 295 1 77 1 326 1 80 1 16 1 38 1 233 3 232 1 58 1 
234 4 23 2 334 1 64 1 281 7 171 4 340 3 153 1 135 1 28 1 51 4 96 1 211 4 70 2 215 3 97 1 318 4 99 4 124 1 295 2 77 1 326 2 80 1 145 1 16 2 38 2 233 5 232 2 58 1 
117 1 75 1 
12 1 
137 1 
265 1 287 1 
5 1 
265 1 
220 1 265 1 287 1 338 1 
110 1 0 1 352 1 221 2 133 1 2 3 148 1 79 1 152 2 116 1 49 1 179 4 16 1 136 3 70 1 81 7 361 1 
110 1 0 1 352 1 221 2 133 1 2 3 148 1 79 1 152 2 116 1 49 1 179 4 16 1 136 3 70 1 81 7 361 1 
110 1 0 1 352 1 221 2 133 1 2 3 148 1 79 1 152 2 116 1 49 1 174 1 179 4 16 1 136 3 70 1 81 7 361 1 
108 2 110 2 0 2 133 2 23 3 2 15 259 1 44 3 148 5 89 1 116 1 92 1 152 5 49 2 136 10 70 4 245 1 248 1 352 1 221 3 295 3 225 1 78 4 79 1 326 3 329 1 179 16 16 4 39 1 197 1 81 31 361 1 275 1 199 1 
108 4 305 1 110 1 0 1 133 1 2 4 259 2 148 1 337 1 89 2 152 3 116 1 49 1 136 4 70 1 245 2 221 2 352 1 79 1 179 5 16 1 39 2 81 9 199 1 
60 1 83 1 42 1 257 1 1 1 260 1 65 1 66 1 239 2 283 1 284 1 342 2 314 1 48 1 289 1 175 1 10 1 32 1 250 1 321 1 355 1 251 1 126 1 56 2 297 1 296 1 359 1 300 1 130 1 146 1 
60 2 83 1 42 1 278 1 257 1 1 1 260 1 65 1 66 1 3 1 239 2 283 1 284 1 342 3 48 1 289 1 175 1 10 1 250 1 321 1 35 1 355 1 126 1 56 3 297 1 296 1 359 1 300 1 130 1 146 1 
60 2 83 1 42 1 278 1 257 1 1 1 260 1 65 1 66 1 3 1 239 2 283 1 284 1 342 2 289 1 175 1 250 1 126 1 56 2 297 1 296 1 359 1 300 1 130 1 146 1 
250 2 321 1 65 2 35 1 66 1 262 1 76 1 56 1 283 1 240 1 342 1 265 1 328 1 48 1 359 2 243 1 346 1 212 1 300 1 130 2 
83 1 42 1 1 1 260 1 65 1 66 1 3 1 239 2 283 1 284 1 342 1 48 1 289 1 175 1 10 1 32 1 250 1 321 1 355 1 251 1 126 1 56 1 296 1 359 1 300 1 130 1 
322 1 
318 2 99 2 234 1 334 1 124 1 66 2 262 1 203 1 36 1 283 2 153 1 265 1 328 1 50 2 346 2 233 1 300 2 18 1 58 1 9 1 182 1 
166 1 332 1 43 1 186 1 90 2 134 1 206 1 241 1 50 2 29 1 244 1 52 1 9 1 317 1 318 3 190 1 99 3 223 1 196 1 37 1 106 1 181 1 
166 1 332 1 43 1 62 1 186 1 90 3 134 1 171 1 241 1 50 1 29 1 244 1 52 1 9 1 317 1 97 1 318 3 190 1 99 3 223 1 196 1 37 1 106 1 181 1 
166 1 332 1 43 1 62 1 134 1 186 1 90 3 171 1 206 1 241 1 50 2 29 1 244 1 52 1 9 1 269 1 317 1 97 1 318 3 190 1 99 3 223 1 196 1 37 1 106 1 181 1 
166 1 43 1 307 1 169 1 90 6 134 1 171 5 206 4 4 1 50 7 52 1 269 4 9 3 317 1 97 5 318 5 99 5 11 2 223 1 228 1 274 2 106 1 233 1 181 1 182 1 332 1 62 4 234 1 334 1 280 1 186 1 340 2 153 1 27 2 241 1 29 1 244 1 190 1 191 1 33 2 122 1 124 1 37 1 196 1 
166 1 43 1 169 1 90 4 171 2 206 2 50 4 52 1 9 2 269 2 317 1 97 1 54 1 318 4 99 4 11 2 223 1 274 2 106 1 233 1 181 1 182 1 332 1 234 1 62 2 334 1 281 2 186 1 340 2 153 1 27 2 241 1 29 1 244 1 190 1 33 2 122 1 124 1 37 1 196 1 
166 1 332 1 43 1 62 2 234 1 334 1 169 1 186 1 90 4 171 1 206 2 340 2 4 1 153 1 27 2 241 1 50 4 29 1 244 1 52 1 269 2 9 2 317 1 97 1 318 4 190 1 191 1 99 4 33 2 11 2 122 1 124 1 223 1 196 1 37 1 228 1 274 2 106 1 233 1 181 1 182 1 
166 1 332 1 43 1 62 2 234 1 334 1 169 1 186 1 90 4 171 1 206 2 340 2 4 1 153 1 27 2 241 1 50 4 29 1 244 1 52 1 269 2 9 2 317 1 97 1 318 4 190 1 191 1 99 4 33 2 11 2 122 1 124 1 223 1 196 1 37 1 228 1 274 2 106 1 233 1 181 1 182 1 
166 1 332 1 43 1 62 2 234 1 111 1 334 1 169 1 281 2 45 2 186 1 90 4 171 1 206 2 91 2 153 1 241 1 50 4 29 1 244 1 52 1 269 2 9 2 317 1 72 1 97 1 318 4 190 1 99 4 33 2 11 2 124 1 356 1 223 1 196 1 37 1 228 1 106 1 233 1 181 1 182 1 
166 1 332 1 43 1 234 1 62 3 334 1 307 1 169 1 186 1 90 5 171 1 340 2 206 3 4 1 153 1 27 2 241 1 50 5 29 1 244 1 52 1 9 2 269 3 317 1 97 1 318 4 190 1 191 1 99 4 33 2 11 2 122 1 124 1 223 1 196 1 37 1 228 1 274 2 106 1 233 1 181 1 182 1 
166 1 332 1 43 1 234 1 62 3 334 1 307 1 169 1 186 1 90 5 171 1 340 2 206 3 4 1 153 1 27 2 241 1 50 5 29 1 244 1 52 1 9 2 269 3 317 1 97 1 318 4 190 1 191 1 99 4 33 2 11 2 122 1 124 1 223 1 196 1 37 1 228 1 274 2 106 1 233 1 181 1 182 1 
166 1 43 1 332 1 62 2 234 1 334 1 111 1 169 1 281 2 45 2 186 1 90 4 171 1 206 2 91 2 153 1 241 1 50 4 29 1 244 1 52 1 269 2 9 2 317 1 97 1 54 1 318 4 190 1 99 4 33 2 11 2 124 1 223 1 196 1 37 1 106 1 233 1 181 1 182 1 
108 2 110 1 0 1 167 1 2 3 259 1 89 1 116 1 117 1 152 2 266 1 136 2 213 1 70 1 245 1 177 2 247 1 352 1 221 1 292 1 226 1 79 1 179 3 16 1 39 1 81 6 
108 4 23 1 2 6 167 1 259 2 148 1 44 3 25 1 89 2 311 1 152 1 92 1 93 1 173 1 266 2 136 2 70 2 213 4 177 1 245 2 292 11 252 1 295 2 226 11 78 3 326 2 179 8 255 1 16 1 39 2 81 14 331 1 275 1 
108 2 42 1 332 1 167 1 168 1 2 1 113 1 259 1 24 1 25 1 66 1 89 1 283 1 154 1 265 1 266 1 173 1 287 1 289 1 210 1 346 1 213 1 244 1 348 1 245 1 53 1 294 1 227 1 196 1 179 1 255 1 17 1 39 1 300 1 81 2 59 1 
108 2 42 1 332 1 167 1 168 1 2 1 113 1 259 1 25 1 89 1 66 1 310 1 283 1 265 1 266 1 173 1 287 1 289 1 210 1 346 1 244 1 348 1 245 1 53 1 55 1 218 1 125 1 294 1 196 1 17 1 39 1 81 1 300 1 
108 2 112 1 2 1 167 1 259 1 89 1 66 2 262 1 151 1 283 2 265 1 328 1 173 1 266 1 179 1 255 1 346 1 39 1 81 2 300 2 245 1 131 1 
108 2 332 1 306 1 23 1 167 1 168 1 2 2 259 1 25 1 89 1 152 1 266 1 136 1 213 1 70 1 138 1 244 1 245 1 53 1 292 1 192 1 295 1 226 1 326 1 196 1 179 1 16 1 39 1 81 3 
108 2 247 1 167 1 292 1 259 1 148 1 89 1 295 1 226 1 266 1 179 2 105 1 136 1 39 1 213 1 81 2 70 1 245 1 
108 2 247 1 23 1 167 1 2 2 292 1 259 1 222 1 89 1 226 1 152 1 266 1 136 1 16 1 39 1 213 1 81 2 245 1 
108 2 23 1 167 1 2 2 259 1 148 1 89 1 152 1 266 1 136 2 70 1 213 2 245 1 247 1 292 2 295 1 226 2 326 1 179 2 16 1 39 1 81 4 
108 2 112 1 167 1 292 1 259 1 148 1 89 1 295 1 226 1 266 1 179 2 105 1 136 1 39 1 213 1 81 2 70 1 245 1 
108 2 112 1 23 1 167 1 2 2 292 1 259 1 222 1 89 1 226 1 152 1 266 1 136 1 16 1 39 1 213 1 81 2 245 1 
108 2 112 1 23 1 167 1 2 2 259 1 148 1 89 1 152 1 266 1 136 2 70 1 213 2 245 1 292 2 295 1 226 2 326 1 179 2 16 1 39 1 81 4 
108 2 23 1 167 1 2 2 259 1 148 1 89 1 152 1 266 1 136 2 70 1 213 2 245 1 292 2 295 1 226 2 326 1 179 2 16 1 39 1 81 4 
42 1 265 1 287 1 289 1 210 1 113 1 346 1 17 1 300 1 66 1 310 1 283 1 
42 1 265 1 291 1 287 1 289 1 210 1 346 1 300 1 66 1 362 1 216 1 283 1 
108 2 23 1 167 1 2 2 259 1 148 1 25 1 89 1 152 1 266 1 136 2 70 1 213 2 245 1 292 2 295 1 226 2 326 1 179 2 16 1 39 1 81 4 
42 1 218 1 265 1 314 1 287 1 289 1 210 1 113 1 17 1 300 1 66 1 310 1 283 1 
108 2 332 1 306 1 23 1 2 1 167 1 168 1 259 1 87 1 148 1 25 1 89 1 266 1 136 1 70 1 213 1 244 1 245 1 53 1 292 1 192 1 295 1 226 1 326 1 196 1 179 2 16 1 39 1 81 3 
108 4 109 1 305 1 23 3 2 10 202 1 259 2 44 1 148 3 89 2 309 2 172 2 152 3 92 1 313 1 136 6 70 3 245 2 118 1 219 1 295 3 78 2 326 3 179 9 16 3 39 2 81 19 302 1 19 1 275 1 
319 1 108 2 305 1 219 2 2 5 259 1 44 2 150 1 89 1 295 1 170 1 78 2 326 1 172 2 179 6 39 1 70 1 81 11 245 1 19 1 302 2 275 2 118 1 
108 4 109 1 305 1 23 2 2 12 259 2 44 3 148 2 150 1 89 2 309 1 170 1 172 3 152 1 92 1 313 1 136 3 70 3 347 1 245 2 118 1 319 1 219 1 295 3 78 4 326 3 179 12 16 2 39 2 81 24 302 2 19 1 275 3 
108 4 109 1 305 1 23 2 2 12 259 2 44 3 148 2 150 1 89 2 309 1 170 1 172 3 152 2 92 1 313 1 136 4 70 3 347 1 245 2 118 1 319 1 219 1 295 3 78 4 326 3 179 12 16 2 39 2 81 24 302 2 19 1 275 3 
108 2 305 1 110 1 0 1 23 4 2 17 259 1 44 4 148 4 150 1 89 1 170 1 311 2 116 1 172 2 152 5 92 2 136 9 70 6 245 1 118 1 319 1 219 1 221 1 352 1 295 5 78 4 79 1 326 5 179 19 16 5 39 1 81 36 302 1 19 1 275 2 
183 1 143 1 249 1 351 1 140 1 147 1 188 1 14 1 107 1 254 1 
201 1 235 1 
358 1 183 1 351 1 63 1 147 1 14 1 107 1 205 1 254 1 
193 1 165 1 
95 1 344 1 238 1 
318 1 183 1 99 1 351 1 140 1 184 1 147 1 282 1 14 1 171 1 254 1 143 1 69 2 345 1 57 1 188 1 107 1 132 1 
318 1 183 1 99 1 351 1 140 1 184 1 147 1 282 1 14 1 171 1 254 1 143 1 69 2 345 1 57 1 188 1 107 1 132 1 
318 1 183 1 99 1 351 1 140 1 184 1 147 1 282 1 14 1 171 1 254 1 143 1 69 2 345 1 57 1 188 1 107 1 132 1 
95 1 193 1 165 1 
95 1 193 1 165 1 
344 1 238 1 
95 1 344 1 238 1 
94 1 304 1 
183 1 332 2 201 1 184 1 235 1 147 1 168 2 237 1 94 1 69 1 345 1 244 2 177 1 215 1 53 2 318 1 99 1 351 1 271 1 14 1 324 1 254 1 196 2 232 1 107 1 198 1 304 1 
108 2 332 2 167 1 2 1 259 1 25 1 89 1 66 2 339 1 151 1 283 2 265 1 266 1 173 1 244 2 245 1 189 1 290 1 13 1 196 2 179 1 255 1 163 1 39 1 300 2 81 2 131 2 303 1 
83 1 42 1 61 1 1 1 260 1 65 1 3 1 66 2 239 2 126 1 159 1 283 2 296 1 314 1 289 1 175 1 300 2 71 1 10 1 
83 1 42 1 1 1 260 1 65 1 3 1 66 1 239 2 126 1 283 1 46 1 296 1 289 1 175 1 300 1 71 1 10 1 
265 1 328 1 101 1 65 1 346 1 212 1 300 1 66 1 262 1 159 1 283 1 
83 1 42 1 61 1 1 1 260 1 65 1 3 1 66 1 239 2 126 1 159 1 283 1 296 1 289 1 175 1 300 1 71 1 10 1 
277 1 
117 1 234 1 335 1 149 1 233 1 171 1 97 1 
234 1 334 1 281 1 171 2 340 1 153 1 27 1 50 1 9 1 97 1 318 1 99 1 122 1 124 1 274 1 233 1 182 1 
220 1 334 1 124 1 66 1 283 1 341 1 153 1 265 1 160 1 287 1 346 1 300 1 182 1 
234 4 334 1 23 2 44 1 281 2 150 1 170 1 171 1 340 1 153 1 209 1 51 4 211 4 30 1 70 2 319 1 124 1 295 2 78 1 326 2 16 2 233 6 275 1 182 1 
166 1 110 1 332 1 0 1 234 2 334 1 168 1 4 1 312 1 153 1 6 2 70 2 244 1 214 1 53 1 318 1 99 1 352 1 34 1 124 1 323 1 192 1 127 1 196 1 231 1 16 1 233 2 182 1 
234 1 334 1 335 1 124 1 149 1 171 1 153 1 233 1 97 1 182 1 
234 5 23 2 281 10 295 2 171 5 340 5 326 2 312 1 6 2 47 1 51 5 211 5 16 2 70 2 233 5 
318 1 99 1 50 1 9 1 171 1 97 1 
318 1 99 1 234 1 334 1 124 1 66 2 262 1 203 1 36 1 283 2 153 1 265 1 328 1 50 2 346 2 233 1 300 2 18 1 58 1 9 1 301 1 182 1 
42 1 332 1 168 1 113 1 192 1 66 1 310 1 283 1 196 1 265 1 287 1 289 1 103 1 210 1 346 1 17 1 300 1 244 1 214 1 53 1 
221 1 234 2 334 1 124 1 281 4 171 4 340 2 36 1 153 1 51 2 211 2 233 1 58 1 97 2 182 1 
357 1 183 1 254 1 
183 1 143 1 102 1 254 1 304 1 
357 1 183 1 254 1 
357 1 183 1 254 1 
183 1 8 1 254 1 
183 1 8 1 254 1 
183 1 8 1 254 1 
183 1 254 1 
351 1 107 1 
108 4 110 1 0 1 221 1 352 1 2 4 259 2 148 1 89 2 79 1 152 2 116 1 179 4 16 1 136 3 39 2 70 1 81 8 245 2 199 1 
110 1 0 1 221 1 352 1 2 3 79 1 117 1 116 1 152 2 179 3 136 2 16 1 70 1 81 6 
108 2 23 1 2 2 259 1 148 1 89 1 295 1 326 1 152 1 179 2 16 1 136 2 39 1 70 1 81 4 245 1 270 1 
23 1 2 4 44 1 148 1 295 1 78 2 326 1 152 1 92 1 179 3 16 1 136 2 81 7 70 1 275 1 
108 4 110 2 0 2 23 2 2 12 259 2 148 4 44 2 89 2 311 1 116 1 92 1 152 5 93 1 136 9 70 3 245 2 221 1 352 1 74 1 295 2 78 2 79 1 326 2 179 11 16 3 39 2 81 23 199 2 
2 1 81 1 78 1 
179 1 44 1 81 1 
108 2 23 1 2 3 259 1 148 1 89 1 295 1 326 1 152 2 47 1 179 3 136 3 16 1 39 1 81 6 70 1 245 1 270 1 
319 1 108 2 305 1 2 2 259 1 44 1 150 1 89 1 295 1 170 1 78 1 326 1 179 3 39 1 70 1 81 5 245 1 275 1 
110 1 0 1 352 1 2 3 148 1 152 1 179 3 16 1 136 2 70 1 81 6 
108 2 110 1 0 1 74 1 2 2 259 1 148 1 89 1 79 1 152 1 116 1 179 1 136 2 39 1 81 3 245 1 199 1 
108 2 305 1 110 2 0 2 352 1 2 5 259 1 148 2 89 1 152 3 231 1 179 5 136 5 16 2 39 1 81 10 70 2 245 1 
108 2 305 1 259 1 148 1 89 1 295 1 179 2 136 1 39 1 70 1 81 2 245 1 
108 2 305 1 23 1 2 2 259 1 148 1 89 1 295 1 326 1 152 1 179 2 16 1 136 2 39 1 70 1 81 4 245 1 
108 6 305 1 110 1 0 1 74 1 2 2 259 3 148 1 89 3 152 1 313 1 179 1 136 2 39 3 81 3 245 3 199 1 
108 10 305 1 110 3 0 3 23 3 2 18 259 5 44 3 148 5 89 5 116 1 92 1 152 7 313 1 136 12 70 5 245 5 270 1 248 1 221 1 352 2 74 1 295 3 225 1 78 4 79 1 326 3 179 16 16 5 197 1 39 5 81 34 199 2 275 1 
108 2 305 1 110 1 0 1 2 4 259 1 44 1 150 1 89 1 116 1 152 2 136 2 70 1 245 1 221 1 352 1 78 1 79 1 179 4 16 1 39 1 81 8 275 1 
108 4 305 1 110 1 0 1 2 5 259 2 44 1 148 1 150 1 89 2 152 2 116 1 92 1 136 3 70 2 245 2 270 1 221 1 352 1 295 1 78 2 79 1 326 1 179 6 16 1 39 2 81 11 275 1 
319 1 108 2 305 1 2 2 259 1 44 1 150 1 89 1 295 1 170 1 78 1 326 1 179 3 39 1 70 1 81 5 245 1 275 1 
319 1 108 2 305 1 2 2 259 1 44 1 150 1 89 1 295 1 170 1 78 1 326 1 179 3 39 1 70 1 81 5 245 1 275 1 
108 2 305 1 110 1 0 1 2 4 259 1 44 1 150 1 89 1 116 1 152 2 136 2 70 1 245 1 221 1 352 1 78 1 79 1 179 4 16 1 39 1 81 8 275 1 
319 1 108 2 305 1 2 2 259 1 44 1 150 1 89 1 295 1 170 1 78 1 326 1 179 3 39 1 70 1 81 5 245 1 275 1 
319 1 108 4 305 1 2 2 259 2 44 1 150 1 89 2 295 1 170 1 78 1 326 1 179 3 39 2 70 1 81 5 245 2 275 1 270 1 
319 1 108 4 305 1 2 2 259 2 44 1 150 1 89 2 295 1 170 1 78 1 326 1 313 1 179 3 39 2 70 1 81 5 245 2 275 1 
110 3 0 3 352 1 2 4 148 3 79 1 116 2 152 3 179 3 16 1 136 6 81 7 70 1 
319 1 108 4 305 1 2 2 259 2 44 1 150 1 89 2 295 1 170 1 78 1 326 1 313 1 179 3 39 2 70 1 81 5 245 2 275 1 
196 1 332 1 299 1 244 1 177 1 31 1 317 1 
332 1 185 1 264 1 196 1 360 1 104 1 299 1 244 1 177 1 31 1 317 1 350 1 
117 1 265 1 328 1 346 1 300 1 66 1 262 1 283 1 
42 1 332 1 168 1 113 1 294 1 66 1 283 1 196 1 265 1 287 1 289 1 210 1 346 1 300 1 244 1 53 1 
42 1 256 1 332 1 168 1 113 1 294 1 66 1 283 1 196 1 265 1 287 1 289 1 210 1 300 1 244 1 53 1 
42 1 256 1 332 1 168 1 294 1 66 1 283 1 196 1 265 1 287 1 289 1 210 1 300 1 244 1 53 1 362 1 
318 1 256 1 99 1 12 1 300 1 66 1 67 1 283 1 
318 1 256 1 99 1 12 1 26 1 300 1 66 1 283 1 
42 1 121 1 289 1 300 1 66 1 283 1 
276 1 220 1 265 1 287 1 346 1 300 1 66 1 283 1 
108 2 42 1 332 1 167 1 168 1 259 1 113 1 25 1 89 1 66 1 310 1 283 1 265 1 266 1 314 1 287 1 289 1 210 1 244 1 245 1 53 1 189 1 218 1 294 1 125 1 196 1 39 1 17 1 300 1 
318 1 99 1 334 1 12 1 293 1 124 1 26 1 114 1 66 1 283 1 153 1 346 1 300 1 301 1 82 1 215 1 182 1 
220 1 265 1 121 1 287 1 300 1 66 1 341 1 283 1 
265 1 328 1 314 1 346 1 300 2 66 2 262 1 283 2 
265 1 22 1 287 1 230 1 300 1 66 1 349 1 283 1 
83 1 42 1 296 1 1 1 289 1 346 1 300 1 66 1 239 1 283 1 
290 1 265 1 314 1 13 1 3 1 300 2 66 2 283 2 
265 1 314 1 155 1 13 1 346 1 300 2 66 2 283 2 
265 1 314 1 13 1 346 1 300 2 66 2 20 1 283 2 
42 1 332 1 168 1 294 1 66 1 283 1 196 1 265 1 287 1 289 1 210 1 346 1 300 1 244 1 53 1 362 1 
276 1 256 1 220 1 265 1 287 1 300 1 66 1 283 1 
343 1 120 1 229 1 272 1 177 1 
318 2 166 1 99 2 120 2 272 2 186 1 142 1 171 1 223 1 325 1 343 2 229 1 29 1 52 1 315 1 177 1 215 1 164 1 97 1 
196 1 332 1 343 1 120 1 229 1 163 1 244 1 339 1 303 1 
229 1 142 1 164 1 
117 1 297 1 257 1 146 1 
297 1 342 1 257 1 48 1 321 1 56 1 146 1 
250 1 359 1 56 1 
157 1 257 1 321 1 320 2 251 1 56 3 15 1 342 3 297 1 48 1 146 1 41 1 
60 1 208 1 297 1 342 2 257 1 48 1 321 1 56 2 146 1 
321 1 251 1 239 1 56 1 207 1 263 1 342 1 296 1 48 1 175 1 146 1 
297 1 342 1 48 1 321 1 251 1 56 1 146 1 
297 2 342 1 257 1 48 1 321 1 251 1 56 1 
200 1 321 2 251 1 56 2 297 1 342 2 267 1 48 2 146 1 40 1 
60 2 257 1 321 1 251 1 56 3 207 1 195 1 297 1 342 3 129 1 48 1 246 1 146 2 
60 1 333 1 257 1 1 1 321 1 260 1 251 1 239 2 56 2 297 1 342 2 296 1 48 1 175 1 146 1 
60 2 86 1 257 1 321 2 251 1 56 4 207 1 208 1 297 1 342 4 48 2 246 1 146 2 
297 1 342 1 257 1 48 1 321 1 251 1 56 1 146 1 
157 1 217 1 60 2 257 2 320 1 321 1 56 4 207 1 297 2 342 4 48 1 41 1 246 1 146 3 
60 1 257 1 321 1 251 1 253 1 56 2 297 1 342 2 48 1 330 1 268 1 146 1 
157 2 257 1 353 1 321 1 320 2 251 1 56 3 342 3 297 1 48 1 41 1 146 1 
327 1 261 2 139 1 146 2 
84 1 342 1 48 1 321 1 251 1 56 1 
60 1 195 1 297 1 342 2 257 1 48 1 321 1 251 1 56 2 146 1 
298 1 
297 1 342 1 257 1 48 1 321 1 251 1 56 1 146 1 
60 1 257 1 321 1 320 1 251 1 56 3 195 1 342 3 297 1 48 1 146 1 
217 1 146 1 207 1 246 1 
297 1 146 1 

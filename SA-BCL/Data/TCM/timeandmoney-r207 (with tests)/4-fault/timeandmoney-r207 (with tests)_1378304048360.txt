#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 289 (65,80,83) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 1 143 4 322 1 121 1 227 9 362 2 146 3 149 5 230 2 338 9 205 2 367 6 177 1 129 2 48 2 311 1 343 1 329 2 130 1 266 1 106 1 348 1 351 1 332 1 110 1 78 2 111 1 219 1 
169 1 143 4 322 1 121 1 227 9 362 2 146 3 149 5 230 2 338 9 205 2 367 6 177 1 129 2 48 2 311 1 343 1 329 2 130 1 266 1 106 1 348 1 351 1 332 1 110 1 78 2 111 1 219 1 
169 1 143 5 322 1 121 1 227 10 362 2 146 4 149 6 230 2 338 10 205 2 367 7 177 1 129 2 48 2 311 1 343 1 329 2 130 1 266 1 106 1 348 1 351 1 332 1 110 1 78 2 111 1 219 1 
169 1 143 3 322 1 121 1 227 7 362 2 146 2 149 4 230 1 338 7 205 2 367 4 177 1 129 2 48 2 311 1 343 1 329 2 130 1 106 1 348 1 351 1 332 1 110 1 78 2 111 1 219 1 
169 1 343 1 143 2 329 1 266 1 106 1 227 4 146 1 362 1 348 1 149 3 332 1 230 2 338 4 367 3 205 1 129 1 48 1 
169 1 343 1 329 1 322 1 286 1 227 2 348 1 362 1 149 1 268 1 338 2 110 1 78 1 47 1 129 1 48 1 
169 1 343 1 143 1 329 2 227 3 348 1 146 1 149 2 338 3 78 1 219 1 367 1 48 2 
169 1 143 4 19 1 227 9 146 3 362 1 149 5 230 2 338 9 284 1 367 7 205 1 129 1 48 2 311 1 343 1 329 2 130 1 266 1 106 1 348 1 332 1 78 1 219 1 
169 1 143 4 19 1 227 9 146 3 362 1 149 5 230 2 338 9 284 1 367 7 205 1 129 1 48 2 311 1 343 1 329 2 130 1 266 1 106 1 348 1 332 1 78 1 219 1 
23 1 285 1 185 1 
174 1 254 2 185 1 
24 1 253 2 210 1 152 2 81 2 261 2 37 2 94 2 
1 2 85 1 40 1 276 1 253 2 4 1 124 1 94 2 127 1 24 1 202 1 309 1 204 1 152 2 100 1 28 2 310 1 328 1 261 2 368 2 239 1 210 1 212 1 267 2 11 1 107 1 373 1 186 1 54 1 14 1 248 2 249 1 250 1 168 1 81 3 379 1 37 3 
215 1 27 1 253 1 341 1 210 1 152 1 81 1 261 1 37 1 94 1 
29 1 242 1 335 1 278 1 185 1 23 1 215 1 77 1 112 1 316 1 261 1 81 1 37 1 193 1 
253 1 242 1 335 2 94 1 185 1 23 1 215 1 77 1 152 1 316 2 112 1 261 1 81 1 37 1 193 1 
335 1 316 1 56 1 184 1 102 1 
23 1 175 1 335 2 316 2 56 1 185 1 288 1 102 1 
335 1 316 1 56 1 
253 1 210 1 335 1 94 1 215 1 27 1 341 1 7 1 152 1 316 1 261 1 81 1 37 1 102 1 
185 1 
23 1 175 1 335 2 72 1 316 2 56 1 185 1 102 1 
49 1 335 5 91 2 374 1 172 1 327 1 185 1 199 1 200 1 23 1 201 1 45 1 175 1 281 1 316 5 221 2 56 2 381 2 102 2 
58 1 276 1 267 1 107 1 373 1 94 1 127 1 290 1 249 1 152 1 100 1 310 1 28 1 168 1 379 1 261 1 81 2 37 2 368 1 263 1 
24 1 285 1 
253 1 119 1 94 1 24 2 152 1 271 1 261 2 81 2 37 2 
359 1 262 1 263 1 
276 1 267 1 324 1 107 1 373 1 127 1 24 1 249 1 100 1 28 1 310 1 168 1 81 1 379 1 37 1 368 1 
58 1 24 1 253 1 152 3 81 3 261 3 37 3 94 3 
215 1 27 1 152 1 81 1 261 1 37 1 94 1 
215 1 253 1 119 1 152 1 271 1 81 1 261 1 37 1 94 1 
1 1 58 1 85 1 39 1 40 1 276 1 253 2 119 1 335 1 94 3 127 1 24 1 202 1 204 1 152 3 100 1 310 1 28 1 328 1 261 3 368 1 239 1 242 1 210 1 212 1 267 1 11 1 373 1 107 1 215 1 164 1 14 1 290 1 77 1 248 2 249 1 112 1 316 1 250 1 168 1 379 1 81 4 37 4 193 1 
58 1 24 1 29 1 152 1 81 2 261 2 37 2 94 1 96 1 
58 2 39 1 253 1 242 1 119 1 335 1 94 3 185 1 215 1 339 1 290 1 77 1 152 3 316 1 112 1 261 3 81 3 37 3 193 1 
58 1 253 1 119 1 94 2 152 2 261 2 81 2 37 2 262 1 263 1 
276 1 267 1 107 1 373 1 127 1 24 1 249 1 100 1 28 1 310 1 168 1 81 1 379 1 37 1 368 1 
276 1 267 1 107 1 74 1 24 1 249 1 100 1 28 1 310 1 168 1 81 1 236 1 379 1 37 1 368 1 
1 4 16 1 85 1 40 1 359 2 22 1 95 1 204 2 328 1 262 2 263 2 237 1 239 1 264 1 158 1 10 1 73 1 352 1 54 2 247 1 14 1 248 2 270 1 250 1 
215 1 242 1 152 1 81 1 261 1 37 1 94 1 68 1 
58 2 29 1 253 1 87 1 119 1 94 4 96 1 24 1 290 1 152 4 342 1 261 5 81 5 37 5 
215 1 27 1 152 2 81 2 261 2 37 2 94 2 68 1 
83 1 57 1 
83 1 57 1 
289 1 80 1 
289 1 80 1 
289 1 80 1 83 1 57 1 
157 1 83 1 57 1 
289 1 80 1 83 1 57 1 
65 1 83 1 57 1 
157 1 83 1 57 1 
157 1 83 1 57 1 
209 1 83 1 57 1 
209 1 83 1 57 1 
209 1 83 1 57 1 
265 2 42 1 196 3 159 1 335 2 305 2 6 1 12 1 148 1 185 1 233 1 62 1 354 1 203 2 316 2 83 2 36 2 67 2 57 2 
59 1 226 1 42 1 196 1 335 1 305 1 173 1 60 1 94 2 24 1 203 1 152 2 316 1 65 1 81 2 261 2 380 1 300 1 37 2 83 1 36 1 67 1 179 1 57 1 
362 1 205 1 129 1 
286 1 362 1 129 1 
163 1 291 1 286 1 350 1 205 2 129 3 
163 1 286 1 378 1 350 1 205 1 129 2 
163 1 286 1 205 1 350 2 129 2 
16 1 59 1 254 3 335 5 91 1 22 1 60 1 306 1 327 3 23 1 174 1 175 1 102 4 70 1 158 1 49 1 374 2 185 2 247 1 334 1 165 2 217 1 353 1 34 1 15 2 316 5 221 1 56 1 251 2 84 1 300 1 381 1 
16 3 3 5 254 9 323 1 335 9 43 1 91 2 22 3 327 8 201 1 23 1 232 1 174 3 175 1 102 7 158 3 104 1 49 1 374 6 184 5 185 5 247 3 334 1 165 6 136 1 353 2 34 2 15 6 316 9 56 6 221 2 317 1 84 3 300 4 381 2 
16 1 254 4 335 3 91 1 22 1 306 1 327 3 23 1 201 1 174 2 102 2 70 1 158 1 374 2 185 3 247 1 165 2 353 1 34 1 15 2 316 3 221 1 251 1 300 1 84 1 381 1 
16 2 254 7 335 4 91 1 22 2 306 1 327 5 23 1 201 1 174 3 232 1 102 3 70 1 158 2 104 1 374 4 185 4 247 2 165 4 353 1 34 1 15 4 316 4 221 1 251 2 317 1 300 2 84 2 381 1 
285 1 168 1 308 1 
153 1 168 1 
115 1 
249 1 168 1 
249 1 331 1 100 1 168 3 308 2 337 1 
249 1 100 1 168 1 
168 1 307 1 
208 2 1 7 16 1 41 1 240 1 275 1 105 1 10 2 360 1 22 1 150 1 54 4 76 1 137 1 204 3 35 1 237 3 
208 2 1 7 16 1 41 1 240 1 275 1 105 1 10 2 360 1 22 1 150 1 54 4 76 1 137 1 204 3 35 1 237 3 
208 2 1 7 16 1 41 1 240 1 275 1 105 1 10 2 360 1 22 1 150 1 54 4 76 1 137 1 204 3 35 1 301 1 237 3 
1 31 16 4 40 1 41 2 275 1 360 2 255 1 22 4 126 1 150 5 340 1 63 1 204 15 237 10 208 3 239 1 240 1 158 3 105 2 10 5 287 1 134 1 187 3 54 16 76 1 247 3 14 1 137 2 248 2 355 4 35 1 250 1 192 1 84 3 
208 2 1 9 239 2 319 1 16 1 41 1 40 2 275 1 105 1 10 3 277 1 360 1 22 1 126 1 150 1 54 5 76 1 14 2 137 1 248 4 204 4 35 1 250 2 237 4 
169 1 276 1 304 1 18 1 122 1 227 2 362 1 149 1 228 1 338 2 61 1 282 1 28 1 367 1 205 1 129 2 368 1 48 1 343 1 103 1 329 1 267 1 286 1 348 1 291 1 78 1 293 1 138 1 220 1 379 1 
169 1 276 1 304 1 18 1 90 1 122 1 227 3 362 1 149 1 228 1 338 3 61 1 28 1 205 1 367 2 129 2 368 1 48 1 343 1 238 1 103 1 329 1 267 1 286 1 132 1 291 1 78 1 293 1 138 1 379 1 
169 1 276 1 304 1 122 1 227 2 362 1 149 1 228 1 338 2 61 1 28 1 367 2 205 1 129 2 368 1 343 1 238 1 103 1 267 1 286 1 132 1 291 1 78 1 293 1 379 1 
276 1 90 1 122 2 227 1 197 1 228 2 229 1 338 1 363 1 28 1 365 1 368 1 48 1 329 1 267 1 107 1 161 1 376 1 78 2 249 1 293 2 168 1 379 1 
276 1 304 1 18 1 122 1 227 1 362 1 228 1 338 1 61 1 28 1 205 1 129 2 368 1 48 1 238 1 103 1 329 1 267 1 286 1 348 1 291 1 78 1 293 1 138 1 220 1 379 1 
117 1 
2 1 254 2 335 5 144 1 91 1 198 1 147 1 258 2 261 1 46 1 206 2 344 2 49 1 267 2 107 2 215 1 166 1 316 5 112 1 56 6 221 1 168 1 113 2 358 2 276 1 325 4 361 2 21 1 278 1 327 2 229 1 23 1 174 2 128 1 175 3 234 2 176 1 365 1 28 2 368 2 180 1 29 1 242 1 330 1 374 2 183 1 185 2 77 1 34 1 249 1 379 1 81 1 37 1 193 1 381 1 
335 3 325 2 361 1 278 1 128 1 175 1 176 1 261 1 29 1 242 1 330 1 72 1 183 1 215 1 77 1 166 1 316 3 112 1 56 2 81 1 37 1 193 1 
358 1 335 3 325 3 278 1 23 1 128 1 175 1 176 1 261 1 29 1 242 1 330 1 72 1 183 1 185 1 215 1 77 1 166 1 316 3 112 1 56 1 81 1 37 1 193 1 
358 1 335 3 325 3 361 1 278 1 258 1 23 1 128 1 175 1 176 1 261 1 29 1 242 1 330 1 72 1 183 1 185 1 215 1 77 1 166 1 316 3 112 1 56 2 81 1 37 1 193 1 
253 1 335 5 91 1 147 1 94 1 258 4 341 1 7 1 152 1 261 2 46 1 206 2 344 2 49 1 210 1 215 2 166 1 112 1 316 5 56 7 221 1 113 2 358 3 325 5 361 4 278 1 327 1 23 1 174 2 128 1 27 1 175 3 176 1 234 2 29 1 242 1 244 1 330 1 30 1 72 1 131 1 183 1 374 1 185 1 75 1 32 1 77 1 81 2 193 1 37 2 381 1 
254 2 335 4 91 1 147 1 258 2 46 1 261 1 206 2 344 2 49 1 215 1 166 1 112 1 316 4 221 1 56 4 113 2 358 2 325 4 361 2 278 1 327 1 23 1 174 2 128 1 175 2 176 1 234 2 180 1 29 1 242 1 330 1 183 1 374 1 185 2 77 1 81 1 193 1 37 1 381 1 
358 2 335 4 325 4 91 1 361 2 278 1 147 1 327 1 258 2 23 1 174 2 128 1 175 2 234 2 176 1 46 1 261 1 206 2 344 2 29 1 242 1 49 1 330 1 131 1 374 1 183 1 185 1 75 1 215 1 32 1 77 1 166 1 316 4 112 1 56 4 221 1 81 1 37 1 193 1 381 1 113 2 
358 2 335 4 325 4 91 1 361 2 278 1 147 1 327 1 258 2 23 1 174 2 128 1 175 2 234 2 176 1 46 1 261 1 206 2 344 2 29 1 242 1 49 1 330 1 131 1 374 1 183 1 185 1 75 1 215 1 32 1 77 1 166 1 316 4 112 1 56 4 221 1 81 1 37 1 193 1 381 1 113 2 
358 2 254 2 335 4 325 4 91 1 361 2 278 1 147 1 327 1 258 2 23 1 128 1 175 2 234 2 176 1 64 2 261 1 154 1 344 2 29 1 242 1 49 1 330 1 374 1 183 1 349 2 185 1 215 1 216 1 32 1 77 1 166 1 79 1 316 4 112 1 56 4 221 1 81 1 37 1 193 1 381 1 
358 3 335 4 91 1 325 5 361 3 278 1 147 1 327 1 258 3 23 1 174 2 128 1 175 2 234 2 176 1 46 1 261 1 206 2 344 2 29 1 49 1 242 1 330 1 30 1 131 1 374 1 183 1 185 1 75 1 215 1 32 1 77 1 166 1 316 4 112 1 221 1 56 5 81 1 37 1 193 1 381 1 113 2 
358 3 335 4 91 1 325 5 361 3 278 1 147 1 327 1 258 3 23 1 174 2 128 1 175 2 234 2 176 1 46 1 261 1 206 2 344 2 29 1 49 1 242 1 330 1 30 1 131 1 374 1 183 1 185 1 75 1 215 1 32 1 77 1 166 1 316 4 112 1 221 1 56 5 81 1 37 1 193 1 381 1 113 2 
254 2 335 4 91 1 147 1 258 2 261 1 344 2 49 1 349 2 215 1 166 1 112 1 316 4 221 1 56 4 358 2 325 4 361 2 278 1 327 1 23 1 128 1 175 2 176 1 234 2 64 2 180 1 29 1 242 1 330 1 183 1 374 1 185 1 77 1 79 1 81 1 193 1 37 1 381 1 
1 6 85 1 16 1 40 1 275 1 359 1 360 1 22 1 24 2 204 3 328 1 262 1 263 1 237 2 239 1 264 1 208 1 285 1 105 1 10 2 54 3 76 1 14 1 248 2 35 1 250 1 
1 14 85 2 16 1 40 2 20 1 359 11 124 1 22 2 150 1 24 1 63 1 204 6 328 1 262 4 237 2 263 11 239 2 182 1 158 1 372 1 10 1 11 1 53 1 287 1 187 3 54 8 247 2 14 2 355 3 248 4 250 2 84 2 318 1 
58 1 1 2 85 1 40 1 276 1 324 1 124 1 94 1 127 1 24 1 152 1 204 1 100 1 310 1 28 1 328 1 261 1 368 1 262 1 239 1 267 1 373 1 107 1 11 1 53 1 54 1 290 1 14 1 249 1 248 2 295 1 298 1 191 1 168 1 250 1 379 1 81 2 37 2 
1 20 85 3 40 3 94 1 44 2 150 4 202 2 204 10 152 1 100 2 310 2 261 1 262 7 263 7 208 1 158 2 105 1 267 3 160 1 10 4 11 1 107 1 53 1 54 10 14 3 168 2 58 1 16 3 275 1 276 2 359 7 171 2 360 1 124 1 22 3 127 2 24 2 231 1 28 3 328 3 368 3 237 8 238 1 239 3 241 2 373 2 76 1 247 2 290 1 188 2 248 6 249 2 35 1 250 3 81 3 379 2 82 1 37 3 84 2 
58 1 1 2 85 2 40 2 224 1 276 2 303 1 321 1 4 2 124 1 94 1 229 1 152 1 204 1 282 1 28 8 365 1 261 1 328 2 368 8 238 1 264 1 239 2 211 1 267 7 314 1 107 2 11 1 54 1 377 1 269 1 14 2 248 4 249 2 168 3 250 2 81 1 379 2 37 1 
1 3 85 1 16 1 40 1 253 1 119 1 359 1 22 1 94 1 152 1 204 2 328 1 261 1 262 1 237 1 263 1 239 1 158 1 10 1 53 1 135 1 54 1 247 1 14 1 248 2 250 1 81 1 37 1 84 1 
1 2 264 1 239 1 85 1 40 1 359 1 22 1 95 1 150 1 54 2 247 1 14 1 248 2 250 1 328 1 262 1 237 1 263 1 
1 2 264 1 239 1 85 1 16 1 40 1 158 1 10 1 359 1 14 1 248 2 270 1 204 2 250 1 328 1 262 1 237 1 263 1 
1 4 85 1 16 1 40 1 359 2 22 1 150 1 204 2 328 1 262 2 263 2 237 2 239 1 264 1 158 1 10 1 54 2 247 1 14 1 248 2 250 1 84 1 
1 2 239 1 85 1 224 1 40 1 359 1 22 1 95 1 150 1 54 2 247 1 14 1 248 2 250 1 328 1 262 1 237 1 263 1 
1 2 239 1 85 1 16 1 224 1 40 1 158 1 10 1 359 1 14 1 248 2 270 1 204 2 250 1 328 1 262 1 237 1 263 1 
1 4 85 1 16 1 40 1 224 1 359 2 22 1 150 1 204 2 328 1 262 2 263 2 237 2 239 1 158 1 10 1 54 2 247 1 14 1 248 2 250 1 84 1 
1 4 85 1 16 1 40 1 359 2 22 1 150 1 204 2 328 1 262 2 263 2 237 2 239 1 158 1 10 1 54 2 247 1 14 1 248 2 250 1 84 1 
1 2 85 1 40 1 276 1 124 1 127 1 24 1 202 1 204 1 100 1 310 1 28 1 328 1 368 1 239 1 267 1 373 1 107 1 11 1 54 1 14 1 249 1 248 2 168 1 250 1 379 1 81 1 37 1 
1 2 85 1 40 1 276 1 116 1 124 1 24 1 204 1 100 1 310 1 28 1 236 1 328 1 368 1 239 1 267 1 107 1 11 1 74 1 54 1 14 1 249 1 248 2 168 1 250 1 379 1 81 1 37 1 
1 4 85 1 16 1 40 1 359 2 22 1 150 1 204 2 328 1 262 2 263 2 237 2 239 1 158 1 10 1 53 1 54 2 247 1 14 1 248 2 250 1 84 1 
1 4 16 1 85 1 40 1 276 1 359 2 22 1 127 1 150 1 202 1 204 2 100 1 282 1 310 1 28 1 328 1 262 2 368 1 237 2 263 2 239 1 158 1 241 1 267 1 10 1 373 1 54 2 247 1 14 1 249 1 248 2 168 1 250 1 379 1 81 1 37 1 84 1 
1 3 16 1 85 1 40 1 253 1 119 1 89 1 359 1 22 1 94 1 150 1 204 1 152 1 328 1 261 1 262 1 237 1 263 1 239 1 158 1 53 1 54 2 247 1 14 1 248 2 250 1 81 1 37 1 84 1 
1 41 0 1 40 3 145 1 150 4 8 1 204 21 208 1 158 4 105 1 10 4 162 1 54 20 14 3 355 4 218 1 16 5 275 1 118 4 277 1 360 1 22 5 126 1 63 3 178 1 237 8 181 1 239 3 370 1 71 1 371 1 133 2 31 1 287 1 187 3 247 4 33 1 76 1 248 6 250 3 35 1 84 4 142 1 
0 1 1 38 16 4 40 4 275 1 118 4 277 1 145 1 360 1 22 5 126 2 150 3 63 3 8 1 204 18 178 1 181 1 237 7 208 1 239 4 370 1 158 3 71 1 105 1 371 1 10 4 133 2 31 1 287 1 162 1 187 3 54 20 76 1 33 1 247 4 14 4 355 4 248 8 218 1 35 1 250 4 84 4 142 1 
0 1 1 52 16 8 40 2 275 1 118 4 277 1 145 1 360 1 22 8 126 1 150 7 63 2 8 1 204 25 237 14 208 1 239 2 370 1 158 7 71 1 105 1 371 1 372 2 10 7 133 1 31 1 287 2 162 1 187 4 54 27 76 1 33 1 247 7 14 2 355 4 248 4 218 1 35 1 250 2 84 7 142 1 
0 1 1 19 16 3 40 2 118 2 277 1 145 1 22 3 150 3 63 1 204 10 178 1 237 6 239 2 158 3 71 1 10 3 133 1 287 1 162 1 187 1 54 9 247 3 14 2 55 1 355 2 248 4 218 2 250 2 84 3 
0 1 1 26 16 2 40 3 118 4 277 1 145 1 22 3 126 2 150 2 63 2 8 1 204 12 237 4 239 3 370 1 158 2 71 1 371 1 10 2 133 2 31 1 162 2 187 2 54 14 33 1 247 3 14 3 248 6 355 2 218 1 250 3 84 3 142 1 
62 1 159 1 203 1 305 1 6 1 93 1 36 1 83 1 67 1 57 1 
226 1 65 1 
345 1 203 1 305 1 52 1 36 1 83 1 67 1 333 1 57 1 
265 1 42 1 196 2 159 1 335 1 305 1 6 1 12 1 148 1 185 1 62 1 354 1 203 1 316 1 83 1 36 1 67 1 57 1 
265 1 42 1 196 2 159 1 335 1 305 1 6 1 12 1 148 1 185 1 62 1 354 1 203 1 316 1 83 1 36 1 67 1 57 1 
265 1 42 1 196 2 159 1 335 1 305 1 6 1 12 1 148 1 185 1 62 1 354 1 203 1 316 1 83 1 36 1 67 1 57 1 
26 1 157 1 5 1 
26 1 157 1 5 1 
209 1 86 1 
26 1 209 1 86 1 
173 1 380 1 
59 1 196 1 226 1 335 1 305 1 173 1 60 1 94 2 24 1 203 1 152 2 65 1 261 2 67 1 102 1 179 1 265 1 354 1 294 1 316 1 81 2 37 2 36 1 83 1 300 1 380 1 57 1 
157 1 5 1 
26 1 209 1 86 1 
1 2 85 1 40 1 276 1 303 1 320 1 321 1 4 2 92 1 124 1 204 1 28 2 328 1 261 2 368 2 239 1 245 1 267 2 11 1 214 1 53 1 54 1 14 1 249 1 248 2 168 1 250 1 379 1 81 2 37 2 274 1 
238 1 103 1 276 1 304 1 286 1 267 2 362 1 256 1 291 1 259 1 293 1 138 1 282 1 28 2 205 1 273 1 379 1 129 2 368 2 
238 1 103 1 276 1 304 1 286 1 267 1 362 1 291 1 293 1 138 1 28 1 205 1 273 1 379 1 129 2 368 1 302 1 
276 1 267 1 107 1 161 1 256 1 229 1 249 1 293 1 28 1 365 1 168 1 379 1 368 1 357 1 
238 1 103 1 276 1 304 1 286 1 267 1 362 1 256 1 291 1 259 1 293 1 138 1 28 1 205 1 273 1 379 1 129 2 368 1 
195 1 
23 1 285 1 45 1 374 1 172 1 327 1 185 1 
254 1 335 1 91 1 327 1 23 1 174 1 175 1 46 1 206 1 49 1 374 1 185 2 316 1 221 1 56 1 381 1 113 1 
254 12 335 5 144 1 91 4 44 2 307 2 337 1 308 2 99 2 45 1 260 1 153 3 100 3 101 2 312 2 158 2 9 1 49 4 267 3 107 1 51 2 13 1 165 6 167 2 15 6 112 2 316 5 168 10 221 4 222 1 56 5 16 2 276 4 172 1 22 2 327 9 23 2 174 6 175 3 282 1 283 1 28 3 66 2 368 3 369 2 374 8 185 8 247 2 34 2 249 3 379 3 84 2 194 2 381 4 
16 4 254 13 335 1 144 1 91 2 22 4 327 13 23 2 174 8 364 1 175 1 63 1 8 1 369 1 370 1 158 4 49 2 371 1 372 1 374 8 51 5 31 1 185 7 287 1 187 2 247 4 165 8 34 1 15 8 355 2 189 1 316 1 56 1 221 2 84 4 142 1 381 2 
16 1 225 1 253 1 335 1 91 1 360 1 22 2 327 2 94 1 27 1 341 1 7 1 152 1 261 1 369 1 105 1 49 1 210 1 131 1 374 2 51 2 215 1 76 1 316 1 221 1 81 1 37 1 381 1 
49 1 91 1 172 1 374 1 327 1 185 1 23 1 45 1 221 1 381 1 
16 2 158 2 254 10 374 5 51 2 22 2 44 1 327 5 185 5 247 2 174 5 165 5 15 5 84 2 369 1 
23 1 175 1 335 1 316 1 56 1 185 1 
170 1 276 1 335 3 144 2 91 2 21 1 198 1 257 1 327 2 229 1 201 1 175 2 28 4 365 1 368 4 9 2 49 1 267 4 107 2 374 2 13 1 34 2 249 1 316 3 168 1 221 2 56 4 379 1 381 2 
1 1 85 1 40 1 276 1 253 2 94 2 127 1 24 1 202 1 204 1 152 2 100 1 28 1 310 1 261 2 328 1 368 1 239 1 210 1 267 1 212 1 11 1 107 1 373 1 14 1 248 2 249 1 250 1 168 1 81 3 379 1 37 3 
208 1 49 1 254 4 144 1 91 1 374 2 327 1 185 4 23 2 174 2 165 2 34 1 15 2 221 1 381 1 
336 1 36 1 67 1 
346 1 6 1 380 1 36 1 67 1 
336 1 36 1 67 1 
336 1 36 1 67 1 
156 1 36 1 67 1 
156 1 36 1 67 1 
156 1 36 1 67 1 
36 1 67 1 
83 1 57 1 
1 8 16 1 40 1 275 1 277 1 360 1 22 1 63 1 204 4 237 2 208 1 239 1 105 1 10 2 31 1 187 1 54 4 76 1 14 1 355 1 248 2 250 1 35 1 
1 11 16 1 40 2 275 1 277 1 360 1 22 2 150 1 63 1 204 5 237 3 208 1 239 2 313 1 105 1 10 2 31 1 287 1 187 1 54 6 76 1 247 1 14 2 355 2 248 4 35 1 250 2 84 1 
1 19 16 3 40 3 275 1 277 1 360 1 22 3 126 1 150 1 63 1 8 1 204 10 237 4 208 1 239 3 370 1 313 1 158 2 105 1 371 1 10 3 31 1 187 1 54 9 76 1 247 2 14 3 355 1 248 6 35 1 250 3 84 2 142 1 
1 17 16 2 40 3 275 1 277 1 360 1 22 3 126 1 150 2 63 1 8 1 204 7 237 5 208 1 239 3 370 1 313 1 158 1 105 1 371 1 10 3 31 1 187 1 54 10 76 1 247 2 14 3 355 1 248 6 35 1 250 3 84 2 142 1 
1 8 16 1 40 1 275 1 277 1 360 1 22 1 63 1 204 4 237 2 208 1 239 1 105 1 10 2 31 1 187 1 54 4 76 1 14 1 355 1 248 2 250 1 35 1 
1 12 16 2 40 1 277 1 22 2 150 1 63 1 8 1 204 6 237 2 239 1 370 1 158 2 371 1 10 1 31 1 187 1 54 6 247 2 14 1 355 1 248 2 250 1 84 2 142 1 
1 18 16 2 40 4 275 1 277 1 360 1 22 3 126 2 150 2 63 1 8 1 204 8 237 5 208 1 239 4 370 1 313 1 158 1 105 1 371 1 10 3 31 1 187 1 54 10 76 1 247 2 14 4 355 1 248 8 35 1 250 4 84 2 142 1 
1 16 16 2 40 4 277 1 22 3 126 2 150 3 63 1 8 1 204 7 178 1 237 6 239 4 370 1 158 2 371 1 10 3 31 1 187 1 54 9 247 3 14 4 355 1 248 8 250 4 84 3 142 1 
1 7 16 1 275 2 105 3 10 3 360 3 22 1 150 3 54 3 76 1 204 4 35 1 237 6 
1 18 16 2 40 4 275 1 277 1 360 1 22 3 126 2 150 1 63 1 8 1 204 8 178 1 237 4 208 1 239 4 370 1 158 1 105 1 371 1 10 3 31 1 187 1 54 10 76 1 247 2 14 4 355 1 248 8 35 1 250 4 84 2 142 1 
208 1 1 8 239 2 16 1 40 2 275 1 105 1 10 2 360 1 22 1 126 1 150 1 54 4 76 1 14 2 248 4 204 4 250 2 35 1 237 3 
208 1 1 6 16 1 285 1 275 1 105 1 10 2 360 1 22 1 54 3 76 1 204 3 35 1 237 2 
239 1 1 4 16 1 40 1 158 1 313 1 10 1 22 1 150 1 54 2 247 1 14 1 248 2 204 2 250 1 84 1 237 2 
1 7 16 1 158 1 10 1 22 1 287 1 187 1 150 1 54 3 247 1 63 1 355 2 204 4 84 1 237 2 
1 20 16 3 40 1 275 1 360 2 22 3 126 1 150 2 204 10 237 6 208 1 239 1 158 2 105 2 10 4 372 1 287 1 187 2 54 10 76 1 247 2 14 1 355 2 248 2 35 1 250 1 84 2 318 1 
1 1 355 1 204 1 
1 1 54 1 187 1 
239 1 1 6 16 1 40 1 313 1 158 1 10 2 22 1 44 1 150 1 54 3 247 1 14 1 248 2 204 3 250 1 84 1 237 3 
1 12 16 2 40 1 277 1 22 2 150 1 63 1 8 1 204 6 237 2 239 1 370 1 158 2 371 1 10 1 31 1 187 1 54 6 247 2 14 1 355 1 248 2 250 1 84 2 142 1 
1 6 16 1 105 1 10 1 360 1 22 1 150 1 54 3 76 1 204 3 237 2 
1 3 239 1 40 1 275 1 105 1 243 1 10 1 360 1 126 1 150 1 54 1 14 1 248 2 204 2 250 1 35 1 237 2 
239 1 1 10 16 2 40 1 225 1 105 2 277 1 10 3 360 2 22 2 150 2 54 5 76 1 14 1 248 2 204 5 250 1 237 5 
239 1 1 2 40 1 277 1 22 1 150 1 54 2 247 1 14 1 248 2 250 1 237 1 
239 1 1 4 16 1 40 1 158 1 10 1 277 1 22 1 150 1 54 2 247 1 14 1 248 2 204 2 250 1 84 1 237 2 
1 3 239 3 40 3 243 1 105 1 277 1 10 1 360 1 126 1 150 1 54 1 14 3 248 6 204 2 250 3 178 1 237 2 
1 34 16 5 40 5 275 1 277 1 360 3 255 1 22 5 126 2 150 5 340 1 63 1 204 18 178 1 237 12 208 1 239 5 313 1 158 3 105 3 243 1 10 7 134 1 287 1 187 3 54 16 76 2 247 3 14 5 355 4 248 10 35 1 250 5 84 3 
24 1 29 1 81 1 261 1 140 1 37 1 96 1 
223 1 29 1 123 1 213 1 326 1 96 1 24 1 140 1 261 1 81 1 37 1 207 1 
285 1 276 1 249 1 267 1 107 1 365 1 28 1 168 1 379 1 229 1 368 1 
58 1 276 1 267 1 107 1 94 1 127 1 24 1 249 1 152 1 100 1 310 1 28 1 168 1 261 1 81 2 379 1 37 2 368 1 
58 1 276 1 242 1 9 1 267 1 94 2 307 1 127 1 215 1 24 1 249 2 152 1 100 2 310 1 28 1 168 3 66 1 261 2 81 2 379 1 193 1 37 2 368 1 
58 1 276 1 94 2 307 1 24 1 152 1 100 2 28 2 310 1 261 2 66 1 368 2 9 1 242 1 267 2 74 1 215 1 249 2 190 1 168 3 379 1 81 2 37 2 193 1 
276 1 335 2 307 1 308 1 23 1 153 1 100 1 28 3 66 1 368 3 9 1 267 3 107 1 375 1 185 1 249 1 297 1 190 1 316 2 112 1 56 1 168 4 379 1 
276 1 9 1 335 2 267 3 107 1 185 1 307 1 308 1 23 1 249 1 190 1 100 1 153 1 28 3 112 1 316 2 168 4 56 1 66 1 379 1 368 3 101 1 
276 1 211 1 267 1 28 1 379 1 368 1 
238 1 276 3 211 1 321 1 4 1 267 6 314 1 107 2 337 1 377 1 269 1 249 2 235 1 282 1 100 1 28 7 168 3 272 1 379 2 368 7 69 1 
1 6 85 2 40 2 94 1 202 1 152 1 204 3 100 1 310 1 261 1 262 1 263 1 208 1 105 1 267 1 10 2 214 1 53 1 54 3 14 2 168 1 58 1 16 1 276 1 275 1 359 1 171 1 360 1 22 1 127 1 24 2 282 1 28 1 328 2 368 1 237 2 239 2 241 1 373 1 76 1 248 4 249 1 250 2 35 1 81 2 379 1 37 2 
335 3 91 2 172 1 327 1 308 1 23 1 99 1 45 1 175 1 153 1 28 1 368 1 101 1 102 1 312 1 49 2 267 1 107 1 374 1 185 1 13 1 316 3 112 1 221 2 168 2 56 2 381 2 194 1 
276 2 211 1 267 2 308 1 337 1 249 1 282 1 283 1 100 1 28 2 168 2 379 1 368 2 
276 1 267 4 107 1 229 1 249 1 292 1 190 1 282 1 28 4 365 1 168 1 379 1 368 4 
276 2 9 1 17 1 267 2 249 1 235 1 100 1 28 2 366 1 168 1 272 1 379 1 82 1 368 2 
276 1 304 1 286 1 267 1 107 1 362 1 28 1 379 1 129 1 368 1 
238 1 276 1 321 1 267 2 92 1 249 1 282 1 28 2 168 1 379 1 368 2 
276 2 9 1 321 1 267 4 314 1 107 1 229 1 377 1 249 2 292 1 282 1 365 1 28 5 168 3 379 2 368 5 
276 2 9 1 321 1 267 4 314 1 107 1 229 1 25 1 249 2 292 1 282 1 365 1 28 5 168 3 379 2 368 5 
58 1 276 1 267 1 107 1 74 1 94 1 24 1 249 1 152 1 100 1 310 1 28 1 168 1 261 1 81 2 379 1 37 2 368 1 
276 2 9 1 267 1 337 1 249 1 235 1 100 1 28 1 168 1 272 1 379 1 368 1 69 1 
24 1 347 1 296 1 109 1 155 1 
38 1 39 1 242 1 347 2 335 2 246 1 109 2 185 1 23 1 215 1 24 1 77 1 296 1 112 1 316 2 299 1 193 1 102 1 155 2 
320 1 245 1 296 1 81 1 261 1 109 1 37 1 274 1 155 1 
38 1 296 1 246 1 
169 1 343 1 285 1 149 1 
169 1 343 1 338 1 329 1 227 1 149 1 48 1 
338 1 78 1 122 1 
343 1 169 1 329 1 227 3 348 1 125 1 149 1 338 3 110 2 356 1 141 1 48 1 
169 1 343 1 338 2 329 1 227 2 367 1 149 1 230 1 48 1 
143 1 338 1 329 1 106 1 227 1 362 1 348 1 205 1 149 1 129 1 48 1 
169 1 338 1 329 1 227 1 348 1 149 1 48 1 
169 2 343 1 338 1 329 1 227 1 348 1 48 1 
169 1 329 2 120 1 227 2 348 1 149 1 338 2 97 1 315 1 48 2 
169 1 343 1 143 1 329 1 130 1 227 3 348 1 146 1 149 2 338 3 367 2 48 1 311 1 
169 1 343 1 329 1 50 1 286 1 227 2 348 1 362 1 149 1 338 2 291 1 205 1 367 1 129 2 48 1 
169 1 343 1 143 1 329 2 266 1 227 4 348 1 146 1 149 2 230 1 338 4 367 2 48 2 
169 1 343 1 338 1 329 1 227 1 348 1 149 1 48 1 
169 2 343 2 143 1 252 1 329 1 227 4 146 1 125 1 149 3 338 4 110 1 356 1 367 2 48 1 
169 1 114 1 343 1 329 1 227 2 348 1 149 1 338 2 98 1 284 1 367 1 48 1 
169 1 343 1 338 3 110 2 329 1 280 1 356 1 227 3 348 1 125 2 149 1 48 1 
151 2 139 1 149 2 279 1 
338 1 329 1 227 1 348 1 108 1 48 1 
169 1 343 1 338 2 329 1 130 1 227 2 348 1 367 1 149 1 48 1 
88 1 
169 1 343 1 338 1 329 1 227 1 348 1 149 1 48 1 
169 1 343 1 338 3 110 1 329 1 130 1 227 3 348 1 367 1 149 1 48 1 
143 1 252 1 146 1 149 1 
169 1 149 1 

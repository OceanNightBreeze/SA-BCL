#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 2 81 3 155 5 327 1 304 9 136 1 84 1 187 2 138 1 235 1 345 6 38 1 15 1 146 1 364 1 239 4 46 1 221 2 223 1 293 2 100 2 49 1 225 2 176 2 175 1 177 1 339 1 318 9 
321 2 81 3 155 5 327 1 304 9 136 1 84 1 187 2 138 1 235 1 345 6 38 1 15 1 146 1 364 1 239 4 46 1 221 2 223 1 100 2 293 2 49 1 225 2 176 2 175 1 177 1 339 1 318 9 
321 2 81 4 155 6 327 1 304 10 136 1 84 1 187 2 138 1 235 1 345 7 38 1 15 1 146 1 364 1 239 5 46 1 221 2 223 1 100 2 293 2 49 1 225 2 176 2 175 1 177 1 339 1 318 10 
321 2 81 2 155 4 327 1 304 7 136 1 84 1 187 2 138 1 235 1 345 4 38 1 15 1 146 1 364 1 239 3 221 2 223 1 100 2 293 1 49 1 225 2 176 2 175 1 177 1 339 1 318 7 
364 1 321 1 239 2 81 1 155 3 46 1 304 4 136 1 187 1 293 2 100 1 49 1 345 3 225 1 176 1 175 1 15 1 318 4 
321 1 336 1 155 1 221 1 304 2 136 1 282 1 187 1 49 1 235 1 140 1 225 1 38 1 176 1 15 1 318 2 
187 2 239 1 49 1 345 1 81 1 155 2 176 2 221 1 15 1 304 3 136 1 84 1 318 3 
321 1 81 3 155 5 304 9 136 1 84 1 187 2 345 7 15 1 261 1 364 1 239 4 46 1 221 1 97 1 223 1 293 2 100 1 49 1 225 1 176 2 175 1 339 1 318 9 
321 1 81 3 155 5 304 9 136 1 84 1 187 2 345 7 15 1 261 1 364 1 239 4 46 1 221 1 97 1 223 1 293 2 100 1 49 1 225 1 176 2 175 1 339 1 318 9 
120 1 52 1 71 1 
120 1 222 1 369 2 
2 2 133 1 75 2 290 2 64 1 26 2 92 2 149 2 
276 1 31 2 2 2 105 1 324 1 154 1 133 1 33 2 326 1 207 1 283 1 111 1 344 1 12 1 36 1 139 1 141 1 64 1 145 2 92 2 237 1 288 1 334 1 219 1 68 1 312 1 21 1 290 3 349 2 99 1 26 3 149 2 124 2 75 2 271 1 53 1 272 1 
2 1 102 1 75 1 290 1 200 1 64 1 263 1 26 1 92 1 149 1 
320 1 56 1 3 1 120 1 171 1 290 1 26 1 267 1 160 1 257 1 102 1 258 1 52 1 92 1 
320 1 56 1 2 1 3 1 120 1 290 1 149 1 26 1 267 1 257 2 102 1 258 2 52 1 75 1 92 1 
357 1 257 1 95 1 251 1 258 1 
110 1 357 1 257 2 95 1 258 2 120 1 52 1 313 1 
357 1 257 1 258 1 
2 1 95 1 290 1 263 1 149 1 26 1 234 1 257 1 102 1 258 1 75 1 200 1 64 1 92 1 
120 1 
110 1 228 1 357 1 257 2 95 1 258 2 120 1 52 1 
55 2 357 2 59 1 206 1 10 1 110 1 257 5 328 1 306 1 258 5 259 1 346 2 42 1 347 1 19 1 95 2 120 1 292 1 368 2 370 1 52 1 273 1 
133 1 71 1 
2 1 133 2 290 2 26 2 149 1 165 1 212 1 75 1 92 2 
230 1 125 1 24 1 
31 1 334 1 105 1 68 1 21 1 154 1 133 1 33 1 326 1 290 1 26 1 124 1 111 1 209 1 36 1 237 1 
334 1 31 1 2 1 105 1 68 1 301 1 21 1 154 1 170 1 33 1 326 1 24 1 290 2 26 2 124 1 111 1 36 1 75 1 92 1 237 1 
2 3 301 1 133 1 75 3 290 3 149 1 26 3 92 3 
2 1 102 1 75 1 290 1 200 1 26 1 92 1 
2 1 165 1 102 1 212 1 75 1 290 1 26 1 92 1 149 1 
320 1 56 1 31 1 2 3 105 1 3 1 324 1 300 1 301 1 154 1 5 1 133 1 33 1 326 1 207 1 283 1 111 1 257 1 36 1 139 1 258 1 212 1 64 1 145 2 92 3 237 1 288 1 334 1 219 1 68 1 312 1 21 1 170 1 290 4 349 1 99 1 149 2 26 4 124 1 267 1 102 1 75 3 271 1 53 1 
2 1 301 1 133 1 39 1 75 1 171 1 290 2 26 2 92 2 
320 1 56 1 2 3 3 1 300 1 301 2 120 1 170 1 290 3 149 1 26 3 267 1 257 1 258 1 102 1 212 1 75 3 274 1 92 3 
2 2 301 1 290 2 24 1 149 1 26 2 125 1 212 1 75 2 92 2 
31 1 334 1 105 1 68 1 21 1 154 1 133 1 33 1 326 1 290 1 26 1 124 1 111 1 36 1 237 1 
31 1 334 1 105 1 132 1 68 1 154 1 133 1 33 1 290 1 26 1 124 1 111 1 36 1 354 1 237 1 
115 1 288 1 219 1 230 1 324 1 310 1 312 2 121 1 24 1 349 2 34 1 99 1 283 1 194 1 317 1 125 1 76 1 53 1 145 2 
56 1 2 1 102 1 75 1 290 1 26 1 92 1 91 1 
2 4 301 2 170 1 133 1 171 1 193 1 290 5 26 5 149 1 188 1 212 1 39 1 75 4 92 5 
2 2 102 1 75 2 290 2 200 1 91 1 26 2 92 2 
178 1 242 1 
178 1 242 1 
116 1 13 1 
116 1 13 1 
116 1 13 1 
114 1 178 1 242 1 
192 1 178 1 242 1 
284 1 116 1 13 1 178 2 242 2 169 1 
114 1 178 1 242 1 
114 1 178 1 242 1 
302 1 178 1 242 1 
302 1 178 1 242 1 
302 1 178 1 242 1 
238 1 252 2 120 1 23 1 70 1 291 2 8 1 242 2 9 1 257 2 258 2 166 3 178 2 14 2 191 1 113 1 333 2 169 1 181 2 
192 1 2 2 238 1 367 1 252 1 133 1 290 2 241 1 242 1 26 2 305 1 137 1 257 1 258 1 166 1 88 1 75 2 351 1 178 1 14 1 92 2 333 1 129 1 181 1 
100 1 321 1 225 1 
321 1 225 1 282 1 
348 1 100 2 321 3 180 1 352 1 282 1 
348 1 100 1 321 2 231 1 180 1 282 1 
100 1 348 2 321 2 180 1 282 1 
55 1 357 1 278 1 255 1 107 1 205 1 206 2 186 1 110 1 257 5 164 2 258 5 346 1 167 2 260 1 347 1 95 4 367 1 120 2 121 1 222 1 368 1 241 1 369 3 28 1 194 1 243 2 52 1 351 1 198 1 77 1 246 3 
55 2 357 6 278 3 232 1 251 5 281 1 58 1 107 2 206 6 186 1 110 1 257 9 164 6 258 9 360 1 346 2 347 1 95 7 120 5 121 3 220 1 222 3 241 4 368 2 369 9 28 2 194 3 243 6 52 1 198 3 103 5 273 1 77 3 246 8 355 1 
55 1 278 1 255 1 107 1 206 2 257 3 164 2 258 3 346 1 167 1 260 1 95 2 120 3 121 1 222 2 368 1 241 1 369 4 28 1 194 1 243 2 52 1 198 1 273 1 77 1 246 3 
55 1 278 2 281 1 255 1 107 1 206 4 257 4 164 4 258 4 360 1 346 1 167 2 260 1 95 3 120 4 121 2 220 1 222 3 368 1 241 2 369 7 28 1 194 2 243 4 52 1 198 2 273 1 77 2 246 5 
111 1 331 1 71 1 
111 1 353 1 
315 1 
111 1 154 1 
111 3 37 1 154 1 331 2 30 1 237 1 
111 1 154 1 237 1 
111 1 62 1 
115 2 247 1 312 3 96 1 121 1 108 1 349 7 370 1 328 1 270 2 197 1 189 1 198 1 89 1 76 3 141 4 78 1 
115 2 247 1 312 3 96 1 121 1 108 1 349 7 370 1 328 1 270 2 197 1 189 1 198 1 89 1 76 3 141 4 78 1 
115 2 247 1 312 3 96 1 121 1 254 1 108 1 349 7 370 1 328 1 270 2 197 1 189 1 198 1 89 1 76 3 141 4 78 1 
247 2 356 1 278 3 108 2 283 1 158 1 328 2 189 1 141 16 89 5 307 4 90 1 145 2 66 1 115 5 288 1 312 15 45 1 96 1 121 4 349 31 172 1 99 1 370 2 371 1 194 3 270 3 197 1 198 4 76 10 179 3 53 1 77 3 78 1 
247 1 108 1 283 2 328 1 329 1 189 1 141 5 89 1 190 1 145 4 115 3 288 2 312 4 45 1 96 1 121 1 349 9 99 2 370 1 270 2 197 1 198 1 76 4 53 2 
31 1 105 1 321 2 155 1 33 1 325 1 304 2 136 1 282 1 187 1 109 1 345 1 15 1 287 1 63 1 218 1 17 1 68 1 311 1 221 1 123 1 124 1 100 1 49 1 350 1 225 1 176 1 29 1 352 1 318 2 
31 1 105 1 321 2 155 1 4 1 33 1 325 1 304 3 136 1 282 1 187 1 109 1 345 2 15 1 41 1 287 1 63 1 44 1 218 1 17 1 68 1 221 1 123 1 124 1 100 1 225 1 176 1 29 1 352 1 318 3 
31 1 105 1 321 2 155 1 33 1 304 2 136 1 282 1 109 1 345 2 15 1 41 1 287 1 44 1 218 1 17 1 68 1 221 1 123 1 124 1 100 1 225 1 29 1 352 1 318 2 
31 1 249 1 105 1 79 1 4 1 154 1 33 1 304 1 187 1 111 1 36 1 343 1 361 1 17 2 68 1 221 2 123 2 124 1 268 1 176 1 29 2 201 1 318 1 
218 1 31 1 17 1 321 2 105 1 68 1 325 1 33 1 221 1 304 1 123 1 282 1 124 1 109 1 187 1 100 1 49 1 350 1 225 1 176 1 29 1 287 1 63 1 352 1 44 1 318 1 
203 1 
55 1 249 1 1 1 56 1 105 1 3 1 57 1 154 1 106 2 107 1 206 2 110 3 111 1 343 1 257 5 112 1 160 1 258 5 214 2 346 1 347 1 18 2 68 1 120 2 171 1 222 2 26 1 124 2 264 1 267 1 224 2 31 2 320 1 357 6 33 2 233 1 135 2 359 1 35 1 36 2 86 1 332 1 92 1 290 1 368 1 369 2 338 2 195 2 102 1 52 1 296 1 297 1 246 2 151 1 341 4 
228 1 56 1 320 1 1 1 357 2 3 1 171 1 233 1 290 1 135 1 26 1 110 1 267 1 257 3 112 1 160 1 102 1 258 3 296 1 332 1 92 1 341 2 
228 1 1 1 320 1 56 1 357 1 3 1 233 1 110 1 160 1 112 1 257 3 258 3 332 1 92 1 120 1 171 1 290 1 26 1 267 1 224 1 102 1 52 1 296 1 341 3 
228 1 1 1 320 1 56 1 357 2 3 1 233 1 135 1 110 1 160 1 112 1 257 3 258 3 332 1 92 1 120 1 171 1 290 1 26 1 338 1 267 1 224 1 102 1 52 1 296 1 341 3 
55 1 228 1 1 1 320 1 56 1 357 7 3 1 253 1 106 2 303 1 233 1 206 1 135 4 110 3 160 1 112 1 257 5 285 1 86 1 258 5 214 2 346 1 332 1 92 1 347 1 18 2 120 5 171 1 290 1 222 2 368 1 26 1 264 1 338 4 195 2 267 1 224 4 102 1 196 1 52 5 378 1 296 1 246 1 341 6 
55 1 56 1 1 1 3 1 57 1 106 2 206 1 110 2 257 4 112 1 160 1 258 4 346 1 214 2 347 1 18 2 120 2 171 1 222 2 26 1 264 1 267 1 224 2 320 1 357 4 233 1 135 2 86 1 332 1 92 1 290 1 368 1 369 2 338 2 195 2 102 1 52 1 296 1 246 1 341 4 
55 1 1 1 320 1 56 1 357 4 3 1 253 1 106 2 233 1 135 2 206 1 110 2 160 1 112 1 257 4 285 1 86 1 258 4 214 2 346 1 332 1 92 1 347 1 18 2 120 1 171 1 290 1 222 2 368 1 26 1 264 1 338 2 195 2 267 1 224 2 102 1 52 1 296 1 378 1 246 1 341 4 
55 1 1 1 320 1 56 1 357 4 3 1 253 1 106 2 233 1 135 2 206 1 110 2 160 1 112 1 257 4 285 1 86 1 258 4 214 2 346 1 332 1 92 1 347 1 18 2 120 1 171 1 290 1 222 2 368 1 26 1 264 1 338 2 195 2 267 1 224 2 102 1 52 1 296 1 378 1 246 1 341 4 
55 1 1 1 320 1 56 1 183 1 357 4 3 1 106 2 233 1 135 2 206 1 110 2 160 1 112 1 257 4 285 1 86 1 258 4 213 2 286 1 346 1 332 1 92 1 347 1 120 1 171 1 290 1 368 1 262 2 26 1 369 2 338 2 195 2 267 1 374 1 224 2 102 1 52 1 296 1 246 1 341 4 
55 1 1 1 320 1 56 1 357 5 3 1 253 1 106 2 303 1 233 1 206 1 135 3 110 2 160 1 112 1 257 4 285 1 86 1 258 4 214 2 346 1 332 1 92 1 347 1 18 2 120 1 171 1 290 1 222 2 368 1 26 1 264 1 338 3 195 2 267 1 224 3 102 1 52 1 378 1 296 1 246 1 341 5 
55 1 1 1 320 1 56 1 357 5 3 1 253 1 106 2 303 1 233 1 206 1 135 3 110 2 160 1 112 1 257 4 285 1 86 1 258 4 214 2 346 1 332 1 92 1 347 1 18 2 120 1 171 1 290 1 222 2 368 1 26 1 264 1 338 3 195 2 267 1 224 3 102 1 52 1 378 1 296 1 246 1 341 5 
55 1 56 1 1 1 3 1 57 1 106 2 206 1 110 2 257 4 112 1 160 1 258 4 213 2 346 1 347 1 120 1 171 1 262 2 26 1 267 1 224 2 320 1 357 4 233 1 135 2 86 1 286 1 332 1 92 1 290 1 368 1 369 2 338 2 195 2 102 1 52 1 296 1 246 1 341 4 
230 1 324 1 133 2 283 1 328 1 189 1 141 3 145 2 115 2 288 1 219 1 312 3 96 1 121 1 24 1 349 6 71 1 99 1 370 1 317 1 125 1 270 1 197 1 76 2 198 1 53 1 
276 1 0 1 356 2 230 12 278 3 324 2 133 1 184 1 283 2 139 1 141 10 89 2 307 4 145 4 217 1 288 2 219 1 312 5 314 1 24 12 349 15 99 2 371 1 376 1 125 3 198 3 76 2 179 3 53 2 77 3 
276 1 31 1 0 1 2 1 105 1 324 1 301 1 154 1 133 1 33 1 326 1 111 1 209 1 283 1 36 1 139 1 87 1 141 1 92 1 145 2 237 1 334 1 288 1 219 1 68 1 21 1 312 1 119 1 170 1 290 2 349 2 99 1 26 2 124 1 125 1 75 1 53 1 104 1 
0 1 2 1 105 1 153 1 202 1 301 1 154 1 207 1 111 1 115 1 219 2 68 1 312 2 21 1 170 1 24 2 349 5 26 2 124 1 125 2 75 1 76 3 77 1 31 1 229 1 230 2 278 1 324 2 33 1 326 1 283 2 36 1 139 1 141 3 89 2 145 4 92 1 144 1 237 1 288 2 334 1 290 2 99 2 48 1 198 1 53 2 
276 1 31 7 249 1 2 1 105 2 323 1 131 1 324 2 301 1 154 2 33 8 111 3 283 2 36 2 344 2 343 1 139 1 236 1 141 1 44 1 92 1 145 4 288 2 219 2 68 2 311 1 312 1 290 1 349 2 26 1 99 2 124 8 265 1 317 1 72 1 51 1 74 1 75 1 53 2 
0 1 2 1 230 1 278 1 324 1 283 1 212 1 141 1 145 2 92 1 115 1 288 1 219 1 312 2 121 1 24 1 290 1 349 3 149 1 99 1 26 1 194 1 125 1 126 1 75 1 76 1 198 1 53 1 77 1 
288 1 219 1 230 1 324 1 24 1 349 2 99 1 283 1 317 1 159 1 125 1 76 1 89 1 198 1 141 2 53 1 77 1 145 2 
115 1 288 1 219 1 230 1 324 1 310 1 312 2 121 1 24 1 349 2 99 1 283 1 194 1 317 1 125 1 76 1 53 1 145 2 
278 1 230 2 324 1 283 1 141 2 89 1 145 2 115 1 288 1 219 1 312 2 121 1 24 2 349 4 99 1 194 1 317 1 125 2 198 1 76 2 53 1 77 1 
288 1 219 1 230 1 324 1 24 1 349 2 99 1 283 1 72 1 159 1 125 1 76 1 89 1 198 1 141 2 53 1 77 1 145 2 
115 1 288 1 219 1 230 1 324 1 310 1 312 2 121 1 24 1 349 2 99 1 283 1 194 1 72 1 125 1 76 1 53 1 145 2 
288 1 219 1 230 1 278 1 324 1 24 1 349 2 99 1 283 1 72 1 125 1 76 1 89 1 198 1 141 2 53 1 77 1 145 2 
288 1 219 1 230 1 278 1 324 1 24 1 349 2 99 1 283 1 125 1 76 1 89 1 198 1 141 2 53 1 77 1 145 2 
276 1 31 1 105 1 324 1 154 1 133 1 33 1 326 1 207 1 111 1 283 1 36 1 139 1 141 1 145 2 237 1 334 1 288 1 219 1 68 1 21 1 312 1 290 1 349 2 26 1 99 1 124 1 53 1 
276 1 31 1 105 1 132 1 324 1 154 1 133 1 33 1 111 1 283 1 36 1 139 1 141 1 145 2 237 1 334 1 288 1 219 1 68 1 312 1 290 1 349 2 26 1 99 1 124 1 340 1 53 1 354 1 
0 1 288 1 219 1 230 1 278 1 324 1 24 1 349 2 99 1 283 1 125 1 76 1 89 1 198 1 141 2 53 1 77 1 145 2 
31 1 229 1 230 1 105 1 278 1 324 1 154 1 33 1 326 1 207 1 111 1 283 1 89 1 141 2 145 2 237 1 334 1 288 1 219 1 68 1 311 1 21 1 24 1 290 1 349 2 26 1 99 1 124 1 125 1 76 1 198 1 53 1 77 1 
0 1 2 1 278 1 230 1 324 1 283 1 212 1 89 1 141 2 145 2 92 1 288 1 219 1 290 1 24 1 349 2 316 1 149 1 99 1 26 1 125 1 75 1 76 1 198 1 53 1 77 1 
356 1 278 3 80 2 280 1 7 1 283 2 163 1 329 1 141 9 89 3 307 2 145 4 115 3 288 2 94 1 312 10 121 3 349 19 99 2 27 1 174 2 371 1 194 3 50 1 295 1 198 3 76 6 179 1 53 2 77 3 
130 1 278 3 80 4 280 1 83 1 283 3 163 2 329 1 89 2 141 14 307 2 145 6 168 1 115 2 93 1 288 3 337 1 94 2 118 1 45 2 312 12 121 2 349 26 99 3 27 1 174 1 371 2 194 2 50 1 76 4 198 3 179 2 53 3 77 3 
6 1 163 1 307 4 168 1 115 4 118 1 312 21 121 5 349 41 27 1 174 1 270 1 76 8 179 3 77 4 356 1 130 1 278 4 80 4 280 1 83 1 283 3 328 1 329 1 189 1 89 4 141 20 145 6 288 3 93 1 94 2 337 1 45 1 96 1 99 3 371 3 370 1 194 4 50 1 197 1 198 5 295 1 53 3 
356 1 130 1 278 4 80 4 6 1 280 1 83 1 283 4 163 1 328 1 329 1 189 1 141 20 89 3 307 4 168 1 145 8 115 4 93 1 288 4 337 1 94 2 118 1 45 2 312 18 96 1 121 4 349 38 99 4 27 1 174 1 370 1 371 3 194 3 50 1 270 1 197 1 295 1 198 5 76 7 179 3 53 4 77 4 
356 2 130 1 278 7 80 4 280 1 83 1 283 2 163 1 328 1 329 1 189 1 141 27 89 7 307 4 168 1 145 4 115 7 93 1 288 2 337 1 94 1 118 1 45 1 312 25 96 1 121 8 314 2 349 52 99 2 27 1 174 1 370 1 371 2 194 7 50 1 270 1 197 1 198 8 76 14 179 4 53 2 77 7 
366 1 252 1 178 1 70 1 14 1 191 1 242 1 333 1 169 1 181 1 
192 1 129 1 
342 1 289 1 252 1 178 1 14 1 142 1 242 1 333 1 181 1 
238 1 252 1 120 1 23 1 70 1 291 1 242 1 9 1 257 1 258 1 166 2 178 1 14 1 191 1 113 1 333 1 169 1 181 1 
238 1 252 1 120 1 23 1 70 1 291 1 242 1 9 1 257 1 258 1 166 2 178 1 14 1 191 1 113 1 333 1 169 1 181 1 
238 1 252 1 120 1 23 1 70 1 291 1 242 1 9 1 257 1 258 1 166 2 178 1 14 1 191 1 113 1 333 1 169 1 181 1 
114 1 284 1 43 1 
114 1 284 1 43 1 
302 1 16 1 
284 1 302 1 16 1 
305 1 88 1 
2 2 252 1 133 1 305 1 137 1 257 1 258 1 166 1 88 1 14 1 333 1 92 2 192 1 95 1 367 1 23 1 290 2 291 1 241 1 242 1 26 2 244 1 75 2 178 1 351 1 181 1 129 1 
114 1 43 1 
284 1 302 1 16 1 
276 1 0 1 152 1 31 2 105 1 131 1 324 1 154 1 33 2 111 1 283 1 344 2 85 1 139 1 141 1 330 1 92 2 145 2 288 1 219 1 68 1 312 1 22 1 290 2 349 2 98 1 26 2 99 1 124 2 74 1 53 1 
218 1 31 2 321 2 105 1 68 1 311 1 33 2 325 1 282 1 124 2 208 1 100 1 225 1 199 1 29 1 287 1 352 1 44 1 275 1 
218 1 31 1 321 2 105 1 68 1 33 1 325 1 282 1 124 1 208 1 100 1 101 1 225 1 29 1 287 1 352 1 44 1 
31 1 249 1 105 1 79 1 68 1 154 1 33 1 124 1 111 1 36 1 343 1 199 1 29 1 40 1 
218 1 31 1 321 2 105 1 68 1 33 1 325 1 282 1 124 1 208 1 100 1 225 1 199 1 29 1 287 1 352 1 44 1 275 1 
185 1 
19 1 120 1 52 1 259 1 206 1 71 1 246 1 
55 1 357 1 206 1 110 1 257 1 258 1 346 1 214 1 347 1 18 1 120 2 222 1 368 1 264 1 369 1 52 1 246 1 
55 4 105 4 3 2 154 3 256 2 107 2 59 2 206 8 110 3 111 10 257 5 164 6 258 5 62 2 259 1 346 4 65 1 347 4 117 2 19 1 68 3 311 1 120 8 121 2 222 6 25 1 124 3 77 2 353 3 182 1 31 3 277 2 357 5 278 2 32 2 279 2 33 3 358 2 35 1 36 1 37 1 331 2 237 3 362 2 363 1 368 4 47 1 369 12 48 2 243 6 194 2 52 2 198 2 246 9 
55 2 319 1 357 1 278 2 83 1 107 1 59 2 206 5 110 1 35 1 257 1 164 5 258 1 307 1 346 2 168 1 362 1 347 2 93 1 67 1 337 1 118 1 120 5 121 2 368 2 222 3 369 6 371 1 243 5 194 2 52 2 198 2 179 1 77 2 246 8 
55 1 368 1 59 1 370 1 257 1 328 1 258 1 378 1 346 1 42 1 347 1 
55 1 19 1 120 1 368 1 206 1 52 1 259 1 346 1 246 1 347 1 
278 2 120 5 121 2 59 2 206 5 222 5 369 10 48 1 243 5 194 2 164 5 198 2 77 2 246 5 362 1 
110 1 357 1 257 1 258 1 120 1 52 1 
55 2 248 1 31 4 249 1 357 4 105 1 154 1 33 4 107 2 206 2 110 2 111 1 35 2 36 2 257 3 343 1 258 3 346 2 347 1 68 1 368 2 47 2 124 4 73 1 273 1 297 1 151 1 246 2 182 1 
31 1 2 2 105 1 324 1 154 1 133 1 33 1 326 1 207 1 283 1 111 1 36 1 139 1 64 1 145 2 92 2 237 1 334 1 288 1 219 1 68 1 312 1 21 1 290 3 349 1 99 1 26 3 149 2 124 1 75 2 271 1 53 1 
55 1 120 4 107 1 222 2 206 2 368 1 369 4 243 2 35 1 164 2 270 1 52 2 346 1 246 1 347 1 
61 1 252 1 181 1 
211 1 252 1 88 1 191 1 181 1 
61 1 252 1 181 1 
61 1 252 1 181 1 
11 1 252 1 181 1 
11 1 252 1 181 1 
11 1 252 1 181 1 
252 1 181 1 
178 1 242 1 
115 2 288 2 312 4 45 1 96 1 121 1 349 8 99 2 370 1 283 2 328 1 270 1 197 1 189 1 198 1 141 4 89 1 76 3 53 2 145 4 
115 2 312 3 96 1 121 1 349 6 71 1 370 1 328 1 270 1 189 1 197 1 76 2 198 1 141 3 
115 1 288 1 278 1 312 2 121 1 349 4 99 1 194 1 283 1 76 2 198 1 141 2 89 1 215 1 53 1 77 1 145 2 
115 1 356 1 278 1 312 4 121 1 349 7 371 1 194 1 141 3 198 1 89 1 76 2 307 2 179 1 77 1 
356 1 278 2 283 2 210 1 328 2 189 1 89 4 141 11 307 2 145 4 217 1 115 5 288 2 312 12 45 2 96 1 121 3 314 1 349 23 99 2 370 2 194 2 270 1 197 1 76 9 198 3 179 2 53 2 77 2 
312 1 307 1 349 1 
141 1 179 1 349 1 
115 2 288 1 278 1 312 3 121 1 349 6 99 1 48 1 283 1 194 1 198 1 141 3 89 1 76 3 53 1 215 1 77 1 145 2 
278 2 83 1 283 1 329 1 89 1 141 6 307 1 145 2 168 1 115 1 288 1 93 1 337 1 118 1 312 6 121 2 349 12 99 1 371 1 194 2 198 2 76 2 179 1 53 1 77 2 
115 1 312 3 121 1 349 6 370 1 328 1 197 1 198 1 141 3 76 2 89 1 
115 1 288 1 312 2 45 1 96 1 349 3 99 1 370 1 283 1 210 1 328 1 189 1 141 1 89 1 76 2 53 1 145 2 
115 1 370 1 328 1 76 1 42 1 
288 1 349 2 99 1 283 1 329 1 198 1 141 2 89 1 76 1 53 1 77 1 145 2 
115 1 288 1 278 1 312 2 121 1 349 4 99 1 194 1 283 1 329 1 76 2 198 1 141 2 89 1 53 1 77 1 145 2 
115 1 288 3 45 1 312 2 349 3 99 3 370 1 283 3 210 1 328 1 329 1 295 1 76 2 89 1 141 1 53 3 145 6 
356 1 278 3 283 5 210 1 328 3 329 1 189 1 141 16 89 5 307 4 215 1 90 1 145 10 66 1 115 7 288 5 45 2 312 18 96 1 121 5 349 34 172 1 99 5 370 3 371 1 194 3 270 1 197 2 295 1 198 5 76 12 179 3 53 5 77 3 
83 1 283 1 328 1 329 1 189 1 141 4 307 1 145 2 115 2 288 1 312 4 96 1 121 1 349 8 99 1 371 1 370 1 270 1 197 1 198 1 76 2 179 1 53 1 
356 1 278 1 83 1 283 2 328 1 329 1 189 1 141 6 89 1 307 2 215 1 145 4 115 2 288 2 312 5 96 1 121 1 349 11 99 2 370 1 371 1 270 1 197 1 198 2 76 3 179 1 53 2 77 1 
278 2 83 1 283 3 328 1 329 1 189 1 89 1 141 9 307 1 215 1 145 6 168 1 115 3 288 3 93 1 337 1 118 1 312 10 45 1 96 1 121 3 349 19 99 3 370 1 371 1 194 2 270 1 197 1 198 3 76 4 179 1 53 3 77 2 
278 2 83 1 283 3 328 1 329 1 189 1 89 2 141 10 307 1 215 1 145 6 168 1 115 3 288 3 93 1 337 1 118 1 45 1 312 7 96 1 121 2 349 17 99 3 370 1 371 1 194 1 270 1 197 1 198 3 76 5 179 1 53 3 77 2 
83 1 283 1 328 1 329 1 189 1 141 4 307 1 145 2 115 2 288 1 312 4 96 1 121 1 349 8 99 1 371 1 370 1 270 1 197 1 198 1 76 2 179 1 53 1 
278 2 83 1 283 1 329 1 89 1 141 6 307 1 145 2 168 1 115 1 288 1 93 1 337 1 118 1 312 6 121 2 349 12 99 1 371 1 194 2 198 2 76 2 179 1 53 1 77 2 
278 2 83 1 283 4 328 1 329 1 189 1 89 2 141 10 307 1 215 1 145 8 168 1 115 3 93 1 288 4 337 1 118 1 312 8 45 2 96 1 121 2 349 18 99 4 370 1 371 1 194 1 270 1 197 1 198 3 76 5 179 1 53 4 77 2 
278 3 83 1 283 4 329 1 89 3 141 9 307 1 145 8 168 1 115 3 93 1 288 4 337 1 118 1 312 7 45 2 121 2 349 16 99 4 371 1 194 2 295 1 198 3 76 6 179 1 53 4 77 3 
115 3 312 4 96 1 121 1 349 7 370 3 328 3 189 2 197 1 76 6 89 3 198 1 141 3 
278 2 83 1 283 4 328 1 329 1 189 1 89 1 141 10 307 1 145 8 168 1 115 3 93 1 288 4 337 1 118 1 312 8 45 2 96 1 121 2 349 18 99 4 370 1 371 1 194 1 270 1 197 1 295 1 198 3 76 4 179 1 53 4 77 2 
245 1 133 1 39 1 171 1 290 1 26 1 92 1 
298 1 133 1 171 1 290 1 26 1 372 1 162 1 375 1 226 1 245 1 39 1 92 1 
111 1 249 1 31 1 105 1 343 1 36 1 68 1 154 1 33 1 71 1 124 1 
334 1 31 1 2 1 105 1 68 1 301 1 154 1 133 1 33 1 326 1 290 2 26 2 124 1 111 1 36 1 75 1 92 1 237 1 
31 1 320 1 56 1 277 1 2 2 105 1 301 1 154 2 133 1 33 1 326 1 111 3 62 1 92 2 237 2 334 1 68 1 290 2 47 1 26 2 124 1 102 1 75 1 
31 2 320 1 56 1 277 1 2 2 105 1 132 1 301 1 154 2 133 1 33 2 111 3 62 1 92 2 237 2 334 1 68 1 290 2 47 1 26 2 124 2 102 1 75 1 227 1 
277 1 31 3 357 1 3 1 105 1 68 1 120 1 154 1 33 3 134 1 173 1 47 1 124 3 111 4 36 1 257 2 258 2 52 1 62 1 331 1 227 1 353 1 237 1 
277 1 31 3 357 1 3 1 105 1 68 1 120 1 154 1 33 3 358 1 47 1 124 3 111 4 36 1 257 2 258 2 52 1 62 1 331 1 227 1 353 1 237 1 
31 1 265 1 105 1 68 1 33 1 124 1 
31 6 365 1 105 3 323 1 131 1 68 2 311 1 154 2 33 7 124 7 265 1 111 3 157 1 344 1 36 2 51 1 37 1 236 1 150 1 44 1 237 1 
152 1 0 1 2 1 105 1 301 1 154 1 207 1 111 1 115 2 219 2 68 1 311 1 21 1 312 3 121 1 24 1 349 6 26 2 124 1 125 1 270 1 75 1 76 2 31 1 229 1 230 1 324 2 33 1 133 2 326 1 283 2 328 1 189 1 141 3 144 1 145 4 92 1 237 1 288 2 334 1 96 1 290 2 99 2 370 1 197 1 198 1 53 2 
55 2 31 1 357 2 3 1 32 1 279 1 33 1 358 1 206 1 110 1 111 2 36 1 257 3 258 3 259 1 331 1 346 2 347 2 117 1 19 1 95 1 120 1 368 2 124 1 52 1 246 1 353 1 182 1 
31 2 105 2 68 1 311 1 154 1 33 2 124 2 265 1 111 2 37 1 331 1 65 1 237 1 
31 4 249 1 250 1 105 1 68 1 311 1 154 1 33 4 124 4 111 1 36 1 343 1 227 1 
31 2 365 1 105 2 69 1 68 1 154 1 33 2 47 1 124 2 156 1 111 1 157 1 127 1 237 1 
218 1 31 1 321 1 105 1 36 1 68 1 225 1 33 1 282 1 124 1 
31 2 105 1 131 1 68 1 311 1 154 1 33 2 124 2 111 1 330 1 44 1 
249 1 31 4 250 1 105 2 131 1 68 2 323 1 311 1 154 2 33 5 47 1 124 5 111 3 343 1 36 1 236 1 
249 1 31 4 250 1 299 1 105 2 131 1 68 2 323 1 311 1 154 2 33 5 47 1 124 5 111 3 343 1 36 1 
334 1 31 1 2 1 105 1 132 1 68 1 301 1 154 1 133 1 33 1 290 2 26 2 124 1 111 1 36 1 75 1 92 1 237 1 
31 1 365 1 105 2 68 1 154 1 33 1 47 1 124 1 111 1 157 1 37 1 150 1 237 1 
269 1 133 1 122 1 54 1 309 1 
56 1 320 1 3 1 95 1 300 1 120 1 133 1 204 1 122 2 267 1 257 2 373 1 269 2 102 1 258 2 52 1 379 1 54 1 309 2 
85 1 22 1 122 1 290 1 54 1 98 1 26 1 92 1 309 1 
373 1 379 1 54 1 
155 1 15 1 136 1 71 1 
187 1 155 1 176 1 15 1 304 1 136 1 318 1 
221 1 304 1 123 1 
82 1 155 1 304 3 136 1 60 1 187 1 49 1 176 1 38 2 308 1 15 1 318 3 
187 1 293 1 345 1 155 1 176 1 15 1 304 2 136 1 318 2 
364 1 239 1 321 1 155 1 304 1 187 1 100 1 49 1 225 1 176 1 318 1 
187 1 49 1 155 1 176 1 15 1 304 1 318 1 
187 1 49 1 176 1 15 2 304 1 136 1 318 1 
322 1 155 1 304 2 148 1 187 2 49 1 176 2 15 1 143 1 318 2 
239 1 81 1 155 2 304 3 136 1 223 1 187 1 49 1 345 2 176 1 339 1 15 1 318 3 
321 2 155 1 304 2 136 1 282 1 187 1 100 1 49 1 345 1 225 1 176 1 15 1 352 1 318 2 128 1 
239 1 81 1 155 2 46 1 304 4 136 1 187 2 293 1 49 1 345 2 176 2 15 1 318 4 
187 1 49 1 155 1 176 1 15 1 304 1 136 1 318 1 
239 1 81 1 155 3 304 4 136 2 60 1 187 1 294 1 345 2 38 1 176 1 308 1 15 2 318 4 
187 1 49 1 345 1 155 1 176 1 97 1 240 1 15 1 304 2 136 1 216 1 318 2 
187 1 49 1 377 1 155 1 38 2 176 1 308 2 15 1 304 3 136 1 60 1 318 3 
266 2 161 1 335 1 155 2 
187 1 49 1 20 1 176 1 304 1 318 1 
187 1 49 1 345 1 155 1 176 1 15 1 304 2 136 1 223 1 318 2 
147 1 
187 1 49 1 155 1 176 1 15 1 304 1 136 1 318 1 
187 1 49 1 345 1 155 1 38 1 176 1 15 1 304 3 223 1 136 1 318 3 
239 1 294 1 81 1 155 1 
155 1 15 1 

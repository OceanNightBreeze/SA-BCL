#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (218,309) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (218,309) 30 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (218,309) 30 270 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
136 2 226 1 207 1 37 1 327 1 160 3 14 4 286 1 346 2 19 1 288 1 164 2 331 2 115 1 21 2 216 1 70 2 294 1 320 5 219 2 268 6 74 1 321 1 23 1 97 9 276 1 12 9 105 1 
136 2 226 1 207 1 37 1 327 1 160 3 14 4 346 2 286 1 19 1 288 1 164 2 331 2 115 1 21 2 216 1 70 2 294 1 320 5 219 2 268 6 74 1 321 1 23 1 97 9 276 1 12 9 105 1 
136 2 226 1 207 1 37 1 327 1 160 4 14 5 346 2 286 1 19 1 288 1 164 2 331 2 115 1 21 2 216 1 70 2 294 1 320 6 219 2 268 7 74 1 321 1 23 1 97 10 276 1 12 10 105 1 
136 2 226 1 207 1 37 1 327 1 160 2 14 3 346 2 286 1 19 1 288 1 164 2 331 2 115 1 21 2 216 1 70 1 294 1 320 4 219 2 268 4 321 1 23 1 97 7 276 1 12 7 105 1 
136 1 226 1 320 3 219 1 268 3 74 1 37 1 160 1 97 4 14 2 286 1 346 1 164 1 331 1 276 1 12 4 216 1 70 2 
136 1 226 1 320 1 207 1 219 1 95 1 97 2 286 1 99 1 164 1 331 1 114 1 115 1 21 1 12 2 216 1 
136 2 226 1 320 2 268 1 23 1 160 1 97 3 14 1 286 1 331 2 21 1 12 3 216 1 
136 2 226 1 320 5 219 1 268 7 74 1 37 1 170 1 23 1 327 1 160 3 97 9 14 4 346 1 286 1 164 1 222 1 331 2 276 1 21 1 105 1 12 9 216 1 70 2 
136 2 226 1 320 5 219 1 268 7 74 1 37 1 170 1 23 1 327 1 160 3 97 9 14 4 346 1 286 1 164 1 222 1 331 2 276 1 21 1 105 1 12 9 216 1 70 2 
77 1 61 1 303 1 
77 1 336 2 121 1 
111 2 243 2 59 1 227 2 348 2 275 1 291 2 180 2 
0 1 59 1 227 3 342 1 313 1 209 2 62 1 284 1 65 2 285 1 314 1 111 2 328 1 287 2 45 1 236 1 315 1 144 1 348 2 88 1 212 1 291 2 292 1 351 1 92 1 243 2 356 1 79 1 275 1 224 1 55 1 178 2 156 1 13 1 180 3 32 2 255 1 
111 1 243 1 227 1 139 1 189 1 348 1 275 1 291 1 201 1 180 1 
148 1 227 1 139 1 150 1 295 1 344 1 77 1 337 1 249 1 348 1 303 1 102 1 91 1 180 1 
148 2 243 1 227 1 139 1 295 1 344 1 77 1 111 1 337 1 249 1 348 1 303 1 291 1 102 2 180 1 
148 1 125 1 38 1 102 1 173 1 
77 1 148 2 5 1 141 1 303 1 38 1 102 2 173 1 
148 1 102 1 173 1 
148 1 243 1 227 1 139 1 38 1 111 1 189 1 348 1 275 1 291 1 201 1 102 1 277 1 180 1 
77 1 
77 1 78 1 148 2 5 1 303 1 38 1 102 2 173 1 
256 1 148 5 257 1 245 1 2 1 231 1 196 1 38 2 173 2 233 2 77 1 113 2 130 1 5 1 303 1 349 1 102 5 155 2 133 1 
93 1 227 2 342 1 184 1 284 1 65 1 285 1 328 1 111 1 287 1 45 1 79 1 315 1 87 1 348 1 224 1 212 1 291 1 178 1 180 2 
59 1 61 1 
243 1 227 2 59 2 53 1 111 1 348 2 46 1 291 1 180 2 
60 1 87 1 146 1 
59 1 227 1 342 1 284 1 65 1 285 1 328 1 287 1 45 1 79 1 315 1 290 1 212 1 224 1 178 1 180 1 
93 1 111 3 243 1 59 1 227 3 348 3 291 3 180 3 
111 1 227 1 139 1 348 1 291 1 201 1 180 1 
111 1 53 1 243 1 227 1 139 1 348 1 46 1 291 1 180 1 
59 1 227 4 342 1 139 1 313 1 184 1 209 1 62 1 284 1 344 1 65 1 285 1 314 1 328 1 111 3 287 1 45 1 315 1 144 1 67 1 348 3 88 1 212 1 291 3 292 1 351 1 93 1 148 1 243 2 295 1 53 1 337 1 249 1 79 1 300 1 224 1 275 1 55 1 102 1 178 1 156 1 13 1 180 4 32 2 
111 1 93 1 59 1 227 2 348 2 239 1 291 1 91 1 180 2 
93 2 148 1 243 1 227 3 139 1 295 1 184 1 344 1 272 1 53 1 77 1 337 1 111 3 249 1 300 1 348 3 291 3 102 1 180 3 
111 1 53 1 243 1 227 1 87 1 348 1 291 1 180 1 
59 1 227 1 342 1 284 1 65 1 285 1 328 1 287 1 45 1 79 1 315 1 212 1 224 1 178 1 180 1 
59 1 227 1 284 1 65 1 247 1 285 1 328 1 287 1 79 1 315 1 212 1 224 1 178 1 203 1 180 1 
264 1 60 1 123 1 313 1 209 2 314 1 4 1 144 1 87 1 88 2 253 1 292 1 55 1 358 1 32 2 351 1 
111 1 227 1 139 1 348 1 291 1 84 1 344 1 180 1 
93 2 243 1 194 1 227 5 59 1 184 1 111 4 53 1 325 1 348 5 239 1 291 4 91 1 180 5 
111 2 227 2 139 1 348 2 84 1 291 2 201 1 180 2 
309 1 11 1 
309 1 11 1 
183 1 218 1 
183 1 218 1 
183 1 218 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 11 1 
309 1 29 1 30 1 11 1 
148 1 309 1 29 1 30 1 102 1 11 1 270 1 
164 1 219 1 346 1 
99 1 164 1 219 1 
279 1 99 1 164 3 334 1 221 1 346 2 
99 1 164 2 334 1 221 1 346 1 345 1 
99 1 164 2 334 2 346 1 221 1 
107 1 257 2 281 2 231 1 38 4 85 1 283 1 233 1 43 1 113 1 190 1 5 1 69 1 242 1 350 1 264 1 336 3 148 5 121 1 245 3 123 1 173 1 322 1 77 2 301 1 177 2 303 1 102 5 155 1 326 1 135 1 81 2 
138 5 257 6 281 6 36 1 258 1 231 1 38 7 85 3 233 2 43 3 113 2 165 1 190 3 5 1 349 1 242 1 118 1 350 2 264 3 336 9 148 9 121 3 245 8 123 3 125 5 173 6 322 4 248 1 77 5 273 1 177 6 303 1 102 9 155 2 326 2 
107 1 257 2 281 2 38 2 85 1 283 1 233 1 43 1 113 1 190 1 349 1 350 1 264 1 148 3 336 4 121 2 245 3 123 1 322 1 77 3 177 2 303 1 102 3 155 1 326 1 81 1 
107 1 257 4 281 4 36 1 258 1 38 3 85 2 283 1 233 1 43 2 113 1 190 2 349 1 350 1 264 2 336 7 148 4 121 3 245 5 123 2 322 2 77 4 273 1 177 4 303 1 102 4 155 1 326 1 81 2 
61 1 124 1 284 1 
316 1 284 1 
318 1 
315 1 284 1 
315 1 187 1 124 2 284 3 202 1 285 1 
315 1 284 1 285 1 
284 1 205 1 
335 1 308 1 182 1 73 1 229 1 169 2 123 1 85 1 209 7 76 1 246 2 127 1 338 3 153 1 88 3 56 1 255 4 
335 1 308 1 182 1 73 1 229 1 169 2 123 1 85 1 209 7 76 1 246 2 127 1 338 3 153 1 88 3 56 1 255 4 
335 1 308 1 182 1 73 1 229 1 169 2 123 1 85 1 209 7 76 1 246 2 24 1 127 1 338 3 153 1 88 3 56 1 255 4 
308 1 182 1 83 4 229 2 313 1 209 31 85 4 64 1 314 1 43 3 190 3 262 1 88 15 214 1 351 1 335 2 264 3 119 1 73 2 169 3 195 1 9 1 123 4 76 5 246 5 127 2 51 1 338 10 176 3 153 1 55 1 56 1 32 2 255 16 
308 1 182 1 229 1 313 2 142 1 85 1 209 9 314 2 88 4 214 1 351 2 335 1 73 1 169 2 123 1 246 3 76 1 127 1 338 4 55 2 56 1 32 4 306 1 255 5 
136 1 279 1 34 1 1 1 226 1 65 1 346 1 286 1 328 1 287 1 211 1 86 1 164 2 331 1 238 1 191 1 21 1 213 1 216 1 192 1 71 1 320 1 268 1 219 1 97 2 197 1 79 1 99 1 178 1 12 2 
279 1 136 1 1 1 226 1 65 1 346 1 328 1 287 1 211 1 164 2 331 1 238 1 191 1 21 1 213 1 216 1 192 1 71 1 320 1 219 1 268 2 97 3 197 1 174 1 298 1 79 1 99 1 178 1 304 1 12 3 
279 1 226 1 320 1 219 1 268 2 97 2 197 1 65 1 346 1 174 1 328 1 287 1 99 1 79 1 211 1 164 2 191 1 21 1 213 1 178 1 304 1 12 2 216 1 71 1 192 1 
136 1 353 1 267 1 97 1 284 1 197 2 296 1 65 1 41 1 328 1 298 1 287 1 79 1 211 2 315 1 331 1 21 2 212 1 178 1 167 1 12 1 132 1 192 2 
136 1 279 1 1 1 65 1 346 1 286 1 328 1 287 1 211 1 86 1 164 2 331 1 238 1 191 1 21 1 213 1 192 1 71 1 219 1 97 1 197 1 79 1 99 1 178 1 304 1 12 1 
26 1 
227 1 139 1 231 1 284 1 233 1 40 1 328 1 287 2 234 1 143 2 188 1 5 3 6 1 91 1 147 1 336 2 148 5 245 2 150 1 295 1 296 1 337 1 249 1 151 2 54 2 299 1 303 1 102 5 155 1 257 2 108 1 312 1 344 1 65 2 66 2 315 1 113 1 348 1 212 2 263 4 317 2 350 1 352 2 353 1 121 2 171 1 173 6 323 1 77 2 25 1 79 1 223 2 274 1 178 2 180 1 
148 3 227 1 139 1 150 1 295 1 312 1 173 2 344 1 40 1 337 1 25 1 78 1 249 1 151 1 188 1 5 1 348 1 263 2 102 3 91 1 180 1 147 1 
227 1 139 1 312 1 344 1 40 1 143 1 188 1 348 1 5 1 263 3 91 1 147 1 148 3 295 1 150 1 173 1 25 1 337 1 77 1 249 1 78 1 303 1 102 3 180 1 
227 1 139 1 312 1 344 1 40 1 143 1 188 1 5 1 348 1 263 3 91 1 317 1 147 1 148 3 295 1 150 1 173 2 25 1 337 1 77 1 78 1 249 1 151 1 303 1 102 3 180 1 
227 1 139 1 231 1 40 1 233 1 143 4 188 1 5 3 293 1 6 1 91 1 147 1 148 5 94 1 245 1 295 1 150 1 337 1 249 1 151 4 299 1 54 2 303 5 102 5 155 1 58 1 257 1 312 1 344 1 66 2 112 1 113 1 348 1 263 6 116 1 317 4 352 2 121 2 173 7 25 1 77 5 78 1 223 2 180 1 
227 1 257 1 139 1 231 1 312 1 344 1 40 1 233 1 66 2 113 1 143 2 188 1 5 2 348 1 263 4 6 1 317 2 91 1 147 1 352 2 336 2 148 4 121 2 245 1 150 1 295 1 173 4 323 1 77 2 25 1 337 1 249 1 151 2 54 2 299 1 223 2 303 1 102 4 155 1 180 1 
58 1 227 1 257 1 139 1 231 1 312 1 344 1 40 1 233 1 66 2 112 1 113 1 143 2 188 1 5 2 348 1 263 4 6 1 116 1 317 2 91 1 147 1 352 2 148 4 121 2 245 1 295 1 150 1 173 4 77 1 25 1 337 1 249 1 151 2 54 2 299 1 223 2 303 1 102 4 155 1 180 1 
58 1 227 1 257 1 139 1 231 1 312 1 344 1 40 1 233 1 66 2 112 1 113 1 143 2 188 1 5 2 348 1 263 4 6 1 116 1 317 2 91 1 147 1 352 2 148 4 121 2 245 1 295 1 150 1 173 4 77 1 25 1 337 1 249 1 151 2 54 2 299 1 223 2 303 1 102 4 155 1 180 1 
58 1 227 1 257 1 228 2 139 1 231 1 312 1 344 1 40 1 233 1 66 2 44 1 113 1 143 2 289 2 188 1 5 2 348 1 263 4 317 2 91 1 147 1 352 2 336 2 148 4 245 1 269 1 295 1 150 1 173 4 77 1 25 1 337 1 249 1 151 2 299 1 302 1 303 1 102 4 155 1 180 1 
58 1 227 1 257 1 139 1 231 1 312 1 344 1 233 1 40 1 66 2 112 1 113 1 143 3 188 1 5 2 348 1 263 5 6 1 116 1 91 1 317 3 147 1 352 2 148 4 94 1 121 2 245 1 295 1 150 1 173 5 77 1 25 1 337 1 249 1 54 2 299 1 151 3 223 2 303 1 102 4 155 1 180 1 
58 1 227 1 257 1 139 1 231 1 312 1 344 1 233 1 40 1 66 2 112 1 113 1 143 3 188 1 5 2 348 1 263 5 6 1 116 1 91 1 317 3 147 1 352 2 148 4 94 1 121 2 245 1 295 1 150 1 173 5 77 1 25 1 337 1 249 1 54 2 299 1 151 3 223 2 303 1 102 4 155 1 180 1 
227 1 257 1 228 2 139 1 231 1 312 1 344 1 40 1 233 1 66 2 113 1 143 2 289 2 188 1 5 2 348 1 263 4 317 2 91 1 147 1 352 2 336 2 148 4 245 1 150 1 295 1 173 4 323 1 77 1 25 1 337 1 249 1 151 2 299 1 302 1 303 1 102 4 155 1 180 1 
335 1 308 1 59 2 60 1 182 1 61 1 169 1 123 1 313 1 209 6 85 1 246 2 127 1 314 1 338 2 4 1 144 1 87 1 88 3 292 1 55 1 146 1 56 1 32 2 255 3 351 1 
59 1 60 7 83 2 139 1 313 2 209 9 85 2 259 1 64 1 314 2 43 2 144 1 87 7 190 2 88 3 292 2 146 6 351 2 76 1 198 1 52 1 128 1 338 1 250 1 176 2 251 1 55 2 13 1 32 4 255 6 
59 1 227 2 342 1 35 1 184 1 313 1 343 1 209 2 284 1 65 1 285 1 328 1 314 1 111 1 287 1 45 1 315 1 144 1 290 1 348 1 212 1 88 1 291 1 333 1 292 1 146 1 351 1 93 1 92 1 128 1 79 1 224 1 178 1 55 1 180 2 13 1 32 2 255 1 
227 2 184 1 85 1 284 1 285 1 328 1 287 1 43 1 45 1 144 2 87 2 190 1 88 2 291 1 292 2 146 1 93 1 246 1 338 1 55 2 156 1 13 1 255 3 342 1 60 2 313 2 209 5 65 1 110 1 111 1 314 2 315 1 261 1 348 1 212 1 215 1 351 2 168 1 122 1 128 1 79 1 224 1 178 1 180 2 32 4 
34 1 227 1 313 2 209 2 284 3 65 7 111 1 328 2 314 2 186 1 287 8 236 2 4 1 20 1 315 2 144 2 348 1 68 1 212 2 88 1 291 1 292 2 351 2 93 1 92 1 72 1 353 1 296 1 79 2 339 1 178 8 55 2 304 1 305 1 180 1 13 1 31 1 32 4 255 1 
227 1 60 1 159 1 313 1 85 1 209 3 111 1 314 1 43 1 144 1 87 1 190 1 348 1 88 2 291 1 292 1 146 1 351 1 264 1 243 1 123 1 246 1 53 1 128 1 338 1 55 1 180 1 32 2 255 1 
60 1 313 1 209 2 85 1 314 1 43 1 235 1 4 1 144 1 87 1 292 1 55 1 32 2 351 1 255 2 
264 1 60 1 123 1 313 1 209 2 314 1 4 1 144 1 87 1 88 2 292 1 55 1 358 1 32 2 351 1 
60 1 313 1 209 2 85 1 314 1 43 1 4 1 144 1 87 1 190 1 292 1 55 1 32 2 351 1 255 2 
72 1 60 1 313 1 209 2 85 1 314 1 43 1 235 1 144 1 87 1 292 1 55 1 32 2 351 1 255 2 
264 1 72 1 60 1 123 1 313 1 209 2 314 1 144 1 87 1 88 2 292 1 55 1 358 1 32 2 351 1 
72 1 60 1 313 1 209 2 85 1 314 1 43 1 144 1 87 1 190 1 292 1 55 1 32 2 351 1 255 2 
60 1 313 1 85 1 209 2 314 1 43 1 144 1 87 1 190 1 292 1 55 1 32 2 351 1 255 2 
59 1 227 1 342 1 313 1 209 2 284 1 65 1 285 1 328 1 314 1 287 1 45 1 315 1 144 1 212 1 88 1 292 1 351 1 92 1 79 1 224 1 178 1 55 1 156 1 180 1 13 1 32 2 255 1 
59 1 139 1 313 1 209 1 65 1 129 1 314 1 287 1 144 1 251 1 88 1 212 1 178 1 292 1 55 1 13 1 32 2 351 1 
60 1 313 1 209 2 85 1 128 1 314 1 43 1 144 1 87 1 190 1 292 1 55 1 32 2 351 1 255 2 
34 1 227 1 60 1 342 1 313 1 209 2 85 1 284 1 65 1 285 1 328 1 314 1 43 1 287 1 45 1 315 1 144 1 87 1 190 1 292 1 351 1 122 1 79 1 224 1 178 1 55 1 156 1 180 1 32 2 255 2 
227 1 60 1 313 1 85 1 209 2 111 1 314 1 43 1 144 1 190 1 87 1 348 1 291 1 292 1 89 1 146 1 351 1 243 1 76 1 53 1 128 1 338 1 55 1 180 1 32 2 255 2 
157 1 83 2 313 2 142 1 209 19 85 3 64 1 314 2 43 3 190 3 88 10 351 2 264 3 149 1 244 1 75 1 123 3 246 3 76 3 98 2 51 1 338 6 324 1 176 1 252 1 103 2 55 2 104 1 32 4 255 9 
157 1 83 2 313 3 142 1 209 26 85 3 314 3 43 3 260 1 163 1 190 3 88 12 214 2 351 3 264 2 149 1 319 1 354 1 123 2 75 1 76 2 246 2 98 1 51 2 338 4 324 2 176 2 103 4 55 3 80 1 104 2 32 6 255 14 278 1 
157 1 308 1 182 1 83 4 109 1 313 3 142 1 209 41 85 5 64 1 314 3 43 4 260 1 163 1 190 4 88 21 214 1 351 3 335 1 264 4 149 1 319 1 244 1 354 1 169 1 75 1 123 5 246 4 76 4 98 1 127 1 51 3 338 8 324 2 176 3 80 1 103 4 55 3 104 1 56 1 32 6 278 1 255 20 
157 1 308 1 182 1 83 4 109 1 313 4 142 1 209 38 85 5 64 1 314 4 43 4 260 1 163 1 190 4 88 18 214 2 351 4 335 1 264 3 149 1 319 1 244 1 354 1 169 1 75 1 123 4 246 4 76 3 98 1 127 1 51 3 338 7 324 2 176 3 80 1 103 4 55 4 104 1 56 1 32 8 278 1 255 20 
157 1 308 1 182 1 83 4 313 2 142 1 209 52 85 8 64 2 314 2 43 7 260 1 163 1 190 7 88 25 214 1 351 2 335 1 264 7 149 1 319 1 354 1 169 1 75 1 123 8 246 7 76 7 98 1 127 1 52 2 51 2 338 14 324 1 176 4 80 1 103 4 55 2 104 1 56 1 32 4 278 1 255 27 
227 2 313 1 209 2 284 1 65 2 328 1 314 1 287 2 330 1 236 2 315 1 20 1 144 1 348 2 88 1 292 1 351 1 92 1 128 1 79 1 339 1 101 1 131 1 225 1 178 2 55 1 179 1 180 2 13 1 32 2 255 1 
279 1 34 1 106 1 219 1 63 1 197 1 65 2 346 1 328 1 287 2 99 1 79 1 164 2 238 1 191 1 178 2 304 1 217 1 71 1 
279 1 106 1 219 1 197 1 65 1 346 1 42 1 328 1 287 1 99 1 79 1 164 2 238 1 191 1 178 1 304 1 71 1 
353 1 284 1 63 1 197 1 65 1 296 1 41 1 328 1 287 1 79 1 315 1 212 1 178 1 240 1 
279 1 106 1 219 1 63 1 197 1 65 1 346 1 328 1 287 1 99 1 79 1 164 2 238 1 191 1 178 1 304 1 217 1 71 1 
17 1 
77 1 256 1 257 1 245 1 61 1 130 1 303 1 
257 1 231 1 233 1 113 1 5 1 6 1 336 1 148 1 121 1 245 1 173 1 77 2 54 1 223 1 303 1 102 1 155 1 
34 1 281 6 231 4 85 2 284 10 233 4 285 3 328 4 287 3 43 2 187 1 190 2 332 1 5 3 145 2 241 2 148 5 336 12 193 2 47 2 245 9 337 2 100 2 152 2 303 2 102 5 155 4 205 2 256 1 158 1 257 8 161 2 15 1 65 3 18 1 315 3 113 4 261 2 212 1 316 3 350 2 117 1 264 2 265 2 121 6 124 2 123 2 171 1 173 5 77 8 79 3 130 1 177 6 178 3 
257 5 281 5 83 1 231 2 85 2 233 2 43 2 163 1 113 2 190 2 5 1 350 1 264 2 148 1 336 6 193 2 47 1 319 1 354 1 245 8 121 3 8 1 123 2 171 1 173 1 51 1 77 5 176 1 177 5 303 2 102 1 80 1 155 2 57 1 278 1 
227 1 257 2 182 1 139 1 231 1 85 2 233 1 111 1 113 1 189 1 348 1 291 1 116 1 335 1 148 1 193 2 243 1 47 1 245 2 123 1 127 1 275 1 201 1 102 1 277 1 155 1 180 1 181 1 
256 1 257 1 245 1 231 1 233 1 77 1 113 1 130 1 303 1 155 1 
264 2 336 10 193 2 47 1 257 5 281 5 121 5 245 5 123 2 85 2 77 5 43 2 261 1 190 2 177 5 
77 1 148 1 5 1 303 1 102 1 173 1 
257 2 231 1 284 1 232 1 15 1 65 4 233 2 328 1 287 4 234 1 315 1 113 2 332 2 5 2 212 2 166 1 349 1 350 2 148 3 353 1 245 2 171 2 173 4 296 1 79 1 274 1 178 4 102 3 155 2 
59 1 227 3 342 1 313 1 209 1 62 1 284 1 65 1 285 1 111 2 328 1 314 1 287 1 45 1 315 1 144 1 348 2 88 1 212 1 291 2 292 1 351 1 243 2 79 1 275 1 224 1 55 1 178 1 156 1 13 1 180 3 32 2 
336 4 257 2 281 2 121 2 245 1 169 1 231 1 171 1 233 1 77 4 113 1 177 2 303 2 155 1 350 1 
137 1 280 1 200 1 
137 1 7 1 355 1 204 1 200 1 
137 1 280 1 200 1 
137 1 280 1 200 1 
137 1 120 1 200 1 
137 1 120 1 200 1 
137 1 120 1 200 1 
137 1 200 1 
309 1 11 1 
335 1 308 1 182 1 169 1 123 1 313 2 85 1 209 8 76 1 246 2 127 1 314 2 338 3 88 4 214 1 55 2 56 1 32 4 255 4 351 2 
335 1 338 2 308 1 182 1 61 1 169 1 88 3 123 1 209 6 85 1 246 2 56 1 255 3 127 1 
264 1 282 1 123 1 313 1 85 1 209 4 246 1 76 1 314 1 338 2 43 1 190 1 88 2 55 1 32 2 351 1 255 2 
264 1 83 2 123 1 209 7 85 1 246 1 76 1 64 1 51 1 43 1 338 2 176 1 190 1 88 4 255 3 
308 1 182 1 83 2 313 2 85 3 209 23 259 1 64 1 314 2 43 2 190 2 88 12 214 2 351 2 335 2 264 2 169 1 123 3 76 4 246 5 127 2 52 1 338 9 176 2 55 2 56 1 32 4 134 1 255 11 
83 1 88 1 209 1 
176 1 209 1 255 1 
264 1 282 1 123 1 313 1 209 6 85 1 76 1 246 2 314 1 43 1 338 3 261 1 190 1 88 3 55 1 32 2 351 1 255 3 
83 1 313 1 142 1 209 12 85 2 314 1 43 2 163 1 190 2 88 6 351 1 264 2 319 1 354 1 123 2 76 1 246 1 51 1 338 2 176 1 80 1 55 1 32 2 255 6 278 1 
335 1 182 1 123 1 85 1 209 6 246 1 76 1 127 1 338 2 88 3 255 3 
335 1 308 1 313 1 209 3 76 1 246 1 127 1 314 1 338 2 88 2 214 1 55 1 56 1 134 1 32 2 255 1 351 1 
335 2 182 1 123 2 313 1 142 1 209 10 85 2 246 3 76 2 127 2 314 1 338 5 88 5 55 1 32 2 181 1 351 1 255 5 
142 1 313 1 85 1 209 2 76 1 314 1 43 1 338 1 55 1 32 2 351 1 255 2 
264 1 123 1 142 1 313 1 85 1 209 4 246 1 76 1 314 1 338 2 43 1 190 1 88 2 55 1 32 2 351 1 255 2 
335 1 244 1 142 1 313 3 209 3 246 1 76 1 127 1 314 3 338 2 88 2 214 1 55 3 134 1 32 6 351 3 255 1 
308 1 182 2 83 4 282 1 313 5 142 1 209 34 85 5 64 1 314 5 43 3 262 1 190 3 88 18 214 2 351 5 335 3 264 3 244 1 169 1 195 1 9 1 123 5 76 5 246 7 127 3 51 1 338 12 176 3 55 5 56 1 134 1 32 10 255 16 
308 1 83 1 182 1 313 1 142 1 85 1 209 8 314 1 88 4 351 1 335 1 169 1 123 1 246 2 51 1 127 1 338 2 176 1 80 1 55 1 56 1 32 2 255 4 
308 1 182 1 83 2 282 1 142 1 313 2 209 11 85 2 64 1 314 2 43 1 190 1 88 5 351 2 335 1 169 1 123 1 246 2 76 1 127 1 51 1 338 3 176 1 80 1 55 2 56 1 32 4 255 6 
308 1 182 1 83 1 282 1 313 3 142 1 209 19 85 3 314 3 43 2 163 1 190 2 88 10 214 1 351 3 335 1 264 2 319 1 354 1 169 1 123 3 76 1 246 3 127 1 51 1 338 4 176 1 80 1 55 3 56 1 32 6 255 9 278 1 
308 1 182 1 83 1 282 1 313 3 142 1 209 17 85 3 314 3 43 2 163 1 190 2 88 7 214 1 351 3 335 1 264 1 319 1 354 1 169 1 123 2 76 2 246 3 127 1 51 1 338 5 176 1 80 1 55 3 56 1 32 6 255 10 278 1 
308 1 83 1 182 1 313 1 142 1 85 1 209 8 314 1 88 4 351 1 335 1 169 1 123 1 246 2 51 1 127 1 338 2 176 1 80 1 55 1 56 1 32 2 255 4 
83 1 313 1 142 1 209 12 85 2 314 1 43 2 163 1 190 2 88 6 351 1 264 2 319 1 354 1 123 2 76 1 246 1 51 1 338 2 176 1 80 1 55 1 32 2 255 6 278 1 
308 1 182 1 83 1 282 1 313 4 142 1 209 18 85 3 314 4 43 2 163 1 190 2 88 8 214 2 351 4 335 1 264 1 319 1 354 1 169 1 123 2 76 2 246 3 127 1 51 1 338 5 176 1 80 1 55 4 56 1 32 8 255 10 278 1 
83 1 142 1 313 4 209 16 85 3 314 4 43 3 163 1 190 3 88 7 214 2 351 4 264 2 319 1 354 1 244 1 123 2 76 3 246 3 51 1 338 6 176 1 80 1 55 4 32 8 255 9 278 1 
335 3 308 2 182 1 123 1 209 7 85 1 246 3 76 3 127 3 338 6 88 4 56 1 255 3 
308 1 182 1 83 1 142 1 313 4 209 18 85 3 314 4 43 2 163 1 190 2 88 8 214 2 351 4 335 1 264 1 319 1 354 1 244 1 169 1 123 2 76 1 246 3 127 1 51 1 338 4 176 1 80 1 55 4 56 1 32 8 255 10 278 1 
59 1 227 1 357 1 348 1 239 1 91 1 180 1 
59 1 227 1 82 1 357 1 27 1 348 1 341 1 239 1 28 1 91 1 254 1 180 1 
328 1 287 1 353 1 79 1 315 1 61 1 212 1 178 1 284 1 296 1 65 1 
93 1 59 1 227 2 284 1 65 1 285 1 328 1 111 1 287 1 45 1 79 1 315 1 348 1 224 1 212 1 291 1 178 1 180 2 
59 1 227 2 139 1 161 1 284 3 344 1 65 1 285 2 111 1 328 1 287 1 45 1 315 2 332 1 348 2 291 2 93 1 249 1 79 1 224 1 178 1 180 2 205 1 
59 1 227 2 139 1 161 1 284 3 344 1 65 2 285 2 111 1 328 1 287 2 315 2 332 1 348 2 291 2 93 1 249 1 79 1 224 1 178 2 203 1 180 2 205 1 33 1 
148 2 124 1 161 1 284 4 173 1 65 3 16 1 285 1 77 1 337 1 328 1 297 1 287 3 79 1 315 1 332 1 212 1 303 1 102 2 178 3 316 1 205 1 33 1 
148 2 124 1 161 1 284 4 173 1 65 3 285 1 77 1 337 1 328 1 287 3 79 1 315 1 332 1 212 1 303 1 102 2 178 3 145 1 316 1 205 1 33 1 
328 1 287 1 79 1 68 1 178 1 65 1 
34 1 96 1 172 1 284 3 65 6 285 1 328 3 186 1 287 7 236 1 79 2 339 1 315 2 187 1 340 1 68 1 212 2 178 7 304 1 305 1 31 1 
308 1 34 1 59 2 227 2 60 1 342 1 182 1 313 2 209 6 85 1 284 1 65 1 285 1 328 1 314 2 111 1 287 1 45 1 315 1 144 2 87 1 348 1 88 3 291 1 292 2 146 1 351 2 335 1 93 1 168 1 169 1 122 1 123 1 246 2 127 1 128 1 338 2 79 1 224 1 225 1 55 2 178 1 156 1 56 1 180 2 32 4 255 3 
256 1 257 1 231 2 38 1 284 2 65 1 15 1 233 2 287 1 113 2 5 1 212 1 145 1 241 1 316 1 148 3 265 1 245 1 124 1 173 2 77 1 337 1 100 1 130 1 303 1 178 1 102 3 155 2 
34 1 158 1 124 1 284 2 65 2 285 1 328 2 287 2 79 1 315 1 187 1 68 1 178 2 
34 1 353 1 284 1 65 4 296 1 328 1 287 4 79 1 315 1 212 1 178 4 90 1 33 1 
220 1 39 1 172 1 284 1 65 2 285 1 328 2 287 2 210 1 79 1 315 1 340 1 332 1 178 2 
328 1 287 1 99 1 79 1 164 1 219 1 212 1 178 1 65 1 71 1 
328 1 287 2 34 1 79 1 315 1 339 1 131 1 178 2 304 1 284 1 65 2 
34 1 353 1 284 3 296 1 65 4 328 2 287 5 79 2 339 1 315 2 332 1 212 1 178 5 90 1 305 1 31 1 
34 1 353 1 22 1 284 3 296 1 65 4 328 2 287 5 79 2 339 1 315 2 332 1 212 1 178 5 90 1 31 1 
93 1 59 1 227 2 284 1 65 1 285 1 328 1 111 1 287 1 79 1 315 1 348 1 224 1 212 1 291 1 178 1 203 1 180 2 
96 1 172 1 284 1 65 1 285 1 328 2 287 1 79 1 315 1 187 1 340 1 332 1 178 1 
59 1 230 1 10 1 271 1 199 1 
148 2 59 1 139 1 230 2 295 1 38 1 49 1 208 1 10 2 344 1 271 2 199 1 77 1 337 1 249 1 329 1 300 1 303 1 102 2 
330 1 227 1 101 1 230 1 348 1 179 1 10 1 180 1 199 1 
208 1 49 1 199 1 
226 1 320 1 61 1 216 1 
136 1 226 1 320 1 331 1 97 1 12 1 216 1 
211 1 21 1 97 1 
136 1 307 1 226 1 206 1 320 1 97 3 50 1 286 1 331 1 115 2 12 3 216 1 
136 1 226 1 320 1 268 1 331 1 97 2 12 2 216 1 70 1 
136 1 320 1 219 1 37 1 97 1 14 1 286 1 346 1 164 1 331 1 12 1 
136 1 320 1 331 1 97 1 12 1 216 1 286 1 
136 1 226 1 331 1 97 1 12 1 216 2 286 1 
136 2 320 1 331 2 311 1 140 1 3 1 97 2 12 2 216 1 286 1 
136 1 226 1 320 2 268 2 327 1 160 1 97 3 14 1 286 1 331 1 12 3 105 1 216 1 
136 1 279 1 226 1 320 1 310 1 219 1 268 1 97 2 286 1 346 1 99 1 164 2 331 1 12 2 216 1 
136 2 226 1 320 2 268 2 74 1 160 1 97 4 14 1 286 1 331 2 12 4 216 1 70 1 
136 1 226 1 320 1 331 1 97 1 12 1 216 1 286 1 
307 1 136 1 226 2 320 3 268 2 160 1 50 1 97 4 14 1 347 1 331 1 115 1 12 4 216 2 
136 1 226 1 320 1 268 1 97 2 185 1 286 1 175 1 222 1 331 1 12 2 216 1 
136 1 307 2 226 1 320 1 266 1 50 1 97 3 286 1 331 1 115 2 12 3 216 1 
162 2 320 2 48 1 237 1 
136 1 331 1 154 1 97 1 12 1 286 1 
136 1 226 1 320 1 268 1 331 1 327 1 97 2 12 2 216 1 286 1 
126 1 
136 1 226 1 320 1 331 1 97 1 12 1 216 1 286 1 
136 1 226 1 320 1 268 1 327 1 97 3 286 1 331 1 115 1 12 3 216 1 
347 1 320 1 160 1 14 1 
320 1 216 1 

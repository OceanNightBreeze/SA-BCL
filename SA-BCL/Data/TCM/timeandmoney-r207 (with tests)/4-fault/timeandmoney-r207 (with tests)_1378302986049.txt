#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 367 35 24 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 2 195 3 238 3 345 1 72 1 125 1 372 1 291 1 232 1 293 2 129 1 280 2 119 1 
310 2 333 1 184 1 238 9 312 1 267 1 73 1 72 1 23 1 208 1 125 4 78 1 291 2 293 5 129 1 246 1 56 1 85 2 195 9 345 1 252 2 116 2 372 6 232 1 234 1 280 2 119 3 307 2 
310 2 333 1 184 1 238 9 312 1 267 1 73 1 72 1 23 1 208 1 125 4 78 1 291 2 293 5 129 1 246 1 56 1 85 2 195 9 345 1 252 2 116 2 372 6 232 1 234 1 280 2 119 3 307 2 
310 2 333 1 184 1 238 10 312 1 267 1 73 1 72 1 23 1 208 1 125 5 78 1 291 2 293 6 129 1 246 1 56 1 85 2 195 10 345 1 252 2 116 2 372 7 232 1 234 1 280 2 119 4 307 2 
310 2 333 1 184 1 238 7 312 1 267 1 73 1 72 1 23 1 208 1 125 3 78 1 291 2 293 4 129 1 246 1 56 1 85 2 195 7 345 1 252 2 116 1 372 4 232 1 280 2 119 2 307 2 
85 1 310 1 195 4 238 4 72 1 73 1 252 1 116 2 125 2 372 3 232 1 234 1 293 3 129 1 280 1 119 1 56 1 307 1 
85 1 184 1 195 2 238 2 336 1 114 1 72 1 252 1 127 1 78 1 291 1 232 1 293 1 129 1 280 1 307 1 
310 1 238 9 311 1 72 1 23 1 73 1 125 4 291 1 293 5 129 1 246 1 56 1 85 2 195 9 345 1 252 1 116 2 372 7 232 1 234 1 280 2 119 3 307 1 100 1 
310 1 238 9 311 1 72 1 23 1 73 1 125 4 291 1 293 5 129 1 246 1 56 1 85 2 195 9 345 1 252 1 116 2 372 7 232 1 234 1 280 2 119 3 307 1 100 1 
219 1 136 1 71 1 12 1 115 1 285 1 165 1 207 1 172 1 370 1 360 1 188 1 317 1 273 1 
359 1 
359 1 12 1 185 1 285 2 160 1 264 1 325 1 273 2 
112 1 359 1 321 1 12 2 285 5 104 1 185 2 2 1 140 1 258 1 327 2 259 1 37 2 19 1 68 1 152 2 160 1 264 1 273 5 
341 1 359 1 160 1 
359 1 292 2 61 1 
219 2 360 1 188 2 136 2 71 2 301 1 172 2 207 2 
144 2 103 1 237 1 313 1 71 2 43 1 147 1 207 2 106 1 269 1 340 1 360 1 290 1 188 2 362 2 216 2 108 1 128 1 364 1 219 3 136 2 33 1 319 1 249 1 346 1 11 1 301 1 91 1 251 2 172 3 254 1 303 1 66 2 118 1 158 1 357 1 98 1 
219 1 360 1 188 1 136 1 71 1 115 1 172 1 207 1 165 1 317 1 
84 1 219 1 359 1 202 1 286 1 285 1 44 1 207 1 172 1 212 1 160 1 97 1 317 1 273 1 
219 1 136 1 359 1 202 1 71 1 285 2 44 1 207 1 172 1 188 1 212 1 160 1 97 1 317 1 273 2 
88 1 12 1 185 1 285 1 273 1 
282 1 359 1 12 1 185 1 285 2 160 1 264 1 273 2 
185 1 285 1 273 1 
219 2 136 1 71 1 301 2 207 2 172 2 188 1 6 1 329 1 
337 1 316 1 242 1 
219 1 265 1 144 1 313 1 346 1 11 1 301 1 172 1 254 1 340 1 362 1 216 1 108 1 128 1 158 1 118 1 
7 1 219 2 144 1 313 1 71 1 346 1 11 1 163 1 207 1 172 2 254 1 242 1 340 1 188 1 362 1 108 1 216 1 128 1 118 1 158 1 
341 1 301 1 
7 1 219 3 136 1 188 3 71 3 301 1 172 3 207 3 
219 1 188 1 71 1 115 1 172 1 207 1 317 1 
219 1 188 1 136 1 6 1 71 1 172 1 207 1 317 1 329 1 
144 1 103 1 202 1 313 1 71 3 43 1 163 1 285 1 147 1 44 1 207 3 106 1 269 1 340 1 290 1 360 1 188 3 362 1 212 1 270 1 6 1 108 1 216 1 128 1 111 1 317 1 273 1 364 1 7 1 219 4 136 2 249 1 346 1 11 1 301 1 251 2 172 4 254 1 303 1 66 1 118 1 158 1 357 1 97 1 
84 1 7 1 219 2 188 1 71 1 301 1 34 1 172 2 207 2 
7 2 318 1 219 3 136 1 359 1 202 1 71 3 163 1 285 1 44 1 207 3 172 3 188 3 212 1 6 1 111 1 317 1 97 1 273 1 
7 1 219 2 136 1 71 2 207 2 172 2 242 1 188 2 6 1 316 1 
219 1 144 1 313 1 11 1 346 1 301 1 172 1 254 1 340 1 362 1 216 1 108 1 128 1 158 1 118 1 
219 1 144 1 313 1 11 1 346 1 301 1 172 1 254 1 256 1 340 1 362 1 257 1 216 1 128 1 118 1 
182 1 103 2 284 1 337 2 147 1 106 1 269 1 242 2 107 1 316 2 170 1 364 1 58 1 31 1 319 2 249 1 274 1 251 2 303 1 66 4 175 1 261 1 378 1 200 1 
219 1 188 1 212 1 71 1 172 1 207 1 317 1 30 1 
84 1 7 2 219 5 136 1 71 4 146 1 34 1 122 1 301 1 163 1 207 5 172 5 188 4 6 1 
219 2 188 2 71 2 115 1 172 2 207 2 317 1 30 1 
229 1 17 1 217 1 
17 2 230 1 223 1 15 1 181 1 217 2 
17 1 217 1 
17 1 217 1 
230 1 223 1 
230 1 223 1 
230 1 223 1 
17 1 287 1 217 1 
17 1 287 1 217 1 
17 1 287 1 217 1 
248 1 17 1 217 1 
248 1 17 1 217 1 
248 1 17 1 217 1 
359 1 276 1 275 3 285 2 302 1 253 1 368 1 92 1 17 2 77 1 233 2 295 1 177 2 54 2 70 2 299 2 181 1 217 2 273 2 
71 2 285 1 207 2 288 1 188 2 54 1 299 1 217 1 273 1 194 1 219 2 220 1 60 1 301 1 275 1 226 1 172 2 368 1 228 1 369 1 229 1 17 1 233 1 177 1 
171 2 310 1 127 1 133 1 252 2 
310 1 252 1 307 1 
127 1 252 1 307 1 
171 1 243 1 310 2 127 1 133 1 252 3 
171 1 310 1 328 1 127 1 133 1 252 2 
359 2 41 1 185 1 285 5 288 1 210 1 148 2 292 3 152 1 273 5 57 1 300 1 31 1 60 1 321 2 274 1 12 4 226 1 61 1 196 2 327 1 259 3 64 1 37 1 305 1 174 2 68 1 159 1 378 1 200 1 160 1 264 1 
102 1 359 5 41 1 104 1 185 6 285 9 288 4 26 1 292 9 29 1 152 2 82 1 273 9 57 2 300 2 31 3 88 5 321 6 274 3 12 7 13 1 61 3 196 6 327 2 259 8 65 5 37 2 174 6 117 1 68 1 159 3 378 3 200 3 160 1 264 1 
359 3 285 3 104 1 288 1 148 1 292 4 152 1 273 3 57 1 300 1 31 1 12 2 274 1 321 2 61 2 196 2 327 1 259 3 64 1 37 1 305 1 174 2 159 1 378 1 160 1 200 1 
102 1 359 4 285 4 104 1 288 2 148 2 26 1 292 7 152 1 273 4 57 1 300 1 31 2 12 3 274 2 321 4 61 3 196 4 327 1 259 5 37 1 64 1 305 1 174 4 117 1 159 2 378 2 160 1 200 2 
244 1 
341 1 145 1 346 1 
361 1 346 1 
346 1 118 1 
235 1 247 1 145 2 346 3 11 1 118 1 
346 1 11 1 118 1 
346 1 190 1 
218 1 103 3 31 1 334 1 284 3 319 4 105 1 154 1 66 7 278 1 294 1 110 1 377 1 261 2 180 2 342 1 355 1 200 1 
183 1 103 15 334 2 284 10 123 1 105 2 106 1 269 1 109 4 294 5 110 2 342 1 218 1 31 4 319 16 249 1 274 3 322 1 251 2 303 1 373 3 173 1 351 1 66 31 278 1 377 1 159 3 261 5 180 3 378 3 355 2 263 1 200 4 201 1 
103 4 334 1 284 4 241 1 123 1 105 1 106 2 269 2 294 1 110 1 342 1 218 1 31 1 319 5 249 2 251 4 303 2 94 1 66 9 261 3 377 1 180 2 355 1 200 1 
218 1 103 3 31 1 334 1 284 3 319 4 105 1 66 7 278 1 294 1 110 1 377 1 261 2 180 2 342 1 355 1 200 1 
218 1 103 3 31 1 334 1 284 3 319 4 105 1 66 7 278 1 294 1 110 1 377 1 261 2 180 2 342 1 355 1 200 1 
85 1 137 1 144 1 195 1 238 1 9 1 313 1 320 2 347 1 187 1 362 1 16 2 231 2 216 1 291 2 280 1 192 1 
310 1 144 1 238 1 72 1 243 1 362 1 75 1 216 1 127 1 291 1 128 1 130 1 191 1 193 1 85 1 195 1 320 1 250 1 252 2 366 1 254 1 16 1 231 1 280 1 307 1 356 1 
310 1 144 1 238 2 72 1 243 1 362 1 75 1 216 1 127 1 291 1 293 1 128 1 129 1 130 1 191 1 85 1 195 2 320 1 250 1 252 2 366 1 254 1 372 1 16 1 231 1 232 1 143 1 280 1 307 1 356 1 
310 1 144 1 238 3 243 1 362 1 75 1 216 1 127 1 291 1 151 1 293 1 128 1 129 1 130 1 191 1 193 1 85 1 137 1 195 3 320 1 250 1 252 2 366 1 254 1 372 2 16 1 231 1 232 1 280 1 307 1 
144 1 310 1 238 2 243 1 362 1 75 1 216 1 127 1 291 1 151 1 293 1 128 1 129 1 191 1 193 1 195 2 320 1 252 2 366 1 254 1 372 2 16 1 231 1 232 1 307 1 
74 1 
330 4 144 2 42 2 185 6 285 5 286 1 1 1 44 1 47 2 289 2 292 2 152 1 297 2 343 1 57 1 346 1 61 2 254 1 350 2 259 2 156 1 197 1 352 2 118 1 68 1 199 1 69 1 160 1 264 3 359 2 202 1 313 2 207 1 209 1 362 2 126 1 314 1 212 1 216 2 128 1 317 1 273 5 84 1 135 1 219 1 221 1 89 1 321 2 172 1 277 2 327 1 142 1 37 1 179 1 97 1 
330 2 84 1 219 1 221 1 202 1 185 2 285 3 286 1 44 1 207 1 172 1 47 1 325 1 126 1 212 1 199 1 179 1 343 1 317 1 97 1 264 1 273 3 
330 3 202 1 359 1 42 1 185 1 286 1 285 3 44 1 207 1 126 1 212 1 343 1 317 1 273 3 84 1 219 1 221 1 172 1 325 1 199 1 179 1 97 1 160 1 264 1 
330 3 202 1 359 1 42 1 286 1 285 3 185 2 44 1 207 1 47 1 126 1 212 1 343 1 317 1 273 3 84 1 219 1 221 1 172 1 325 1 350 1 199 1 179 1 97 1 160 1 264 1 
330 2 202 1 24 1 286 1 185 3 285 3 44 1 207 1 47 2 126 1 212 1 343 1 317 1 273 3 84 1 219 1 221 1 35 1 172 1 367 1 325 1 350 2 199 1 179 1 97 1 264 1 
330 4 42 2 285 4 286 1 185 4 44 1 47 2 289 2 292 2 152 1 343 1 297 2 61 2 350 2 259 1 156 1 352 2 68 1 69 1 199 1 160 1 264 2 202 1 359 2 207 1 209 1 126 1 212 1 317 1 273 4 84 1 219 1 221 1 321 1 172 1 277 2 327 1 37 1 179 1 97 1 
330 4 359 1 202 1 42 2 185 4 286 1 285 4 44 1 207 1 47 2 289 2 126 1 212 1 152 1 297 2 343 1 317 1 134 1 273 4 84 1 219 1 221 1 222 1 321 1 61 2 172 1 277 2 367 1 350 2 327 1 259 1 37 1 156 1 352 2 68 1 69 1 199 1 179 1 160 1 97 1 264 2 
330 4 359 1 202 1 42 2 185 4 286 1 285 4 44 1 207 1 47 2 289 2 126 1 212 1 152 1 297 2 343 1 317 1 134 1 273 4 84 1 219 1 221 1 222 1 321 1 61 2 172 1 277 2 367 1 350 2 327 1 259 1 37 1 156 1 352 2 68 1 69 1 199 1 179 1 160 1 97 1 264 2 
330 2 285 4 286 1 185 2 44 1 289 2 188 1 292 2 152 1 343 1 115 1 259 1 156 1 352 2 353 1 68 1 199 1 160 1 264 2 161 1 202 1 359 1 71 1 207 2 165 1 360 1 126 1 212 1 167 2 317 2 273 4 134 1 84 1 219 2 136 1 221 1 321 1 172 2 370 1 327 1 375 1 93 2 37 1 179 1 97 1 
330 5 359 1 202 1 42 3 286 1 285 4 185 5 44 1 207 1 47 3 289 2 126 1 212 1 152 1 297 2 343 1 317 1 134 1 273 4 84 1 219 1 221 1 222 1 321 1 61 2 172 1 35 1 277 2 367 1 350 3 327 1 259 1 37 1 156 1 352 2 68 1 69 1 199 1 179 1 160 1 97 1 264 2 
330 5 359 1 202 1 42 3 286 1 285 4 185 5 44 1 207 1 47 3 289 2 126 1 212 1 152 1 297 2 343 1 317 1 134 1 273 4 84 1 219 1 221 1 222 1 321 1 61 2 172 1 35 1 277 2 367 1 350 3 327 1 259 1 37 1 156 1 352 2 68 1 69 1 199 1 179 1 160 1 97 1 264 2 
330 2 202 1 185 1 286 1 285 3 44 1 207 1 209 1 289 1 126 1 212 1 292 1 152 1 167 1 343 1 317 1 273 3 84 1 219 1 221 1 321 1 172 1 327 1 93 1 259 1 375 1 37 1 156 1 352 1 68 1 199 1 179 1 97 1 264 1 
182 1 101 1 144 8 103 1 313 2 71 1 203 1 240 1 147 2 207 1 106 2 269 2 188 1 362 7 314 1 216 8 128 2 315 1 169 1 193 1 7 1 364 2 219 1 33 1 319 1 346 3 249 2 91 2 251 4 172 1 254 2 303 2 142 1 66 2 306 1 143 1 118 2 358 1 357 1 
21 1 103 2 284 1 71 1 337 1 147 1 207 1 106 1 242 1 269 1 188 1 6 1 316 1 364 1 219 1 136 1 31 1 319 1 249 1 274 1 251 2 172 1 303 1 66 3 261 1 159 1 378 1 96 1 200 1 
182 1 103 3 284 2 337 1 147 1 105 1 106 1 242 1 269 1 341 1 342 1 316 1 364 1 218 1 31 1 319 3 249 1 301 2 251 2 303 1 66 6 261 2 377 1 180 1 355 1 200 1 
103 6 284 2 337 11 147 2 106 2 269 2 242 11 25 1 166 1 109 3 294 1 316 4 364 1 86 1 33 1 31 1 319 8 249 2 274 2 301 1 251 4 303 2 371 1 373 3 351 1 66 14 261 1 159 2 378 1 263 1 357 1 96 1 200 2 
144 1 265 1 103 1 313 1 71 1 163 1 147 1 207 1 106 1 340 1 269 1 362 1 188 1 213 1 108 1 216 1 128 1 272 1 316 1 364 1 7 1 219 2 33 1 319 1 346 1 11 1 249 1 301 1 251 2 172 2 254 1 303 1 141 1 66 2 118 1 158 1 96 1 357 1 
144 3 103 10 284 8 337 7 43 2 147 3 105 1 106 3 340 2 242 7 188 1 4 2 108 2 294 4 53 1 342 1 193 1 7 1 249 3 11 2 346 2 301 2 251 6 254 2 303 3 66 20 158 2 118 2 261 4 159 2 262 2 355 1 357 1 200 3 313 1 71 1 163 1 205 2 207 1 269 3 362 3 216 3 79 1 128 2 316 7 364 3 218 1 219 3 33 1 31 3 319 10 274 2 227 2 172 3 377 1 180 1 378 2 96 1 99 1 
182 1 364 1 58 1 284 1 319 2 337 1 249 1 274 1 147 1 251 2 106 1 242 1 269 1 303 1 66 2 294 1 316 1 200 1 
182 1 364 1 170 1 103 2 31 1 284 1 337 1 249 1 147 1 251 2 106 1 242 1 269 1 303 1 66 2 261 1 378 1 316 1 
182 1 103 2 284 2 337 2 147 1 106 1 269 1 242 2 294 1 316 2 364 1 31 1 319 2 274 1 249 1 251 2 303 1 66 4 159 1 261 1 378 1 200 1 
364 1 58 1 284 1 319 2 337 1 249 1 274 1 240 1 147 1 251 2 106 1 242 1 269 1 303 1 66 2 294 1 316 1 200 1 
364 1 170 1 103 2 31 1 284 1 337 1 249 1 240 1 147 1 251 2 106 1 242 1 269 1 303 1 66 2 261 1 378 1 316 1 
103 2 284 2 337 2 240 1 147 1 106 1 269 1 242 2 294 1 316 2 364 1 31 1 319 2 274 1 249 1 251 2 303 1 66 4 159 1 261 1 378 1 200 1 
364 1 103 2 31 1 284 2 319 2 337 2 249 1 274 1 147 1 251 2 106 1 242 2 269 1 303 1 66 4 294 1 261 1 159 1 378 1 316 2 200 1 
144 1 103 1 313 1 43 1 147 1 106 1 340 1 269 1 362 1 108 1 216 1 128 1 364 1 219 1 33 1 319 1 11 1 346 1 249 1 301 1 251 2 172 1 254 1 303 1 66 2 118 1 158 1 357 1 
144 1 103 1 313 1 147 1 106 1 340 1 269 1 362 1 216 1 128 1 364 1 219 1 87 1 33 1 319 1 11 1 346 1 249 1 301 1 251 2 172 1 254 1 256 1 303 1 257 1 66 2 118 1 357 1 
103 2 284 2 337 2 147 1 106 1 269 1 242 2 294 1 316 2 364 1 31 1 319 2 274 1 249 1 251 2 303 1 66 4 159 1 261 1 378 1 200 1 96 1 
144 1 103 2 284 2 337 2 43 1 147 1 106 1 242 2 340 1 269 1 362 1 108 1 216 1 294 1 128 1 316 2 364 1 219 1 31 1 319 2 274 1 11 1 346 1 249 1 227 1 251 2 172 1 254 1 303 1 66 4 143 1 158 1 118 1 261 1 159 1 378 1 200 1 
103 1 284 1 71 1 337 1 147 1 207 1 106 1 269 1 242 1 188 1 6 1 294 1 316 1 364 1 219 1 136 1 31 1 319 2 249 1 274 1 251 2 348 1 172 1 303 1 66 3 159 1 378 1 96 1 200 1 
103 10 284 6 338 1 241 1 206 2 106 2 269 2 109 2 271 1 245 1 294 3 55 1 31 3 319 9 249 2 274 3 251 4 324 2 303 2 373 1 36 1 155 1 351 1 66 19 261 3 159 3 378 3 263 1 200 3 308 1 
103 12 284 4 338 1 241 1 123 2 206 4 106 3 339 1 48 1 269 3 109 2 271 1 294 2 245 1 131 1 31 2 319 14 249 3 274 3 251 6 324 1 349 1 303 3 373 2 36 2 66 26 351 2 198 1 261 2 178 1 159 3 378 2 200 3 308 2 
103 21 284 8 338 1 241 1 105 1 106 3 339 1 48 1 109 4 294 4 245 1 342 1 249 3 251 6 303 3 349 1 155 1 66 41 351 3 198 1 159 4 261 4 263 1 355 1 200 5 308 1 206 4 123 1 269 3 271 1 131 1 218 1 31 5 319 20 274 4 324 1 373 3 36 2 376 1 178 1 377 1 378 4 180 1 
103 18 284 7 338 1 241 1 123 2 206 4 105 1 339 1 106 4 48 1 269 4 109 4 271 1 245 1 294 3 342 1 131 1 218 1 31 4 319 20 249 4 274 4 251 8 324 1 349 1 303 4 373 3 36 2 376 1 155 1 351 3 66 38 198 1 377 1 178 1 261 4 159 4 180 1 378 3 355 1 263 1 200 5 308 1 
103 25 284 14 338 1 241 1 123 1 206 4 105 1 339 1 106 2 48 1 269 2 109 4 271 1 245 1 294 7 342 1 131 1 218 1 31 8 319 27 249 2 274 7 251 4 324 1 349 1 303 2 371 2 373 4 36 1 351 2 66 52 198 1 377 1 178 1 261 7 159 7 180 1 378 7 355 1 263 2 200 8 308 1 
17 1 77 1 157 1 233 1 295 1 54 1 177 1 299 1 181 1 217 1 
194 1 229 1 
281 1 17 1 233 1 239 1 54 1 177 1 299 1 83 1 217 1 
359 1 275 2 285 1 302 1 253 1 368 1 92 1 17 1 77 1 233 1 295 1 177 1 54 1 70 1 299 1 181 1 273 1 217 1 
359 1 275 2 285 1 302 1 253 1 368 1 92 1 17 1 77 1 233 1 295 1 177 1 54 1 70 1 299 1 181 1 273 1 217 1 
359 1 275 2 285 1 302 1 253 1 368 1 92 1 17 1 77 1 233 1 295 1 177 1 54 1 70 1 299 1 181 1 273 1 217 1 
304 1 287 1 15 1 
304 1 287 1 15 1 
248 1 18 1 
248 1 18 1 15 1 
369 1 228 1 
71 2 285 1 288 1 207 2 188 2 54 1 298 1 299 1 273 1 217 1 194 1 219 2 220 1 12 1 60 1 301 1 275 1 302 1 226 1 172 2 228 1 369 1 229 1 17 1 233 1 177 1 70 1 
304 1 287 1 
248 1 18 1 15 1 
144 2 103 1 204 1 203 1 147 1 124 1 207 2 106 1 269 1 362 2 216 2 128 1 80 1 169 1 364 1 219 2 33 1 319 1 346 1 249 1 91 2 251 2 172 2 254 1 303 1 374 1 66 2 118 1 20 1 96 1 357 1 
144 1 362 1 231 1 216 1 313 1 164 1 132 1 192 1 
310 1 144 1 8 1 90 1 252 2 250 1 366 1 254 1 243 1 362 1 75 1 127 1 216 1 231 1 128 1 132 1 307 1 193 1 
310 1 144 2 8 1 90 1 252 2 250 1 366 1 254 1 243 1 362 2 75 1 127 1 216 2 231 1 143 1 128 1 132 1 307 1 193 1 
310 1 144 1 8 1 252 2 250 1 366 1 254 1 243 1 362 1 75 1 363 1 127 1 216 1 231 1 128 1 307 1 193 1 
5 1 
359 1 321 1 2 1 327 1 258 1 259 1 37 1 68 1 152 1 160 1 
31 2 359 5 274 2 321 5 61 5 196 5 51 1 259 5 27 2 174 5 292 10 159 2 262 1 378 2 200 2 
359 1 285 1 185 1 160 1 273 1 264 1 
144 4 335 1 313 2 104 1 185 4 285 3 1 1 49 1 3 1 362 4 314 1 216 4 128 1 152 2 57 2 273 3 135 1 10 2 89 2 346 1 321 2 254 1 327 2 259 2 37 2 142 1 118 1 68 1 264 2 
258 1 341 1 259 1 359 1 321 1 160 1 2 1 
359 2 185 1 285 1 292 1 152 1 297 1 273 1 321 1 61 1 277 1 327 1 259 1 37 1 68 1 69 1 160 1 264 1 
236 1 38 2 235 1 144 3 39 2 145 2 185 5 285 5 44 2 2 1 186 1 49 1 51 2 189 2 292 12 152 4 190 2 57 2 10 1 346 10 11 3 61 6 196 6 254 4 258 1 259 9 118 3 68 4 159 2 262 2 160 2 200 2 264 3 162 2 359 8 313 1 361 3 362 3 216 3 214 2 27 2 128 3 81 1 273 5 31 2 89 1 274 2 321 8 327 4 37 4 143 1 174 6 279 2 378 2 
359 5 285 1 185 1 339 1 48 1 51 1 109 1 27 2 292 6 152 2 131 1 57 1 273 1 113 1 31 2 89 1 321 5 274 2 61 3 196 5 373 1 327 2 259 8 37 2 260 1 351 1 174 5 198 1 68 2 178 1 159 2 378 2 200 2 160 2 264 1 
71 1 285 1 105 1 165 1 207 1 50 1 360 1 188 1 51 1 27 2 152 1 317 1 273 1 219 1 136 1 31 1 222 1 321 2 115 1 172 1 370 1 327 1 259 2 37 1 68 1 377 1 355 1 200 2 
144 1 103 1 313 1 71 2 43 1 147 1 207 2 106 1 269 1 340 1 360 1 290 1 362 1 188 2 216 1 108 1 128 1 364 1 219 3 136 2 249 1 11 1 346 1 301 1 251 2 172 3 254 1 303 1 66 1 158 1 118 1 357 1 
359 4 89 1 321 2 61 2 196 2 327 1 259 1 37 1 292 4 174 2 68 1 152 1 180 1 160 2 57 1 
369 1 295 1 0 1 54 1 299 1 
54 1 299 1 255 1 
54 1 299 1 255 1 
54 1 299 1 255 1 
296 1 54 1 299 1 
296 1 54 1 299 1 
296 1 54 1 299 1 
54 1 299 1 
17 1 217 1 
103 5 31 2 284 5 319 5 249 1 241 1 251 2 105 2 106 1 303 1 269 1 50 1 66 10 294 2 261 3 377 1 355 2 200 2 
284 1 319 2 249 1 274 1 241 1 251 2 106 1 269 1 303 1 66 2 294 1 200 1 
103 2 31 1 284 2 319 2 249 1 274 1 241 1 251 2 106 1 269 1 303 1 66 4 294 1 261 1 159 1 378 1 200 1 
103 2 284 2 319 1 249 3 241 1 123 1 251 6 105 1 106 3 269 3 303 3 155 1 66 3 95 1 294 1 261 1 355 1 
183 1 103 18 284 12 241 1 123 2 105 3 106 5 269 5 109 4 294 5 342 1 218 1 31 5 319 16 249 5 274 3 323 1 251 10 303 5 373 3 173 1 155 1 351 1 66 34 95 1 377 2 159 3 261 7 180 1 378 3 355 3 263 1 200 5 201 1 
218 1 103 4 31 1 284 3 319 4 249 2 251 4 123 1 105 1 106 2 269 2 303 2 66 8 294 1 377 1 261 2 180 1 342 1 355 1 200 1 
218 1 103 3 31 1 284 2 319 3 105 1 341 1 66 6 261 2 377 1 180 1 342 1 355 1 200 1 
103 2 31 1 284 2 319 2 249 1 274 1 323 1 251 2 106 1 269 1 303 1 66 4 294 1 261 1 159 1 378 1 200 1 
103 4 31 1 284 2 319 3 274 1 373 1 351 1 66 7 109 2 294 1 261 1 159 1 378 1 263 1 200 1 
103 12 284 9 123 2 105 2 106 2 269 2 109 2 294 4 342 1 218 1 86 1 31 3 319 11 274 2 249 2 251 4 303 2 371 1 373 2 66 23 95 1 377 1 159 2 261 5 180 1 378 2 355 2 263 1 200 3 
103 1 66 1 109 1 
373 1 66 1 319 1 
103 3 31 1 284 3 319 3 249 1 274 1 251 2 323 1 106 1 303 1 269 1 66 6 294 1 159 1 261 2 262 1 378 1 200 1 
103 6 284 2 241 1 106 1 339 1 269 1 48 1 109 1 294 1 131 1 31 2 319 6 249 1 274 2 251 2 303 1 373 1 66 12 351 1 198 1 178 1 159 2 261 1 378 2 200 2 
103 3 31 1 284 2 319 3 105 1 66 6 294 1 377 1 261 1 355 1 200 1 
218 1 103 2 284 2 319 1 249 1 123 1 251 2 105 1 106 1 269 1 303 1 66 3 294 1 95 1 261 1 342 1 355 1 
103 4 284 2 241 1 105 1 106 1 269 1 109 1 342 1 218 1 31 1 319 4 249 1 251 2 303 1 373 1 66 8 351 1 178 1 261 2 377 1 180 1 355 1 200 1 
103 5 284 3 241 1 105 1 106 2 269 2 109 2 294 1 342 1 218 1 31 1 319 6 249 2 274 1 251 4 323 1 303 2 373 1 66 11 351 1 377 1 261 2 178 1 159 1 180 1 355 1 263 1 200 2 
103 10 284 4 241 1 123 1 105 1 106 3 339 1 48 1 269 3 109 1 294 1 342 1 131 1 218 1 31 3 319 9 249 3 274 2 323 1 251 6 303 3 373 1 66 19 351 1 198 1 377 1 178 1 159 2 261 3 180 1 378 2 355 1 200 3 
103 7 284 5 241 1 123 1 105 1 106 3 339 1 269 3 48 1 109 1 294 2 342 1 131 1 218 1 31 2 319 10 249 3 274 2 323 1 251 6 303 3 373 1 66 17 351 1 198 1 377 1 178 1 159 2 261 3 180 1 378 1 355 1 200 3 
103 4 284 2 241 1 105 1 106 1 269 1 109 1 342 1 218 1 31 1 319 4 249 1 251 2 303 1 373 1 66 8 351 1 178 1 261 2 377 1 180 1 355 1 200 1 
103 6 284 2 241 1 106 1 339 1 269 1 48 1 109 1 294 1 131 1 31 2 319 6 249 1 274 2 251 2 303 1 373 1 66 12 351 1 198 1 178 1 159 2 261 1 378 2 200 2 
103 8 284 5 241 1 123 2 105 1 106 4 339 1 48 1 269 4 109 1 294 2 342 1 131 1 218 1 31 2 319 10 249 4 274 2 323 1 251 8 303 4 373 1 66 18 351 1 198 1 377 1 178 1 159 2 261 3 180 1 378 1 355 1 200 3 
103 7 284 6 241 1 123 2 106 4 339 1 48 1 269 4 109 1 294 3 131 1 31 2 319 9 249 4 274 3 251 8 303 4 373 1 155 1 66 16 351 1 198 1 178 1 159 3 261 3 378 2 200 3 
218 2 103 4 31 1 284 6 319 3 105 3 66 7 294 3 261 3 377 1 342 1 355 3 200 1 
103 8 284 4 241 1 123 2 105 1 106 4 339 1 48 1 269 4 109 1 294 1 342 1 131 1 218 1 31 2 319 10 249 4 274 2 251 8 303 4 373 1 155 1 66 18 351 1 198 1 377 1 178 1 159 2 261 3 180 1 378 1 355 1 200 3 
84 1 219 1 63 1 301 1 34 1 172 1 207 1 
84 1 219 1 32 1 301 1 225 1 34 1 207 1 172 1 63 1 67 1 28 1 379 1 
138 1 144 4 313 1 365 1 346 1 254 1 362 4 314 1 142 1 216 4 143 1 128 1 118 1 
144 2 10 1 40 1 11 1 346 1 46 1 254 2 362 2 76 1 216 2 79 1 128 1 118 1 344 1 
144 1 362 1 127 1 216 1 313 1 128 1 252 1 366 1 307 1 254 1 
144 2 346 1 254 1 362 2 216 2 143 1 80 1 128 1 118 1 169 1 193 1 
101 1 144 5 10 1 313 1 365 1 346 3 254 2 362 4 314 1 142 1 216 5 143 1 128 2 118 2 169 1 358 1 
101 1 144 5 10 1 313 1 365 1 346 3 254 2 362 4 314 1 142 1 216 5 143 1 128 2 118 2 169 1 120 1 
144 1 362 1 314 1 341 1 142 1 216 1 313 1 128 1 346 1 118 1 254 1 
7 1 219 2 144 1 313 1 71 1 346 1 11 1 301 1 207 1 172 2 254 1 340 1 188 1 362 1 216 1 108 1 128 1 118 1 
7 1 219 2 144 1 10 1 71 2 346 3 11 2 301 1 207 2 172 2 254 1 340 1 188 1 362 1 212 1 214 1 216 1 108 1 128 1 118 2 190 1 317 1 97 1 
144 2 71 2 207 2 340 1 362 2 188 1 212 1 216 2 214 1 128 1 190 1 317 1 7 1 219 2 138 1 10 1 11 2 346 3 301 1 172 2 254 1 256 1 118 2 97 1 
144 2 145 1 359 1 313 1 71 1 185 1 285 2 44 1 207 1 165 1 360 1 361 1 188 1 362 2 215 1 216 2 214 1 128 1 190 1 317 1 273 2 219 1 136 1 10 1 346 4 11 1 115 1 172 1 254 1 370 1 118 1 354 1 160 1 
138 1 144 3 359 1 145 1 313 1 10 1 11 1 346 4 285 2 185 1 44 1 254 1 361 1 362 3 214 1 216 3 279 1 128 1 118 1 190 1 160 1 273 2 
144 1 362 1 216 1 306 1 128 1 254 1 
235 1 101 1 144 7 313 2 40 1 11 1 346 3 91 1 254 3 326 1 362 6 216 7 306 1 143 1 128 2 315 1 118 2 169 1 358 1 344 1 193 1 
144 1 103 3 284 2 71 1 337 1 204 1 43 1 147 2 105 1 207 1 106 2 242 1 340 1 269 2 188 1 362 1 4 1 216 1 108 1 128 1 342 1 316 1 364 2 7 1 218 1 219 2 31 1 319 3 346 1 11 1 249 2 301 2 251 4 227 1 172 2 254 1 303 2 66 6 143 1 118 1 158 1 377 1 261 2 180 1 355 1 200 1 96 1 
38 1 144 1 162 1 359 1 145 1 313 1 285 3 185 2 44 1 2 1 49 1 361 1 362 1 189 1 216 1 152 2 273 3 321 1 12 1 346 2 258 1 327 2 259 1 37 2 279 1 68 2 160 1 264 1 
235 1 144 2 145 1 11 1 346 2 186 1 254 2 362 2 216 2 143 1 306 1 128 1 118 1 
7 1 219 2 144 1 313 1 71 1 346 1 11 1 301 1 207 1 172 2 254 1 340 1 256 1 188 1 362 1 216 1 128 1 118 1 
235 1 144 1 10 1 40 1 11 1 346 1 254 2 326 1 362 1 216 1 128 1 118 1 344 1 
219 1 121 1 374 1 20 1 168 1 172 1 207 1 124 1 62 1 
59 1 176 1 62 1 
121 1 266 1 301 1 168 1 62 1 
121 2 359 1 202 1 59 1 266 2 12 1 301 1 224 1 285 2 44 1 62 1 212 1 176 1 168 2 111 1 160 1 317 1 97 1 273 2 
85 1 195 1 238 1 232 1 293 1 129 1 280 1 72 1 
85 1 332 1 184 1 195 4 238 4 22 1 125 1 139 1 372 2 232 2 293 3 129 2 280 1 119 1 
85 1 195 2 238 2 14 1 72 1 372 1 150 1 232 1 293 1 129 1 280 1 100 1 
85 1 184 2 195 3 238 3 22 1 232 1 293 1 129 1 280 1 72 1 381 1 139 2 
309 1 52 1 293 2 45 2 
85 1 195 1 238 1 149 1 280 1 72 1 
372 1 85 1 195 2 238 2 232 1 293 1 129 1 23 1 280 1 72 1 
380 1 
85 1 195 1 238 1 232 1 293 1 129 1 280 1 72 1 
341 1 232 1 293 1 129 1 
85 1 195 1 238 1 232 1 293 1 129 1 280 1 
16 1 238 1 291 1 
331 1 85 1 195 3 184 2 238 3 22 1 72 1 139 1 232 1 293 1 280 1 129 1 
372 1 85 1 195 2 238 2 232 1 293 1 129 1 280 1 116 1 
85 1 310 1 195 1 238 1 293 1 73 1 280 1 72 1 252 1 307 1 125 1 
85 1 195 1 238 1 293 1 129 1 280 1 72 1 
85 1 195 1 238 1 232 1 129 2 280 1 72 1 
85 2 195 2 238 2 283 1 72 1 153 1 268 1 293 1 129 1 280 2 
85 1 195 3 238 3 72 1 23 1 125 1 372 2 232 1 293 2 129 1 280 1 246 1 119 1 
85 1 310 1 195 2 238 2 72 1 252 2 211 1 243 1 372 1 127 1 232 1 293 1 129 1 280 1 307 1 
85 2 195 4 238 4 72 1 116 1 125 1 372 2 232 1 234 1 293 2 129 1 280 2 119 1 
85 1 195 3 184 1 238 3 72 1 23 1 372 1 232 1 293 1 280 1 129 1 
332 1 293 1 119 1 125 1 
293 1 129 1 

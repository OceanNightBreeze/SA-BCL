#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 1 48 1 136 1 334 1 248 1 142 1 
351 1 48 1 136 1 334 1 248 1 142 1 
351 1 48 1 136 1 334 1 248 1 142 1 
351 1 48 1 136 1 334 1 248 1 142 1 
8 1 0 1 295 1 147 3 351 4 200 1 48 1 374 1 334 4 248 1 286 2 105 1 71 1 251 2 210 1 142 1 165 1 145 3 
134 1 255 1 242 1 147 1 295 1 351 2 48 1 334 2 374 1 248 1 369 1 105 1 71 1 142 1 74 1 99 1 
242 1 151 1 295 1 147 2 351 3 48 2 200 1 334 3 248 2 286 1 71 1 142 1 145 1 
0 1 242 1 151 1 112 1 48 2 334 9 248 2 286 4 71 1 251 2 223 1 142 1 156 1 145 7 8 1 295 1 147 5 351 9 200 3 374 1 105 1 87 1 210 1 165 1 
0 1 242 1 151 1 112 1 48 2 334 9 248 2 286 4 71 1 251 2 223 1 142 1 156 1 145 7 8 1 295 1 147 5 351 9 200 3 374 1 105 1 87 1 210 1 165 1 
161 1 349 1 66 1 
331 1 349 1 131 2 
70 2 328 2 155 2 168 2 15 2 249 1 192 1 110 2 
328 2 168 2 185 1 366 1 46 2 282 1 247 2 249 1 368 1 70 3 337 1 336 1 155 3 319 1 98 1 342 1 341 1 192 1 120 1 123 1 32 1 298 2 37 1 181 2 164 1 40 1 326 1 235 1 59 1 15 2 128 1 236 1 17 2 60 1 132 1 237 1 110 2 
70 1 328 1 329 1 155 1 168 1 318 1 21 1 15 1 192 1 110 1 
327 1 168 1 329 1 161 1 349 1 280 1 350 1 35 1 70 1 356 1 155 1 72 1 143 1 144 1 
328 1 168 1 329 1 161 1 349 1 350 2 35 2 70 1 356 1 155 1 72 1 15 1 143 1 144 1 110 1 
139 1 348 1 350 1 153 1 35 1 
213 1 161 1 348 1 349 1 350 2 153 1 306 1 35 2 
350 1 153 1 35 1 
328 1 329 1 168 1 372 1 348 1 21 1 350 1 35 1 70 1 318 1 155 1 15 1 192 1 110 1 
349 1 
213 1 161 1 348 1 349 1 14 1 350 2 153 1 35 2 
7 1 213 1 227 2 146 1 111 1 161 1 244 1 348 2 349 1 350 5 263 1 23 1 153 2 35 5 12 1 288 1 52 1 363 2 166 2 
66 1 249 1 
328 1 168 2 260 1 249 2 70 2 86 1 155 2 15 1 110 1 
230 1 51 1 104 1 
120 1 32 1 249 1 69 1 298 1 70 1 37 1 336 1 181 1 155 1 164 1 40 1 319 1 326 1 59 1 17 1 
120 1 214 1 328 1 168 1 32 1 169 1 104 1 298 1 70 2 336 1 37 1 181 1 155 2 164 1 319 1 40 1 326 1 59 1 15 1 17 1 
70 5 214 2 328 4 155 5 168 5 56 1 169 1 260 1 280 1 15 4 249 1 93 1 126 1 110 1 
314 1 70 2 328 2 329 1 155 2 168 2 21 1 15 2 
214 1 70 3 328 3 155 3 168 3 15 3 249 1 110 1 
70 1 328 1 329 1 155 1 168 1 21 1 15 1 
70 1 86 1 328 1 329 1 155 1 168 1 260 1 15 1 110 1 
214 1 328 3 168 3 329 1 185 1 169 1 46 1 282 1 247 2 249 1 368 1 70 4 337 1 336 1 155 4 72 1 319 1 98 1 342 1 341 1 192 1 143 1 144 1 252 1 120 1 32 1 260 1 350 1 324 1 35 1 298 1 37 1 356 1 181 1 164 1 40 1 326 1 235 1 59 1 15 3 60 1 17 1 237 1 110 2 
70 2 214 1 328 1 155 2 168 2 56 1 280 1 15 1 249 1 
214 2 63 1 328 3 329 1 168 3 260 1 349 1 169 1 350 1 35 1 70 3 356 1 155 3 72 1 15 3 143 1 144 1 252 1 110 1 
214 1 328 2 168 2 260 1 104 1 70 2 155 2 51 1 15 2 110 1 
120 1 32 1 249 1 298 1 70 1 37 1 336 1 181 1 155 1 164 1 40 1 319 1 326 1 59 1 17 1 
120 1 32 1 347 1 249 1 298 1 70 1 336 1 181 1 155 1 164 1 40 1 319 1 326 1 291 1 17 1 
91 1 185 1 366 2 282 2 46 4 247 2 368 1 220 1 337 1 140 1 98 1 51 2 342 1 341 1 28 1 226 1 159 1 124 1 230 2 104 2 81 1 296 1 16 1 150 1 
70 1 314 1 328 1 329 1 155 1 168 1 15 1 144 1 
5 1 148 1 
5 1 148 1 
90 1 27 1 
90 1 27 1 
90 1 27 1 
103 1 5 1 148 1 
262 1 5 1 148 1 
90 1 186 1 27 1 375 1 5 2 148 2 
103 1 5 1 148 1 
103 1 5 1 148 1 
174 1 5 1 148 1 
174 1 5 1 148 1 
174 1 5 1 148 1 
119 1 364 1 328 2 168 2 78 1 160 1 258 1 350 1 262 1 249 1 173 1 35 1 148 1 187 1 70 2 270 1 155 2 108 1 290 1 15 2 5 1 376 1 194 1 253 1 
119 2 364 3 1 1 122 1 78 2 9 1 312 1 349 1 350 2 152 2 148 2 35 2 49 1 290 2 375 1 5 2 194 2 18 1 253 1 
374 1 165 1 105 1 
255 1 374 1 105 1 
58 1 289 1 255 1 67 1 374 3 165 2 
58 1 255 1 102 1 67 1 374 2 165 1 
58 1 255 1 67 2 374 2 165 1 
213 1 91 1 64 2 311 1 331 1 216 2 153 1 285 1 187 1 288 3 54 1 345 1 227 1 7 1 161 1 348 4 124 1 349 2 350 5 263 2 353 1 35 5 82 1 83 1 108 1 16 1 376 1 131 3 211 2 363 1 166 1 150 1 
328 1 329 1 168 1 21 1 153 1 154 1 70 1 139 1 318 1 155 1 292 1 193 1 192 1 161 1 372 1 348 2 349 1 350 2 35 2 15 1 110 1 
91 1 64 2 331 2 216 1 285 1 187 1 288 3 345 1 227 1 161 1 348 2 349 3 124 1 350 3 263 2 353 1 35 3 12 1 82 1 83 1 16 1 131 4 363 1 211 2 166 1 150 1 
91 2 64 4 331 3 277 1 216 2 285 1 187 2 288 5 345 2 227 1 161 1 10 1 348 3 349 4 124 2 350 4 263 4 353 1 35 4 12 1 82 1 83 1 183 1 16 2 131 7 211 4 363 1 166 1 150 2 
326 1 66 1 29 1 
326 1 61 1 
212 1 
120 1 336 1 326 1 
294 1 326 1 
120 1 326 1 
120 1 336 1 326 3 89 1 62 1 29 2 
91 1 228 1 159 2 275 1 124 1 282 3 323 2 366 4 46 7 34 1 24 1 267 1 250 1 4 1 302 1 41 1 226 3 
91 1 228 1 159 2 275 1 124 1 282 3 323 2 366 4 46 7 34 1 24 1 267 1 250 1 4 1 302 1 41 1 226 3 
91 1 228 1 159 2 275 1 124 1 282 3 323 2 366 4 46 7 34 1 24 1 267 1 250 1 4 1 302 1 41 1 358 1 226 3 
44 4 91 4 275 2 243 1 185 1 282 15 46 31 366 16 247 2 368 1 24 1 250 2 337 1 4 1 53 1 342 1 345 3 226 10 346 3 228 1 256 1 159 5 229 1 124 4 323 3 201 1 34 1 266 1 267 2 302 5 41 2 42 1 16 3 150 3 
91 1 275 1 185 2 46 9 366 5 282 4 247 4 368 2 250 1 337 2 4 1 370 1 342 2 76 1 226 4 228 1 159 3 124 1 323 2 201 1 34 1 267 1 302 1 41 1 
242 1 135 1 48 1 334 2 248 1 172 1 289 1 71 1 319 1 142 1 145 1 158 1 254 1 255 1 77 1 147 1 295 1 351 2 374 2 11 1 298 1 105 1 127 1 181 1 88 1 40 1 303 1 165 1 17 1 149 1 
308 1 242 1 333 1 135 1 48 1 334 3 248 1 172 1 289 1 71 1 319 1 145 2 158 1 254 1 255 1 77 1 147 1 295 1 199 1 351 3 374 2 298 1 105 1 127 1 181 1 88 1 40 1 165 1 17 1 149 1 
308 1 242 1 333 1 334 2 172 1 289 1 71 1 319 1 145 2 158 1 254 1 255 1 147 1 295 1 351 2 374 2 298 1 105 1 127 1 181 1 88 1 40 1 17 1 165 1 149 1 
242 2 48 1 334 1 248 1 284 1 319 1 50 1 158 2 254 2 120 1 178 1 199 1 351 1 352 1 298 1 85 1 127 2 181 1 301 1 164 1 40 1 326 1 17 1 
308 1 242 1 135 1 48 1 334 1 248 1 172 1 289 1 319 1 142 1 158 1 254 1 255 1 77 1 351 1 374 2 11 1 298 1 105 1 127 1 181 1 88 1 40 1 165 1 17 1 149 1 
20 1 
213 3 327 1 168 1 329 1 331 2 278 2 2 1 279 1 280 1 47 4 281 1 335 1 137 1 219 1 288 2 338 1 222 2 339 1 143 1 144 1 7 1 227 1 349 2 350 5 352 1 298 2 356 1 181 2 301 1 360 2 362 2 17 2 109 2 363 1 153 6 70 1 155 1 72 1 319 1 120 1 30 1 161 1 259 1 263 2 265 2 33 2 82 1 35 5 163 1 268 1 164 2 40 1 326 1 131 2 166 1 
213 1 327 1 30 1 329 1 168 1 2 1 47 2 350 3 280 1 153 2 35 3 163 1 268 1 70 1 356 1 72 1 155 1 338 1 14 1 360 1 144 1 143 1 
213 1 327 1 30 1 329 1 168 1 161 1 2 1 349 1 47 3 350 3 280 1 153 1 35 3 163 1 268 1 70 1 356 1 72 1 155 1 338 1 14 1 222 1 144 1 143 1 
213 1 327 1 168 1 329 1 2 1 278 1 280 1 47 3 153 2 70 1 155 1 72 1 338 1 222 1 143 1 144 1 30 1 161 1 349 1 350 3 35 3 268 1 163 1 356 1 14 1 360 1 
213 3 327 1 329 1 168 1 331 2 278 4 2 1 332 1 47 6 280 1 219 1 288 1 338 1 222 4 144 1 143 1 7 1 227 1 349 5 350 5 179 1 356 1 14 1 360 4 362 2 363 1 109 2 22 1 153 7 25 1 70 1 72 1 155 1 30 1 161 5 259 1 263 1 33 2 265 2 35 5 163 1 268 1 38 1 166 1 
213 2 327 1 168 1 329 1 331 2 278 2 2 1 279 1 280 1 47 4 153 4 219 1 288 1 70 1 155 1 72 1 338 1 222 2 143 1 144 1 227 1 7 1 30 1 161 1 259 1 349 2 350 4 263 1 265 2 33 2 35 4 268 1 163 1 356 1 360 2 131 2 362 2 109 2 363 1 166 1 
213 2 327 1 168 1 329 1 331 2 278 2 2 1 280 1 47 4 22 1 153 4 219 1 288 1 70 1 155 1 72 1 338 1 222 2 143 1 144 1 7 1 227 1 30 1 161 1 259 1 349 1 350 4 179 1 263 1 265 2 33 2 35 4 268 1 163 1 356 1 38 1 360 2 362 2 109 2 363 1 166 1 
213 2 327 1 168 1 329 1 331 2 278 2 2 1 280 1 47 4 22 1 153 4 219 1 288 1 70 1 155 1 72 1 338 1 222 2 143 1 144 1 7 1 227 1 30 1 161 1 259 1 349 1 350 4 179 1 263 1 265 2 33 2 35 4 268 1 163 1 356 1 38 1 360 2 362 2 109 2 363 1 166 1 
213 2 327 1 168 1 329 1 278 2 2 1 280 1 47 4 246 1 153 4 288 1 70 1 155 1 72 1 338 1 222 2 141 1 143 1 144 1 7 1 227 1 30 1 161 1 259 1 349 1 350 4 263 1 33 2 206 2 35 4 300 1 268 1 163 1 356 1 269 2 38 1 360 2 131 2 362 2 363 1 166 1 
213 2 327 1 168 1 329 1 331 2 2 1 332 1 278 3 280 1 47 5 22 1 153 5 219 1 288 1 70 1 155 1 72 1 338 1 222 3 143 1 144 1 227 1 7 1 30 1 161 1 259 1 349 1 350 4 179 1 263 1 265 2 33 2 35 4 268 1 163 1 356 1 38 1 360 3 362 2 109 2 363 1 166 1 
213 2 327 1 168 1 329 1 331 2 2 1 332 1 278 3 280 1 47 5 22 1 153 5 219 1 288 1 70 1 155 1 72 1 338 1 222 3 143 1 144 1 227 1 7 1 30 1 161 1 259 1 349 1 350 4 179 1 263 1 265 2 33 2 35 4 268 1 163 1 356 1 38 1 360 3 362 2 109 2 363 1 166 1 
213 2 327 1 168 1 329 1 278 2 2 1 279 1 280 1 47 4 153 4 288 1 70 1 155 1 72 1 338 1 222 2 143 1 144 1 227 1 7 1 30 1 161 1 259 1 349 1 350 4 263 1 33 2 206 2 35 4 268 1 163 1 300 1 356 1 269 2 360 2 131 2 362 2 363 1 166 1 
91 1 228 1 159 2 124 1 185 1 230 1 323 1 282 3 46 6 366 3 66 1 104 1 247 2 249 2 368 1 34 1 250 1 337 1 4 1 41 1 98 1 51 1 341 1 342 1 28 1 226 2 
44 4 91 1 3 1 185 2 282 7 46 17 366 10 247 4 249 1 283 1 368 2 337 2 26 1 98 2 51 4 53 1 343 1 342 2 341 1 345 3 226 2 346 3 123 1 159 1 229 2 124 3 230 13 104 13 302 1 271 1 235 1 16 3 150 1 
214 1 328 1 168 1 169 1 185 1 282 1 46 2 366 1 247 2 249 1 368 1 69 1 70 2 336 1 337 1 155 2 319 1 98 1 51 1 342 1 341 1 120 1 123 1 32 1 125 1 298 1 37 1 181 1 164 1 271 1 40 1 208 1 326 1 59 1 235 1 15 1 17 1 272 1 
214 1 91 3 328 1 168 1 169 1 282 10 46 20 171 1 337 3 336 2 4 1 96 2 175 1 98 3 51 7 341 3 342 3 345 2 226 8 228 1 230 7 104 7 231 1 298 3 181 3 302 4 235 1 59 2 15 1 16 2 17 3 60 2 150 2 308 1 185 3 366 10 247 6 249 2 368 3 188 2 250 1 70 3 155 3 319 2 157 2 120 2 123 1 159 4 32 2 124 3 323 1 34 1 37 2 207 2 164 1 271 1 40 2 41 1 326 2 
308 1 214 1 328 1 168 1 65 1 185 2 366 1 46 2 282 1 247 4 368 2 367 1 287 1 70 1 337 2 138 1 316 1 155 1 319 2 98 2 342 2 341 2 28 1 120 2 123 1 352 1 233 1 298 8 106 1 181 8 301 1 164 2 40 2 303 1 326 3 235 1 15 1 128 2 17 7 
328 1 91 1 168 1 185 1 366 1 46 3 282 2 247 2 368 1 70 1 337 1 155 1 98 1 51 1 342 1 341 1 345 1 226 1 159 1 260 1 124 1 230 1 104 1 271 1 15 1 304 1 16 1 110 1 150 1 
185 1 124 1 230 1 46 2 366 2 104 1 247 2 368 1 220 1 337 1 302 1 98 1 51 1 16 1 341 1 342 1 28 1 226 1 
91 1 159 1 185 1 230 1 46 2 282 2 104 1 247 2 368 1 296 1 337 1 98 1 51 1 341 1 342 1 28 1 226 1 150 1 
91 1 159 1 185 1 124 1 282 2 230 2 46 4 366 2 104 2 247 2 368 1 337 1 302 1 98 1 51 2 16 1 341 1 342 1 28 1 345 1 150 1 226 2 
185 1 124 1 230 1 46 2 366 2 104 1 247 2 233 1 368 1 220 1 337 1 302 1 98 1 51 1 16 1 341 1 342 1 226 1 
91 1 159 1 185 1 230 1 46 2 282 2 104 1 247 2 233 1 368 1 296 1 337 1 98 1 51 1 341 1 342 1 226 1 150 1 
91 1 159 1 185 1 124 1 282 2 230 2 46 4 366 2 104 2 247 2 233 1 368 1 337 1 302 1 98 1 51 2 16 1 341 1 342 1 345 1 150 1 226 2 
91 1 159 1 185 1 124 1 282 2 230 2 366 2 46 4 104 2 247 2 368 1 337 1 302 1 98 1 51 2 16 1 341 1 342 1 345 1 150 1 226 2 
185 1 366 1 46 2 282 1 247 2 249 1 368 1 70 1 336 1 337 1 155 1 319 1 98 1 341 1 342 1 120 1 123 1 32 1 298 1 37 1 181 1 164 1 40 1 326 1 59 1 235 1 60 1 17 1 
185 1 366 1 46 2 282 1 247 2 249 1 368 1 70 1 336 1 337 1 155 1 319 1 98 1 291 1 341 1 342 1 120 1 123 1 32 1 347 1 297 1 298 1 181 1 164 1 40 1 326 1 235 1 17 1 
91 1 185 1 366 2 46 4 282 2 247 2 368 1 337 1 98 1 51 2 342 1 341 1 345 1 226 2 159 1 124 1 230 2 104 2 302 1 271 1 16 1 150 1 
91 1 185 1 282 2 46 4 366 2 247 2 368 1 70 1 336 1 337 1 155 1 319 1 98 1 51 2 341 1 342 1 345 1 226 2 120 1 159 1 32 1 124 1 230 2 104 2 298 1 37 1 207 1 181 1 302 1 40 1 303 1 326 1 59 1 16 1 60 1 17 1 150 1 
91 1 328 1 168 1 185 1 282 1 366 2 46 3 247 2 368 1 70 1 337 1 155 1 98 1 51 1 342 1 341 1 345 1 226 1 260 1 124 1 230 1 104 1 354 1 302 1 271 1 15 1 16 1 150 1 110 1 
44 2 91 3 185 2 92 1 282 10 46 19 366 9 247 4 368 2 337 2 317 2 53 1 342 2 344 1 345 3 76 1 226 6 55 1 346 1 159 3 321 1 229 1 124 3 232 1 180 2 302 3 209 1 16 3 361 1 150 3 
91 2 44 2 241 1 185 3 282 12 92 2 46 26 366 14 247 6 368 3 337 3 317 1 116 1 191 1 342 3 53 2 344 1 345 3 76 1 226 4 197 1 346 2 159 2 321 1 124 3 201 2 232 2 180 4 302 2 209 1 16 3 130 1 133 1 150 2 
274 1 241 1 44 5 91 5 185 3 92 2 282 22 46 44 366 22 247 6 368 3 250 1 337 3 4 1 317 1 116 1 191 1 53 3 342 3 344 1 345 5 76 1 226 8 197 1 346 3 228 1 159 4 321 1 229 2 124 6 323 1 201 1 232 1 34 1 180 4 302 4 41 1 209 1 16 5 361 1 130 1 133 1 150 4 
274 1 241 1 44 5 91 5 185 4 92 2 282 21 46 43 366 22 247 8 368 4 250 1 337 4 4 1 317 1 116 1 191 1 53 3 342 4 344 1 345 5 76 1 226 8 197 1 346 3 228 1 159 5 321 1 229 2 124 6 323 1 201 2 232 1 34 1 180 4 302 3 41 1 209 1 16 5 361 1 130 1 133 1 150 4 
241 1 44 4 91 8 185 2 92 1 282 25 46 52 366 27 247 4 283 2 368 2 250 1 337 2 4 1 317 1 116 1 191 1 53 2 342 2 344 1 345 7 76 1 226 14 197 1 346 4 228 1 159 7 321 1 229 2 124 8 323 1 201 1 232 1 34 1 180 4 302 7 41 1 209 1 16 7 130 1 133 1 150 7 
119 1 122 1 78 1 290 1 375 1 5 1 194 1 94 1 148 1 49 1 
270 1 262 1 
119 1 78 1 290 1 6 1 5 1 194 1 307 1 95 1 148 1 
103 1 176 1 
174 1 293 1 186 1 
119 1 364 2 122 1 78 1 9 1 312 1 349 1 350 1 152 1 35 1 148 1 49 1 290 1 375 1 5 1 194 1 18 1 253 1 
119 1 364 2 122 1 78 1 9 1 312 1 349 1 350 1 152 1 35 1 148 1 49 1 290 1 375 1 5 1 194 1 18 1 253 1 
119 1 364 2 122 1 78 1 9 1 312 1 349 1 350 1 152 1 35 1 148 1 49 1 290 1 375 1 5 1 194 1 18 1 253 1 
186 1 103 1 176 1 
186 1 103 1 176 1 
174 1 293 1 
174 1 293 1 186 1 
160 1 173 1 
364 1 328 2 168 2 152 1 249 1 173 1 187 1 70 2 155 2 290 1 5 1 194 1 119 1 9 1 100 1 78 1 258 1 160 1 348 1 350 1 262 1 35 1 148 1 270 1 108 1 15 2 376 1 
276 1 168 2 170 1 185 1 366 1 46 2 282 1 247 2 368 1 367 1 70 2 337 1 138 1 155 2 319 1 98 1 342 1 341 1 75 1 120 1 123 1 373 1 298 2 181 2 13 1 271 1 40 1 326 1 235 1 128 2 17 2 
308 1 254 1 255 1 167 1 101 1 135 1 374 2 202 1 298 2 105 1 289 1 181 2 88 1 319 1 40 1 303 1 165 1 17 2 149 1 
308 1 254 1 255 1 135 1 374 2 202 1 298 1 105 1 355 1 289 1 181 1 88 1 40 1 319 1 165 1 17 1 149 1 
120 1 254 1 167 1 352 1 205 1 298 1 85 1 181 1 301 1 164 1 319 1 40 1 326 1 17 1 
308 1 254 1 255 1 167 1 101 1 135 1 374 2 202 1 298 1 105 1 289 1 181 1 88 1 319 1 40 1 165 1 17 1 149 1 
322 1 
288 1 146 1 111 1 161 1 349 1 66 1 263 1 
213 1 7 1 227 1 161 1 331 1 349 2 350 1 153 1 263 1 265 1 35 1 219 1 288 1 131 1 109 1 363 1 166 1 
43 1 213 3 91 2 330 2 331 6 217 2 288 9 336 3 96 2 339 1 345 2 7 4 227 4 146 1 294 2 349 8 350 5 298 3 356 2 181 3 303 1 182 2 16 2 17 3 363 4 61 3 19 2 150 2 239 2 240 1 64 6 111 1 365 2 153 5 315 1 319 4 371 2 195 1 196 1 29 2 120 3 161 2 124 2 162 2 263 8 82 2 35 5 164 1 40 3 326 10 89 1 131 12 211 6 166 4 
213 1 239 2 64 5 44 1 241 1 91 2 331 3 45 1 153 1 288 8 116 1 339 1 371 1 191 1 53 1 345 2 227 2 7 2 346 1 161 2 349 5 124 2 350 1 263 5 82 1 35 1 36 1 16 2 130 1 131 6 211 5 363 2 133 1 166 2 150 2 
239 2 91 1 328 1 329 1 168 1 21 1 22 1 70 1 250 1 288 2 4 1 155 1 318 1 371 1 192 1 227 1 7 1 372 1 124 2 350 1 203 1 263 2 35 1 41 1 15 1 363 1 166 1 110 1 
7 1 227 1 146 1 111 1 161 1 349 1 263 1 288 1 363 1 166 1 
239 2 64 5 91 2 331 5 124 2 349 5 263 5 288 5 96 1 371 1 16 2 131 10 211 5 345 2 150 2 
213 1 161 1 349 1 350 1 153 1 35 1 
213 2 153 4 335 1 137 1 288 2 315 2 319 1 339 2 195 1 120 1 227 2 7 1 79 1 350 3 352 1 263 2 12 1 298 4 82 2 35 3 181 4 301 1 164 2 40 1 326 1 17 4 363 2 166 2 184 1 
328 2 168 2 185 1 46 1 282 1 247 2 249 1 368 1 70 3 337 1 336 1 155 3 319 1 98 1 192 1 341 1 342 1 120 1 32 1 298 1 37 1 181 1 164 1 40 1 326 1 235 1 59 1 15 2 17 1 60 1 237 1 110 2 
7 1 227 1 64 2 331 2 161 2 349 4 323 1 263 2 82 1 288 1 339 1 131 4 211 2 363 1 166 1 
78 1 114 1 194 1 
118 1 122 1 78 1 160 1 194 1 
78 1 114 1 194 1 
78 1 114 1 194 1 
78 1 80 1 194 1 
78 1 80 1 194 1 
78 1 80 1 194 1 
78 1 194 1 
5 1 148 1 
91 1 228 1 159 2 124 1 185 2 323 1 282 4 46 8 366 4 247 4 201 1 368 2 34 1 250 1 337 2 4 1 302 1 41 1 342 2 226 3 
228 1 91 1 159 2 124 1 323 1 282 3 66 1 366 3 46 6 34 1 250 1 4 1 41 1 226 2 
91 1 159 1 185 1 124 1 282 2 366 2 46 4 247 2 368 1 337 1 97 1 302 1 16 1 342 1 345 1 150 1 226 2 
346 1 91 1 44 2 159 1 229 1 124 1 282 4 46 7 366 3 302 1 16 1 53 1 345 1 150 1 226 2 
44 2 91 3 185 2 366 11 46 23 282 12 247 4 283 1 368 2 250 2 337 2 4 1 26 1 342 2 345 2 226 9 346 2 228 1 159 5 229 1 124 3 323 1 201 2 34 1 302 4 41 2 16 2 273 1 150 2 
44 1 46 1 282 1 
346 1 46 1 366 1 
91 1 159 2 185 1 124 1 282 3 46 6 366 3 247 2 368 1 337 1 97 1 96 1 302 1 16 1 342 1 345 1 226 3 150 1 
44 1 241 1 91 2 185 1 46 12 282 6 366 6 247 2 368 1 337 1 116 1 191 1 53 1 342 1 345 2 76 1 226 2 346 1 159 1 124 2 302 1 16 2 130 1 133 1 150 2 
250 1 91 1 4 1 302 1 159 1 41 1 124 1 282 3 46 6 366 3 226 2 
228 1 159 1 185 1 366 1 282 2 46 3 201 1 247 2 368 1 34 1 250 1 337 1 302 1 41 1 342 1 273 1 226 2 
91 2 159 3 185 1 124 2 366 5 46 10 282 5 247 2 203 1 368 1 250 2 337 1 4 1 302 2 41 2 342 1 76 1 226 5 
185 1 124 1 366 2 46 2 247 2 368 1 337 1 302 1 16 1 342 1 76 1 226 1 
91 1 159 1 185 1 124 1 282 2 366 2 46 4 247 2 368 1 337 1 302 1 16 1 342 1 345 1 76 1 150 1 226 2 
159 1 185 3 282 2 46 3 366 1 201 1 247 6 368 3 250 1 337 3 302 1 41 1 361 1 342 3 273 1 76 1 226 2 
44 4 91 5 243 1 185 5 282 18 46 34 366 16 247 10 368 5 250 3 337 5 4 2 97 1 53 1 342 5 345 3 76 1 226 12 346 3 228 1 159 7 229 1 124 5 323 1 201 2 34 1 266 1 302 5 41 3 42 1 16 3 361 1 273 1 150 3 
91 1 44 2 185 1 46 11 282 5 366 6 247 2 368 1 250 1 337 1 4 1 116 1 53 1 342 1 345 1 76 1 226 2 346 1 228 1 159 2 229 1 124 2 323 1 34 1 41 1 16 1 
91 1 44 2 185 2 46 11 282 5 366 6 247 4 368 2 250 1 337 2 4 1 97 1 116 1 53 1 342 2 345 1 76 1 226 3 346 1 228 1 159 2 229 1 124 2 323 1 34 1 302 1 41 1 16 1 
44 1 241 1 91 3 185 3 46 19 282 10 366 9 247 6 368 3 250 1 337 3 4 1 97 1 116 1 191 1 53 1 342 3 345 2 76 1 226 4 346 1 228 1 159 3 124 3 323 1 201 1 34 1 302 1 41 1 16 2 130 1 133 1 150 2 
44 1 241 1 91 2 185 3 46 17 282 7 366 10 247 6 368 3 250 1 337 3 4 1 97 1 116 1 191 1 53 1 342 3 345 2 76 1 226 5 346 1 228 1 159 3 124 3 323 1 201 1 34 1 302 2 41 1 16 2 130 1 133 1 150 1 
91 1 44 2 185 1 46 11 282 5 366 6 247 2 368 1 250 1 337 1 4 1 116 1 53 1 342 1 345 1 76 1 226 2 346 1 228 1 159 2 229 1 124 2 323 1 34 1 41 1 16 1 
44 1 241 1 91 2 185 1 46 12 282 6 366 6 247 2 368 1 337 1 116 1 191 1 53 1 342 1 345 2 76 1 226 2 346 1 159 1 124 2 302 1 16 2 130 1 133 1 150 2 
44 1 241 1 91 2 185 4 46 18 282 8 366 10 247 8 368 4 250 1 337 4 4 1 97 1 116 1 191 1 53 1 342 4 345 2 76 1 226 5 346 1 228 1 159 3 124 3 323 1 201 2 34 1 302 2 41 1 16 2 130 1 133 1 150 1 
44 1 241 1 91 2 185 4 46 16 282 7 366 9 247 8 368 4 337 4 116 1 191 1 53 1 342 4 345 3 76 1 226 6 346 1 159 3 124 3 201 2 302 3 16 3 361 1 130 1 133 1 150 2 
91 1 228 2 159 3 124 1 282 4 46 7 366 3 34 1 250 3 4 1 302 3 41 3 226 6 
44 1 241 1 91 2 185 4 46 18 282 8 366 10 247 8 368 4 250 1 337 4 4 1 116 1 191 1 53 1 342 4 345 2 76 1 226 4 346 1 228 1 159 3 124 3 323 1 201 2 34 1 302 1 41 1 16 2 361 1 130 1 133 1 150 1 
70 1 155 1 168 1 56 1 280 1 249 1 57 1 
168 1 56 1 280 1 249 1 57 1 234 1 299 1 189 1 70 1 155 1 377 1 238 1 
120 1 181 1 301 1 164 1 319 1 40 1 326 1 66 1 352 1 17 1 298 1 
120 1 214 1 328 1 168 1 32 1 249 1 298 1 70 2 336 1 37 1 181 1 155 2 164 1 319 1 40 1 326 1 15 1 17 1 
120 2 214 1 328 2 330 1 329 1 168 2 32 1 294 1 249 1 298 1 70 2 336 2 315 1 37 1 181 1 72 1 155 2 319 1 40 1 326 3 15 1 17 1 144 1 
214 1 328 2 168 2 329 1 330 1 249 1 70 2 315 1 336 2 155 2 72 1 319 1 291 1 144 1 120 2 32 1 294 1 298 2 181 2 40 1 326 3 15 1 305 1 17 2 
330 1 153 1 315 1 336 1 319 1 29 1 120 1 161 1 294 1 349 1 350 2 298 3 35 2 356 1 181 3 357 1 164 1 40 1 326 4 359 1 305 1 17 3 61 1 
120 1 330 1 161 1 294 1 349 1 350 2 217 1 153 1 35 2 298 3 356 1 336 1 315 1 181 3 164 1 319 1 40 1 326 4 305 1 17 3 61 1 29 1 
181 1 319 1 40 1 17 1 298 1 287 1 
120 1 257 1 113 1 298 1 84 1 336 1 181 1 164 1 40 1 319 2 326 1 89 1 17 1 
214 1 91 1 328 1 168 1 185 2 282 3 46 6 366 3 247 4 249 2 368 2 250 1 70 2 336 1 337 2 4 1 155 2 319 1 98 2 51 1 342 2 341 2 157 1 226 2 120 1 228 1 159 2 32 1 124 1 373 1 230 1 323 1 104 1 34 1 298 1 37 1 181 1 207 1 271 1 40 1 41 1 326 1 303 1 59 1 15 1 17 1 60 1 
213 1 111 1 217 1 153 2 288 1 195 1 29 1 227 2 7 2 146 1 161 1 348 1 349 1 350 3 162 1 263 1 35 3 298 1 356 1 181 1 164 1 326 2 182 1 17 1 363 2 166 2 61 1 19 1 
43 1 120 1 298 2 287 1 336 1 181 2 40 1 319 2 303 1 326 2 89 1 17 2 29 1 
120 1 352 1 264 1 298 4 181 4 301 1 164 1 319 1 40 1 303 1 326 1 305 1 17 4 
120 1 121 1 257 1 113 1 171 1 298 1 336 1 181 1 40 1 319 2 326 1 129 1 17 1 
255 1 181 1 88 1 164 1 319 1 40 1 374 1 17 1 298 1 105 1 
308 1 120 1 298 2 181 2 138 1 13 1 40 1 319 1 303 1 326 1 17 2 
120 2 352 1 264 1 298 5 315 1 106 1 181 5 138 1 301 1 316 1 164 1 40 2 319 2 303 1 326 3 17 4 
120 2 352 1 264 1 298 5 315 1 181 5 138 1 301 1 316 1 164 1 40 2 319 2 303 1 326 3 117 1 17 4 
120 1 214 1 328 1 168 1 32 1 249 1 298 1 70 2 336 1 181 1 155 2 164 1 319 1 40 1 326 1 291 1 15 1 17 1 
120 1 257 1 113 1 298 1 84 1 315 1 336 1 181 1 40 1 319 2 326 1 89 1 17 1 
115 1 218 1 261 1 249 1 221 1 
329 1 161 1 348 1 349 1 350 2 245 1 261 2 218 2 249 1 35 2 221 1 356 1 72 1 115 2 73 1 320 1 144 1 143 1 252 1 
276 1 168 1 170 1 261 1 221 1 70 1 155 1 115 1 75 1 
320 1 245 1 221 1 
71 1 147 1 295 1 66 1 
71 1 147 1 295 1 351 1 48 1 334 1 248 1 
242 1 351 1 158 1 
215 1 31 1 147 1 295 1 351 3 48 1 334 3 248 1 71 1 340 1 142 1 99 2 
71 1 147 1 295 1 251 1 351 2 48 1 334 2 248 1 145 1 
147 1 351 1 48 1 334 1 374 1 248 1 286 1 105 1 210 1 142 1 165 1 
71 1 147 1 351 1 48 1 334 1 248 1 142 1 
71 2 295 1 351 1 48 1 334 1 248 1 142 1 
147 1 351 2 48 2 68 1 334 2 248 2 71 1 107 1 142 1 225 1 
295 1 147 2 351 3 48 1 200 1 334 3 248 1 286 1 71 1 87 1 223 1 142 1 145 2 
255 1 147 1 295 1 313 1 351 2 48 1 374 2 334 2 248 1 105 1 289 1 71 1 142 1 165 1 145 1 
0 1 295 1 147 2 351 4 48 2 200 1 334 4 248 2 286 1 71 1 251 1 142 1 145 2 
71 1 147 1 295 1 351 1 48 1 334 1 248 1 142 1 
31 1 295 2 147 3 351 4 48 1 200 1 334 4 248 1 286 1 190 1 71 2 340 1 99 1 145 2 
309 1 112 1 147 1 295 1 351 2 48 1 334 2 248 1 71 1 142 1 145 1 177 1 
31 1 147 1 295 1 351 3 48 1 334 3 248 1 39 1 71 1 340 2 142 1 99 2 
310 2 147 2 224 1 204 1 
198 1 351 1 48 1 334 1 248 1 142 1 
71 1 87 1 147 1 295 1 351 2 48 1 334 2 248 1 142 1 145 1 
325 1 
71 1 147 1 295 1 351 1 48 1 334 1 248 1 142 1 
295 1 147 1 351 3 48 1 334 3 248 1 71 1 87 1 142 1 99 1 145 1 
190 1 147 1 200 1 286 1 
71 1 147 1 

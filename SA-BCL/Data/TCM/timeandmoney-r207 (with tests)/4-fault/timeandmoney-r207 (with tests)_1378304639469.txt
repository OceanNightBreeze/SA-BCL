#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 256 (350,373) (350,373) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 256 (350,373) (350,373) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 256 (350,373) (350,373) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 256 (350,373) (350,373) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 350 1 72 1 141 1 48 1 2 1 310 1 256 1 373 1 382 1 375 1 
118 1 350 1 72 1 141 1 48 1 2 1 310 1 256 1 373 1 382 1 375 1 
118 1 350 1 72 1 141 1 48 1 2 1 310 1 256 1 373 1 382 1 375 1 
118 1 350 1 72 1 141 1 48 1 2 1 310 1 256 1 373 1 382 1 375 1 
150 1 72 4 338 1 151 1 263 1 2 4 378 3 74 1 183 1 288 3 23 1 291 1 118 1 368 2 328 1 310 1 245 2 382 1 
150 1 72 2 151 1 223 1 153 1 378 1 2 2 305 1 118 1 291 1 254 1 141 1 328 1 310 1 382 1 375 1 
150 1 72 3 151 1 2 3 378 2 74 1 288 1 118 1 141 1 310 2 161 1 245 1 382 2 
150 1 338 1 72 9 151 1 263 1 378 5 2 9 74 3 363 1 183 1 288 7 23 1 291 1 118 1 368 2 34 1 159 1 141 1 328 1 281 1 310 2 161 1 245 4 382 2 
150 1 338 1 72 9 151 1 263 1 378 5 2 9 74 3 363 1 183 1 288 7 23 1 291 1 118 1 368 2 34 1 159 1 141 1 328 1 281 1 310 2 161 1 245 4 382 2 
181 1 99 1 207 1 
259 1 181 1 304 2 
336 2 55 2 307 2 132 2 236 2 162 2 117 1 274 1 
300 1 191 1 92 2 277 1 167 2 194 1 362 1 94 1 117 1 3 1 366 1 45 1 307 2 201 1 123 1 205 1 311 1 149 1 352 1 286 1 213 1 236 2 184 1 237 1 13 2 32 1 265 1 336 2 358 1 318 1 55 3 108 1 132 2 268 2 110 1 162 3 360 1 188 2 274 1 
336 1 346 1 55 1 307 1 132 1 362 1 236 1 162 1 133 1 274 1 
181 1 30 1 251 1 362 1 353 1 53 1 252 1 67 1 307 1 55 1 109 1 162 1 271 1 207 1 
181 1 30 2 251 1 362 1 353 1 236 1 252 2 336 1 67 1 307 1 55 1 132 1 162 1 271 1 207 1 
113 1 30 1 299 1 27 1 252 1 
64 1 181 1 113 1 30 2 207 1 299 1 125 1 252 2 
30 1 299 1 252 1 
113 1 30 1 362 1 236 1 289 1 252 1 336 1 346 1 307 1 55 1 132 1 162 1 133 1 274 1 
181 1 
64 1 181 1 113 1 30 2 144 1 207 1 299 1 252 2 
64 1 235 1 87 2 181 1 113 2 224 2 30 5 193 1 377 1 356 2 252 5 139 1 43 1 297 1 39 1 374 1 71 1 207 1 299 2 
99 1 117 1 
236 1 117 2 264 1 336 1 307 2 55 2 132 1 162 2 257 1 
220 1 322 1 272 1 
300 1 112 1 277 1 167 1 286 1 184 1 117 1 13 1 32 1 265 1 45 1 318 1 55 1 162 1 188 1 360 1 
136 1 195 2 65 1 53 1 236 4 117 1 306 1 336 1 345 1 307 5 55 5 132 4 162 5 257 1 
346 1 55 2 307 2 132 2 362 1 10 1 236 2 162 2 
300 1 277 1 195 1 167 1 65 1 286 1 236 1 184 1 13 1 265 1 32 1 45 1 318 1 307 1 55 2 132 1 162 2 272 1 360 1 188 1 
336 1 55 3 307 3 195 1 132 3 236 3 162 3 117 1 
346 1 55 1 307 1 132 1 362 1 236 1 162 1 
336 1 55 1 307 1 132 1 362 1 236 1 162 1 257 1 264 1 
300 1 191 1 92 1 277 1 194 1 195 1 251 1 167 1 94 1 65 1 362 1 117 1 252 1 67 1 45 1 307 3 201 1 205 1 311 1 257 1 30 1 352 1 286 1 353 1 213 1 236 3 184 1 238 1 13 1 265 1 32 1 336 2 358 1 318 1 55 4 132 3 243 1 268 2 110 1 162 4 271 1 360 1 188 1 274 1 
306 1 55 2 307 2 132 1 195 1 53 1 236 1 162 2 117 1 
181 1 30 1 195 2 251 1 362 1 65 1 353 1 236 3 238 1 252 1 336 1 67 1 307 3 55 3 132 3 162 3 319 1 271 1 257 1 
322 1 195 1 236 2 336 1 307 2 55 2 132 2 162 2 257 1 272 1 
300 1 277 1 167 1 286 1 184 1 117 1 13 1 32 1 265 1 45 1 318 1 55 1 162 1 188 1 360 1 
300 1 167 1 286 1 168 1 76 1 184 1 117 1 13 1 265 1 45 1 318 1 55 1 162 1 188 1 360 1 
220 2 249 1 92 4 322 2 94 1 169 1 3 2 140 1 201 1 8 1 205 2 100 1 311 1 50 1 376 1 31 1 352 1 182 1 105 1 215 1 358 1 268 2 110 1 272 2 
55 1 307 1 132 1 362 1 10 1 236 1 271 1 162 1 
66 1 130 1 
66 1 130 1 
127 1 287 1 
127 1 287 1 
127 1 287 1 
4 1 66 1 130 1 
4 1 66 1 130 1 
54 1 66 1 130 1 
349 1 127 1 287 1 115 1 66 2 130 2 
4 1 66 1 130 1 
317 1 66 1 130 1 
317 1 66 1 130 1 
317 1 66 1 130 1 
190 1 88 1 222 1 165 1 192 1 117 1 66 1 170 1 252 1 198 1 307 2 9 1 284 1 30 1 236 2 354 1 130 1 107 1 55 2 54 1 132 2 160 1 246 1 162 2 
190 3 349 1 181 1 88 2 284 2 222 1 211 1 30 2 66 2 130 2 252 2 68 1 214 2 107 2 120 1 295 1 36 1 246 2 26 1 
291 1 328 1 23 1 
291 1 328 1 305 1 
228 1 340 1 280 1 328 3 23 2 305 1 
228 1 340 1 328 2 23 1 96 1 305 1 
340 1 228 2 328 2 23 1 305 1 
248 1 64 1 87 1 113 4 224 1 1 2 192 1 20 1 169 1 170 1 304 3 252 5 173 1 139 3 140 1 204 1 207 1 230 2 126 1 376 1 259 1 235 1 181 2 31 1 30 5 356 1 81 2 296 1 217 1 160 1 297 2 299 1 
64 1 87 2 113 7 224 2 1 6 20 3 169 3 326 1 170 4 304 9 252 9 173 2 139 8 140 3 204 2 49 1 207 1 27 5 376 3 259 3 235 1 181 5 332 1 31 3 30 9 239 5 356 2 240 1 81 6 217 1 57 1 297 6 39 1 337 1 299 6 
248 1 87 1 113 2 224 1 1 2 20 1 169 1 170 1 252 3 173 1 304 4 139 3 140 1 204 1 207 1 230 1 376 1 259 2 181 3 31 1 30 3 356 1 81 2 296 1 297 2 39 1 
248 1 87 1 113 3 224 1 1 4 20 2 169 2 170 2 304 7 252 4 173 1 139 5 140 2 204 1 49 1 207 1 230 2 376 2 259 3 181 4 332 1 31 2 30 4 356 1 240 1 81 4 296 1 297 4 39 1 
258 1 99 1 184 1 
25 1 184 1 
158 1 
45 1 184 1 360 1 
184 1 189 1 
45 1 184 1 
258 2 45 1 184 3 331 1 320 1 360 1 
134 2 164 1 249 4 31 1 92 5 152 1 225 1 11 1 3 2 172 1 140 1 369 1 37 1 121 1 330 1 8 3 205 3 
134 2 164 1 249 4 31 1 152 1 92 6 225 1 11 1 3 2 172 1 140 1 369 1 121 1 37 1 330 1 8 3 205 4 
134 2 164 1 249 4 31 1 92 5 152 1 225 1 11 1 3 2 279 1 172 1 140 1 369 1 37 1 121 1 330 1 8 3 205 3 
134 3 164 5 249 13 92 35 20 2 21 1 94 1 225 2 169 2 171 1 3 16 172 1 5 1 140 5 369 1 201 1 121 1 329 3 330 3 8 8 205 19 145 1 231 1 376 2 73 1 152 3 31 5 352 1 11 2 242 3 37 2 268 2 110 1 83 1 
134 2 164 1 249 5 92 8 94 2 225 1 3 3 172 1 140 1 201 2 121 1 330 1 8 4 205 5 145 1 31 1 152 1 352 2 11 1 82 1 37 1 268 4 269 1 110 2 
63 1 300 1 339 1 250 1 323 1 167 1 2 2 23 1 305 1 118 1 69 1 280 1 141 1 328 2 310 1 24 1 150 1 72 2 151 1 285 1 378 1 288 1 13 1 265 1 291 1 35 1 382 1 381 1 60 1 188 1 
63 1 300 1 339 1 250 1 323 1 167 1 2 3 23 1 305 1 69 1 280 1 97 1 141 1 328 2 310 1 24 1 176 1 150 1 72 3 151 1 378 1 154 1 288 2 13 1 265 1 291 1 382 1 381 1 60 1 188 1 
63 1 300 1 339 1 250 1 323 1 167 1 2 2 23 1 305 1 69 1 280 1 141 1 328 2 176 1 150 1 72 2 151 1 378 1 154 1 288 2 13 1 265 1 291 1 60 1 188 1 
300 1 250 2 323 2 167 1 2 1 45 1 199 1 97 1 141 2 310 1 233 1 72 1 286 1 184 1 13 1 265 1 131 1 244 1 382 1 85 1 60 2 188 1 275 1 
63 1 300 1 339 1 250 1 323 1 167 1 2 1 23 1 305 1 118 1 69 1 280 1 141 1 328 2 310 1 24 1 72 1 154 1 13 1 265 1 291 1 35 1 382 1 381 1 60 1 188 1 
89 1 
247 2 300 1 87 1 251 1 343 1 304 2 252 5 139 2 44 2 45 1 47 1 307 1 202 2 6 1 204 1 98 1 207 1 313 1 316 2 259 2 353 1 53 1 356 1 13 2 265 1 357 4 157 1 55 1 16 1 109 1 359 1 162 1 271 1 59 1 19 1 275 1 62 1 64 3 221 2 224 1 166 2 167 2 362 1 67 1 235 1 181 2 29 1 30 5 286 2 184 1 78 2 244 1 297 2 299 6 188 2 
64 1 251 1 362 1 252 3 67 1 47 1 307 1 202 1 144 1 98 1 30 3 353 1 53 1 357 2 55 1 16 1 109 1 359 1 162 1 271 1 59 1 299 2 
64 1 251 1 362 1 252 3 67 1 47 1 307 1 144 1 98 1 207 1 181 1 30 3 353 1 53 1 78 1 357 3 55 1 16 1 109 1 359 1 162 1 271 1 59 1 299 1 
64 1 251 1 362 1 252 3 67 1 44 1 47 1 307 1 202 1 144 1 98 1 207 1 181 1 30 3 353 1 53 1 78 1 357 3 55 1 16 1 109 1 359 1 162 1 271 1 59 1 299 2 
247 2 87 1 251 1 342 1 343 1 252 5 139 1 44 4 46 1 47 1 307 1 202 4 144 1 98 1 207 5 316 2 259 2 353 1 53 1 356 1 357 6 55 1 16 1 109 1 359 1 271 1 162 1 59 1 61 1 64 3 219 1 224 1 221 2 166 2 362 1 67 1 178 1 235 1 181 5 29 1 30 5 78 4 297 1 299 7 
247 2 87 1 251 1 343 1 252 4 304 2 139 1 44 2 47 1 307 1 202 2 98 1 207 1 316 2 259 2 353 1 53 1 356 1 357 4 55 1 16 1 109 1 359 1 271 1 162 1 59 1 62 1 64 2 224 1 221 2 166 2 362 1 67 1 235 1 29 1 181 2 30 4 78 2 297 1 299 4 
247 2 64 2 87 1 221 2 224 1 166 2 251 1 362 1 343 1 252 4 67 1 139 1 44 2 46 1 47 1 307 1 202 2 98 1 178 1 207 1 316 2 259 2 235 1 181 1 29 1 30 4 353 1 53 1 78 2 356 1 357 4 55 1 16 1 109 1 359 1 297 1 162 1 271 1 59 1 299 4 61 1 
247 2 64 2 87 1 221 2 224 1 166 2 251 1 362 1 343 1 252 4 67 1 139 1 44 2 46 1 47 1 307 1 202 2 98 1 178 1 207 1 316 2 259 2 235 1 181 1 29 1 30 4 353 1 53 1 78 2 356 1 357 4 55 1 16 1 109 1 359 1 297 1 162 1 271 1 59 1 299 4 61 1 
64 2 87 1 221 2 224 1 166 2 251 1 362 1 304 2 252 4 67 1 139 1 44 2 253 2 47 1 307 1 202 2 98 1 178 1 207 1 315 1 235 1 181 1 29 1 30 4 353 1 53 1 78 2 356 1 357 4 156 1 14 1 80 2 55 1 16 1 109 1 359 1 297 1 162 1 271 1 59 1 299 4 
247 2 64 2 219 1 87 1 221 2 224 1 166 2 251 1 362 1 343 1 252 4 67 1 139 1 44 3 46 1 47 1 307 1 202 3 98 1 178 1 207 1 316 2 259 2 235 1 181 1 29 1 30 4 353 1 53 1 356 1 78 3 357 5 55 1 16 1 109 1 359 1 297 1 162 1 271 1 59 1 299 5 61 1 
247 2 64 2 219 1 87 1 221 2 224 1 166 2 251 1 362 1 343 1 252 4 67 1 139 1 44 3 46 1 47 1 307 1 202 3 98 1 178 1 207 1 316 2 259 2 235 1 181 1 29 1 30 4 353 1 53 1 356 1 78 3 357 5 55 1 16 1 109 1 359 1 297 1 162 1 271 1 59 1 299 5 61 1 
87 1 251 1 252 4 304 2 139 1 44 2 47 1 253 2 307 1 202 2 98 1 207 1 353 1 53 1 356 1 357 4 156 1 55 1 16 1 109 1 359 1 271 1 162 1 59 1 62 1 64 2 224 1 221 2 166 2 362 1 67 1 235 1 29 1 181 1 30 4 78 2 80 2 297 1 299 4 
134 1 249 2 220 1 322 1 92 5 94 1 225 1 117 1 3 2 172 1 140 1 201 1 121 1 330 1 99 1 8 2 205 3 311 1 152 1 31 1 352 1 215 1 358 1 268 2 110 1 272 1 
164 1 249 2 220 11 92 14 322 4 20 2 21 1 94 2 169 1 117 1 138 1 3 8 140 2 201 2 329 3 8 1 205 6 311 1 376 2 149 1 31 1 262 1 103 1 352 2 104 1 213 1 242 3 185 1 358 2 268 4 187 1 110 2 272 11 
300 1 112 1 322 1 92 2 277 1 167 1 195 1 65 1 94 1 117 1 3 1 45 1 307 1 201 1 205 1 177 1 311 1 149 1 352 1 286 1 104 1 236 1 213 1 379 1 184 1 13 1 265 1 32 1 33 1 318 1 358 1 55 2 132 1 268 2 110 1 162 2 360 1 188 1 
134 1 300 2 249 8 92 19 195 1 194 2 94 3 3 9 140 3 45 2 307 1 201 3 8 4 205 10 311 3 149 1 152 1 352 3 104 1 154 1 213 1 106 1 13 3 355 2 265 2 358 3 318 2 55 3 268 6 110 3 162 3 272 7 360 2 164 4 220 7 322 7 277 2 20 2 167 3 65 1 225 1 169 2 117 1 172 1 121 1 330 1 376 2 232 2 333 1 31 3 286 1 236 1 184 2 335 2 32 2 79 1 132 1 186 2 188 3 
300 2 92 2 195 1 167 8 94 2 196 1 3 1 45 2 307 1 201 2 308 1 205 1 312 1 311 2 148 1 149 1 51 1 285 1 352 2 286 2 154 1 129 1 75 1 236 1 213 1 184 3 13 8 265 2 215 1 358 2 55 1 132 1 108 2 268 4 244 1 110 2 162 1 188 7 275 1 
249 1 220 1 322 1 92 3 20 1 94 1 169 1 3 1 140 1 307 1 201 1 8 1 205 2 257 1 311 1 376 1 31 1 352 1 104 1 236 1 12 1 336 1 358 1 55 1 132 1 268 2 110 1 162 1 272 1 
164 1 249 1 220 1 322 1 92 2 352 1 94 1 3 2 140 1 215 1 358 1 201 1 268 2 110 1 272 1 311 1 50 1 376 1 
249 1 220 1 322 1 92 2 31 1 352 1 94 1 105 1 169 1 215 1 358 1 201 1 268 2 110 1 8 1 205 2 272 1 311 1 
164 1 220 2 249 2 92 4 322 2 20 1 94 1 169 1 3 2 140 1 201 1 8 1 205 2 311 1 376 1 31 1 352 1 215 1 358 1 268 2 110 1 272 2 
164 1 249 1 220 1 322 1 92 2 352 1 94 1 3 2 140 1 358 1 308 1 201 1 268 2 110 1 272 1 311 1 50 1 376 1 
249 1 220 1 322 1 92 2 31 1 352 1 94 1 105 1 169 1 358 1 308 1 201 1 268 2 110 1 8 1 205 2 272 1 311 1 
164 1 220 2 249 2 92 4 322 2 20 1 94 1 169 1 3 2 140 1 201 1 308 1 8 1 205 2 311 1 376 1 31 1 352 1 358 1 268 2 110 1 272 2 
164 1 220 2 249 2 92 4 322 2 20 1 94 1 169 1 3 2 140 1 201 1 8 1 205 2 311 1 376 1 31 1 352 1 358 1 268 2 110 1 272 2 
300 1 92 2 277 1 194 1 167 1 94 1 117 1 3 1 45 1 201 1 205 1 311 1 149 1 352 1 286 1 213 1 184 1 13 1 265 1 32 1 318 1 358 1 55 1 268 2 110 1 162 1 360 1 188 1 
300 1 92 2 167 1 168 1 22 1 94 1 117 1 3 1 45 1 201 1 205 1 311 1 149 1 352 1 286 1 76 1 213 1 184 1 13 1 265 1 318 1 358 1 55 1 268 2 110 1 162 1 360 1 188 1 
164 1 220 2 249 2 92 4 322 2 20 1 94 1 169 1 3 2 140 1 201 1 8 1 205 2 311 1 376 1 31 1 352 1 104 1 358 1 268 2 110 1 272 2 
300 1 164 1 249 2 220 2 322 2 92 4 277 1 20 1 194 1 167 1 94 1 169 1 3 2 140 1 45 1 201 1 8 1 205 2 311 1 376 1 232 1 285 1 31 1 352 1 184 1 13 1 265 1 32 1 318 1 358 1 55 1 268 2 110 1 162 1 272 2 360 1 188 1 
164 1 249 1 220 1 92 3 322 1 20 1 94 1 169 1 3 2 140 1 307 1 201 1 205 1 257 1 311 1 376 1 102 1 31 1 352 1 104 1 236 1 336 1 358 1 55 1 132 1 268 2 110 1 162 1 272 1 
111 1 164 3 249 6 92 19 20 3 21 1 94 2 169 3 138 1 303 2 3 9 367 1 140 3 347 1 201 2 309 1 7 1 329 1 8 3 205 10 282 2 376 3 31 3 352 2 242 2 294 1 268 4 269 1 38 1 110 2 
164 2 111 2 249 4 92 26 20 3 325 1 21 2 94 3 341 1 169 2 303 1 3 14 41 1 367 2 140 3 347 1 201 3 142 1 7 1 329 2 8 2 145 2 205 12 282 4 206 1 376 3 209 1 31 2 352 3 242 2 268 6 269 1 38 1 110 3 
134 1 111 1 164 4 249 9 92 40 20 4 325 1 21 3 94 3 225 1 341 1 169 4 138 1 303 1 3 19 172 1 41 1 367 2 119 1 140 5 347 1 201 3 121 1 142 1 7 1 329 3 330 1 8 5 145 1 205 21 206 1 282 4 376 4 209 1 152 1 31 5 352 3 242 4 294 1 268 6 269 1 38 1 110 3 
134 1 111 1 164 3 249 8 92 38 20 4 325 1 21 3 94 4 225 1 341 1 169 3 138 1 303 1 3 19 172 1 41 1 367 2 119 1 140 5 347 1 201 4 121 1 142 1 7 1 329 3 330 1 8 5 145 2 205 19 206 1 282 4 376 4 209 1 152 1 31 4 352 4 242 4 294 1 268 8 269 1 38 1 110 4 
134 1 111 1 164 7 249 15 92 52 20 7 325 1 21 2 94 2 225 1 341 1 169 7 138 2 303 1 3 26 172 1 41 1 367 1 140 8 347 1 201 2 121 1 142 1 7 1 329 4 330 1 8 8 145 1 205 26 206 1 282 4 376 7 209 1 152 1 31 8 103 2 352 2 242 4 268 4 269 1 38 1 110 2 
349 1 88 1 107 1 120 1 284 1 36 1 203 1 246 1 66 1 130 1 
54 1 165 1 
380 1 88 1 107 1 284 1 17 1 218 1 246 1 66 1 130 1 
4 1 372 1 
301 1 317 1 115 1 
190 2 349 1 181 1 88 1 222 1 284 1 211 1 30 1 66 1 252 1 130 1 68 1 214 1 107 1 120 1 295 1 36 1 246 1 
190 2 349 1 181 1 88 1 222 1 284 1 211 1 30 1 66 1 252 1 130 1 68 1 214 1 107 1 120 1 295 1 36 1 246 1 
190 2 349 1 181 1 88 1 222 1 284 1 211 1 30 1 66 1 252 1 130 1 68 1 214 1 107 1 120 1 295 1 36 1 246 1 
4 1 372 1 115 1 
4 1 372 1 115 1 
301 1 317 1 
301 1 317 1 115 1 
198 1 354 1 
190 1 113 1 88 1 165 1 192 1 117 1 66 1 170 1 252 1 68 1 198 1 307 2 9 1 284 1 30 1 334 1 236 2 354 1 130 1 214 1 107 1 55 2 54 1 132 2 160 1 162 2 246 1 
300 1 0 1 92 2 167 2 94 1 196 1 95 1 3 1 45 1 307 2 201 1 205 1 311 1 179 1 149 1 51 1 352 1 104 1 128 1 213 1 184 1 13 2 265 1 358 1 55 2 108 2 268 2 110 1 162 2 273 1 188 2 
300 1 163 1 339 1 180 1 276 1 285 1 323 1 167 2 154 1 23 1 13 2 305 1 265 1 291 1 69 1 280 1 328 2 24 1 188 2 
300 1 339 1 180 1 323 1 167 1 154 1 23 1 13 1 290 1 305 1 265 1 291 1 69 1 280 1 328 2 24 1 188 1 
300 1 233 1 276 1 351 1 323 1 167 1 286 1 184 1 13 1 265 1 45 1 244 1 188 1 275 1 
300 1 163 1 339 1 180 1 276 1 323 1 167 1 154 1 23 1 13 1 305 1 265 1 291 1 69 1 280 1 328 2 24 1 188 1 
324 1 
139 1 181 1 377 1 297 1 99 1 71 1 207 1 
247 1 64 1 87 1 224 1 343 1 304 1 252 1 139 1 207 1 316 1 259 1 235 1 181 2 30 1 356 1 297 1 299 1 
300 2 64 3 87 3 224 3 1 6 20 2 167 1 226 1 169 2 304 12 252 5 67 2 139 7 140 2 45 1 200 2 143 2 122 2 25 3 204 1 331 1 229 2 146 1 313 1 376 2 147 1 258 2 259 6 235 3 181 6 31 2 30 5 286 1 335 2 184 6 13 1 356 3 265 1 292 2 81 6 297 7 298 2 299 5 188 1 360 1 
64 1 87 2 224 2 1 5 20 2 325 1 21 1 341 1 169 2 40 1 302 1 252 1 304 6 41 1 139 8 140 2 142 1 329 1 122 2 204 1 175 1 206 1 207 2 313 1 376 2 235 2 259 3 181 5 30 1 31 2 356 2 81 5 242 1 297 5 299 1 
87 1 224 1 362 1 225 1 40 1 252 1 139 2 5 1 140 2 346 1 307 1 122 2 330 1 235 1 152 1 30 1 31 1 236 1 289 1 356 1 336 1 55 1 132 1 297 2 162 1 133 1 61 1 274 1 
235 1 87 1 181 1 224 1 377 1 356 1 139 1 297 1 71 1 207 1 
259 5 181 5 1 5 31 2 20 2 169 2 335 1 40 1 304 10 139 5 140 2 81 5 122 2 297 5 376 2 
64 1 181 1 30 1 207 1 299 1 252 1 
300 1 64 2 87 2 224 2 93 1 137 2 167 4 252 3 139 2 45 1 6 1 204 2 313 2 235 1 261 1 30 3 286 2 184 1 356 2 13 4 265 1 157 1 244 1 18 1 297 2 39 1 188 4 299 4 275 1 
300 1 191 1 92 1 277 1 167 1 194 1 94 1 117 1 45 1 307 2 201 1 205 1 311 1 352 1 286 1 213 1 236 2 184 1 13 1 32 1 265 1 336 2 318 1 358 1 55 3 132 2 268 2 110 1 162 3 188 1 360 1 274 1 
134 1 87 1 224 1 1 2 304 4 139 2 122 1 204 1 207 1 313 1 235 1 259 2 181 3 356 1 81 2 297 1 
266 1 88 1 284 1 
266 1 88 1 284 1 
88 1 120 1 284 1 90 1 354 1 
266 1 88 1 284 1 
86 1 88 1 284 1 
86 1 88 1 284 1 
86 1 88 1 284 1 
88 1 284 1 
66 1 130 1 
134 1 164 1 249 3 31 1 92 7 152 1 352 2 94 2 225 1 3 3 172 1 140 1 201 2 121 1 268 4 110 2 330 1 8 2 205 4 145 1 
134 1 140 1 249 2 31 1 92 5 152 1 121 1 225 1 330 1 8 2 99 1 205 3 3 2 172 1 
164 1 249 2 31 1 92 4 20 1 352 1 94 1 169 1 3 2 140 1 216 1 201 1 268 2 110 1 8 1 205 2 376 1 
164 1 249 2 31 1 92 7 20 1 21 1 169 1 138 1 3 3 140 1 242 2 329 1 8 1 205 4 376 1 
134 1 164 4 249 9 92 22 20 2 94 2 225 1 169 2 138 1 3 10 172 1 140 3 201 2 121 1 329 2 330 2 8 5 205 12 145 2 376 2 260 1 152 2 31 3 103 1 352 2 242 2 185 1 268 4 110 2 
242 1 92 1 205 1 
92 1 329 1 3 1 
164 1 249 3 92 6 31 1 20 1 352 1 94 1 169 1 335 1 3 3 140 1 216 1 201 1 268 2 110 1 8 2 205 3 376 1 
164 1 249 2 92 12 20 2 21 1 325 1 94 1 341 1 169 2 3 6 41 1 140 2 201 1 142 1 329 1 8 1 205 6 206 1 376 2 31 2 352 1 242 1 268 2 269 1 110 1 
164 1 249 2 92 6 31 1 152 1 225 1 3 3 140 1 330 1 8 1 205 3 
164 1 249 2 260 1 152 1 92 3 352 1 94 1 3 1 172 1 201 1 121 1 268 2 330 1 110 1 8 1 205 2 145 1 
164 2 249 5 152 2 92 10 31 2 352 1 94 1 225 1 3 5 5 1 140 2 201 1 268 2 269 1 110 1 330 2 8 3 205 5 
164 1 249 1 92 2 352 1 94 1 3 2 140 1 201 1 269 1 268 2 110 1 376 1 
164 1 249 2 31 1 92 4 20 1 352 1 94 1 169 1 3 2 140 1 201 1 269 1 268 2 110 1 8 1 205 2 376 1 
164 1 249 2 260 1 92 3 152 1 352 3 94 3 3 1 294 1 201 3 269 1 268 6 110 3 330 1 8 1 145 1 205 2 
134 1 164 5 249 12 92 33 20 3 21 1 94 5 225 2 169 3 138 1 3 15 172 1 140 5 201 5 121 1 329 3 330 3 8 7 145 2 205 18 231 1 376 3 73 1 260 1 152 3 31 5 352 5 242 4 216 1 294 1 268 10 269 1 110 5 83 1 
134 1 249 2 92 7 21 1 94 1 225 1 341 1 3 3 172 1 140 1 201 1 121 1 329 1 330 1 8 2 205 4 31 1 152 1 352 1 242 1 268 2 269 1 110 1 
134 1 164 1 249 3 92 10 20 1 21 1 94 2 225 1 341 1 138 1 3 5 172 1 140 2 201 2 121 1 329 1 330 1 8 2 205 5 376 1 31 1 152 1 352 2 242 2 216 1 269 1 268 4 110 2 
134 1 164 1 249 4 92 18 20 2 325 1 21 1 94 3 225 1 341 1 169 2 3 8 172 1 41 1 140 3 201 3 121 1 142 1 329 1 330 1 8 3 205 10 145 1 206 1 376 2 152 1 31 3 352 3 242 1 216 1 268 6 269 1 110 3 
134 1 164 2 249 5 92 16 20 2 21 1 325 1 94 3 225 1 341 1 169 1 3 9 172 1 41 1 140 3 201 3 121 1 142 1 329 1 330 1 8 3 145 1 205 7 206 1 376 2 152 1 31 2 352 3 242 1 216 1 268 6 269 1 110 3 
134 1 249 2 92 7 21 1 94 1 225 1 341 1 3 3 172 1 140 1 201 1 121 1 329 1 330 1 8 2 205 4 31 1 152 1 352 1 242 1 268 2 269 1 110 1 
164 1 249 2 92 12 20 2 21 1 325 1 94 1 341 1 169 2 3 6 41 1 140 2 201 1 142 1 329 1 8 1 205 6 206 1 376 2 31 2 352 1 242 1 268 2 269 1 110 1 
134 1 164 2 249 5 92 17 20 2 325 1 21 1 94 4 225 1 341 1 169 1 3 9 172 1 41 1 140 3 201 4 121 1 142 1 329 1 330 1 8 3 205 8 145 2 206 1 376 2 152 1 31 2 352 4 242 1 216 1 268 8 269 1 110 4 
164 3 249 6 92 16 20 3 325 1 21 1 94 4 341 1 169 2 3 9 41 1 140 3 201 4 142 1 329 1 8 3 205 7 145 2 206 1 376 3 31 2 352 4 242 1 294 1 269 1 268 8 110 4 
164 3 249 6 31 1 92 7 152 3 225 1 3 3 172 2 140 1 121 1 330 3 8 3 205 4 
134 1 164 1 249 4 92 17 20 2 325 1 21 1 94 4 225 1 341 1 169 1 3 9 172 1 41 1 140 3 201 4 121 1 142 1 329 1 330 1 8 3 205 8 145 2 206 1 376 2 152 1 31 2 352 4 242 1 294 1 269 1 268 8 110 4 
306 1 55 1 307 1 348 1 53 1 162 1 117 1 
234 1 53 1 117 1 365 1 197 1 306 1 255 1 307 1 55 1 348 1 162 1 314 1 
300 1 45 1 167 1 286 1 244 1 99 1 184 1 13 1 188 1 265 1 275 1 
300 1 277 1 195 1 167 1 286 1 236 1 184 1 117 1 13 1 265 1 45 1 318 1 307 1 55 2 132 1 162 2 360 1 188 1 
300 1 52 1 277 1 251 1 195 1 137 1 167 1 362 1 236 1 184 3 117 1 13 1 265 1 45 2 318 1 307 2 55 2 132 2 271 1 162 2 360 2 188 1 189 1 
300 1 167 2 137 1 195 1 251 1 362 1 117 1 45 2 307 2 101 1 52 1 76 1 236 1 184 3 13 2 265 1 318 1 55 2 132 2 162 2 271 1 188 2 360 2 189 1 
300 1 167 3 137 1 252 2 67 1 45 1 370 1 25 1 207 1 101 1 258 1 52 1 210 1 181 1 30 2 286 1 184 4 13 3 265 1 299 1 188 3 360 1 189 1 
300 1 258 1 52 1 181 1 30 2 137 1 167 3 286 1 184 4 13 3 252 2 265 1 67 1 292 1 45 1 25 1 207 1 101 1 360 1 188 3 299 1 189 1 
300 1 167 1 129 1 13 1 188 1 265 1 
300 3 51 1 285 1 167 7 286 2 154 1 129 1 75 1 278 1 184 3 13 7 344 1 265 2 45 2 108 1 70 1 331 1 312 1 188 6 360 1 148 1 
300 1 134 1 0 1 249 2 92 5 194 1 195 1 94 2 3 2 140 1 45 1 307 1 201 2 8 2 205 3 311 2 152 1 352 2 104 1 13 1 265 1 358 2 318 1 55 2 268 4 110 2 162 2 272 1 360 1 220 1 322 1 277 1 167 1 225 1 117 1 172 1 121 1 330 1 232 1 285 1 31 1 236 1 184 1 32 1 132 1 186 1 188 1 
64 1 87 2 113 1 224 2 93 1 167 1 252 3 67 1 139 1 143 1 25 1 71 1 229 1 207 1 258 1 235 2 181 1 30 3 286 1 377 1 184 2 13 1 356 2 292 1 297 1 298 1 188 1 299 2 
258 1 300 2 285 1 167 2 129 1 184 2 13 2 265 1 45 1 331 1 146 1 188 2 360 1 
300 1 285 1 167 4 286 1 184 1 13 4 265 1 293 1 45 1 244 1 101 1 188 4 275 1 
300 2 333 1 91 1 137 1 167 2 278 1 184 1 364 1 13 2 265 1 45 1 70 1 188 2 360 1 
291 1 300 1 69 1 167 1 328 1 286 1 13 1 188 1 305 1 265 1 
300 1 51 1 285 1 167 2 154 1 184 1 95 1 13 2 265 1 45 1 188 2 
300 2 51 1 285 1 137 1 167 5 286 1 75 1 184 3 13 5 265 2 293 1 45 2 244 1 188 4 275 1 148 1 
300 2 51 1 285 1 137 1 167 5 286 1 184 3 13 5 265 2 293 1 45 2 56 1 244 1 188 4 275 1 148 1 
300 1 195 1 167 1 286 1 236 1 76 1 184 1 117 1 13 1 265 1 45 1 318 1 307 1 55 2 132 1 162 2 360 1 188 1 
300 2 137 1 167 1 278 1 184 1 13 1 344 1 265 1 45 1 70 1 331 1 188 1 360 1 
128 1 267 1 307 1 55 1 162 1 84 1 273 1 321 1 179 1 
135 1 267 1 227 1 
267 1 84 1 117 1 77 1 321 1 
181 1 113 1 135 1 30 2 251 1 362 1 353 1 227 1 117 1 77 2 238 1 252 2 67 1 42 1 267 1 271 1 84 2 207 1 321 2 
150 1 151 1 378 1 99 1 
150 1 72 1 151 1 378 1 2 1 310 1 382 1 
250 1 141 1 2 1 
150 1 72 3 151 1 223 2 378 1 2 3 118 1 327 1 310 1 270 1 382 1 28 1 
150 1 72 2 368 1 151 1 378 1 2 2 310 1 382 1 288 1 
291 1 118 1 338 1 72 1 328 1 378 1 2 1 310 1 245 1 382 1 23 1 
118 1 72 1 151 1 378 1 2 1 310 1 382 1 
150 1 118 1 72 1 151 2 2 1 310 1 382 1 
72 2 151 1 283 1 378 1 2 2 114 1 118 1 310 2 58 1 382 2 
150 1 72 3 151 1 2 3 378 2 74 1 363 1 288 2 118 1 310 1 281 1 245 1 382 1 
150 1 72 2 151 1 378 1 2 2 288 1 23 1 305 1 118 1 291 1 241 1 280 1 328 2 310 1 382 1 
150 1 72 4 151 1 2 4 263 1 378 2 74 1 288 2 118 1 368 1 310 2 245 1 382 2 
150 1 118 1 72 1 151 1 378 1 2 1 310 1 382 1 
150 2 72 4 151 2 223 1 2 4 378 3 74 1 288 2 327 1 15 1 310 1 270 1 245 1 382 1 
150 1 72 2 151 1 212 1 378 1 2 2 288 1 116 1 118 1 159 1 310 1 382 1 
150 1 72 3 151 1 223 2 378 1 2 3 118 1 327 1 310 1 270 2 382 1 124 1 
208 1 361 2 371 1 378 2 
118 1 72 1 174 1 2 1 310 1 382 1 
150 1 118 1 72 2 151 1 378 1 2 2 310 1 363 1 382 1 288 1 
155 1 
150 1 118 1 72 1 151 1 378 1 2 1 310 1 382 1 
150 1 72 3 151 1 223 1 2 3 378 1 363 1 288 1 118 1 310 1 382 1 
15 1 378 1 245 1 74 1 
151 1 378 1 

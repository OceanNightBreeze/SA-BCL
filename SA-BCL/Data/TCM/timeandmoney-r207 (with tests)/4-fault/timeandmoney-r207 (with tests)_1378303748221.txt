#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 2 24 5 363 1 139 9 311 1 140 1 243 2 6 6 366 2 249 1 344 1 155 1 272 2 230 9 126 2 231 3 206 1 62 1 87 1 130 1 13 1 254 2 238 4 15 1 215 1 137 2 18 1 101 1 
24 5 363 1 103 2 139 9 311 1 243 2 140 1 6 6 366 2 249 1 344 1 155 1 272 2 230 9 126 2 231 3 206 1 62 1 87 1 130 1 13 1 254 2 238 4 15 1 215 1 137 2 18 1 101 1 
24 6 363 1 103 2 139 10 311 1 243 2 140 1 6 7 366 2 249 1 344 1 155 1 272 2 230 10 126 2 231 4 206 1 62 1 87 1 130 1 13 1 254 2 238 5 15 1 215 1 137 2 18 1 101 1 
24 4 363 1 103 1 139 7 311 1 243 2 140 1 6 4 366 2 249 1 344 1 155 1 272 2 230 7 126 2 231 2 206 1 62 1 87 1 130 1 13 1 254 2 238 3 215 1 137 2 18 1 101 1 
231 1 126 1 206 1 103 2 24 3 139 4 311 1 62 1 243 1 6 3 13 1 366 1 238 2 15 1 137 1 272 1 101 1 230 4 
126 1 24 1 206 1 139 2 25 1 62 1 327 1 366 1 254 1 249 1 252 1 137 1 18 1 272 1 101 1 230 2 
126 2 231 1 206 1 24 2 139 3 62 1 130 1 6 1 366 2 254 1 238 1 101 1 230 3 
24 5 363 1 103 2 139 9 311 1 243 1 6 7 366 2 318 1 155 1 272 1 230 9 231 3 126 2 206 1 62 1 130 1 13 1 306 1 254 1 238 4 15 1 137 1 101 1 
24 5 363 1 103 2 139 9 311 1 243 1 6 7 366 2 318 1 155 1 272 1 230 9 231 3 126 2 206 1 62 1 130 1 13 1 306 1 254 1 238 4 15 1 137 1 101 1 
301 1 313 1 78 1 
301 1 123 1 56 2 
157 1 142 2 228 2 233 2 345 2 185 1 4 2 340 2 
138 2 117 1 190 1 142 3 288 1 219 2 290 2 262 1 4 3 172 1 339 1 148 2 77 1 340 2 7 1 8 1 122 1 197 1 343 1 228 2 370 1 319 1 345 2 371 2 276 1 157 1 303 1 233 2 163 1 68 1 255 1 280 1 100 1 185 1 188 1 241 1 20 1 
157 1 251 1 142 1 228 1 261 1 233 1 345 1 4 1 95 1 340 1 
349 1 301 1 142 1 104 1 313 1 143 1 4 1 246 1 225 1 316 1 55 1 251 1 175 1 345 1 
301 1 104 2 142 1 313 1 143 1 233 1 4 1 340 1 225 2 316 1 55 1 251 1 228 1 175 1 345 1 
225 1 114 1 226 1 104 1 149 1 
225 2 232 1 114 1 301 1 104 2 313 1 149 1 297 1 
225 1 114 1 104 1 
157 1 312 1 104 1 261 1 142 1 233 1 4 1 95 1 149 1 340 1 225 1 251 1 228 1 345 1 
301 1 
225 2 232 1 114 1 301 1 367 1 104 2 313 1 149 1 
158 1 232 1 287 2 350 1 301 1 88 1 104 5 313 1 161 2 92 1 304 1 50 1 149 2 225 5 196 1 38 1 114 2 153 2 115 1 
185 1 78 1 
142 2 233 1 352 1 4 2 235 1 340 1 228 1 345 2 185 2 
47 1 210 1 286 1 
276 1 190 1 142 1 288 1 290 1 163 1 4 1 245 1 148 1 77 1 7 1 122 1 100 1 185 1 371 1 20 1 
276 1 205 1 47 1 190 1 288 1 142 2 233 1 290 1 163 1 4 2 148 1 77 1 340 1 7 1 122 1 100 1 345 1 371 1 201 1 20 1 
205 1 142 5 233 4 4 5 235 1 246 1 37 1 340 4 76 1 228 1 295 1 345 5 185 1 201 2 
251 1 142 2 233 2 345 2 4 2 35 1 95 1 340 2 
228 1 142 3 233 3 345 3 185 1 4 3 201 1 340 3 
251 1 142 1 233 1 345 1 4 1 95 1 340 1 
251 1 142 1 228 1 233 1 352 1 345 1 4 1 235 1 340 1 
138 2 117 1 190 1 288 1 142 4 104 1 219 1 143 1 290 1 262 1 4 4 172 1 148 1 77 1 340 3 7 1 225 1 121 1 316 1 55 1 122 1 197 1 251 1 343 1 175 1 228 2 198 1 370 1 345 3 371 1 201 1 276 1 205 1 157 1 303 1 233 3 163 1 235 1 68 1 280 1 100 1 185 1 188 1 20 1 
142 2 233 1 345 2 185 1 4 2 246 1 201 1 37 1 340 1 
205 1 301 1 104 1 142 3 143 1 233 3 235 1 4 3 132 1 340 3 225 1 316 1 55 1 251 1 228 1 175 1 198 1 345 3 201 2 
47 1 142 2 233 2 210 1 235 1 4 2 340 2 228 1 345 2 201 1 
276 1 190 1 142 1 288 1 290 1 163 1 4 1 148 1 77 1 7 1 122 1 100 1 185 1 371 1 20 1 
276 1 178 1 190 1 142 1 288 1 290 1 4 1 148 1 77 1 7 1 122 1 100 1 185 1 371 1 308 1 
138 2 253 1 61 1 47 2 303 1 219 4 210 2 169 1 94 1 172 1 150 1 52 1 68 1 255 2 280 1 39 1 197 1 334 1 343 2 357 1 188 1 45 1 286 2 204 1 
55 1 251 1 142 1 233 1 345 1 4 1 35 1 340 1 
164 1 279 1 
164 1 279 1 
329 1 341 1 
329 1 341 1 
329 1 341 1 
105 1 164 1 279 1 
164 1 156 1 279 1 
335 1 164 2 284 1 329 1 279 2 341 1 
105 1 164 1 279 1 
105 1 164 1 279 1 
299 1 164 1 279 1 
299 1 164 1 279 1 
299 1 164 1 279 1 
242 1 104 1 142 2 220 1 4 2 314 1 340 2 225 1 342 1 106 1 345 2 176 1 124 1 156 1 300 1 233 2 209 1 164 1 326 1 279 1 328 1 182 1 185 1 72 1 
242 2 300 2 301 1 104 2 164 2 192 1 279 2 225 2 98 1 99 1 182 3 342 2 283 1 335 1 379 1 72 2 124 1 59 1 44 2 
243 1 137 1 272 1 
252 1 137 1 272 1 
257 1 252 1 243 2 325 1 137 3 285 1 
257 1 252 1 243 1 137 2 111 1 285 1 
257 2 252 1 243 1 137 2 285 1 
216 1 287 1 104 5 313 1 220 1 291 1 263 1 50 2 364 2 150 1 149 4 52 1 225 5 123 1 56 3 153 1 31 1 176 1 61 1 232 1 350 3 301 2 161 1 234 1 92 1 209 1 94 1 211 2 114 1 258 1 183 1 73 2 
217 5 287 2 104 9 313 1 263 2 50 6 364 6 150 3 149 7 52 3 224 1 225 9 82 1 267 1 226 5 123 3 56 9 153 2 271 1 31 3 61 3 232 1 177 1 350 8 208 1 88 1 301 5 161 2 92 1 209 4 94 3 211 6 114 6 258 1 183 2 
216 1 287 1 104 3 313 1 291 1 263 1 50 2 149 2 150 1 364 2 52 1 225 3 123 2 153 1 56 4 31 1 61 1 350 3 301 3 88 1 161 1 209 1 94 1 211 2 183 1 73 1 
216 1 287 1 104 4 313 1 291 1 263 1 50 4 364 4 149 3 150 2 52 2 224 1 225 4 267 1 123 3 56 7 153 1 31 2 61 2 350 5 208 1 301 4 88 1 161 1 209 2 94 2 211 4 183 1 73 2 
77 1 330 1 78 1 
160 1 77 1 
63 1 
276 1 100 1 77 1 
151 1 77 1 
100 1 77 1 
331 1 276 1 100 1 71 1 77 3 330 2 
310 1 260 1 207 1 33 1 89 2 219 5 351 1 221 1 150 1 52 1 54 1 255 3 39 2 343 2 184 1 229 1 45 3 
310 1 260 1 207 1 33 1 89 2 219 5 351 1 221 1 150 1 52 1 54 1 255 3 39 2 343 2 184 1 229 1 45 3 
310 1 260 1 207 1 33 1 89 2 219 5 351 1 221 1 353 1 150 1 52 1 54 1 255 3 39 2 343 2 184 1 229 1 45 3 
138 2 310 2 260 1 219 29 144 1 221 1 75 3 338 1 172 1 150 4 52 4 54 1 83 1 343 14 229 2 31 3 61 3 159 1 33 2 207 5 303 1 89 3 351 2 94 3 96 1 237 1 68 1 255 15 39 5 184 1 41 1 358 4 188 1 45 10 
275 1 138 4 310 1 33 1 207 1 89 2 303 2 219 7 351 1 221 1 172 2 150 1 52 1 54 1 68 2 255 4 39 3 343 3 40 1 184 1 41 1 229 1 188 2 45 4 
24 1 139 2 243 1 288 1 290 1 3 1 6 1 148 1 51 1 7 1 53 1 195 1 366 1 252 1 154 1 371 1 272 1 230 2 126 1 86 1 206 1 322 1 62 1 325 1 12 1 112 1 254 1 333 1 137 2 101 1 
24 1 139 3 243 1 288 1 290 1 222 1 3 1 148 1 6 2 51 1 7 1 53 1 195 1 120 1 366 1 252 1 371 1 347 1 272 1 230 3 126 1 86 1 206 1 322 1 62 1 325 1 112 1 254 1 333 1 137 2 
24 1 139 2 288 1 243 1 290 1 3 1 148 1 6 2 51 1 7 1 53 1 195 1 120 1 252 1 371 1 347 1 272 1 230 2 206 1 322 1 62 1 325 1 254 1 333 1 137 2 
85 1 126 1 139 1 322 2 288 1 289 1 162 1 290 1 222 1 148 1 77 1 7 1 53 2 366 1 67 1 195 2 254 2 374 1 122 1 100 1 200 1 371 1 230 1 
139 1 243 1 288 1 290 1 3 1 148 1 51 1 7 1 53 1 195 1 120 1 366 1 252 1 371 1 272 1 230 1 126 1 86 1 322 1 325 1 12 1 112 1 254 1 333 1 137 2 101 1 
189 1 
46 2 287 1 104 5 288 1 142 1 143 1 290 2 147 1 4 1 148 2 246 1 50 2 7 1 55 1 251 1 9 1 294 1 56 2 153 1 199 1 345 1 200 1 349 1 350 2 301 2 302 2 161 1 355 1 114 6 214 1 360 2 118 4 119 1 313 1 263 1 77 1 225 5 316 1 122 2 175 1 123 2 320 1 369 1 371 2 321 2 274 1 232 3 92 1 324 2 180 1 374 1 376 2 136 1 100 1 380 2 
349 1 232 1 118 2 104 3 142 1 143 1 4 1 246 1 180 1 225 3 55 1 316 1 114 2 367 1 251 1 214 1 9 1 175 1 369 1 199 1 345 1 360 1 
349 1 232 1 301 1 118 3 104 3 142 1 313 1 143 1 4 1 246 1 180 1 225 3 55 1 316 1 114 1 367 1 251 1 214 1 9 1 175 1 369 1 199 1 345 1 321 1 
46 1 118 3 142 1 104 3 143 1 313 1 4 1 246 1 225 3 316 1 55 1 367 1 251 1 175 1 9 1 369 1 345 1 199 1 321 1 349 1 232 1 301 1 180 1 114 2 214 1 360 1 
46 4 287 1 118 6 74 1 104 5 142 1 244 1 313 5 143 1 4 1 246 1 50 1 225 5 316 1 55 1 367 1 251 1 9 1 175 1 123 2 320 1 153 1 369 1 345 1 199 1 321 4 274 1 108 1 349 1 232 3 350 1 301 5 302 2 161 1 92 1 324 2 180 1 97 1 114 7 376 2 214 1 16 1 380 2 360 4 
46 2 287 1 142 1 104 4 143 1 147 1 4 1 246 1 50 1 55 1 251 1 9 1 153 1 56 2 345 1 199 1 349 1 350 1 301 2 302 2 161 1 114 4 214 1 360 2 118 4 313 1 225 4 316 1 175 1 123 2 369 1 320 1 321 2 274 1 232 2 92 1 324 2 180 1 376 2 380 2 
46 2 287 1 118 4 142 1 104 4 74 1 313 1 143 1 244 1 4 1 246 1 50 1 225 4 316 1 55 1 251 1 175 1 9 1 123 2 320 1 369 1 153 1 345 1 199 1 321 2 274 1 349 1 232 2 350 1 301 1 302 2 161 1 92 1 324 2 180 1 97 1 114 4 376 2 214 1 380 2 360 2 
46 2 287 1 118 4 142 1 104 4 74 1 313 1 143 1 244 1 4 1 246 1 50 1 225 4 316 1 55 1 251 1 175 1 9 1 123 2 320 1 369 1 153 1 345 1 199 1 321 2 274 1 349 1 232 2 350 1 301 1 302 2 161 1 92 1 324 2 180 1 97 1 114 4 376 2 214 1 380 2 360 2 
46 2 309 1 287 1 118 4 142 1 104 4 313 1 143 1 4 1 246 1 50 1 225 4 316 1 55 1 227 2 251 1 175 1 9 1 56 2 320 1 369 1 153 1 345 1 199 1 321 2 349 1 232 2 350 1 301 1 90 1 161 1 92 1 324 2 180 1 97 1 281 1 114 4 214 1 19 2 380 2 360 2 
46 3 287 1 118 5 74 1 142 1 104 4 313 1 143 1 244 1 4 1 246 1 50 1 225 4 316 1 55 1 251 1 175 1 9 1 123 2 320 1 153 1 369 1 345 1 199 1 321 3 274 1 108 1 349 1 232 2 350 1 301 1 302 2 161 1 92 1 324 2 180 1 97 1 114 5 376 2 214 1 380 2 360 3 
46 3 287 1 118 5 74 1 142 1 104 4 313 1 143 1 244 1 4 1 246 1 50 1 225 4 316 1 55 1 251 1 175 1 9 1 123 2 320 1 153 1 369 1 345 1 199 1 321 3 274 1 108 1 349 1 232 2 350 1 301 1 302 2 161 1 92 1 324 2 180 1 97 1 114 5 376 2 214 1 380 2 360 3 
46 2 287 1 118 4 104 4 142 1 313 1 143 1 147 1 4 1 246 1 50 1 225 4 316 1 55 1 227 2 251 1 9 1 175 1 56 2 320 1 369 1 153 1 199 1 345 1 321 2 349 1 232 2 350 1 301 1 90 1 161 1 92 1 324 2 180 1 114 4 214 1 19 2 380 2 360 2 
138 2 310 1 47 1 33 1 89 1 303 1 219 4 221 1 210 1 172 1 150 1 52 1 78 1 68 1 54 1 255 2 280 1 39 2 197 1 343 2 184 1 357 1 185 1 188 1 286 1 45 2 
138 4 47 13 219 17 145 1 75 3 172 2 150 3 52 1 8 1 83 1 197 1 343 7 370 1 31 3 348 1 61 3 159 2 207 1 303 2 210 4 94 1 36 1 66 1 68 2 255 10 280 2 135 1 39 1 185 1 358 4 188 2 45 2 286 13 
138 2 190 1 288 1 142 2 219 2 290 1 245 1 4 2 148 1 172 1 77 1 340 1 7 1 8 1 122 1 197 1 343 1 370 1 345 1 371 1 201 1 298 1 348 1 276 1 205 1 303 1 179 1 233 1 163 1 210 1 68 1 255 1 280 1 282 1 100 1 185 1 188 1 20 1 
138 6 47 7 190 2 142 3 288 2 290 3 4 3 148 3 340 1 150 3 52 3 7 2 8 1 54 1 197 3 343 9 345 1 201 1 348 1 205 1 61 2 207 4 303 3 163 2 210 7 305 2 68 3 255 9 116 2 20 2 259 1 310 1 117 2 219 18 221 1 172 3 77 2 120 1 122 1 368 1 370 1 31 2 371 3 276 2 33 1 89 1 233 1 94 2 133 2 280 3 39 4 239 2 100 2 184 1 185 1 188 3 43 1 286 7 45 8 
138 4 142 1 288 2 219 2 290 7 4 1 148 8 172 2 5 1 340 1 77 3 7 2 120 1 8 1 122 2 197 2 343 1 154 1 370 1 345 1 30 1 200 1 371 8 202 1 201 1 303 2 233 1 278 1 65 1 68 2 255 1 69 1 280 2 374 1 100 2 70 1 357 1 188 2 241 2 
138 2 47 1 142 1 219 3 4 1 172 1 340 1 150 1 52 1 197 1 228 1 343 2 345 1 31 1 348 1 61 1 303 1 233 1 210 1 235 1 94 1 68 1 255 1 280 1 39 1 375 1 188 1 45 1 286 1 
138 2 253 1 61 1 47 1 207 1 303 1 219 2 210 1 172 1 150 1 68 1 255 2 280 1 197 1 357 1 188 1 45 1 286 1 
138 2 47 1 303 1 219 2 210 1 169 1 94 1 172 1 52 1 68 1 280 1 39 1 197 1 343 2 357 1 188 1 45 1 286 1 
138 2 47 2 219 4 172 1 150 1 52 1 197 1 343 2 31 1 61 1 207 1 303 1 210 2 94 1 68 1 255 2 280 1 39 1 357 1 188 1 286 2 45 2 
138 2 253 1 61 1 47 1 207 1 303 1 219 2 210 1 5 1 172 1 150 1 68 1 255 2 280 1 197 1 188 1 45 1 286 1 
138 2 47 1 303 1 219 2 210 1 169 1 94 1 5 1 172 1 52 1 68 1 280 1 39 1 197 1 343 2 188 1 45 1 286 1 
138 2 47 2 219 4 172 1 5 1 150 1 52 1 197 1 343 2 31 1 61 1 207 1 303 1 210 2 94 1 68 1 255 2 280 1 39 1 188 1 286 2 45 2 
138 2 47 2 219 4 172 1 150 1 52 1 197 1 343 2 31 1 61 1 207 1 303 1 210 2 94 1 68 1 255 2 280 1 39 1 188 1 286 2 45 2 
138 2 276 1 117 1 190 1 303 1 142 1 288 1 219 2 290 1 163 1 4 1 172 1 148 1 77 1 7 1 8 1 68 1 255 1 280 1 122 1 197 1 343 1 100 1 370 1 185 1 371 1 188 1 20 1 
138 2 276 1 178 1 190 1 303 1 142 1 288 1 219 2 290 1 4 1 172 1 148 1 77 1 7 1 8 1 68 1 255 1 280 1 122 1 197 1 343 1 100 1 370 1 378 1 185 1 371 1 188 1 308 1 
138 2 47 2 219 4 172 1 150 1 52 1 197 1 343 2 31 1 348 1 61 1 207 1 303 1 210 2 94 1 68 1 255 2 280 1 39 1 188 1 286 2 45 2 
138 2 117 1 47 2 190 1 288 1 142 1 219 4 290 1 4 1 148 1 172 1 150 1 77 1 52 1 7 1 197 1 343 2 154 1 31 1 371 1 276 1 61 1 207 1 303 1 163 1 210 2 94 1 68 1 255 2 280 1 39 1 239 1 100 1 188 1 45 2 286 2 20 1 
138 2 47 1 142 1 219 3 4 1 172 1 340 1 150 1 52 1 197 1 343 1 228 1 345 1 31 1 348 1 61 1 207 1 303 1 233 1 210 1 94 1 235 1 68 1 255 2 280 1 188 1 336 1 45 1 286 1 
361 1 0 1 138 4 219 13 75 1 172 2 150 2 52 2 83 1 343 7 107 1 31 2 60 1 275 1 127 1 61 2 159 1 207 1 303 2 129 1 94 2 212 1 68 2 255 6 39 1 358 2 187 1 188 2 45 2 
361 1 0 4 138 6 337 1 23 1 219 26 75 2 193 1 172 3 150 3 52 2 83 2 343 12 152 1 29 1 31 3 60 1 275 1 127 1 61 3 207 2 303 3 94 2 212 2 14 1 68 3 255 14 134 1 39 1 41 2 358 2 187 2 188 3 45 3 
361 1 0 2 138 4 23 1 219 13 75 1 172 2 150 2 52 1 83 1 343 6 31 2 60 1 275 1 127 1 61 2 159 1 207 1 303 2 129 1 94 1 212 1 68 2 255 7 39 1 358 2 187 1 188 2 45 2 
361 1 0 2 138 4 23 1 219 13 75 1 172 2 150 2 52 1 83 1 343 6 31 2 60 1 275 1 127 1 61 2 159 1 207 1 303 2 129 1 94 1 212 1 68 2 255 7 39 1 358 2 187 1 188 2 45 2 
361 1 337 1 0 4 138 4 23 1 310 1 219 50 221 1 75 4 193 1 172 2 150 8 52 8 54 1 83 2 343 24 152 1 29 1 31 7 60 1 275 1 127 1 61 7 159 2 33 1 207 6 89 1 303 2 94 7 66 2 212 1 14 1 68 2 134 1 255 26 39 6 184 1 41 1 358 4 187 1 188 2 45 12 
242 1 300 1 342 1 335 1 164 1 192 1 379 1 72 1 359 1 279 1 
314 1 156 1 
242 1 300 1 342 1 174 1 164 1 72 1 27 1 279 1 315 1 
273 1 105 1 
299 1 93 1 284 1 
242 1 300 1 301 1 104 1 164 1 192 1 279 1 225 1 98 1 182 2 342 1 283 1 335 1 379 1 72 1 124 1 59 1 44 1 
242 1 300 1 301 1 104 1 164 1 192 1 279 1 225 1 98 1 182 2 342 1 283 1 335 1 379 1 72 1 124 1 59 1 44 1 
242 1 300 1 301 1 104 1 164 1 192 1 279 1 225 1 98 1 182 2 342 1 283 1 335 1 379 1 72 1 124 1 59 1 44 1 
273 1 105 1 284 1 
273 1 105 1 284 1 
299 1 93 1 
299 1 93 1 284 1 
106 1 328 1 
242 1 142 2 104 1 220 1 4 2 314 1 149 1 340 2 225 1 342 1 106 1 270 1 345 2 176 1 156 1 59 1 300 1 233 2 209 1 164 1 326 1 279 1 328 1 182 1 185 1 72 1 44 1 
138 2 288 1 142 2 219 2 290 2 4 2 148 2 172 1 77 1 7 1 194 1 8 1 264 1 197 1 343 1 370 1 345 2 371 2 348 1 373 1 303 1 128 1 278 1 65 1 68 1 255 1 280 1 166 1 100 1 188 1 241 2 
86 1 243 1 288 1 290 2 325 1 3 1 148 2 7 1 120 1 53 1 250 1 333 1 252 1 268 1 154 1 137 2 84 1 371 2 272 1 
86 1 243 1 288 1 290 1 325 1 3 1 148 1 7 1 120 1 53 1 80 1 250 1 333 1 252 1 137 2 371 1 272 1 
288 1 290 1 162 1 148 1 77 1 7 1 53 1 122 1 374 1 293 1 100 1 84 1 200 1 371 1 
86 1 243 1 288 1 290 1 325 1 3 1 148 1 7 1 120 1 53 1 250 1 333 1 252 1 268 1 137 2 84 1 371 1 272 1 
181 1 
158 1 350 1 301 1 313 1 304 1 50 1 78 1 
287 1 104 1 313 1 50 1 225 1 123 1 153 1 56 1 274 1 232 1 350 1 301 2 302 1 161 1 92 1 114 1 376 1 
48 2 287 4 288 3 104 5 143 2 290 3 148 3 49 2 50 8 150 2 7 4 52 2 151 2 154 1 153 4 56 12 109 1 61 2 158 1 350 9 301 8 160 3 161 4 304 1 354 2 211 6 305 2 213 1 307 2 114 5 71 1 168 1 362 1 21 1 313 2 263 2 77 10 364 6 79 2 225 5 122 1 123 6 31 2 371 3 276 3 277 2 232 3 92 4 131 2 94 2 330 2 136 1 100 3 240 2 
337 1 287 2 104 1 313 2 263 1 75 1 49 1 193 1 50 5 364 5 150 2 52 2 225 1 83 1 152 1 123 3 56 6 153 2 31 2 61 2 232 1 350 8 301 5 91 1 161 2 92 2 131 2 94 2 211 5 14 1 134 1 114 1 136 1 186 1 358 1 
310 1 287 1 312 1 142 1 141 1 74 1 104 1 261 1 4 1 49 1 50 2 150 2 340 1 52 1 225 1 251 1 228 1 153 1 345 1 157 1 350 2 33 1 161 1 92 1 233 1 131 2 95 1 184 1 
158 1 287 1 350 1 301 1 161 1 313 1 92 1 304 1 50 1 153 1 
61 2 350 5 301 5 131 2 94 2 49 1 50 5 211 5 150 2 364 5 305 1 52 2 123 5 56 10 31 2 
225 1 232 1 114 1 301 1 104 1 313 1 
102 1 362 1 287 2 288 2 104 3 290 4 263 2 148 4 50 2 77 2 7 3 225 3 266 1 122 2 294 1 269 1 153 2 200 1 371 4 276 1 232 2 350 2 88 1 323 1 161 2 92 1 11 1 165 1 213 2 355 1 114 4 374 1 136 2 100 2 
138 2 117 1 190 1 142 3 288 1 219 1 290 1 262 1 4 3 148 1 172 1 340 2 77 1 7 1 122 1 197 1 343 1 228 2 370 1 345 2 371 1 276 1 157 1 303 1 233 2 163 1 68 1 280 1 100 1 185 1 188 1 20 1 
287 1 350 1 301 4 89 1 161 1 313 2 92 1 263 1 211 2 50 2 364 2 136 1 123 2 56 4 153 1 
300 1 26 1 342 1 
300 1 342 1 106 1 146 1 192 1 
300 1 26 1 342 1 
300 1 26 1 342 1 
300 1 342 1 171 1 
300 1 342 1 171 1 
300 1 342 1 171 1 
300 1 342 1 
164 1 279 1 
138 4 310 1 207 1 33 1 89 1 303 2 219 6 221 1 172 2 150 1 52 1 68 2 54 1 255 3 39 2 343 3 184 1 41 1 188 2 45 3 
310 1 33 1 89 1 219 4 221 1 150 1 78 1 52 1 54 1 255 2 39 2 343 2 184 1 45 2 
138 2 61 1 207 1 303 1 219 4 94 1 172 1 150 1 52 1 68 1 255 2 39 1 343 2 31 1 42 1 188 1 45 2 
61 1 159 1 207 1 219 7 75 1 94 1 150 1 52 1 255 3 39 1 83 1 343 4 31 1 358 2 45 2 
138 4 310 2 219 21 221 1 145 1 75 2 172 2 150 3 52 3 54 1 343 11 31 2 346 1 61 2 159 1 33 2 207 4 89 1 303 2 94 2 66 1 68 2 255 10 39 5 184 1 41 2 358 2 188 2 45 9 
343 1 219 1 358 1 
255 1 219 1 75 1 
138 2 61 1 207 1 303 1 219 6 94 1 172 1 150 1 305 1 52 1 68 1 255 3 39 2 343 3 31 1 42 1 188 1 45 3 
138 2 337 1 219 12 75 1 172 1 193 1 150 2 52 2 83 1 343 6 152 1 31 2 275 1 61 2 207 1 303 1 94 2 68 1 14 1 255 6 134 1 39 1 358 1 188 1 45 2 
255 1 343 1 219 2 184 1 150 1 52 1 
138 2 310 1 207 1 33 1 303 1 219 3 221 1 172 1 54 1 68 1 255 1 39 1 343 2 41 1 346 1 188 1 45 2 
138 2 275 1 310 1 33 1 207 2 303 1 141 1 219 8 172 1 150 2 52 2 68 1 255 4 39 2 343 4 184 1 188 1 45 4 
275 1 138 2 61 1 207 1 303 1 219 2 172 1 150 1 68 1 255 2 188 1 45 1 
275 1 138 2 61 1 207 1 303 1 219 4 94 1 172 1 150 1 52 1 68 1 255 2 39 1 343 2 31 1 188 1 45 2 
275 1 138 6 310 1 33 1 207 1 303 3 219 3 129 1 172 3 68 3 255 1 39 1 343 2 41 1 346 1 188 3 45 2 
138 10 310 2 144 1 219 30 221 1 338 1 75 3 172 5 150 5 52 5 54 1 83 1 343 16 346 1 31 3 275 1 61 3 159 1 33 2 207 5 89 1 303 5 129 1 94 3 96 1 68 5 255 14 39 6 184 2 41 2 358 4 42 1 188 5 45 11 
138 2 310 1 219 9 221 1 75 1 172 1 150 2 52 1 54 1 83 1 343 4 152 1 31 1 275 1 61 1 159 1 33 1 89 1 303 1 68 1 255 5 39 2 184 1 358 2 188 1 45 2 
138 4 310 1 219 9 221 1 75 1 172 2 150 2 52 1 54 1 83 1 343 4 152 1 31 1 275 1 61 1 159 1 33 1 207 1 89 1 303 2 68 2 255 5 39 2 184 1 358 2 42 1 188 2 45 3 
138 6 337 1 310 1 219 17 221 1 75 1 193 1 172 3 150 3 52 3 54 1 83 1 343 9 152 1 31 2 275 1 61 2 33 1 207 1 89 1 303 3 94 2 68 3 14 1 255 8 134 1 39 3 184 1 41 1 42 1 358 1 188 3 45 4 
138 6 337 1 310 1 219 15 221 1 75 1 172 3 193 1 150 3 52 2 54 1 83 1 343 6 152 1 31 2 275 1 61 2 33 1 207 2 89 1 303 3 94 1 68 3 14 1 255 9 134 1 39 3 184 1 41 1 42 1 358 1 188 3 45 5 
138 2 310 1 219 9 221 1 75 1 172 1 150 2 52 1 54 1 83 1 343 4 152 1 31 1 275 1 61 1 159 1 33 1 89 1 303 1 68 1 255 5 39 2 184 1 358 2 188 1 45 2 
138 2 337 1 219 12 75 1 172 1 193 1 150 2 52 2 83 1 343 6 152 1 31 2 275 1 61 2 207 1 303 1 94 2 68 1 14 1 255 6 134 1 39 1 358 1 188 1 45 2 
138 8 337 1 310 1 219 16 221 1 75 1 193 1 172 4 150 3 52 2 54 1 83 1 343 7 152 1 31 2 275 1 61 2 33 1 207 2 89 1 303 4 94 1 14 1 68 4 255 9 134 1 39 3 184 1 41 2 358 1 42 1 188 4 45 5 
138 8 337 1 219 16 75 1 193 1 172 4 150 3 52 2 83 1 343 7 152 1 31 3 275 1 61 3 207 3 303 4 129 1 94 2 14 1 68 4 255 9 134 1 39 3 41 2 358 1 188 4 45 6 
310 2 33 2 207 3 141 1 89 1 219 9 221 1 150 3 52 3 54 1 255 5 39 4 343 4 184 2 45 7 
138 8 337 1 310 1 219 16 221 1 75 1 193 1 172 4 150 3 52 2 54 1 83 1 343 7 152 1 31 2 275 1 61 2 33 1 207 1 89 1 303 4 129 1 94 1 14 1 68 4 255 9 134 1 39 3 184 1 41 2 358 1 188 4 45 4 
113 1 142 1 345 1 185 1 4 1 246 1 37 1 
1 1 142 1 2 1 4 1 170 1 246 1 37 1 113 1 57 1 345 1 185 1 203 1 
374 1 122 1 288 1 100 1 290 1 200 1 148 1 371 1 77 1 7 1 78 1 
276 1 190 1 142 2 288 1 233 1 290 1 4 2 148 1 77 1 340 1 7 1 122 1 100 1 345 1 185 1 371 1 201 1 20 1 
276 2 190 1 142 2 288 1 233 1 290 1 4 2 354 1 148 1 77 3 340 2 7 1 213 1 55 1 316 1 151 1 251 1 100 2 345 2 185 1 371 1 201 1 20 1 
190 1 288 1 142 2 290 2 4 2 148 2 340 2 77 3 7 1 316 1 55 1 151 1 251 1 296 1 345 2 371 2 201 1 276 2 178 1 233 1 354 1 213 1 100 2 185 1 
288 1 104 2 143 1 313 1 290 3 148 3 77 4 7 1 225 2 151 1 122 1 296 1 10 1 371 3 125 1 276 1 301 1 160 1 354 1 330 1 213 1 114 1 100 1 
276 1 301 1 104 2 160 1 288 1 313 1 143 1 290 3 354 1 148 3 77 4 7 1 330 1 225 2 213 1 151 1 122 1 307 1 114 1 100 1 296 1 371 3 
288 1 290 1 148 1 371 1 202 1 7 1 
276 1 288 2 290 6 278 1 148 7 11 1 165 1 77 3 7 3 120 1 332 1 69 1 122 2 100 2 70 1 154 1 71 1 30 1 371 7 241 1 202 1 
138 4 47 1 190 1 142 2 288 1 290 1 4 2 148 1 340 1 150 1 194 1 7 1 52 1 54 1 197 2 343 2 154 1 345 1 201 1 348 1 303 2 163 1 210 1 68 2 255 2 20 1 117 1 310 1 219 4 221 1 172 2 77 1 371 1 276 1 33 1 89 1 233 1 133 1 280 2 39 2 239 1 100 1 184 1 185 1 188 2 45 2 286 1 
362 1 287 2 48 1 104 3 313 1 143 1 290 1 148 1 50 1 149 1 77 2 225 3 79 1 122 1 153 2 371 1 277 1 158 1 232 1 350 1 301 1 160 1 161 2 92 2 304 1 330 1 307 1 114 2 
276 1 288 1 290 2 148 2 77 2 330 1 7 2 100 1 154 1 71 1 371 2 202 1 168 1 
218 1 288 1 290 4 148 4 77 1 7 1 122 1 374 1 100 1 154 1 296 1 200 1 371 4 
102 1 276 1 288 1 290 2 148 2 11 1 165 1 77 1 7 2 213 1 266 1 368 1 100 1 371 2 
333 1 122 1 252 1 288 1 290 1 137 1 148 1 371 1 272 1 7 1 
288 1 290 2 278 1 148 2 77 1 7 1 120 1 166 1 100 1 154 1 371 2 
218 1 288 2 290 4 278 1 148 5 77 3 7 2 213 1 374 1 122 1 100 2 154 1 70 1 200 1 30 1 371 5 
218 1 288 2 290 4 278 1 148 5 77 3 7 2 213 1 374 1 122 1 256 1 100 2 154 1 70 1 200 1 371 5 
276 1 190 1 178 1 142 2 288 1 233 1 290 1 4 2 148 1 77 1 340 1 7 1 122 1 100 1 345 1 185 1 371 1 201 1 
276 1 288 1 290 1 148 1 11 1 165 1 77 1 7 2 213 1 332 1 100 1 71 1 371 1 
264 1 373 1 173 1 142 1 128 1 110 1 345 1 4 1 58 1 
317 1 356 1 58 1 
173 1 110 1 185 1 58 1 223 1 
301 1 104 2 313 1 143 1 110 2 223 2 149 1 247 1 225 2 55 1 316 1 317 1 251 1 356 1 173 2 175 1 198 1 185 1 58 1 
24 1 206 1 62 1 78 1 
126 1 366 1 24 1 206 1 139 1 62 1 230 1 
254 1 322 1 139 1 
126 1 24 1 206 1 139 3 62 1 236 1 365 1 366 1 249 2 377 1 101 1 230 3 
126 1 366 1 24 1 206 1 103 1 139 2 62 1 6 1 230 2 
126 1 24 1 139 1 243 1 13 1 366 1 238 1 137 1 272 1 101 1 230 1 
126 1 366 1 24 1 206 1 139 1 230 1 101 1 
126 1 366 1 206 2 139 1 62 1 230 1 101 1 
126 2 24 1 206 1 139 2 191 1 366 2 81 1 32 1 101 1 230 2 
126 1 231 1 206 1 363 1 24 2 139 3 62 1 6 2 366 1 238 1 155 1 101 1 230 3 
126 1 24 1 206 1 139 2 62 1 243 1 325 1 6 1 366 1 248 1 252 1 137 2 272 1 101 1 230 2 
126 2 231 1 206 1 103 1 24 2 139 4 62 1 6 2 366 2 238 1 15 1 101 1 230 4 
126 1 366 1 24 1 206 1 139 1 62 1 230 1 101 1 
126 1 231 1 206 2 22 1 24 3 139 4 62 2 236 1 6 2 366 1 249 1 238 1 377 1 230 4 
126 1 24 1 206 1 139 2 62 1 6 1 366 1 306 1 28 1 17 1 101 1 230 2 
126 1 24 1 206 1 139 3 62 1 292 1 236 2 366 1 249 2 377 1 101 1 230 3 
265 1 24 2 64 2 34 1 
126 1 366 1 372 1 139 1 230 1 101 1 
126 1 366 1 24 1 206 1 363 1 139 2 62 1 6 1 230 2 101 1 
167 1 
126 1 366 1 24 1 206 1 139 1 62 1 230 1 101 1 
126 1 366 1 363 1 24 1 206 1 249 1 139 3 62 1 6 1 230 3 101 1 
231 1 22 1 24 1 238 1 
24 1 206 1 

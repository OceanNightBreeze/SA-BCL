#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 2 (100,290) (100,290) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 2 (100,290) (100,290) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 2 (100,290) (100,290) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 2 (100,290) (100,290) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (54,74) 279 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (255,314) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (144,215,329) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (255,314) (255,314) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (144,215,329) (144,215,329) 164 53 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 45 82 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (54,74) (54,74) (7,254) 292 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (54,74) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (54,74) (54,74) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 17 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (255,314) (255,314) 67 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (54,74) 279 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 99 (8,93) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 99 (8,93) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 99 (157,226) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 99 (157,226) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
56 1 248 1 34 1 290 1 2 1 204 1 333 1 184 1 100 1 312 1 120 1 
56 1 248 1 34 1 290 1 2 1 204 1 333 1 184 1 100 1 312 1 120 1 
56 1 248 1 34 1 290 1 2 1 204 1 333 1 184 1 100 1 312 1 120 1 
56 1 248 1 34 1 290 1 2 1 204 1 333 1 184 1 100 1 312 1 120 1 
135 1 288 3 261 1 318 1 321 3 26 1 101 1 269 1 120 4 56 4 172 1 327 1 248 1 249 1 333 1 206 2 312 1 214 2 
288 1 135 1 289 1 318 1 36 1 26 1 120 2 56 2 172 1 248 1 10 1 204 1 333 1 64 1 184 1 312 1 
288 2 318 1 321 1 224 1 269 1 120 3 56 3 172 1 248 1 333 2 184 1 312 2 214 1 
288 5 135 1 137 1 101 1 302 1 248 1 249 1 206 2 312 2 214 4 261 1 262 1 318 1 321 7 26 1 224 1 269 3 86 1 120 9 56 9 172 1 327 1 333 2 184 1 
288 5 135 1 137 1 101 1 302 1 248 1 249 1 206 2 312 2 214 4 261 1 262 1 318 1 321 7 26 1 224 1 269 3 86 1 120 9 56 9 172 1 327 1 333 2 184 1 
163 1 218 1 310 1 
218 1 112 1 72 2 
32 2 89 2 33 1 50 2 222 2 253 2 213 2 
32 1 33 1 50 1 222 1 98 1 225 2 74 1 58 1 89 1 61 2 253 1 279 1 210 1 159 1 286 2 213 1 
314 1 32 1 89 1 33 1 50 1 222 1 253 1 213 1 
161 1 215 1 89 1 50 1 253 1 144 1 
32 1 89 1 50 1 222 1 253 1 144 1 213 1 
329 1 307 1 138 1 203 1 322 1 
28 1 218 1 329 2 307 1 203 1 4 1 322 2 310 1 
329 1 307 1 322 1 
314 1 32 1 89 1 33 1 50 1 329 1 222 1 203 1 253 1 255 1 322 1 213 1 
218 1 
28 1 148 1 218 1 329 2 307 1 203 1 322 2 310 1 
218 1 24 1 322 5 242 1 116 2 102 2 244 2 104 1 28 1 329 5 14 1 203 2 307 2 209 1 310 1 212 1 338 1 66 1 188 1 
163 1 
32 1 89 2 50 2 222 1 253 2 16 1 78 1 213 1 
58 1 32 1 89 1 273 1 50 1 61 1 305 1 253 1 225 1 286 1 213 1 
32 3 89 3 50 3 305 1 222 1 253 3 213 3 
32 1 89 1 50 1 253 1 213 1 
32 1 89 1 50 1 222 1 16 1 253 1 78 1 213 1 
32 2 89 2 273 1 50 2 305 1 222 1 253 2 78 1 213 2 
161 1 32 1 89 2 50 2 305 1 253 2 170 1 213 1 
32 1 89 1 273 1 50 1 305 1 253 1 213 1 
32 1 89 1 50 1 222 1 253 1 78 1 213 1 
58 1 61 1 225 1 286 1 
58 1 61 1 225 1 286 1 
301 1 11 1 13 1 265 1 311 2 145 1 79 1 259 1 
32 1 89 1 50 1 253 1 308 1 213 1 
161 1 32 4 50 5 222 1 240 1 170 1 89 5 273 1 305 2 253 5 78 1 213 4 313 1 
32 1 89 1 50 1 253 1 213 1 
63 1 252 1 
63 1 252 1 
92 1 119 1 
92 1 119 1 
92 1 119 1 
216 1 63 1 252 1 
63 1 252 1 211 1 
326 1 92 1 63 2 252 2 38 1 119 1 
216 1 63 1 252 1 
216 1 63 1 252 1 
63 1 81 1 252 1 
63 1 81 1 252 1 
63 1 81 1 252 1 
218 1 317 1 322 2 268 1 103 1 326 1 300 1 173 3 177 2 329 2 63 2 231 1 252 2 208 2 335 1 132 2 236 2 19 1 47 2 
32 2 95 1 50 2 322 1 324 1 73 1 103 1 173 1 41 1 89 2 274 1 177 1 329 1 77 1 126 1 63 1 253 2 252 1 208 1 211 1 132 1 236 1 213 2 
135 1 249 1 26 1 
135 1 26 1 64 1 
135 3 88 1 249 2 64 1 267 1 246 1 
135 2 88 1 51 1 249 1 64 1 267 1 
135 2 88 2 249 1 64 1 267 1 
68 1 190 1 37 1 72 3 197 1 244 1 102 1 105 1 104 3 41 1 14 1 307 1 203 4 310 1 212 2 20 1 260 1 218 2 112 1 322 5 168 1 116 1 84 2 28 1 121 2 274 1 328 1 329 5 330 1 126 1 133 2 187 1 
190 3 138 5 37 3 72 9 197 3 297 1 102 2 244 2 105 2 104 8 75 1 41 4 150 1 307 6 203 7 14 1 15 1 153 1 209 1 310 1 212 6 260 2 218 5 112 3 322 9 168 3 116 2 84 6 28 1 121 6 122 5 328 3 329 9 334 1 187 1 
190 1 37 1 197 1 72 4 244 1 102 1 105 1 104 3 41 1 203 2 209 1 310 1 212 2 20 1 260 1 218 3 112 2 322 3 168 1 116 1 84 2 121 2 328 1 330 1 329 3 133 1 
190 2 37 2 72 7 197 2 244 1 102 1 105 1 104 5 75 1 41 2 150 1 203 3 15 1 209 1 310 1 212 4 20 1 260 1 218 4 112 3 322 4 168 2 116 1 84 4 121 4 328 2 329 4 330 1 133 2 
299 1 163 1 143 1 
299 1 127 1 
171 1 
299 1 114 1 
299 3 49 1 114 1 325 1 143 2 287 1 
299 1 114 1 287 1 
299 1 278 1 
190 1 70 3 96 1 3 1 167 1 168 1 85 2 245 7 55 1 106 1 123 2 107 3 251 1 207 1 336 4 31 1 285 1 
190 1 70 3 96 1 3 1 167 1 168 1 85 2 245 7 55 1 106 1 123 2 107 3 251 1 207 1 336 4 31 1 285 1 
190 1 70 3 96 1 25 1 167 1 3 1 168 1 85 2 245 7 55 1 106 1 123 2 107 3 251 1 207 1 336 4 31 1 285 1 
190 4 70 10 96 2 3 2 142 4 37 3 197 3 145 1 245 31 106 2 301 1 201 1 11 1 107 15 251 2 207 1 311 2 259 1 167 1 168 4 169 3 323 1 85 3 55 5 227 1 123 5 60 1 328 3 179 1 336 16 337 1 31 1 285 1 237 1 
190 1 70 4 96 1 1 1 3 1 145 2 245 9 200 1 301 2 106 1 11 2 107 4 251 1 207 1 311 4 259 2 167 1 168 1 85 2 55 1 227 1 123 3 336 5 31 1 
288 1 135 2 191 1 295 1 246 1 298 1 9 1 149 1 248 1 304 1 249 1 312 1 22 1 318 1 219 1 113 1 321 1 26 1 117 1 225 1 120 2 56 2 172 1 61 1 333 1 184 1 64 1 186 1 94 1 286 1 
288 1 135 2 191 1 35 1 246 1 298 1 9 1 149 1 304 1 249 1 256 1 312 1 22 1 318 1 219 1 113 1 321 2 26 1 117 1 225 1 120 3 56 3 172 1 61 1 331 1 333 1 184 1 64 1 186 1 286 1 
288 1 135 2 191 1 35 1 246 1 9 1 149 1 304 1 249 1 256 1 318 1 219 1 113 1 321 2 26 1 117 1 225 1 120 2 56 2 172 1 61 1 184 1 64 1 186 1 286 1 
191 1 23 1 263 1 219 2 114 1 115 1 296 1 225 1 120 1 272 1 56 1 299 1 58 1 9 2 149 1 125 1 61 1 331 1 333 1 184 2 312 1 186 2 286 1 
135 2 22 1 191 1 113 1 219 1 26 1 295 1 117 1 225 1 246 1 120 1 298 1 56 1 9 1 149 1 248 1 61 1 304 1 249 1 333 1 256 1 64 1 184 1 312 1 186 1 286 1 
280 1 
191 1 144 1 244 1 102 1 104 1 299 1 149 1 14 1 307 2 253 1 250 1 108 1 212 1 260 1 161 1 215 1 50 1 164 1 23 1 220 1 114 1 322 2 27 1 116 1 53 1 225 2 272 1 58 2 28 1 89 1 61 2 329 2 128 1 286 2 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
215 1 161 1 50 1 164 1 220 1 322 2 27 1 53 1 144 1 28 1 89 1 148 1 329 2 307 1 253 1 
161 1 215 1 50 1 164 1 220 1 322 1 116 1 27 1 53 1 144 1 102 1 244 1 89 1 329 1 14 1 253 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 89 1 50 1 164 1 329 1 220 1 253 1 322 1 27 1 53 1 144 1 
161 1 215 1 50 1 164 1 220 1 322 1 116 1 27 1 53 1 144 1 102 1 244 1 89 1 329 1 14 1 253 1 
190 1 70 1 163 1 167 1 265 1 85 1 245 2 145 1 106 1 301 1 123 1 11 1 13 1 251 1 207 1 336 2 311 2 31 1 79 1 259 1 
82 1 265 1 169 1 142 1 245 2 145 1 301 1 76 1 11 1 107 1 336 1 311 2 45 1 79 1 259 1 
109 1 80 1 32 1 50 1 265 1 245 2 145 1 301 1 273 1 89 1 305 1 76 1 11 1 107 1 332 1 253 1 336 1 311 2 213 1 79 1 339 1 259 1 
32 1 292 1 7 1 245 1 145 1 74 1 301 1 11 1 76 1 305 1 107 1 253 1 311 2 79 1 213 1 259 1 80 1 50 1 265 1 54 1 225 1 58 1 89 1 273 1 61 1 286 1 
109 1 291 1 265 1 245 1 145 1 225 1 58 1 301 1 124 1 61 1 11 1 336 1 311 2 79 1 286 1 259 1 
190 1 32 1 37 1 197 1 145 1 245 2 301 1 11 1 76 1 107 1 253 1 78 1 311 2 213 1 79 1 259 1 50 1 222 1 265 1 168 1 89 1 328 1 228 1 336 1 
190 1 265 1 37 1 245 1 145 1 247 1 301 1 11 1 13 1 311 2 336 1 79 1 259 1 
265 1 194 1 168 1 245 1 145 1 301 1 328 1 11 1 13 1 107 1 311 2 79 1 259 1 
190 1 168 1 265 1 37 1 197 1 245 2 145 1 301 1 328 1 11 1 107 1 13 1 311 2 336 1 79 1 259 1 
190 1 291 1 265 1 37 1 245 1 145 1 247 1 301 1 11 1 311 2 336 1 79 1 259 1 
291 1 265 1 194 1 168 1 245 1 145 1 301 1 328 1 11 1 107 1 311 2 79 1 259 1 
190 1 291 1 168 1 265 1 37 1 197 1 245 2 145 1 301 1 328 1 11 1 107 1 311 2 336 1 79 1 259 1 
190 1 168 1 265 1 37 1 197 1 145 1 245 2 301 1 328 1 11 1 107 1 311 2 336 1 79 1 259 1 
58 1 61 1 225 1 286 1 74 1 
58 1 69 1 61 1 225 1 286 1 
190 1 168 1 265 1 37 1 197 1 245 2 145 1 301 1 328 1 76 1 11 1 107 1 311 2 336 1 79 1 259 1 
61 1 94 1 54 1 225 1 286 1 74 1 
190 1 32 1 37 1 197 1 145 1 245 2 301 1 11 1 76 1 107 1 253 1 78 1 311 2 213 1 79 1 259 1 50 1 222 1 265 1 168 1 89 1 328 1 277 1 336 1 
189 2 190 3 70 6 1 1 192 1 241 1 142 2 195 1 37 3 197 3 145 2 245 19 301 2 201 1 11 2 107 10 158 1 311 4 259 2 111 2 168 3 169 1 55 3 123 3 60 1 328 3 30 1 233 1 183 1 336 9 
189 4 190 3 70 4 1 1 192 1 5 1 195 2 142 2 37 3 197 3 145 3 245 26 301 3 11 3 107 12 311 6 259 3 111 1 166 1 264 1 83 1 168 2 169 2 55 2 227 2 123 2 60 2 328 2 180 1 275 1 30 1 233 2 183 1 336 14 
189 4 190 5 70 8 1 1 192 1 5 1 142 4 195 1 37 4 197 4 145 3 245 41 106 1 301 3 201 1 11 3 107 21 251 1 207 1 158 1 311 6 259 3 111 1 166 1 167 1 264 1 83 1 168 5 169 3 85 1 55 4 227 1 123 4 60 3 328 4 180 1 275 1 181 1 30 1 233 2 183 1 336 20 31 1 
189 4 190 5 70 7 1 1 192 1 5 1 142 4 195 1 37 4 197 4 145 4 245 38 106 1 301 4 201 1 11 4 107 18 251 1 207 1 158 1 311 8 259 4 111 1 166 1 167 1 264 1 83 1 168 4 169 3 85 1 55 3 227 2 123 4 60 3 328 3 180 1 275 1 181 1 30 1 233 2 183 1 336 20 31 1 
189 4 190 8 70 14 1 1 192 1 5 1 142 4 195 1 37 7 197 7 145 2 245 52 106 1 301 2 201 2 11 2 107 25 251 1 207 1 311 4 160 2 259 2 111 1 166 1 167 1 264 1 83 1 168 8 169 4 85 1 55 7 227 1 123 7 60 2 328 7 180 1 275 1 30 1 233 1 183 1 336 27 31 1 
326 1 300 1 177 1 63 1 231 1 320 1 252 1 208 1 132 1 236 1 
211 1 73 1 
57 1 177 1 178 1 63 1 152 1 252 1 208 1 132 1 236 1 
218 1 317 1 322 1 268 1 103 1 326 1 300 1 173 2 177 1 329 1 63 1 231 1 252 1 208 1 132 1 236 1 19 1 47 1 
218 1 317 1 322 1 268 1 103 1 326 1 300 1 173 2 177 1 329 1 63 1 231 1 252 1 208 1 132 1 236 1 19 1 47 1 
218 1 317 1 322 1 268 1 103 1 326 1 300 1 173 2 177 1 329 1 63 1 231 1 252 1 208 1 132 1 236 1 19 1 47 1 
216 1 52 1 38 1 
216 1 52 1 38 1 
175 1 81 1 
175 1 81 1 38 1 
95 1 77 1 
32 2 95 1 196 1 73 1 41 1 77 1 203 1 253 2 252 1 208 1 211 1 19 1 213 2 47 1 50 2 322 1 324 1 173 1 89 2 177 1 274 1 329 1 63 1 126 1 132 1 236 1 
216 1 52 1 
175 1 81 1 38 1 
176 1 42 1 89 2 50 2 151 1 253 2 
135 2 191 1 319 1 26 1 117 1 225 2 246 1 298 1 149 1 61 2 12 1 304 1 249 1 256 1 155 1 64 1 186 1 94 1 286 2 
135 2 191 1 319 1 26 1 117 1 225 1 246 1 298 1 149 1 61 1 304 1 249 1 256 1 64 1 186 1 134 1 286 1 
191 1 23 1 114 1 141 1 296 1 225 1 272 1 299 1 58 1 149 1 61 1 12 1 186 1 286 1 
135 2 191 1 319 1 26 1 117 1 225 1 246 1 298 1 149 1 61 1 12 1 304 1 249 1 256 1 155 1 64 1 186 1 286 1 
258 1 
163 1 218 1 24 1 242 1 310 1 212 1 104 1 
97 1 72 1 244 1 102 1 104 1 14 1 307 1 310 1 212 1 218 2 112 1 322 1 116 1 266 1 271 1 28 1 329 1 
191 1 114 1 116 1 325 1 102 1 244 1 225 1 299 2 58 1 149 2 61 1 127 1 14 1 17 1 281 1 286 1 287 1 
190 2 5 1 142 1 37 2 72 6 197 2 244 2 102 2 146 1 104 8 307 1 14 2 250 1 310 2 212 5 260 1 162 2 218 5 221 1 112 3 166 1 264 1 322 1 168 2 116 2 169 1 84 5 28 1 121 5 60 1 328 2 329 1 62 1 180 1 275 1 
67 1 190 1 32 1 33 1 244 1 102 1 104 2 106 1 14 1 253 1 251 1 43 1 207 1 255 1 212 1 213 1 314 1 162 2 50 1 222 1 322 1 168 1 116 1 89 1 329 1 
218 1 24 1 242 1 116 1 102 1 244 1 104 1 14 1 310 1 212 1 
190 2 162 2 218 5 221 1 112 5 168 2 37 2 197 2 72 10 84 5 104 5 121 5 328 2 212 5 46 1 
28 1 218 1 329 1 307 1 322 1 310 1 
191 1 294 1 244 2 102 2 104 2 299 1 149 1 14 1 307 4 250 2 209 1 108 1 212 2 260 2 23 1 114 1 322 3 116 2 225 4 272 1 87 2 58 2 28 2 59 1 61 4 329 3 128 1 276 1 286 4 
58 1 32 1 89 1 33 1 50 1 61 1 222 1 253 1 279 1 225 1 286 1 213 1 74 1 
260 1 218 4 112 2 116 1 72 4 85 1 84 2 102 1 244 1 104 1 121 2 14 1 250 1 310 2 212 2 
21 1 177 1 208 1 
300 1 95 1 177 1 208 1 309 1 
21 1 177 1 208 1 
21 1 177 1 208 1 
177 1 208 1 243 1 
177 1 208 1 243 1 
177 1 208 1 243 1 
177 1 208 1 
63 1 252 1 
190 1 70 3 167 1 168 1 85 1 245 8 145 2 55 1 301 2 227 1 106 1 123 2 11 2 107 4 251 1 207 1 336 4 311 4 31 1 259 2 
190 1 163 1 70 2 167 1 168 1 85 1 245 6 106 1 123 2 107 3 251 1 207 1 336 3 31 1 
190 1 70 2 168 1 37 1 197 1 145 1 245 4 55 1 301 1 123 1 328 1 11 1 107 2 29 1 311 2 336 2 259 1 
190 1 70 2 168 1 142 2 169 1 37 1 197 1 245 7 55 1 123 1 328 1 60 1 201 1 107 4 336 3 
190 3 70 9 37 2 142 2 197 2 245 23 145 2 106 2 301 2 201 1 11 2 107 12 251 2 207 1 311 4 45 1 160 1 259 2 167 1 168 3 169 2 85 1 55 4 227 2 123 5 328 2 336 11 65 1 31 1 
107 1 142 1 245 1 
336 1 169 1 245 1 
190 1 70 3 168 1 37 1 197 1 145 1 245 6 55 1 301 1 123 2 328 1 11 1 107 3 29 1 311 2 336 3 46 1 259 1 
190 2 70 2 1 1 5 1 142 1 37 2 197 2 245 12 145 1 301 1 11 1 107 6 311 2 259 1 166 1 264 1 168 2 169 1 55 1 123 1 60 1 328 2 180 1 275 1 336 6 
190 1 70 2 168 1 245 6 55 1 106 1 123 1 107 3 251 1 207 1 336 3 
70 2 167 1 245 3 145 1 55 1 106 1 227 1 301 1 123 1 11 1 107 2 251 1 336 1 65 1 311 2 31 1 259 1 
67 1 190 2 70 5 1 1 168 2 145 1 245 10 55 2 301 1 106 2 123 3 11 1 107 5 251 2 207 1 311 2 336 5 259 1 
190 1 70 1 1 1 37 1 145 1 245 2 55 1 301 1 11 1 311 2 336 2 259 1 
190 1 70 2 1 1 168 1 37 1 197 1 145 1 245 4 55 1 301 1 123 1 328 1 11 1 107 2 311 2 336 2 259 1 
70 2 1 1 245 3 145 3 55 1 227 1 301 3 106 1 123 1 11 3 107 2 251 1 65 1 158 1 311 6 336 1 259 3 
190 5 70 12 1 1 142 4 37 3 197 3 145 5 245 34 106 3 301 5 201 1 11 5 107 18 251 3 207 2 158 1 311 10 259 5 167 1 168 5 169 3 85 1 55 5 227 2 123 7 60 1 328 3 179 1 29 1 65 1 337 1 336 16 31 1 237 1 
190 1 70 2 1 1 142 1 245 8 145 1 301 1 106 1 11 1 107 4 251 1 207 1 311 2 259 1 167 1 168 1 169 1 85 1 123 2 60 1 275 1 336 4 31 1 
190 2 70 3 1 1 142 2 37 1 197 1 245 11 145 2 106 1 301 2 201 1 11 2 107 5 251 1 207 1 311 4 259 2 167 1 168 1 169 1 85 1 55 1 123 2 60 1 275 1 29 1 336 6 31 1 
190 3 70 4 1 1 5 1 142 1 37 2 197 2 245 19 145 3 106 1 301 3 11 3 107 10 251 1 207 1 311 6 259 3 166 1 167 1 264 1 168 3 169 1 85 1 55 1 227 1 123 3 60 1 328 2 180 1 275 1 29 1 336 9 31 1 
190 3 70 5 1 1 5 1 142 1 37 2 197 2 245 17 145 3 106 1 301 3 11 3 107 7 251 1 207 1 311 6 259 3 166 1 167 1 264 1 168 2 169 1 85 1 55 2 227 1 123 3 60 1 328 1 180 1 275 1 29 1 336 10 31 1 
190 1 70 2 1 1 142 1 245 8 145 1 301 1 106 1 11 1 107 4 251 1 207 1 311 2 259 1 167 1 168 1 169 1 85 1 123 2 60 1 275 1 336 4 31 1 
190 2 70 2 1 1 5 1 142 1 37 2 197 2 245 12 145 1 301 1 11 1 107 6 311 2 259 1 166 1 264 1 168 2 169 1 55 1 123 1 60 1 328 2 180 1 275 1 336 6 
190 3 70 5 1 1 5 1 142 1 37 2 197 2 245 18 145 4 106 1 301 4 11 4 107 8 251 1 207 1 311 8 259 4 166 1 167 1 264 1 168 2 169 1 85 1 55 2 227 2 123 3 60 1 328 1 180 1 275 1 29 1 336 10 31 1 
190 3 70 6 1 1 5 1 142 1 37 3 197 3 245 16 145 4 301 4 11 4 107 7 311 8 158 1 259 4 166 1 264 1 168 2 169 1 55 3 227 2 123 3 60 1 328 2 180 1 275 1 336 9 
190 1 70 6 167 2 168 1 245 7 55 3 106 3 123 3 107 4 251 3 207 1 336 3 31 1 
190 3 70 4 1 1 5 1 142 1 37 2 197 2 245 18 145 4 106 1 301 4 11 4 107 8 251 1 207 1 311 8 158 1 259 4 166 1 167 1 264 1 168 2 169 1 85 1 55 1 227 2 123 3 60 1 328 1 180 1 275 1 336 10 31 1 
48 1 161 1 89 1 50 1 253 1 170 1 
48 1 161 1 0 1 50 1 293 1 170 1 199 1 89 1 253 1 283 1 284 1 
272 1 299 1 58 1 191 1 163 1 149 1 23 1 61 1 114 1 225 1 286 1 
32 1 191 1 50 1 114 1 99 1 225 1 299 1 58 1 89 1 149 1 61 1 305 1 253 1 93 1 213 1 286 1 287 1 
32 1 191 1 50 1 114 1 99 1 225 1 299 1 87 1 89 1 149 1 61 1 305 1 253 1 93 1 213 1 286 1 287 1 
32 1 191 1 50 1 114 1 99 1 225 1 299 1 87 1 89 1 149 1 61 1 305 1 253 1 157 1 213 1 286 1 287 1 
191 1 140 1 143 1 299 4 149 1 307 1 310 1 315 1 218 1 114 1 322 2 225 3 226 1 87 1 58 1 61 3 329 2 230 1 127 1 278 1 185 1 286 3 287 1 
315 1 191 1 218 1 114 1 322 2 143 1 225 3 58 1 87 1 8 1 299 4 149 1 329 2 61 3 230 1 127 1 307 1 278 1 310 1 185 1 286 3 287 1 
191 1 149 1 61 1 182 1 225 1 286 1 
238 1 136 1 191 2 114 2 325 1 225 7 58 2 299 3 91 1 149 3 61 6 182 1 256 1 257 1 129 1 130 1 156 1 159 1 94 1 286 7 287 1 
32 1 89 1 50 1 305 1 253 1 213 1 
242 1 143 1 244 2 102 2 104 1 8 1 299 2 14 2 203 1 307 2 254 1 310 1 212 1 218 1 24 1 322 3 116 2 225 1 58 1 28 1 90 1 61 1 329 3 276 1 127 1 185 1 234 1 286 1 
191 1 114 1 325 1 143 1 225 2 299 2 149 2 61 2 182 1 281 1 94 1 286 2 287 1 
191 1 165 1 23 1 114 1 225 4 272 1 58 1 299 1 149 1 61 4 230 1 94 1 286 4 
136 1 191 1 217 1 114 1 225 2 87 1 299 1 149 2 303 1 61 2 156 1 131 1 286 2 287 1 
135 1 58 1 191 1 149 1 61 1 26 1 64 1 117 1 225 1 286 1 
191 1 114 1 225 2 174 1 299 1 149 1 61 2 256 1 130 1 94 1 286 2 
238 1 191 2 165 1 23 1 114 2 225 5 272 1 87 1 58 1 299 3 149 2 61 4 257 1 130 1 94 1 286 5 
238 1 191 2 165 1 23 1 114 2 225 5 272 1 87 1 58 1 299 3 149 2 61 4 130 1 18 1 94 1 286 5 
32 1 191 1 50 1 114 1 99 1 225 1 299 1 58 1 89 1 149 1 61 1 305 1 253 1 157 1 213 1 286 1 287 1 
136 1 191 1 114 1 325 1 225 1 87 1 299 1 91 1 149 2 61 1 156 1 286 1 287 1 
50 1 147 1 176 1 42 1 89 1 151 1 205 1 253 1 44 1 
110 1 202 1 205 1 
147 1 205 1 44 1 6 1 
147 1 110 1 202 1 329 1 203 1 71 1 205 1 322 1 44 1 6 1 
288 1 172 1 163 1 318 1 
56 1 288 1 172 1 318 1 333 1 312 1 120 1 
56 1 219 1 184 1 
288 1 239 1 318 1 193 1 120 3 56 3 172 1 248 1 10 2 333 1 232 1 312 1 
56 2 288 1 172 1 318 1 321 1 333 1 206 1 312 1 120 2 
288 1 135 1 26 1 120 1 56 1 327 1 248 1 249 1 333 1 312 1 214 1 
56 1 288 1 172 1 248 1 333 1 312 1 120 1 
56 1 172 2 318 1 248 1 333 1 312 1 120 1 
288 1 223 1 120 2 56 2 172 1 248 1 154 1 333 2 312 2 235 1 
288 2 137 1 318 1 321 2 86 1 269 1 120 3 56 3 172 1 248 1 333 1 312 1 214 1 
288 1 135 2 318 1 321 1 26 1 120 2 246 1 56 2 172 1 248 1 249 1 333 1 64 1 312 1 282 1 
288 2 318 1 321 2 101 1 269 1 120 4 56 4 172 1 248 1 333 2 206 1 312 2 214 1 
56 1 288 1 172 1 318 1 248 1 333 1 312 1 120 1 
288 3 239 1 318 2 321 2 118 1 269 1 120 4 56 4 172 2 10 1 333 1 232 1 312 1 214 1 
288 1 262 1 318 1 321 1 120 2 40 1 56 2 172 1 248 1 229 1 333 1 312 1 
288 1 239 1 318 1 120 3 56 3 172 1 248 1 306 1 10 2 333 1 232 2 312 1 
288 2 139 1 39 2 270 1 
56 1 316 1 248 1 333 1 312 1 120 1 
56 2 288 1 172 1 137 1 318 1 248 1 321 1 333 1 312 1 120 2 
198 1 
56 1 288 1 172 1 318 1 248 1 333 1 312 1 120 1 
288 1 137 1 318 1 321 1 120 3 56 3 172 1 248 1 10 1 333 1 312 1 
288 1 118 1 214 1 269 1 
288 1 172 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
371 1 345 2 249 1 293 2 250 1 182 5 35 2 38 1 185 1 351 1 259 1 97 3 357 2 262 1 100 9 306 6 21 1 360 1 213 1 363 4 309 9 266 2 311 2 221 2 57 1 138 1 107 1 226 1 
371 1 345 2 249 1 293 2 250 1 182 5 35 2 38 1 185 1 351 1 259 1 97 3 357 2 262 1 100 9 306 6 21 1 360 1 213 1 363 4 309 9 266 2 311 2 221 2 57 1 138 1 107 1 226 1 
371 1 345 2 249 1 293 2 250 1 182 6 35 2 38 1 185 1 351 1 259 1 97 4 357 2 262 1 100 10 306 7 21 1 360 1 213 1 363 5 309 10 266 2 311 2 221 2 57 1 138 1 107 1 226 1 
345 2 249 1 293 2 250 1 182 4 35 1 38 1 185 1 351 1 259 1 97 2 357 2 262 1 100 7 306 4 21 1 360 1 213 1 363 3 309 7 266 2 311 2 221 2 57 1 138 1 107 1 226 1 
357 1 371 1 100 4 306 3 345 1 293 1 182 3 213 1 35 2 38 1 363 2 185 1 309 4 259 1 311 1 221 1 57 1 97 1 
262 1 357 1 100 2 293 1 182 1 213 1 38 1 185 1 255 1 309 2 266 1 311 1 221 1 342 1 30 1 107 1 
309 3 357 2 306 1 100 3 249 1 266 1 311 2 182 2 213 1 38 1 363 1 97 1 185 1 
357 2 371 1 100 9 306 7 345 1 113 1 249 1 293 1 250 1 182 5 213 1 35 2 38 1 363 4 185 1 309 9 266 1 259 1 311 2 221 1 57 1 234 1 226 1 97 3 
357 2 371 1 100 9 306 7 345 1 113 1 249 1 293 1 250 1 182 5 213 1 35 2 38 1 363 4 185 1 309 9 266 1 259 1 311 2 221 1 57 1 234 1 226 1 97 3 
99 1 222 1 89 1 
49 2 89 1 39 1 
238 2 267 2 73 2 64 2 88 1 333 2 17 2 24 1 
112 1 181 1 199 1 200 1 251 1 64 3 88 1 37 2 347 1 296 1 352 1 121 1 46 2 95 1 236 2 378 2 17 2 238 2 239 1 188 1 331 1 71 1 73 2 361 2 333 2 128 1 265 1 24 1 150 1 243 1 337 1 78 1 267 3 154 1 80 1 137 1 313 1 
238 1 258 1 134 1 267 1 268 1 73 1 64 1 333 1 17 1 24 1 
329 1 64 1 317 1 5 1 89 1 254 1 75 1 267 1 268 1 177 1 222 1 142 1 85 1 17 1 
238 1 329 1 73 1 317 2 64 1 89 1 333 1 254 1 75 2 267 1 268 1 177 1 222 1 142 1 17 1 
45 1 317 1 178 1 130 1 75 1 
344 1 45 1 222 1 317 2 178 1 196 1 89 1 75 2 
317 1 178 1 75 1 
238 1 73 1 317 1 64 1 333 1 24 1 75 1 258 1 134 1 219 1 267 1 268 1 45 1 17 1 
89 1 
299 1 45 1 222 1 317 2 178 1 196 1 89 1 75 2 
230 2 211 1 294 1 317 5 362 1 89 1 42 1 75 5 193 1 153 1 284 1 45 2 301 1 222 1 178 2 196 1 340 2 167 1 305 2 
99 1 88 1 
238 1 73 1 64 2 88 2 333 1 76 1 155 1 267 2 17 2 
60 1 191 1 225 1 
181 1 188 1 71 1 200 1 64 1 361 1 88 1 347 1 265 1 150 1 27 1 267 1 80 1 46 1 378 1 313 1 
238 4 73 1 64 5 5 1 231 2 88 1 333 4 74 1 76 1 267 5 325 1 207 1 17 5 16 1 
238 2 258 1 267 2 268 1 64 2 333 2 17 2 275 1 
238 1 181 1 188 1 71 1 200 1 64 2 361 1 231 1 191 1 347 1 333 1 265 1 150 1 267 2 80 1 46 1 378 1 16 1 17 1 313 1 
238 3 267 3 73 1 64 3 88 1 231 1 333 3 17 3 
238 1 258 1 267 1 268 1 64 1 333 1 17 1 
238 1 76 1 155 1 267 1 268 1 73 1 64 1 333 1 17 1 
181 1 199 1 200 1 251 1 64 4 317 1 88 1 231 1 37 1 347 1 296 1 254 1 352 1 121 1 46 1 142 1 67 1 236 2 378 1 17 3 16 1 238 3 239 1 188 1 20 1 329 1 71 1 331 1 73 2 361 1 333 3 265 1 24 1 150 1 75 1 243 1 76 1 337 1 78 1 267 4 80 1 268 1 177 1 313 1 
238 1 267 2 325 1 64 2 5 1 88 1 231 1 333 1 17 2 
238 3 343 1 329 1 20 1 73 1 317 1 64 3 231 2 89 1 333 3 254 1 75 1 76 1 267 3 268 1 177 1 142 1 16 1 17 3 
238 2 76 1 267 2 73 1 64 2 231 1 191 1 333 2 225 1 17 2 
181 1 188 1 71 1 200 1 64 1 361 1 88 1 347 1 265 1 150 1 267 1 80 1 46 1 378 1 313 1 
19 1 181 1 188 1 63 1 200 1 64 1 361 1 88 1 347 1 265 1 267 1 80 1 46 1 378 1 313 1 
291 1 199 1 37 4 296 1 164 1 121 2 165 1 50 1 236 2 237 1 143 1 239 1 23 1 191 2 334 1 128 2 243 1 337 1 78 1 245 1 84 1 60 2 225 2 289 1 
238 1 267 1 268 1 177 1 64 1 333 1 17 1 275 1 
277 1 141 1 
277 1 141 1 
278 1 183 1 
278 1 183 1 
278 1 183 1 
277 1 141 1 41 1 
375 1 277 1 141 1 
277 2 141 2 87 1 278 1 183 1 174 1 
277 1 141 1 41 1 
277 1 141 1 41 1 
277 1 141 1 232 1 
277 1 141 1 232 1 
277 1 141 1 232 1 
292 1 317 1 64 2 88 1 300 1 375 1 277 1 141 1 355 1 68 1 17 2 238 2 358 1 72 1 333 2 308 1 75 1 133 1 25 1 267 2 382 1 338 1 269 1 195 1 
292 2 317 2 373 1 89 1 8 1 174 1 75 2 323 1 77 1 204 1 300 3 277 2 141 2 382 2 338 2 269 1 13 1 355 2 96 2 
345 1 293 1 221 1 
293 1 221 1 30 1 
372 1 345 2 152 1 264 1 221 3 30 1 
372 1 345 1 264 1 47 1 221 2 30 1 
345 1 372 1 264 2 221 2 30 1 
271 1 230 1 294 3 317 5 89 2 39 1 42 1 164 1 45 4 301 2 49 3 305 1 237 1 279 1 169 2 144 1 51 1 72 1 75 5 133 1 175 2 156 1 82 1 195 1 222 1 84 1 178 1 58 2 340 1 196 1 110 1 289 1 
230 2 294 8 346 1 317 9 89 5 39 3 297 1 42 1 350 1 164 3 45 7 301 6 49 9 14 1 305 2 237 3 208 1 144 2 330 1 72 4 130 5 75 9 175 6 153 1 156 1 82 3 222 1 84 3 178 6 58 6 196 1 340 2 108 5 110 2 289 3 
230 1 294 3 317 3 89 3 39 2 164 1 45 2 301 2 49 4 305 1 237 1 279 1 169 1 144 1 51 1 72 1 75 3 175 2 153 1 82 1 222 1 84 1 340 1 58 2 110 1 289 1 
230 1 294 5 317 4 89 4 39 3 297 1 350 1 164 2 45 3 301 4 49 7 305 1 237 2 279 1 169 2 144 1 330 1 51 1 72 2 75 4 175 4 153 1 82 2 222 1 84 2 58 4 340 1 110 1 289 2 
99 1 359 1 265 1 
240 1 265 1 
36 1 
200 1 265 1 313 1 
90 1 265 1 
200 1 265 1 
26 1 359 2 200 1 265 3 313 1 151 1 
86 1 209 2 170 1 318 1 6 1 37 7 216 1 334 2 128 4 349 1 121 3 244 1 166 1 50 3 237 1 289 1 227 1 
86 1 209 2 170 1 318 1 6 1 37 7 216 1 334 2 128 4 349 1 121 3 244 1 166 1 50 3 237 1 289 1 227 1 
86 1 209 2 170 1 124 1 318 1 6 1 37 7 216 1 334 2 128 4 349 1 121 3 244 1 166 1 50 3 237 1 289 1 227 1 
86 2 199 1 318 2 4 1 6 2 37 31 296 1 161 1 349 1 164 3 233 1 121 15 122 1 166 1 50 10 236 2 237 4 209 3 145 1 239 1 170 2 216 1 334 5 128 16 131 4 243 1 244 5 81 3 82 3 84 3 223 1 227 1 248 1 289 4 
86 1 199 1 318 1 6 1 37 9 296 1 349 1 121 4 48 1 50 3 236 2 168 1 237 2 209 1 239 1 170 1 241 1 334 2 216 1 128 5 243 1 244 1 289 2 227 1 
32 1 181 1 345 1 293 1 182 1 158 1 38 1 185 1 256 1 46 1 186 1 378 1 357 1 306 1 100 2 188 1 380 1 53 1 361 1 213 1 127 1 309 2 218 1 28 1 152 1 266 1 56 1 311 1 221 2 30 1 
32 1 181 1 345 1 293 1 182 1 158 1 201 1 319 1 38 1 185 1 93 1 256 1 46 1 186 1 378 1 357 1 100 3 306 2 188 1 380 1 53 1 361 1 127 1 309 3 152 1 266 1 56 1 311 1 221 2 30 1 
32 1 181 1 345 1 293 1 182 1 319 1 38 1 185 1 93 1 46 1 186 1 378 1 100 2 306 2 188 1 380 1 53 1 361 1 127 1 309 2 152 1 266 1 56 1 221 2 30 1 
181 1 200 1 347 1 201 1 202 1 91 1 348 1 46 1 324 1 186 2 378 1 357 1 100 1 188 1 380 2 171 1 361 1 53 2 265 1 309 1 266 2 311 1 228 1 
32 1 181 1 345 1 293 1 158 1 93 1 256 1 46 1 186 1 378 1 357 1 100 1 188 1 380 1 53 1 361 1 213 1 127 1 309 1 28 1 152 1 266 1 56 1 311 1 221 2 30 1 
242 1 
1 2 198 2 294 2 200 1 64 1 5 1 347 2 295 1 253 1 254 1 301 2 353 1 305 1 261 2 17 1 356 1 307 1 361 2 125 1 126 1 215 1 265 1 75 5 267 1 79 4 268 1 177 1 222 1 178 6 270 1 85 1 228 1 229 2 181 1 230 1 317 5 89 2 320 2 39 2 91 1 42 1 276 1 46 2 142 1 49 2 378 2 187 2 144 1 188 1 329 1 281 1 283 2 285 1 196 3 340 1 
64 1 317 3 5 1 254 1 299 1 142 1 17 1 356 1 329 1 281 1 215 1 75 3 283 1 267 1 79 2 285 1 268 1 177 1 178 2 270 1 196 1 85 1 
198 1 64 1 317 3 5 1 89 1 254 1 299 1 142 1 17 1 356 1 329 1 281 1 215 1 75 3 267 1 79 3 285 1 268 1 177 1 222 1 178 1 270 1 196 1 85 1 
198 1 64 1 317 3 5 1 89 1 254 1 299 1 142 1 17 1 356 1 187 1 329 1 281 1 215 1 75 3 283 1 267 1 79 3 285 1 268 1 177 1 222 1 178 2 196 1 270 1 85 1 
197 1 1 2 2 1 198 4 294 1 64 1 5 1 254 1 299 1 301 1 353 1 305 1 17 1 261 2 356 1 307 1 215 1 75 5 79 6 267 1 268 1 177 1 222 5 178 7 270 1 85 1 31 1 229 2 230 1 317 5 89 5 320 2 39 2 42 1 142 1 187 4 329 1 281 1 54 1 192 1 283 4 285 1 196 3 340 1 
229 2 1 2 230 1 198 2 294 1 317 4 64 1 5 1 89 2 320 2 253 1 39 2 254 1 42 1 301 1 142 1 49 2 353 1 305 1 261 2 17 1 356 1 187 2 329 1 281 1 307 1 215 1 75 4 283 2 267 1 79 4 285 1 268 1 177 1 222 1 178 4 196 2 270 1 340 1 85 1 
31 1 229 2 1 2 230 1 198 2 294 1 64 1 317 4 5 1 89 1 320 2 39 2 254 1 42 1 301 1 142 1 353 1 305 1 261 2 17 1 356 1 187 2 329 1 281 1 307 1 54 1 192 1 215 1 75 4 283 2 267 1 79 4 285 1 268 1 177 1 222 1 178 4 196 2 340 1 270 1 85 1 
31 1 229 2 1 2 230 1 198 2 294 1 64 1 317 4 5 1 89 1 320 2 39 2 254 1 42 1 301 1 142 1 353 1 305 1 261 2 17 1 356 1 187 2 329 1 281 1 307 1 54 1 192 1 215 1 75 4 283 2 267 1 79 4 285 1 268 1 177 1 222 1 178 4 196 2 340 1 270 1 85 1 
1 2 33 1 230 1 198 2 294 1 64 1 317 4 5 1 89 1 320 2 254 1 40 1 92 1 42 1 302 2 301 1 142 1 49 2 305 1 17 1 356 1 187 2 329 1 212 2 281 1 307 1 192 1 215 1 75 4 283 2 267 1 79 4 285 1 268 1 177 1 222 1 178 4 196 2 340 1 270 1 85 1 
31 1 197 1 229 2 1 2 230 1 198 3 294 1 64 1 317 4 5 1 89 1 320 2 39 2 254 1 42 1 301 1 142 1 353 1 305 1 261 2 17 1 356 1 187 3 329 1 281 1 307 1 54 1 192 1 215 1 75 4 283 3 267 1 79 5 285 1 268 1 177 1 222 1 178 5 196 2 340 1 270 1 85 1 
31 1 197 1 229 2 1 2 230 1 198 3 294 1 64 1 317 4 5 1 89 1 320 2 39 2 254 1 42 1 301 1 142 1 353 1 305 1 261 2 17 1 356 1 187 3 329 1 281 1 307 1 54 1 192 1 215 1 75 4 283 3 267 1 79 5 285 1 268 1 177 1 222 1 178 5 196 2 340 1 270 1 85 1 
1 2 230 1 198 2 294 1 317 4 64 1 5 1 89 1 320 2 253 1 254 1 42 1 92 1 302 2 301 1 142 1 49 2 305 1 17 1 356 1 187 2 329 1 212 2 281 1 307 1 215 1 75 4 283 2 267 1 79 4 285 1 268 1 177 1 222 1 178 4 196 2 270 1 340 1 85 1 
199 1 6 1 88 2 37 6 296 1 349 1 121 3 50 2 236 2 237 1 209 1 99 1 239 1 170 1 191 1 334 2 216 1 128 3 243 1 337 1 78 1 245 1 60 1 225 1 227 1 289 1 
290 1 199 2 88 1 37 14 296 2 322 1 352 1 164 2 121 6 233 1 122 1 95 1 50 2 236 4 237 2 239 2 22 1 191 11 334 1 128 8 131 3 243 2 337 2 78 1 244 1 81 3 365 1 82 2 83 1 84 1 60 11 225 4 289 1 
181 1 200 1 199 1 64 2 88 1 231 1 347 1 37 2 296 1 352 1 121 1 46 1 95 1 236 2 15 1 378 1 17 1 16 1 238 1 239 1 188 1 71 1 361 1 22 1 333 1 265 1 128 1 150 1 55 1 243 1 27 1 337 1 78 1 267 2 80 1 105 1 225 1 313 1 
199 3 200 2 64 3 6 1 347 1 296 3 349 1 352 1 66 2 164 2 121 10 16 1 17 1 209 1 170 1 71 2 361 3 22 1 216 1 265 2 128 10 364 1 267 3 78 3 80 2 82 2 84 2 225 7 227 1 313 2 181 2 314 1 88 2 231 1 37 20 93 1 46 3 326 2 95 1 50 8 236 6 378 3 237 3 238 1 239 3 188 2 331 2 190 1 191 7 333 1 334 4 150 2 336 2 243 3 337 3 244 4 339 2 60 7 289 3 
181 2 272 1 199 2 200 2 64 1 231 1 347 2 37 2 296 2 91 1 93 1 352 1 121 1 46 7 95 1 236 4 378 8 17 1 238 1 239 2 188 2 263 1 361 8 333 1 173 1 265 3 128 1 218 1 243 2 337 2 267 1 78 2 220 1 312 1 245 1 136 1 137 2 179 1 228 1 
199 1 64 1 37 3 296 1 164 1 121 2 50 1 236 2 17 1 237 1 238 1 239 1 73 1 22 1 191 1 333 1 334 1 381 1 128 1 243 1 76 1 337 1 78 1 267 1 82 1 84 1 60 1 225 1 289 1 
239 1 199 1 191 1 37 2 296 1 128 2 243 1 337 1 78 1 164 1 244 1 245 1 165 1 60 1 50 1 236 2 225 1 237 1 
239 1 291 1 199 1 191 1 37 2 296 1 334 1 243 1 337 1 78 1 121 2 245 1 84 1 60 1 50 1 236 2 225 1 289 1 
199 1 37 4 296 1 164 1 121 2 50 2 236 2 237 1 239 1 191 2 334 1 128 2 243 1 337 1 78 1 244 1 245 1 82 1 84 1 60 2 225 2 289 1 
239 1 199 1 191 1 37 2 296 1 128 2 243 1 337 1 78 1 164 1 244 1 220 1 165 1 60 1 50 1 236 2 225 1 237 1 
239 1 291 1 199 1 191 1 37 2 296 1 334 1 243 1 337 1 78 1 220 1 121 2 84 1 60 1 50 1 236 2 225 1 289 1 
199 1 37 4 296 1 164 1 121 2 50 2 236 2 237 1 239 1 191 2 334 1 128 2 243 1 337 1 78 1 220 1 244 1 82 1 84 1 60 2 225 2 289 1 
199 1 37 4 296 1 164 1 121 2 50 2 236 2 237 1 239 1 191 2 334 1 128 2 243 1 337 1 78 1 244 1 82 1 84 1 60 2 225 2 289 1 
181 1 200 1 199 1 64 1 88 1 37 2 347 1 296 1 352 1 121 1 46 1 95 1 236 2 378 1 239 1 188 1 71 1 331 1 361 1 128 1 265 1 150 1 243 1 337 1 267 1 78 1 80 1 313 1 
181 1 63 1 200 1 199 1 64 1 88 1 37 2 347 1 296 1 352 1 121 1 46 1 95 1 236 2 378 1 19 1 239 1 188 1 146 1 361 1 128 1 265 1 243 1 337 1 267 1 78 1 80 1 313 1 
199 1 37 4 296 1 164 1 121 2 50 2 236 2 237 1 239 1 22 1 191 2 334 1 128 2 243 1 337 1 78 1 244 1 82 1 84 1 60 2 225 2 289 1 
181 1 200 1 199 1 64 1 37 4 296 1 164 1 121 2 46 1 326 1 50 2 236 2 378 1 237 1 239 1 188 1 71 1 331 1 361 1 191 2 334 1 128 2 265 1 150 1 218 1 243 1 337 1 267 1 78 1 244 1 80 1 82 1 84 1 60 2 225 2 289 1 313 1 
199 1 64 1 37 3 296 1 374 1 164 1 121 1 50 1 236 2 17 1 237 1 238 1 239 1 73 1 22 1 191 1 333 1 128 2 243 1 76 1 337 1 78 1 267 1 244 1 82 1 84 1 60 1 225 1 289 1 
0 1 114 1 199 2 37 19 296 2 252 1 184 1 164 3 121 10 233 1 122 1 304 2 50 6 236 4 168 1 237 3 98 1 239 2 335 2 334 3 128 9 131 2 243 2 103 1 244 3 81 1 82 3 84 3 287 1 289 3 
114 1 199 3 34 1 37 26 296 3 252 2 184 2 164 3 121 12 122 2 304 1 50 4 236 6 168 1 237 3 239 3 70 1 334 2 335 4 128 14 131 2 101 1 217 1 243 3 102 1 103 1 244 2 81 2 82 3 223 2 84 2 341 1 287 1 289 2 
114 1 199 3 34 1 6 1 37 41 296 3 252 2 184 1 43 1 349 1 164 4 121 21 233 1 122 3 304 1 50 8 236 6 168 1 237 5 98 1 209 1 239 3 70 1 170 1 216 1 335 4 334 4 128 20 101 1 131 4 217 1 102 1 243 3 103 1 244 4 81 3 82 4 223 1 84 4 341 1 287 1 227 1 289 5 
114 1 199 4 34 1 6 1 37 38 296 4 252 2 184 1 43 1 349 1 164 4 121 18 233 1 122 3 304 1 50 7 236 8 168 1 237 5 98 1 209 1 239 4 70 1 170 1 216 1 335 4 334 4 128 20 101 1 131 4 217 1 102 1 243 4 103 1 244 3 81 3 82 4 223 2 84 3 341 1 287 1 227 1 289 4 
114 1 199 2 34 1 6 1 37 52 296 2 252 1 184 1 349 1 164 7 121 25 233 2 122 2 304 1 50 14 236 4 168 1 237 8 209 1 239 2 70 1 170 1 216 1 335 4 334 7 128 27 101 1 131 4 217 1 102 1 243 2 103 1 244 7 81 4 365 2 82 7 223 1 84 7 341 1 287 1 227 1 289 8 
77 1 277 1 292 1 141 1 382 1 338 1 373 1 65 1 355 1 174 1 
375 1 68 1 
277 1 292 1 141 1 382 1 338 1 273 1 9 1 355 1 119 1 
148 1 41 1 
87 1 129 1 232 1 
292 1 317 1 373 1 89 1 8 1 174 1 75 1 77 1 204 1 300 2 277 1 141 1 382 1 338 1 269 1 13 1 355 1 96 1 
292 1 317 1 373 1 89 1 8 1 174 1 75 1 77 1 204 1 300 2 277 1 141 1 382 1 338 1 269 1 13 1 355 1 96 1 
292 1 317 1 373 1 89 1 8 1 174 1 75 1 77 1 204 1 300 2 277 1 141 1 382 1 338 1 269 1 13 1 355 1 96 1 
87 1 148 1 41 1 
87 1 148 1 41 1 
129 1 232 1 
87 1 129 1 232 1 
25 1 308 1 
292 1 64 2 317 1 88 1 300 1 375 1 277 1 141 1 45 1 13 1 12 1 355 1 68 1 96 1 17 2 238 2 358 1 72 1 333 2 308 1 75 1 133 1 25 1 267 2 382 1 338 1 195 1 
180 1 181 1 200 1 199 1 64 2 37 2 296 1 352 1 121 1 46 2 95 1 236 2 378 2 123 1 17 2 239 1 188 1 147 1 361 2 22 1 214 1 265 1 128 1 243 1 337 1 78 1 267 2 312 1 136 1 137 2 369 1 
181 1 345 1 188 1 293 1 158 1 361 2 53 1 7 1 127 1 93 1 257 1 218 1 152 1 104 1 56 1 46 2 221 2 30 1 378 2 
379 1 181 1 345 1 188 1 293 1 158 1 361 1 53 1 7 1 127 1 93 1 152 1 56 1 46 1 221 2 30 1 378 1 
181 1 188 1 200 1 361 1 53 1 347 1 265 1 91 1 348 1 104 1 46 1 235 1 378 1 228 1 
181 1 345 1 188 1 293 1 158 1 361 1 53 1 7 1 127 1 93 1 257 1 152 1 104 1 56 1 46 1 221 2 30 1 378 1 
210 1 
99 1 211 1 284 1 294 1 301 1 222 1 89 1 
229 1 230 1 294 1 317 1 89 2 39 1 75 1 42 1 301 1 222 1 178 1 196 1 49 1 340 1 353 1 305 1 261 1 
294 9 200 3 3 2 160 2 347 1 115 2 117 2 164 2 301 8 303 1 305 4 69 1 211 1 359 2 361 3 265 10 75 5 218 1 175 6 135 2 82 2 222 2 367 2 178 5 84 2 313 3 370 1 181 4 230 4 317 5 89 8 90 2 39 6 42 4 276 1 46 3 49 12 377 2 378 3 237 2 144 2 188 3 329 2 240 3 282 1 151 1 336 2 284 1 157 1 340 4 196 3 58 6 106 2 289 2 
230 2 294 8 3 1 317 1 34 1 89 5 39 3 274 1 42 2 276 1 164 2 301 5 122 1 49 6 305 2 237 2 144 1 70 1 189 1 75 1 131 1 101 1 217 1 175 5 102 1 135 2 81 1 82 2 222 2 178 1 84 2 196 1 58 5 340 2 289 2 
230 1 294 2 3 1 64 1 317 1 6 1 42 1 258 1 301 2 48 1 305 1 237 2 17 1 238 1 170 1 73 1 54 1 333 1 216 1 24 1 75 1 134 1 135 2 267 1 219 1 268 1 340 1 289 1 
230 1 211 1 294 1 89 1 42 1 284 1 301 1 222 1 340 1 305 1 
294 5 3 1 89 5 39 5 336 1 175 5 135 2 164 2 82 2 301 5 84 2 58 5 49 10 237 2 289 2 
222 1 317 1 178 1 196 1 89 1 75 1 
370 1 181 1 230 2 294 2 200 1 317 3 347 2 91 1 42 1 276 2 46 4 301 2 305 2 378 4 280 1 144 2 188 1 125 1 361 4 126 1 265 1 75 3 153 1 157 2 178 4 340 2 196 2 224 1 228 1 
181 1 199 1 251 1 200 1 64 3 88 1 37 1 347 1 296 1 352 1 121 1 46 1 236 2 378 1 17 2 238 2 239 1 188 1 331 1 71 1 73 2 361 1 333 2 24 1 265 1 150 1 243 1 337 1 267 3 78 1 80 1 313 1 
209 1 144 1 230 1 294 1 89 4 39 2 42 1 175 2 276 1 301 2 222 2 58 2 49 4 340 1 305 1 
338 1 366 1 355 1 
77 1 25 1 246 1 338 1 355 1 
338 1 366 1 355 1 
338 1 366 1 355 1 
338 1 159 1 355 1 
338 1 159 1 355 1 
338 1 159 1 355 1 
338 1 355 1 
277 1 141 1 
209 1 239 2 170 1 199 2 6 1 37 8 296 2 216 1 334 2 128 4 349 1 243 2 121 4 244 1 223 1 50 3 236 4 237 1 289 1 227 1 
349 1 209 1 99 1 170 1 121 3 6 1 37 6 50 2 216 1 334 2 128 3 237 1 289 1 227 1 
239 1 199 1 37 4 296 1 334 1 128 2 243 1 164 1 121 2 244 1 82 1 84 1 59 1 50 2 236 2 237 1 289 1 
37 7 334 1 128 3 131 2 164 1 121 4 233 1 244 1 81 1 82 1 84 1 122 1 50 2 237 1 289 1 
290 1 199 2 6 2 37 23 296 2 349 1 164 2 233 1 121 12 206 1 50 9 236 4 237 3 209 1 239 2 170 2 216 1 334 5 128 11 131 2 243 2 244 4 81 2 82 2 365 1 84 2 223 2 227 1 289 3 
121 1 37 1 131 1 
81 1 37 1 128 1 
239 1 199 1 37 6 296 1 334 2 128 3 336 1 243 1 164 1 121 3 244 1 82 1 84 1 59 1 50 3 236 2 237 1 289 1 
199 1 34 1 37 12 296 1 164 2 121 6 122 1 50 2 236 2 168 1 237 2 239 1 70 1 334 1 128 6 131 1 101 1 217 1 243 1 102 1 244 1 81 1 82 2 84 2 289 2 
170 1 6 1 37 6 216 1 334 1 128 3 121 3 244 1 50 2 237 1 289 1 
239 1 170 1 199 1 6 1 37 3 296 1 334 1 128 1 349 1 243 1 244 1 121 2 206 1 223 1 50 2 236 2 227 1 
239 1 170 2 199 1 6 2 37 10 296 1 334 3 216 1 128 5 243 1 244 2 121 5 48 1 50 5 236 2 168 1 237 2 289 2 
239 1 199 1 37 2 296 1 128 2 243 1 164 1 244 1 50 1 236 2 168 1 237 1 
239 1 199 1 37 4 296 1 334 1 128 2 243 1 164 1 121 2 244 1 82 1 84 1 50 2 236 2 168 1 237 1 289 1 
98 1 239 3 170 1 199 3 6 1 37 3 296 3 334 1 128 1 243 3 121 2 244 1 206 1 223 1 50 2 236 6 168 1 
199 5 4 1 6 3 37 34 296 5 349 1 164 3 121 18 233 1 206 1 122 1 50 12 236 10 168 1 237 5 209 1 98 1 145 1 239 5 170 3 216 2 334 7 128 16 131 4 243 5 244 5 81 3 82 3 223 2 84 3 59 1 227 1 248 1 289 5 
199 1 6 1 37 8 296 1 349 1 121 4 122 1 50 2 236 2 168 1 237 1 209 1 239 1 170 1 334 2 216 1 128 4 131 1 101 1 243 1 81 1 289 1 227 1 
199 2 6 1 37 11 296 2 349 1 164 1 121 5 233 1 122 1 50 3 236 4 168 1 237 2 209 1 239 2 170 1 216 1 334 2 128 6 131 2 101 1 243 2 244 1 81 1 82 1 59 1 289 1 227 1 
199 3 34 1 6 1 37 19 296 3 349 1 164 2 121 10 122 1 50 4 236 6 168 1 237 3 209 1 239 3 70 1 170 1 216 1 334 3 128 9 131 1 101 1 217 1 243 3 102 1 244 1 81 1 82 2 84 2 223 1 59 1 227 1 289 3 
199 3 34 1 6 1 37 17 296 3 349 1 164 2 121 7 122 1 50 5 236 6 168 1 237 3 209 1 239 3 70 1 170 1 216 1 334 3 128 10 131 1 101 1 217 1 243 3 102 1 244 2 81 1 82 2 223 1 84 1 59 1 227 1 289 2 
199 1 6 1 37 8 296 1 349 1 121 4 122 1 50 2 236 2 168 1 237 1 209 1 239 1 170 1 334 2 216 1 128 4 131 1 101 1 243 1 81 1 289 1 227 1 
199 1 34 1 37 12 296 1 164 2 121 6 122 1 50 2 236 2 168 1 237 2 239 1 70 1 334 1 128 6 131 1 101 1 217 1 243 1 102 1 244 1 81 1 82 2 84 2 289 2 
199 4 34 1 6 1 37 18 296 4 349 1 164 2 121 8 122 1 50 5 236 8 168 1 237 3 209 1 239 4 70 1 170 1 216 1 334 3 128 10 131 1 101 1 217 1 243 4 102 1 244 2 81 1 82 2 84 1 223 2 59 1 227 1 289 2 
199 4 34 1 37 16 296 4 164 3 121 7 122 1 50 6 236 8 168 1 237 3 98 1 239 4 70 1 334 3 128 9 131 1 101 1 217 1 243 4 102 1 244 3 81 1 82 3 84 2 223 2 289 2 
170 3 6 3 37 7 334 3 216 1 128 3 349 1 121 4 244 3 50 6 237 1 289 1 227 2 
199 4 34 1 6 1 37 18 296 4 349 1 164 2 121 8 122 1 50 4 236 8 168 1 237 3 209 1 98 1 239 4 70 1 170 1 216 1 334 3 128 10 131 1 101 1 217 1 243 4 102 1 244 1 81 1 82 2 84 1 223 2 227 1 289 2 
64 1 5 1 88 1 267 1 268 1 205 1 325 1 17 1 111 1 
52 1 64 1 5 1 88 1 140 1 376 1 267 1 268 1 205 1 325 1 29 1 61 1 17 1 111 1 
181 1 99 1 188 1 46 1 200 1 361 1 347 1 378 1 265 1 91 1 228 1 
238 1 181 1 188 1 200 1 64 2 361 1 88 1 231 1 347 1 333 1 265 1 150 1 267 2 80 1 46 1 378 1 17 1 313 1 
181 1 200 2 64 2 88 1 231 1 254 1 90 1 117 1 46 1 378 1 17 2 238 1 188 1 361 1 333 2 265 3 150 1 267 2 80 1 268 1 177 1 157 1 313 2 
181 1 63 1 200 2 64 2 88 1 231 1 254 1 90 1 117 1 46 2 378 2 17 2 238 1 188 1 172 1 361 2 333 2 265 3 267 2 80 1 268 1 177 1 157 1 313 2 
181 1 200 1 317 2 89 1 347 1 116 1 90 1 117 1 46 3 378 3 188 1 329 1 240 1 172 1 359 1 361 3 149 1 265 4 75 2 157 1 222 1 178 1 313 1 
181 1 329 1 188 1 240 1 172 1 200 1 359 1 317 2 361 3 160 1 347 1 89 1 90 1 117 1 265 4 75 2 46 3 222 1 157 1 178 1 378 3 313 1 
181 1 188 1 46 1 272 1 361 1 378 1 
181 3 188 2 263 1 272 1 200 2 361 7 347 2 173 1 265 3 93 1 151 1 218 1 120 1 312 1 260 1 46 6 137 1 179 1 327 1 378 7 313 1 
181 1 200 1 199 2 64 2 88 2 6 1 231 1 37 6 296 2 349 1 66 1 121 3 46 1 326 1 50 2 236 4 378 1 237 1 17 1 209 1 238 1 239 2 188 1 170 1 331 1 71 1 147 1 361 1 22 1 191 1 333 1 216 1 334 2 128 3 265 1 150 1 243 2 218 1 337 2 78 2 267 2 80 1 60 1 225 1 289 1 227 1 313 1 
370 1 230 2 294 1 317 3 160 1 89 1 347 1 115 1 42 2 46 1 45 1 301 1 377 1 305 2 378 1 329 1 211 1 240 1 359 1 361 1 265 2 75 3 284 1 222 1 367 1 178 2 340 2 196 1 
181 2 188 1 272 1 359 1 200 1 361 2 282 1 265 2 151 1 218 1 46 2 378 2 313 1 
181 1 188 1 172 1 200 1 361 4 347 1 203 1 91 1 265 1 218 1 46 4 378 4 228 1 
181 2 188 1 314 1 200 1 361 2 265 1 163 1 11 1 260 1 46 2 157 1 327 1 378 2 313 1 
181 1 188 1 293 1 46 1 221 1 361 1 347 1 30 1 127 1 378 1 
218 1 181 1 188 1 312 1 46 2 200 1 361 2 369 1 378 2 265 1 93 1 
181 2 188 2 200 2 361 5 347 1 203 1 91 1 265 3 173 1 218 1 46 4 312 1 157 1 179 1 378 5 228 1 
181 2 188 2 200 2 361 5 347 1 203 1 91 1 265 3 173 1 218 1 46 4 312 1 157 1 378 5 228 1 247 1 
238 1 181 1 188 1 63 1 200 1 64 2 361 1 88 1 231 1 347 1 333 1 265 1 267 2 80 1 46 1 378 1 17 1 313 1 
181 2 188 1 200 1 361 1 265 1 151 1 120 1 260 1 46 1 157 1 327 1 378 1 313 1 
194 1 88 1 139 1 354 1 10 1 
329 1 20 1 316 1 317 2 88 1 139 2 89 1 332 1 254 1 10 2 75 2 194 1 268 1 45 1 177 1 222 1 368 1 142 1 354 2 
180 1 194 1 267 1 64 1 214 1 354 1 10 1 17 1 123 1 
194 1 316 1 332 1 
99 1 182 1 38 1 185 1 
309 1 357 1 100 1 311 1 182 1 38 1 185 1 
309 1 266 1 380 1 
357 1 262 2 100 3 182 1 213 1 38 1 298 1 118 1 185 1 309 3 311 1 62 1 
309 2 357 1 306 1 100 2 311 1 182 1 35 1 38 1 185 1 
309 1 357 1 100 1 345 1 293 1 311 1 221 1 182 1 57 1 213 1 363 1 
309 1 357 1 100 1 311 1 182 1 213 1 185 1 
309 1 357 1 100 1 311 1 213 1 38 1 185 2 
309 2 357 2 100 2 310 1 176 1 311 2 182 1 213 1 109 1 185 1 
309 3 357 1 306 2 100 3 250 1 311 1 182 2 213 1 38 1 363 1 226 1 97 1 185 1 
357 1 100 2 306 1 345 1 293 1 182 1 213 1 38 1 185 1 309 2 152 1 311 1 221 2 286 1 30 1 
309 4 357 2 306 2 371 1 100 4 311 2 182 2 213 1 35 1 38 1 363 1 97 1 185 1 
309 1 357 1 100 1 311 1 182 1 213 1 38 1 185 1 
262 1 357 1 306 2 100 4 182 3 38 2 363 1 118 1 185 2 44 1 309 4 311 1 62 1 97 1 
132 1 309 2 357 1 306 1 100 2 113 1 315 1 311 1 182 1 213 1 38 1 185 1 
262 2 309 3 357 1 328 1 100 3 311 1 182 1 213 1 38 1 62 2 118 1 185 1 
94 2 182 2 18 1 288 1 
309 1 357 1 100 1 162 1 311 1 213 1 
309 2 357 1 306 1 100 2 250 1 311 1 182 1 213 1 38 1 185 1 
321 1 
309 1 357 1 100 1 311 1 182 1 213 1 38 1 185 1 
357 1 262 1 306 1 100 3 250 1 182 1 213 1 38 1 185 1 309 3 311 1 
44 1 182 1 363 1 97 1 
182 1 185 1 

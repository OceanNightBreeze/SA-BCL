#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (85,234,303,327) (85,234,303,327) (49,79,268) (49,79,268) (49,79,268) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (85,234,303,327) (85,234,303,327) (49,79,268) (49,79,268) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (85,234,303,327) (85,234,303,327) (49,79,268) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (85,234,303,327) (85,234,303,327) (49,79,268) (49,79,268) (49,79,268) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
147 1 365 1 312 3 149 9 296 1 85 9 316 5 88 1 91 2 92 1 234 2 93 2 8 1 68 1 45 1 303 6 258 1 104 1 350 1 327 2 328 1 16 2 76 1 331 2 144 1 222 2 272 4 309 1 
147 1 365 1 312 3 149 9 296 1 85 9 316 5 88 1 91 2 92 1 234 2 93 2 8 1 68 1 45 1 303 6 258 1 104 1 350 1 327 2 328 1 16 2 76 1 331 2 222 2 144 1 272 4 309 1 
147 1 365 1 312 4 149 10 296 1 85 10 316 6 88 1 91 2 92 1 234 2 93 2 8 1 68 1 45 1 303 7 258 1 104 1 350 1 327 2 328 1 16 2 76 1 331 2 222 2 144 1 272 5 309 1 
147 1 365 1 312 2 149 7 296 1 85 7 316 4 88 1 91 2 92 1 234 2 93 2 8 1 68 1 45 1 303 4 258 1 104 1 350 1 327 2 328 1 16 1 76 1 331 2 222 2 144 1 272 3 
303 3 104 1 312 1 327 1 149 4 296 1 16 2 85 4 76 1 316 3 91 1 93 1 234 1 222 1 8 1 68 1 272 2 309 1 
169 1 365 1 327 1 149 2 296 1 241 1 85 2 107 1 316 1 331 1 91 1 92 1 234 1 93 1 8 1 68 1 
303 1 312 1 327 2 149 3 296 1 85 3 331 1 316 2 234 2 8 1 68 1 45 1 272 1 
312 3 149 9 296 1 85 9 299 1 316 5 91 1 234 2 93 1 8 1 68 1 45 1 303 7 104 1 350 1 327 2 328 1 16 2 76 1 331 1 222 1 272 4 168 1 309 1 
312 3 149 9 296 1 85 9 299 1 316 5 91 1 234 2 93 1 8 1 68 1 45 1 303 7 104 1 350 1 327 2 328 1 16 2 76 1 331 1 222 1 272 4 168 1 309 1 
160 1 134 1 359 1 
160 1 135 1 196 2 
146 2 82 1 66 2 262 2 320 2 62 2 25 1 340 2 
249 1 146 2 82 1 295 1 124 2 62 3 25 1 314 1 340 2 204 1 297 1 370 1 26 1 254 1 65 1 231 2 232 1 66 2 320 2 278 1 279 1 322 1 159 1 240 1 262 3 379 2 215 2 53 1 288 1 77 1 355 1 110 2 57 1 18 1 291 1 20 1 58 1 
146 1 251 1 66 1 262 1 320 1 62 1 25 1 242 1 340 1 116 1 
146 1 160 1 251 1 364 1 285 1 262 1 62 1 70 1 367 1 63 1 301 1 359 1 224 1 211 1 
146 1 160 1 251 1 285 2 262 1 62 1 70 1 367 1 340 1 66 1 320 1 301 2 359 1 224 1 211 1 
64 1 285 1 301 1 347 1 281 1 
64 1 175 1 160 1 285 2 125 1 301 2 359 1 281 1 
64 1 285 1 301 1 
146 1 251 1 285 1 262 1 62 1 25 1 242 1 5 1 340 1 66 1 320 1 301 1 281 1 116 1 
160 1 
64 1 160 1 55 1 285 2 125 1 301 2 359 1 281 1 
158 1 236 2 160 1 348 1 363 2 285 5 294 1 123 1 125 1 274 1 298 1 315 1 27 2 64 2 373 1 130 1 301 5 359 1 281 2 
146 1 240 1 262 2 379 1 62 2 314 1 185 1 215 1 204 1 137 1 26 1 254 1 57 1 110 1 66 1 320 1 278 1 291 1 257 1 58 1 
82 1 134 1 
146 2 181 1 82 2 262 2 62 2 340 1 66 1 289 1 320 1 
261 1 257 1 73 1 
82 1 240 1 262 1 379 1 62 1 314 1 215 1 204 1 26 1 254 1 206 1 110 1 57 1 278 1 291 1 58 1 
146 3 82 1 66 3 262 3 320 3 62 3 185 1 340 1 
146 1 251 1 66 1 262 1 320 1 62 1 242 1 
146 1 251 1 181 1 66 1 289 1 262 1 320 1 62 1 340 1 
249 1 40 1 146 3 251 1 200 1 82 1 295 1 124 1 62 4 25 1 314 1 367 1 204 1 340 2 297 1 370 1 26 1 254 1 231 2 66 3 320 3 278 1 279 1 301 1 211 1 159 1 181 1 285 1 240 1 262 4 379 1 70 1 185 1 215 1 137 1 53 1 288 1 77 1 355 1 57 1 110 1 291 1 58 1 224 1 
275 1 146 2 82 1 66 1 262 2 320 1 62 2 185 1 63 1 
146 3 40 1 160 1 181 1 251 1 285 1 338 1 262 3 62 3 70 1 185 2 367 1 340 1 137 1 66 3 320 3 301 1 224 1 211 1 
146 2 181 1 261 1 262 2 62 2 185 1 340 1 66 2 320 2 257 1 
82 1 240 1 262 1 379 1 62 1 314 1 215 1 204 1 26 1 254 1 110 1 57 1 278 1 291 1 58 1 
23 1 82 1 240 1 262 1 379 1 62 1 314 1 215 1 204 1 26 1 254 1 110 1 57 1 58 1 280 1 
24 1 249 1 225 1 124 4 83 1 3 1 370 1 65 2 231 2 129 1 279 1 257 2 237 1 159 1 162 1 261 2 305 1 17 1 73 2 288 1 77 1 355 2 197 1 22 1 
146 1 251 1 260 1 66 1 262 1 320 1 70 1 62 1 
275 1 146 5 109 1 181 1 82 1 66 4 262 5 320 4 346 1 62 5 185 2 137 1 340 1 63 1 
146 2 251 1 260 1 66 2 262 2 320 2 62 2 242 1 
217 1 74 1 
217 1 74 1 
1 1 212 1 
1 1 212 1 
1 1 212 1 
217 1 190 1 74 1 
217 1 190 1 74 1 
217 1 229 1 74 1 
324 1 217 2 253 1 1 1 74 2 212 1 
217 1 190 1 74 1 
334 1 217 1 74 1 
334 1 217 1 74 1 
334 1 217 1 74 1 
324 1 160 1 285 2 2 1 74 2 106 1 330 1 56 1 36 2 217 2 153 2 343 1 218 1 207 3 381 2 133 2 248 1 301 2 95 2 
146 2 82 1 62 2 2 1 229 1 153 1 66 2 207 1 320 2 133 1 301 1 95 1 98 1 285 1 262 2 74 1 138 1 243 1 333 1 217 1 36 1 113 1 308 1 145 1 
91 1 93 1 222 1 
169 1 91 1 93 1 
169 1 91 3 163 1 30 1 222 2 9 1 
169 1 91 2 30 1 222 1 9 1 235 1 
169 1 91 2 30 1 222 1 9 2 
119 2 0 2 363 1 125 1 3 1 84 1 298 1 27 1 64 1 318 1 89 1 127 1 373 3 301 5 31 1 281 4 158 2 237 1 101 2 236 1 100 1 160 2 135 1 285 5 305 1 17 1 138 1 333 1 191 1 308 1 359 1 196 3 
119 6 362 1 363 2 125 1 3 3 84 1 298 1 315 1 64 6 27 2 89 3 345 1 373 8 301 9 347 5 281 7 158 6 237 3 101 6 236 2 100 2 238 1 160 5 135 3 285 9 305 3 380 1 214 5 17 3 51 1 189 1 333 4 191 2 359 1 196 9 
119 2 0 1 363 1 3 1 315 1 27 1 127 1 89 1 373 3 301 3 31 1 281 2 158 2 237 1 236 1 100 1 101 2 160 3 135 2 285 3 305 1 17 1 333 1 191 1 359 1 196 4 
119 4 0 2 363 1 3 2 315 1 27 1 127 1 89 2 345 1 373 5 301 4 31 1 281 3 158 4 237 2 101 4 236 1 100 1 160 4 135 3 285 4 305 2 380 1 17 2 189 1 333 2 191 1 359 1 196 7 
142 1 134 1 26 1 
374 1 26 1 
220 1 
254 1 26 1 
254 1 307 1 240 1 142 2 38 1 26 3 
254 1 240 1 26 1 
10 1 26 1 
225 2 61 1 171 1 182 1 124 7 83 3 3 1 216 1 17 1 300 1 65 4 126 1 355 3 80 2 131 1 132 1 19 1 
225 2 61 1 171 1 182 1 124 7 83 3 3 1 216 1 17 1 300 1 65 4 126 1 355 3 80 2 131 1 132 1 19 1 
225 2 121 1 61 1 182 1 171 1 124 7 83 3 3 1 216 1 17 1 300 1 65 4 126 1 355 3 80 2 131 1 132 1 19 1 
198 1 225 5 61 5 171 1 148 1 124 31 83 10 3 4 203 1 370 1 231 2 65 16 300 2 126 1 89 3 209 1 131 2 132 1 279 1 94 1 237 3 159 1 182 1 349 1 305 3 216 2 17 4 288 1 355 15 335 1 80 3 19 2 194 4 21 3 
159 2 225 3 61 1 182 1 171 1 124 9 83 4 3 1 216 1 17 1 370 2 300 1 65 5 231 4 126 1 288 2 355 4 209 1 80 2 131 1 154 1 279 2 19 1 282 1 
303 1 377 1 379 1 49 1 327 1 149 1 215 1 85 2 174 1 268 1 331 1 269 1 277 1 28 1 79 1 110 1 234 1 8 1 271 1 
303 2 377 1 379 1 49 1 327 1 264 1 149 2 201 1 215 1 85 3 174 1 267 1 331 1 269 1 277 1 79 1 110 1 234 1 271 1 
303 2 377 1 379 1 49 1 149 1 201 1 215 1 85 2 174 1 267 1 331 1 269 1 110 1 271 1 
314 1 149 1 85 1 174 2 26 1 254 1 87 1 152 1 234 1 377 2 326 1 379 1 327 1 264 1 215 1 329 1 331 2 110 1 57 1 357 1 58 1 271 2 195 1 
303 1 377 1 379 1 49 1 327 1 149 1 201 1 215 1 85 2 174 1 268 1 331 1 269 1 277 1 79 1 110 1 234 1 8 1 271 1 
187 1 
146 1 251 1 298 1 254 1 152 1 210 1 301 5 211 1 158 2 160 2 12 1 102 2 47 4 262 1 215 2 105 1 266 1 110 2 57 1 219 1 112 1 223 2 58 2 359 1 224 1 118 1 363 1 364 1 170 2 62 1 125 3 314 1 367 1 26 1 63 1 64 6 27 1 128 2 373 2 375 1 178 1 32 1 180 1 236 1 135 2 326 1 285 5 379 2 70 1 71 2 191 1 290 1 193 2 196 2 382 2 
180 1 146 1 47 2 251 1 364 1 285 3 262 1 70 1 62 1 125 1 367 1 266 1 63 1 64 2 55 1 128 1 210 1 290 1 301 3 224 1 211 1 118 1 
180 1 146 1 160 1 47 3 251 1 364 1 285 3 262 1 70 1 62 1 125 1 367 1 266 1 63 1 64 1 55 1 210 1 290 1 223 1 301 3 359 1 224 1 211 1 118 1 
146 1 251 1 364 1 62 1 125 1 367 1 63 1 64 2 128 1 210 1 301 3 211 1 180 1 47 3 160 1 285 3 262 1 70 1 71 1 266 1 55 1 290 1 223 1 359 1 224 1 118 1 
146 1 251 1 298 1 208 1 210 1 301 5 156 1 211 1 158 1 47 6 160 5 102 2 262 1 266 1 105 1 55 1 219 1 223 4 359 5 224 1 118 1 364 1 363 1 170 2 62 1 125 3 367 1 63 1 64 7 27 1 128 4 373 1 180 1 236 1 285 5 135 2 70 1 71 4 75 1 244 1 290 1 192 1 193 2 382 2 
146 1 251 1 298 1 210 1 301 4 211 1 158 1 47 4 102 2 12 1 160 2 262 1 266 1 105 1 219 1 223 2 359 1 224 1 118 1 363 1 364 1 170 2 62 1 125 2 367 1 63 1 27 1 64 4 128 2 373 1 180 1 236 1 285 4 135 2 70 1 71 2 290 1 193 2 196 2 382 2 
146 1 251 1 363 1 364 1 170 2 62 1 125 2 367 1 298 1 63 1 64 4 27 1 128 2 373 1 208 1 210 1 301 4 156 1 211 1 158 1 180 1 236 1 160 1 102 2 47 4 135 2 285 4 262 1 70 1 71 2 105 1 266 1 75 1 219 1 290 1 193 2 223 2 359 1 224 1 382 2 118 1 
146 1 251 1 363 1 364 1 170 2 62 1 125 2 367 1 298 1 63 1 64 4 27 1 128 2 373 1 208 1 210 1 301 4 156 1 211 1 158 1 180 1 236 1 160 1 102 2 47 4 135 2 285 4 262 1 70 1 71 2 105 1 266 1 75 1 219 1 290 1 193 2 223 2 359 1 224 1 382 2 118 1 
146 1 251 1 363 1 364 1 170 2 62 1 125 2 367 1 298 1 63 1 64 4 27 1 128 2 373 1 210 1 376 2 301 4 156 1 211 1 158 1 180 1 236 1 160 1 102 2 47 4 33 1 285 4 161 1 262 1 70 1 71 2 105 1 266 1 270 1 290 1 223 2 359 1 167 2 224 1 196 2 118 1 
146 1 251 1 363 1 364 1 170 2 62 1 125 2 367 1 298 1 63 1 27 1 64 5 128 3 373 1 208 1 210 1 301 4 156 1 211 1 158 1 180 1 236 1 160 1 102 2 47 5 135 2 285 4 262 1 70 1 71 3 105 1 266 1 75 1 219 1 290 1 192 1 193 2 223 3 359 1 224 1 382 2 118 1 
146 1 251 1 363 1 364 1 170 2 62 1 125 2 367 1 298 1 63 1 27 1 64 5 128 3 373 1 208 1 210 1 301 4 156 1 211 1 158 1 180 1 236 1 160 1 102 2 47 5 135 2 285 4 262 1 70 1 71 3 105 1 266 1 75 1 219 1 290 1 192 1 193 2 223 3 359 1 224 1 382 2 118 1 
146 1 251 1 364 1 363 1 170 2 62 1 125 2 367 1 298 1 63 1 64 4 27 1 128 2 373 1 210 1 376 2 301 4 211 1 158 1 180 1 236 1 160 1 12 1 102 2 47 4 285 4 262 1 70 1 71 2 105 1 266 1 270 1 290 1 223 2 359 1 167 2 224 1 196 2 118 1 
249 1 225 2 171 1 82 2 124 6 83 2 3 1 370 1 231 2 65 3 126 1 131 1 279 1 257 1 134 1 159 1 162 1 261 1 182 1 17 1 73 1 288 1 77 1 355 3 80 1 19 1 
198 1 249 2 225 1 61 1 82 1 172 1 124 14 43 1 83 2 3 1 203 1 370 2 231 4 65 8 89 2 279 2 257 11 99 1 237 1 159 2 261 4 305 2 17 2 73 11 53 1 35 1 288 2 77 1 188 1 355 6 18 1 194 3 21 3 
249 1 146 1 82 1 172 1 62 2 124 2 314 1 204 1 26 1 370 1 254 1 231 2 65 1 206 1 66 1 320 1 278 1 279 1 159 1 240 1 261 1 379 1 262 2 185 1 215 1 137 1 54 1 53 1 288 1 77 1 355 1 57 1 110 1 111 1 18 1 291 1 58 1 117 1 
146 1 249 3 251 1 337 1 42 1 82 1 83 5 3 4 204 2 297 2 254 2 89 2 257 6 159 3 261 6 262 3 305 2 215 1 17 4 53 1 355 11 110 1 57 2 18 1 19 1 58 1 310 2 225 4 61 1 171 1 226 2 62 3 172 1 124 22 314 2 370 3 26 2 231 6 65 11 126 1 66 1 320 1 131 1 278 2 279 3 237 2 69 1 182 1 240 2 379 1 185 1 136 1 137 1 73 6 77 3 288 3 78 2 143 2 291 2 
146 1 249 2 62 1 124 2 201 1 314 2 26 3 370 2 150 1 254 2 231 4 65 1 152 1 205 1 232 2 28 1 66 1 320 1 279 2 283 1 159 2 162 1 326 1 262 1 379 8 185 1 215 7 52 1 53 1 288 2 77 2 140 1 355 1 247 1 57 2 110 8 18 1 58 2 292 1 
249 1 146 1 225 1 172 1 62 1 124 3 83 1 3 1 340 1 370 1 231 2 65 1 89 1 66 1 320 1 279 1 257 1 237 1 159 1 181 1 261 1 262 1 305 1 17 1 73 1 288 1 77 1 306 1 355 2 
249 1 159 1 61 1 162 1 261 1 124 2 305 1 83 1 17 1 73 1 370 1 231 2 65 2 77 1 288 1 279 1 257 1 22 1 
24 1 249 1 237 1 159 1 225 1 162 1 261 1 124 2 83 1 3 1 73 1 370 1 231 2 77 1 288 1 355 2 279 1 257 1 
249 1 225 1 61 1 124 4 83 2 3 1 370 1 65 2 231 2 89 1 279 1 257 2 237 1 159 1 162 1 261 2 305 1 17 1 73 2 288 1 77 1 355 2 
249 1 159 1 61 1 261 1 124 2 305 1 83 1 17 1 73 1 370 1 52 1 231 2 65 2 77 1 288 1 279 1 257 1 22 1 
24 1 249 1 237 1 159 1 225 1 261 1 124 2 83 1 3 1 73 1 370 1 52 1 231 2 77 1 288 1 355 2 279 1 257 1 
249 1 225 1 61 1 124 4 83 2 3 1 370 1 65 2 231 2 89 1 279 1 257 2 237 1 159 1 261 2 305 1 17 1 73 2 52 1 288 1 77 1 355 2 
249 1 225 1 61 1 124 4 83 2 3 1 370 1 65 2 231 2 89 1 279 1 257 2 237 1 159 1 261 2 305 1 17 1 73 2 288 1 77 1 355 2 
249 1 82 1 124 2 62 1 314 1 204 1 297 1 26 1 370 1 254 1 65 1 231 2 278 1 279 1 159 1 240 1 379 1 262 1 215 1 53 1 77 1 288 1 355 1 57 1 110 1 18 1 291 1 58 1 
23 1 252 1 240 1 262 1 379 1 62 1 314 1 215 1 204 1 26 1 254 1 110 1 57 1 58 1 280 1 
249 1 225 1 61 1 172 1 124 4 83 2 3 1 370 1 65 2 231 2 89 1 279 1 257 2 237 1 159 1 261 2 305 1 17 1 73 2 288 1 77 1 355 2 
249 1 225 1 61 1 226 1 124 4 62 1 83 2 314 1 3 1 204 1 297 1 26 1 370 1 254 1 65 2 231 2 28 1 89 1 278 1 279 1 257 2 237 1 159 1 261 2 240 1 379 1 262 1 305 1 215 1 17 1 73 2 77 1 288 1 355 2 57 1 110 1 291 1 
249 1 146 1 61 1 172 1 62 1 124 3 83 1 3 1 340 1 370 1 231 2 65 2 89 1 66 1 320 1 279 1 257 1 237 1 159 1 181 1 261 1 262 1 184 1 305 1 17 1 73 1 288 1 77 1 355 1 
198 1 225 3 61 3 124 19 173 1 83 6 3 3 203 1 370 2 231 4 65 9 89 3 279 2 96 2 302 1 282 1 237 3 159 2 259 1 378 1 305 3 265 1 17 3 186 1 354 2 288 2 355 10 194 2 59 1 21 1 
225 2 61 2 124 26 173 1 83 4 202 1 3 2 203 2 370 3 231 6 65 14 317 1 89 3 209 2 279 3 179 1 96 4 302 1 282 1 237 2 159 3 325 1 259 1 305 3 265 2 352 1 17 3 354 1 288 3 245 1 355 12 59 2 194 2 21 2 
198 1 225 4 61 4 171 1 124 41 173 1 202 1 83 8 3 5 203 3 370 3 231 6 65 20 126 1 317 1 89 4 209 1 131 1 279 3 179 1 96 4 302 1 282 1 213 1 237 4 159 3 325 1 259 1 182 1 305 4 265 2 352 1 17 5 186 1 354 1 288 3 245 1 355 21 80 1 19 1 194 4 59 1 21 3 
198 1 225 4 61 3 171 1 124 38 173 1 202 1 83 7 3 4 203 3 370 4 231 8 65 20 126 1 317 1 89 4 209 2 131 1 279 4 179 1 96 4 302 1 282 1 213 1 237 3 159 4 325 1 259 1 182 1 305 4 265 2 352 1 17 5 186 1 354 1 288 4 245 1 355 18 80 1 19 1 194 4 59 1 21 3 
198 2 225 7 61 7 171 1 124 52 173 1 202 1 83 14 3 8 203 2 370 2 231 4 65 27 126 1 317 1 89 7 209 1 131 1 279 2 179 1 96 4 302 1 282 1 237 7 159 2 325 1 259 1 182 1 305 7 265 1 352 1 17 8 354 1 288 2 245 1 188 2 355 25 80 1 19 1 194 4 59 1 21 4 
324 1 330 1 153 1 217 1 36 1 366 1 133 1 95 1 74 1 106 1 
229 1 98 1 
199 1 344 1 153 1 217 1 36 1 356 1 133 1 95 1 74 1 
324 1 160 1 285 1 2 1 74 1 106 1 330 1 36 1 217 1 153 1 343 1 218 1 207 2 381 1 133 1 248 1 301 1 95 1 
324 1 160 1 285 1 2 1 74 1 106 1 330 1 36 1 217 1 153 1 343 1 218 1 207 2 381 1 133 1 248 1 301 1 95 1 
324 1 160 1 285 1 2 1 74 1 106 1 330 1 36 1 217 1 153 1 343 1 218 1 207 2 381 1 133 1 248 1 301 1 95 1 
190 1 253 1 39 1 
190 1 253 1 39 1 
41 1 334 1 
41 1 334 1 253 1 
243 1 113 1 
146 2 82 1 62 2 229 1 343 1 153 1 207 1 66 2 320 2 133 1 301 1 95 1 98 1 281 1 285 1 262 2 74 1 138 1 243 1 333 1 217 1 36 1 381 1 113 1 308 1 60 1 145 1 
190 1 39 1 
41 1 334 1 253 1 
249 1 146 2 311 1 172 1 62 2 124 2 314 1 86 1 26 1 370 1 150 1 254 1 231 2 65 1 232 2 6 1 279 1 7 1 283 1 159 1 379 2 262 2 215 2 53 1 77 1 288 1 332 1 355 1 57 1 110 2 18 1 
379 2 351 1 201 1 215 2 174 1 371 1 277 1 269 1 28 1 255 1 110 2 
379 1 201 1 215 1 174 1 371 1 277 1 269 1 110 1 46 1 
326 1 379 1 314 1 215 1 26 1 174 1 254 1 87 1 152 1 255 1 57 1 110 1 58 1 157 1 
371 1 269 1 277 1 255 1 110 1 379 1 351 1 201 1 215 1 174 1 
361 1 
158 1 160 1 348 1 373 1 130 1 134 1 359 1 
363 1 125 1 298 1 27 1 64 1 373 1 301 1 158 1 236 1 160 2 135 1 285 1 219 1 193 1 359 1 196 1 382 1 
293 1 3 2 298 4 254 3 342 2 89 2 301 5 155 1 10 2 211 2 11 2 158 8 101 6 160 8 348 1 13 2 305 2 215 3 17 2 57 3 110 3 307 1 221 2 58 1 359 2 119 6 363 4 227 2 314 4 125 3 369 2 26 10 27 4 64 5 28 1 373 9 374 3 130 1 67 1 177 1 375 1 236 4 237 2 239 2 285 5 135 6 240 3 379 3 286 1 34 2 78 2 191 2 142 2 196 12 
119 5 363 2 125 1 202 1 3 2 203 1 298 2 64 1 27 2 89 2 373 8 375 1 301 1 179 1 158 5 101 5 236 2 237 2 160 5 239 2 325 1 285 1 135 3 305 2 352 1 17 2 353 1 245 1 191 1 221 1 360 1 194 1 359 2 196 6 21 1 
146 1 251 1 363 1 62 1 25 1 3 1 5 1 340 1 298 1 27 1 126 1 373 2 66 1 320 1 131 1 301 1 158 2 236 1 239 2 69 1 285 1 262 1 242 1 17 2 75 1 221 1 19 1 116 1 
158 1 236 1 160 1 348 1 363 1 298 1 27 1 373 1 130 1 359 1 
158 5 119 5 101 5 237 2 160 5 239 2 135 5 305 2 3 2 17 2 78 1 89 2 373 5 221 1 196 10 
64 1 160 1 285 1 125 1 301 1 359 1 
363 2 44 1 314 1 125 2 298 1 315 1 26 1 254 1 27 2 64 4 152 1 373 2 67 2 177 1 375 2 301 3 32 1 158 2 236 2 285 3 326 1 183 1 379 4 215 4 57 1 110 4 112 1 191 2 58 2 
146 2 249 1 82 1 295 1 124 1 62 3 25 1 314 1 340 2 204 1 297 1 26 1 370 1 254 1 231 2 66 2 320 2 278 1 279 1 159 1 240 1 379 1 262 3 215 1 53 1 288 1 77 1 355 1 110 1 57 1 291 1 58 1 
119 2 158 2 101 2 236 1 160 4 363 1 135 2 298 1 27 1 373 1 80 1 191 1 375 1 359 2 196 4 
153 1 72 1 95 1 
153 1 72 1 95 1 
243 1 90 1 153 1 95 1 106 1 
153 1 72 1 95 1 
176 1 153 1 95 1 
176 1 153 1 95 1 
176 1 153 1 95 1 
153 1 95 1 
217 1 74 1 
159 2 225 2 61 1 171 1 182 1 124 8 83 3 3 1 17 1 370 2 65 4 231 4 126 1 288 2 355 4 209 1 80 1 131 1 279 2 19 1 
65 3 126 1 225 2 355 3 182 1 171 1 80 1 124 6 131 1 83 2 3 1 19 1 134 1 17 1 
237 1 159 1 225 1 304 1 61 1 124 4 305 1 83 2 3 1 17 1 370 1 231 2 65 2 288 1 89 1 355 2 279 1 
198 1 237 1 225 1 61 1 124 7 305 1 83 2 3 1 203 1 17 1 65 3 89 1 355 4 194 2 21 1 
198 1 225 5 61 4 171 1 124 23 43 1 83 9 3 3 370 2 65 11 231 4 126 1 89 2 372 1 209 2 131 2 279 2 237 2 159 2 182 1 305 2 17 3 288 2 188 1 355 12 80 1 19 2 194 2 21 2 
355 1 124 1 194 1 
65 1 124 1 21 1 
237 1 159 1 225 2 304 1 61 1 124 6 305 1 83 3 3 1 17 1 370 1 231 2 65 3 288 1 78 1 89 1 355 3 279 1 
225 1 61 1 124 12 202 1 83 2 3 2 203 1 370 1 231 2 65 6 89 2 279 1 179 1 282 1 237 2 159 1 325 1 305 2 352 1 17 2 288 1 245 1 355 6 194 1 21 1 
225 1 61 1 124 6 83 2 3 1 17 1 65 3 126 1 355 3 131 1 19 1 
159 1 225 1 61 1 182 1 171 1 124 3 83 2 370 1 65 1 231 2 288 1 355 2 372 1 209 1 131 1 279 1 19 1 
159 1 69 1 225 3 61 2 124 10 83 5 3 2 17 2 370 1 231 2 65 5 288 1 126 1 355 5 131 2 279 1 19 2 282 1 
159 1 61 1 124 2 305 1 83 1 17 1 370 1 231 2 65 2 288 1 279 1 282 1 
237 1 159 1 225 1 61 1 124 4 305 1 83 2 3 1 17 1 370 1 231 2 65 2 288 1 89 1 355 2 279 1 282 1 
159 3 225 1 61 1 124 3 83 2 186 1 370 3 231 6 65 1 288 3 355 2 372 1 209 1 131 1 279 3 19 1 282 1 
198 1 225 7 61 5 171 1 148 1 124 34 83 12 3 5 203 1 370 5 231 10 65 16 126 2 89 3 372 1 209 2 131 3 279 5 94 1 282 1 237 3 159 5 304 1 182 1 349 1 305 3 17 5 186 1 288 5 355 18 80 1 19 3 194 4 21 3 
159 1 225 2 182 1 171 1 124 8 83 2 202 1 3 1 203 1 17 1 370 1 65 4 231 2 126 1 288 1 355 4 80 1 131 1 279 1 19 1 194 1 282 1 21 1 
198 1 225 2 61 1 171 1 124 11 202 1 83 3 3 1 203 1 370 2 231 4 65 6 126 1 89 1 131 1 279 2 282 1 159 2 304 1 182 1 305 1 17 2 288 2 355 5 80 1 19 1 194 2 21 1 
225 3 61 1 171 1 124 19 202 1 83 4 3 3 203 1 370 3 231 6 65 9 126 1 89 2 209 1 131 1 279 3 179 1 282 1 237 2 159 3 304 1 325 1 182 1 305 2 352 1 17 3 288 3 245 1 355 10 80 1 19 1 194 1 21 1 
225 3 61 2 171 1 124 17 202 1 83 5 3 2 203 1 370 3 231 6 65 10 126 1 89 2 209 1 131 1 279 3 179 1 282 1 237 1 159 3 304 1 325 1 182 1 305 2 352 1 17 3 288 3 245 1 355 7 80 1 19 1 194 1 21 1 
159 1 225 2 182 1 171 1 124 8 83 2 202 1 3 1 203 1 17 1 370 1 65 4 231 2 126 1 288 1 355 4 80 1 131 1 279 1 19 1 194 1 282 1 21 1 
225 1 61 1 124 12 202 1 83 2 3 2 203 1 370 1 231 2 65 6 89 2 279 1 179 1 282 1 237 2 159 1 325 1 305 2 352 1 17 2 288 1 245 1 355 6 194 1 21 1 
225 3 61 2 171 1 124 18 202 1 83 5 3 2 203 1 370 4 231 8 65 10 126 1 89 2 209 2 131 1 279 4 179 1 282 1 237 1 159 4 304 1 325 1 182 1 305 2 352 1 17 3 288 4 245 1 355 8 80 1 19 1 194 1 21 1 
225 3 61 3 124 16 202 1 83 6 3 2 203 1 370 4 231 8 65 9 89 3 209 2 279 4 179 1 282 1 237 2 159 4 325 1 305 3 352 1 17 3 186 1 288 4 245 1 355 7 194 1 21 1 
225 3 61 3 171 1 182 2 124 7 83 6 3 1 17 1 65 3 126 1 355 4 131 3 19 3 
225 3 61 1 171 1 124 18 202 1 83 4 3 2 203 1 370 4 231 8 65 10 126 1 89 2 209 2 131 1 279 4 179 1 282 1 237 1 159 4 325 1 182 1 305 2 352 1 17 3 186 1 288 4 245 1 355 8 80 1 19 1 194 1 21 1 
275 1 146 1 82 1 262 1 62 1 97 1 63 1 
146 1 103 1 82 1 262 1 263 1 313 1 62 1 63 1 275 1 166 1 358 1 97 1 
254 1 152 1 57 1 326 1 110 1 379 1 314 1 134 1 215 1 58 1 26 1 
146 1 82 1 240 1 262 2 379 1 62 2 314 1 185 1 215 1 204 1 26 1 254 1 110 1 57 1 66 1 320 1 291 1 58 1 
146 2 251 1 82 1 62 2 314 1 367 1 204 1 26 3 254 2 66 2 320 1 67 1 10 1 13 1 240 2 379 1 262 2 70 1 185 1 215 1 57 1 110 1 291 1 
146 2 251 1 122 1 82 1 62 2 314 1 367 1 204 1 26 3 254 2 66 2 320 1 67 1 280 1 10 1 13 1 240 2 379 2 262 2 70 1 185 1 215 2 57 1 110 2 
122 1 314 1 26 4 230 1 64 1 254 1 374 1 67 1 301 2 10 1 211 1 284 1 160 1 285 2 13 1 240 1 379 3 215 3 57 1 110 3 142 1 58 1 359 1 
160 1 122 1 13 1 285 2 240 1 379 3 314 1 215 3 26 4 254 1 342 1 64 1 110 3 57 1 374 1 142 1 67 1 58 1 301 2 359 1 10 1 211 1 
140 1 57 1 110 1 379 1 314 1 215 1 
283 1 240 1 379 7 50 1 201 1 314 3 215 6 26 3 254 2 232 1 205 1 140 1 28 1 233 1 141 1 247 1 110 7 307 1 57 2 58 2 292 1 
146 1 249 2 82 2 83 2 3 1 204 1 297 1 254 1 257 1 159 2 261 1 262 2 215 1 17 1 355 3 110 1 57 1 19 1 310 1 225 2 311 1 171 1 226 1 62 2 172 1 124 6 314 1 370 2 26 1 231 4 65 3 126 1 28 1 66 1 320 1 278 1 131 1 279 2 240 1 182 1 379 1 185 1 73 1 77 2 288 2 80 1 291 1 
363 2 227 1 125 1 298 2 369 1 26 2 27 2 342 1 64 2 373 1 374 1 130 1 177 1 301 3 281 1 211 1 158 1 236 2 160 1 348 1 285 3 379 1 215 1 34 1 110 1 142 1 58 1 359 1 
240 1 379 2 314 2 215 2 286 1 26 2 254 1 28 1 140 1 110 2 307 1 57 1 142 1 
122 1 326 1 379 4 314 1 215 4 4 1 26 1 254 1 152 1 28 1 110 4 57 1 58 1 
48 1 240 1 379 2 339 1 50 1 314 2 215 2 151 1 26 1 254 1 141 1 110 2 57 1 67 1 
169 1 91 1 57 1 110 1 379 1 93 1 314 1 114 1 215 1 58 1 
254 1 283 1 28 1 57 1 110 2 6 1 379 2 314 1 201 1 215 2 26 1 
283 1 326 1 379 5 314 2 215 4 4 1 26 3 254 2 152 1 205 1 28 1 110 5 247 1 57 2 67 1 58 1 
283 1 326 1 379 5 314 2 215 4 4 1 165 1 26 3 254 2 152 1 205 1 28 1 110 5 57 2 67 1 58 1 
146 1 82 1 240 1 262 2 379 1 62 2 314 1 185 1 215 1 204 1 26 1 254 1 110 1 57 1 66 1 320 1 58 1 280 1 
240 1 379 1 50 1 314 2 215 1 26 1 254 1 233 1 141 1 110 1 307 1 57 1 67 1 
146 1 262 1 62 1 164 1 368 1 86 1 108 1 332 1 7 1 
108 1 29 1 341 1 
108 1 336 1 82 1 164 1 368 1 
40 1 160 1 251 1 336 2 285 2 82 1 70 1 164 2 367 1 341 1 368 2 108 1 37 1 29 1 301 2 359 1 224 1 281 1 211 1 
316 1 296 1 134 1 68 1 
316 1 327 1 234 1 149 1 296 1 68 1 85 1 
331 1 149 1 271 1 
250 1 327 1 149 3 296 1 85 3 276 1 316 1 319 1 92 2 234 1 8 1 68 1 
316 1 303 1 327 1 234 1 149 2 296 1 16 1 68 1 85 2 
76 1 316 1 91 1 327 1 93 1 234 1 222 1 149 1 8 1 272 1 85 1 
316 1 327 1 234 1 149 1 8 1 68 1 85 1 
327 1 234 1 149 1 296 1 8 1 68 2 85 1 
327 2 149 2 228 1 287 1 85 2 316 1 234 2 8 1 115 1 68 1 
303 2 350 1 312 1 327 1 149 3 296 1 328 1 85 3 316 2 234 1 8 1 68 1 272 1 
120 1 169 1 303 1 327 1 163 1 149 2 296 1 85 2 316 1 91 2 234 1 93 1 222 1 8 1 68 1 
303 2 312 1 327 2 149 4 296 1 16 1 85 4 316 2 234 2 8 1 68 1 272 1 309 1 
316 1 327 1 234 1 149 1 296 1 8 1 68 1 85 1 
250 1 303 2 312 1 327 1 149 4 296 2 85 4 316 3 139 1 319 1 92 1 234 1 68 2 272 1 
303 1 81 1 327 1 149 2 296 1 85 2 316 1 299 1 234 1 256 1 8 1 68 1 
316 1 250 1 319 2 92 2 327 1 321 1 234 1 149 3 296 1 8 1 68 1 85 3 
323 1 316 2 273 1 15 2 
14 1 327 1 234 1 149 1 8 1 85 1 
316 1 303 1 350 1 327 1 234 1 149 2 296 1 8 1 68 1 85 2 
246 1 
316 1 327 1 234 1 149 1 296 1 8 1 68 1 85 1 
316 1 303 1 350 1 92 1 327 1 234 1 149 3 296 1 8 1 68 1 85 3 
316 1 139 1 312 1 272 1 
316 1 68 1 

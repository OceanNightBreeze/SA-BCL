#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 113 146 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 113 146 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 113 146 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 113 146 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 113 146 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 88 125 78 162 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 1 353 9 320 2 205 1 26 2 322 2 207 5 51 1 139 2 259 2 185 1 238 3 31 1 331 1 367 1 369 1 124 1 145 1 147 1 169 1 149 9 221 1 38 1 293 4 246 2 247 2 348 6 44 1 
351 1 353 9 320 2 205 1 26 2 322 2 207 5 51 1 139 2 259 2 185 1 238 3 31 1 331 1 367 1 369 1 124 1 145 1 147 1 169 1 149 9 221 1 38 1 293 4 246 2 247 2 348 6 44 1 
351 1 353 10 320 2 205 1 26 2 322 2 207 6 51 1 139 2 259 2 185 1 238 4 31 1 331 1 367 1 369 1 124 1 145 1 147 1 169 1 149 10 221 1 38 1 293 5 246 2 247 2 348 7 44 1 
351 1 353 7 320 2 205 1 26 2 322 1 207 4 139 2 259 2 185 1 238 2 31 1 331 1 367 1 369 1 124 1 145 1 147 1 169 1 149 7 221 1 38 1 293 3 246 2 247 2 348 4 44 1 
353 4 320 1 205 1 26 1 322 2 149 4 207 3 221 1 51 1 293 2 139 1 259 1 246 1 185 1 238 1 348 3 44 1 124 1 
332 1 353 2 145 1 320 1 205 1 26 1 207 1 149 2 221 1 139 1 246 1 247 1 31 1 305 1 377 1 44 1 
353 3 147 1 205 1 149 3 207 2 221 1 293 1 139 2 246 2 247 1 238 1 348 1 44 1 
250 1 353 9 320 1 205 1 26 1 322 2 207 5 51 1 139 2 259 1 185 1 238 3 369 1 124 1 147 1 149 9 221 1 38 1 293 4 246 2 247 1 348 7 44 1 279 1 
250 1 353 9 320 1 205 1 26 1 322 2 207 5 51 1 139 2 259 1 185 1 238 3 369 1 124 1 147 1 149 9 221 1 38 1 293 4 246 2 247 1 348 7 44 1 279 1 
45 1 256 1 210 1 
314 2 120 1 210 1 
85 1 8 2 136 2 157 2 128 2 281 2 208 2 366 1 
252 1 352 1 254 1 136 3 46 1 157 3 94 1 281 2 2 1 47 2 209 1 208 2 3 1 118 1 284 1 8 2 186 1 330 2 166 1 10 1 11 1 103 1 366 1 307 2 125 2 60 1 111 1 222 1 18 1 85 1 225 1 128 2 87 1 88 2 175 1 114 1 156 1 
85 1 8 1 136 1 354 1 157 1 128 1 281 1 291 1 208 1 170 1 
136 1 157 1 291 1 206 1 256 1 208 1 50 1 210 1 151 1 310 1 127 1 55 1 12 1 202 1 
136 1 157 1 281 1 291 1 206 2 256 1 208 1 210 1 151 1 127 2 310 1 8 1 128 1 55 1 12 1 
7 1 6 1 206 1 127 1 199 1 
7 1 206 2 256 1 80 1 210 1 172 1 127 2 199 1 
7 1 206 1 127 1 
136 1 354 1 157 1 336 1 281 1 291 1 206 1 170 1 208 1 127 1 199 1 85 1 8 1 128 1 
210 1 
7 1 206 2 256 1 210 1 172 1 375 1 127 2 199 1 
34 2 287 1 272 1 206 5 160 2 256 1 17 1 274 1 210 1 172 1 127 5 199 2 7 2 342 1 224 1 40 1 63 1 365 2 203 1 
45 1 366 1 
136 2 157 2 281 1 208 2 8 1 128 1 296 1 366 2 107 1 
77 1 23 1 187 1 
352 1 136 1 254 1 157 1 94 1 125 1 3 1 84 1 225 1 166 1 330 1 87 1 88 1 103 1 366 1 114 1 
352 1 254 1 136 2 157 2 94 1 125 1 3 1 208 1 285 1 8 1 23 1 225 1 128 1 87 1 166 1 330 1 88 1 103 1 92 1 114 1 
58 1 229 1 136 5 157 5 281 1 208 5 50 1 275 1 285 1 8 4 128 4 296 1 366 1 92 2 
8 2 136 2 354 1 157 2 128 2 291 1 208 2 258 1 
8 3 136 3 157 3 128 3 281 1 208 3 366 1 92 1 
8 1 136 1 354 1 157 1 128 1 291 1 208 1 
8 1 136 1 157 1 128 1 281 1 291 1 208 1 296 1 107 1 
352 1 254 1 136 4 46 1 157 4 94 1 281 2 206 1 2 1 47 1 3 1 208 3 284 1 140 1 285 1 8 3 186 1 166 1 330 1 10 1 55 1 11 1 103 1 366 1 12 1 307 2 291 1 125 1 60 1 111 1 222 1 151 1 310 1 127 1 85 1 225 1 226 1 128 3 87 1 88 1 175 1 296 1 114 1 92 1 
275 1 8 1 136 2 157 2 128 1 208 2 50 1 366 1 92 1 
136 3 157 3 281 1 206 1 291 1 208 3 210 1 151 1 127 1 310 1 285 1 8 3 226 1 128 3 55 1 89 1 296 1 12 1 92 2 
8 2 23 1 136 2 157 2 128 2 281 1 187 1 208 2 296 1 92 1 
352 1 136 1 254 1 157 1 94 1 125 1 3 1 225 1 166 1 330 1 87 1 88 1 103 1 366 1 114 1 
352 1 136 1 254 1 157 1 94 1 125 1 219 1 3 1 376 1 166 1 330 1 87 1 88 1 103 1 366 1 
180 1 66 1 46 1 2 1 47 4 209 2 137 1 362 1 235 1 10 2 187 2 11 1 122 1 106 1 168 1 307 2 77 2 15 1 60 1 173 1 222 1 23 2 317 1 175 1 
8 1 136 1 157 1 128 1 291 1 55 1 208 1 258 1 
261 1 158 1 
261 1 158 1 
119 1 192 1 
119 1 192 1 
119 1 192 1 
261 1 158 1 201 1 
251 1 261 1 158 1 
119 1 236 1 261 2 158 2 192 1 152 1 
261 1 158 1 201 1 
261 1 158 1 201 1 
261 1 158 1 183 1 
261 1 158 1 183 1 
261 1 158 1 183 1 
0 1 251 1 136 2 25 1 157 2 158 1 206 1 255 1 208 2 95 1 5 1 8 2 99 1 260 1 261 1 30 1 303 1 74 1 366 1 75 1 337 1 291 1 79 1 127 1 128 2 93 1 
65 1 136 1 1 1 354 1 157 1 25 2 158 2 281 1 282 1 206 2 208 1 95 2 5 1 8 1 261 2 303 2 335 1 337 2 195 1 336 1 291 1 36 1 79 2 170 1 127 2 85 1 20 1 128 1 278 1 
320 1 259 1 26 1 
320 1 26 1 377 1 
259 2 343 1 26 3 9 1 239 1 377 1 
259 1 26 2 9 1 239 1 49 1 377 1 
259 1 26 2 9 2 239 1 377 1 
180 1 231 1 160 1 206 5 27 1 255 1 256 1 164 2 210 2 137 1 326 2 120 1 7 1 99 1 265 1 122 1 365 1 34 1 270 2 287 2 243 1 273 1 173 1 172 1 127 5 198 1 199 4 314 3 112 1 40 1 93 1 203 3 
24 1 180 3 231 2 206 9 323 1 27 1 160 2 256 1 164 6 210 5 137 3 326 6 120 3 7 6 6 5 99 4 213 5 263 1 265 3 122 3 365 2 34 2 287 6 126 1 173 3 172 1 127 9 199 7 314 9 112 2 224 1 40 1 345 1 318 1 203 8 
180 1 231 1 160 1 206 3 256 1 164 2 210 3 137 1 326 2 120 2 99 1 265 1 122 1 365 1 34 1 270 1 287 2 273 1 173 1 127 3 199 2 198 1 314 4 112 1 224 1 203 3 
24 1 180 2 231 1 160 1 206 4 256 1 164 4 210 4 137 2 326 4 120 3 99 2 265 2 122 2 365 1 34 1 270 2 287 4 273 1 173 2 127 4 198 1 199 3 314 7 112 1 224 1 345 1 318 1 203 5 
45 1 94 1 364 1 
94 1 349 1 
53 1 
254 1 94 1 103 1 
94 1 269 1 
254 1 94 1 
254 1 100 1 94 3 103 1 364 2 176 1 
334 1 108 2 47 7 209 4 137 1 358 1 138 1 360 1 327 1 174 1 98 1 10 3 295 1 317 3 122 1 104 1 168 2 
334 1 108 2 47 7 209 4 137 1 358 1 138 1 360 1 327 1 174 1 98 1 10 3 295 1 317 3 122 1 104 1 168 2 
334 1 108 2 47 7 209 4 137 1 339 1 358 1 138 1 360 1 327 1 174 1 98 1 10 3 295 1 317 3 122 1 104 1 168 2 
180 3 355 1 69 1 47 31 209 16 358 1 137 4 96 1 301 1 138 2 327 2 360 2 98 2 10 15 265 3 11 1 122 4 104 1 168 5 307 2 334 1 108 3 35 3 60 1 222 1 173 3 311 1 83 1 174 1 295 5 317 10 129 1 175 1 130 4 
133 1 47 9 209 5 137 1 358 1 327 1 360 1 138 1 98 1 10 4 56 1 11 2 122 1 168 3 307 4 108 2 334 1 60 2 222 2 174 1 317 4 295 1 129 1 175 2 
353 2 352 1 320 1 230 1 205 1 181 1 26 2 283 1 207 1 161 1 139 1 259 1 237 1 330 1 264 1 191 1 240 1 125 1 149 2 221 1 343 1 246 1 87 1 247 1 348 1 88 1 131 1 377 1 44 1 91 1 
353 3 352 1 320 1 230 1 205 1 181 1 26 2 298 1 283 1 207 1 161 1 139 1 121 1 259 1 237 1 330 1 264 1 191 1 125 1 149 3 343 1 246 1 87 1 247 1 348 2 88 1 43 1 377 1 44 1 91 1 
353 2 352 1 230 1 320 1 205 1 26 2 283 1 207 1 121 1 259 1 237 1 330 1 264 1 191 1 125 1 149 2 343 1 87 1 247 1 348 2 88 1 43 1 377 1 44 1 91 1 
352 1 353 1 254 1 94 1 182 1 298 1 139 1 330 1 166 1 237 2 101 1 264 2 102 1 191 2 125 1 149 1 313 1 244 1 246 1 316 1 87 1 247 2 88 1 
353 1 352 1 320 1 230 1 181 1 26 2 283 1 161 1 139 1 121 1 259 1 237 1 330 1 264 1 191 1 240 1 125 1 149 1 221 1 343 1 246 1 87 1 247 1 88 1 377 1 91 1 
13 1 
228 1 136 1 94 1 50 1 7 6 141 1 330 2 101 1 54 1 55 1 190 1 193 1 12 1 194 1 14 2 287 2 16 1 59 1 291 1 197 2 292 1 151 1 244 1 19 1 112 1 344 2 203 2 202 1 115 2 352 1 254 1 157 1 206 5 160 1 116 2 256 1 208 1 210 2 359 2 120 2 166 2 302 1 365 1 123 1 34 1 372 2 125 2 172 3 127 5 310 1 314 2 40 1 87 1 88 2 177 4 
228 1 136 1 16 1 157 1 291 1 206 3 116 1 208 1 50 1 172 1 375 1 151 1 127 3 310 1 19 1 7 2 55 1 190 1 177 2 12 1 193 1 202 1 
228 1 136 1 16 1 157 1 291 1 206 3 256 1 197 1 208 1 50 1 172 1 375 1 210 1 151 1 127 3 310 1 19 1 7 1 55 1 190 1 177 3 12 1 193 1 202 1 
228 1 136 1 157 1 206 3 116 1 256 1 208 1 50 1 210 1 7 2 55 1 190 1 193 1 12 1 16 1 291 1 197 1 172 1 375 1 151 1 310 1 127 3 19 1 344 1 177 3 202 1 
132 1 228 1 115 2 136 1 157 1 160 1 206 5 116 4 256 5 208 1 50 1 210 5 359 2 120 2 7 7 72 1 141 1 214 1 55 1 190 1 365 1 193 1 12 1 34 1 14 2 287 1 372 2 16 1 308 1 291 1 197 4 292 1 172 3 375 1 151 1 127 5 310 1 19 1 40 1 344 4 227 1 177 6 203 1 202 1 
228 1 136 1 50 1 7 4 141 1 55 1 190 1 12 1 193 1 14 2 287 1 16 1 291 1 197 2 292 1 151 1 19 1 344 2 202 1 203 1 115 2 157 1 206 4 160 1 116 2 256 1 208 1 210 2 359 2 120 2 302 1 365 1 34 1 372 2 172 2 310 1 127 4 314 2 40 1 177 4 
132 1 228 1 115 2 136 1 157 1 206 4 160 1 116 2 256 1 208 1 50 1 210 1 359 2 7 4 120 2 141 1 214 1 55 1 190 1 365 1 193 1 12 1 34 1 14 2 287 1 372 2 16 1 291 1 197 2 292 1 172 2 151 1 310 1 127 4 19 1 344 2 40 1 177 4 227 1 203 1 202 1 
132 1 228 1 115 2 136 1 157 1 206 4 160 1 116 2 256 1 208 1 50 1 210 1 359 2 7 4 120 2 141 1 214 1 55 1 190 1 365 1 193 1 12 1 34 1 14 2 287 1 372 2 16 1 291 1 197 2 292 1 172 2 151 1 310 1 127 4 19 1 344 2 40 1 177 4 227 1 203 1 202 1 
132 1 228 1 115 2 136 1 157 1 206 4 160 1 116 2 256 1 208 1 50 1 210 1 211 2 359 2 7 4 141 1 55 1 190 1 365 1 193 1 12 1 34 1 287 1 16 1 291 1 197 2 172 2 151 1 310 1 127 4 37 1 314 2 19 1 341 1 344 2 40 1 347 2 177 4 350 1 203 1 202 1 
132 1 228 1 115 2 136 1 157 1 160 1 206 4 116 3 256 1 208 1 50 1 210 1 359 2 120 2 7 5 141 1 214 1 55 1 190 1 365 1 193 1 12 1 34 1 14 2 287 1 372 2 16 1 291 1 308 1 197 3 292 1 172 2 151 1 310 1 127 4 19 1 40 1 344 3 177 5 227 1 203 1 202 1 
132 1 228 1 115 2 136 1 157 1 160 1 206 4 116 3 256 1 208 1 50 1 210 1 359 2 120 2 7 5 141 1 214 1 55 1 190 1 365 1 193 1 12 1 34 1 14 2 287 1 372 2 16 1 291 1 308 1 197 3 292 1 172 2 151 1 310 1 127 4 19 1 40 1 344 3 177 5 227 1 203 1 202 1 
228 1 115 2 136 1 157 1 160 1 206 4 116 2 256 1 208 1 50 1 210 1 211 2 359 2 7 4 141 1 302 1 55 1 190 1 365 1 193 1 12 1 34 1 287 1 16 1 291 1 197 2 172 2 151 1 127 4 310 1 314 2 19 1 341 1 344 2 40 1 347 2 177 4 203 1 202 1 
45 1 46 1 2 1 47 6 209 3 358 1 137 1 138 1 98 1 235 1 10 3 187 1 11 1 122 1 366 2 168 2 307 2 77 1 334 1 108 1 60 1 222 1 174 1 23 1 317 2 175 1 
180 2 46 2 355 1 68 1 2 1 69 1 47 14 209 8 137 2 186 1 10 6 187 4 265 2 11 2 122 1 366 1 268 1 168 1 307 4 77 11 35 3 148 1 60 2 222 2 173 1 18 1 23 11 315 1 295 1 317 2 130 3 175 2 64 1 
352 1 254 1 136 2 46 1 157 2 94 1 2 1 47 2 70 1 3 1 208 1 209 1 285 1 8 1 186 1 330 1 166 1 10 1 187 1 103 1 11 1 366 1 307 2 289 1 371 1 125 1 60 1 222 1 18 1 84 1 225 1 128 1 87 1 88 1 175 1 114 1 92 1 64 1 
180 2 136 3 135 2 46 3 94 2 2 3 47 20 3 2 137 3 138 1 52 1 285 1 8 1 98 1 186 1 330 3 10 10 143 2 187 7 189 2 11 3 103 2 108 1 334 1 60 3 111 2 18 1 23 7 295 4 114 2 64 1 352 2 254 2 157 3 208 1 209 10 358 1 121 1 363 1 166 1 265 2 122 3 366 2 168 4 307 6 77 7 125 3 81 1 222 3 173 2 82 2 174 1 225 2 128 1 87 2 317 8 88 3 175 3 92 1 
252 2 352 2 253 1 136 1 254 2 157 1 46 2 94 3 2 2 47 2 208 1 209 1 117 1 121 1 8 1 97 1 235 1 186 1 330 8 166 2 10 1 101 1 11 2 307 4 125 7 242 1 60 2 222 2 18 1 244 1 128 1 87 2 277 1 346 1 88 8 175 2 131 1 178 1 92 1 
180 1 136 1 46 1 157 1 281 1 2 1 47 3 208 1 209 1 137 1 8 1 10 2 187 1 265 1 11 1 122 1 168 1 307 2 77 1 60 1 222 1 173 1 23 1 21 1 128 1 317 1 175 1 296 1 64 1 
307 2 180 1 77 1 46 1 2 1 47 2 60 1 209 2 222 1 137 1 362 1 23 1 235 1 317 1 295 1 187 1 175 1 11 1 
307 2 77 1 66 1 46 1 2 1 47 2 60 1 222 1 173 1 23 1 235 1 10 2 317 1 187 1 175 1 11 1 122 1 168 1 
180 1 46 1 2 1 47 4 209 2 137 1 235 1 10 2 187 2 265 1 11 1 122 1 168 1 307 2 77 2 60 1 222 1 173 1 23 2 295 1 317 2 175 1 
307 2 180 1 77 1 46 1 2 1 47 2 60 1 209 2 222 1 137 1 97 1 362 1 23 1 317 1 295 1 187 1 175 1 11 1 
307 2 77 1 66 1 46 1 2 1 47 2 60 1 222 1 173 1 97 1 23 1 10 2 317 1 187 1 175 1 11 1 122 1 168 1 
180 1 46 1 2 1 47 4 209 2 137 1 97 1 10 2 187 2 265 1 11 1 122 1 168 1 307 2 77 2 60 1 222 1 173 1 23 2 295 1 317 2 175 1 
307 2 180 1 77 2 46 1 2 1 60 1 47 4 209 2 173 1 222 1 137 1 23 2 10 2 317 2 295 1 187 2 265 1 175 1 11 1 122 1 168 1 
352 1 254 1 136 1 157 1 46 1 94 1 2 1 47 2 209 1 3 1 186 1 330 1 166 1 10 1 103 1 11 1 366 1 307 2 125 1 60 1 111 1 222 1 18 1 225 1 87 1 88 1 175 1 114 1 
352 1 254 1 136 1 157 1 46 1 94 1 2 1 47 2 209 1 3 1 186 1 330 1 166 1 10 1 103 1 11 1 366 1 307 2 125 1 219 1 220 1 60 1 222 1 18 1 376 1 87 1 88 1 175 1 
180 1 46 1 2 1 47 4 209 2 137 1 10 2 187 2 265 1 11 1 122 1 168 1 307 2 77 2 60 1 222 1 173 1 23 2 295 1 317 2 175 1 64 1 
180 1 352 1 254 1 136 1 157 1 46 1 94 1 2 1 47 4 209 2 3 1 137 1 330 1 10 2 187 2 143 1 265 1 103 1 11 1 122 1 168 1 307 2 77 2 125 1 60 1 111 1 173 1 222 1 23 2 225 1 87 1 317 2 295 1 88 1 175 1 131 1 114 1 
180 1 136 1 46 1 157 1 281 1 2 1 47 3 208 1 209 2 137 1 8 1 10 1 187 1 265 1 11 1 122 1 307 2 77 1 60 1 173 1 222 1 340 1 23 1 128 1 317 1 295 1 175 1 296 1 64 1 
307 2 146 1 321 1 290 1 113 1 60 1 56 1 11 1 175 1 222 1 
307 2 146 1 321 1 290 1 113 1 60 1 56 1 11 1 175 1 222 1 
307 2 146 1 321 1 290 1 113 1 60 1 56 1 11 1 175 1 222 1 
307 2 146 1 321 1 290 1 113 1 60 1 56 1 11 1 175 1 222 1 
307 2 146 1 321 1 290 1 113 1 60 1 56 1 11 1 175 1 222 1 
361 1 234 1 236 1 25 1 261 1 158 1 337 1 79 1 95 1 28 1 
251 1 30 1 
142 1 25 1 86 1 261 1 158 1 337 1 79 1 267 1 95 1 
73 1 201 1 
328 1 183 1 152 1 
65 1 136 1 1 1 354 1 157 1 25 1 158 1 281 1 282 1 206 1 208 1 95 1 5 1 8 1 261 1 303 2 335 1 337 1 195 1 336 1 291 1 36 1 79 1 170 1 127 1 85 1 20 1 128 1 278 1 
65 1 136 1 1 1 354 1 157 1 25 1 158 1 281 1 282 1 206 1 208 1 95 1 5 1 8 1 261 1 303 2 335 1 337 1 195 1 336 1 291 1 36 1 79 1 170 1 127 1 85 1 20 1 128 1 278 1 
65 1 136 1 1 1 354 1 157 1 25 1 158 1 281 1 282 1 206 1 208 1 95 1 5 1 8 1 261 1 303 2 335 1 337 1 195 1 336 1 291 1 36 1 79 1 170 1 127 1 85 1 20 1 128 1 278 1 
73 1 152 1 201 1 
73 1 152 1 201 1 
328 1 183 1 
328 1 183 1 152 1 
74 1 75 1 
0 1 251 1 136 2 1 1 157 2 25 1 158 1 206 1 255 1 208 2 95 1 8 2 99 1 260 1 261 1 30 1 303 1 74 1 366 1 216 1 75 1 337 1 291 1 79 1 127 1 199 1 20 1 128 2 93 1 
252 2 352 1 254 1 136 2 46 1 157 2 94 1 2 1 47 2 208 2 209 1 117 1 212 1 186 1 330 2 262 1 10 1 11 1 286 1 368 1 307 2 125 2 60 1 222 1 18 1 200 1 87 1 277 1 88 2 175 1 64 1 
217 1 352 1 320 1 230 1 26 2 67 1 181 1 125 2 121 1 259 1 343 1 87 1 330 2 237 1 88 2 215 1 377 1 131 1 91 1 
352 1 320 1 230 1 26 2 181 1 125 1 121 1 184 1 259 1 343 1 330 1 237 1 87 1 88 1 215 1 377 1 91 1 
352 1 254 1 67 1 94 1 125 1 223 1 244 1 87 1 166 1 330 1 237 1 101 1 88 1 102 1 
217 1 352 1 320 1 230 1 26 2 67 1 181 1 125 1 121 1 259 1 343 1 330 1 237 1 87 1 88 1 215 1 377 1 91 1 
150 1 
342 1 45 1 287 1 256 1 17 1 210 1 203 1 
160 1 206 1 256 1 210 2 120 1 7 1 365 1 34 1 14 1 287 1 372 1 292 1 172 1 127 1 314 1 40 1 203 1 
180 2 94 10 137 2 325 2 326 6 7 5 100 1 330 3 103 3 57 2 12 2 287 8 59 1 17 1 338 1 112 2 342 1 22 2 155 2 294 2 349 3 203 9 352 4 254 3 160 4 206 5 256 2 164 6 210 8 300 2 120 6 166 1 265 2 365 4 32 1 364 2 122 2 33 2 269 2 34 4 271 1 218 1 125 3 78 1 172 3 173 2 127 5 82 2 314 12 40 4 87 3 88 3 131 1 90 2 
180 2 159 1 355 1 206 1 160 2 256 2 356 1 164 5 210 5 137 2 326 5 7 1 120 3 265 2 266 1 57 2 365 2 122 2 306 1 33 1 34 2 287 5 241 1 196 1 59 1 109 1 35 1 172 1 173 2 127 1 314 6 112 1 40 2 130 1 203 8 
136 1 354 1 157 1 281 1 160 1 206 1 208 1 137 2 138 1 8 1 98 1 214 1 57 2 365 1 122 1 33 1 34 1 334 1 287 2 336 1 291 1 170 1 127 1 85 1 40 1 128 1 42 1 203 2 
34 1 287 1 160 1 17 1 256 1 210 1 342 1 40 1 365 1 203 1 
180 2 287 5 164 5 210 5 173 2 82 1 137 2 326 5 314 10 120 5 265 2 57 2 122 2 33 1 203 5 
7 1 206 1 256 1 210 1 172 1 127 1 
352 1 254 1 94 1 160 2 206 3 162 1 233 1 7 4 330 4 166 2 54 1 101 1 365 2 123 1 34 2 287 2 218 1 125 4 59 2 78 2 172 2 127 3 244 1 112 2 224 1 40 1 87 1 88 4 203 2 
352 1 136 3 254 1 157 3 46 1 281 2 94 1 2 1 47 1 208 2 3 1 284 1 8 2 186 1 330 1 166 1 10 1 11 1 103 1 366 1 307 2 125 1 60 1 111 1 222 1 85 1 225 1 128 2 87 1 88 1 175 1 114 1 
34 1 108 1 287 2 160 1 59 1 256 2 164 2 210 4 326 2 314 4 120 2 112 1 40 1 365 1 203 1 
79 1 171 1 95 1 
79 1 74 1 95 1 
79 1 171 1 95 1 
79 1 171 1 95 1 
370 1 79 1 95 1 
370 1 79 1 95 1 
370 1 79 1 95 1 
79 1 95 1 
261 1 158 1 
307 4 108 1 334 1 47 8 60 2 209 4 222 2 137 1 358 1 138 1 174 1 98 1 10 4 295 1 317 3 129 1 175 2 11 2 122 1 168 2 
45 1 108 1 334 1 47 6 209 3 358 1 137 1 138 1 174 1 98 1 10 3 317 2 122 1 168 2 
307 2 180 1 60 1 47 4 209 2 173 1 222 1 137 1 10 2 317 2 295 1 304 1 265 1 175 1 11 1 122 1 168 1 
180 1 355 1 35 1 10 4 317 2 295 1 69 1 265 1 47 7 209 3 130 2 122 1 173 1 137 1 168 1 
180 2 68 1 69 1 47 23 209 11 358 1 137 3 138 2 98 2 10 12 265 2 11 2 122 3 168 5 307 4 108 1 334 1 35 2 60 2 110 1 173 2 222 2 174 1 315 1 317 9 295 4 129 2 130 2 175 2 
10 1 47 1 130 1 
35 1 47 1 209 1 
307 2 180 1 60 1 47 6 209 3 222 1 173 1 82 1 137 1 10 3 295 1 317 3 304 1 265 1 11 1 175 1 122 1 168 2 
180 2 355 1 47 12 209 6 137 2 10 6 56 1 265 2 11 1 122 2 266 1 306 1 168 1 307 2 241 1 196 1 35 1 109 1 60 1 222 1 173 2 295 1 317 2 130 1 175 1 
138 1 98 1 334 1 10 3 295 1 317 2 47 6 209 3 122 1 137 1 168 1 
307 2 47 3 60 1 209 1 110 1 222 1 358 1 138 1 174 1 98 1 10 2 295 1 317 2 129 1 175 1 11 1 168 1 
307 2 334 1 60 1 47 10 209 5 222 1 137 2 138 2 98 2 42 1 10 5 317 5 295 2 56 1 11 1 175 1 122 2 168 3 
307 2 180 1 60 1 47 2 209 2 222 1 137 1 295 1 317 1 56 1 175 1 11 1 
307 2 180 1 60 1 47 4 209 2 173 1 222 1 137 1 10 2 317 2 295 1 56 1 265 1 175 1 11 1 122 1 168 1 
307 6 47 3 60 3 209 1 110 1 222 3 138 1 98 1 10 2 129 1 317 2 295 1 56 1 175 3 11 3 297 1 168 1 
180 3 355 1 69 1 47 34 209 16 358 1 137 5 301 1 96 1 138 3 98 3 10 18 304 1 56 1 265 3 11 5 122 5 168 7 307 10 108 1 334 2 35 3 60 5 110 1 222 5 173 3 83 1 174 1 129 2 295 5 317 12 130 4 175 5 297 1 
355 1 47 8 209 4 137 1 358 1 138 1 98 1 10 4 56 1 11 1 122 1 168 2 307 2 108 1 334 1 35 1 109 1 60 1 222 1 174 1 317 2 130 1 175 1 
180 1 355 1 69 1 47 11 209 6 358 1 137 2 138 1 98 1 10 5 56 1 304 1 265 1 11 2 122 1 168 2 307 4 108 1 334 1 109 1 35 1 60 2 222 2 174 1 295 1 317 3 130 2 175 2 
180 2 355 1 47 19 209 9 358 1 137 3 138 1 98 1 10 10 304 1 56 1 265 2 11 3 266 1 122 3 306 1 168 3 307 6 108 1 334 1 241 1 196 1 35 1 109 1 60 3 222 3 173 2 174 1 295 1 317 4 129 1 130 1 175 3 
180 2 355 1 47 17 209 10 358 1 137 3 138 1 98 1 10 7 304 1 56 1 265 2 11 3 122 2 266 1 306 1 168 3 307 6 108 1 334 1 241 1 196 1 35 1 109 1 60 3 222 3 173 1 174 1 129 1 295 2 317 5 130 1 175 3 
355 1 47 8 209 4 137 1 358 1 138 1 98 1 10 4 56 1 11 1 122 1 168 2 307 2 108 1 334 1 35 1 109 1 60 1 222 1 174 1 317 2 130 1 175 1 
180 2 355 1 47 12 209 6 137 2 10 6 56 1 265 2 11 1 122 2 266 1 306 1 168 1 307 2 241 1 196 1 35 1 109 1 60 1 222 1 173 2 295 1 317 2 130 1 175 1 
180 2 355 1 47 18 209 10 358 1 137 3 138 1 98 1 10 8 304 1 56 1 265 2 11 4 266 1 122 2 306 1 168 3 307 8 108 1 334 1 241 1 196 1 109 1 35 1 60 4 222 4 173 1 174 1 295 2 317 5 129 2 130 1 175 4 
180 3 355 1 47 16 209 9 137 3 10 7 56 1 265 3 11 4 266 1 122 2 306 1 168 3 307 8 241 1 196 1 109 1 35 1 60 4 222 4 173 2 295 3 317 6 129 2 130 1 175 4 297 1 
334 1 47 7 209 3 358 1 137 1 138 3 174 2 98 3 10 4 317 6 295 3 122 1 168 3 
180 2 355 1 47 18 209 10 358 1 137 3 138 1 98 1 10 8 56 1 265 2 11 4 266 1 122 2 306 1 168 3 307 8 108 1 334 1 241 1 196 1 109 1 35 1 60 4 222 4 173 1 174 1 295 1 317 4 129 2 130 1 175 4 297 1 
275 1 136 1 157 1 208 1 374 1 50 1 366 1 
204 1 136 1 157 1 374 1 208 1 50 1 257 1 275 1 153 1 167 1 366 1 249 1 
244 1 352 1 45 1 254 1 87 1 94 1 330 1 166 1 101 1 125 1 88 1 
352 1 254 1 136 2 157 2 94 1 125 1 3 1 208 1 8 1 225 1 128 1 166 1 330 1 87 1 88 1 103 1 366 1 92 1 
352 1 254 2 136 2 157 2 94 3 291 1 125 1 78 1 3 1 208 2 151 1 8 1 22 1 225 1 128 2 330 1 87 1 55 1 88 1 103 2 366 1 92 1 269 1 
352 1 136 2 254 2 157 2 94 3 232 1 208 2 3 1 8 1 330 2 55 1 103 2 366 1 269 1 125 2 291 1 219 1 78 1 151 1 22 1 128 2 87 1 88 2 92 1 
352 1 254 1 94 4 232 1 206 2 163 1 256 1 210 1 7 1 330 3 166 1 103 1 364 1 12 1 269 1 125 3 78 1 127 2 39 1 22 1 87 1 88 3 349 1 
352 1 254 1 94 4 232 1 206 2 125 3 78 1 256 1 210 1 127 2 300 1 7 1 22 1 166 1 330 3 87 1 88 3 103 1 349 1 364 1 12 1 269 1 
352 1 87 1 330 1 125 1 346 1 88 1 
252 1 352 3 253 1 254 2 94 3 125 6 242 1 71 1 117 1 165 1 121 1 100 1 166 2 330 7 87 2 346 1 88 7 188 1 103 1 131 1 178 1 
135 1 136 2 46 2 94 1 2 2 47 6 3 1 137 1 138 1 8 1 98 1 330 1 10 3 187 1 143 1 11 2 103 1 286 1 334 1 108 1 60 2 111 1 23 1 114 1 64 1 352 1 254 1 157 2 208 1 209 3 358 1 122 1 366 2 168 2 307 4 77 1 125 1 222 2 174 1 225 1 128 1 87 1 317 2 88 1 175 2 131 1 92 1 
94 2 160 2 206 3 256 1 210 1 300 1 325 1 7 2 330 1 166 1 365 2 364 1 12 1 34 2 287 1 218 1 125 1 17 1 172 1 127 3 199 1 342 1 40 2 294 1 88 1 349 1 90 1 203 1 
352 2 254 1 94 2 125 2 338 1 100 1 330 2 87 1 346 1 88 2 103 1 364 1 131 1 
352 1 254 1 94 1 232 1 125 4 244 1 329 1 166 1 330 4 87 1 101 1 88 4 131 1 
352 2 333 1 254 1 94 1 125 2 78 1 71 1 309 1 52 1 330 2 87 1 88 2 188 1 103 1 
352 1 320 1 26 1 87 1 330 1 166 1 125 1 88 1 377 1 91 1 
212 1 352 1 121 1 254 1 87 1 94 1 330 2 125 2 88 2 131 1 117 1 
352 2 254 2 253 1 94 3 125 4 78 1 242 1 117 1 244 1 329 1 166 1 330 5 87 2 101 1 88 5 131 1 
352 2 254 2 253 1 94 3 125 4 78 1 117 1 244 1 329 1 41 1 166 1 330 5 87 2 101 1 88 5 131 1 
352 1 254 1 136 2 157 2 94 1 125 1 219 1 3 1 208 1 8 1 128 1 166 1 330 1 87 1 88 1 103 1 366 1 92 1 
352 2 254 1 94 1 125 1 78 1 71 1 165 1 100 1 330 1 87 1 88 1 188 1 103 1 
245 1 48 1 324 1 366 1 179 1 
76 1 291 1 206 2 373 1 256 1 324 2 48 2 210 1 151 1 127 2 310 1 199 1 245 1 226 1 55 1 366 1 105 1 12 1 179 2 
136 1 157 1 324 1 208 1 245 1 200 1 262 1 179 1 368 1 
76 1 245 1 105 1 
45 1 205 1 207 1 44 1 
139 1 353 1 246 1 205 1 207 1 149 1 44 1 
353 1 247 1 264 1 
353 3 205 1 207 1 149 3 221 1 61 1 139 1 246 1 276 1 31 2 378 1 44 1 
139 1 353 2 246 1 205 1 322 1 348 1 207 1 149 2 44 1 
353 1 320 1 26 1 149 1 207 1 221 1 293 1 139 1 259 1 246 1 185 1 
139 1 353 1 246 1 207 1 149 1 221 1 44 1 
139 1 353 1 246 1 205 1 149 1 221 1 44 2 
353 2 288 1 207 1 149 2 221 1 299 1 139 2 62 1 246 2 44 1 
353 3 205 1 149 3 207 2 221 1 38 1 293 1 139 1 246 1 238 1 348 2 44 1 369 1 
353 2 320 1 205 1 26 2 207 1 149 2 221 1 357 1 139 1 343 1 259 1 246 1 348 1 377 1 44 1 
353 4 205 1 322 1 149 4 207 2 221 1 51 1 293 1 139 2 246 2 238 1 348 2 44 1 
139 1 353 1 246 1 205 1 207 1 149 1 221 1 44 1 
353 4 280 1 205 2 149 4 207 3 61 1 293 1 139 1 276 1 246 1 238 1 348 2 31 1 44 2 
250 1 353 2 134 1 205 1 207 1 149 2 221 1 139 1 246 1 348 1 248 1 44 1 
319 1 353 3 205 1 207 1 149 3 221 1 61 2 139 1 276 1 246 1 31 2 44 1 
29 2 207 2 4 1 312 1 
139 1 353 1 246 1 149 1 221 1 144 1 
139 1 353 2 246 1 205 1 348 1 207 1 149 2 221 1 44 1 38 1 
154 1 
139 1 353 1 246 1 205 1 207 1 149 1 221 1 44 1 
139 1 353 3 246 1 205 1 348 1 207 1 31 1 149 3 221 1 38 1 44 1 
280 1 238 1 207 1 293 1 
207 1 44 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 221 43 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 277 2 46 1 357 1 27 2 358 4 6 1 29 3 202 2 52 6 340 1 8 2 74 5 75 1 261 1 334 1 58 2 179 2 155 1 78 1 38 1 347 1 216 1 104 9 66 9 42 2 336 1 106 1 
0 1 277 2 46 1 357 1 27 2 358 4 6 1 29 3 202 2 52 6 340 1 8 2 74 5 75 1 261 1 334 1 58 2 179 2 155 1 78 1 38 1 347 1 216 1 104 9 66 9 42 2 336 1 106 1 
0 1 277 2 46 1 357 1 27 2 358 5 6 1 29 4 202 2 52 7 340 1 8 2 74 6 75 1 261 1 334 1 58 2 179 2 155 1 78 1 38 1 347 1 216 1 104 10 66 10 42 2 336 1 106 1 
0 1 277 2 46 1 357 1 27 1 358 3 6 1 29 2 202 2 52 4 340 1 8 2 74 4 75 1 261 1 58 2 179 2 155 1 78 1 38 1 347 1 216 1 104 7 66 7 42 2 336 1 106 1 
179 1 277 1 155 1 46 1 357 1 27 2 358 2 29 1 202 1 52 3 104 4 8 1 66 4 74 3 75 1 336 1 334 1 58 1 
0 1 277 1 155 1 46 1 4 1 62 1 347 1 202 1 104 2 161 1 74 1 8 1 66 2 75 1 42 1 58 1 
277 1 46 1 357 1 27 2 358 4 29 3 52 7 202 1 340 1 8 2 74 5 75 1 334 1 58 2 179 1 155 1 38 1 61 1 268 1 104 9 66 9 42 1 106 1 336 1 
277 1 46 1 357 1 27 2 358 4 29 3 52 7 202 1 340 1 8 2 74 5 75 1 334 1 58 2 179 1 155 1 38 1 61 1 268 1 104 9 66 9 42 1 106 1 336 1 
155 1 46 1 358 1 29 1 52 1 104 3 8 2 66 3 74 2 75 1 42 1 106 1 58 2 
356 1 291 1 13 1 
356 1 107 1 166 2 
63 2 283 2 187 2 243 2 130 1 16 2 245 1 319 2 
168 2 198 1 304 1 200 1 362 1 255 2 205 1 283 2 173 1 339 1 341 1 310 1 260 1 177 1 97 1 292 1 130 1 315 1 16 3 238 1 319 2 159 1 294 1 240 2 63 2 213 1 160 1 241 1 64 1 320 1 187 3 243 2 381 2 82 1 83 2 245 1 353 1 
63 1 337 1 283 1 21 1 187 1 243 1 130 1 16 1 118 1 319 1 
356 1 290 1 13 1 16 1 377 1 359 1 63 1 7 1 174 1 187 1 21 1 365 1 333 1 95 1 
356 1 290 1 13 1 16 1 319 1 359 1 63 1 7 1 283 1 243 1 187 1 21 1 333 2 365 2 95 1 
322 1 299 1 333 1 365 1 137 1 
356 1 13 1 322 1 47 1 299 1 267 1 333 2 365 2 
322 1 333 1 365 1 
337 1 130 1 16 1 118 1 319 1 63 1 283 1 21 1 243 1 187 1 299 1 365 1 333 1 96 1 
356 1 
337 1 109 2 43 1 356 2 26 5 88 2 118 1 91 1 201 1 361 1 283 1 258 1 333 5 365 5 96 1 154 1 130 1 129 1 13 2 236 1 16 1 14 2 267 1 375 1 319 1 63 1 186 1 349 2 21 1 187 1 243 1 322 2 271 2 299 2 244 1 220 2 108 4 221 1 
356 1 13 1 322 1 299 1 373 1 267 1 333 2 365 2 
138 1 328 1 211 1 
291 1 245 1 
16 2 132 1 319 1 63 2 53 1 283 1 187 2 243 1 245 2 
138 1 150 1 168 1 16 2 79 1 200 1 159 1 294 1 213 1 63 1 362 1 64 1 283 1 173 1 243 1 187 2 381 1 341 1 82 1 83 1 
63 3 283 3 187 3 243 3 16 3 79 1 245 1 319 1 
63 1 283 1 21 1 187 1 243 1 16 1 118 1 
63 1 53 1 283 1 21 1 187 1 243 1 16 1 132 1 319 1 
168 1 198 1 200 1 359 1 7 1 362 1 53 1 255 2 205 1 93 1 283 3 173 1 341 1 310 1 260 1 177 1 365 1 333 1 95 1 31 1 150 1 290 1 130 1 315 1 16 4 79 1 238 1 319 2 159 1 294 1 240 1 213 1 63 3 160 1 241 1 64 1 187 4 243 3 21 1 381 1 82 1 83 1 245 1 353 1 
63 2 283 1 174 1 187 2 243 1 298 1 16 2 79 1 245 1 
150 1 31 1 356 1 290 1 16 3 79 2 319 1 359 1 63 3 7 1 53 1 283 3 21 1 243 3 187 3 333 1 365 1 95 1 24 1 
138 1 328 1 16 2 79 1 319 1 63 2 53 1 283 2 243 2 187 2 
168 1 16 1 200 1 294 1 159 1 213 1 64 1 362 1 173 1 187 1 381 1 341 1 82 1 83 1 245 1 
110 1 168 1 16 1 376 1 159 1 213 1 64 1 362 1 173 1 187 1 381 1 341 1 82 1 83 1 245 1 
138 2 328 2 113 1 198 1 279 1 304 2 255 2 205 1 260 1 177 2 9 1 315 1 37 1 211 2 212 1 134 1 380 1 240 4 160 1 241 1 296 1 321 1 271 1 220 1 
63 1 283 1 21 1 187 1 243 1 257 1 16 1 359 1 
168 1 197 1 16 1 200 1 294 1 159 1 213 1 64 1 362 1 173 1 187 1 381 1 341 1 82 1 83 1 245 1 
150 1 1 1 16 5 79 2 319 1 63 5 230 1 53 1 283 4 174 1 243 4 187 5 298 1 245 1 
63 2 283 2 21 1 187 2 243 2 257 1 16 2 118 1 
379 1 163 1 
379 1 163 1 
54 1 120 1 
54 1 120 1 
54 1 120 1 
379 1 98 1 163 1 
379 1 98 1 163 1 
379 1 98 1 163 1 
379 1 163 1 338 1 
379 1 163 1 338 1 
379 1 163 1 338 1 
379 1 178 1 163 1 
379 2 80 1 54 1 163 2 239 1 120 1 
355 1 356 1 33 1 170 2 372 2 77 3 229 1 253 2 379 2 80 1 332 2 73 1 146 1 284 1 163 2 365 2 333 2 57 1 10 2 
274 1 178 1 68 1 33 1 170 1 317 1 372 1 77 1 16 2 158 1 253 1 63 2 379 1 348 1 283 2 332 1 187 2 243 2 163 1 365 1 333 1 245 1 149 1 273 1 
202 1 179 1 277 1 
202 1 277 1 62 1 
194 1 202 3 179 2 327 1 366 1 62 1 
194 1 19 1 202 2 179 1 366 1 62 1 
194 1 202 2 179 1 366 2 62 1 
109 1 111 1 356 2 26 2 88 1 114 1 117 1 280 1 252 1 92 2 333 5 365 5 262 2 154 1 13 1 317 1 37 1 267 1 212 1 158 1 269 1 349 1 242 2 322 1 271 1 299 4 107 1 220 1 108 3 352 1 273 1 166 3 
109 2 356 5 26 6 88 2 114 2 280 3 252 2 92 6 231 1 333 9 365 9 262 6 153 1 154 1 129 1 13 1 180 1 37 3 267 1 212 3 158 4 185 1 269 1 270 1 349 2 322 6 350 5 81 1 271 3 299 7 107 3 220 3 137 5 108 8 166 9 
109 1 111 1 356 3 26 2 88 1 114 1 280 1 252 1 92 2 333 3 365 3 262 2 13 1 129 1 37 1 158 1 212 1 349 1 242 1 271 1 299 2 107 2 220 1 108 3 352 1 166 4 
109 1 111 1 356 4 26 4 88 1 114 1 280 2 252 1 92 4 231 1 333 4 365 4 262 4 13 1 129 1 180 1 37 2 158 2 212 2 185 1 349 1 242 2 271 2 299 3 107 3 220 2 108 5 352 1 166 7 
291 1 25 1 82 1 
82 1 184 1 
112 1 
82 1 159 1 
289 1 25 2 173 1 82 3 303 1 159 1 
173 1 82 1 159 1 
343 1 82 1 
43 1 275 1 115 1 304 5 91 2 201 2 177 4 9 4 30 1 314 1 131 1 182 1 134 3 240 9 271 2 84 1 220 2 221 1 
43 1 275 1 115 1 304 5 91 2 201 2 177 4 9 6 30 3 314 1 131 1 182 1 134 3 240 9 271 2 84 1 220 2 221 1 
248 1 43 1 275 1 115 1 304 5 91 2 201 2 177 4 9 4 30 1 314 1 131 1 182 1 134 3 240 9 271 2 84 1 220 2 221 1 
139 3 43 1 275 1 115 2 49 1 90 1 198 1 280 3 304 18 91 3 201 3 51 4 255 2 205 1 122 1 177 17 9 13 30 7 314 2 234 1 128 1 315 1 131 2 37 3 182 1 318 1 212 3 134 6 240 35 160 1 102 1 271 5 84 1 220 5 221 1 
43 1 275 1 115 1 198 2 304 6 91 2 201 2 255 4 205 2 285 1 177 5 9 6 30 2 314 1 128 1 315 2 131 1 209 1 182 1 134 4 240 11 160 2 271 2 220 2 221 1 
302 1 141 1 327 1 277 1 168 1 46 1 89 1 281 1 52 1 202 2 362 1 74 1 8 1 75 1 286 1 58 1 179 1 12 1 155 1 99 1 370 1 62 1 213 1 381 1 104 2 189 1 66 2 42 1 83 1 300 1 
302 1 327 1 277 1 168 1 46 1 89 1 50 1 52 2 202 2 362 1 308 1 74 1 55 1 8 1 286 1 58 1 179 1 12 1 155 1 99 1 370 1 62 1 213 1 381 1 104 3 189 1 66 3 42 1 83 1 300 1 
327 1 277 1 168 1 46 1 89 1 52 2 202 2 362 1 308 1 74 1 55 1 179 1 12 1 155 1 99 1 370 1 62 1 213 1 381 1 104 2 189 1 66 2 42 1 83 1 300 1 
167 1 196 1 70 1 168 1 99 2 50 1 159 1 213 1 362 1 64 1 135 1 104 1 381 1 8 1 66 1 189 2 82 1 311 1 42 2 83 1 136 1 300 2 58 1 
302 1 141 1 327 1 277 1 168 1 89 1 202 2 362 1 55 1 8 1 75 1 286 1 58 1 179 1 12 1 99 1 370 1 62 1 213 1 381 1 104 1 189 1 66 1 42 1 83 1 300 1 
2 1 
250 1 195 4 196 1 88 1 145 2 251 2 7 1 204 1 95 1 313 1 154 1 13 1 207 2 267 3 15 1 16 1 159 1 214 1 213 1 63 1 64 2 349 1 21 1 322 6 107 2 108 2 166 2 109 1 356 2 167 1 329 1 276 1 168 2 224 2 26 2 114 1 359 1 172 1 362 1 174 1 175 1 123 2 124 2 365 5 333 5 233 1 290 1 377 1 378 1 40 1 381 2 187 1 335 2 82 1 83 2 
329 1 195 2 290 1 250 1 373 1 267 1 15 1 16 1 377 1 359 1 7 1 172 1 63 1 21 1 174 1 187 1 322 2 124 1 365 3 333 3 233 1 95 1 
356 1 329 1 195 3 290 1 250 1 13 1 224 1 373 1 267 1 15 1 16 1 377 1 359 1 7 1 172 1 63 1 21 1 174 1 187 1 322 1 365 3 333 3 233 1 95 1 
250 1 195 3 329 1 356 1 224 1 145 1 359 1 172 1 7 1 174 1 124 1 233 1 333 3 365 3 95 1 290 1 13 1 373 1 267 1 16 1 15 1 377 1 63 1 187 1 21 1 322 2 
109 1 301 1 276 1 356 5 250 1 195 6 329 1 26 1 224 4 144 1 88 1 145 4 251 2 119 1 359 1 172 1 7 1 203 1 174 1 123 2 124 4 125 1 233 1 333 5 365 5 95 1 154 1 290 1 13 5 207 2 373 1 15 1 267 3 16 1 377 1 63 1 40 1 349 1 187 1 21 1 322 7 335 2 107 2 108 1 
195 4 250 1 88 1 145 2 251 2 7 1 204 1 95 1 154 1 13 1 207 2 16 1 15 1 267 2 63 1 349 1 21 1 322 4 107 2 108 1 166 2 109 1 276 1 329 1 356 2 26 1 224 2 359 1 172 1 174 1 123 2 124 2 365 4 333 4 233 1 290 1 377 1 40 1 187 1 335 2 
301 1 109 1 356 1 276 1 250 1 195 4 329 1 224 2 26 1 144 1 88 1 145 2 251 2 359 1 172 1 7 1 174 1 123 2 124 2 125 1 233 1 333 4 365 4 95 1 290 1 154 1 13 1 207 2 267 2 16 1 15 1 377 1 63 1 40 1 349 1 187 1 21 1 322 4 335 2 107 2 108 1 
301 1 109 1 356 1 276 1 250 1 195 4 329 1 224 2 26 1 144 1 88 1 145 2 251 2 359 1 172 1 7 1 174 1 123 2 124 2 125 1 233 1 333 4 365 4 95 1 290 1 154 1 13 1 207 2 267 2 16 1 15 1 377 1 63 1 40 1 349 1 187 1 21 1 322 4 335 2 107 2 108 1 
109 1 356 1 250 1 195 4 329 1 224 2 26 1 88 1 145 2 251 2 359 1 72 1 172 1 7 1 256 1 174 1 124 2 125 1 233 1 333 4 365 4 95 1 290 1 154 1 13 1 207 2 267 2 16 1 15 1 377 1 63 1 40 1 65 2 349 1 187 1 21 1 322 4 217 2 108 1 166 2 193 1 
109 1 301 1 356 1 276 1 250 1 195 5 329 1 26 1 224 3 144 1 88 1 145 3 251 2 359 1 172 1 7 1 203 1 174 1 123 2 124 3 125 1 233 1 333 4 365 4 95 1 154 1 290 1 13 1 207 2 267 2 16 1 15 1 377 1 63 1 40 1 349 1 187 1 21 1 322 5 335 2 107 2 108 1 
109 1 301 1 356 1 276 1 250 1 195 5 329 1 26 1 224 3 144 1 88 1 145 3 251 2 359 1 172 1 7 1 203 1 174 1 123 2 124 3 125 1 233 1 333 4 365 4 95 1 154 1 290 1 13 1 207 2 267 2 16 1 15 1 377 1 63 1 40 1 349 1 187 1 21 1 322 5 335 2 107 2 108 1 
109 1 356 1 250 1 195 4 329 1 224 2 26 1 88 1 145 2 251 2 359 1 172 1 7 1 204 1 174 1 124 2 233 1 333 4 365 4 95 1 154 1 290 1 13 1 207 2 267 2 15 1 16 1 377 1 63 1 40 1 65 2 349 1 187 1 21 1 322 4 217 2 108 1 166 2 193 1 
291 1 275 1 315 1 113 1 198 1 182 1 134 1 91 1 201 1 241 1 160 1 205 1 255 2 260 1 9 1 
138 11 139 3 328 4 28 1 90 1 198 2 49 1 280 2 304 8 51 3 121 1 255 4 205 2 260 2 177 6 367 1 9 2 30 1 152 1 235 1 315 2 37 1 211 11 212 2 134 1 240 14 160 2 241 1 320 1 271 1 220 2 245 1 353 1 
328 1 168 1 197 1 28 1 198 1 200 1 304 1 362 1 205 1 283 1 255 2 173 1 341 1 260 1 177 1 150 1 266 1 315 1 16 2 79 1 100 1 159 1 294 1 213 1 63 1 240 2 241 1 160 1 64 1 320 1 381 1 187 2 243 1 82 1 83 1 245 1 246 1 353 1 
138 6 43 1 198 3 200 2 304 11 91 2 201 2 255 6 205 3 341 2 310 2 260 3 9 6 150 1 151 2 315 3 16 3 211 6 212 2 159 2 63 1 213 2 160 3 64 1 320 1 21 1 271 4 22 2 220 4 221 1 164 1 353 1 354 1 275 1 328 6 168 1 28 1 171 1 280 2 282 2 362 2 283 1 173 2 177 11 30 1 76 2 37 2 182 1 79 1 294 2 134 5 240 22 241 3 381 1 243 1 187 3 82 2 83 1 245 1 
326 1 167 1 196 1 168 8 143 1 113 1 198 2 281 1 304 1 362 2 283 1 255 4 205 2 176 1 55 1 260 2 177 1 147 1 148 1 97 2 293 1 315 2 16 1 79 1 159 2 63 1 213 2 240 2 160 2 241 2 64 2 320 1 187 1 243 1 381 7 82 3 219 1 83 8 353 1 
138 1 328 1 28 1 198 1 280 1 304 1 53 1 283 1 255 2 205 1 259 1 260 1 177 2 9 1 315 1 37 1 211 1 16 1 212 1 319 1 134 1 63 1 240 3 160 1 241 1 243 1 187 1 271 1 220 1 
138 1 328 1 315 1 113 1 211 1 198 1 212 1 304 2 240 2 241 1 160 1 296 1 205 1 255 2 260 1 220 1 9 1 30 1 
138 1 328 1 315 1 113 1 37 1 211 1 198 1 134 1 240 2 380 1 241 1 160 1 205 1 255 2 271 1 260 1 177 2 9 1 
138 2 328 2 315 1 113 1 37 1 211 2 198 1 280 1 212 1 304 2 134 1 240 4 241 1 160 1 205 1 255 2 271 1 260 1 177 2 220 1 9 2 30 1 
138 1 326 1 328 1 315 1 211 1 198 1 212 1 304 2 240 2 241 1 160 1 296 1 205 1 255 2 260 1 220 1 9 1 30 1 
138 1 326 1 328 1 315 1 37 1 211 1 198 1 134 1 240 2 380 1 241 1 160 1 205 1 255 2 271 1 260 1 177 2 9 1 
138 2 326 1 328 2 315 1 37 1 211 2 198 1 280 1 212 1 304 2 134 1 240 4 241 1 160 1 205 1 255 2 271 1 260 1 177 2 220 1 9 2 30 1 
138 2 328 2 315 1 37 1 211 2 198 1 280 1 212 1 304 2 134 1 240 4 241 1 160 1 205 1 255 2 271 1 260 1 177 2 220 1 9 2 30 1 
168 1 198 1 304 1 200 1 362 1 205 1 255 2 173 1 341 1 310 1 260 1 177 1 315 1 16 1 159 1 294 1 240 2 213 1 241 1 160 1 64 1 320 1 381 1 187 1 82 1 83 1 245 1 353 1 
110 1 168 1 198 1 304 1 362 1 205 1 255 2 173 1 341 1 260 1 177 1 315 1 181 1 16 1 376 1 159 1 240 2 213 1 241 1 160 1 64 1 320 1 381 1 187 1 82 1 83 1 245 1 353 1 
138 2 328 2 315 1 28 1 37 1 211 2 198 1 280 1 212 1 304 2 134 1 240 4 241 1 160 1 205 1 255 2 271 1 260 1 177 2 220 1 9 2 30 1 
138 2 328 2 168 1 198 1 280 1 304 2 200 1 281 1 362 1 205 1 255 2 173 1 341 1 310 1 260 1 177 2 9 2 30 1 76 1 315 1 37 1 211 2 16 1 212 1 134 1 294 1 159 1 240 4 213 1 241 1 160 1 381 1 187 1 271 1 82 1 83 1 220 1 
138 1 328 1 28 1 198 1 280 1 304 2 53 1 283 1 255 2 205 1 260 1 177 1 9 1 30 1 315 1 37 1 16 1 211 1 212 1 319 1 63 1 240 3 160 1 241 1 243 1 187 1 271 1 220 1 23 1 
247 2 325 1 139 3 275 1 87 4 226 1 90 3 198 3 49 1 278 1 280 4 5 1 304 17 91 1 201 1 51 4 330 1 255 6 205 3 363 1 232 1 177 19 9 8 30 4 264 1 206 1 128 1 315 3 209 1 37 4 182 1 17 1 212 4 133 1 134 4 240 36 295 1 160 3 271 4 220 4 165 1 
247 2 325 1 139 3 275 1 87 4 226 1 90 3 198 4 49 1 278 1 280 4 5 1 304 17 91 1 201 1 51 4 330 1 255 8 205 4 363 1 232 1 177 16 9 7 30 3 264 1 206 1 128 2 315 4 209 1 37 3 182 1 17 1 212 4 133 1 134 4 240 33 295 1 160 4 271 3 220 4 165 1 
247 1 325 1 139 4 275 1 87 4 226 1 90 2 198 2 49 2 280 7 5 1 304 24 91 1 201 1 51 4 330 1 255 4 205 2 363 1 232 1 177 23 367 2 9 14 30 7 264 1 206 1 128 1 315 2 209 1 37 7 182 1 17 1 212 7 133 1 134 7 240 47 295 1 160 2 271 7 220 7 
247 1 325 1 139 1 87 2 90 1 198 2 49 1 278 1 280 3 5 1 304 9 51 2 255 4 205 2 232 1 177 10 9 6 30 3 264 1 315 2 35 1 209 1 37 3 212 3 134 3 240 19 295 2 160 2 271 3 220 3 
247 2 325 2 139 2 87 4 198 3 90 2 226 1 280 3 5 1 304 14 51 2 330 1 255 6 205 3 232 1 363 1 177 12 9 4 30 2 264 1 206 1 128 2 315 3 209 1 37 2 17 1 212 3 134 2 133 1 240 26 295 1 160 3 271 2 220 3 
379 1 80 1 345 1 332 1 73 1 170 1 372 1 163 1 229 1 253 1 
178 1 348 1 
86 1 379 1 127 1 332 1 382 1 170 1 372 1 163 1 253 1 
355 1 356 1 33 1 170 1 372 1 77 2 229 1 253 1 379 1 80 1 332 1 73 1 146 1 163 1 365 1 333 1 57 1 10 1 
355 1 356 1 33 1 170 1 372 1 77 2 229 1 253 1 379 1 80 1 332 1 73 1 146 1 163 1 365 1 333 1 57 1 10 1 
355 1 356 1 33 1 170 1 372 1 77 2 229 1 253 1 379 1 80 1 332 1 73 1 146 1 163 1 365 1 333 1 57 1 10 1 
60 1 98 1 239 1 
60 1 98 1 239 1 
338 1 369 1 
239 1 338 1 369 1 
274 1 149 1 
274 1 68 1 170 1 3 1 253 1 283 2 332 1 146 1 333 1 365 1 10 1 149 1 178 1 372 1 77 1 317 1 16 2 158 1 379 1 63 2 348 1 187 2 243 2 299 1 163 1 245 1 273 1 
60 1 98 1 
239 1 338 1 369 1 
44 1 69 1 168 2 28 1 198 1 304 1 362 1 205 1 255 2 176 1 260 1 177 1 148 1 97 2 315 1 16 2 346 1 39 1 159 1 213 1 63 2 240 2 241 1 160 1 320 1 187 2 381 2 82 1 83 2 222 1 353 1 
302 1 179 1 327 1 67 1 12 1 277 1 168 2 223 1 99 1 89 1 62 1 281 1 213 1 202 2 362 1 103 1 381 2 55 1 83 2 
302 1 179 1 327 1 67 1 12 1 277 1 168 1 99 1 89 1 62 1 213 1 202 2 306 1 362 1 381 1 55 1 83 1 
167 1 196 1 168 1 223 1 99 1 159 1 213 1 362 1 64 1 381 1 82 1 311 1 83 1 287 1 
302 1 179 1 327 1 67 1 12 1 277 1 168 1 223 1 99 1 89 1 62 1 213 1 202 2 362 1 103 1 381 1 55 1 83 1 
210 1 
356 1 291 1 13 1 26 1 244 1 375 1 108 1 
109 1 276 1 356 2 26 1 88 1 123 1 365 1 333 1 154 1 13 1 267 1 349 1 322 1 335 1 107 1 108 1 166 1 
140 1 249 2 303 1 88 4 92 6 309 2 258 2 262 6 11 1 154 4 343 2 13 2 14 2 267 3 212 2 159 3 214 1 213 4 101 2 64 1 349 4 215 2 322 5 271 2 323 2 107 6 220 2 108 9 166 12 109 4 356 8 25 2 168 3 71 1 26 8 114 2 116 1 280 2 281 1 282 2 362 3 173 3 365 5 333 5 290 2 37 2 374 1 375 1 184 3 381 3 244 1 82 10 83 3 85 2 
109 2 139 1 356 5 45 1 26 5 114 1 88 2 90 1 226 1 280 2 92 5 51 1 363 1 258 1 333 1 365 1 262 5 206 1 154 2 13 2 37 2 267 1 14 2 17 1 212 2 133 1 214 1 349 2 322 1 271 2 105 1 107 3 220 2 108 8 166 6 
301 1 109 1 43 1 154 1 26 2 88 1 14 1 91 1 201 1 349 1 271 1 220 1 365 1 333 1 108 2 221 1 
168 1 198 1 200 1 362 1 255 2 205 1 283 2 173 1 341 1 310 1 260 1 177 1 130 1 315 1 16 3 238 1 319 2 294 1 159 1 240 1 63 2 213 1 160 1 241 1 64 1 381 1 187 3 243 2 82 1 83 1 245 1 353 1 
109 1 314 1 154 1 356 4 13 2 26 2 88 1 114 1 92 2 214 1 349 1 107 2 262 2 108 1 166 4 
356 1 13 1 322 1 267 1 333 1 365 1 
109 2 167 1 196 1 168 4 71 2 26 2 88 2 114 2 199 1 305 1 362 1 365 3 333 3 11 1 313 1 154 1 129 1 267 2 378 1 159 1 213 1 214 2 64 2 349 2 381 4 322 4 82 1 83 4 108 2 
109 1 154 1 356 1 13 1 26 1 88 1 375 1 349 1 244 1 108 1 
356 5 26 5 37 2 14 2 280 2 212 2 282 1 92 5 271 2 258 1 107 5 220 2 262 5 108 5 166 10 
332 1 170 1 36 1 
274 1 332 1 170 1 227 1 229 1 
332 1 170 1 36 1 
332 1 170 1 36 1 
41 1 332 1 170 1 
41 1 332 1 170 1 
41 1 332 1 170 1 
332 1 170 1 
379 1 163 1 
43 1 275 1 198 2 304 6 91 2 201 2 255 4 205 2 177 6 9 6 30 3 128 1 315 2 182 1 134 3 240 12 160 2 271 2 220 2 221 1 
201 1 275 1 291 1 182 1 9 1 134 1 91 1 
315 1 208 1 37 1 198 1 280 1 212 1 304 2 134 1 240 4 160 1 205 1 255 2 271 1 177 2 220 1 9 2 30 1 
139 1 37 1 90 1 49 1 280 1 212 1 304 3 134 1 51 2 240 7 271 1 177 4 220 1 9 2 30 1 
139 2 43 1 275 1 49 1 198 1 280 2 304 10 91 2 201 2 51 2 121 1 205 1 255 2 177 10 9 6 367 1 30 2 128 1 315 1 37 2 182 1 212 2 134 4 240 20 160 1 271 4 220 4 221 1 
240 1 51 1 177 1 
240 1 139 1 304 1 
315 1 208 1 37 1 198 1 280 1 212 1 282 1 304 3 134 2 240 6 160 1 255 2 205 1 271 1 177 3 220 1 9 3 30 1 
139 1 90 1 198 1 226 1 280 2 304 6 51 1 255 2 205 1 363 1 177 6 9 2 30 1 206 1 315 1 209 1 37 2 212 2 17 1 133 1 134 1 240 12 160 1 271 2 220 2 
304 3 91 1 134 1 240 6 201 1 271 1 177 3 220 1 221 1 9 2 30 1 
275 1 128 1 315 1 182 1 198 1 304 1 18 1 134 1 91 1 201 1 240 3 160 1 205 1 255 2 177 2 9 2 30 1 
139 1 43 1 275 1 90 1 198 1 304 5 91 2 51 1 201 2 255 2 205 1 177 5 9 4 30 1 315 1 209 1 182 1 133 1 134 3 240 10 160 1 271 2 220 2 221 1 
139 1 43 1 275 1 90 1 198 2 49 1 280 1 304 7 91 2 201 2 51 2 255 4 205 2 177 6 9 5 30 2 315 2 208 1 209 1 182 1 212 1 134 3 133 1 240 13 160 2 271 2 220 3 221 1 
139 1 43 1 275 1 90 1 198 3 226 1 280 2 304 10 91 2 201 2 51 1 255 6 205 3 363 1 177 11 9 6 30 2 206 1 128 1 315 3 208 1 209 1 37 2 182 1 212 2 17 1 133 1 134 4 240 21 160 3 271 4 220 4 221 1 
139 1 43 1 275 1 90 1 198 3 226 1 280 2 304 11 91 2 201 2 51 1 255 6 205 3 363 1 177 8 9 8 30 4 206 1 128 1 315 3 208 1 209 1 37 1 182 1 212 2 17 1 133 1 134 4 240 19 160 3 271 3 220 4 221 1 
139 1 43 1 275 1 90 1 198 1 304 5 91 2 51 1 201 2 255 2 205 1 177 5 9 4 30 1 315 1 209 1 182 1 133 1 134 3 240 10 160 1 271 2 220 2 221 1 
139 1 90 1 198 1 226 1 280 2 304 6 51 1 255 2 205 1 363 1 177 6 9 2 30 1 206 1 315 1 209 1 37 2 212 2 17 1 133 1 134 1 240 12 160 1 271 2 220 2 
139 1 43 1 275 1 90 1 198 4 226 1 280 2 304 11 91 2 201 2 51 1 255 8 205 4 363 1 177 9 9 6 30 2 206 1 128 2 315 4 208 1 209 1 37 1 182 1 17 1 212 2 133 1 134 4 240 20 160 4 271 3 220 4 221 1 
139 1 90 1 198 4 226 1 278 1 280 3 304 9 51 1 255 8 205 4 363 1 177 7 9 6 30 3 206 1 128 2 315 4 209 1 37 2 17 1 212 3 133 1 134 3 240 16 160 4 271 2 220 3 
43 1 275 1 182 1 304 2 91 3 134 3 240 5 201 3 271 1 177 3 220 1 221 1 9 6 30 3 
139 1 43 1 275 1 90 1 198 4 226 1 278 1 280 2 304 11 91 2 201 2 51 1 255 8 205 4 363 1 177 9 9 6 30 2 206 1 128 2 315 4 209 1 37 1 182 1 17 1 212 2 133 1 134 4 240 20 160 4 271 3 220 4 221 1 
43 1 315 1 209 1 198 1 304 5 91 2 134 3 201 2 240 10 160 1 255 2 205 1 271 2 177 5 220 2 9 5 221 1 30 2 
315 1 209 1 198 1 212 1 304 2 240 2 160 1 205 1 255 2 220 1 9 1 30 1 
315 1 37 1 209 1 198 1 280 1 212 1 304 2 134 1 240 4 160 1 205 1 255 2 271 1 177 2 220 1 9 2 30 1 
128 1 315 3 209 1 198 3 278 1 18 1 304 1 91 1 134 1 240 3 201 1 160 3 205 3 255 6 177 2 9 2 30 1 
139 3 43 1 275 1 90 1 198 4 278 1 280 2 304 13 91 2 201 2 51 3 255 8 205 4 122 1 177 13 9 8 30 4 234 1 128 1 315 4 208 1 209 1 37 2 182 1 212 2 134 4 240 26 160 4 102 1 271 4 220 4 221 1 
63 1 187 1 174 1 298 1 16 1 191 1 245 1 
263 1 126 1 48 1 16 1 228 1 183 1 63 1 174 1 187 1 298 1 191 1 245 1 
213 1 202 1 362 1 64 1 277 1 168 1 381 1 83 1 89 1 62 1 
44 1 168 2 281 1 159 1 213 1 362 1 381 2 55 1 82 1 83 2 148 1 
213 1 362 1 64 1 167 1 291 1 196 1 168 1 381 1 82 1 83 1 159 1 
168 1 16 2 79 1 200 1 159 1 213 1 63 1 64 1 362 1 283 1 173 1 243 1 187 2 381 1 341 1 82 1 83 1 245 1 
343 1 168 1 71 1 16 2 79 1 359 1 200 1 159 2 7 1 213 1 63 2 362 1 283 1 173 2 21 1 243 2 187 2 381 1 341 1 82 3 83 1 245 1 85 1 
168 2 71 1 359 1 7 1 362 1 283 1 173 2 341 1 312 1 343 1 16 2 79 1 376 1 159 2 63 2 213 1 381 2 187 2 243 2 21 1 82 3 83 2 245 1 85 1 
32 1 356 1 290 1 343 1 25 1 13 1 168 3 71 1 159 1 184 1 213 1 64 1 362 1 173 1 381 3 322 1 94 1 82 4 83 3 365 2 333 2 312 1 85 1 
356 1 290 1 343 1 25 1 13 1 168 3 71 1 159 1 184 1 213 1 64 1 362 1 173 1 381 3 322 1 82 4 83 3 323 1 365 2 333 2 312 1 85 1 
213 1 362 1 168 1 381 1 83 1 147 1 
97 1 293 1 168 7 143 1 169 1 303 1 281 1 159 2 213 3 64 2 362 2 173 1 381 6 55 1 218 1 82 3 219 1 83 7 147 1 324 1 148 1 
43 1 198 2 200 1 304 4 91 2 201 2 255 4 205 2 341 1 310 1 260 2 9 4 151 1 315 2 16 2 159 1 63 1 213 1 160 2 21 1 271 2 220 2 222 1 221 1 275 1 168 1 28 1 171 1 281 1 362 1 283 1 173 1 177 4 30 1 76 1 79 1 182 1 294 1 134 3 240 8 241 2 381 1 243 1 187 2 82 1 83 1 245 1 
109 2 356 1 249 1 25 1 168 1 26 1 88 2 309 1 333 3 365 3 11 1 154 2 290 1 13 1 267 1 375 1 184 1 64 1 101 1 349 2 381 1 322 2 299 1 244 1 82 2 83 1 323 1 108 1 
140 1 25 1 168 2 303 1 281 1 159 1 213 2 362 1 173 1 381 2 82 2 83 2 147 1 
213 1 362 1 64 1 167 1 196 1 168 4 381 4 297 1 82 1 83 4 312 1 281 1 159 1 
344 1 168 2 71 1 237 1 159 1 213 2 362 1 173 1 381 2 56 1 218 1 82 1 83 2 324 1 
168 1 16 2 79 1 376 1 159 1 213 1 63 1 64 1 362 1 283 1 173 1 243 1 187 2 381 1 341 1 82 1 83 1 245 1 
168 1 71 1 169 1 303 1 159 1 213 2 362 1 173 1 381 1 218 1 82 1 83 1 324 1 
167 1 196 1 168 5 71 1 143 1 281 1 159 2 213 2 64 1 362 2 381 4 297 1 82 3 83 5 219 1 148 1 
167 1 196 1 168 5 71 1 143 1 371 1 281 1 159 2 213 2 64 1 362 2 381 4 297 1 82 3 83 5 148 1 
342 1 316 1 190 1 245 1 254 1 
59 1 31 1 342 1 356 1 290 1 265 1 13 1 316 2 359 1 254 2 7 1 21 1 188 1 299 1 190 2 365 2 333 2 245 1 95 1 
63 1 342 1 69 1 187 1 316 1 16 1 346 1 190 1 39 1 
59 1 342 1 265 1 
155 2 46 2 156 1 358 1 347 1 360 1 29 1 52 2 331 1 104 4 66 4 8 1 74 3 58 1 
155 1 46 1 52 1 268 1 104 2 364 1 74 1 8 1 66 2 75 1 272 1 58 1 
46 1 155 1 34 1 347 2 360 1 331 2 104 3 74 1 8 1 66 3 75 1 58 1 
307 2 142 1 74 2 225 1 
104 1 66 1 8 1 75 1 351 1 58 1 
52 1 104 2 155 1 46 1 74 1 66 2 8 1 75 1 38 1 58 1 
157 1 
291 1 155 1 46 1 74 1 
104 1 155 1 46 1 74 1 66 1 8 1 58 1 
189 1 66 1 42 1 
46 1 155 1 347 2 360 1 20 1 331 1 104 3 74 1 8 1 66 3 75 1 58 1 
52 1 104 2 155 1 46 1 27 1 74 1 66 2 8 1 58 1 
202 1 179 1 277 1 104 1 74 1 66 1 8 1 75 1 336 1 358 1 58 1 
104 1 155 1 74 1 66 1 8 1 75 1 58 1 
104 1 155 2 46 1 66 1 8 1 75 1 58 1 
155 1 104 2 162 1 74 1 8 2 66 2 75 1 288 1 368 1 58 2 
155 1 46 1 38 1 358 1 29 1 52 2 104 3 340 1 8 1 66 3 74 2 75 1 58 1 
327 1 179 1 277 1 155 1 46 1 62 1 202 2 52 1 104 2 74 1 8 1 66 2 75 1 192 1 58 1 
155 1 46 1 27 1 358 1 29 1 52 2 104 4 8 2 66 4 74 2 75 1 334 1 58 2 
52 1 104 3 155 1 46 1 74 1 66 3 8 1 75 1 38 1 347 1 58 1 
29 1 74 1 156 1 358 1 
155 1 74 1 
104 1 155 1 46 1 74 1 66 1 8 1 75 1 58 1 
104 1 155 1 46 1 74 1 66 1 8 1 75 1 58 1 

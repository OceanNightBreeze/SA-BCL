#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) (131,356) (131,356) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) (131,356) (131,356) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) (131,356) (131,356) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) (131,356) (131,356) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) 353 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,154) 353 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
344 1 26 1 317 1 86 1 135 1 253 1 
131 1 344 1 356 1 187 1 26 1 317 1 86 2 253 1 135 2 266 1 171 1 146 1 363 1 148 1 210 1 154 1 
131 1 344 1 356 1 187 1 26 1 317 1 86 2 253 1 135 2 266 1 171 1 146 1 363 1 148 1 210 1 154 1 
131 1 344 1 356 1 187 1 26 1 317 1 86 2 253 1 135 2 266 1 171 1 146 1 363 1 148 1 210 1 154 1 
131 1 344 1 356 1 187 1 26 1 317 1 86 2 253 1 135 2 266 1 171 1 146 1 363 1 148 1 210 1 154 1 
344 1 317 1 274 2 3 1 86 4 253 1 135 4 87 1 220 3 171 1 146 1 363 1 326 2 163 1 352 1 107 1 108 1 304 3 
344 1 187 1 317 1 48 1 86 2 253 1 135 2 87 1 159 1 266 1 171 1 363 1 210 1 163 1 304 1 37 1 
344 1 26 1 317 1 86 2 135 2 253 1 242 1 353 1 220 1 
344 1 26 1 317 1 86 2 135 2 253 1 242 1 353 1 220 1 
24 1 366 1 259 1 97 1 122 1 17 1 53 1 136 1 350 1 277 1 41 1 93 1 161 1 364 1 
4 1 
345 1 366 2 259 2 126 1 93 1 228 1 4 1 79 1 
345 1 366 5 259 5 133 1 359 1 39 2 4 1 169 1 79 2 267 1 8 1 67 1 93 2 82 2 141 1 228 1 302 1 119 1 315 2 
380 1 345 1 4 1 
285 1 4 1 7 2 
24 2 277 2 350 2 109 1 41 2 97 2 17 1 136 2 
24 3 197 1 97 2 251 1 296 1 297 1 99 2 321 1 221 1 277 2 350 2 225 1 301 2 281 1 34 2 230 1 233 2 129 1 303 1 257 1 109 1 374 1 17 1 310 1 309 1 134 1 158 1 265 1 136 2 209 1 41 3 248 1 291 2 118 1 44 1 292 1 45 1 
24 1 277 1 350 1 41 1 97 1 122 1 17 1 161 1 364 1 136 1 
24 1 343 1 345 1 306 1 366 1 259 1 122 1 4 1 361 1 277 1 41 1 372 1 103 1 354 1 
24 1 343 1 345 1 366 2 259 2 97 1 122 1 4 1 136 1 361 1 350 1 277 1 41 1 372 1 103 1 
366 1 259 1 93 1 218 1 79 1 
345 1 366 2 259 2 261 1 93 1 228 1 4 1 79 1 
366 1 259 1 79 1 
24 2 155 1 97 1 109 2 54 1 136 1 277 2 350 1 41 2 
149 1 180 1 152 1 
24 1 109 1 134 1 158 1 99 1 221 1 209 1 41 1 301 1 325 1 248 1 281 1 233 1 118 1 44 1 303 1 
24 2 97 1 198 1 134 1 49 1 158 1 136 1 99 1 221 1 277 1 209 1 41 2 301 1 248 1 281 1 233 1 152 1 303 1 44 1 118 1 
380 1 109 1 
24 5 97 4 109 1 198 2 49 1 98 1 54 1 124 1 136 4 277 5 350 1 41 5 327 1 354 1 
24 2 277 2 41 2 97 2 122 1 364 1 263 1 136 2 
24 3 350 1 277 3 109 1 41 3 97 3 198 1 136 3 
24 1 277 1 41 1 97 1 122 1 364 1 136 1 
24 1 277 1 350 1 155 1 41 1 97 1 122 1 54 1 136 1 
24 4 343 1 366 1 97 3 198 1 122 1 215 1 251 1 49 1 296 1 54 1 297 1 99 1 321 1 221 1 323 1 350 2 277 3 372 1 301 1 281 1 103 1 34 1 230 1 233 1 129 1 303 1 257 1 109 1 259 1 374 1 17 1 134 1 158 1 265 1 361 1 136 3 209 1 41 4 248 1 291 2 44 1 118 1 45 1 
24 2 277 2 109 1 41 2 97 1 198 1 327 1 354 1 136 1 
24 3 343 1 366 1 259 1 97 3 122 1 198 2 49 1 313 1 54 1 4 1 136 3 361 1 350 1 277 3 323 1 41 3 372 1 103 1 
24 2 97 2 198 1 54 1 136 2 350 1 277 2 41 2 149 1 152 1 
24 1 109 1 134 1 158 1 99 1 221 1 209 1 41 1 301 1 281 1 248 1 233 1 118 1 44 1 303 1 
24 1 109 1 158 1 99 1 221 1 41 1 301 1 371 1 281 1 248 1 116 1 233 1 118 1 44 1 303 1 
27 1 145 1 296 1 297 1 280 1 149 2 177 1 180 2 230 1 34 4 152 2 257 2 374 1 260 1 310 2 204 1 265 1 362 1 207 1 22 1 270 1 142 1 291 2 45 1 
24 1 277 1 41 1 97 1 122 1 103 1 263 1 136 1 
92 1 365 1 5 1 
143 1 322 1 18 1 335 1 365 2 5 2 
365 1 5 1 
365 1 5 1 
322 1 18 1 
322 1 18 1 
322 1 18 1 
138 1 365 1 5 1 
138 1 365 1 5 1 
138 1 365 1 5 1 
237 1 365 1 5 1 
237 1 365 1 5 1 
237 1 365 1 5 1 
24 2 366 1 97 2 199 1 2 1 123 1 276 1 5 1 172 1 277 2 33 1 11 1 235 1 13 1 109 1 259 1 114 1 136 2 92 1 41 2 288 1 365 1 43 1 71 1 
143 1 13 2 61 1 366 2 259 2 199 2 332 1 4 1 276 3 5 2 100 1 32 2 140 1 33 1 290 1 165 1 365 2 43 2 71 2 
203 1 48 1 89 2 171 2 146 1 
363 1 171 1 146 1 
363 1 48 1 171 1 
203 1 48 1 58 1 89 1 171 3 146 2 
203 1 48 1 104 1 89 1 171 2 146 1 
249 1 366 5 345 1 214 1 4 2 169 2 79 1 7 3 280 1 101 2 11 1 105 2 82 1 229 1 228 1 16 1 285 1 259 5 204 1 39 1 114 1 362 1 267 1 379 1 245 1 244 2 288 1 93 4 196 1 142 1 315 1 119 3 
0 1 249 3 366 9 345 1 214 2 218 5 4 5 169 6 79 6 7 9 280 3 101 6 10 1 105 6 82 2 228 1 355 1 16 2 285 3 259 9 359 1 360 5 312 1 204 3 39 2 206 1 362 3 267 1 245 1 21 1 288 4 93 7 142 3 315 2 119 8 
249 1 345 1 366 3 214 1 4 3 169 2 7 4 280 1 101 2 82 1 105 2 229 1 16 1 285 2 259 3 359 1 39 1 204 1 362 1 244 1 288 1 93 2 196 1 142 1 315 1 119 3 
0 1 249 2 345 1 366 4 214 1 4 4 169 4 7 7 280 2 101 4 10 1 105 4 82 1 229 1 16 1 285 3 259 4 359 1 312 1 39 1 204 2 362 2 244 2 288 2 93 3 196 1 142 2 315 1 119 5 
307 1 
380 1 248 1 289 1 
248 1 127 1 
248 1 303 1 221 1 
248 1 38 1 
248 1 303 1 
175 1 240 1 248 3 289 2 303 1 221 1 
257 3 272 1 50 1 310 4 217 1 204 1 20 1 31 1 362 1 207 2 193 1 338 1 34 7 95 1 270 3 57 1 128 2 70 1 
249 3 367 1 217 1 50 5 296 1 219 1 31 1 222 3 6 1 280 3 106 1 230 1 34 31 57 2 128 3 257 15 258 1 202 4 374 1 310 16 20 1 204 4 265 1 362 4 91 1 193 2 207 5 338 2 95 2 142 3 270 10 70 1 291 2 342 1 
50 1 217 1 296 2 31 1 230 2 34 9 128 2 57 1 60 1 257 4 258 1 374 2 310 5 204 1 20 1 265 2 362 1 90 1 193 1 207 3 338 1 95 1 270 4 291 4 
257 3 50 1 310 4 217 1 204 1 20 1 31 1 362 1 207 2 193 1 338 1 34 7 95 1 270 3 57 1 128 2 70 1 
257 3 50 1 310 4 217 1 204 1 20 1 31 1 362 1 207 2 193 1 338 1 34 7 95 1 270 3 57 1 128 2 70 1 
344 1 253 1 99 1 348 1 279 2 301 1 176 1 9 1 281 1 233 1 303 1 373 1 236 1 239 2 86 1 135 1 266 2 66 1 40 1 248 1 44 1 118 1 72 2 
344 1 317 1 48 1 52 1 253 1 99 1 171 2 146 1 279 1 301 1 150 1 281 1 231 1 233 1 58 1 331 1 239 1 86 1 135 1 377 1 266 1 363 1 208 1 44 1 72 1 47 1 
344 1 317 1 48 1 273 1 52 1 253 1 220 1 99 1 171 2 146 1 279 1 301 1 150 1 281 1 231 1 233 1 58 1 304 1 331 1 239 1 86 2 135 2 87 1 377 1 266 1 363 1 163 1 44 1 72 1 47 1 
344 1 48 1 253 1 220 2 99 1 171 2 146 1 279 1 301 1 150 1 151 1 281 1 231 1 233 1 58 1 304 1 373 1 331 1 239 1 86 3 135 3 87 1 377 1 266 1 363 1 208 1 163 1 44 1 72 1 47 1 
48 1 239 1 86 2 135 2 87 1 266 1 220 2 171 2 99 1 146 1 363 1 279 1 208 1 301 1 150 1 281 1 151 1 163 1 231 1 233 1 58 1 44 1 304 1 47 1 72 1 
194 1 
343 1 345 1 1 2 252 1 4 2 99 2 7 2 300 2 301 2 103 1 56 2 12 4 59 1 303 1 354 1 15 2 16 1 306 1 259 5 262 1 19 1 66 1 361 1 267 1 119 2 315 1 118 2 24 1 366 5 73 1 168 1 122 1 169 2 29 1 79 6 277 1 372 1 281 1 82 1 228 3 83 1 233 2 234 2 285 2 284 1 333 1 39 1 88 2 243 2 40 1 41 1 248 1 340 1 42 1 44 1 
24 1 343 1 366 3 306 1 259 3 122 1 168 1 252 1 333 1 29 1 79 2 361 1 277 1 41 1 126 1 372 1 103 1 340 1 228 1 56 1 12 2 354 1 
24 1 343 1 366 3 345 1 168 1 122 1 252 1 4 1 29 1 79 1 277 1 372 1 126 1 103 1 228 1 12 3 354 1 306 1 259 3 333 1 88 1 361 1 41 1 340 1 
24 1 343 1 366 3 345 1 168 1 122 1 252 1 4 1 29 1 79 2 277 1 126 1 372 1 300 1 103 1 228 1 56 1 12 3 354 1 306 1 259 3 333 1 88 1 361 1 41 1 340 1 
343 1 345 5 293 1 1 2 252 1 4 5 55 1 300 4 103 1 56 4 12 6 354 1 59 1 15 2 306 1 259 5 361 1 267 1 315 1 119 1 24 1 366 5 122 1 168 1 74 1 29 1 169 1 79 7 277 1 173 1 372 1 126 1 82 1 228 3 234 2 284 1 285 2 132 1 333 1 39 1 88 4 243 2 41 1 340 1 
343 1 345 1 1 2 252 1 4 2 7 2 300 2 103 1 56 2 12 4 354 1 59 1 15 2 306 1 259 4 361 1 267 1 315 1 119 1 24 1 366 4 122 1 168 1 29 1 169 1 79 4 277 1 372 1 82 1 228 2 234 2 284 1 285 2 333 1 39 1 88 2 243 2 41 1 340 1 42 1 
24 1 343 1 345 1 366 4 293 1 1 2 168 1 122 1 74 1 252 1 4 1 169 1 29 1 79 4 173 1 277 1 300 2 372 1 103 1 82 1 228 2 56 2 12 4 234 2 59 1 354 1 15 2 285 2 284 1 306 1 259 4 333 1 39 1 88 2 243 2 361 1 267 1 41 1 340 1 119 1 315 1 
24 1 343 1 345 1 366 4 293 1 1 2 168 1 122 1 74 1 252 1 4 1 169 1 29 1 79 4 173 1 277 1 300 2 372 1 103 1 82 1 228 2 56 2 12 4 234 2 59 1 354 1 15 2 285 2 284 1 306 1 259 4 333 1 39 1 88 2 243 2 361 1 267 1 41 1 340 1 119 1 315 1 
24 1 343 1 167 1 345 1 366 4 1 2 168 1 122 1 252 1 4 1 169 1 29 1 79 4 7 2 173 1 277 1 300 2 372 1 103 1 82 1 228 2 56 2 232 1 12 4 59 1 354 1 306 1 188 2 259 4 333 1 157 1 39 1 88 2 243 2 361 1 267 1 41 1 69 2 340 1 119 1 315 1 
24 1 343 1 345 1 366 4 293 1 1 2 74 1 168 1 122 1 252 1 4 1 169 1 29 1 79 5 173 1 277 1 372 1 300 3 103 1 82 1 228 2 56 3 12 5 234 2 59 1 354 1 15 2 285 2 284 1 306 1 259 4 132 1 333 1 39 1 88 3 243 2 361 1 267 1 41 1 340 1 119 1 315 1 
24 1 343 1 345 1 366 4 293 1 1 2 74 1 168 1 122 1 252 1 4 1 169 1 29 1 79 5 173 1 277 1 372 1 300 3 103 1 82 1 228 2 56 3 12 5 234 2 59 1 354 1 15 2 285 2 284 1 306 1 259 4 132 1 333 1 39 1 88 3 243 2 361 1 267 1 41 1 340 1 119 1 315 1 
24 1 343 1 345 1 366 4 1 2 168 1 122 1 252 1 4 1 169 1 29 1 79 4 7 2 277 1 300 2 372 1 103 1 82 1 228 2 56 2 12 4 232 1 59 1 354 1 306 1 188 2 259 4 333 1 39 1 88 2 243 2 361 1 267 1 41 1 69 2 340 1 42 1 119 1 315 1 
24 1 213 1 96 1 97 1 27 1 198 1 273 1 296 2 297 2 99 8 321 1 277 1 81 1 301 8 225 2 281 2 230 2 34 2 233 7 303 2 257 1 374 2 358 1 310 1 264 1 265 2 66 1 136 1 40 1 208 1 41 1 115 1 195 1 248 3 44 2 118 2 291 4 45 2 292 1 
24 1 249 1 97 1 296 1 54 1 297 1 350 1 277 1 280 1 149 1 180 1 230 1 34 3 152 1 36 1 257 2 357 1 374 1 310 1 204 1 265 1 136 1 362 1 207 1 41 1 270 1 142 1 291 2 45 1 
257 3 109 2 27 1 374 1 310 3 217 1 204 1 20 1 265 1 296 1 297 1 31 1 362 1 380 1 207 2 149 1 180 1 34 6 230 1 95 1 128 1 270 2 57 1 152 1 291 2 45 1 
249 2 346 1 367 1 216 1 50 1 296 2 297 2 321 1 222 3 280 1 149 4 180 11 230 2 34 14 152 11 130 1 257 6 109 1 202 3 357 1 374 2 111 1 310 8 204 2 265 2 362 1 207 1 270 2 142 2 291 4 342 1 292 1 45 1 
24 2 25 1 97 1 198 1 49 1 77 1 296 1 297 1 99 1 221 1 321 1 277 1 301 1 149 1 325 1 281 1 226 1 230 1 34 2 233 1 303 1 257 1 109 1 357 1 374 1 134 1 310 1 158 1 265 1 136 1 209 1 41 2 248 1 44 1 118 1 291 2 45 1 292 1 
24 2 97 1 198 1 251 1 49 1 275 1 296 2 297 2 99 1 221 1 321 1 277 1 301 1 281 1 34 1 230 2 328 1 233 1 303 1 257 1 357 1 374 2 112 1 134 1 158 1 265 2 136 1 192 1 209 1 41 2 248 1 44 1 291 4 118 1 45 2 
27 1 374 1 260 1 50 1 310 2 204 1 265 1 296 1 297 1 149 1 180 1 34 2 230 1 270 1 142 1 152 1 291 2 45 1 
257 2 27 1 374 1 265 1 296 1 297 1 362 1 207 1 280 1 149 1 177 1 180 1 34 2 230 1 270 1 152 1 291 2 45 1 
249 1 27 1 50 1 296 1 297 1 280 1 149 2 180 2 230 1 34 4 152 2 257 2 374 1 310 2 204 1 265 1 362 1 207 1 142 1 270 2 291 2 45 1 
213 1 374 1 260 1 50 1 310 2 204 1 265 1 296 1 297 1 149 1 180 1 34 2 230 1 270 1 142 1 152 1 291 2 45 1 
257 2 213 1 374 1 265 1 296 1 297 1 362 1 207 1 280 1 149 1 177 1 180 1 34 2 230 1 270 1 152 1 291 2 45 1 
249 1 213 1 50 1 296 1 297 1 280 1 149 2 180 2 230 1 34 4 152 2 257 2 374 1 310 2 204 1 265 1 362 1 207 1 142 1 270 2 291 2 45 1 
249 1 50 1 296 1 297 1 280 1 149 2 180 2 34 4 230 1 152 2 257 2 374 1 310 2 204 1 265 1 362 1 207 1 142 1 270 2 291 2 45 1 
24 1 251 1 296 1 297 1 99 1 221 1 321 1 301 1 281 1 34 2 230 1 233 1 303 1 257 1 109 1 374 1 310 1 134 1 158 1 265 1 209 1 41 1 248 1 44 1 118 1 291 2 292 1 45 1 
24 1 296 1 297 1 99 1 221 1 321 1 371 1 301 1 281 1 34 2 230 1 233 1 303 1 257 1 109 1 374 1 310 1 158 1 265 1 41 1 248 1 269 1 116 1 44 1 118 1 291 2 292 1 45 1 
249 1 50 1 296 1 297 1 280 1 149 2 180 2 230 1 34 4 152 2 257 2 357 1 374 1 310 2 204 1 265 1 362 1 207 1 142 1 270 2 291 2 45 1 
24 1 249 1 273 1 251 1 50 1 296 1 297 1 99 1 221 1 280 1 149 2 301 1 281 1 180 2 34 4 230 1 328 1 233 1 152 2 303 1 257 2 374 1 310 2 134 1 204 1 158 1 265 1 362 1 207 1 209 1 41 1 248 1 270 2 142 1 44 1 291 2 45 1 
24 1 249 1 97 1 50 1 296 1 54 1 297 1 350 1 277 1 280 1 149 1 180 1 230 1 34 3 152 1 257 1 357 1 374 1 64 1 310 2 204 1 265 1 136 1 362 1 41 1 270 1 142 1 291 2 45 1 
249 3 250 1 367 1 50 3 320 1 296 2 222 1 278 1 280 3 230 2 34 19 183 2 185 2 257 10 202 2 374 2 241 1 310 9 204 3 265 2 90 1 362 3 207 3 247 1 68 1 341 1 142 3 270 6 291 4 342 1 
249 3 250 1 50 2 75 1 320 1 76 1 296 3 222 2 174 1 280 2 324 1 255 1 230 3 34 26 183 4 185 1 257 12 258 2 202 2 374 3 241 2 310 14 204 3 265 3 362 2 90 1 207 2 68 2 341 1 270 4 142 3 291 6 211 1 342 2 
249 4 250 1 367 1 217 1 50 4 75 1 320 1 76 1 296 3 31 1 222 3 278 1 174 1 280 4 324 1 255 1 230 3 34 41 128 1 57 1 183 4 185 1 257 21 258 1 202 4 374 3 241 1 310 20 20 1 204 5 265 3 90 1 362 5 207 4 68 2 341 1 95 1 142 4 270 8 166 1 291 6 211 1 342 3 
249 4 250 1 367 1 217 1 50 3 75 1 320 1 76 1 296 4 31 1 222 3 278 1 174 1 280 3 324 1 255 1 230 4 34 38 128 1 57 1 183 4 185 1 257 18 258 2 202 4 374 4 241 1 310 20 20 1 204 5 265 4 90 1 362 4 207 4 68 2 341 1 95 1 142 4 270 7 166 1 291 8 211 1 342 3 
249 7 250 1 367 2 217 1 50 7 75 1 320 1 76 1 296 2 31 1 222 4 174 1 280 7 324 1 255 1 230 2 34 52 128 1 57 1 183 4 185 1 257 25 258 1 202 4 374 2 111 2 241 1 310 27 20 1 204 8 265 2 90 1 362 8 207 7 68 1 341 1 95 1 142 7 270 14 291 4 211 1 342 2 
143 1 13 1 61 1 199 1 162 1 332 1 365 1 43 1 5 1 71 1 
92 1 235 1 
13 1 156 1 199 1 375 1 329 1 365 1 43 1 5 1 71 1 
138 1 308 1 
349 1 237 1 335 1 
143 1 13 1 61 1 366 1 259 1 199 1 332 1 4 1 276 2 5 1 32 1 140 1 33 1 290 1 165 1 365 1 43 1 71 1 
143 1 13 1 61 1 366 1 259 1 199 1 332 1 4 1 276 2 5 1 32 1 140 1 33 1 290 1 165 1 365 1 43 1 71 1 
143 1 13 1 61 1 366 1 259 1 199 1 332 1 4 1 276 2 5 1 32 1 140 1 33 1 290 1 165 1 365 1 43 1 71 1 
138 1 308 1 335 1 
138 1 308 1 335 1 
349 1 237 1 
349 1 237 1 335 1 
2 1 123 1 
24 2 366 1 97 2 199 1 2 1 123 1 276 1 80 1 5 1 172 1 32 1 277 2 11 1 235 1 13 1 109 1 259 1 114 1 136 2 92 1 41 2 288 1 93 1 290 1 365 1 43 1 71 1 
24 2 96 1 347 1 296 1 297 1 99 2 321 1 277 2 81 1 301 2 225 2 281 1 351 1 230 1 34 2 233 2 303 1 201 1 257 1 357 1 374 1 310 1 311 1 265 1 41 2 248 1 23 1 44 1 291 2 45 1 292 1 
271 1 66 1 99 1 40 1 348 1 279 1 301 1 281 1 248 1 94 1 233 1 44 1 303 1 118 1 
305 1 331 1 48 1 171 2 99 1 170 1 146 1 363 1 279 1 208 1 301 1 281 1 94 1 231 1 233 1 58 1 44 1 47 1 
305 1 331 1 48 1 273 1 171 2 99 2 170 1 146 1 363 1 279 1 208 1 301 2 281 1 94 1 231 1 233 2 58 1 44 1 47 1 
331 1 48 1 171 2 99 1 170 1 146 1 363 1 279 1 208 1 301 1 178 1 281 1 231 1 233 1 58 1 44 1 47 1 
370 1 
345 1 39 1 4 1 169 1 267 1 67 1 82 1 141 1 315 1 119 1 
14 1 249 2 285 5 204 2 4 5 169 5 7 10 362 2 280 2 139 1 101 5 105 5 227 2 142 2 119 5 
345 1 366 1 259 1 228 1 4 1 79 1 
366 3 73 2 28 1 169 2 99 4 79 4 224 1 301 4 281 1 82 2 83 1 228 2 233 4 303 1 16 2 259 3 376 2 359 1 262 1 39 2 66 1 40 1 267 1 248 1 44 1 315 2 118 2 119 2 46 1 
380 1 345 1 67 1 141 1 4 1 119 1 169 1 
366 1 345 1 4 2 169 1 79 1 7 1 82 1 228 1 234 1 15 1 285 1 284 1 259 1 39 1 267 1 119 1 315 1 
249 2 345 2 294 1 295 2 4 8 99 3 7 12 301 3 101 6 105 6 303 3 256 1 14 2 16 2 259 5 204 2 267 4 362 2 67 1 160 2 119 9 315 4 118 1 366 5 73 1 273 1 318 2 319 2 169 8 79 5 221 3 280 2 372 2 281 3 82 4 227 2 228 3 127 3 233 3 238 1 285 6 240 1 376 1 39 4 38 2 336 2 191 2 139 2 248 10 289 2 141 1 142 2 44 4 46 1 
249 2 366 1 345 2 73 1 75 1 76 1 4 5 169 5 79 1 125 1 7 6 222 1 174 1 280 2 324 1 101 5 105 5 82 2 255 1 228 1 227 2 14 1 16 1 285 3 259 1 202 1 39 2 204 2 286 1 267 2 362 2 142 2 119 8 315 2 342 1 
24 1 366 1 97 1 122 1 74 1 53 1 169 2 31 1 350 1 277 1 82 1 227 2 57 1 153 1 14 1 259 1 17 1 39 1 204 2 136 1 267 1 362 1 41 1 161 1 364 1 95 1 315 1 119 2 
24 3 97 2 251 1 296 1 297 1 99 1 321 1 221 1 277 2 350 2 301 1 281 1 34 1 230 1 233 1 129 1 303 1 257 1 109 1 374 1 17 1 134 1 158 1 265 1 136 2 209 1 41 3 248 1 291 2 118 1 44 1 45 1 
16 1 285 2 345 2 73 1 39 1 4 4 169 2 7 4 267 1 101 2 105 2 82 1 128 1 315 1 119 1 
13 1 61 1 199 1 51 1 123 1 
13 1 199 1 212 1 
13 1 199 1 212 1 
13 1 199 1 212 1 
13 1 199 1 110 1 
13 1 199 1 110 1 
13 1 199 1 110 1 
13 1 199 1 
365 1 5 1 
257 5 374 1 50 2 310 5 204 2 296 1 265 1 31 1 90 1 362 2 207 3 230 1 34 10 95 2 57 2 270 5 291 2 153 1 
374 1 310 2 50 1 204 1 265 1 296 1 90 1 230 1 34 2 142 1 270 1 291 2 
249 1 257 2 374 1 310 2 50 1 204 1 265 1 296 1 362 1 90 1 207 1 280 1 230 1 34 4 270 2 142 1 291 2 
257 2 258 1 374 3 50 1 310 1 265 3 296 3 90 1 268 1 278 1 207 1 34 3 230 3 95 1 57 1 270 2 291 6 
249 3 367 1 217 1 50 5 296 5 31 2 6 1 222 3 278 1 280 3 106 1 230 5 34 34 128 1 57 3 257 18 258 2 202 4 374 5 310 16 20 1 204 5 265 5 287 1 90 1 362 5 91 1 268 1 207 7 95 3 142 3 270 12 291 10 342 1 
217 1 296 1 31 1 222 1 174 1 34 8 230 1 128 1 57 1 257 4 202 1 374 1 310 4 204 1 20 1 265 1 362 1 90 1 207 2 95 1 270 2 291 2 342 1 
249 1 367 1 217 1 50 1 296 2 31 1 222 1 174 1 34 11 230 2 128 1 57 1 257 5 202 2 374 2 310 6 20 1 204 2 265 2 287 1 362 1 90 1 207 2 95 1 142 1 270 3 291 4 342 1 
249 2 217 1 50 1 75 1 76 1 296 3 31 1 222 1 174 1 280 2 324 1 34 19 230 3 255 1 128 1 57 1 257 10 258 1 202 1 374 3 310 9 20 1 204 3 265 3 287 1 90 1 362 3 207 3 95 1 142 2 270 4 291 6 342 1 
249 2 217 1 50 2 75 1 76 1 296 3 31 1 222 1 174 1 280 1 324 1 34 17 230 3 255 1 128 1 57 1 257 7 258 1 202 1 374 3 310 10 20 1 204 3 265 3 287 1 90 1 362 2 207 3 95 1 142 2 270 5 291 6 342 1 
217 1 296 1 31 1 222 1 174 1 34 8 230 1 128 1 57 1 257 4 202 1 374 1 310 4 204 1 20 1 265 1 362 1 90 1 207 2 95 1 270 2 291 2 342 1 
249 2 50 1 75 1 76 1 296 1 222 1 174 1 280 2 324 1 34 12 230 1 255 1 257 6 202 1 374 1 310 6 204 2 265 1 90 1 362 2 207 1 142 2 270 2 291 2 342 1 
249 2 217 1 50 2 75 1 76 1 296 4 31 1 222 1 174 1 280 1 324 1 255 1 34 18 230 4 128 1 57 1 257 8 258 2 202 1 374 4 310 10 20 1 204 3 265 4 287 1 90 1 362 2 207 3 95 1 142 2 270 5 291 8 342 1 
249 3 50 3 75 1 76 1 296 4 222 1 174 1 278 1 280 2 324 1 255 1 34 16 230 4 257 7 258 2 202 1 374 4 310 9 204 3 265 4 90 1 362 2 207 3 142 3 270 6 291 8 342 1 
257 4 217 1 50 3 310 3 20 2 204 1 31 1 362 1 207 3 34 7 95 3 57 3 270 6 
249 2 217 1 50 1 75 1 76 1 296 4 31 1 222 1 174 1 278 1 280 1 324 1 255 1 34 18 230 4 128 1 57 1 257 8 258 2 202 1 374 4 310 10 20 1 204 3 265 4 90 1 362 2 207 3 95 1 142 2 270 4 291 8 342 1 
257 4 258 1 374 2 310 4 50 1 217 1 204 1 20 1 265 2 296 2 31 1 362 1 207 2 34 8 230 2 95 1 128 1 270 3 57 1 291 4 
257 3 217 1 310 3 20 1 204 1 31 1 362 1 380 1 207 2 34 6 95 1 128 1 57 1 270 2 
249 1 257 2 374 1 310 2 50 1 204 1 265 1 296 1 287 1 362 1 207 1 280 1 230 1 34 4 270 2 142 1 291 2 
249 1 257 4 202 2 367 1 310 3 50 1 204 1 362 1 222 1 207 1 280 1 34 7 142 1 270 2 342 1 
249 2 367 1 217 1 50 4 296 2 31 1 222 2 280 2 34 23 230 2 128 1 57 2 130 1 257 12 258 2 202 2 374 2 111 1 310 11 20 1 204 3 265 2 362 3 207 5 268 1 95 2 270 9 142 2 291 4 
257 1 202 1 34 1 
310 1 34 1 222 1 
249 1 257 3 374 1 310 3 50 1 204 1 296 1 265 1 287 1 362 1 207 2 280 1 139 1 230 1 34 6 142 1 270 3 291 2 
249 2 50 1 75 1 76 1 296 1 222 1 174 1 280 2 324 1 34 12 230 1 255 1 257 6 202 1 374 1 310 6 204 2 265 1 90 1 362 2 207 1 142 2 270 2 291 2 342 1 
257 3 310 3 50 1 204 1 31 1 362 1 207 1 34 6 95 1 57 1 270 2 
257 2 258 1 374 1 310 1 50 1 217 1 20 1 265 1 296 1 207 1 268 1 34 3 230 1 95 1 270 2 57 1 291 2 
24 1 277 1 223 1 109 1 41 1 327 1 354 1 
24 1 316 1 109 1 314 1 298 1 137 1 223 1 277 1 41 1 282 1 327 1 354 1 
330 1 273 1 200 1 66 1 99 4 40 1 301 4 248 1 281 1 233 4 44 1 118 1 303 1 
144 1 63 1 368 1 78 1 30 1 99 1 221 1 301 1 248 1 281 1 233 1 303 1 44 2 
363 1 48 1 301 1 281 1 233 1 44 1 118 1 171 1 99 1 47 1 
96 1 273 1 311 1 99 2 208 1 301 2 248 1 281 1 233 2 303 1 44 1 
96 1 376 1 273 1 358 1 200 1 66 1 40 1 99 5 301 5 115 1 248 3 281 2 233 4 118 1 303 2 44 2 
96 1 376 1 273 1 200 1 66 1 40 1 99 5 301 5 115 1 248 3 281 2 181 1 233 4 118 1 303 2 44 2 
380 1 301 1 281 1 248 1 233 1 66 1 44 1 303 1 118 1 40 1 99 1 
24 2 109 1 97 1 198 1 134 1 158 1 136 1 99 1 221 1 277 1 41 2 301 1 248 1 281 1 233 1 303 1 44 1 118 1 
24 2 343 1 97 1 198 1 122 1 319 1 99 1 221 2 277 2 301 1 281 1 103 1 233 1 303 2 109 1 376 1 134 1 158 1 38 1 136 2 41 2 248 3 44 1 
24 2 343 1 97 1 198 1 122 1 319 1 99 2 221 2 277 2 301 2 281 1 103 1 233 2 303 2 330 1 109 1 376 1 158 1 38 1 136 2 41 2 248 3 116 1 44 1 
330 1 345 1 366 2 121 1 259 2 376 1 319 1 38 1 205 1 4 1 99 3 79 1 221 1 372 1 301 3 248 4 281 1 289 1 127 1 233 3 118 1 303 1 44 1 
330 1 345 1 366 2 259 2 376 1 319 1 38 1 4 1 336 1 99 3 79 1 221 1 372 1 301 3 248 4 281 1 289 1 127 1 233 3 118 1 303 1 44 1 
301 1 281 1 233 1 264 1 44 1 99 1 
144 1 240 1 30 1 99 1 221 1 301 1 248 1 281 1 233 1 118 1 303 1 44 2 186 1 
97 1 198 1 251 1 296 2 297 2 99 1 149 1 301 1 351 1 57 1 152 1 303 1 257 3 357 1 109 2 310 3 158 1 20 1 204 1 265 2 362 1 207 2 209 1 270 2 24 2 273 1 217 1 31 1 221 1 277 1 281 1 180 1 230 2 34 6 328 1 233 1 128 1 374 2 134 1 136 1 192 1 41 2 248 1 95 1 291 4 44 1 45 2 
345 1 366 3 318 1 295 1 4 1 169 1 99 1 79 2 301 1 372 1 82 2 228 1 127 1 233 1 259 3 39 2 336 1 267 2 67 1 160 1 93 1 248 2 289 1 141 1 119 1 118 1 315 2 46 1 
238 1 240 1 273 1 264 1 99 2 221 1 301 2 248 2 281 1 289 1 233 2 303 1 44 2 
24 2 109 1 97 1 198 1 158 1 136 1 99 1 221 1 277 1 41 2 301 1 248 1 281 1 116 1 233 1 303 1 44 1 118 1 
144 1 240 1 376 1 30 1 99 1 221 1 301 1 248 1 281 1 233 1 303 1 44 2 186 1 
109 1 369 1 117 1 35 1 254 1 
343 1 345 1 366 2 109 1 259 2 122 1 334 1 369 2 4 1 254 1 361 1 323 1 299 1 372 1 93 1 103 1 283 1 117 2 35 2 
24 1 201 1 277 1 41 1 347 1 23 1 117 1 254 1 35 1 
334 1 283 1 254 1 
344 1 317 1 86 1 163 1 135 1 253 1 87 1 304 1 
344 1 65 1 86 4 189 1 135 4 253 1 87 2 220 2 210 1 102 1 326 1 163 2 352 1 304 3 
344 1 317 1 85 1 86 2 253 1 135 2 87 1 242 1 220 1 339 1 163 1 304 1 
344 1 210 2 317 1 102 1 86 3 163 1 189 2 135 3 253 1 87 1 190 1 304 1 
62 2 84 1 184 1 304 2 
344 1 317 1 86 1 135 1 253 1 147 1 
344 1 317 1 86 2 163 1 135 2 253 1 87 1 220 1 378 1 304 1 
179 1 
344 1 317 1 86 1 163 1 135 1 253 1 87 1 304 1 
380 1 163 1 87 1 304 1 
344 1 86 1 163 1 135 1 253 1 87 1 304 1 
86 1 266 1 72 1 
344 1 210 2 317 1 102 1 86 3 163 1 189 1 135 3 253 1 164 1 87 1 304 1 
344 1 274 1 86 2 163 1 135 2 253 1 87 1 220 1 304 1 
363 1 344 1 317 1 326 1 86 1 135 1 253 1 107 1 171 1 304 1 146 1 
344 1 317 1 86 1 135 1 253 1 87 1 304 1 
344 1 317 1 86 1 163 1 135 1 253 1 87 2 
344 2 317 1 86 2 253 2 135 2 113 1 87 1 246 1 304 1 120 1 
344 1 317 1 86 3 253 1 135 3 87 1 378 1 220 2 337 1 326 1 163 1 352 1 304 2 
344 1 48 1 317 1 86 2 253 1 135 2 87 1 220 1 171 2 146 1 363 1 163 1 182 1 58 1 304 1 
344 2 317 1 274 1 86 4 3 1 253 2 135 4 87 1 220 2 326 1 163 1 352 1 304 2 
344 1 317 1 86 3 253 1 135 3 87 1 220 1 378 1 210 1 163 1 304 1 
65 1 326 1 352 1 304 1 
87 1 304 1 

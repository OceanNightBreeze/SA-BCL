#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 342 (28,261) (28,261) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 342 (28,261) (28,261) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 342 (28,261) (28,261) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 342 (28,261) (28,261) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 58 197 27 238 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 58 197 27 238 24 1 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 58 197 27 238 24 1 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 58 197 27 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 58 197 27 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 58 197 27 238 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 1 228 3 260 2 15 1 225 1 343 2 21 1 46 1 178 3 86 2 10 1 75 1 167 1 
357 1 228 9 101 2 80 1 296 1 343 5 86 2 90 1 10 1 167 7 202 1 305 1 135 1 345 1 13 1 15 1 260 2 225 1 46 4 21 1 47 1 178 9 118 1 75 3 
357 1 228 9 101 2 80 1 296 1 343 5 86 2 90 1 10 1 167 7 202 1 305 1 135 1 345 1 13 1 15 1 260 2 225 1 46 4 21 1 47 1 178 9 118 1 75 3 
342 1 269 1 21 1 178 1 86 1 228 1 193 1 15 1 260 1 261 1 28 1 
342 1 269 1 21 1 178 1 86 1 228 1 193 1 15 1 260 1 261 1 28 1 
342 1 269 1 21 1 178 1 86 1 228 1 193 1 15 1 260 1 261 1 28 1 
342 1 269 1 21 1 178 1 86 1 228 1 193 1 15 1 260 1 261 1 28 1 
305 1 135 1 345 1 228 4 101 2 80 1 260 1 343 3 21 1 46 2 47 1 178 4 86 1 118 1 90 1 10 1 75 1 167 3 
269 1 218 1 135 1 345 1 228 2 80 1 260 1 15 1 128 1 343 1 21 1 178 2 72 1 86 1 50 1 10 1 
125 1 220 1 310 1 319 1 272 1 349 1 286 1 176 1 205 1 96 1 181 1 268 1 99 1 51 1 
68 1 
205 1 8 1 268 2 68 1 294 1 310 2 121 1 201 1 
347 2 4 1 68 1 294 1 310 5 372 1 45 1 116 1 205 2 8 1 313 1 196 1 217 1 268 5 281 2 199 1 290 1 121 2 188 2 
8 1 108 1 68 1 
150 1 112 2 68 1 
96 2 252 1 181 2 220 2 99 2 272 2 51 2 176 1 
123 1 291 1 2 1 155 1 156 1 272 2 273 1 160 2 9 1 276 2 252 1 30 1 280 1 33 1 34 1 324 1 63 1 257 2 134 1 325 1 111 1 259 1 14 1 220 3 222 2 224 1 204 1 176 1 96 2 141 2 266 1 144 1 181 3 377 1 246 1 99 2 51 2 
96 1 181 1 220 1 99 1 319 1 272 1 349 1 51 1 286 1 176 1 
0 1 191 1 220 1 68 1 310 1 349 1 297 1 96 1 8 1 181 1 119 1 366 1 268 1 282 1 
0 1 191 1 220 1 68 1 310 2 272 1 349 1 297 1 96 1 8 1 181 1 119 1 268 2 99 1 51 1 
205 1 183 1 268 1 310 1 121 1 
205 1 8 1 242 1 268 2 68 1 294 1 310 2 121 1 
268 1 310 1 121 1 
212 1 308 1 220 2 272 1 96 2 181 2 252 2 99 1 51 1 
232 1 363 1 25 1 
210 1 2 1 155 1 220 1 224 1 204 1 160 1 141 1 266 1 276 1 252 1 181 1 30 1 34 1 324 1 111 1 
2 1 155 1 214 1 220 2 272 1 224 1 204 1 160 1 105 1 266 1 96 1 141 1 276 1 30 1 181 2 324 1 34 1 51 1 25 1 111 1 
252 1 108 1 
105 1 96 3 252 1 181 3 220 3 99 1 272 3 51 3 
96 1 181 1 220 1 319 1 272 1 349 1 51 1 
96 1 181 1 212 1 308 1 220 1 99 1 272 1 349 1 51 1 
123 1 0 1 291 1 2 1 192 1 212 1 191 1 155 1 214 1 156 1 272 3 297 1 160 1 105 1 276 1 252 1 30 1 33 1 324 1 34 1 257 2 134 1 325 1 111 1 259 1 14 1 220 4 222 1 310 1 224 1 349 1 204 1 176 1 266 1 96 3 141 1 144 1 181 4 119 1 246 1 268 1 99 2 51 3 122 1 
105 1 96 2 252 1 181 2 220 2 272 1 282 1 51 1 295 1 
0 1 212 1 192 1 191 1 214 1 220 3 67 1 68 1 310 1 272 3 349 1 297 1 105 2 96 3 181 3 119 1 268 1 99 1 51 3 
212 1 220 2 272 2 232 1 105 1 96 2 181 2 99 1 51 2 25 1 
2 1 155 1 220 1 224 1 204 1 160 1 141 1 266 1 276 1 252 1 181 1 30 1 34 1 324 1 111 1 
155 1 220 1 370 1 321 1 224 1 204 1 160 1 141 1 276 1 252 1 181 1 30 1 34 1 324 1 111 1 
291 1 232 2 362 1 363 2 58 1 129 1 280 2 301 1 33 1 36 1 257 2 134 1 92 1 325 2 39 1 368 1 14 1 222 4 18 1 97 1 144 1 244 1 246 1 25 2 
96 1 181 1 153 1 191 1 220 1 272 1 349 1 51 1 
270 1 212 1 66 1 220 5 214 1 272 4 295 1 105 2 96 5 181 5 252 1 99 1 282 1 51 4 
96 2 153 1 181 2 220 2 319 1 272 2 349 1 51 2 
117 1 277 1 248 1 
206 1 277 2 94 1 165 1 248 2 56 1 
277 1 248 1 
277 1 248 1 
206 1 165 1 
206 1 165 1 
206 1 165 1 
152 1 277 1 248 1 
152 1 277 1 248 1 
152 1 277 1 248 1 
277 1 248 1 285 1 
277 1 248 1 285 1 
277 1 248 1 285 1 
79 2 114 2 56 1 68 1 310 2 137 1 17 1 320 1 331 1 312 1 277 2 106 2 164 2 323 1 187 1 248 2 268 2 289 2 149 3 
79 1 57 1 272 2 252 1 277 1 31 1 164 1 106 1 169 1 41 1 220 2 310 1 223 1 17 1 262 1 117 1 96 2 181 2 248 1 268 1 289 1 51 2 149 1 355 1 
47 1 338 1 80 2 322 2 128 1 
47 1 345 1 80 1 
345 1 80 1 128 1 
47 2 60 1 338 1 80 3 322 1 128 1 
47 1 338 1 80 2 263 1 322 1 128 1 
150 1 190 1 103 1 358 1 339 2 294 1 82 1 275 1 58 1 129 1 8 1 196 1 217 2 197 1 301 1 281 1 109 2 169 1 303 1 237 2 112 3 347 1 41 1 310 5 68 2 223 1 18 1 205 4 313 3 268 5 121 1 188 1 
150 3 102 1 103 2 358 1 294 1 231 1 58 3 129 3 8 1 196 1 217 6 197 3 301 3 200 1 281 2 109 6 64 1 303 2 237 6 327 1 112 9 41 4 347 2 310 9 68 5 18 3 175 5 205 7 313 8 183 5 268 9 290 1 121 6 380 1 188 2 
150 2 190 1 103 1 339 1 275 1 58 1 129 1 8 1 217 2 197 1 301 1 281 1 109 2 303 1 237 2 112 4 347 1 41 1 68 3 310 3 18 1 205 2 313 3 268 3 290 1 188 1 
150 3 190 1 103 1 339 2 231 1 275 1 58 2 129 2 8 1 217 4 197 2 301 2 281 1 109 4 303 1 237 4 327 1 112 7 347 1 41 2 68 4 310 4 18 2 205 3 313 5 268 4 290 1 380 1 188 1 
157 1 
155 1 108 1 104 1 
155 1 81 1 
155 1 111 1 
240 1 279 1 155 3 104 2 111 1 204 1 
155 1 111 1 204 1 
304 1 155 1 
316 1 40 1 368 3 154 1 170 1 328 1 222 7 239 1 361 2 18 1 70 1 298 1 129 1 143 1 280 4 244 2 333 1 325 3 
316 1 291 1 154 1 360 3 361 3 251 1 58 3 298 5 129 4 280 16 255 1 197 3 33 1 301 3 257 2 258 1 134 1 325 15 40 2 95 4 368 10 170 2 328 2 222 31 115 1 239 1 70 1 18 4 207 1 244 5 333 2 246 1 288 1 379 1 
291 2 154 1 361 2 251 1 298 1 129 1 253 1 280 5 33 2 257 4 134 2 37 1 325 4 40 1 368 4 328 1 170 1 222 9 239 1 18 1 70 1 244 3 246 2 333 1 
316 1 40 1 368 3 154 1 170 1 328 1 222 7 239 1 361 2 18 1 70 1 298 1 129 1 280 4 244 2 333 1 325 3 
316 1 40 1 368 3 154 1 170 1 328 1 222 7 239 1 361 2 18 1 70 1 298 1 129 1 280 4 244 2 333 1 325 3 
315 2 228 1 155 1 293 2 84 1 160 1 85 1 276 1 30 1 86 1 131 1 87 1 34 1 111 1 283 1 369 2 260 1 15 2 138 1 224 1 141 1 178 1 287 1 
315 1 228 1 292 1 80 2 293 1 128 1 160 1 60 1 276 1 86 1 30 1 365 1 107 1 345 1 369 1 260 1 15 1 172 1 42 1 374 1 376 1 224 1 47 1 141 1 21 1 178 1 
26 1 315 1 228 2 292 1 80 2 293 1 128 1 160 1 343 1 60 1 276 1 86 1 30 1 107 1 10 1 167 1 135 1 345 1 369 1 260 1 15 1 172 1 42 1 374 1 376 1 224 1 47 1 141 1 21 1 178 2 
315 1 228 3 292 1 80 2 293 1 128 1 160 1 343 1 60 1 276 1 86 1 30 1 365 1 133 1 107 1 10 1 167 2 135 1 345 1 369 1 260 1 15 1 172 1 42 1 376 1 224 1 47 1 141 1 178 3 287 1 
315 1 135 1 345 1 228 2 80 2 369 1 293 1 15 1 42 1 224 1 376 1 128 1 160 1 343 1 47 1 60 1 141 1 178 2 276 1 30 1 365 1 133 1 107 1 10 1 167 2 
158 1 
0 1 150 2 340 3 294 2 297 1 161 1 299 5 8 1 217 1 62 1 306 1 307 1 65 1 219 1 347 1 220 1 68 1 310 4 349 1 173 1 181 1 350 1 313 1 119 1 268 4 121 5 188 1 126 2 191 1 127 1 278 3 196 1 366 1 281 1 282 1 367 3 96 1 145 1 147 2 243 2 334 2 249 1 
150 2 0 1 126 2 191 1 127 1 340 3 294 2 297 1 161 1 8 1 299 5 196 1 278 3 217 1 62 1 366 1 281 1 282 1 306 1 367 3 347 1 219 1 65 1 307 1 220 1 68 1 310 4 173 1 349 1 96 1 313 1 350 1 181 1 145 1 243 2 147 2 119 1 334 2 268 4 121 5 188 1 249 1 
54 2 0 1 340 2 294 2 297 1 161 1 299 4 8 1 217 1 302 1 112 2 347 1 65 1 219 1 220 1 310 4 68 1 349 1 173 1 181 1 313 1 351 2 119 1 268 4 121 4 188 1 191 1 127 1 234 1 196 1 278 2 366 1 281 1 282 1 367 2 96 1 147 2 243 2 249 1 
150 2 0 1 155 1 103 1 340 2 294 3 7 1 297 1 160 2 161 1 8 1 299 4 217 2 111 1 302 1 306 1 112 2 347 1 65 1 219 1 220 1 68 2 310 5 224 1 173 1 349 1 313 2 181 1 119 1 268 5 121 6 188 1 126 2 191 1 127 1 29 1 276 2 131 1 30 1 278 2 196 1 87 1 34 2 366 1 281 1 282 1 367 2 93 1 371 1 141 2 96 1 243 2 147 2 334 2 249 1 
0 1 191 1 65 1 219 1 127 1 220 1 294 1 310 3 349 1 173 1 297 1 96 1 299 2 181 1 278 1 119 1 268 3 366 1 121 2 282 1 201 1 249 1 
0 1 191 1 127 1 340 1 294 1 297 1 299 3 8 1 366 1 282 1 201 1 219 1 65 1 220 1 310 3 68 1 173 1 349 1 96 1 181 1 119 1 268 3 121 1 249 1 
0 1 191 1 127 1 340 1 294 1 297 1 299 3 8 1 278 1 366 1 282 1 201 1 367 1 219 1 65 1 220 1 310 3 68 1 173 1 349 1 96 1 181 1 119 1 268 3 121 2 249 1 
0 1 150 2 340 4 294 3 297 1 161 1 299 6 8 5 217 1 62 1 306 1 65 1 219 1 307 1 347 1 220 1 310 5 68 5 311 1 349 1 173 1 181 1 350 1 313 1 119 1 268 5 121 7 188 1 126 2 191 1 127 1 278 4 196 1 366 1 281 1 282 1 201 1 367 4 96 1 145 1 147 2 243 2 334 2 249 1 
150 2 0 1 126 2 191 1 127 1 340 2 294 2 297 1 161 1 8 1 299 4 278 2 196 1 217 1 366 1 281 1 282 1 302 1 306 1 367 2 112 2 219 1 65 1 347 1 220 1 68 2 310 4 173 1 349 1 96 1 313 1 181 1 243 2 147 2 119 1 334 2 268 4 121 4 188 1 249 1 
150 2 0 1 126 2 191 1 127 1 340 2 294 2 297 1 161 1 8 1 299 4 278 2 196 1 217 1 62 1 366 1 281 1 282 1 306 1 367 2 219 1 65 1 347 1 220 1 68 1 310 4 173 1 349 1 96 1 313 1 181 1 350 1 145 1 243 2 147 2 119 1 334 2 268 4 121 4 188 1 249 1 
150 2 0 1 126 2 191 1 127 1 340 2 294 2 297 1 161 1 8 1 299 4 278 2 196 1 217 1 62 1 366 1 281 1 282 1 306 1 367 2 219 1 65 1 347 1 220 1 68 1 310 4 173 1 349 1 96 1 313 1 181 1 350 1 145 1 243 2 147 2 119 1 334 2 268 4 121 4 188 1 249 1 
54 2 337 1 0 1 191 1 127 1 340 2 294 2 297 1 234 1 161 1 8 1 299 4 254 1 278 2 196 1 217 1 62 1 366 1 281 1 282 1 367 2 112 2 219 1 65 1 347 1 220 1 68 1 310 4 173 1 349 1 96 1 351 2 313 1 181 1 243 2 147 2 119 1 268 4 121 4 188 1 249 1 
26 1 78 1 291 2 155 3 272 1 156 1 341 1 160 8 105 1 276 7 9 1 30 2 131 1 132 1 280 1 365 1 87 1 34 2 33 2 35 1 257 4 134 2 325 1 111 2 220 1 14 2 222 2 44 1 224 2 139 1 96 1 141 8 97 1 181 1 144 2 314 1 377 2 246 2 51 1 
291 1 212 1 272 1 232 1 363 1 58 1 129 1 280 1 61 1 197 1 33 1 301 1 257 2 134 1 325 2 368 1 14 1 220 1 222 3 18 1 96 1 144 1 98 1 181 1 244 1 246 1 99 1 51 1 25 1 
291 1 154 1 232 1 361 1 363 1 129 1 252 2 280 3 33 1 108 1 257 2 134 1 325 3 368 2 170 1 14 1 222 6 239 1 70 1 18 1 97 1 144 1 244 2 246 1 333 1 25 1 
189 1 271 1 291 2 360 1 156 1 363 3 252 1 280 1 33 2 257 4 38 1 134 2 325 3 95 1 14 1 222 4 349 1 144 2 98 1 246 2 148 1 336 1 25 3 
55 1 210 1 2 1 291 1 155 1 214 1 272 1 156 1 232 1 83 1 160 1 105 1 276 1 9 1 252 1 30 1 280 1 324 1 34 1 33 1 257 2 134 1 111 1 325 1 12 1 14 1 220 2 222 2 224 1 204 1 266 1 141 1 96 1 144 1 98 1 181 2 246 1 51 1 
291 3 2 2 154 1 213 1 155 2 214 1 156 1 160 3 105 1 58 2 298 4 9 1 252 2 216 1 301 2 257 6 111 2 259 2 170 1 220 3 14 3 222 20 309 2 224 2 70 1 18 3 266 2 181 3 25 7 272 1 361 1 232 7 363 7 129 3 276 3 30 2 280 10 365 1 32 2 197 2 34 1 33 3 324 2 91 2 134 3 325 10 368 8 239 1 204 2 141 3 96 1 241 2 98 1 144 3 244 4 333 1 246 3 52 1 51 1 
291 1 368 1 14 1 222 2 232 1 363 1 18 1 298 1 58 1 97 1 144 1 280 2 246 1 33 1 257 2 134 1 92 1 25 1 
291 1 368 1 14 1 222 2 232 1 363 1 129 1 97 1 144 1 244 1 246 1 33 1 301 1 257 2 36 1 134 1 25 1 325 2 
291 1 232 2 363 2 58 1 298 1 129 1 280 2 197 1 33 1 301 1 257 2 134 1 325 2 368 2 14 1 222 4 18 1 97 1 144 1 244 1 246 1 25 2 
291 1 368 1 14 1 222 2 232 1 363 1 18 1 341 1 298 1 58 1 144 1 280 2 246 1 33 1 257 2 134 1 92 1 25 1 
291 1 368 1 14 1 222 2 232 1 363 1 341 1 129 1 144 1 244 1 246 1 33 1 301 1 257 2 36 1 134 1 25 1 325 2 
291 1 232 2 363 2 341 1 58 1 298 1 129 1 280 2 197 1 33 1 301 1 257 2 134 1 325 2 368 2 14 1 222 4 18 1 144 1 244 1 246 1 25 2 
291 1 232 2 363 2 58 1 298 1 129 1 280 2 197 1 33 1 301 1 257 2 134 1 325 2 368 2 14 1 222 4 18 1 144 1 244 1 246 1 25 2 
2 1 291 1 155 1 156 1 160 1 9 1 276 1 252 1 30 1 280 1 324 1 34 1 33 1 257 2 134 1 111 1 325 1 259 1 220 1 14 1 222 2 224 1 204 1 266 1 141 1 181 1 144 1 246 1 
291 1 155 1 230 1 156 1 321 1 160 1 9 1 276 1 252 1 30 1 280 1 324 1 34 1 33 1 257 2 134 1 111 1 325 1 370 1 220 1 14 1 222 2 224 1 204 1 141 1 181 1 144 1 246 1 
291 1 232 2 363 2 58 1 298 1 129 1 280 2 197 1 33 1 301 1 257 2 134 1 325 2 368 2 14 1 222 4 18 1 144 1 98 1 244 1 246 1 25 2 
26 1 2 1 291 1 155 1 232 2 363 2 160 1 298 1 58 1 129 1 276 1 30 1 280 2 197 1 301 1 324 1 33 1 257 2 134 1 325 2 111 1 259 1 368 2 220 1 14 1 222 4 309 1 224 1 18 1 204 1 266 1 141 1 181 1 144 1 244 1 246 1 25 2 
291 1 212 1 272 1 232 1 363 1 298 1 58 1 129 1 280 2 197 1 301 1 33 1 257 2 134 1 325 1 368 1 14 1 220 1 222 3 18 1 96 1 144 1 98 1 181 1 185 1 246 1 99 1 51 1 25 1 
318 1 211 1 1 1 291 2 359 1 360 1 58 3 298 3 129 3 280 9 256 2 197 3 33 2 301 3 257 4 134 2 37 1 325 10 95 2 368 6 222 19 115 1 69 1 18 3 265 2 244 3 246 2 120 1 24 1 379 1 
77 1 95 2 291 1 1 1 27 1 238 1 222 11 115 2 359 1 360 2 18 1 58 1 265 2 280 6 197 1 246 1 33 1 24 2 120 2 257 2 37 1 134 1 325 5 
77 1 317 1 318 1 1 1 291 2 27 1 359 1 360 3 58 3 298 2 129 2 280 12 256 1 197 3 33 2 301 2 257 4 134 2 37 1 325 12 95 4 368 3 238 1 222 24 115 3 69 1 18 3 265 3 244 1 246 2 120 2 24 1 379 1 
77 1 317 1 318 1 1 1 291 2 27 1 359 1 360 3 58 3 298 2 129 2 280 12 256 1 197 3 33 2 301 2 257 4 134 2 37 1 325 12 95 4 368 4 238 1 222 24 115 3 69 1 18 3 265 3 244 2 246 2 120 2 24 1 379 1 
77 1 318 1 1 1 291 2 154 1 27 1 359 1 360 4 361 1 251 1 58 7 298 7 129 8 280 27 256 1 197 7 33 2 301 7 257 4 134 2 37 1 325 25 344 2 95 4 368 14 170 1 238 1 222 52 16 1 115 2 239 1 70 1 140 1 18 8 265 4 352 1 244 7 333 1 246 2 120 1 24 1 379 2 
331 1 326 1 277 1 79 1 164 1 106 1 323 1 248 1 56 1 289 1 
117 1 57 1 
235 1 277 1 79 1 164 1 106 1 248 1 43 1 289 1 110 1 
79 1 114 1 56 1 68 1 310 1 137 1 17 1 320 1 331 1 312 1 277 1 106 1 164 1 323 1 268 1 248 1 289 1 149 2 
79 1 114 1 56 1 68 1 310 1 137 1 17 1 320 1 331 1 312 1 277 1 106 1 164 1 323 1 268 1 248 1 289 1 149 2 
79 1 114 1 56 1 68 1 310 1 137 1 17 1 320 1 331 1 312 1 277 1 106 1 164 1 323 1 268 1 248 1 289 1 149 2 
152 1 94 1 74 1 
152 1 94 1 74 1 
163 1 285 1 
94 1 163 1 285 1 
31 1 355 1 
79 1 5 1 57 1 272 2 320 1 252 1 277 1 31 1 164 1 106 1 169 1 41 1 220 2 114 1 310 1 223 1 262 1 205 1 117 1 96 2 181 2 268 1 248 1 289 1 149 1 355 1 51 2 
152 1 74 1 
94 1 163 1 285 1 
291 1 155 1 156 1 250 1 160 2 9 1 276 2 30 1 280 1 89 1 33 1 166 1 35 1 257 2 134 1 111 1 325 1 14 1 220 2 222 2 44 1 224 1 141 2 96 2 180 1 144 1 98 1 181 2 377 2 246 1 209 1 
155 1 293 1 138 1 224 1 215 1 160 1 141 1 276 1 30 1 131 1 87 1 34 1 111 1 53 1 
124 1 345 1 292 1 80 2 293 1 42 1 376 1 224 1 215 1 128 1 274 1 160 1 47 1 60 1 141 1 276 1 30 1 365 1 
26 1 124 1 345 1 292 1 80 2 293 1 42 1 224 1 376 1 215 1 128 1 274 1 160 2 47 1 60 1 141 2 276 2 30 1 365 1 
124 1 345 1 292 1 80 2 293 1 42 1 376 1 224 1 128 1 160 1 47 1 60 1 141 1 276 1 30 1 365 1 300 1 
186 1 
347 1 68 1 45 1 116 1 8 1 313 1 196 1 217 1 281 1 188 1 
237 5 150 5 112 10 68 5 18 2 58 2 129 2 313 5 48 2 217 5 332 1 32 1 197 2 301 2 109 5 
8 1 268 1 68 1 310 1 294 1 121 1 
155 1 103 2 294 2 7 1 160 4 29 1 276 4 30 1 131 1 162 1 196 1 217 2 87 1 34 2 281 2 111 1 329 1 347 2 113 2 371 2 310 3 224 1 141 4 73 1 313 2 268 3 290 1 121 4 188 2 
123 1 291 1 2 1 155 1 156 1 272 2 160 1 276 1 252 1 30 1 33 1 34 1 324 1 257 2 134 1 325 1 111 1 259 1 220 3 14 1 222 1 224 1 176 1 204 1 141 1 96 2 266 1 181 3 144 1 246 1 99 2 51 2 
237 2 150 2 112 4 347 1 103 1 371 1 68 4 361 1 8 2 313 1 196 1 217 2 281 1 109 2 188 1 
8 1 313 1 217 1 108 1 68 1 45 1 116 1 
306 1 150 1 126 1 112 1 347 1 310 1 294 1 68 2 8 1 313 1 196 1 217 1 334 1 268 1 281 1 121 1 188 1 
150 6 155 8 103 2 294 3 159 1 104 2 160 3 59 1 58 2 8 2 217 8 301 2 109 6 111 2 304 1 112 12 347 4 113 1 348 1 310 5 68 8 224 2 18 2 116 1 71 2 177 2 73 1 22 2 313 9 119 2 268 5 121 5 188 4 26 1 81 3 129 2 276 3 30 3 196 4 32 2 197 2 34 1 281 4 237 6 136 1 371 1 373 2 45 1 204 2 240 1 141 3 48 2 332 2 247 2 
77 1 150 2 27 1 360 1 58 2 129 2 196 1 217 4 197 2 301 2 281 1 109 5 237 5 112 4 95 1 347 1 238 1 115 1 68 2 16 1 18 2 352 1 313 6 188 1 
100 1 125 1 319 1 272 1 129 1 196 1 217 2 281 1 170 1 347 1 220 1 310 1 239 1 349 1 18 2 286 1 176 1 96 1 181 1 350 1 313 2 48 2 332 1 333 1 268 1 99 1 51 1 188 1 
331 1 31 1 79 1 164 1 49 1 
79 1 164 1 174 1 
79 1 164 1 174 1 
79 1 164 1 174 1 
182 1 79 1 164 1 
182 1 79 1 164 1 
182 1 79 1 164 1 
79 1 164 1 
277 1 248 1 
100 1 291 1 368 5 170 2 222 10 239 1 18 2 298 2 129 2 280 5 244 3 246 1 333 2 33 1 257 2 134 1 37 1 325 5 
291 1 368 1 222 2 18 1 58 1 298 1 280 2 246 1 33 1 257 2 37 1 134 1 
291 1 368 2 222 4 18 1 58 1 298 1 129 1 280 2 244 1 246 1 197 1 301 1 33 1 257 2 37 1 134 1 325 2 
291 3 368 2 170 1 222 3 69 1 251 1 298 1 280 1 244 1 246 3 333 1 33 3 148 1 257 6 37 1 134 3 325 2 
291 5 154 1 360 3 361 1 251 2 58 3 298 5 129 5 255 1 280 16 364 1 197 3 33 5 301 3 258 1 257 10 134 5 37 1 325 18 95 4 368 12 170 3 222 34 115 1 239 2 69 1 70 1 18 5 244 7 333 3 246 5 288 1 148 1 379 1 
291 1 154 1 360 1 361 1 129 1 280 4 33 1 257 2 134 1 37 1 325 4 95 1 368 2 170 1 238 1 222 8 115 1 239 1 18 1 70 1 244 2 246 1 333 1 
291 2 154 1 360 1 361 1 58 1 298 1 129 1 280 6 364 1 197 1 33 2 257 4 37 1 134 2 325 5 95 2 368 3 170 1 238 1 222 11 115 1 239 1 70 1 18 2 244 2 333 1 246 2 379 1 
77 1 291 1 95 1 27 1 238 1 222 5 115 1 360 1 18 1 58 1 280 3 197 1 246 1 33 1 257 2 37 1 134 1 325 2 
77 1 291 3 154 1 27 1 360 1 361 1 251 1 298 2 58 2 129 2 280 10 364 1 197 2 33 3 301 1 257 6 134 3 37 1 325 7 95 1 368 5 170 1 238 1 222 17 115 1 16 1 239 1 70 1 18 3 352 1 244 3 333 1 246 3 
291 1 154 1 360 1 361 1 129 1 280 4 33 1 257 2 134 1 37 1 325 4 95 1 368 2 170 1 238 1 222 8 115 1 239 1 18 1 70 1 244 2 246 1 333 1 
77 1 291 1 27 1 360 1 298 1 58 2 129 2 280 6 197 2 33 1 301 2 257 2 134 1 37 1 325 6 95 1 368 2 238 1 222 12 115 1 16 1 18 2 352 1 244 1 246 1 
77 1 291 2 95 1 27 1 238 1 222 5 115 1 360 1 18 1 58 1 280 3 364 1 197 1 246 2 33 2 257 4 37 1 134 2 325 2 
77 1 291 4 27 1 360 1 251 2 298 3 58 3 129 2 280 9 197 3 33 4 301 2 257 8 37 1 134 4 325 7 95 1 368 6 238 1 222 16 16 1 115 1 69 1 18 3 352 1 244 3 246 4 
154 2 368 6 170 3 222 7 239 1 70 1 18 1 298 3 129 1 280 3 244 3 333 3 325 4 
77 1 291 2 95 1 27 1 238 1 222 5 115 1 360 1 69 1 18 1 58 1 280 3 197 1 246 2 33 2 257 4 134 2 37 1 325 2 
291 2 368 3 154 1 170 1 222 8 239 1 361 1 18 1 70 1 251 1 298 1 129 1 280 4 244 2 246 2 333 1 33 2 257 4 134 2 325 4 
129 1 280 3 368 2 244 2 154 1 170 1 333 1 222 6 108 1 239 1 361 1 18 1 70 1 325 3 
291 1 368 2 222 4 18 1 58 1 298 1 129 1 280 2 244 1 364 1 246 1 197 1 301 1 33 1 257 2 134 1 325 2 
95 2 368 2 222 7 115 1 360 1 18 1 58 1 298 1 129 1 280 3 244 1 197 1 301 1 379 1 325 4 
100 1 291 1 154 1 360 1 251 1 298 3 129 2 280 7 33 1 257 2 134 1 38 1 325 8 95 1 368 6 170 2 222 15 239 1 18 2 70 1 244 3 246 1 333 2 148 1 
95 1 222 1 325 1 
280 1 222 1 360 1 
291 1 368 3 222 6 18 1 58 1 298 1 129 1 280 3 244 2 364 1 246 1 32 1 197 1 33 1 301 1 257 2 134 1 325 3 
77 1 291 1 27 1 360 1 298 1 58 2 129 2 280 6 197 2 33 1 301 2 257 2 134 1 37 1 325 6 95 1 368 2 238 1 222 12 115 1 16 1 18 2 352 1 244 1 246 1 
368 2 170 1 222 6 239 1 18 1 298 1 129 1 280 3 244 1 333 1 325 3 
291 1 368 2 154 1 170 1 222 3 70 1 251 1 298 1 280 1 244 1 333 1 246 1 33 1 148 1 257 2 134 1 325 2 
96 1 252 1 181 1 220 1 282 1 295 1 168 1 
151 1 220 1 203 1 295 1 96 1 252 1 181 1 88 1 198 1 282 1 236 1 168 1 
26 1 356 1 155 1 224 1 160 4 141 4 276 4 30 1 131 1 353 1 87 1 34 1 111 1 
346 1 229 1 155 1 113 1 224 1 204 1 160 2 141 2 276 2 30 2 354 1 226 1 52 1 111 1 
160 1 141 1 276 1 345 1 30 1 80 1 34 1 224 1 376 1 128 1 
26 1 155 1 44 1 224 1 250 1 160 2 141 2 276 2 30 1 365 1 111 1 
26 1 78 1 155 3 113 1 44 1 224 2 160 5 141 5 276 4 131 1 30 2 314 1 353 1 87 1 34 1 111 2 
26 1 78 1 155 3 113 1 44 1 224 2 160 5 141 5 276 4 131 1 30 2 353 1 87 1 34 1 208 1 111 2 
160 1 141 1 276 1 30 1 131 1 155 1 87 1 34 1 108 1 224 1 111 1 
155 1 220 2 272 1 224 1 204 1 160 1 105 1 96 1 141 1 266 1 276 1 252 1 30 1 181 2 324 1 34 1 51 1 111 1 
0 1 191 1 155 3 272 1 160 1 105 1 59 1 276 1 252 1 30 1 324 1 111 2 304 1 113 1 220 2 224 1 349 2 204 2 266 1 141 1 96 2 181 2 51 2 336 1 
0 1 191 1 155 3 272 1 160 1 105 1 59 1 276 1 252 1 30 1 324 1 111 2 304 1 113 1 370 1 220 2 224 1 349 2 204 2 141 1 96 2 181 2 51 2 336 1 
125 1 155 4 81 1 319 1 272 1 104 1 160 1 59 1 276 1 8 1 30 1 111 1 304 1 113 1 220 1 310 2 68 1 349 1 224 1 286 1 176 1 204 1 96 1 141 1 181 1 184 1 23 1 119 1 268 2 99 1 51 1 121 1 
125 1 155 4 81 1 319 1 272 1 104 1 160 1 59 1 276 1 8 1 30 1 111 1 304 1 113 1 220 1 310 2 68 1 373 1 349 1 224 1 286 1 176 1 204 1 96 1 141 1 181 1 119 1 268 2 99 1 51 1 121 1 
160 1 141 1 276 1 30 1 132 1 224 1 
26 1 78 1 229 1 155 3 44 1 224 2 139 1 204 1 160 7 240 1 141 7 276 6 30 3 132 1 314 1 377 1 365 1 245 1 34 2 354 1 111 2 
2 1 291 2 154 1 155 1 160 1 105 1 252 2 257 4 111 1 259 1 170 1 220 2 14 2 309 1 222 6 224 1 70 1 18 1 266 1 181 2 25 1 26 1 272 1 232 1 361 1 363 1 129 1 276 1 30 1 280 3 89 1 33 2 324 1 134 2 325 3 368 2 239 1 204 1 241 1 141 1 96 1 98 1 144 2 244 2 246 2 333 1 51 1 
155 2 81 1 294 1 104 1 160 1 8 1 276 1 196 2 217 1 34 1 281 2 347 2 68 1 310 3 373 1 45 1 116 1 71 1 205 1 141 1 313 1 73 1 22 1 119 1 247 1 268 3 121 2 188 2 
26 1 155 2 104 1 159 1 224 1 204 1 160 2 240 1 141 2 276 2 30 2 132 1 111 1 
155 1 220 2 370 1 272 1 224 1 204 1 160 1 105 1 96 1 141 1 276 1 252 1 30 1 181 2 324 1 34 1 51 1 111 1 
229 1 155 1 113 1 224 1 204 1 160 1 240 1 141 1 276 1 30 2 245 1 354 1 111 1 
179 1 130 1 252 1 267 1 335 1 
0 1 191 1 192 1 68 1 310 2 349 1 375 1 297 1 205 1 195 1 8 1 130 1 179 2 252 1 146 1 119 1 268 2 267 2 335 2 
220 1 96 1 179 1 130 1 180 1 181 1 166 1 335 1 209 1 
195 1 130 1 375 1 
343 1 21 1 135 1 178 1 86 1 228 1 260 1 10 1 
218 1 135 2 228 4 171 1 221 1 260 1 343 3 46 1 178 4 86 1 10 2 75 1 76 1 167 2 
135 1 357 1 228 2 260 1 264 1 343 1 21 1 178 2 86 1 142 1 10 1 167 1 
343 1 218 2 21 1 135 1 178 3 86 1 228 3 378 1 171 1 260 1 10 1 76 2 
343 2 284 2 19 1 194 1 
21 1 178 1 86 1 228 1 330 1 260 1 
343 1 21 1 135 1 178 2 86 1 228 2 260 1 10 1 167 1 296 1 
6 1 
343 1 21 1 135 1 178 1 86 1 228 1 260 1 10 1 
218 1 135 1 228 3 260 1 296 1 343 1 21 1 178 3 86 1 10 1 167 1 
343 1 46 1 221 1 75 1 
343 1 135 1 
343 1 135 1 108 1 10 1 
343 1 135 1 178 1 86 1 228 1 260 1 10 1 
315 1 178 1 15 1 
227 1 343 1 218 2 21 1 135 1 178 3 86 1 228 3 171 1 260 1 10 1 76 1 
343 1 135 1 178 2 86 1 101 1 228 2 260 1 10 1 167 1 
305 1 345 1 228 1 80 1 260 1 343 1 21 1 46 1 47 1 178 1 86 1 
343 1 21 1 135 1 178 1 86 1 228 1 260 1 
21 1 135 2 178 1 86 1 228 1 260 1 10 1 
135 1 228 2 3 1 260 2 20 1 343 1 21 1 178 2 86 2 11 1 
202 1 135 1 228 3 260 1 296 1 343 2 21 1 46 1 178 3 86 1 10 1 75 1 167 2 
135 1 345 1 228 2 80 2 260 1 128 1 233 1 343 1 21 1 60 1 47 1 178 2 86 1 10 1 167 1 
135 1 228 4 101 1 260 2 343 2 21 1 46 1 178 4 86 2 118 1 10 1 75 1 167 2 

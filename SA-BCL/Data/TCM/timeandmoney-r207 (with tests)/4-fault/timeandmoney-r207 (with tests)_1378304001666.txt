#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (89,317) 306 (42,289) (42,289) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (89,317) 306 (42,289) (42,289) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (89,317) 306 (42,289) (42,289) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (89,317) 306 (42,289) (42,289) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (54,67) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (54,67) 102 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (54,67) 102 55 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 1 65 1 330 2 7 1 98 9 179 1 200 1 267 5 131 1 341 9 30 1 345 2 213 2 135 1 214 1 151 1 215 1 187 1 317 1 140 1 16 1 236 7 356 3 175 4 
328 1 65 1 330 2 7 1 98 9 179 1 200 1 267 5 131 1 341 9 30 1 345 2 213 2 135 1 214 1 151 1 215 1 187 1 317 1 140 1 16 1 236 7 356 3 175 4 
89 1 160 1 98 1 135 1 289 1 42 1 214 1 341 1 330 1 345 1 306 1 
89 1 160 1 98 1 135 1 289 1 42 1 214 1 341 1 330 1 345 1 306 1 
89 1 160 1 98 1 135 1 289 1 42 1 214 1 341 1 330 1 345 1 306 1 
89 1 160 1 98 1 135 1 289 1 42 1 214 1 341 1 330 1 345 1 306 1 
213 2 135 1 215 1 151 1 328 1 65 1 330 1 140 1 98 4 16 1 236 3 356 1 200 1 267 3 131 1 341 4 345 1 175 2 
160 1 135 1 214 1 151 1 328 1 330 1 98 2 165 1 16 1 200 1 267 1 340 1 189 1 341 2 312 1 345 1 
135 1 214 1 328 1 330 2 317 1 98 3 16 1 236 1 356 1 267 2 341 3 345 2 175 1 
237 1 348 1 248 1 
261 2 348 1 122 1 
136 2 130 2 247 2 63 2 156 2 350 2 281 1 124 1 
41 1 326 1 63 2 226 1 329 2 192 1 69 2 124 1 127 1 264 1 246 1 166 1 48 1 130 3 247 3 104 1 180 1 339 1 210 2 136 2 294 1 232 1 350 2 315 1 58 1 152 2 37 1 320 1 155 1 17 1 156 2 172 1 323 1 115 2 116 1 281 1 280 1 
335 1 136 1 130 1 247 1 63 1 156 1 311 1 350 1 221 1 124 1 
33 1 136 1 348 1 252 1 74 1 247 1 130 1 52 1 105 1 182 1 221 1 248 1 32 1 174 1 
33 2 136 1 63 1 348 1 252 1 350 1 74 2 156 1 247 1 130 1 52 1 182 1 221 1 248 1 174 1 
74 1 33 1 291 1 70 1 178 1 
108 1 74 2 33 2 313 1 348 1 291 1 248 1 178 1 
74 1 33 1 178 1 
33 1 136 1 63 1 66 1 350 1 124 1 335 1 74 1 156 1 247 1 130 1 311 1 221 1 291 1 
348 1 
141 1 74 2 33 2 313 1 348 1 291 1 248 1 178 1 
176 1 119 1 33 5 313 1 348 1 295 2 147 1 178 2 74 5 354 1 338 1 128 1 290 2 359 1 149 2 291 2 142 1 248 1 300 1 
237 1 281 1 
12 1 136 2 63 1 350 1 103 1 247 2 130 2 156 1 281 2 
349 1 238 1 132 1 
226 1 192 1 232 1 152 1 155 1 166 1 48 1 130 1 247 1 172 1 323 1 115 1 268 1 116 1 281 1 210 1 
136 1 63 1 226 1 232 1 192 1 350 1 152 1 155 1 48 1 166 1 129 1 247 2 130 2 323 1 172 1 115 1 116 1 240 1 210 1 132 1 
136 3 156 1 130 3 247 3 63 3 350 3 281 1 240 1 
335 1 136 1 130 1 247 1 63 1 350 1 221 1 
12 1 136 1 103 1 130 1 247 1 63 1 156 1 350 1 221 1 
20 1 326 1 63 3 226 1 329 1 192 1 69 2 124 1 333 1 127 1 264 1 74 1 246 1 48 1 166 1 103 1 130 4 247 4 129 1 104 1 180 1 52 1 182 1 210 1 33 1 136 3 252 1 294 1 232 1 350 3 152 1 37 1 320 1 155 1 156 2 323 1 172 1 115 1 116 1 281 1 280 1 240 1 221 1 174 1 
357 1 136 2 130 2 247 2 63 1 350 1 105 1 281 1 240 1 
20 1 33 1 136 3 63 3 348 1 252 1 350 3 74 1 103 1 156 1 129 1 247 3 130 3 51 1 52 1 221 1 240 2 182 1 174 1 
136 2 103 1 130 2 247 2 63 2 156 1 238 1 350 2 240 1 132 1 
226 1 192 1 232 1 152 1 155 1 166 1 48 1 130 1 247 1 172 1 323 1 115 1 116 1 281 1 210 1 
249 1 226 1 192 1 272 1 232 1 152 1 155 1 130 1 247 1 172 1 323 1 115 1 116 1 281 1 210 1 
326 1 93 1 329 4 244 1 193 1 69 2 228 1 71 1 100 1 264 2 104 1 11 1 132 2 294 1 349 2 58 2 273 1 111 1 37 1 320 1 238 2 280 1 259 1 143 1 
136 1 130 1 247 1 63 1 137 1 350 1 221 1 182 1 
118 1 136 5 285 1 63 4 350 4 357 1 103 1 247 5 130 5 156 1 129 1 105 1 240 2 281 1 
335 1 136 2 130 2 247 2 63 2 137 1 350 2 221 1 
86 1 54 1 
86 1 54 1 
227 1 67 1 
227 1 67 1 
227 1 67 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
86 1 54 1 
102 1 90 1 86 1 54 1 
102 1 55 1 74 1 33 1 90 1 86 1 54 1 
200 1 151 1 140 1 
200 1 151 1 189 1 
21 1 200 3 189 1 140 2 298 1 77 1 
170 1 200 2 189 1 140 1 298 1 77 1 
200 2 189 1 140 1 77 1 298 2 
261 3 244 1 95 1 68 1 122 1 71 1 178 1 6 1 307 2 74 5 9 1 338 2 128 1 290 1 149 1 291 4 248 1 33 5 185 1 313 1 348 2 295 1 139 2 111 1 36 1 235 1 114 2 355 1 279 1 142 3 324 1 143 1 
261 9 40 1 244 3 68 4 122 3 123 1 147 1 70 5 71 3 178 6 6 3 307 6 148 1 286 1 74 9 309 1 338 6 128 1 290 2 181 1 149 2 291 7 248 1 33 9 313 1 348 5 13 5 295 2 111 3 36 2 235 2 114 6 142 8 324 1 143 3 
261 4 244 1 95 1 68 1 122 2 147 1 71 1 6 1 307 2 74 3 338 2 290 1 149 1 291 2 248 1 33 3 348 3 295 1 139 1 111 1 36 1 235 1 355 1 114 2 142 3 143 1 
261 7 40 1 244 2 95 1 68 2 122 3 147 1 71 2 6 2 307 4 148 1 74 4 309 1 338 4 290 1 149 1 291 3 248 1 33 4 348 4 295 1 139 2 111 2 36 1 235 1 114 4 355 1 142 5 143 2 
155 1 237 1 97 1 
325 1 155 1 
177 1 
155 1 232 1 
177 1 155 2 226 1 232 1 316 1 3 1 97 2 
155 1 226 1 232 1 
346 1 155 1 
329 7 193 3 58 4 111 1 71 1 112 1 264 3 73 1 321 1 49 2 84 1 85 1 75 1 11 2 76 1 292 1 283 1 
329 7 193 3 58 4 111 1 71 1 112 1 264 3 73 1 321 1 49 2 84 1 85 1 75 1 11 2 76 1 292 1 283 1 
329 7 193 3 58 4 111 1 71 1 112 1 264 3 73 1 321 1 49 2 84 1 85 1 75 1 11 2 76 1 292 1 242 1 283 1 
326 1 329 31 244 3 193 10 69 2 71 4 6 3 264 15 73 2 337 1 288 3 49 3 104 1 75 2 205 1 11 5 76 1 292 2 212 1 134 1 294 1 351 1 58 16 111 4 274 1 112 2 37 1 321 1 171 4 84 5 85 1 38 1 283 1 143 3 
326 2 329 9 193 4 69 4 71 1 73 1 264 4 49 2 104 2 310 1 75 1 205 1 11 3 292 1 76 1 314 1 294 2 58 5 111 1 37 2 112 1 321 1 84 1 85 1 
21 1 224 1 92 1 328 1 330 1 2 1 44 1 245 1 98 2 200 2 267 1 50 1 341 2 210 1 345 1 109 1 80 1 135 1 214 1 151 1 296 1 152 1 140 1 16 1 236 1 172 1 115 1 188 1 116 1 189 1 
21 1 262 1 92 1 328 1 330 1 2 1 44 1 245 1 98 3 200 2 308 1 267 1 50 1 341 3 210 1 345 1 109 1 80 1 214 1 151 1 296 1 152 1 140 1 16 1 236 2 172 1 115 1 116 1 189 1 59 1 
21 1 262 1 328 1 2 1 44 1 98 2 200 2 267 1 50 1 341 2 210 1 109 1 80 1 214 1 151 1 296 1 152 1 140 1 16 1 236 2 172 1 115 1 116 1 189 1 59 1 
23 1 192 1 0 1 330 1 44 2 98 1 308 1 50 2 341 1 210 1 345 1 79 1 214 2 253 1 232 1 296 2 152 1 113 1 155 1 172 1 115 1 116 1 241 1 
21 1 92 1 330 1 2 1 44 1 245 1 98 1 200 2 50 1 341 1 210 1 345 1 109 1 80 1 135 1 214 1 151 1 296 1 152 1 140 1 172 1 115 1 188 1 116 1 189 1 59 1 
153 1 
43 2 178 5 99 1 263 1 266 2 52 1 105 1 149 1 269 2 182 1 270 1 313 2 57 1 282 1 120 1 194 1 122 2 24 1 74 4 201 1 247 1 130 1 128 1 338 1 290 1 206 3 248 1 31 3 78 5 32 1 33 4 136 1 348 1 250 3 252 1 216 1 295 1 35 2 220 1 221 1 142 1 174 1 
120 1 43 2 194 1 122 2 24 1 178 5 99 1 263 1 74 4 266 2 201 1 338 1 128 1 130 1 247 1 290 1 52 1 269 2 149 1 105 1 206 3 270 1 182 1 248 1 78 5 31 3 32 1 33 4 313 2 136 1 57 1 348 1 252 1 250 3 216 1 295 1 35 2 220 1 282 1 221 1 142 1 174 1 
261 2 62 1 120 1 194 1 24 1 46 2 178 4 99 1 101 2 263 1 74 4 266 2 338 1 128 1 247 1 130 1 290 1 52 1 206 2 269 2 149 1 105 1 270 1 182 1 248 1 31 2 78 4 32 1 33 4 313 2 136 1 348 1 250 2 252 1 295 1 221 1 117 1 142 1 174 1 
261 2 43 2 4 1 178 6 99 1 263 1 266 2 52 1 269 2 149 1 105 1 270 1 182 1 313 3 232 1 152 2 235 1 155 1 115 2 116 1 239 1 62 1 23 1 120 1 192 2 194 1 122 2 24 1 72 1 74 5 201 1 338 2 128 1 247 1 130 1 290 1 206 2 248 1 31 2 210 2 78 4 32 1 79 1 33 5 136 1 348 2 250 2 252 1 295 1 218 1 35 2 172 1 221 1 142 2 174 1 
33 3 313 1 136 1 120 1 252 1 194 1 178 2 99 1 263 1 141 1 74 3 247 1 130 1 52 1 105 1 221 1 182 1 270 1 31 1 78 2 174 1 32 1 
33 3 313 1 136 1 120 1 348 1 252 1 194 1 178 1 99 1 263 1 141 1 74 3 247 1 130 1 52 1 206 1 105 1 221 1 182 1 270 1 248 1 78 3 174 1 32 1 
120 1 194 1 178 2 99 1 263 1 74 3 130 1 247 1 52 1 105 1 206 1 270 1 182 1 248 1 78 3 31 1 32 1 33 3 313 1 136 1 252 1 250 1 348 1 141 1 221 1 174 1 
301 1 43 2 178 7 99 1 263 1 266 2 52 1 105 1 149 1 269 2 182 1 270 1 313 3 57 1 282 1 120 1 194 1 122 2 24 1 74 5 201 1 130 1 247 1 128 1 338 1 290 1 206 4 248 5 31 4 78 6 32 1 33 5 136 1 250 4 252 1 348 5 216 1 295 1 35 2 141 1 220 1 221 1 142 1 174 1 
261 2 43 2 178 4 99 1 263 1 266 2 52 1 105 1 149 1 269 2 182 1 270 1 313 2 62 1 120 1 194 1 122 2 24 1 74 4 201 1 130 1 247 1 128 1 338 1 290 1 206 2 248 1 78 4 31 2 32 1 33 4 136 1 252 1 250 2 348 2 295 1 35 2 221 1 142 1 174 1 
120 1 43 2 194 1 122 2 24 1 178 4 99 1 263 1 74 4 266 2 201 1 338 1 130 1 247 1 128 1 290 1 52 1 206 2 269 2 105 1 149 1 270 1 182 1 248 1 31 2 78 4 32 1 33 4 313 2 136 1 57 1 348 1 250 2 252 1 216 1 295 1 35 2 221 1 282 1 142 1 174 1 
120 1 43 2 194 1 122 2 24 1 178 4 99 1 263 1 74 4 266 2 201 1 338 1 130 1 247 1 128 1 290 1 52 1 206 2 269 2 105 1 149 1 270 1 182 1 248 1 31 2 78 4 32 1 33 4 313 2 136 1 57 1 348 1 250 2 252 1 216 1 295 1 35 2 221 1 282 1 142 1 174 1 
261 2 120 1 194 1 24 1 46 2 178 4 99 1 101 2 263 1 74 4 266 2 338 1 130 1 247 1 128 1 290 1 52 1 206 2 269 2 105 1 149 1 270 1 182 1 248 1 31 2 78 4 32 1 33 4 313 2 136 1 348 1 250 2 252 1 186 1 216 1 295 1 83 1 117 1 221 1 142 1 174 1 
326 1 329 6 193 2 69 2 71 1 264 3 49 1 104 1 11 2 292 1 76 1 132 1 294 1 349 1 58 3 111 1 112 1 37 1 320 1 321 1 237 1 238 1 85 1 280 1 281 2 259 1 
41 1 326 2 91 1 329 14 244 2 193 2 69 4 71 1 6 2 127 1 264 6 288 3 337 1 104 2 11 1 132 11 56 1 294 2 349 11 34 1 255 1 58 8 111 2 274 1 299 1 37 2 320 2 171 3 84 1 238 4 281 1 280 1 143 1 
326 1 41 1 63 1 226 1 192 1 329 2 69 2 127 1 264 1 48 1 166 1 130 2 247 2 129 1 104 1 268 1 342 1 210 1 136 1 294 1 232 1 350 1 152 1 58 1 299 1 320 1 37 1 155 1 323 1 172 1 115 1 116 1 238 1 281 1 280 1 240 1 61 1 19 1 
41 1 226 2 303 1 45 2 6 2 264 10 48 2 49 1 104 3 180 2 11 4 183 1 232 2 152 3 58 10 111 3 112 1 320 3 321 1 155 2 323 2 115 3 116 2 238 7 59 1 281 2 240 1 280 3 326 3 63 1 192 1 329 20 244 2 193 8 69 6 163 2 164 1 125 2 71 3 127 1 166 2 129 1 247 3 130 3 76 1 292 1 210 3 132 7 136 1 251 2 294 3 349 7 350 1 299 1 37 3 172 2 84 4 85 1 143 2 
191 1 326 2 41 1 224 1 63 1 162 1 23 1 327 1 192 2 329 2 69 4 127 1 264 1 130 1 247 1 104 2 28 1 210 8 79 1 136 1 294 2 232 2 350 1 152 7 58 1 37 2 320 2 155 3 322 1 17 2 172 2 115 8 116 2 278 1 59 1 157 1 240 1 280 2 259 1 
326 1 63 1 244 1 329 3 193 1 69 2 71 1 6 1 264 2 103 1 247 1 130 1 104 1 11 1 132 1 136 1 293 1 349 1 294 1 350 1 58 1 111 1 299 1 37 1 320 1 156 1 238 1 280 1 143 1 
326 1 349 1 294 1 329 2 244 1 193 1 69 2 228 1 58 2 111 1 320 1 37 1 84 1 104 1 238 1 280 1 259 1 132 1 
326 1 349 1 294 1 329 2 193 1 69 2 71 1 320 1 37 1 100 1 264 2 104 1 238 1 11 1 280 1 259 1 143 1 132 1 
326 1 244 1 329 4 193 2 69 2 71 1 6 1 264 2 104 1 11 1 132 2 294 1 349 2 58 2 111 1 37 1 320 1 84 1 238 2 280 1 259 1 143 1 
326 1 162 1 349 1 294 1 329 2 244 1 193 1 69 2 228 1 58 2 111 1 320 1 37 1 84 1 104 1 238 1 280 1 132 1 
326 1 162 1 349 1 294 1 329 2 193 1 69 2 71 1 320 1 37 1 100 1 264 2 104 1 238 1 11 1 280 1 143 1 132 1 
326 1 162 1 244 1 329 4 193 2 69 2 71 1 6 1 264 2 104 1 11 1 132 2 294 1 349 2 58 2 111 1 37 1 320 1 84 1 238 2 280 1 143 1 
326 1 349 2 294 1 244 1 329 4 193 2 69 2 58 2 111 1 71 1 320 1 37 1 6 1 264 2 84 1 104 1 238 2 11 1 280 1 143 1 132 2 
41 1 326 1 226 1 329 2 192 1 69 2 127 1 264 1 48 1 166 1 247 1 130 1 180 1 104 1 210 1 294 1 232 1 58 1 152 1 320 1 37 1 155 1 323 1 172 1 115 1 116 1 281 1 280 1 
41 1 326 1 226 1 329 2 192 1 69 2 127 1 264 1 247 1 130 1 104 1 107 1 210 1 249 1 294 1 232 1 272 1 58 1 152 1 320 1 37 1 155 1 323 1 172 1 115 1 116 1 281 1 280 1 
326 1 244 1 329 4 193 2 69 2 71 1 6 1 264 2 104 1 11 1 132 2 294 1 349 2 58 2 111 1 299 1 37 1 320 1 84 1 238 2 280 1 143 1 
326 1 224 1 226 1 329 4 244 1 193 2 69 2 45 1 71 1 6 1 264 2 48 1 166 1 247 1 130 1 180 1 104 1 11 1 210 1 132 2 349 2 294 1 232 1 58 2 152 1 111 1 320 1 37 1 155 1 84 1 323 1 172 1 115 1 238 2 116 1 280 1 143 1 
326 1 225 1 63 1 244 1 329 3 193 1 69 2 71 1 6 1 264 1 103 1 247 1 130 1 104 1 132 1 136 1 294 1 349 1 350 1 58 2 111 1 299 1 37 1 320 1 156 1 84 1 238 1 280 1 143 1 
326 2 94 1 329 19 244 3 193 6 69 4 5 1 71 3 6 3 264 10 288 1 337 1 203 2 104 2 344 1 11 3 110 1 314 1 294 2 254 1 58 9 297 2 111 3 274 1 275 1 37 2 171 2 84 3 39 1 143 3 
326 3 94 1 329 26 244 3 193 4 69 6 5 2 71 2 6 3 264 12 265 1 288 2 203 1 104 3 29 1 205 2 344 1 11 2 110 2 314 1 294 3 167 1 58 14 297 4 257 1 111 3 274 2 275 1 37 3 171 2 84 2 284 1 143 2 145 1 
326 3 94 1 329 41 244 4 193 8 69 6 5 1 305 1 71 5 6 4 264 21 265 1 49 1 288 3 337 1 203 1 104 3 29 1 205 1 344 1 11 4 76 1 292 1 110 2 314 1 294 3 167 1 58 20 257 1 297 4 111 5 274 3 112 1 275 1 37 3 321 1 171 4 84 4 85 1 39 1 284 1 143 4 145 1 
326 4 94 1 329 38 244 4 193 7 69 8 5 1 305 1 71 4 6 4 264 18 265 1 49 1 288 3 337 1 203 1 104 4 29 1 205 2 344 1 11 4 76 1 292 1 110 2 314 1 294 4 167 1 58 20 257 1 297 4 111 5 274 3 112 1 275 1 37 4 321 1 171 4 84 3 85 1 39 1 284 1 143 3 145 1 
326 2 94 1 329 52 244 7 193 14 69 4 5 1 71 8 6 7 264 25 265 1 49 1 288 4 337 2 203 1 104 2 205 1 29 1 344 1 11 7 76 1 292 1 110 1 314 1 294 2 167 1 255 2 58 27 257 1 297 4 111 8 274 2 112 1 275 1 37 2 321 1 171 4 84 7 85 1 284 1 143 7 145 1 
326 1 41 1 327 1 329 2 69 2 8 1 127 1 264 1 130 2 247 2 104 1 204 1 210 2 136 2 294 1 232 1 231 1 58 1 152 2 299 1 320 1 37 1 155 1 154 1 322 1 17 2 172 1 115 2 116 1 280 1 158 1 
109 1 21 1 161 1 224 1 151 1 92 1 2 1 152 2 96 1 140 1 200 2 172 1 50 1 115 2 189 1 116 1 59 1 208 1 210 2 
109 1 21 1 151 1 92 1 2 1 152 1 332 1 96 1 140 1 200 2 50 1 172 1 115 1 189 1 116 1 59 1 210 1 
79 1 23 1 232 1 192 1 253 1 152 1 155 1 172 1 50 1 202 1 115 1 116 1 208 1 210 1 
109 1 21 1 161 1 151 1 92 1 2 1 152 1 96 1 140 1 200 2 172 1 50 1 115 1 189 1 116 1 59 1 208 1 210 1 
222 1 
326 1 63 2 226 1 329 1 192 1 69 2 124 1 127 1 264 1 246 1 166 1 48 1 130 3 247 3 104 1 180 1 210 1 136 2 294 1 232 1 350 2 152 1 37 1 320 1 155 1 156 2 172 1 323 1 115 1 116 1 281 1 280 1 
261 4 348 4 295 1 122 2 218 1 307 2 235 1 114 2 49 1 338 2 128 1 290 1 149 1 142 1 248 2 
119 1 338 1 237 1 348 1 142 1 248 1 300 1 
261 1 43 1 122 1 178 1 74 1 201 1 338 1 128 1 290 1 149 1 248 1 33 1 313 1 348 2 295 1 35 1 142 1 
261 12 224 1 226 3 3 1 97 2 178 5 6 2 47 2 307 6 10 1 149 4 53 2 184 1 313 3 232 3 152 3 111 2 235 2 155 10 114 6 18 1 115 3 116 3 119 1 325 3 192 1 244 2 331 1 163 2 122 6 25 2 126 2 71 2 199 2 74 5 128 4 338 8 290 4 27 2 207 1 248 2 209 2 210 3 211 2 346 2 33 5 348 8 295 4 218 1 172 4 142 9 300 1 143 2 174 2 
261 6 244 2 1 1 122 3 178 1 71 2 6 2 307 5 265 1 74 1 128 2 288 1 338 5 290 2 29 1 149 2 53 1 248 2 211 2 33 1 313 1 348 5 230 1 167 1 295 2 218 1 257 1 111 2 274 1 235 1 114 5 171 1 142 8 143 2 145 1 
63 1 66 1 124 1 71 1 335 1 74 1 130 1 247 1 128 1 338 2 290 1 311 1 149 1 53 1 292 1 76 1 211 2 271 1 33 1 136 1 295 1 350 1 111 2 112 1 156 1 221 1 282 1 142 2 
119 1 338 1 128 1 348 1 290 1 295 1 149 1 142 1 248 1 300 1 
261 10 348 5 244 2 163 1 122 5 111 2 71 2 6 2 307 5 114 5 338 5 53 1 142 5 143 2 211 2 
74 1 33 1 313 1 348 1 248 1 178 1 
23 1 192 2 4 1 147 1 178 4 72 1 74 3 128 1 338 2 290 2 10 1 149 2 210 4 133 1 79 1 33 3 313 2 232 1 295 2 152 4 218 2 82 1 235 2 155 1 18 2 172 1 115 4 116 1 142 2 
276 1 146 1 81 1 
276 1 146 1 81 1 
276 1 146 1 233 1 195 1 60 1 
276 1 146 1 81 1 
276 1 146 1 343 1 
276 1 146 1 343 1 
276 1 146 1 343 1 
276 1 146 1 
86 1 54 1 
326 2 294 2 329 8 193 3 58 4 69 4 111 1 71 1 37 2 112 1 264 4 321 1 49 1 84 1 104 2 85 1 205 1 11 2 76 1 292 1 
329 6 193 2 58 3 111 1 71 1 112 1 264 3 321 1 49 1 237 1 85 1 11 2 292 1 76 1 
326 1 294 1 244 1 329 4 193 2 69 2 58 2 111 1 71 1 37 1 6 1 264 2 358 1 104 1 84 1 11 1 143 1 
329 7 244 1 193 2 58 3 111 1 71 1 274 1 6 1 264 4 171 2 288 1 337 1 84 1 11 1 143 1 
326 2 244 2 329 23 193 9 69 4 71 3 198 1 6 2 264 12 49 1 337 1 288 2 104 2 205 2 11 5 76 1 292 2 294 2 34 1 255 1 58 11 111 3 112 2 37 2 321 1 171 2 84 4 85 1 143 2 
264 1 171 1 329 1 
288 1 329 1 58 1 
326 1 294 1 329 6 244 1 193 3 69 2 163 1 58 3 111 1 71 1 37 1 6 1 264 3 358 1 104 1 84 1 11 2 143 1 
326 1 329 12 244 2 193 2 69 2 71 2 6 2 264 6 265 1 288 1 104 1 29 1 11 1 314 1 294 1 167 1 58 6 257 1 111 2 274 1 37 1 171 1 84 1 143 2 145 1 
329 6 193 2 58 3 111 1 71 1 112 1 264 3 84 1 11 1 76 1 292 1 
326 1 294 1 329 3 193 2 58 1 69 2 198 1 112 1 37 1 264 2 321 1 84 1 104 1 85 1 205 1 11 1 292 1 
271 1 326 1 314 1 294 1 329 10 193 5 69 2 58 5 111 2 71 2 37 1 112 2 264 5 104 1 84 2 11 3 292 2 76 1 
326 1 314 1 294 1 244 1 329 2 193 1 69 2 58 2 111 1 37 1 104 1 84 1 
326 1 314 1 294 1 244 1 329 4 193 2 69 2 58 2 111 1 71 1 37 1 6 1 264 2 104 1 84 1 11 1 143 1 
326 3 314 1 294 3 329 3 193 2 69 6 58 1 198 1 37 3 112 1 264 2 104 3 84 1 205 1 11 1 292 1 39 1 
326 5 329 34 244 3 193 12 69 10 198 1 71 5 6 3 264 18 49 1 288 3 337 1 104 5 205 2 11 7 76 2 292 3 134 1 314 1 294 5 351 1 58 16 111 5 274 1 112 3 37 5 321 1 171 4 358 1 84 5 85 1 38 1 39 1 143 3 
326 1 329 8 193 2 69 2 71 1 264 4 49 1 288 1 104 1 11 2 292 1 76 1 314 1 294 1 167 1 58 4 111 1 274 1 37 1 112 1 321 1 171 1 85 1 
326 2 329 11 244 1 193 3 69 4 71 1 6 1 264 5 49 1 288 1 337 1 104 2 11 2 76 1 292 1 314 1 294 2 167 1 58 6 111 2 274 1 112 1 37 2 321 1 171 2 358 1 84 1 85 1 
326 3 329 19 244 2 193 4 69 6 71 3 6 2 264 10 265 1 49 1 288 1 104 3 29 1 205 1 11 3 76 1 292 1 314 1 294 3 167 1 58 9 257 1 111 3 274 1 112 1 37 3 321 1 358 1 171 1 84 1 85 1 143 2 145 1 
326 3 329 17 244 2 193 5 69 6 71 2 6 2 264 7 265 1 49 1 288 1 104 3 205 1 29 1 11 3 76 1 292 1 314 1 294 3 167 1 58 10 257 1 111 3 274 1 112 1 37 3 321 1 358 1 171 1 84 2 85 1 143 1 145 1 
326 1 329 8 193 2 69 2 71 1 264 4 49 1 288 1 104 1 11 2 292 1 76 1 314 1 294 1 167 1 58 4 111 1 274 1 37 1 112 1 321 1 171 1 85 1 
326 1 329 12 244 2 193 2 69 2 71 2 6 2 264 6 265 1 288 1 104 1 29 1 11 1 314 1 294 1 167 1 58 6 257 1 111 2 274 1 37 1 171 1 84 1 143 2 145 1 
326 4 329 18 244 2 193 5 69 8 71 2 6 2 264 8 265 1 49 1 288 1 104 4 29 1 205 2 11 3 76 1 292 1 314 1 294 4 167 1 58 10 257 1 111 3 274 1 112 1 37 4 321 1 171 1 358 1 84 2 85 1 143 1 145 1 
326 4 329 16 244 3 193 6 69 8 71 2 6 3 264 7 265 1 288 1 104 4 29 1 205 2 11 3 314 1 294 4 167 1 58 9 257 1 111 3 274 1 37 4 171 1 84 3 39 1 143 2 145 1 
329 7 193 6 58 3 111 1 71 1 112 3 264 4 321 1 84 3 85 2 11 3 292 3 76 1 
326 4 329 18 244 2 193 4 69 8 71 2 6 2 264 8 265 1 49 1 288 1 104 4 29 1 205 2 11 3 76 1 292 1 314 1 294 4 167 1 58 10 257 1 111 3 274 1 112 1 37 4 321 1 171 1 84 1 85 1 39 1 143 1 145 1 
136 1 357 1 130 1 247 1 105 1 138 1 281 1 
136 1 168 1 138 1 304 1 15 1 357 1 247 1 130 1 105 1 281 1 260 1 144 1 
79 1 155 1 23 1 237 1 172 1 115 1 116 1 232 1 192 1 152 1 210 1 
136 1 63 1 226 1 232 1 192 1 350 1 152 1 155 1 48 1 247 2 130 2 323 1 172 1 115 1 116 1 281 1 240 1 210 1 
63 2 226 2 199 1 48 1 130 2 247 2 52 1 182 1 210 1 346 1 136 2 232 2 350 1 152 1 155 3 18 1 172 1 323 1 115 1 116 1 281 1 240 1 221 1 
63 2 226 2 196 1 199 1 130 2 247 2 52 1 182 1 210 2 346 1 136 2 272 1 232 2 350 1 152 2 155 3 18 1 172 1 323 1 115 2 116 1 281 1 240 1 221 1 
325 1 226 1 192 1 196 1 97 1 178 1 199 1 287 1 74 2 248 1 210 3 346 1 33 2 348 1 232 1 152 3 155 4 18 1 172 1 115 3 116 1 87 1 174 1 
346 1 325 1 33 2 348 1 226 1 192 1 232 1 196 1 152 3 97 1 178 1 199 1 74 2 155 4 172 1 18 1 115 3 116 1 248 1 209 1 210 3 174 1 
172 1 115 1 116 1 28 1 152 1 210 1 
191 1 224 1 327 1 226 1 192 2 232 2 152 6 3 1 234 1 353 1 155 3 277 1 17 1 172 3 115 7 116 2 28 1 278 1 59 1 157 1 210 7 
224 1 226 1 45 1 8 1 264 3 48 1 49 1 180 1 104 2 11 2 232 1 152 1 58 3 111 1 320 2 112 1 155 1 321 1 323 1 115 1 238 1 116 1 240 1 280 2 281 2 326 2 63 1 329 6 193 2 69 4 125 1 71 1 166 1 247 2 130 2 292 1 76 1 210 1 132 1 136 1 294 2 349 1 350 1 299 1 37 2 172 1 85 1 
119 1 325 1 192 1 97 1 126 1 178 2 47 1 74 3 338 1 128 2 290 2 10 1 27 1 149 2 291 1 248 1 209 1 210 1 33 3 313 1 348 1 295 2 152 1 155 2 115 1 142 1 300 1 174 1 
184 1 224 1 226 1 232 1 152 2 3 1 97 1 155 2 172 2 115 2 116 1 28 1 210 2 
79 1 224 1 23 1 192 1 232 1 121 1 196 1 152 4 155 1 172 1 115 4 116 1 210 4 
226 1 232 1 14 1 152 2 353 1 155 1 277 1 336 1 18 1 172 2 115 2 116 1 210 2 183 1 
200 1 172 1 151 1 115 1 189 1 116 1 192 1 2 1 152 1 210 1 
224 1 327 1 232 1 152 2 155 1 172 1 115 2 204 1 116 1 59 1 210 2 
79 1 191 1 224 1 23 1 327 1 192 1 232 2 121 1 152 4 155 3 18 1 172 2 115 5 116 2 157 1 210 5 
79 1 224 1 23 1 327 1 192 1 232 2 121 1 152 4 334 1 155 3 18 1 172 2 115 5 116 2 157 1 210 5 
136 1 63 1 226 1 232 1 192 1 272 1 350 1 152 1 155 1 247 2 130 2 323 1 172 1 115 1 116 1 281 1 240 1 210 1 
226 1 232 1 152 1 3 1 234 1 353 1 155 1 277 1 18 1 172 2 115 1 116 1 210 1 
281 1 319 1 88 1 352 1 26 1 
20 1 22 1 33 2 348 1 252 1 217 1 256 1 319 2 26 2 352 2 74 2 52 1 281 1 221 1 182 1 291 1 248 1 88 1 174 1 
154 1 136 1 130 1 247 1 231 1 158 1 88 1 319 1 26 1 
217 1 256 1 88 1 
135 1 328 1 330 1 98 3 236 1 16 1 179 1 267 1 340 1 341 3 345 1 
356 1 219 1 267 1 175 1 
16 1 267 1 
16 1 237 1 267 1 328 1 
98 1 16 1 267 1 328 1 341 1 330 1 345 1 
98 1 214 1 296 1 
98 3 16 1 347 1 135 1 243 1 267 1 328 1 340 2 341 3 330 1 169 1 345 1 
98 2 213 1 16 1 236 1 267 1 328 1 341 2 330 1 345 1 
135 1 151 1 330 1 140 1 98 1 200 1 267 1 131 1 341 1 345 1 175 1 
98 1 16 1 135 1 267 1 341 1 330 1 345 1 
98 1 16 2 135 1 328 1 341 1 330 1 345 1 
190 1 135 1 330 2 197 1 98 2 16 1 267 1 341 2 159 1 345 2 
135 1 328 1 330 1 98 3 16 1 236 2 356 1 179 1 267 2 341 3 30 1 345 1 175 1 
223 1 21 1 135 1 151 1 328 1 330 1 140 1 98 2 16 1 236 1 200 2 267 1 189 1 341 2 345 1 
213 1 135 1 215 1 328 1 330 2 98 4 16 1 236 2 356 1 267 2 341 4 345 2 175 1 
98 1 16 1 135 1 267 1 328 1 341 1 330 1 345 1 
347 1 243 1 328 2 330 1 98 4 16 2 236 2 356 1 219 1 267 3 340 1 341 4 345 1 175 1 
135 1 302 1 328 1 330 1 98 2 7 1 16 1 236 1 267 1 341 2 106 1 345 1 
98 3 16 1 347 2 135 1 243 1 267 1 328 1 340 2 341 3 330 1 173 1 345 1 
150 1 64 1 267 2 258 2 
98 1 229 1 135 1 341 1 330 1 345 1 
98 2 16 1 236 1 179 1 135 1 267 1 328 1 341 2 330 1 345 1 
318 1 
98 1 16 1 135 1 267 1 328 1 341 1 330 1 345 1 

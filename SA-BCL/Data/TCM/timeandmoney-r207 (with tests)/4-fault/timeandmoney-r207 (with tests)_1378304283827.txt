#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (19,161,324) (19,161,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (19,161,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (19,161,324) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (13,30) (13,30) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (19,161,324) (19,161,324) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 172 370 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 124 370 60 199 327 375 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 124 370 60 199 327 375 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 124 370 60 199 327 375 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 124 370 60 199 327 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 124 370 60 199 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 1 278 2 97 1 258 4 279 9 3 1 69 2 47 1 240 3 315 1 75 2 80 1 10 1 112 1 368 1 35 9 128 1 154 1 371 1 348 2 131 1 91 5 16 1 296 6 351 2 251 1 221 2 300 2 
355 1 278 2 97 1 258 4 279 9 3 1 69 2 47 1 240 3 315 1 75 2 80 1 10 1 112 1 368 1 35 9 128 1 154 1 371 1 348 2 131 1 91 5 16 1 296 6 351 2 251 1 221 2 300 2 
355 1 278 2 97 1 258 5 279 10 3 1 69 2 47 1 240 4 315 1 75 2 80 1 10 1 112 1 368 1 35 10 128 1 154 1 371 1 348 2 131 1 91 6 16 1 296 7 351 2 251 1 221 2 300 2 
355 1 278 2 258 3 279 7 3 1 69 2 47 1 240 2 315 1 75 1 80 1 10 1 112 1 368 1 35 7 128 1 154 1 371 1 348 2 131 1 91 4 16 1 296 4 351 2 251 1 221 2 300 2 
278 1 10 1 112 1 97 1 35 4 258 2 279 4 3 1 69 1 348 1 47 1 91 3 296 3 351 1 240 1 315 1 300 1 75 2 
355 1 10 1 368 1 35 2 279 2 3 1 45 1 69 1 14 1 348 1 91 1 351 1 221 1 315 1 300 1 62 1 
80 1 10 1 35 3 258 1 279 3 3 1 69 2 91 2 296 1 351 2 240 1 221 1 315 1 
278 1 97 1 258 4 279 9 25 1 3 1 69 2 47 1 233 1 240 3 315 1 75 2 80 1 10 1 112 1 35 9 154 1 371 1 348 1 91 5 296 7 351 2 221 1 300 1 
278 1 97 1 258 4 279 9 25 1 3 1 69 2 47 1 233 1 240 3 315 1 75 2 80 1 10 1 112 1 35 9 154 1 371 1 348 1 91 5 296 7 351 2 221 1 300 1 
201 1 102 1 149 1 
197 1 307 2 201 1 
247 2 282 1 179 2 177 2 320 2 137 2 168 2 215 1 
358 1 357 1 143 1 24 1 168 2 232 1 282 1 363 1 235 2 4 1 147 2 5 1 242 1 148 1 342 2 215 1 7 2 78 1 191 1 195 1 177 2 320 3 153 1 152 1 56 1 345 1 349 1 116 1 247 3 89 1 179 2 328 2 137 2 223 1 376 1 301 1 160 1 
354 1 295 1 247 1 179 1 21 1 177 1 320 1 137 1 168 1 215 1 
253 1 289 1 320 1 100 1 201 1 168 1 247 1 295 1 48 1 236 1 50 1 65 1 149 1 267 1 
253 1 289 2 177 1 100 2 320 1 201 1 168 1 247 1 295 1 179 1 48 1 137 1 50 1 149 1 267 1 
193 1 289 1 100 1 118 1 37 1 
193 1 194 1 289 2 100 2 201 1 37 1 149 1 325 1 
193 1 289 1 100 1 
354 1 289 1 21 1 177 1 100 1 320 1 168 1 37 1 295 1 247 1 179 1 137 1 204 1 215 1 
201 1 
193 1 289 2 100 2 309 1 201 1 37 1 149 1 325 1 
193 2 289 5 81 1 100 5 209 1 201 1 43 1 87 1 37 2 325 1 26 1 106 1 136 1 264 2 180 1 265 2 29 1 76 2 149 1 
282 1 102 1 
247 2 282 2 179 1 270 1 34 1 177 1 137 1 320 2 168 2 
79 1 366 1 36 1 
357 1 195 1 320 1 152 1 24 1 349 1 116 1 247 1 282 1 235 1 4 1 250 1 148 1 342 1 301 1 7 1 
270 1 99 1 177 4 320 5 168 5 86 1 247 5 274 1 282 1 27 2 179 1 137 4 224 1 65 1 
354 1 295 1 247 2 286 1 177 2 320 2 137 2 168 2 
357 1 195 1 177 1 320 2 152 1 36 1 24 1 168 1 86 1 349 1 116 1 247 2 4 1 27 1 235 1 137 1 148 1 342 1 301 1 7 1 
247 3 282 1 179 1 27 1 177 3 320 3 137 3 168 3 
354 1 295 1 247 1 177 1 320 1 137 1 168 1 
295 1 247 1 179 1 270 1 34 1 177 1 320 1 137 1 168 1 
253 1 163 1 358 1 357 1 143 1 100 1 24 1 168 3 232 1 282 1 363 1 4 1 27 1 48 1 235 1 147 1 5 1 50 1 242 1 148 1 342 1 266 1 215 1 7 1 267 1 270 1 289 1 195 1 177 3 320 4 152 1 153 1 56 1 86 1 349 1 116 1 247 4 295 1 89 1 179 2 328 2 137 3 223 1 301 1 
247 2 282 1 274 1 27 1 177 1 320 2 137 1 168 2 65 1 
253 1 270 1 289 1 177 3 100 1 320 3 201 1 168 3 86 1 295 1 247 3 90 1 179 1 48 1 27 2 137 3 50 1 266 1 267 1 
366 1 270 1 177 2 320 2 36 1 168 2 247 2 27 1 179 1 137 2 
357 1 195 1 320 1 152 1 24 1 349 1 116 1 247 1 282 1 235 1 4 1 148 1 342 1 301 1 7 1 
357 1 195 1 320 1 152 1 24 1 349 1 116 1 105 1 247 1 282 1 235 1 329 1 148 1 342 1 7 1 
79 2 366 2 358 1 164 1 227 1 288 1 143 1 321 1 36 2 121 1 232 1 123 1 363 1 124 1 49 1 372 1 147 3 328 2 172 1 5 1 242 1 223 1 160 2 
295 1 247 1 177 1 286 1 320 1 137 1 50 1 168 1 
9 1 347 1 
9 1 347 1 
114 1 303 1 
114 1 303 1 
114 1 303 1 
9 1 145 1 347 1 
9 1 369 1 347 1 
9 2 98 1 2 1 114 1 347 2 303 1 
9 1 145 1 347 1 
9 1 145 1 347 1 
9 1 298 1 347 1 
9 1 298 1 347 1 
9 1 298 1 347 1 
119 1 100 1 337 1 230 1 144 1 168 2 313 1 212 1 282 1 73 1 175 1 9 1 318 1 289 1 177 2 320 2 369 1 155 1 347 1 247 2 137 2 297 1 17 1 299 1 
9 2 67 1 318 2 289 2 257 1 198 1 98 1 100 2 337 2 201 1 230 1 85 1 347 2 187 1 313 2 234 1 73 3 17 2 39 2 
278 1 300 1 348 1 
300 1 14 1 348 1 
278 2 134 1 42 1 300 3 63 1 14 1 
278 1 183 1 42 1 300 2 63 1 14 1 
278 1 42 2 300 2 63 1 14 1 
254 2 227 1 307 3 100 5 167 1 170 2 26 1 212 1 124 1 238 2 172 1 264 1 265 1 213 1 76 1 149 1 193 1 245 1 289 5 197 1 129 1 155 1 201 2 370 1 87 2 37 4 325 1 57 1 59 1 297 1 180 2 
66 1 254 6 227 3 209 1 307 9 100 9 361 1 26 1 124 3 238 6 172 3 264 2 265 2 213 2 76 2 149 1 51 1 193 6 289 9 197 3 129 1 201 5 370 3 246 1 87 5 37 7 325 1 275 1 59 2 220 1 297 4 180 6 138 5 118 5 
254 2 227 1 100 3 209 1 307 4 167 1 170 1 124 1 238 2 172 1 264 1 265 1 213 1 76 1 149 1 289 3 197 2 201 3 370 1 87 2 37 2 57 1 59 1 297 1 180 2 
254 4 227 2 307 7 100 4 209 1 361 1 167 1 170 2 124 2 238 4 172 2 264 1 265 1 213 1 76 1 149 1 51 1 289 4 197 3 201 4 370 2 87 3 37 3 57 1 59 1 220 1 297 2 180 4 
195 1 93 1 102 1 
207 1 195 1 
92 1 
349 1 195 1 148 1 
182 1 195 1 
195 1 148 1 
349 1 195 3 93 2 148 1 311 1 277 1 
120 1 227 1 288 3 319 1 343 1 84 1 344 1 294 1 46 1 340 2 104 1 372 2 147 7 5 3 330 1 110 1 160 4 
120 1 227 1 288 3 319 1 343 1 84 1 344 1 294 1 46 1 340 2 104 1 372 2 147 7 5 3 330 1 110 1 160 4 
120 1 227 1 288 3 208 1 319 1 343 1 84 1 344 1 294 1 46 1 340 2 104 1 372 2 147 7 5 3 330 1 110 1 160 4 
120 1 143 1 227 4 280 1 46 2 340 3 104 1 71 1 363 1 124 3 72 1 147 28 5 12 172 3 242 1 110 2 288 10 319 2 33 1 12 3 83 4 343 2 84 1 344 1 370 3 294 5 132 1 372 5 328 2 223 1 330 1 302 1 94 1 160 16 
227 1 143 2 340 2 46 1 104 1 363 2 147 9 5 4 241 1 242 2 110 1 288 4 33 1 319 1 343 1 84 1 344 1 294 1 372 3 328 4 222 1 223 2 330 1 160 5 
161 1 235 1 306 1 35 1 351 1 221 1 279 1 353 1 342 1 3 1 19 1 7 1 69 1 
161 1 126 1 206 1 235 1 296 1 35 2 351 1 221 1 279 2 353 1 342 1 225 1 7 1 69 1 
126 1 235 1 296 1 35 1 221 1 279 1 353 1 342 1 7 1 225 1 324 1 
30 1 206 1 13 1 35 1 279 1 69 1 116 1 235 1 351 1 189 1 221 2 342 1 353 2 7 1 
161 1 126 1 235 1 35 1 351 1 221 1 279 1 353 1 342 1 3 1 19 1 7 1 69 1 
367 1 
333 1 141 1 335 1 100 5 339 2 186 1 103 2 235 2 107 1 48 1 236 1 285 1 50 1 190 1 148 1 342 2 243 2 7 2 149 1 193 6 289 5 195 1 197 2 54 1 201 2 156 1 202 4 350 1 116 2 159 1 247 1 295 1 65 1 253 1 357 1 255 1 307 2 310 1 24 1 168 1 26 1 171 2 264 1 265 1 213 1 76 1 267 1 320 1 272 1 87 2 325 3 326 2 219 2 180 2 332 2 
253 1 335 1 100 3 309 1 168 1 107 1 48 1 236 1 285 1 50 1 267 1 193 2 289 3 54 1 320 1 156 1 202 2 325 1 326 1 247 1 295 1 65 1 
253 1 335 1 100 3 309 1 168 1 107 1 48 1 236 1 285 1 50 1 267 1 149 1 193 1 289 3 54 1 320 1 201 1 156 1 202 3 325 1 247 1 295 1 65 1 332 1 
253 1 335 1 100 3 309 1 168 1 103 1 107 1 48 1 236 1 285 1 50 1 267 1 149 1 193 2 289 3 54 1 320 1 201 1 156 1 202 3 325 1 326 1 247 1 295 1 65 1 332 1 
335 1 100 5 339 2 103 4 48 1 107 1 236 1 285 1 50 1 243 2 149 5 244 1 193 7 289 5 54 1 197 2 292 1 201 5 202 6 156 1 158 1 350 1 295 1 247 1 65 1 253 1 255 1 309 1 166 1 168 1 26 1 171 2 264 1 265 1 76 1 267 1 320 1 87 1 325 3 326 4 219 2 135 1 180 1 332 4 
141 1 335 1 100 4 339 2 103 2 48 1 107 1 236 1 285 1 50 1 243 2 149 1 193 4 289 4 54 1 197 2 201 2 202 4 156 1 350 1 295 1 247 1 65 1 253 1 255 1 307 2 168 1 26 1 171 2 264 1 265 1 76 1 267 1 320 1 87 1 325 2 219 2 326 2 180 1 332 2 
253 1 255 1 335 1 100 4 166 1 168 1 339 2 103 2 26 1 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 243 2 76 1 149 1 267 1 193 4 289 4 197 2 54 1 320 1 201 1 87 1 156 1 202 4 325 2 158 1 326 2 219 2 350 1 247 1 295 1 135 1 180 1 332 2 65 1 
253 1 255 1 335 1 100 4 166 1 168 1 339 2 103 2 26 1 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 243 2 76 1 149 1 267 1 193 4 289 4 197 2 54 1 320 1 201 1 87 1 156 1 202 4 325 2 158 1 326 2 219 2 350 1 247 1 295 1 135 1 180 1 332 2 65 1 
253 1 335 1 307 2 100 4 166 1 168 1 339 2 103 2 26 1 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 76 1 149 1 267 1 193 4 150 2 11 2 289 4 127 1 196 1 54 1 320 1 201 1 87 1 156 1 202 4 325 2 326 2 350 1 247 1 295 1 180 1 374 1 332 2 65 1 
253 1 255 1 335 1 100 4 166 1 168 1 339 2 26 1 103 3 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 243 2 76 1 149 1 267 1 193 5 289 4 197 2 54 1 320 1 292 1 201 1 87 1 156 1 202 5 325 2 158 1 219 2 350 1 326 3 247 1 295 1 135 1 180 1 65 1 332 3 
253 1 255 1 335 1 100 4 166 1 168 1 339 2 26 1 103 3 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 243 2 76 1 149 1 267 1 193 5 289 4 197 2 54 1 320 1 292 1 201 1 87 1 156 1 202 5 325 2 158 1 219 2 350 1 326 3 247 1 295 1 135 1 180 1 65 1 332 3 
141 1 253 1 335 1 307 2 100 4 168 1 339 2 103 2 26 1 171 2 107 1 48 1 236 1 285 1 264 1 50 1 265 1 76 1 149 1 267 1 193 4 150 2 11 2 289 4 54 1 196 1 320 1 201 1 87 1 156 1 202 4 325 2 326 2 350 1 247 1 295 1 180 1 332 2 65 1 
358 1 143 1 227 1 102 1 46 1 340 1 232 1 104 1 363 1 282 2 147 6 5 3 242 1 79 1 366 1 288 2 319 1 321 1 36 1 344 1 84 1 372 2 328 2 223 1 330 1 160 3 
20 1 358 2 143 2 227 2 261 1 312 1 232 1 282 1 363 2 124 2 147 13 5 5 172 1 242 2 287 1 191 1 79 11 366 4 288 2 83 3 290 1 12 3 36 11 56 1 370 2 294 1 132 1 372 1 328 4 223 2 302 1 160 8 
357 1 358 1 143 1 24 1 168 1 231 1 232 1 282 1 363 1 4 1 235 1 27 1 147 2 5 1 148 1 242 1 342 1 287 1 7 1 191 1 366 1 195 1 177 1 320 2 152 1 56 1 86 1 115 1 349 1 116 1 247 2 137 1 328 2 250 1 18 1 223 1 301 1 160 1 
143 3 227 3 340 1 46 1 232 3 104 1 282 2 283 2 235 3 4 2 147 18 5 8 242 3 148 2 342 3 287 1 7 3 191 1 288 8 195 2 153 2 152 2 344 1 56 1 294 4 349 2 116 1 247 3 249 2 301 2 160 10 358 3 357 2 24 2 168 1 210 1 263 2 122 2 363 3 27 1 124 2 172 2 79 7 126 1 366 7 319 1 177 1 320 3 178 1 217 1 84 1 36 7 86 1 370 2 372 4 328 6 137 1 223 3 330 1 
333 1 356 1 357 2 358 2 306 1 143 2 23 1 24 2 168 1 262 1 232 2 363 2 27 1 235 7 125 1 314 1 147 2 5 1 190 1 242 2 148 2 342 8 7 8 77 1 191 1 126 1 195 3 177 1 321 1 320 1 56 1 116 2 247 1 248 1 137 1 328 4 223 2 376 2 160 1 
358 1 143 1 227 1 168 1 232 1 363 1 124 1 147 2 172 1 5 1 242 1 287 1 79 1 366 1 288 1 270 1 177 1 320 1 36 1 370 1 247 1 179 1 133 1 372 1 328 2 137 1 223 1 160 1 
79 1 366 1 358 1 288 1 143 1 227 1 321 1 36 1 294 1 232 1 363 1 123 1 124 1 147 2 328 2 242 1 223 1 160 2 
79 1 366 1 358 1 288 1 143 1 321 1 36 1 121 1 232 1 363 1 372 1 328 2 147 1 172 1 5 1 242 1 223 1 
358 1 227 1 143 1 232 1 363 1 124 1 147 3 172 1 5 1 242 1 79 2 366 2 288 2 321 1 36 2 370 1 294 1 372 1 328 2 223 1 160 2 
79 1 366 1 358 1 288 1 143 1 227 1 36 1 294 1 232 1 363 1 123 1 124 1 125 1 147 2 328 2 242 1 223 1 160 2 
79 1 366 1 358 1 288 1 143 1 36 1 121 1 232 1 363 1 372 1 125 1 328 2 147 1 172 1 5 1 242 1 223 1 
79 2 366 2 358 1 288 2 143 1 227 1 36 2 370 1 294 1 232 1 363 1 124 1 372 1 125 1 147 3 328 2 5 1 172 1 242 1 223 1 160 2 
79 2 366 2 358 1 288 2 143 1 227 1 36 2 370 1 294 1 232 1 363 1 124 1 372 1 328 2 147 3 5 1 172 1 242 1 223 1 160 2 
357 1 358 1 143 1 24 1 232 1 282 1 363 1 4 1 235 1 147 2 5 1 148 1 242 1 342 1 7 1 191 1 195 1 320 1 152 1 153 1 56 1 349 1 116 1 247 1 328 2 223 1 301 1 160 1 
357 1 358 1 143 1 308 1 24 1 232 1 105 1 282 1 363 1 235 1 147 2 5 1 148 1 242 1 342 1 7 1 191 1 195 1 320 1 152 1 56 1 349 1 116 1 247 1 329 1 328 2 223 1 160 1 
79 2 366 2 358 1 288 2 143 1 227 1 36 2 370 1 294 1 232 1 363 1 124 1 372 1 147 3 328 2 5 1 172 1 242 1 287 1 223 1 160 2 
357 1 358 1 227 1 306 1 143 1 24 1 232 1 363 1 4 1 235 1 124 1 147 3 5 1 172 1 148 1 242 1 342 1 7 1 79 2 366 2 288 2 195 1 320 1 152 1 153 1 36 2 370 1 294 1 349 1 247 1 249 1 372 1 328 2 223 1 301 1 160 2 
358 1 143 1 227 1 168 1 232 1 363 1 124 1 147 3 5 1 172 1 242 1 287 1 52 1 79 1 366 1 270 1 177 1 320 1 36 1 370 1 247 1 179 1 328 2 137 1 223 1 160 2 
359 1 256 1 143 2 227 3 363 2 124 3 147 22 5 10 172 2 241 1 6 1 242 2 74 1 109 1 316 3 288 3 83 4 12 3 199 1 370 3 323 1 294 2 327 1 132 1 372 1 328 4 373 2 60 1 375 1 223 2 302 3 160 12 
359 1 256 1 143 2 227 3 363 2 124 3 147 22 5 10 172 2 241 1 6 1 242 2 74 1 109 1 316 3 288 4 83 4 12 3 199 1 370 3 323 1 294 2 327 1 132 1 372 2 328 4 373 2 60 1 375 1 223 2 302 3 160 12 
20 2 143 1 227 6 340 1 46 1 104 1 363 1 124 5 147 32 5 13 172 4 241 1 242 1 109 1 316 2 288 9 319 1 83 4 12 4 199 1 84 1 344 1 370 5 323 1 294 4 327 1 132 2 372 5 328 2 373 1 60 1 375 1 223 1 330 1 302 2 160 19 
256 2 143 2 227 3 363 2 124 3 147 16 108 1 5 7 172 3 241 1 6 1 242 2 74 1 109 1 316 2 288 6 83 2 12 1 370 3 294 3 327 1 132 1 372 3 328 4 373 1 375 1 223 2 302 1 160 9 
227 1 143 1 12 2 83 2 199 1 370 1 323 1 327 2 363 1 124 1 147 11 328 2 373 2 5 5 241 1 242 1 60 1 223 1 375 1 109 1 302 2 160 6 316 2 
313 1 70 1 9 1 67 1 318 1 98 1 337 1 17 1 85 1 347 1 
369 1 175 1 
313 1 9 1 32 1 318 1 188 1 337 1 17 1 259 1 347 1 
145 1 53 1 
218 1 298 1 2 1 
9 1 67 1 318 1 289 1 257 1 98 1 100 1 337 1 201 1 230 1 85 1 347 1 187 1 313 1 234 1 73 2 17 1 39 1 
9 1 67 1 318 1 289 1 257 1 98 1 100 1 337 1 201 1 230 1 85 1 347 1 187 1 313 1 234 1 73 2 17 1 39 1 
9 1 67 1 318 1 289 1 257 1 98 1 100 1 337 1 201 1 230 1 85 1 347 1 187 1 313 1 234 1 73 2 17 1 39 1 
145 1 53 1 2 1 
145 1 53 1 2 1 
218 1 298 1 
218 1 298 1 2 1 
119 1 299 1 
119 1 257 1 100 1 337 1 144 1 168 2 313 1 212 1 282 1 73 1 175 1 214 1 9 1 318 1 289 1 177 2 320 2 369 1 155 1 347 1 37 1 247 2 297 1 137 2 17 1 299 1 39 1 
96 1 357 1 358 1 143 1 228 1 23 1 41 1 24 1 168 2 232 1 363 1 235 2 341 1 314 1 147 2 5 1 148 1 242 1 342 2 287 1 7 2 191 1 195 1 55 1 320 2 56 1 247 2 328 2 223 1 376 2 160 1 
95 1 162 1 278 1 126 1 216 1 357 1 306 1 165 1 24 1 14 1 68 1 130 1 348 1 134 1 235 2 300 2 342 2 7 2 377 1 
95 1 162 1 278 1 126 1 216 1 357 1 22 1 165 1 24 1 14 1 130 1 348 1 134 1 235 1 300 2 342 1 7 1 
333 1 216 1 357 1 195 1 24 1 346 1 68 1 116 1 235 1 190 1 148 1 342 1 7 1 252 1 
95 1 162 1 278 1 126 1 216 1 357 1 165 1 24 1 14 1 68 1 130 1 348 1 134 1 235 1 300 2 342 1 7 1 377 1 
139 1 
81 1 201 1 180 1 29 1 87 1 102 1 149 1 
255 1 307 1 100 1 26 1 264 1 265 1 243 1 76 1 149 1 193 1 289 1 197 1 201 2 87 1 325 1 219 1 180 1 
140 2 182 2 227 2 100 5 0 2 229 2 235 3 48 2 146 1 238 6 239 2 148 3 342 3 7 3 149 2 192 1 193 5 289 5 195 10 197 6 201 8 157 2 349 3 116 1 58 2 159 1 205 1 357 4 254 6 306 1 207 3 307 12 24 3 311 1 263 2 26 4 211 2 124 2 28 2 264 4 172 2 265 4 213 2 29 1 76 4 81 1 322 1 370 2 87 7 325 3 88 1 93 2 180 8 
226 1 254 4 227 2 307 2 26 1 124 2 238 4 264 1 172 2 265 1 76 1 83 1 197 1 12 1 199 1 201 1 370 2 87 4 323 1 15 1 180 4 60 1 302 1 
354 1 227 2 21 1 336 1 100 1 168 1 46 1 26 1 211 2 104 1 239 1 264 1 265 1 215 1 76 1 289 1 319 1 177 1 320 1 84 1 87 2 295 1 247 1 179 1 135 1 137 1 180 2 204 1 
81 1 201 1 87 1 26 1 264 1 265 1 180 1 29 1 76 1 149 1 
254 5 227 2 197 5 307 10 201 5 370 2 87 3 263 1 211 2 124 2 238 5 239 1 172 2 180 5 
193 1 289 1 100 1 201 1 149 1 325 1 
333 1 357 1 205 1 209 1 100 3 24 1 310 1 186 1 26 1 235 4 264 2 190 1 148 1 265 2 342 4 213 2 7 4 76 2 111 1 193 4 289 3 195 1 322 2 87 2 325 2 116 2 159 2 180 2 61 1 
357 1 358 1 143 1 24 1 168 2 232 1 282 1 363 1 235 1 4 1 147 1 5 1 148 1 242 1 342 1 7 1 215 1 195 1 177 2 320 3 153 1 152 1 56 1 349 1 116 1 247 3 89 1 179 2 328 2 137 2 223 1 301 1 
254 2 197 2 307 4 201 4 87 1 340 1 26 1 159 1 238 2 264 1 180 2 265 1 213 1 76 1 149 2 
362 1 313 1 337 1 
313 1 119 1 337 1 85 1 203 1 
362 1 313 1 337 1 
362 1 313 1 337 1 
313 1 291 1 337 1 
313 1 291 1 337 1 
313 1 291 1 337 1 
313 1 337 1 
9 1 347 1 
227 1 143 1 340 1 46 1 104 1 363 1 147 8 5 4 241 1 242 1 288 2 319 1 12 1 83 1 199 1 84 1 344 1 372 2 328 2 223 1 302 1 330 1 160 4 
143 2 227 2 340 1 46 1 104 1 363 2 124 1 147 11 5 5 241 1 174 1 242 2 288 3 319 1 83 2 12 1 199 1 84 1 344 1 370 1 294 1 132 1 372 2 328 4 223 2 330 1 302 1 160 6 
227 1 143 1 83 1 12 1 199 1 370 1 323 1 363 1 124 1 328 2 147 5 5 2 241 1 242 1 60 1 223 1 302 1 160 3 
227 1 143 1 83 1 12 1 199 1 370 1 323 1 363 1 124 1 328 2 147 5 5 2 241 1 242 1 60 1 223 1 302 1 160 3 
227 1 143 1 340 1 46 1 104 1 363 1 147 8 5 4 241 1 242 1 288 2 319 1 12 1 83 1 199 1 84 1 344 1 372 2 328 2 223 1 302 1 330 1 160 4 
227 1 143 1 83 1 12 1 199 1 370 1 323 1 363 1 124 1 328 2 147 5 5 2 241 1 242 1 60 1 223 1 302 1 160 3 
227 1 143 2 12 1 83 1 199 1 370 1 323 1 363 2 124 1 328 4 147 5 5 2 241 1 174 1 242 2 60 1 223 2 302 1 160 3 
227 1 143 2 12 1 83 1 199 1 370 1 323 1 363 2 124 1 328 4 147 5 5 2 241 1 6 1 242 2 60 1 223 2 302 1 160 3 
288 6 227 1 319 3 84 1 344 2 294 3 46 3 104 1 372 3 147 7 5 4 330 1 160 3 
227 1 143 2 12 1 83 1 199 1 370 1 323 1 363 2 124 1 328 4 147 5 5 2 241 1 6 1 242 2 60 1 223 2 302 1 160 3 
227 1 288 3 143 2 33 1 319 1 84 1 344 1 294 1 340 1 46 1 104 1 363 2 372 2 147 8 328 4 5 4 242 2 223 2 330 1 160 4 
288 2 227 1 319 1 344 1 84 1 102 1 340 1 46 1 104 1 372 2 147 6 5 3 330 1 160 3 
288 2 143 1 227 1 370 1 294 1 363 1 124 1 372 1 328 2 147 3 5 1 172 1 174 1 242 1 223 1 160 2 
227 1 288 2 83 2 12 1 370 1 294 1 132 1 124 1 372 1 147 6 172 1 5 3 302 1 160 3 
20 1 227 3 143 2 312 1 340 1 46 2 104 1 363 2 124 2 147 21 5 10 172 2 242 2 288 9 319 2 33 2 12 2 83 2 84 1 344 1 370 2 294 4 132 1 372 5 328 4 223 2 330 1 160 11 304 1 
83 1 147 1 5 1 
12 1 147 1 160 1 
143 1 227 1 288 3 370 1 294 1 263 1 363 1 124 1 372 2 328 2 147 5 5 2 172 1 174 1 242 1 223 1 160 3 
227 1 143 1 83 1 12 1 199 1 370 1 323 1 363 1 124 1 328 2 147 5 5 2 241 1 242 1 60 1 223 1 302 1 160 3 
227 1 288 2 319 1 84 1 294 1 46 1 104 1 372 1 147 6 5 3 160 3 
288 2 143 1 319 1 33 1 344 1 294 1 46 1 363 1 372 1 147 3 328 2 5 2 242 1 223 1 330 1 160 1 304 1 
143 1 288 5 227 2 319 2 336 1 84 2 294 2 46 2 104 1 363 1 372 3 328 2 147 10 5 5 241 1 242 1 223 1 160 5 
143 1 227 1 288 1 294 1 363 1 124 1 328 2 147 2 241 1 242 1 223 1 160 2 
288 2 143 1 227 1 370 1 294 1 363 1 124 1 372 1 328 2 147 3 5 1 172 1 241 1 242 1 223 1 160 2 
143 3 288 2 33 1 319 1 294 1 46 1 363 3 372 1 147 3 328 6 5 2 241 1 6 1 242 3 223 3 160 1 304 1 
143 5 227 5 340 1 46 3 104 2 71 1 363 5 124 3 72 1 147 31 5 15 172 3 174 1 241 1 6 1 242 5 288 12 319 3 33 2 83 4 12 3 84 2 344 1 370 3 294 5 132 1 372 7 328 10 223 5 330 1 302 1 94 1 160 16 304 1 
247 1 281 1 282 1 274 1 320 1 168 1 65 1 
31 1 320 1 200 1 168 1 281 1 247 1 282 1 274 1 365 1 173 1 378 1 65 1 
333 1 116 1 357 1 235 1 195 1 190 1 24 1 148 1 342 1 102 1 7 1 
357 1 195 1 177 1 320 2 152 1 24 1 168 1 349 1 116 1 247 2 282 1 27 1 235 1 4 1 137 1 148 1 342 1 7 1 
357 1 182 1 195 3 177 1 0 1 320 2 322 1 152 1 24 1 168 2 349 2 295 1 247 2 282 1 27 1 235 1 4 1 137 2 50 1 148 2 342 1 7 1 267 1 
357 1 182 1 0 1 185 1 24 1 168 2 282 1 235 2 27 1 50 1 148 2 342 2 7 2 267 1 195 3 177 1 320 2 322 1 152 1 349 2 247 2 295 1 329 1 137 2 
357 1 207 1 182 1 100 2 0 1 185 1 24 1 235 3 48 1 148 1 342 3 7 3 149 1 317 1 193 1 289 2 195 4 322 1 201 1 349 1 116 1 93 1 276 1 
357 1 193 1 182 1 289 2 207 1 195 4 0 1 100 2 185 1 322 1 201 1 24 1 349 1 116 1 58 1 48 1 235 3 93 1 148 1 342 3 7 3 149 1 
356 1 357 1 235 1 24 1 342 1 7 1 
268 1 356 1 126 1 357 3 306 1 176 1 195 3 24 2 260 1 311 1 262 1 349 1 116 2 248 1 235 6 314 1 148 2 342 7 376 1 7 7 77 1 
96 1 357 1 358 2 227 1 143 2 306 1 24 1 168 1 340 1 46 1 232 2 104 1 282 2 363 2 283 1 27 1 235 1 4 1 147 6 5 3 148 1 242 2 287 1 342 1 7 1 79 1 366 1 288 2 319 1 195 1 177 1 320 2 152 1 153 1 36 1 84 1 344 1 349 1 247 2 249 1 372 2 137 1 328 4 223 2 301 1 330 1 160 3 
140 1 205 1 207 1 100 3 229 1 26 2 235 1 48 1 264 2 265 2 342 1 29 1 7 1 76 2 149 1 193 2 289 3 195 2 81 1 201 1 87 1 37 1 157 1 325 1 116 1 58 1 93 1 180 1 
192 1 356 1 357 2 306 1 195 2 24 1 311 1 349 1 235 2 93 1 148 1 342 2 7 2 
333 1 116 1 117 1 357 1 306 1 235 4 195 1 185 1 190 1 24 1 148 1 342 4 7 4 
305 1 268 1 357 2 195 1 322 1 24 1 260 1 101 1 210 1 349 1 235 2 148 1 342 2 7 2 
95 1 116 1 357 1 235 1 24 1 300 1 342 1 14 1 7 1 348 1 
126 1 357 1 235 2 306 1 195 1 314 1 41 1 24 1 148 1 342 2 7 2 
333 1 357 2 306 1 195 3 322 1 24 2 262 1 116 1 117 1 248 1 235 4 314 1 190 1 148 2 342 5 7 5 
333 1 357 2 306 1 195 3 322 1 24 2 262 1 116 1 117 1 235 4 314 1 190 1 148 2 342 5 7 5 181 1 
357 1 195 1 177 1 320 2 152 1 24 1 168 1 349 1 116 1 247 2 282 1 27 1 235 1 137 1 329 1 148 1 342 1 7 1 
268 1 357 2 176 1 195 1 322 1 24 1 260 1 311 1 349 1 235 1 148 1 342 1 7 1 
273 1 282 1 113 1 360 1 338 1 
253 1 142 1 289 2 184 1 360 2 113 2 100 2 338 1 201 1 37 1 295 1 273 2 282 1 48 1 50 1 352 1 266 1 149 1 267 1 
247 1 55 1 341 1 228 1 113 1 360 1 320 1 338 1 168 1 
142 1 352 1 338 1 
91 1 10 1 315 1 102 1 
91 1 10 1 35 1 351 1 279 1 315 1 69 1 
284 1 35 1 221 1 
355 2 269 1 10 1 334 1 35 3 279 3 3 1 69 1 169 1 91 1 351 1 315 1 
91 1 10 1 296 1 35 2 351 1 279 2 315 1 75 1 69 1 
278 1 112 1 35 1 258 1 279 1 3 1 69 1 348 1 91 1 351 1 300 1 
91 1 10 1 35 1 351 1 279 1 3 1 69 1 
10 2 35 1 351 1 279 1 315 1 3 1 69 1 
10 1 271 1 35 2 279 2 44 1 3 1 69 2 91 1 364 1 351 2 
10 1 35 3 258 1 279 3 154 1 3 1 69 1 371 1 91 2 296 2 351 1 240 1 315 1 
8 1 278 1 10 1 35 2 279 2 3 1 14 1 69 1 348 1 91 1 134 1 296 1 351 1 315 1 300 2 
10 1 97 1 35 4 258 1 279 4 3 1 69 2 91 2 296 2 351 2 240 1 315 1 75 1 
91 1 10 1 35 1 351 1 279 1 315 1 3 1 69 1 
355 1 10 2 334 1 35 4 258 1 279 4 169 1 69 1 91 3 296 2 351 1 240 1 315 2 64 1 
40 1 10 1 35 2 279 2 293 1 3 1 25 1 69 1 91 1 296 1 351 1 315 1 
355 2 10 1 334 1 35 3 1 1 279 3 3 1 69 1 169 2 91 1 351 1 315 1 
91 2 151 2 38 1 331 1 
237 1 35 1 351 1 279 1 3 1 69 1 
91 1 10 1 296 1 35 2 351 1 154 1 279 2 315 1 3 1 69 1 
82 1 
91 1 10 1 35 1 351 1 279 1 315 1 3 1 69 1 
355 1 91 1 10 1 296 1 35 3 351 1 154 1 279 3 315 1 3 1 69 1 
91 1 258 1 240 1 64 1 
91 1 10 1 

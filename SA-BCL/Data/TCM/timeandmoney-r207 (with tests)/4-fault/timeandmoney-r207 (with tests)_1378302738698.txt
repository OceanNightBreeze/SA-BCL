#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (200,280) (200,280) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (200,280) (200,280) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (200,280) (200,280) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (200,280) (200,280) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 329 1 117 1 324 1 162 1 200 1 269 1 28 1 202 1 91 1 280 1 
293 1 329 1 117 1 324 1 162 1 200 1 269 1 28 1 202 1 91 1 280 1 
293 1 329 1 117 1 324 1 162 1 200 1 269 1 28 1 202 1 91 1 280 1 
293 1 329 1 117 1 324 1 162 1 200 1 269 1 28 1 202 1 91 1 280 1 
353 1 324 1 28 1 269 4 138 2 2 1 357 1 91 4 159 1 195 2 368 1 80 3 329 1 242 1 337 1 48 1 214 3 310 1 
117 1 250 1 353 1 324 1 28 1 269 2 40 1 91 2 357 1 368 1 329 1 240 1 34 1 242 1 162 1 214 1 
80 1 329 2 242 1 353 1 324 1 138 1 162 1 269 3 28 2 174 1 91 3 159 1 214 2 
373 1 353 1 324 1 28 2 269 9 138 4 2 1 29 1 357 1 91 9 159 3 195 2 172 1 368 1 80 7 160 1 329 2 242 1 162 1 174 1 337 1 48 1 214 5 310 1 
373 1 353 1 324 1 28 2 269 9 138 4 2 1 29 1 357 1 91 9 159 3 195 2 172 1 368 1 80 7 160 1 329 2 242 1 162 1 174 1 337 1 48 1 214 5 310 1 
7 1 331 1 170 1 
7 1 336 1 191 2 
316 2 146 2 105 2 163 1 262 2 297 1 235 2 264 2 
26 1 341 1 137 1 118 1 252 1 201 1 52 1 314 2 316 3 56 1 163 1 262 2 264 3 60 2 146 2 105 2 108 2 188 1 218 1 61 1 268 1 14 1 297 1 234 1 235 2 298 2 128 1 171 1 193 2 111 1 300 1 236 1 43 1 328 1 330 1 197 1 245 1 
316 1 146 1 372 1 105 1 267 1 334 1 262 1 297 1 235 1 264 1 
50 1 170 1 206 1 317 1 316 1 359 1 7 1 306 1 211 1 334 1 262 1 71 1 264 1 278 1 
146 1 50 2 105 1 170 1 235 1 359 2 316 1 7 1 306 1 211 1 334 1 262 1 71 1 264 1 278 1 
359 1 50 1 272 1 107 1 77 1 
359 2 50 2 272 1 7 1 168 1 170 1 319 1 77 1 
359 1 50 1 77 1 
146 1 372 1 50 1 105 1 267 1 297 1 235 1 301 1 359 1 316 1 272 1 334 1 262 1 264 1 
7 1 
359 2 50 2 272 1 7 1 170 1 319 1 77 1 23 1 
50 5 251 1 170 1 232 2 141 1 53 2 77 2 358 1 359 5 272 2 7 1 81 1 58 1 83 1 131 1 319 1 308 1 229 1 339 2 
331 1 163 1 
146 1 100 1 316 2 105 1 163 2 262 2 127 1 235 1 264 2 
221 1 375 1 99 1 
341 1 295 1 137 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 43 1 316 1 197 1 163 1 264 1 
362 1 146 1 341 1 137 1 105 1 375 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 194 1 43 1 316 2 197 1 262 1 264 2 
316 3 146 3 105 3 163 1 262 3 235 1 264 3 194 1 
316 1 146 1 372 1 105 1 334 1 262 1 264 1 
316 1 146 1 100 1 105 1 334 1 127 1 262 1 235 1 264 1 
362 1 26 1 341 1 50 1 137 1 252 1 364 1 201 1 314 1 100 1 316 4 56 1 211 1 163 1 262 3 264 4 60 2 167 1 146 3 105 3 108 1 188 1 61 1 268 1 14 1 297 1 235 2 298 1 128 1 171 1 193 1 111 1 300 1 236 1 194 1 43 1 328 1 359 1 330 1 306 1 197 1 334 1 71 1 278 1 
317 1 316 2 146 1 105 1 163 1 262 2 264 2 180 1 194 1 
362 1 146 3 167 1 50 1 105 3 235 1 194 2 100 1 359 1 316 3 7 1 306 1 57 1 211 1 334 1 71 1 262 3 264 3 278 1 
146 2 105 2 375 1 235 1 194 1 100 1 316 2 221 1 262 2 264 2 
341 1 137 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 43 1 316 1 197 1 163 1 264 1 
137 1 98 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 43 1 316 1 163 1 318 1 264 1 
26 1 252 1 76 1 157 1 52 2 99 2 203 1 56 1 60 2 188 1 108 4 375 2 355 1 128 1 300 1 66 1 18 1 328 2 44 1 221 2 333 1 307 1 96 1 361 1 
316 1 146 1 105 1 67 1 334 1 262 1 264 1 278 1 
146 4 362 1 136 1 105 4 147 1 235 1 180 1 194 2 317 1 316 5 100 1 163 1 262 5 264 5 
316 2 146 2 372 1 67 1 105 2 334 1 262 2 264 2 
143 1 238 1 
143 1 238 1 
309 1 254 1 
309 1 254 1 
309 1 254 1 
176 1 143 1 238 1 
176 1 143 1 238 1 
102 1 143 1 238 1 
246 1 254 1 238 2 143 2 181 1 228 1 309 1 
176 1 143 1 238 1 
143 1 238 1 279 1 
143 1 238 1 279 1 
143 1 238 1 279 1 
50 2 352 1 109 3 62 1 63 1 41 2 156 2 16 2 238 2 143 2 327 1 181 1 359 2 257 2 7 1 286 1 287 2 187 1 320 1 
50 1 140 1 156 1 143 1 316 2 257 1 102 1 163 1 262 2 264 2 213 1 9 1 146 2 87 1 105 2 352 1 217 1 109 1 41 1 16 1 238 1 359 1 304 1 338 1 
368 1 357 1 337 1 
368 1 34 1 357 1 
154 1 34 1 332 1 259 1 357 3 337 2 
154 1 34 1 332 1 186 1 357 2 337 1 
154 2 34 1 332 1 357 2 337 1 
73 1 50 5 249 1 251 3 157 1 141 1 53 1 77 1 7 2 58 2 319 1 213 1 166 1 230 1 9 1 125 2 87 1 38 1 355 1 191 3 232 1 170 1 42 2 326 1 220 1 66 1 359 5 272 4 44 1 336 1 151 2 339 1 
73 3 50 9 251 8 157 3 141 1 179 1 53 2 77 6 227 1 7 5 58 6 319 1 213 4 166 1 230 2 125 6 216 1 350 1 11 1 107 5 355 3 191 9 170 1 232 2 42 6 220 2 66 3 359 9 272 7 94 1 44 3 336 3 276 5 308 1 339 2 
73 1 50 3 249 1 251 3 157 1 53 1 7 3 58 2 213 1 230 1 125 2 355 1 170 1 232 1 191 4 326 1 42 2 220 1 66 1 359 3 272 2 44 1 336 2 308 1 151 1 339 1 
73 2 50 4 249 1 251 5 157 2 53 1 227 1 7 4 58 4 213 2 230 1 125 4 350 1 11 1 355 2 170 1 191 7 232 1 42 4 326 1 220 1 66 2 359 4 272 3 44 2 336 3 308 1 151 2 339 1 
331 1 183 1 236 1 
236 1 33 1 
274 1 
201 1 236 1 
183 2 268 1 201 1 236 3 371 1 86 1 
268 1 201 1 236 1 
256 1 236 1 
282 1 199 1 108 7 178 1 365 1 283 2 122 1 52 4 66 1 18 3 328 3 348 1 44 1 59 1 115 1 185 1 361 2 
282 1 199 1 108 7 178 1 365 1 283 2 122 1 52 4 66 1 18 3 328 3 348 1 44 1 59 1 115 1 185 1 361 2 
282 1 199 1 108 7 155 1 178 1 365 1 283 2 122 1 52 4 66 1 18 3 328 3 348 1 44 1 59 1 115 1 185 1 361 2 
73 3 282 1 199 2 252 1 178 1 1 1 365 1 283 3 366 3 157 3 122 2 52 16 56 1 348 2 161 1 59 5 185 2 60 2 321 1 322 4 108 31 188 1 355 3 233 1 300 1 66 4 18 10 328 15 93 1 44 4 113 1 222 1 115 1 361 5 
282 1 199 1 252 2 178 1 283 2 365 1 52 5 122 1 56 2 348 1 161 1 101 1 59 1 185 1 60 4 188 2 108 9 300 2 66 1 18 4 328 4 44 1 21 1 361 3 
51 1 28 1 139 1 123 1 314 1 205 1 80 1 368 1 34 1 259 1 162 1 124 1 214 1 353 1 324 1 61 1 269 2 325 1 14 1 298 1 192 1 193 1 91 2 357 2 329 1 273 1 242 1 22 1 130 1 337 1 
51 1 28 1 123 1 314 1 205 1 368 1 80 2 34 1 259 1 162 1 124 1 214 1 353 1 61 1 269 3 325 1 14 1 298 1 192 1 193 1 91 3 357 2 379 1 17 1 329 1 273 1 242 1 22 1 152 1 337 1 
353 1 61 1 269 2 14 1 325 1 192 1 298 1 357 2 91 2 314 1 193 1 123 1 205 1 379 1 368 1 80 2 34 1 273 1 242 1 259 1 162 1 152 1 124 1 337 1 214 1 
61 1 28 1 269 1 14 1 201 1 298 1 91 1 314 1 193 1 123 2 236 1 205 2 43 1 302 1 17 1 315 1 303 1 6 1 68 1 329 1 273 2 162 2 45 1 
51 1 61 1 324 1 28 1 269 1 14 1 325 1 192 1 298 1 357 2 91 1 314 1 193 1 123 1 205 1 368 1 329 1 34 1 273 1 22 1 259 1 162 1 130 1 152 1 124 1 337 1 
382 1 
50 5 225 1 141 1 285 1 3 1 53 1 182 2 7 2 58 2 230 1 10 1 61 1 191 2 232 1 14 1 298 2 193 2 236 1 303 1 359 5 112 1 19 1 68 1 306 1 196 2 114 1 71 1 153 4 251 2 201 1 312 1 314 2 77 6 206 1 317 1 316 1 369 1 260 2 210 2 211 1 84 1 212 2 262 1 319 3 264 1 36 2 219 1 170 1 43 2 334 1 47 2 336 2 135 1 278 1 339 1 
153 2 50 3 3 1 206 1 77 2 316 1 317 1 211 1 210 1 262 1 319 1 264 1 112 1 359 3 19 1 306 1 114 1 334 1 71 1 135 1 278 1 23 1 
153 3 50 3 3 1 77 1 206 1 316 1 317 1 7 1 211 1 262 1 319 1 264 1 170 1 112 1 359 3 19 1 306 1 196 1 114 1 334 1 71 1 135 1 278 1 23 1 
153 3 50 3 3 1 206 1 77 2 316 1 317 1 7 1 211 1 210 1 262 1 319 1 264 1 170 1 112 1 359 3 19 1 306 1 196 1 114 1 334 1 47 1 71 1 23 1 135 1 278 1 
50 5 141 1 3 1 53 1 182 2 7 1 58 1 104 1 10 1 146 1 105 1 232 1 297 1 235 1 301 1 19 1 359 5 112 1 306 1 196 2 114 1 243 1 71 1 23 1 153 4 248 1 27 1 251 1 77 7 206 1 316 2 317 1 369 1 260 2 210 4 211 1 262 2 212 2 319 3 264 2 36 2 372 1 267 1 170 1 334 2 47 4 46 1 336 2 278 1 135 1 339 1 
50 4 225 1 141 1 3 1 53 1 182 2 7 1 58 1 10 1 146 1 105 1 232 1 191 2 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 2 114 1 71 1 153 4 251 1 206 1 77 4 316 2 317 1 369 1 260 2 211 1 210 2 262 2 212 2 319 2 264 2 36 2 372 1 267 1 170 1 334 2 336 2 47 2 278 1 135 1 339 1 
50 4 141 1 3 1 53 1 182 2 7 1 58 1 104 1 10 1 146 1 105 1 232 1 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 2 114 1 71 1 153 4 248 1 27 1 251 1 206 1 77 4 317 1 316 2 369 1 260 2 211 1 210 2 262 2 212 2 319 2 264 2 36 2 372 1 267 1 170 1 334 2 336 2 47 2 278 1 135 1 339 1 
50 4 141 1 3 1 53 1 182 2 7 1 58 1 104 1 10 1 146 1 105 1 232 1 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 2 114 1 71 1 153 4 248 1 27 1 251 1 206 1 77 4 317 1 316 2 369 1 260 2 211 1 210 2 262 2 212 2 319 2 264 2 36 2 372 1 267 1 170 1 334 2 336 2 47 2 278 1 135 1 339 1 
50 4 0 2 141 1 3 1 53 1 7 1 8 1 58 1 10 1 146 1 105 1 232 1 191 2 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 2 114 1 71 1 153 4 27 1 251 1 206 1 77 4 317 1 316 2 260 2 211 1 210 2 262 2 212 2 319 2 265 1 264 2 372 1 89 2 267 1 170 1 334 2 133 1 47 2 278 1 135 1 339 1 
50 4 141 1 3 1 53 1 182 2 7 1 58 1 104 1 10 1 146 1 105 1 232 1 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 3 114 1 71 1 153 5 248 1 27 1 251 1 77 5 206 1 317 1 316 2 369 1 260 2 210 3 211 1 262 2 212 2 319 2 264 2 36 2 372 1 267 1 170 1 334 2 47 3 46 1 336 2 278 1 135 1 339 1 
50 4 141 1 3 1 53 1 182 2 7 1 58 1 104 1 10 1 146 1 105 1 232 1 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 3 114 1 71 1 153 5 248 1 27 1 251 1 77 5 206 1 317 1 316 2 369 1 260 2 210 3 211 1 262 2 212 2 319 2 264 2 36 2 372 1 267 1 170 1 334 2 47 3 46 1 336 2 278 1 135 1 339 1 
50 4 0 2 225 1 141 1 3 1 53 1 7 1 8 1 58 1 10 1 146 1 105 1 232 1 191 2 297 1 235 1 301 1 19 1 359 4 112 1 306 1 196 2 114 1 71 1 153 4 251 1 206 1 77 4 316 2 317 1 260 2 211 1 210 2 262 2 212 2 319 2 264 2 372 1 89 2 267 1 170 1 334 2 47 2 278 1 135 1 339 1 
282 1 26 1 252 1 178 1 365 1 283 1 122 1 52 3 99 1 56 1 348 1 163 2 60 2 188 1 108 6 375 1 128 1 300 1 66 1 18 2 328 3 331 1 221 1 44 1 307 1 361 2 
73 2 26 2 118 1 252 2 366 3 157 1 99 11 52 8 255 1 56 2 261 1 59 1 163 1 60 4 322 3 188 2 108 14 375 11 355 2 128 1 111 1 300 2 66 1 18 2 328 6 129 1 173 1 239 1 44 2 221 4 113 1 222 1 361 1 
362 1 341 1 26 1 137 1 118 1 252 1 201 1 314 1 52 1 316 2 56 1 163 1 262 1 264 2 60 2 37 1 146 1 295 1 105 1 188 1 108 2 61 1 268 1 377 1 14 1 298 1 193 1 128 1 236 1 300 1 111 1 43 1 194 1 129 1 328 1 241 1 221 1 197 1 
282 1 341 2 137 2 178 1 283 1 99 7 52 10 55 2 56 3 348 1 59 4 290 1 60 6 146 1 105 1 188 3 108 20 61 2 355 2 14 2 298 3 193 3 111 1 300 3 236 2 66 3 194 1 18 8 69 2 197 2 152 1 361 4 362 1 73 2 26 3 118 1 252 3 365 1 201 2 157 2 122 1 314 3 32 1 316 3 163 2 262 1 264 3 375 7 268 2 270 1 128 3 378 2 271 2 43 1 328 10 129 1 330 2 221 7 44 3 
224 1 26 2 118 1 252 2 139 1 284 1 201 2 314 8 52 1 316 1 56 2 209 1 262 1 264 1 60 4 146 1 105 1 12 1 188 2 108 2 90 1 61 2 218 2 14 2 298 7 193 8 128 2 236 3 300 2 111 1 194 1 43 2 328 1 303 1 68 1 275 1 307 1 152 1 281 1 
73 1 26 1 74 1 252 1 157 1 99 1 52 1 100 1 316 1 56 1 262 1 264 1 60 2 146 1 105 1 188 1 108 3 375 1 355 1 235 1 128 1 300 1 66 1 18 1 129 1 328 2 221 1 44 1 361 1 
26 1 108 2 188 1 375 1 252 1 355 1 99 1 128 1 203 1 52 2 300 1 18 1 56 1 221 1 44 1 59 1 307 1 60 2 
26 1 108 2 188 1 375 1 252 1 76 1 157 1 99 1 128 1 300 1 66 1 18 1 328 2 56 1 221 1 307 1 60 2 361 1 
73 1 26 1 252 1 157 1 52 2 99 2 56 1 59 1 60 2 188 1 108 4 375 2 355 1 128 1 300 1 66 1 18 2 328 2 44 1 221 2 307 1 361 1 
26 1 108 2 188 1 375 1 252 1 355 1 99 1 128 1 203 1 52 2 300 1 18 1 56 1 221 1 44 1 59 1 209 1 60 2 
26 1 108 2 188 1 375 1 252 1 76 1 157 1 99 1 128 1 300 1 66 1 18 1 328 2 56 1 221 1 209 1 60 2 361 1 
73 1 26 1 252 1 157 1 52 2 99 2 56 1 59 1 209 1 60 2 188 1 108 4 375 2 355 1 128 1 300 1 66 1 18 2 328 2 44 1 221 2 361 1 
73 1 26 1 188 1 108 4 375 2 252 1 355 1 157 1 99 2 128 1 52 2 300 1 66 1 18 2 328 2 56 1 221 2 44 1 59 1 60 2 361 1 
341 1 26 1 137 1 118 1 252 1 201 1 52 1 314 1 316 1 56 1 163 1 264 1 60 2 108 2 188 1 61 1 268 1 14 1 298 1 193 1 128 1 236 1 300 1 111 1 43 1 328 1 330 1 197 1 
26 1 137 1 118 1 98 1 252 1 201 1 52 1 314 1 316 1 56 1 163 1 318 1 264 1 60 2 108 2 188 1 61 1 268 1 14 1 298 1 193 1 128 1 236 1 300 1 111 1 43 1 328 1 198 1 
73 1 26 1 252 1 157 1 52 2 99 2 56 1 59 1 60 2 188 1 108 4 375 2 355 1 128 1 300 1 66 1 18 2 129 1 328 2 44 1 221 2 361 1 
73 1 341 1 26 1 137 1 252 1 139 1 157 1 201 1 99 2 52 2 314 1 316 1 56 1 59 1 264 1 60 2 108 4 188 1 375 2 61 1 355 1 268 1 14 1 298 1 193 1 128 1 271 1 236 1 300 1 66 1 18 2 328 2 330 1 221 2 44 1 197 1 361 1 
73 1 26 1 252 1 157 1 52 2 99 1 100 1 316 1 56 1 59 1 262 1 264 1 60 2 215 1 146 1 105 1 188 1 108 3 375 1 355 1 235 1 128 1 300 1 66 1 18 1 328 1 129 1 44 1 221 1 
73 3 252 2 253 1 366 1 157 3 52 9 142 1 226 1 144 1 56 2 59 3 60 4 169 2 322 2 188 2 108 19 355 3 299 1 300 2 66 3 18 6 380 1 328 10 21 1 44 3 149 2 113 1 222 1 244 1 361 3 
73 3 343 1 252 3 366 2 157 2 52 14 204 1 226 1 144 2 56 3 208 1 161 2 59 2 60 6 169 1 188 3 108 26 322 2 355 3 299 2 300 3 66 2 18 4 380 1 328 12 20 1 21 1 95 1 44 3 149 4 222 2 381 1 244 1 361 2 
73 4 282 1 343 1 252 3 178 1 283 1 365 1 253 1 366 3 157 4 122 1 52 20 204 1 226 1 144 1 56 3 348 1 208 1 161 1 59 4 60 6 169 1 323 1 322 4 188 3 108 41 355 4 299 2 300 3 66 5 18 8 380 1 328 21 20 1 95 1 21 1 44 5 149 4 113 1 222 3 381 1 244 1 361 4 
73 4 282 1 343 1 252 4 178 1 283 1 365 1 253 1 366 3 157 3 122 1 52 20 204 1 226 1 144 1 56 4 348 1 208 1 161 2 59 3 60 8 169 1 323 1 322 4 188 4 108 38 355 4 299 2 300 4 66 4 18 7 380 1 328 18 20 1 95 1 21 1 44 5 149 4 113 1 222 3 381 1 244 1 361 4 
73 7 282 1 343 1 252 2 178 1 283 1 365 1 366 4 157 7 122 1 52 27 204 1 226 1 255 2 144 1 56 2 348 1 208 1 161 1 59 7 60 4 169 1 322 4 188 2 108 52 355 7 299 1 300 2 66 8 18 14 380 1 328 25 20 1 95 1 21 1 44 8 149 4 113 2 222 2 381 1 244 1 361 7 
257 1 156 1 41 1 16 1 187 1 320 1 143 1 238 1 266 1 181 1 
102 1 140 1 
257 1 132 1 150 1 156 1 41 1 15 1 16 1 143 1 238 1 
50 1 352 1 109 2 62 1 63 1 41 1 156 1 16 1 238 1 143 1 327 1 181 1 359 1 257 1 7 1 287 1 187 1 320 1 
50 1 352 1 109 2 62 1 63 1 41 1 156 1 16 1 238 1 143 1 327 1 181 1 359 1 257 1 7 1 287 1 187 1 320 1 
50 1 352 1 109 2 62 1 63 1 41 1 156 1 16 1 238 1 143 1 327 1 181 1 359 1 257 1 7 1 287 1 187 1 320 1 
228 1 176 1 4 1 
228 1 176 1 4 1 
279 1 289 1 
228 1 279 1 289 1 
304 1 338 1 
50 1 140 1 156 1 143 1 316 2 257 1 287 1 102 1 163 1 262 2 264 2 213 1 145 1 9 1 146 2 87 1 105 2 217 1 109 1 41 1 16 1 238 1 327 1 359 1 272 1 304 1 338 1 
176 1 4 1 
228 1 279 1 289 1 
224 1 26 1 25 1 118 1 252 1 201 1 314 2 52 1 316 2 56 1 262 2 264 2 60 2 294 1 188 1 108 2 61 1 218 2 296 1 110 1 14 1 64 1 298 2 193 2 128 1 236 1 300 1 111 1 129 1 328 1 281 1 
51 1 61 1 344 1 139 1 14 1 325 1 298 2 192 1 357 2 314 2 193 2 205 1 65 1 368 1 34 1 259 1 152 1 337 1 370 1 
51 1 61 1 325 1 14 1 298 1 192 1 357 2 314 1 193 1 205 1 368 1 34 1 259 1 103 1 152 1 337 1 370 1 
61 1 344 1 14 1 201 1 298 1 314 1 193 1 236 1 205 1 43 1 78 1 6 1 303 1 68 1 
51 1 61 1 344 1 14 1 325 1 298 1 192 1 357 2 314 1 193 1 205 1 65 1 368 1 34 1 259 1 152 1 337 1 370 1 
367 1 
7 1 81 1 331 1 251 1 58 1 170 1 229 1 
50 1 251 1 170 1 191 1 232 1 141 1 53 1 77 1 359 1 182 1 369 1 7 2 58 1 336 1 319 1 36 1 339 1 
50 5 97 2 139 1 141 4 285 1 54 1 53 4 5 2 7 8 58 8 183 2 229 1 230 2 61 3 189 1 355 2 14 4 232 4 191 12 298 3 193 3 236 10 237 1 66 2 359 5 305 2 71 2 116 2 72 2 73 2 251 9 201 3 157 2 314 3 77 5 33 3 256 2 81 1 82 2 207 2 319 3 263 1 86 1 125 6 268 3 170 2 42 6 378 2 43 1 44 2 336 6 277 2 175 1 339 4 
73 2 50 1 343 1 251 8 141 2 366 1 157 2 285 1 53 2 204 1 77 1 5 1 7 5 58 5 319 1 230 1 125 5 231 1 322 1 355 2 191 6 232 2 170 2 42 5 66 2 359 1 20 1 95 1 44 2 222 1 381 1 336 3 134 1 116 2 339 2 
50 1 248 1 251 2 365 1 141 1 122 1 313 1 53 1 5 1 316 1 348 1 58 2 262 1 264 1 146 1 372 1 105 1 267 1 232 1 297 1 235 1 66 1 301 1 359 1 44 2 334 1 116 2 339 1 
251 1 232 1 170 1 141 1 53 1 81 1 7 1 58 1 229 1 339 1 
73 2 251 5 355 2 191 10 42 5 157 2 378 1 66 2 5 1 7 5 44 2 58 5 336 5 116 2 125 5 
359 1 50 1 7 1 170 1 319 1 77 1 
50 3 251 2 121 1 201 1 141 1 312 1 314 4 285 2 53 2 77 4 58 2 319 2 263 1 230 2 61 1 219 1 126 1 14 1 232 2 298 4 193 4 236 1 43 2 359 3 303 1 68 1 308 1 175 2 339 2 
341 1 26 1 137 1 252 1 201 1 314 1 316 3 56 1 163 1 262 2 264 3 60 2 146 2 105 2 108 1 188 1 61 1 268 1 14 1 297 1 298 1 235 2 193 1 171 1 128 1 111 1 300 1 236 1 43 1 328 1 330 1 197 1 
251 1 283 1 191 4 232 1 170 2 42 2 141 1 285 1 53 1 7 4 58 2 336 2 230 1 125 2 339 1 
257 1 156 1 30 1 
257 1 156 1 30 1 
304 1 257 1 13 1 156 1 187 1 
257 1 156 1 30 1 
257 1 164 1 156 1 
257 1 164 1 156 1 
257 1 164 1 156 1 
257 1 156 1 
143 1 238 1 
282 1 108 8 188 2 252 2 178 1 283 1 365 1 52 4 122 1 300 2 66 1 18 3 328 4 56 2 348 1 44 1 161 1 59 1 60 4 361 2 
282 1 108 6 178 1 283 1 365 1 122 1 52 3 66 1 18 2 328 3 331 1 348 1 44 1 361 2 
73 1 188 1 108 4 252 1 355 1 157 1 52 2 300 1 66 1 18 2 328 2 56 1 44 1 59 1 291 1 60 2 361 1 
73 1 322 2 108 7 355 1 157 1 366 1 52 3 66 1 18 2 328 4 44 1 113 1 222 1 59 1 361 1 
73 2 282 1 177 1 252 2 178 1 283 1 365 1 366 2 157 2 122 2 52 11 255 1 56 2 348 2 161 2 59 4 60 4 108 23 322 2 188 2 355 2 300 2 66 3 18 9 328 12 173 1 44 3 113 1 361 5 
328 1 108 1 322 1 
108 1 366 1 52 1 
73 1 188 1 108 6 252 1 355 1 157 1 378 1 52 3 300 1 66 1 18 3 328 3 56 1 44 1 59 1 60 2 291 1 361 2 
73 2 343 1 252 1 366 1 157 2 52 6 204 1 56 1 59 1 60 2 108 12 322 1 188 1 355 2 300 1 66 2 18 2 328 6 20 1 21 1 95 1 44 2 222 1 381 1 361 1 
108 6 365 1 52 3 122 1 66 1 18 2 328 3 348 1 44 1 59 1 361 1 
282 1 177 1 108 3 188 1 252 1 178 1 52 1 122 1 300 1 18 2 328 2 56 1 348 1 161 1 59 1 60 2 361 1 
188 1 108 10 252 1 365 1 313 1 122 2 52 5 300 1 66 2 18 5 328 5 56 1 348 2 21 1 44 2 59 2 60 2 361 3 
188 1 108 2 252 1 355 1 52 2 300 1 18 1 56 1 21 1 44 1 59 1 60 2 
73 1 188 1 108 4 252 1 355 1 157 1 52 2 300 1 66 1 18 2 328 2 56 1 21 1 44 1 59 1 60 2 361 1 
177 1 108 3 188 3 252 3 253 1 122 1 52 1 300 3 18 2 328 2 56 3 348 1 21 1 161 1 59 1 60 6 361 1 
73 3 282 1 177 1 252 5 178 1 283 1 365 2 253 1 366 3 157 3 122 3 52 16 56 5 348 3 161 2 59 5 291 1 60 10 321 1 322 4 188 5 108 34 355 3 233 1 300 5 66 5 18 12 328 18 93 1 21 1 44 5 113 1 222 1 361 7 
282 1 252 1 178 1 283 1 365 1 366 1 52 4 122 1 56 1 348 1 60 2 108 8 322 1 188 1 300 1 66 1 18 2 328 4 20 1 44 1 21 1 222 1 361 2 
73 1 282 1 252 2 178 1 283 1 365 1 366 1 122 1 52 6 56 2 348 1 59 1 60 4 291 1 108 11 322 2 188 2 355 1 300 2 66 1 18 3 328 5 20 1 21 1 44 2 113 1 222 1 361 2 
73 2 282 1 343 1 252 3 178 1 283 1 365 1 366 1 157 2 122 1 52 9 204 1 56 3 348 1 161 1 59 1 291 1 60 6 108 19 322 1 188 3 355 2 300 3 66 3 18 4 328 10 20 1 21 1 95 1 44 3 222 1 381 1 361 3 
73 2 282 1 343 1 252 3 178 1 283 1 365 1 366 1 157 1 122 1 52 10 204 1 56 3 348 1 161 1 59 2 291 1 60 6 108 17 322 1 188 3 355 2 300 3 66 2 18 5 328 7 20 1 21 1 95 1 44 3 222 1 381 1 361 3 
282 1 252 1 178 1 283 1 365 1 366 1 52 4 122 1 56 1 348 1 60 2 108 8 322 1 188 1 300 1 66 1 18 2 328 4 20 1 44 1 21 1 222 1 361 2 
73 2 343 1 252 1 366 1 157 2 52 6 204 1 56 1 59 1 60 2 108 12 322 1 188 1 355 2 300 1 66 2 18 2 328 6 20 1 21 1 95 1 44 2 222 1 381 1 361 1 
73 2 282 1 343 1 252 4 178 1 283 1 365 1 366 1 157 1 122 1 52 10 204 1 56 4 348 1 161 2 59 2 291 1 60 8 108 18 322 1 188 4 355 2 300 4 66 2 18 5 328 8 20 1 21 1 95 1 44 3 222 1 381 1 361 3 
73 3 343 1 252 4 253 1 366 1 157 2 52 9 204 1 56 4 161 2 59 3 60 8 108 16 322 1 188 4 355 3 300 4 66 2 18 6 328 7 20 1 21 1 95 1 44 3 222 1 381 1 361 3 
282 1 108 7 178 2 365 1 122 3 52 3 66 1 18 6 328 4 348 3 44 1 59 3 361 3 
73 2 282 1 343 1 252 4 178 1 283 1 365 1 253 1 366 1 157 1 122 1 52 10 204 1 56 4 348 1 161 2 59 1 60 8 108 18 322 1 188 4 355 2 300 4 66 2 18 4 328 8 20 1 21 1 95 1 44 3 222 1 381 1 361 3 
316 1 317 1 70 1 163 1 262 1 264 1 180 1 
247 1 363 1 119 1 158 1 31 1 180 1 317 1 316 1 70 1 163 1 262 1 264 1 
303 1 68 1 331 1 61 1 14 1 201 1 298 1 193 1 314 1 236 1 43 1 
146 1 137 1 105 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 194 1 43 1 316 2 197 1 163 1 262 1 264 2 
146 2 137 1 105 1 61 1 268 2 14 1 201 2 298 1 314 1 193 1 236 3 194 1 316 2 256 1 305 1 306 1 197 1 334 1 163 1 262 2 264 2 175 1 278 1 
146 2 137 1 105 1 98 1 61 1 268 2 14 1 201 2 298 2 314 2 193 2 236 3 194 1 316 2 256 1 305 1 306 1 334 1 163 1 262 2 264 2 175 1 223 1 278 1 
50 2 374 1 61 1 268 1 170 1 14 1 201 1 298 3 314 3 193 3 236 4 43 1 77 1 92 1 33 1 359 2 256 1 305 1 7 1 183 1 71 1 175 1 223 1 
50 2 61 1 268 1 170 1 14 1 201 1 298 3 314 3 193 3 236 4 43 1 77 1 33 1 359 2 256 1 305 1 7 1 183 1 71 1 277 1 175 1 223 1 
275 1 61 1 14 1 298 1 193 1 314 1 
224 1 12 1 218 1 90 1 61 2 268 1 139 1 190 1 14 3 284 1 201 2 298 6 314 7 193 7 236 3 43 2 275 1 152 1 165 1 49 1 86 1 
341 1 282 1 137 1 139 1 178 1 283 1 52 3 99 1 56 2 348 1 60 4 146 1 294 1 105 1 188 2 108 6 61 1 14 1 298 1 193 1 300 2 236 1 194 1 66 1 18 2 69 1 197 1 361 2 26 2 252 2 365 1 201 1 314 1 122 1 316 2 163 2 262 1 264 2 375 1 268 1 128 2 271 1 129 1 328 3 330 1 221 1 44 1 
50 3 251 1 141 2 314 1 53 2 77 2 33 1 7 1 81 1 82 1 207 1 58 1 183 1 319 1 263 1 229 1 170 1 232 2 298 1 193 1 236 2 43 1 359 3 272 1 71 1 277 1 72 1 339 2 
61 1 268 1 139 1 14 2 201 1 298 2 314 2 193 2 237 1 236 2 275 1 183 1 86 1 
61 1 139 1 14 1 201 1 298 4 314 4 193 4 236 1 43 1 303 1 68 1 223 1 85 1 
39 1 61 1 268 1 190 1 14 2 201 1 298 2 314 2 193 2 236 1 258 1 175 1 165 1 290 1 
368 1 34 1 61 1 14 1 192 1 298 1 357 1 193 1 314 1 43 1 
224 1 61 1 296 1 139 1 14 1 201 1 152 1 298 2 193 2 314 2 236 1 
224 1 12 1 61 2 139 1 14 2 201 2 284 1 298 4 314 5 193 5 236 3 43 1 303 1 68 1 175 1 85 1 
224 1 61 2 139 1 345 1 14 2 201 2 284 1 298 4 314 5 193 5 236 3 43 1 303 1 68 1 175 1 85 1 
146 1 137 1 105 1 98 1 61 1 268 1 14 1 201 1 298 1 314 1 193 1 236 1 194 1 43 1 316 2 163 1 262 1 264 2 
61 1 268 1 190 1 14 2 201 1 298 1 314 1 193 1 236 1 175 1 165 1 49 1 86 1 
25 1 110 1 64 1 316 1 148 1 35 1 262 1 264 1 24 1 
356 1 346 1 24 1 
148 1 35 1 163 1 184 1 24 1 
167 1 50 2 342 1 170 1 356 1 346 1 359 2 272 1 148 2 7 1 306 1 35 2 211 1 334 1 163 1 71 1 184 2 278 1 24 1 
331 1 242 1 353 1 214 1 
329 1 242 1 353 1 269 1 28 1 91 1 214 1 
162 1 269 1 123 1 
360 1 329 1 240 2 242 1 353 1 324 1 269 3 28 1 311 1 91 3 214 1 79 1 
80 1 329 1 242 1 353 1 269 2 28 1 91 2 214 1 195 1 
368 1 329 1 324 1 138 1 269 1 28 1 357 1 91 1 337 1 214 1 310 1 
329 1 242 1 324 1 269 1 28 1 91 1 214 1 
329 1 242 2 353 1 324 1 269 1 28 1 91 1 
88 1 376 1 324 1 28 2 269 2 91 2 329 2 242 1 214 1 292 1 
80 2 160 1 329 1 242 1 353 1 324 1 138 1 269 3 28 1 29 1 91 3 159 1 214 2 
340 1 353 1 324 1 28 1 269 2 357 2 91 2 368 1 80 1 329 1 34 1 242 1 259 1 337 1 214 1 
80 2 329 2 242 1 353 1 324 1 138 1 269 4 28 2 91 4 159 1 214 2 195 1 48 1 
329 1 242 1 353 1 324 1 269 1 28 1 91 1 214 1 
351 1 353 2 269 4 28 1 138 1 91 4 159 1 79 1 80 2 360 1 329 1 240 1 242 2 214 3 
80 1 347 1 329 1 242 1 353 1 324 1 269 2 28 1 349 1 91 2 214 1 172 1 
360 1 329 1 240 2 242 1 353 1 324 1 75 1 269 3 28 1 91 3 214 1 79 2 
106 2 288 1 335 1 214 2 
329 1 324 1 269 1 28 1 120 1 91 1 
80 1 160 1 329 1 242 1 353 1 324 1 269 2 28 1 91 2 214 1 
354 1 
329 1 242 1 353 1 324 1 269 1 28 1 91 1 214 1 
80 1 160 1 329 1 240 1 242 1 353 1 324 1 269 3 28 1 91 3 214 1 
351 1 138 1 159 1 214 1 
242 1 214 1 

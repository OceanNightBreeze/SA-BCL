#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (129,228) (129,228) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (129,228) (129,228) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (129,228) (129,228) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (129,228) (129,228) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 79 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 281 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (16,37) (16,37) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 217 314 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 192 47 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 205 53 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 22 249 81 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 249 81 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 249 14 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 205 53 21 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 205 53 21 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (16,37) (16,37) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (16,37) (16,37) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (16,37) (16,37) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 313 216 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 79 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 198 (156,267) 196 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 215 208 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (117,305) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (8,141) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (151,152) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 1 72 1 139 1 175 1 223 1 11 1 329 1 228 1 55 1 35 1 129 1 38 1 211 1 
135 1 72 1 139 1 175 1 223 1 11 1 329 1 228 1 55 1 35 1 129 1 38 1 211 1 
135 1 72 1 139 1 175 1 223 1 11 1 329 1 228 1 55 1 35 1 129 1 38 1 211 1 
135 1 72 1 139 1 175 1 223 1 11 1 329 1 228 1 55 1 35 1 129 1 38 1 211 1 
212 1 135 1 139 1 175 1 51 3 264 1 11 1 329 4 285 1 55 4 57 2 35 1 61 1 148 2 308 3 255 1 338 1 259 1 
135 1 139 1 175 1 51 1 223 1 329 2 283 1 285 1 55 2 35 1 61 1 236 1 210 1 257 1 259 1 211 1 
70 1 135 1 139 2 51 2 223 1 264 1 329 3 285 1 55 3 57 1 35 2 308 1 259 1 
212 1 70 1 135 1 139 2 175 1 51 5 5 1 223 1 163 1 301 1 11 1 264 3 329 9 285 1 55 9 57 4 35 2 61 1 148 2 308 7 255 1 338 1 91 1 259 1 
212 1 70 1 135 1 139 2 175 1 51 5 5 1 223 1 163 1 301 1 11 1 264 3 329 9 285 1 55 9 57 4 35 2 61 1 148 2 308 7 255 1 338 1 91 1 259 1 
79 1 
172 1 272 1 191 1 321 1 127 1 300 1 64 1 282 1 277 1 10 1 186 1 303 1 
172 1 332 1 272 1 191 2 321 1 300 2 64 1 282 1 120 1 121 1 277 1 186 1 303 1 
191 1 300 1 312 1 
191 1 300 1 312 1 
191 1 300 1 
191 1 300 1 312 1 
191 1 300 1 312 1 
213 1 58 1 166 1 191 2 300 2 77 1 312 1 
253 1 79 1 
188 1 6 1 282 2 120 1 121 1 303 2 332 1 272 2 253 2 
318 1 119 1 200 1 
43 1 44 1 282 1 162 1 225 1 328 2 165 1 32 1 202 2 333 1 272 1 253 1 17 2 128 1 130 1 109 1 107 1 275 1 152 1 
43 1 44 1 318 1 176 1 162 1 225 1 120 1 282 2 121 1 303 1 328 1 165 1 230 1 32 1 202 1 272 2 17 1 130 1 109 1 152 1 
332 1 272 3 253 1 176 1 282 3 120 3 121 3 303 3 
172 1 272 1 218 1 282 1 120 1 121 1 303 1 
172 1 188 1 332 1 272 1 6 1 282 1 120 1 121 1 303 1 
172 1 188 1 191 1 321 1 176 1 300 1 120 2 282 2 121 2 197 1 303 2 230 1 332 1 272 2 169 1 64 1 277 1 186 1 
272 2 253 1 176 1 282 2 120 1 239 1 121 1 10 1 303 2 
172 1 191 1 321 1 176 1 300 1 120 1 282 1 281 1 121 1 303 1 230 1 272 1 169 1 64 1 277 1 186 1 
188 1 318 1 176 1 120 2 282 2 200 1 121 2 303 2 332 1 272 2 
43 1 44 1 282 1 225 1 162 1 328 1 165 1 202 1 32 1 272 1 253 1 17 1 130 1 109 1 152 1 
43 1 298 1 141 1 282 1 225 1 162 1 328 1 165 1 202 1 32 1 272 1 253 1 17 1 130 1 109 1 
96 2 297 1 99 1 48 1 221 1 266 2 232 1 63 1 181 1 20 4 187 1 112 1 153 1 318 2 155 1 119 2 195 1 200 2 164 1 287 1 82 1 290 1 207 2 209 1 
172 1 272 1 321 1 322 1 282 1 120 1 121 1 303 1 
23 1 188 1 189 1 176 2 120 4 282 5 121 4 10 1 303 5 230 1 332 1 272 5 253 1 239 1 
172 1 272 2 218 1 322 1 282 2 120 2 121 2 303 2 
292 1 41 1 
292 1 41 1 
34 1 42 1 
34 1 42 1 
34 1 42 1 
292 1 242 1 41 1 
292 1 242 1 41 1 
292 1 80 1 41 1 
292 2 331 1 34 1 177 1 41 2 42 1 
292 1 242 1 41 1 
292 1 116 1 41 1 
292 1 116 1 41 1 
292 1 116 1 41 1 
292 2 100 2 191 2 300 2 4 1 122 2 326 1 60 2 16 1 37 1 131 2 41 2 67 2 315 1 
292 1 100 1 191 1 4 1 300 1 282 1 120 1 121 1 122 1 303 1 60 1 272 1 131 1 41 1 67 1 313 1 
61 1 175 1 11 1 
61 1 175 1 236 1 
113 1 30 1 175 3 236 1 11 2 302 1 
113 1 278 1 175 2 236 1 11 1 302 1 
113 2 175 2 236 1 11 1 302 1 
191 1 75 1 300 1 312 1 
134 1 304 1 191 2 300 2 312 2 184 1 
213 1 320 1 217 1 191 2 300 2 262 1 77 1 327 1 29 1 166 1 58 1 312 1 
213 1 320 1 217 1 191 1 300 1 262 1 77 1 327 1 29 1 166 1 58 1 314 1 
32 1 142 1 79 1 
32 1 83 1 
137 1 
32 1 162 1 
32 3 234 1 142 2 162 1 225 1 185 1 
32 1 162 1 225 1 
32 1 76 1 
155 3 260 1 190 1 194 1 221 2 102 1 248 1 144 1 266 3 203 1 56 2 62 1 63 1 290 1 207 4 276 1 20 7 
155 3 260 1 190 1 194 1 221 2 102 1 248 1 144 1 266 3 203 1 56 2 62 1 63 1 290 1 207 4 276 1 20 7 
155 3 260 1 190 1 194 1 221 2 102 1 248 1 144 1 266 3 203 1 56 2 168 1 62 1 63 1 290 1 207 4 276 1 20 7 
96 4 215 1 99 4 260 2 48 2 221 8 102 1 144 2 266 22 56 3 59 4 270 1 306 1 62 2 63 7 105 1 106 1 276 3 20 46 71 1 112 2 153 2 319 4 155 15 190 3 195 2 194 7 199 1 248 1 123 2 203 1 287 4 288 1 290 7 207 24 132 4 93 1 
96 4 260 1 48 2 221 3 144 1 266 4 56 2 62 1 63 1 276 1 20 9 183 1 112 2 153 2 155 4 190 1 195 2 194 1 248 1 123 1 203 1 290 1 87 1 207 5 
135 1 295 1 173 1 138 1 139 1 175 2 51 1 223 1 11 1 265 1 55 2 61 1 17 1 308 1 236 1 109 1 150 1 182 1 317 1 28 1 328 1 329 2 165 1 30 1 285 1 202 1 35 1 39 1 88 1 259 1 
1 1 173 1 138 1 139 1 175 2 51 1 223 1 11 1 265 1 55 3 61 1 17 1 308 2 236 1 108 1 109 1 150 1 182 1 317 1 328 1 329 3 30 1 165 1 285 1 202 1 35 1 85 1 39 1 88 1 259 1 
173 1 138 1 175 2 51 1 223 1 11 1 265 1 55 2 61 1 17 1 308 2 236 1 108 1 109 1 150 1 182 1 328 1 329 2 165 1 30 1 285 1 202 1 85 1 88 1 259 1 
0 1 1 1 46 1 138 2 139 1 3 1 162 1 223 2 329 1 328 1 165 1 265 2 32 1 55 1 202 1 180 1 35 1 17 1 130 1 337 1 109 1 133 1 182 2 
135 1 173 1 138 1 139 1 175 2 223 1 11 1 265 1 55 1 61 1 17 1 236 1 109 1 150 1 182 1 317 1 28 1 328 1 329 1 165 1 30 1 202 1 35 1 85 1 39 1 88 1 
271 1 
47 1 320 1 191 1 192 1 300 1 77 1 327 1 328 1 202 1 166 1 58 1 84 1 17 1 130 1 
172 1 321 1 191 2 220 1 300 2 161 1 282 1 245 1 244 1 10 1 303 1 272 1 127 1 205 1 291 1 64 1 277 1 186 1 
172 1 321 1 191 2 220 1 300 2 161 1 282 1 245 1 244 1 10 1 12 1 303 1 272 1 127 1 291 1 64 1 277 1 186 1 
172 1 321 1 191 2 220 1 300 2 161 1 282 1 245 1 244 1 10 1 303 1 53 1 272 1 127 1 205 1 291 1 64 1 277 1 186 1 
191 1 300 1 
172 1 220 1 300 2 226 1 10 1 263 1 303 1 58 1 272 1 273 1 64 1 277 1 22 1 186 1 154 1 191 2 321 1 282 1 161 1 244 1 245 1 77 1 327 1 286 1 166 1 84 1 127 1 291 1 
172 1 220 1 300 2 224 1 226 1 263 1 10 1 303 1 58 1 272 1 273 1 64 1 277 1 22 1 186 1 154 1 191 2 321 1 282 1 161 1 244 1 245 1 77 1 249 1 327 1 286 1 81 1 166 1 84 1 127 1 291 1 
172 1 220 1 300 2 224 1 226 1 263 1 10 1 303 1 58 1 272 1 273 1 64 1 277 1 22 1 186 1 154 1 191 2 321 1 282 1 161 1 244 1 245 1 77 1 249 1 327 1 286 1 81 1 166 1 84 1 127 1 291 1 
172 1 220 1 300 2 10 1 52 1 303 1 58 1 14 1 272 1 273 1 64 1 277 1 22 1 186 1 154 1 191 2 321 1 282 1 161 1 244 1 245 1 77 1 249 1 327 1 286 1 284 1 166 1 204 1 84 1 127 1 291 1 
172 1 321 1 191 2 220 1 300 2 161 1 282 1 245 1 244 1 10 1 303 1 53 1 272 1 127 1 205 1 291 1 64 1 277 1 21 1 186 1 
172 1 321 1 191 2 220 1 300 2 161 1 282 1 245 1 244 1 10 1 303 1 53 1 272 1 127 1 205 1 291 1 64 1 277 1 21 1 186 1 
172 1 220 1 300 2 10 1 52 1 303 1 58 1 272 1 273 1 64 1 277 1 22 1 186 1 154 1 191 2 321 1 282 1 161 1 244 1 245 1 77 1 327 1 286 1 166 1 204 1 84 1 127 1 291 1 
96 2 48 1 221 2 266 3 56 1 232 1 62 1 63 1 276 1 20 6 187 1 112 1 153 1 318 1 155 2 190 1 119 1 195 1 200 1 248 1 79 1 203 1 253 2 290 1 207 3 209 1 
96 4 215 1 99 2 48 2 221 1 143 1 54 1 266 6 232 2 59 3 63 1 65 1 105 1 69 1 20 14 187 1 112 2 153 2 155 2 319 3 318 11 74 1 158 1 119 11 194 1 195 2 200 4 287 1 288 1 253 1 290 2 207 8 132 2 
43 1 96 2 44 1 2 1 48 1 176 1 225 1 303 1 230 1 266 1 232 1 272 2 17 1 65 1 109 1 107 1 69 1 20 2 152 1 187 1 112 1 153 1 158 1 195 1 162 1 282 2 120 1 200 1 121 1 78 1 328 1 165 1 32 1 202 1 253 1 254 1 130 1 207 1 
96 6 97 2 99 2 176 1 7 1 9 1 266 10 272 3 17 3 109 2 276 1 19 1 20 20 187 3 112 3 190 1 119 7 195 3 194 4 120 1 282 3 121 1 200 7 203 1 202 3 32 2 287 2 290 3 130 1 207 10 132 2 43 2 44 2 48 3 221 4 225 2 303 1 230 1 56 1 232 3 62 1 63 3 65 1 69 1 152 2 153 3 156 2 318 7 155 8 157 2 158 1 162 2 246 2 248 1 328 3 165 2 253 2 335 2 85 1 
96 4 295 1 294 1 46 1 98 1 48 2 176 1 178 1 303 1 266 1 232 2 272 1 17 8 109 2 275 2 20 2 69 1 187 2 112 2 153 2 158 1 280 1 195 2 282 1 120 1 162 2 121 1 328 7 165 2 32 3 202 8 252 1 85 1 130 2 89 1 207 1 209 1 133 1 94 1 
96 2 99 1 48 1 221 1 303 1 266 2 232 1 272 1 63 1 65 1 110 1 20 3 187 1 112 1 188 1 153 1 155 1 318 1 119 1 195 1 120 1 282 1 200 1 121 1 332 1 287 1 290 1 207 1 132 1 
112 1 96 2 153 1 155 1 318 1 99 1 48 1 119 1 194 1 195 1 200 1 232 1 290 1 207 2 209 1 181 1 20 2 187 1 
112 1 96 2 153 1 155 1 318 1 48 1 119 1 221 1 195 1 200 1 164 1 266 2 287 1 232 1 63 1 209 1 20 2 187 1 
96 2 99 1 48 1 221 1 266 2 232 1 63 1 20 4 187 1 112 1 153 1 318 2 155 2 119 2 195 1 194 1 200 2 287 1 290 1 207 2 132 1 209 1 
112 1 96 2 153 1 294 1 155 1 318 1 99 1 48 1 119 1 194 1 195 1 200 1 232 1 290 1 207 2 181 1 20 2 187 1 
112 1 96 2 153 1 294 1 318 1 48 1 119 1 195 1 200 1 164 1 266 2 287 1 232 1 63 1 20 2 187 1 
112 1 96 2 153 1 294 1 318 2 99 1 48 1 119 2 195 1 200 2 266 2 287 1 232 1 63 1 290 1 207 2 132 1 20 4 187 1 
96 2 99 1 48 1 221 1 266 2 232 1 63 1 20 4 187 1 112 1 153 1 318 2 155 2 119 2 195 1 194 1 200 2 287 1 290 1 207 2 132 1 
43 1 96 2 44 1 48 1 225 1 266 1 232 1 272 1 17 1 109 1 20 2 69 1 152 1 187 1 112 1 153 1 157 1 158 1 195 1 162 1 282 1 328 1 165 1 202 1 32 1 253 1 130 1 207 1 
43 1 96 2 298 1 48 1 141 1 225 1 266 1 232 1 272 1 17 1 109 1 20 2 69 1 187 1 112 1 153 1 158 1 195 1 162 1 282 1 328 1 165 1 126 1 202 1 32 1 253 1 130 1 207 1 
96 2 99 1 48 1 221 1 266 2 232 1 63 1 65 1 20 4 187 1 112 1 153 1 318 2 155 2 119 2 195 1 194 1 200 2 287 1 290 1 207 2 132 1 
43 1 96 2 44 1 295 1 99 1 48 1 221 1 225 1 266 2 232 1 272 1 17 1 63 1 109 1 20 4 152 1 187 1 112 1 153 1 155 2 318 2 157 1 119 2 194 1 195 1 162 1 282 1 200 2 328 1 165 1 202 1 32 1 287 1 335 1 290 1 207 2 132 1 
96 2 99 1 48 1 303 1 266 1 232 1 272 1 63 1 65 1 20 3 187 1 112 1 188 1 153 1 155 1 318 1 119 1 194 1 195 1 159 1 120 1 282 1 121 1 200 1 287 1 332 1 290 1 207 2 132 1 
95 1 96 8 99 7 261 1 266 24 179 1 269 1 15 1 104 1 105 2 276 1 20 51 111 1 112 4 190 1 194 8 195 4 123 2 203 1 287 6 288 2 289 1 290 8 207 27 208 1 40 1 206 1 132 7 215 2 48 4 140 3 221 7 56 1 59 4 62 1 63 7 153 4 73 1 155 15 319 4 248 1 334 1 87 1 
96 6 95 1 215 2 99 3 261 1 48 3 140 4 221 2 266 12 179 2 59 2 15 1 104 1 63 2 20 26 111 1 112 3 73 2 153 3 155 4 319 2 194 2 195 3 330 1 123 2 287 2 334 1 290 3 87 1 206 1 207 14 208 1 40 1 132 3 
95 1 96 8 99 7 261 1 266 24 179 1 15 1 104 1 105 2 276 1 20 51 111 1 112 4 190 1 194 7 195 4 123 2 203 1 287 6 288 2 289 1 290 8 207 27 208 1 40 1 206 1 132 7 215 2 48 4 140 3 221 7 56 1 59 4 62 1 63 7 153 4 73 1 155 14 319 4 248 1 330 1 334 1 87 1 
95 1 96 8 99 7 261 1 266 25 179 1 15 1 104 1 105 2 276 1 20 53 111 1 112 4 190 1 194 7 195 4 123 2 203 1 287 6 288 2 289 1 290 8 207 28 208 1 40 1 206 1 132 7 215 2 48 4 140 4 221 7 56 1 59 4 62 1 63 7 153 4 73 1 155 14 319 4 248 1 330 1 334 1 87 1 
96 4 95 1 215 2 99 7 261 1 48 2 140 4 221 7 179 1 266 25 56 1 59 4 15 1 62 1 104 1 63 8 105 2 276 1 20 52 111 1 112 2 73 1 153 2 319 4 155 14 190 1 195 2 194 7 248 1 330 1 123 1 203 1 287 7 288 2 334 1 290 8 87 1 206 1 40 1 208 1 207 27 132 7 
292 1 146 1 296 1 13 1 60 1 100 1 177 1 131 1 41 1 122 1 
80 1 240 1 
316 1 292 1 31 1 60 1 26 1 100 1 131 1 41 1 122 1 
292 1 100 1 191 1 4 1 300 1 122 1 326 1 60 1 16 1 37 1 131 1 41 1 67 2 315 1 
292 1 100 1 191 1 4 1 300 1 122 1 326 1 60 1 16 1 37 1 131 1 41 1 67 2 315 1 
292 1 100 1 191 1 4 1 300 1 122 1 326 1 60 1 16 1 37 1 131 1 41 1 67 2 315 1 
331 1 33 1 242 1 
331 1 33 1 242 1 
116 1 66 1 
331 1 116 1 66 1 
170 1 311 1 
292 1 216 1 100 1 191 1 300 1 122 1 326 1 60 1 131 1 67 1 41 1 313 1 312 1 315 1 
33 1 242 1 
331 1 116 1 66 1 
96 2 214 1 48 1 178 1 303 2 266 1 232 1 272 2 103 1 17 2 235 1 65 1 109 1 275 2 20 2 69 1 187 1 112 1 153 1 115 1 158 1 195 1 162 1 282 2 247 1 328 2 165 1 32 1 202 2 207 1 94 1 
317 1 295 1 173 1 175 2 118 1 11 1 145 1 328 2 30 1 165 1 202 2 61 1 233 1 17 2 85 1 236 1 109 1 150 1 182 1 
317 1 173 1 175 2 11 1 328 1 30 1 165 1 201 1 202 1 61 1 233 1 17 1 85 1 236 1 109 1 150 1 182 1 
0 1 46 1 118 1 222 1 162 1 328 1 165 1 32 1 202 1 17 1 130 1 109 1 133 1 182 1 
317 1 173 1 175 2 118 1 11 1 145 1 328 1 30 1 165 1 202 1 61 1 233 1 17 1 85 1 236 1 109 1 150 1 182 1 
160 1 
286 1 305 1 117 1 79 1 
286 1 58 1 166 1 84 1 226 1 263 1 77 1 327 1 
320 1 196 1 162 1 225 1 198 1 77 1 327 1 328 1 165 1 267 1 32 2 202 1 166 1 58 1 83 1 84 1 17 1 130 1 109 2 238 1 185 1 
286 1 58 1 166 1 59 1 319 1 215 1 84 1 208 1 77 1 327 1 
191 1 190 1 300 1 224 1 77 1 327 1 286 2 166 1 58 1 306 1 62 1 84 1 63 1 290 2 86 2 276 1 171 1 
286 1 305 1 58 1 166 1 84 1 77 1 
286 1 287 1 99 1 63 1 290 1 132 1 327 1 
202 1 17 1 130 1 328 1 
286 1 58 1 166 1 25 1 320 1 84 1 77 1 327 1 
60 1 100 1 149 1 
60 1 100 1 149 1 
296 1 60 1 100 1 336 1 170 1 
60 1 100 1 149 1 
60 1 100 1 256 1 
60 1 100 1 256 1 
60 1 100 1 256 1 
60 1 100 1 
292 1 41 1 
112 2 96 4 153 2 155 3 48 2 190 1 194 1 221 2 195 2 248 1 266 4 123 1 203 1 56 1 62 1 63 1 290 1 207 4 276 1 20 8 
266 3 203 1 56 1 155 2 62 1 190 1 63 1 290 1 221 2 207 3 276 1 248 1 20 6 79 1 
112 1 96 2 153 1 293 1 155 1 99 1 48 1 221 1 195 1 266 2 287 1 63 1 290 1 207 2 132 1 20 4 
215 1 319 2 155 4 99 2 221 2 194 2 266 6 287 2 288 1 59 2 63 2 290 2 105 1 207 6 132 2 20 12 
96 4 99 2 48 2 221 7 143 1 266 16 56 1 59 2 270 1 306 1 62 2 63 4 105 1 276 4 20 30 112 2 153 2 155 12 319 2 190 4 194 5 195 2 248 1 123 2 203 1 287 2 288 1 290 4 207 14 132 2 
266 1 319 1 20 1 
59 1 207 1 20 1 
96 2 112 1 153 1 293 1 97 1 155 3 99 1 48 1 195 1 194 2 221 1 266 3 287 1 290 1 63 1 207 3 132 1 20 6 
96 2 215 1 99 2 48 1 221 1 266 6 59 1 15 1 63 2 104 1 20 12 112 1 153 1 319 1 155 2 195 1 194 1 287 2 334 1 290 2 87 1 208 1 207 6 40 1 132 2 
155 2 190 1 221 1 194 1 266 3 62 1 290 1 63 1 207 3 276 1 20 6 
112 1 96 2 153 1 155 2 190 1 48 1 194 1 221 1 195 1 248 1 266 2 123 1 203 1 270 1 207 1 276 1 20 3 
96 2 112 1 153 1 155 5 48 1 190 2 195 1 221 3 194 2 266 5 306 1 62 1 290 2 63 2 87 1 207 5 276 2 20 10 
112 1 96 2 153 1 155 1 99 1 48 1 195 1 194 1 290 1 87 1 207 2 20 2 
112 1 96 2 153 1 155 2 99 1 48 1 221 1 195 1 194 1 266 2 287 1 63 1 290 1 87 1 207 2 132 1 20 4 
112 3 96 6 153 3 155 2 48 3 190 1 195 3 221 1 194 1 123 1 266 2 270 1 289 1 87 1 207 1 276 1 20 3 
96 10 293 1 215 1 99 4 48 5 221 7 266 21 56 1 270 1 59 4 62 2 63 6 105 1 106 1 276 3 20 41 71 1 112 5 153 5 319 4 155 14 190 3 195 5 194 7 248 1 123 2 203 1 287 4 288 1 289 1 290 6 87 1 207 20 132 4 93 1 
96 2 215 1 48 1 221 2 266 4 56 1 59 1 62 1 63 1 276 1 20 8 112 1 153 1 319 1 155 2 190 1 195 1 248 1 203 1 290 1 87 1 208 1 207 4 
96 4 293 1 215 1 99 1 48 2 221 2 266 5 56 1 59 1 62 1 63 1 105 1 276 1 20 11 112 2 153 2 319 2 155 3 190 1 195 2 194 1 248 1 203 1 290 2 87 1 208 1 207 6 132 1 
96 6 293 1 215 1 99 2 48 3 221 4 266 10 56 1 59 1 15 1 62 1 63 3 104 1 276 1 20 19 112 3 153 3 319 1 155 5 190 1 194 1 195 3 248 1 123 1 203 1 287 2 334 1 290 3 87 1 208 1 207 9 40 1 132 2 
96 6 293 1 215 1 99 2 48 3 221 2 266 7 56 1 59 1 15 1 62 1 63 2 104 1 276 1 20 17 112 3 153 3 319 1 155 4 190 1 195 3 194 2 248 1 123 1 203 1 287 1 334 1 290 3 87 1 208 1 207 10 40 1 132 2 
96 2 215 1 48 1 221 2 266 4 56 1 59 1 62 1 63 1 276 1 20 8 112 1 153 1 319 1 155 2 190 1 195 1 248 1 203 1 290 1 87 1 208 1 207 4 
96 2 215 1 99 2 48 1 221 1 266 6 59 1 15 1 63 2 104 1 20 12 112 1 153 1 319 1 155 2 195 1 194 1 287 2 334 1 290 2 87 1 208 1 207 6 40 1 132 2 
96 8 293 1 215 1 99 2 48 4 221 3 266 8 56 1 59 1 15 1 62 1 104 1 63 2 276 1 20 18 112 4 153 4 319 1 155 5 190 1 194 2 195 4 248 1 123 2 203 1 287 1 334 1 290 3 87 1 208 1 207 10 40 1 132 2 
96 6 215 1 99 2 48 3 266 4 59 1 15 1 63 1 104 1 20 11 112 3 153 3 155 2 319 1 195 3 194 2 123 1 287 1 334 1 289 1 290 2 87 1 208 1 207 7 40 1 132 2 
155 6 190 3 221 3 194 3 248 1 266 4 203 2 62 1 63 1 290 1 207 3 276 3 20 7 
96 8 215 1 99 2 48 4 221 3 266 8 56 1 59 1 15 1 62 1 104 1 63 2 276 1 20 18 112 4 153 4 319 1 155 4 190 1 194 1 195 4 248 1 123 2 203 1 287 1 334 1 289 1 290 3 87 1 208 1 207 10 40 1 132 2 
272 1 253 1 101 1 282 1 239 1 10 1 303 1 
241 1 101 1 282 1 10 1 303 1 268 1 251 1 272 1 253 1 274 1 92 1 239 1 
165 1 32 1 202 1 46 1 17 1 130 1 109 1 162 1 133 1 79 1 328 1 
43 1 176 1 162 1 225 1 120 1 282 2 121 1 303 1 328 1 165 1 32 1 202 1 272 2 253 1 17 1 130 1 109 1 152 1 
43 1 172 1 136 1 176 1 225 2 303 2 272 2 17 1 64 1 109 1 152 1 321 1 76 1 282 2 120 2 162 2 121 1 328 1 165 1 202 1 32 3 167 1 253 1 
43 1 172 1 136 1 176 1 141 1 225 2 303 2 272 2 17 2 64 1 109 1 321 1 76 1 243 1 282 2 120 2 162 2 121 1 328 2 165 1 202 2 32 3 167 1 253 1 
32 1 202 1 167 1 83 1 17 1 191 1 300 1 8 1 328 1 
32 1 202 1 167 1 83 1 17 1 191 1 300 1 151 1 328 1 
165 1 202 1 252 1 17 1 109 1 328 1 
114 1 295 1 98 1 280 1 225 1 162 2 324 1 328 6 165 2 202 7 32 3 252 1 17 7 309 1 85 1 130 2 275 1 89 1 109 3 94 1 185 1 
96 4 176 1 266 3 272 2 17 1 109 1 276 1 20 6 187 2 112 2 115 1 190 1 119 1 195 2 120 1 282 2 200 1 121 1 202 1 32 1 203 1 290 1 207 3 43 1 44 1 295 1 48 2 221 2 225 1 303 1 56 1 232 2 62 1 63 1 65 1 152 1 153 2 156 1 155 2 318 1 157 1 162 1 248 1 328 1 165 1 253 2 335 1 
191 1 300 1 312 1 
295 1 142 1 225 1 162 1 328 2 165 1 202 2 32 2 252 1 17 2 109 2 238 1 185 1 
295 1 46 1 174 1 243 1 162 1 328 4 165 1 202 4 32 1 17 4 130 1 109 1 133 1 
114 1 7 1 225 1 162 1 328 2 165 1 202 2 32 1 167 1 231 1 17 2 309 1 109 2 68 1 
165 1 202 1 173 1 61 1 17 1 175 1 130 1 236 1 109 1 328 1 
295 1 162 1 247 1 328 2 165 1 202 2 32 1 17 2 85 1 109 1 94 1 
295 1 46 1 174 1 280 1 162 2 328 4 165 2 202 5 32 3 167 1 17 5 130 1 89 1 109 2 133 1 94 1 
295 1 46 1 24 1 174 1 280 1 162 2 328 4 165 2 202 5 32 3 167 1 17 5 130 1 109 2 133 1 94 1 
43 1 176 1 141 1 162 1 225 1 120 1 282 2 121 1 303 1 328 1 165 1 32 1 202 1 272 2 253 1 17 1 130 1 109 1 
114 1 225 1 162 1 324 1 328 1 165 1 202 1 32 1 167 1 17 1 309 1 109 2 185 1 
250 1 45 1 253 1 27 1 50 1 
172 1 45 2 27 2 321 1 191 2 50 2 300 2 193 1 250 1 253 1 169 1 64 1 237 1 310 1 312 1 277 1 186 1 
45 1 214 1 27 1 282 1 303 1 250 1 103 1 272 1 235 1 
250 1 193 1 237 1 
285 1 51 1 259 1 79 1 
285 1 55 1 35 1 139 1 51 1 259 1 329 1 
265 1 223 1 329 1 
135 1 139 1 299 1 51 1 329 3 227 1 229 1 283 2 285 1 55 3 35 1 259 1 
285 1 55 2 35 1 148 1 308 1 139 1 51 1 259 1 329 2 
212 1 135 1 139 1 175 1 51 1 11 1 329 1 55 1 57 1 35 1 61 1 
285 1 135 1 55 1 35 1 139 1 51 1 329 1 
285 2 135 1 55 1 35 1 139 1 259 1 329 1 
135 1 139 2 51 1 329 2 285 1 55 2 35 2 147 1 307 1 258 1 
135 1 139 1 51 2 301 1 264 1 329 3 285 1 55 3 57 1 35 1 308 2 91 1 259 1 
135 1 139 1 175 2 51 1 11 1 329 2 125 1 30 1 285 1 55 2 35 1 61 1 308 1 236 1 259 1 
135 1 139 2 51 2 264 1 329 4 285 1 55 4 57 1 35 2 148 1 308 2 255 1 259 1 
285 1 135 1 55 1 35 1 139 1 51 1 259 1 329 1 
139 1 51 3 323 1 264 1 227 1 329 4 283 1 229 1 285 2 55 4 57 1 35 1 308 2 259 2 
135 1 139 1 51 1 5 1 329 2 124 1 285 1 55 2 35 1 36 1 308 1 259 1 
135 1 139 1 279 1 51 1 329 3 227 2 229 1 283 2 285 1 55 3 35 1 259 1 
49 2 18 1 51 2 90 1 
135 1 55 1 35 1 139 1 219 1 329 1 
285 1 135 1 55 2 35 1 308 1 139 1 51 1 301 1 259 1 329 2 
325 1 
285 1 135 1 55 1 35 1 139 1 51 1 259 1 329 1 
135 1 139 1 51 1 301 1 329 3 283 1 285 1 55 3 35 1 308 1 259 1 
57 1 51 1 323 1 264 1 
285 1 51 1 

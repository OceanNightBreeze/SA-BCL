#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 78 145 287 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 78 145 287 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 217 26 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 278 151 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 78 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 260 78 145 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 260 78 320 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 217 26 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 361 1 4 5 182 1 317 1 342 1 8 1 185 1 186 7 322 1 202 1 30 1 188 9 325 4 142 2 189 1 113 2 117 1 349 9 373 2 123 1 193 1 43 3 127 1 
44 1 361 1 4 5 182 1 317 1 342 1 8 1 185 1 186 7 322 1 202 1 30 1 188 9 325 4 142 2 189 1 113 2 117 1 349 9 373 2 123 1 193 1 43 3 127 1 
361 1 4 5 182 1 317 2 318 1 342 1 8 2 185 2 25 1 186 6 202 1 57 1 30 1 31 1 188 9 325 4 142 2 189 1 113 2 117 2 349 9 91 1 373 2 123 1 193 1 293 1 127 1 43 3 
361 1 4 5 182 1 317 2 318 1 342 1 8 2 185 2 25 1 186 6 202 1 57 1 30 1 31 1 188 9 325 4 142 2 189 1 113 2 117 2 349 9 91 1 373 2 123 1 193 1 293 1 127 1 43 3 
361 1 4 6 182 1 317 2 318 1 342 1 8 2 185 2 25 1 186 7 202 1 57 1 30 1 31 1 188 10 325 5 142 2 189 1 113 2 117 2 349 10 91 1 373 2 123 1 193 1 293 1 127 1 43 4 
361 1 4 4 182 1 317 2 318 1 342 1 8 2 185 2 25 1 186 4 202 1 57 1 30 1 31 1 188 7 325 3 142 1 113 2 117 2 349 7 91 1 373 2 123 1 193 1 293 1 127 1 43 2 
361 1 188 4 325 2 142 2 4 3 189 1 182 1 113 1 117 1 349 4 373 1 8 1 185 1 123 1 186 3 202 1 193 1 43 1 
188 2 4 1 182 1 113 1 117 1 249 1 349 2 317 1 373 1 185 1 123 1 25 1 291 1 293 1 193 1 168 1 
188 3 325 1 4 2 182 1 113 2 349 3 317 1 373 2 123 1 186 1 193 1 127 1 43 1 
88 1 300 1 61 1 
88 1 229 1 53 2 
56 1 155 2 109 2 285 2 286 1 303 2 270 2 215 2 
223 1 129 1 76 1 334 1 5 2 155 3 270 3 366 1 274 1 56 1 343 1 301 1 109 2 167 1 29 1 11 2 12 2 139 1 140 1 303 2 169 1 326 1 143 1 346 1 118 1 259 1 285 2 286 1 215 2 374 1 309 1 263 1 354 1 36 2 93 1 358 1 294 2 
290 1 56 1 155 1 332 1 109 1 174 1 285 1 303 1 270 1 215 1 
88 1 3 1 155 1 103 1 372 1 270 1 162 1 300 1 290 1 252 1 109 1 97 1 42 1 304 1 
88 1 103 2 155 1 372 1 285 1 215 1 270 1 162 1 300 1 290 1 252 1 109 1 97 1 303 1 304 2 
195 1 21 1 200 1 103 1 304 1 
195 1 103 1 155 1 270 1 300 1 200 1 56 1 109 1 324 1 304 1 303 1 88 1 174 1 35 1 285 1 215 1 290 1 178 1 332 1 
195 1 103 1 304 1 
103 1 155 1 174 1 285 1 215 1 270 1 290 1 200 1 56 1 332 1 109 1 324 1 304 1 303 1 
88 1 
195 1 103 1 155 1 270 1 300 1 200 1 56 1 109 1 324 1 304 1 303 1 88 1 174 1 35 1 285 1 215 1 290 1 332 1 241 1 
195 2 131 1 153 4 198 2 336 2 155 1 103 4 315 2 248 1 270 1 160 1 135 2 273 5 56 1 200 2 300 2 203 1 109 1 323 1 324 1 303 1 141 1 304 4 110 1 88 2 174 1 63 1 35 1 285 1 92 2 215 1 353 2 290 1 37 1 176 1 332 1 357 1 194 1 
61 1 286 1 
47 1 155 2 285 1 286 2 270 2 215 1 255 1 109 2 303 1 
9 1 220 1 360 1 
129 1 169 1 143 1 5 1 155 1 259 1 286 1 270 1 366 1 68 1 274 1 93 1 36 1 139 1 358 1 294 1 
155 3 109 3 285 1 286 1 303 3 161 1 270 3 215 3 
290 1 155 1 332 1 109 1 303 1 270 1 215 1 
290 1 47 1 155 1 255 1 109 1 285 1 303 1 270 1 215 1 
223 1 129 1 334 1 5 1 155 4 103 1 270 4 161 1 366 1 162 1 274 1 56 1 252 1 343 1 301 1 255 1 109 3 58 1 29 1 11 1 138 1 12 2 139 1 140 1 303 3 304 1 231 1 169 1 326 1 143 1 372 1 259 1 285 2 286 1 215 3 374 1 309 1 263 1 290 1 93 1 36 1 97 1 358 1 294 1 
3 1 125 1 155 2 109 2 286 1 303 1 270 2 215 1 161 1 
88 1 103 1 155 3 372 1 285 1 161 2 215 3 270 3 162 1 290 1 330 1 252 1 255 1 109 3 58 1 97 1 304 1 303 3 231 1 
155 2 285 1 161 1 215 2 270 2 9 1 255 1 109 2 303 2 220 1 
129 1 169 1 143 1 5 1 155 1 259 1 286 1 270 1 366 1 274 1 93 1 36 1 139 1 358 1 294 1 
169 1 143 1 5 1 155 1 286 1 270 1 366 1 122 1 274 1 93 1 36 1 139 1 358 1 294 1 179 1 
223 1 362 1 334 1 246 1 51 1 9 2 301 1 11 4 12 2 140 1 209 1 326 2 118 2 284 1 92 1 374 1 353 1 309 1 264 1 72 1 220 2 360 2 
290 1 252 1 275 1 155 1 109 1 303 1 270 1 215 1 
129 1 169 1 143 1 5 1 155 2 259 1 161 1 215 1 270 2 366 1 274 1 93 1 36 1 109 1 358 1 139 1 220 1 303 1 231 1 294 1 
130 1 3 1 125 1 255 1 155 5 109 5 250 1 285 1 286 1 303 4 231 1 270 5 215 4 161 2 
290 1 275 1 155 2 332 1 109 2 303 2 270 2 215 2 
351 1 338 1 
351 1 338 1 
327 1 18 1 
327 1 18 1 
327 1 18 1 
351 1 306 1 338 1 
351 1 306 1 338 1 
351 1 239 1 338 1 
351 2 20 1 327 1 338 2 18 1 266 1 
351 1 306 1 338 1 
351 1 338 1 40 1 
351 1 338 1 40 1 
351 1 338 1 40 1 
88 1 245 2 247 1 338 2 103 2 337 3 347 2 107 1 351 2 251 1 216 2 175 1 277 1 187 1 218 1 280 2 266 1 207 2 304 2 
269 1 337 1 338 1 103 1 155 2 270 2 367 1 321 1 109 2 206 1 187 1 280 1 207 1 303 2 304 1 258 1 347 1 286 1 215 2 351 1 216 1 239 1 41 1 265 1 
8 1 185 1 117 1 
185 1 117 1 249 1 
8 2 85 1 205 1 117 3 249 1 52 1 
8 1 85 1 117 2 249 1 52 1 369 1 
8 1 85 2 117 2 249 1 52 1 
244 2 195 1 269 1 335 1 198 1 153 3 103 4 315 1 159 1 227 1 51 1 53 1 367 1 135 1 273 1 108 1 200 4 300 1 323 1 304 4 33 1 88 1 35 1 284 1 92 1 261 1 64 1 353 1 67 1 146 1 41 1 
195 6 21 5 77 1 335 3 198 2 153 8 103 8 364 1 315 2 80 1 159 2 227 2 51 3 53 9 135 2 273 6 200 7 300 1 165 1 229 3 323 1 304 8 88 5 112 1 115 1 63 1 35 1 284 3 92 3 261 1 353 3 67 6 146 6 238 5 41 4 
244 1 335 1 198 1 153 3 103 3 315 1 159 1 227 1 51 1 53 4 135 1 273 2 108 1 300 1 200 2 229 2 304 3 88 3 63 1 284 1 92 1 64 1 353 1 67 2 146 2 41 1 
244 2 77 1 335 2 198 1 153 5 103 4 315 1 159 1 227 1 51 2 53 7 135 1 273 4 108 1 300 1 200 3 165 1 229 3 304 4 88 4 115 1 63 1 284 2 92 2 64 1 353 2 67 4 146 4 41 2 
366 1 61 1 370 1 
366 1 296 1 
24 1 
366 1 169 1 
366 3 256 1 169 1 262 1 370 2 358 1 
366 1 169 1 358 1 
366 1 39 1 
32 2 75 1 326 3 131 1 105 1 339 1 118 4 348 1 235 3 92 1 353 1 164 1 237 2 176 1 11 7 141 1 345 1 
32 2 75 1 326 3 131 1 105 1 339 1 118 4 348 1 235 3 92 1 353 1 164 1 237 2 176 1 11 7 141 1 345 1 
75 1 32 2 326 3 131 1 171 1 105 1 339 1 118 4 348 1 235 3 92 1 353 1 164 1 237 2 176 1 11 7 141 1 345 1 
75 1 224 1 131 2 334 1 335 3 197 1 339 2 105 5 158 3 51 3 83 4 23 1 164 1 276 1 301 1 11 31 12 2 141 2 140 1 345 2 32 3 326 15 210 1 348 1 118 16 235 8 284 3 92 4 236 1 374 1 353 4 237 3 176 1 242 1 
75 1 32 2 131 1 326 4 334 2 105 1 339 1 118 5 235 4 92 1 23 1 121 1 374 2 353 1 164 1 237 3 176 1 301 2 96 1 11 9 12 4 141 1 140 2 345 1 
46 1 4 1 182 1 5 1 183 1 132 1 249 1 317 1 8 1 185 1 274 1 186 1 205 1 344 1 279 1 139 1 188 2 113 1 117 2 144 1 349 2 373 1 288 1 310 1 123 1 124 1 36 1 311 1 193 1 294 1 
4 1 182 1 5 1 183 1 156 1 6 1 249 1 317 1 8 1 185 1 274 1 186 2 205 1 344 1 279 1 139 1 188 3 113 1 117 2 144 1 14 1 349 3 373 1 288 1 310 1 123 1 124 1 36 1 311 1 294 1 
4 1 182 1 5 1 183 1 6 1 249 1 317 1 8 1 185 1 274 1 186 2 205 1 344 1 279 1 139 1 188 2 117 2 144 1 14 1 349 2 288 1 123 1 124 1 36 1 294 1 
188 1 169 1 295 1 113 1 5 1 211 1 156 1 144 2 317 2 349 1 15 1 373 1 366 1 274 1 93 1 36 1 124 2 95 1 279 2 139 1 281 1 243 1 294 1 
46 1 5 1 183 1 6 1 249 1 317 1 8 1 185 1 274 1 205 1 344 1 279 1 139 1 188 1 113 1 117 2 144 1 349 1 373 1 288 1 310 1 124 1 36 1 311 1 193 1 294 1 
73 1 
150 1 151 2 195 3 101 1 3 1 153 1 198 1 78 1 155 1 48 1 103 2 315 1 133 2 81 4 270 1 135 1 162 1 273 1 252 1 253 2 229 1 109 1 137 2 323 1 278 2 304 2 283 1 371 2 372 1 35 1 145 1 214 1 260 1 287 1 290 1 71 1 333 1 148 1 97 1 42 1 
150 1 151 2 195 3 101 1 3 1 153 1 198 1 78 1 155 1 48 1 103 2 315 1 133 2 81 4 270 1 135 1 162 1 273 1 252 1 253 2 229 1 109 1 137 2 323 1 278 2 304 2 283 1 371 2 372 1 35 1 145 1 214 1 260 1 287 1 290 1 71 1 333 1 148 1 97 1 42 1 
151 1 195 2 101 1 3 1 153 1 198 1 48 1 103 2 155 1 315 1 133 1 81 3 271 1 53 1 270 1 135 1 162 1 273 1 252 1 109 1 278 1 137 2 323 1 304 2 283 1 371 2 372 1 35 1 260 1 290 1 71 1 17 1 148 1 97 1 42 1 359 2 313 1 
195 2 153 1 198 1 5 1 103 1 340 1 315 1 35 1 227 1 135 1 273 1 93 1 36 1 26 1 217 1 323 1 304 1 294 1 
195 2 101 1 283 1 3 1 103 2 48 1 155 1 372 1 35 1 81 2 270 1 162 1 290 1 252 1 71 1 109 1 241 1 278 1 148 1 97 1 42 1 304 2 
195 1 88 1 101 1 283 1 3 1 103 2 48 1 155 1 372 1 35 1 133 1 81 3 270 1 162 1 300 1 290 1 252 1 71 1 109 1 241 1 148 1 97 1 42 1 304 2 
151 1 195 2 101 1 283 1 3 1 103 2 48 1 155 1 372 1 35 1 133 1 81 3 270 1 162 1 290 1 252 1 71 1 109 1 241 1 278 1 148 1 97 1 42 1 304 2 
195 1 103 1 241 1 35 1 304 1 
151 1 150 1 195 2 101 1 3 1 153 1 198 1 48 1 103 2 155 1 315 1 133 1 81 3 271 1 53 1 270 1 135 1 162 1 273 1 252 1 253 2 229 1 109 1 278 1 137 2 323 1 304 2 283 1 371 2 372 1 35 1 214 1 260 1 290 1 71 1 148 1 97 1 42 1 
151 1 150 1 195 2 101 1 3 1 153 1 198 1 78 1 155 1 48 1 103 2 315 1 133 1 81 3 270 1 162 1 135 1 273 1 252 1 253 2 229 1 109 1 278 1 137 2 323 1 304 2 283 1 371 2 372 1 35 1 145 1 214 1 260 1 290 1 71 1 333 1 148 1 97 1 42 1 
151 1 150 1 195 2 101 1 3 1 153 1 198 1 78 1 155 1 48 1 103 2 315 1 81 2 270 1 162 1 135 1 273 1 252 1 253 1 229 1 109 1 278 1 137 1 323 1 304 2 283 1 371 1 372 1 35 1 145 1 214 1 260 1 290 1 71 1 333 1 148 1 97 1 42 1 
151 1 195 2 101 1 3 1 153 1 198 1 78 1 155 1 48 1 103 2 315 1 81 2 134 1 53 1 270 1 162 1 135 1 273 1 320 1 252 1 109 1 278 1 137 1 323 1 304 2 283 1 371 1 372 1 35 1 260 1 290 1 71 1 17 1 148 1 97 1 42 1 359 1 313 1 
75 1 223 1 131 1 334 1 9 1 164 1 301 1 11 6 12 2 140 1 141 1 32 1 326 3 61 1 118 3 235 2 92 1 286 2 374 1 309 1 353 1 237 2 176 1 72 1 220 1 360 1 
223 1 334 2 335 2 105 1 49 1 158 3 51 1 106 1 83 3 9 4 301 2 167 1 29 1 11 14 12 4 140 2 282 1 210 1 326 6 328 1 118 8 235 1 284 2 286 1 92 2 236 1 65 1 374 2 309 2 353 1 220 11 360 11 
223 1 129 1 1 1 334 1 5 1 155 2 184 1 270 2 161 1 366 1 9 1 274 1 301 1 109 1 29 1 167 1 11 2 139 1 12 2 303 1 140 1 231 1 169 1 326 1 143 1 118 1 259 1 234 1 286 1 215 1 65 1 374 1 309 1 68 1 36 1 93 1 358 1 294 1 
334 2 196 1 335 1 5 1 155 2 50 1 51 1 161 1 9 3 343 1 301 2 109 1 11 7 59 1 12 4 303 1 169 1 116 1 118 3 259 1 215 1 65 1 309 2 353 1 358 1 220 3 360 3 223 2 129 1 270 2 366 1 274 1 29 1 139 1 140 2 231 1 326 4 143 1 235 1 284 1 92 1 374 2 36 1 93 1 329 1 237 1 294 1 
223 2 76 2 334 2 2 1 5 7 155 1 132 1 225 1 6 1 270 1 161 1 366 3 274 2 10 1 301 2 109 1 167 1 29 1 11 2 139 2 12 4 303 1 140 2 281 1 169 2 326 1 114 1 118 1 215 1 374 2 309 2 36 8 93 2 95 1 72 1 219 1 99 1 149 1 294 8 
223 1 334 1 335 1 155 1 51 1 270 1 9 1 255 1 301 1 109 1 11 3 12 2 140 1 303 1 326 2 118 1 285 1 284 1 92 1 215 1 65 1 374 1 309 1 353 1 312 1 220 1 360 1 
223 1 362 1 334 1 105 1 118 2 235 1 284 1 92 1 9 1 374 1 309 1 301 1 11 2 72 1 12 2 220 1 140 1 360 1 
223 1 326 2 334 1 51 1 9 1 374 1 309 1 353 1 264 1 301 1 11 2 72 1 12 2 220 1 140 1 360 1 
223 1 326 2 334 1 335 1 118 2 284 1 51 1 92 1 9 2 374 1 353 1 309 1 301 1 11 4 72 1 12 2 220 2 140 1 360 2 
223 1 362 1 334 1 105 1 118 2 235 1 284 1 92 1 9 1 374 1 309 1 301 1 11 2 219 1 12 2 220 1 140 1 360 1 
223 1 326 2 334 1 51 1 9 1 374 1 309 1 353 1 264 1 301 1 11 2 219 1 12 2 220 1 140 1 360 1 
223 1 326 2 334 1 335 1 105 1 118 2 235 1 284 1 51 1 92 1 9 2 374 1 353 1 309 1 301 1 11 4 219 1 12 2 220 2 140 1 360 2 
223 1 326 2 334 1 335 1 118 2 284 1 51 1 92 1 9 2 374 1 353 1 309 1 301 1 11 4 12 2 220 2 140 1 360 2 
223 1 129 1 334 1 5 1 155 1 270 1 366 1 274 1 343 1 301 1 167 1 29 1 11 2 139 1 12 2 140 1 169 1 326 1 143 1 118 1 259 1 286 1 374 1 309 1 36 1 93 1 358 1 294 1 
223 1 334 1 5 1 155 1 270 1 366 1 274 1 301 1 167 1 29 1 11 2 139 1 12 2 140 1 169 1 326 1 143 1 118 1 286 1 374 1 122 1 309 1 36 1 93 1 331 1 358 1 179 1 294 1 
223 1 326 2 334 1 335 1 118 2 284 1 51 1 92 1 9 2 65 1 374 1 353 1 309 1 301 1 11 4 12 2 220 2 140 1 360 2 
223 1 129 1 334 1 335 1 5 1 155 1 132 1 50 1 51 1 270 1 9 2 366 1 274 1 343 1 301 1 11 4 139 1 12 2 140 1 169 1 326 2 143 1 118 2 259 1 284 1 92 1 374 1 353 1 309 1 36 1 358 1 220 2 360 2 294 1 
223 1 334 1 335 1 155 1 105 1 51 1 270 1 9 1 255 1 301 1 109 1 11 3 12 2 140 1 303 1 326 1 118 2 235 1 285 1 284 1 92 1 215 1 65 1 374 1 353 1 309 1 240 1 220 1 360 1 
0 1 334 2 335 2 105 1 158 1 51 2 83 2 301 2 11 13 12 4 208 1 140 2 210 1 326 7 173 1 118 6 235 1 284 2 92 2 236 1 121 1 289 1 374 2 353 2 70 1 356 1 221 1 222 1 
128 1 334 3 335 3 105 2 226 1 157 1 158 2 51 2 83 2 23 2 254 1 301 3 11 26 12 6 208 4 140 3 326 12 210 2 60 1 173 2 212 1 118 14 235 3 284 3 92 3 121 1 374 3 353 2 237 1 70 1 356 2 74 1 221 1 222 1 
334 3 335 4 105 4 157 1 158 3 51 4 164 1 301 3 254 1 11 41 12 6 208 4 210 3 60 1 62 1 173 2 212 1 118 20 121 1 353 5 176 1 70 1 356 1 74 1 222 1 221 1 128 1 75 1 131 1 226 1 83 4 23 1 140 3 141 1 32 1 326 21 235 6 284 4 92 5 236 1 374 3 289 1 237 2 
334 4 335 4 105 3 157 1 158 3 51 3 164 1 301 4 254 1 11 38 12 8 208 4 210 3 60 1 62 1 173 2 212 1 118 20 121 1 353 4 176 1 70 1 356 1 74 1 222 1 221 1 128 1 75 1 131 1 226 1 83 4 23 2 140 4 141 1 32 1 326 18 235 5 284 4 92 5 236 1 374 4 289 1 237 2 
75 1 128 1 131 1 334 2 335 4 105 2 226 1 157 1 158 2 51 4 83 3 23 1 164 1 254 1 301 2 11 37 12 4 141 1 140 2 208 4 32 1 210 2 326 19 60 1 173 1 212 1 118 18 235 4 284 4 92 5 236 1 121 1 374 2 353 5 237 2 176 1 70 1 356 1 74 1 221 1 222 1 
351 1 251 1 272 1 216 1 277 1 338 1 347 1 280 1 266 1 207 1 
239 1 265 1 
351 1 216 1 136 1 338 1 347 1 199 1 280 1 207 1 190 1 
88 1 245 1 247 1 103 1 338 1 337 2 347 1 351 1 251 1 216 1 175 1 277 1 187 1 218 1 280 1 266 1 207 1 304 1 
88 1 245 1 247 1 103 1 338 1 337 2 347 1 351 1 251 1 216 1 175 1 277 1 187 1 218 1 280 1 266 1 207 1 304 1 
88 1 245 1 247 1 103 1 338 1 337 2 347 1 351 1 251 1 216 1 175 1 277 1 187 1 218 1 280 1 266 1 207 1 304 1 
306 1 20 1 27 1 
306 1 20 1 27 1 
34 1 40 1 
20 1 34 1 40 1 
321 1 206 1 
245 1 269 1 155 2 103 1 338 1 337 1 270 2 367 1 200 1 321 1 206 1 109 2 280 1 207 1 87 1 304 1 303 2 258 1 347 1 286 1 215 2 351 1 216 1 175 1 239 1 41 1 265 1 
306 1 27 1 
20 1 34 1 40 1 
223 1 45 1 76 2 334 1 5 2 155 2 82 1 270 2 366 1 54 1 274 1 301 1 109 2 167 1 29 1 11 2 139 1 12 2 140 1 230 1 169 1 326 1 233 1 114 1 118 1 65 1 374 1 309 1 36 2 149 1 294 2 
5 2 183 1 132 1 117 2 6 1 249 1 144 1 365 1 8 1 185 1 55 1 310 1 274 1 36 2 166 1 205 1 344 1 139 1 294 2 
13 1 5 1 183 1 117 2 6 1 249 1 144 1 365 1 8 1 185 1 310 1 274 1 36 1 205 1 344 1 139 1 294 1 
366 1 169 1 274 1 36 1 93 1 166 1 95 1 5 1 307 1 144 1 139 1 281 1 15 1 294 1 
5 1 183 1 117 2 6 1 249 1 144 1 365 1 8 1 185 1 55 1 310 1 274 1 36 1 166 1 205 1 344 1 139 1 294 1 
319 1 
223 1 129 1 334 1 5 1 155 3 270 3 366 1 274 1 56 1 343 1 301 1 109 2 29 1 11 1 12 2 139 1 140 1 303 2 169 1 326 1 143 1 259 1 285 2 286 1 215 2 374 1 263 1 309 1 36 1 93 1 358 1 294 1 
32 1 88 4 198 1 153 1 315 1 340 1 227 1 53 4 135 1 273 2 67 2 146 2 300 2 229 2 323 1 
273 1 88 1 300 1 61 1 153 1 248 1 194 1 
150 1 195 1 88 1 198 1 153 1 315 1 35 1 214 1 53 1 135 1 273 1 300 1 253 1 229 1 323 1 
195 2 296 2 335 1 153 4 198 2 5 1 336 1 103 1 51 1 53 6 299 1 201 1 59 1 304 1 256 1 257 1 169 1 120 1 353 1 67 3 358 1 22 1 315 2 227 1 366 4 135 2 273 3 274 1 229 3 323 2 139 2 88 3 370 1 372 1 35 1 284 1 92 1 93 1 36 1 146 3 292 1 38 1 294 1 
195 1 335 2 198 2 153 8 336 2 155 1 340 1 157 1 158 1 51 2 53 6 300 2 56 1 109 1 303 1 110 1 210 1 212 1 174 1 213 1 215 1 352 1 353 2 67 5 74 1 128 1 315 2 226 1 227 1 270 1 83 1 135 2 273 5 229 3 323 2 324 1 88 5 35 1 284 2 285 1 92 2 290 1 146 5 332 1 
131 1 198 1 153 2 336 2 155 1 103 1 315 1 270 1 135 1 273 2 56 1 203 1 109 1 323 1 324 1 141 1 304 1 303 1 110 1 174 1 285 1 92 2 215 1 353 1 290 1 176 1 332 1 333 1 
88 1 198 1 153 1 248 1 315 1 135 1 273 1 300 1 323 1 194 1 
88 2 335 1 153 2 284 1 92 1 51 1 53 4 273 2 353 1 67 2 146 2 229 2 
195 1 88 1 155 1 174 1 35 1 285 1 270 1 215 1 290 1 300 1 56 1 332 1 109 1 324 1 303 1 
195 2 153 1 198 1 5 1 104 1 340 1 315 1 35 1 227 1 135 1 273 1 93 1 36 1 26 1 217 1 323 1 294 1 
102 1 280 1 207 1 
102 1 280 1 207 1 
251 1 321 1 280 1 207 1 100 1 
102 1 280 1 207 1 
94 1 280 1 207 1 
94 1 280 1 207 1 
94 1 280 1 207 1 
280 1 207 1 
351 1 338 1 
32 1 75 1 326 4 131 1 334 2 105 1 118 4 235 3 92 1 23 1 374 2 353 1 164 1 237 2 176 1 301 2 11 8 12 4 140 2 141 1 
32 1 75 1 326 3 131 1 61 1 118 3 235 2 92 1 353 1 164 1 237 2 176 1 11 6 141 1 
305 1 326 2 334 1 335 1 105 1 118 2 235 1 284 1 51 1 92 1 374 1 353 1 301 1 11 4 12 2 140 1 
210 1 326 4 335 1 105 1 118 3 235 1 158 1 284 1 51 1 92 1 83 2 236 1 353 1 11 7 
75 1 131 2 334 1 335 2 49 1 105 4 158 2 51 2 83 2 23 1 164 1 203 1 301 1 11 25 12 2 141 2 140 1 32 1 326 12 328 1 118 13 235 8 284 2 92 5 236 1 374 1 353 5 237 4 176 2 
326 1 11 1 83 1 
118 1 11 1 158 1 
326 3 335 1 105 1 118 3 235 2 284 1 92 1 51 1 353 1 237 1 59 1 11 6 
128 1 334 2 335 2 105 1 226 1 157 1 158 1 51 2 83 1 23 1 301 2 11 13 12 4 140 2 326 7 210 1 212 1 118 6 235 2 284 2 92 2 121 1 374 2 353 2 237 1 74 1 
326 3 131 1 105 1 118 3 235 2 92 1 353 1 237 1 176 1 11 6 141 1 
75 1 131 1 326 2 334 1 105 1 118 1 298 1 235 2 23 1 374 1 164 1 237 1 301 1 11 3 12 2 141 1 140 1 
131 2 326 5 334 1 105 2 118 5 235 5 92 2 121 1 374 1 353 2 203 1 237 3 176 1 301 1 11 10 12 2 140 1 141 2 
334 1 105 1 118 2 235 1 284 1 92 1 121 1 374 1 301 1 11 2 12 2 140 1 
326 2 334 1 335 1 118 2 284 1 92 1 51 1 121 1 374 1 353 1 301 1 11 4 12 2 140 1 
326 2 131 1 334 3 105 1 298 1 118 1 235 2 23 1 121 1 289 1 374 3 237 1 301 3 11 3 12 6 140 3 141 1 
75 1 131 3 334 5 335 3 197 1 105 5 298 1 158 3 51 3 83 4 23 2 164 1 301 5 276 1 11 34 12 10 141 3 140 5 32 1 305 1 326 18 210 1 118 16 235 9 284 3 92 5 236 1 121 1 289 1 374 5 353 5 237 4 176 2 242 1 
75 1 131 1 334 1 226 1 158 1 83 1 164 1 301 1 11 8 12 2 140 1 141 1 32 1 326 4 210 1 118 4 235 2 92 1 121 1 374 1 353 1 237 2 176 1 
75 1 131 1 334 2 335 1 226 1 105 1 158 1 83 2 164 1 301 2 11 11 12 4 141 1 140 2 32 1 305 1 326 5 210 1 118 6 235 3 284 1 92 2 236 1 121 1 374 2 353 1 237 2 176 1 
75 1 128 1 131 1 334 3 335 2 105 1 226 1 157 1 158 1 51 2 83 1 23 1 164 1 301 3 11 19 12 6 141 1 140 3 32 1 305 1 326 10 210 1 212 1 118 9 235 4 284 2 92 3 121 1 374 3 353 3 237 3 176 1 74 1 
128 1 334 4 335 2 105 1 226 1 157 1 158 1 51 1 83 1 23 2 301 4 11 12 12 8 140 4 305 1 326 5 210 1 212 1 118 7 235 2 284 2 92 2 121 1 374 4 353 1 237 1 74 1 
75 1 131 1 334 1 226 1 158 1 83 1 164 1 301 1 11 8 12 2 140 1 141 1 32 1 326 4 210 1 118 4 235 2 92 1 121 1 374 1 353 1 237 2 176 1 
128 1 334 2 335 2 105 1 226 1 157 1 158 1 51 2 83 1 23 1 301 2 11 13 12 4 140 2 326 7 210 1 212 1 118 6 235 2 284 2 92 2 121 1 374 2 353 2 237 1 74 1 
75 1 128 1 131 1 334 4 335 2 105 2 226 1 157 1 158 1 51 1 83 1 23 2 164 1 301 4 11 18 12 8 141 1 140 4 32 1 305 1 326 8 210 1 212 1 118 10 235 5 284 2 92 3 121 1 374 4 353 2 237 3 176 1 74 1 
128 1 334 4 335 3 105 3 226 1 157 1 158 1 51 2 83 1 23 2 301 4 11 16 12 8 140 4 326 7 210 1 212 1 118 9 235 4 284 3 92 3 121 1 374 4 289 1 353 2 237 1 74 1 
75 2 326 4 131 3 105 3 118 3 235 6 92 1 353 1 164 1 237 3 176 1 11 7 141 3 
75 1 128 1 131 1 334 4 335 2 105 1 226 1 157 1 158 1 51 1 83 1 23 2 164 1 301 4 11 18 12 8 141 1 140 4 32 1 326 8 210 1 212 1 118 10 235 4 284 2 92 3 121 1 374 4 289 1 353 2 237 3 176 1 74 1 
3 1 125 1 155 1 109 1 7 1 286 1 270 1 
180 1 3 1 181 1 155 1 7 1 286 1 270 1 191 1 16 1 125 1 109 1 126 1 
366 1 169 1 274 1 36 1 93 1 61 1 95 1 5 1 139 1 281 1 294 1 
169 1 143 1 5 1 155 2 259 1 286 1 161 1 215 1 270 2 366 1 274 1 93 1 36 1 109 1 358 1 139 1 303 1 294 1 
5 1 155 2 270 2 161 1 366 3 274 1 252 1 109 2 139 1 303 2 169 2 143 1 172 1 259 1 286 1 119 1 215 1 36 1 290 1 39 1 97 1 358 2 294 1 
5 2 155 2 270 2 161 1 366 3 274 1 252 1 109 2 139 1 303 2 169 2 89 1 143 1 172 1 286 1 119 1 215 1 36 2 290 1 39 1 97 1 358 2 179 1 294 2 
268 1 169 1 195 1 88 1 296 1 89 1 370 1 5 3 172 1 103 2 372 1 119 1 366 4 163 1 274 1 93 1 300 1 36 3 39 1 358 1 139 1 304 2 294 3 
169 1 195 1 88 1 296 1 89 1 370 1 5 3 22 1 172 1 103 2 372 1 119 1 366 4 274 1 93 1 300 1 36 3 39 1 358 1 139 1 304 2 294 3 
274 1 36 1 10 1 5 1 139 1 294 1 
76 1 363 1 2 1 5 6 79 1 225 1 132 1 6 1 366 3 274 2 10 1 28 1 139 3 256 1 169 2 36 7 93 2 358 1 149 1 99 1 294 7 
334 2 5 1 155 2 50 1 161 1 9 1 164 1 343 1 301 2 109 1 11 6 12 4 303 1 169 1 116 1 118 3 259 1 215 1 65 1 309 2 353 1 176 1 358 1 220 1 360 1 223 2 75 1 129 1 131 1 132 1 82 1 270 2 366 1 274 1 139 1 140 2 141 1 32 1 326 3 143 1 235 2 92 1 286 2 374 2 36 1 237 2 294 1 
195 2 296 1 198 2 153 4 5 1 336 2 103 2 155 1 104 1 248 1 200 1 300 2 56 1 201 1 203 1 109 1 304 2 303 1 110 1 257 1 174 1 215 1 353 2 176 1 131 1 22 1 315 2 270 1 366 2 135 2 273 5 323 2 324 1 141 1 88 2 370 1 372 1 35 1 285 1 92 2 290 1 36 1 93 1 292 1 332 1 294 1 194 1 
256 1 169 1 370 1 5 2 132 1 366 2 299 1 274 1 36 2 10 1 358 1 139 2 294 2 
169 1 89 1 5 4 132 1 366 1 274 1 93 1 36 4 355 1 95 1 139 1 281 1 294 4 
232 1 169 1 363 1 314 1 5 2 79 1 119 1 366 1 274 1 36 2 86 1 358 1 139 2 294 2 
185 1 274 1 36 1 93 1 5 1 117 1 344 1 249 1 139 1 294 1 
169 1 5 2 132 1 6 1 366 1 274 1 36 2 139 1 149 1 294 2 230 1 
169 2 2 1 5 4 132 1 119 1 366 3 274 2 93 1 36 5 355 1 95 1 139 2 281 1 149 1 99 1 294 5 
169 2 5 4 132 1 119 1 366 3 66 1 274 2 93 1 36 5 355 1 95 1 139 2 281 1 149 1 99 1 294 5 
169 1 143 1 5 1 155 2 286 1 161 1 215 1 270 2 366 1 274 1 93 1 36 1 109 1 358 1 139 1 303 1 294 1 179 1 
256 1 169 1 363 1 5 1 79 1 119 1 366 1 274 1 36 1 28 1 358 1 139 2 294 1 
54 1 45 1 368 1 147 1 233 1 155 1 177 1 109 1 270 1 
69 1 368 1 90 1 
147 1 368 1 177 1 286 1 267 1 
88 1 170 1 103 2 90 1 372 1 286 1 162 1 300 1 290 1 200 1 252 1 368 1 69 1 147 2 177 2 58 1 97 1 304 2 267 2 
188 3 4 1 113 1 182 1 349 3 373 1 342 1 123 1 186 1 193 1 293 1 
325 1 4 1 350 1 43 1 
4 1 182 1 
123 1 4 1 61 1 182 1 
188 1 123 1 4 1 182 1 113 1 349 1 373 1 
124 1 317 1 349 1 
188 3 4 1 113 1 182 1 349 3 373 1 84 1 123 1 192 1 204 1 193 1 293 2 
188 2 123 1 142 1 4 1 186 1 182 1 113 1 349 2 373 1 
8 1 185 1 188 1 325 1 4 1 202 1 113 1 117 1 193 1 349 1 373 1 
188 1 4 1 182 1 113 1 193 1 349 1 373 1 
188 1 123 1 182 2 113 1 193 1 349 1 373 1 
19 1 188 2 152 1 4 1 182 1 113 2 349 2 341 1 373 2 193 1 
188 3 325 1 4 2 182 1 113 1 349 3 373 1 342 1 123 1 186 2 193 1 30 1 43 1 
188 2 4 1 182 1 113 1 117 2 249 1 349 2 373 1 8 1 185 1 123 1 186 1 205 1 193 1 98 1 
188 4 325 1 142 1 4 2 189 1 182 1 113 2 349 4 373 2 123 1 186 2 193 1 43 1 
188 1 123 1 4 1 182 1 113 1 193 1 349 1 373 1 
188 4 325 1 4 3 182 2 113 1 349 4 350 1 373 1 84 1 123 2 186 2 204 1 293 1 43 1 
188 2 4 1 297 1 182 1 113 1 349 2 373 1 123 1 322 1 186 1 228 1 193 1 
188 3 4 1 113 1 154 1 182 1 349 3 373 1 84 2 123 1 204 1 193 1 293 2 
111 1 4 2 308 2 302 1 
188 1 113 1 193 1 349 1 375 1 373 1 
188 2 123 1 4 1 186 1 182 1 113 1 193 1 349 2 342 1 373 1 
316 1 
188 1 123 1 4 1 182 1 113 1 193 1 349 1 373 1 

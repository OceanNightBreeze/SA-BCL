#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (220,279,307) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (220,279,307) 245 127 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (220,279,307) 245 306 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (220,279,307) (220,279,307) 76 210 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 298 254 (340,358) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 298 254 (153,215) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (220,279,307) 245 219 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 74 (163,221) (163,221) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 1 114 1 328 9 73 1 119 2 233 2 74 4 97 1 10 2 54 6 310 1 354 1 314 2 316 1 221 1 198 1 65 3 83 1 157 2 40 2 159 1 301 1 203 4 163 1 324 9 231 1 47 2 283 1 
326 1 114 1 328 9 73 1 119 2 233 2 74 4 97 1 10 2 54 6 310 1 354 1 314 2 316 1 221 1 198 1 65 3 83 1 157 2 40 2 159 1 301 1 203 4 163 1 324 9 231 1 283 1 47 2 
326 1 114 1 328 10 73 1 119 2 233 2 74 5 97 1 10 2 54 7 310 1 354 1 314 2 316 1 221 1 198 1 65 4 83 1 157 2 40 2 159 1 301 1 203 5 163 1 324 10 231 1 283 1 47 2 
114 1 328 7 73 1 119 2 233 2 74 3 97 1 10 2 54 4 310 1 354 1 314 2 316 1 221 1 198 1 65 2 83 1 157 2 40 2 159 1 301 1 203 3 163 1 324 7 231 1 283 1 47 1 
326 1 65 1 328 4 73 1 233 1 74 2 40 1 157 1 10 1 54 3 354 1 203 2 163 1 314 1 221 1 324 4 47 2 231 1 
328 2 198 1 274 1 119 1 233 1 141 1 40 1 159 1 10 1 217 1 354 1 163 1 314 1 221 1 324 2 
328 3 65 1 119 1 233 2 74 1 54 1 354 1 203 1 163 1 314 2 221 1 324 3 283 1 
326 1 328 9 170 1 73 1 119 1 233 2 74 4 10 1 54 7 288 1 354 1 314 2 316 1 221 1 65 3 83 1 157 1 40 1 203 4 163 1 324 9 283 1 47 2 231 1 
326 1 328 9 170 1 73 1 119 1 233 2 74 4 10 1 54 7 288 1 354 1 314 2 316 1 221 1 65 3 83 1 157 1 40 1 203 4 163 1 324 9 283 1 47 2 231 1 
357 1 72 1 318 1 
138 2 357 1 75 1 
63 1 168 2 2 2 117 2 224 2 112 1 29 2 195 2 
168 2 2 2 139 1 117 3 305 1 94 1 28 1 52 2 6 2 29 2 9 1 195 3 330 1 174 1 13 1 335 1 81 2 358 1 149 2 17 1 63 1 249 1 106 1 224 2 295 1 21 1 128 2 254 1 44 1 321 1 299 1 112 1 91 1 322 1 164 1 259 1 209 1 
63 1 168 1 2 1 117 1 224 1 60 1 189 1 29 1 360 1 195 1 
279 1 2 1 117 1 205 1 307 1 360 1 158 1 113 1 195 1 
168 1 2 1 117 1 224 1 307 1 29 1 360 1 158 1 113 1 195 1 
25 1 313 1 59 1 348 1 220 1 
333 1 25 1 357 1 72 1 313 2 59 1 292 1 220 2 
313 1 59 1 220 1 
63 1 168 1 2 1 117 1 224 1 29 1 360 1 195 1 25 1 313 1 60 1 61 1 189 1 220 1 
357 1 
25 1 357 1 72 1 313 2 59 1 292 1 220 2 103 1 
18 1 192 2 262 1 72 1 180 2 341 1 342 1 98 1 361 1 290 2 25 2 357 1 313 5 346 1 59 2 292 1 208 1 220 5 294 1 
112 1 318 1 
168 1 2 2 117 2 224 1 200 1 29 1 195 2 362 1 112 2 
331 1 291 1 240 1 
249 1 117 1 305 1 295 1 128 1 6 1 195 1 254 1 44 1 321 1 174 1 112 1 259 1 100 1 358 1 149 1 
222 1 168 1 249 1 2 1 117 2 305 1 339 1 224 1 295 1 128 1 6 1 254 1 195 2 44 1 321 1 331 1 174 1 259 1 358 1 149 1 
222 2 168 4 2 4 117 4 339 1 224 4 154 1 19 1 29 1 360 1 195 4 362 1 112 1 247 1 
276 1 168 2 2 2 117 2 224 2 189 1 360 1 195 2 
222 1 168 3 2 3 117 3 224 3 112 1 29 1 195 3 
168 1 2 1 117 1 224 1 189 1 360 1 195 1 
168 1 2 1 117 1 224 1 362 1 200 1 29 1 360 1 195 1 
222 1 168 2 2 2 117 2 339 1 224 2 307 1 127 1 29 1 360 1 158 1 195 2 362 1 245 1 113 1 
168 1 222 1 2 2 205 1 117 2 224 1 112 1 267 1 195 2 
222 1 168 1 2 1 117 1 306 1 339 1 224 1 307 1 360 1 158 1 195 1 245 1 113 1 
222 1 168 2 2 2 117 2 224 2 29 1 195 2 331 1 362 1 291 1 
249 1 117 1 305 1 295 1 128 1 6 1 195 1 254 1 44 1 321 1 174 1 112 1 259 1 358 1 149 1 
137 1 249 1 117 1 305 1 153 1 128 1 6 1 195 1 254 1 44 1 321 1 174 1 112 1 259 1 149 1 
1 1 139 1 28 2 52 2 9 1 240 2 286 1 331 2 291 2 335 1 81 4 80 1 62 1 17 1 179 1 37 1 86 1 319 1 85 1 88 1 91 1 322 1 185 1 209 2 
276 1 168 1 2 1 117 1 224 1 360 1 113 1 195 1 
227 1 334 1 
227 1 334 1 
24 1 353 1 
24 1 353 1 
24 1 353 1 
227 1 334 1 188 1 
227 1 334 1 188 1 
151 1 227 1 334 1 
182 1 24 1 227 2 334 2 353 1 261 1 
227 1 334 1 188 1 
263 1 227 1 334 1 
263 1 227 1 334 1 
263 1 227 1 334 1 
168 2 2 2 351 1 117 2 264 1 232 1 216 1 195 2 123 1 311 1 146 1 313 1 334 1 220 1 151 1 224 2 129 1 225 1 253 1 67 1 204 1 110 1 112 1 227 1 
351 2 27 1 264 1 38 1 41 1 67 2 123 2 226 1 289 1 204 3 145 1 110 2 357 1 313 2 334 2 227 2 220 2 70 2 261 1 
40 1 157 1 10 1 
40 1 10 1 217 1 
255 1 155 1 95 1 157 2 40 3 217 1 
255 1 356 1 95 1 157 1 40 2 217 1 
255 2 95 1 157 1 40 2 217 1 
192 1 138 3 72 1 171 2 329 1 232 1 75 1 239 1 173 1 290 1 55 1 57 1 313 5 357 2 59 1 292 1 80 1 220 5 294 3 36 1 179 1 129 1 86 1 180 1 341 1 253 1 342 2 160 2 201 2 183 1 25 4 185 1 
192 2 49 5 138 9 72 1 171 6 329 3 232 4 75 3 239 1 98 1 290 2 313 9 357 5 59 6 292 1 80 3 220 9 294 8 36 2 179 3 86 3 180 2 87 1 341 1 342 6 160 6 202 1 23 1 183 2 25 7 45 1 185 3 26 1 348 5 212 1 
192 1 138 4 72 1 171 2 232 1 329 1 75 2 98 1 173 1 290 1 55 1 357 3 313 3 220 3 80 1 294 3 36 1 179 1 180 1 86 1 342 2 160 2 201 1 183 1 25 2 185 1 
192 1 138 7 72 1 171 4 232 2 329 2 75 3 98 1 173 1 290 1 55 1 357 4 313 4 220 4 80 2 294 5 36 1 179 2 180 1 86 2 342 4 160 4 202 1 201 2 183 1 25 3 185 2 26 1 212 1 
318 1 259 1 84 1 
259 1 130 1 
241 1 
174 1 249 1 259 1 
259 1 234 1 
174 1 259 1 
174 1 249 1 84 2 259 3 228 1 89 1 
105 1 1 2 177 1 179 1 194 1 28 4 86 1 268 1 30 1 99 1 300 2 165 1 92 1 209 3 46 1 81 7 62 3 
105 1 1 2 177 1 179 1 194 1 28 4 86 1 268 1 30 1 99 1 300 2 165 1 92 1 209 3 46 1 81 7 62 3 
105 1 1 2 177 1 179 1 194 1 28 4 86 1 268 1 30 1 99 1 300 2 165 1 257 1 92 1 209 3 46 1 81 7 62 3 
273 1 300 1 28 1 268 1 46 2 81 1 
1 3 194 1 5 1 28 5 52 4 268 1 30 1 9 2 31 1 99 1 81 9 62 4 17 2 105 1 179 1 86 1 300 2 91 2 322 2 165 1 363 1 92 1 46 1 209 4 
284 1 328 2 308 1 119 1 233 1 6 1 96 1 236 1 10 1 54 1 217 1 354 1 314 1 221 1 149 1 359 1 104 1 155 1 128 1 157 1 40 2 108 1 131 1 44 1 161 1 321 1 163 1 187 1 324 2 
284 1 328 3 308 1 119 1 233 1 6 1 236 1 10 1 54 2 217 1 77 1 314 1 221 1 102 1 149 1 359 1 104 1 223 1 155 1 128 1 157 1 40 2 108 1 131 1 44 1 321 1 163 1 187 1 324 3 
284 1 328 2 119 1 6 1 236 1 10 1 54 2 217 1 77 1 221 1 149 1 104 1 223 1 155 1 128 1 40 2 157 1 108 1 131 1 44 1 321 1 163 1 187 1 324 2 
104 2 328 1 305 1 119 2 172 1 233 1 128 1 6 1 236 2 108 2 11 1 44 1 321 1 174 1 12 1 78 1 314 1 259 1 186 1 190 1 102 1 324 1 149 1 
284 1 328 1 308 1 119 1 233 1 6 1 96 1 236 1 10 1 217 1 354 1 77 1 314 1 149 1 359 1 104 1 155 1 128 1 157 1 40 2 108 1 131 1 44 1 321 1 187 1 324 1 
50 1 
192 1 115 1 2 1 117 1 305 2 307 1 172 1 6 2 195 1 290 1 174 1 124 1 76 1 313 2 59 2 292 1 220 2 294 1 148 1 149 2 36 1 128 2 180 1 341 1 360 1 158 1 342 1 44 1 321 1 279 1 184 1 205 1 259 1 186 1 210 1 135 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 2 76 1 59 1 292 1 220 2 210 1 113 1 103 1 
192 1 2 1 117 1 307 1 180 1 341 1 360 1 158 1 195 1 290 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
2 1 117 1 307 1 360 1 158 1 195 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
192 1 2 1 117 1 307 1 180 1 341 1 360 1 158 1 195 1 290 1 184 1 279 1 124 1 205 1 313 1 76 1 220 1 210 1 113 1 
17 1 105 1 1 2 179 1 139 1 194 1 318 1 28 3 86 1 85 1 52 2 30 1 240 1 9 1 99 1 331 1 300 1 112 2 322 1 91 1 92 1 291 1 335 1 209 3 81 6 62 2 
0 1 1 1 139 1 94 1 28 8 329 2 52 4 9 2 240 11 331 11 56 1 291 4 335 2 271 1 81 14 80 2 62 2 17 2 106 1 252 1 179 1 20 3 296 1 86 2 297 3 112 1 91 2 322 2 165 1 323 1 207 1 185 1 209 6 
168 1 2 1 305 1 139 1 117 2 94 1 28 1 6 1 52 2 9 1 195 2 174 1 291 1 335 1 100 1 81 2 358 1 149 1 17 1 222 1 249 1 106 1 224 1 339 1 295 1 128 1 156 1 254 1 44 1 321 1 112 1 302 1 322 1 91 1 207 1 259 1 209 1 260 1 
1 4 2 1 139 3 94 1 4 1 194 1 329 2 6 3 52 6 9 3 240 7 195 3 330 2 99 1 196 2 331 7 291 7 335 3 246 2 62 8 149 3 17 3 105 1 249 2 106 1 339 1 199 2 295 2 254 2 300 1 112 2 165 4 207 1 259 2 303 2 209 10 168 1 305 1 117 3 28 10 30 1 174 2 77 1 81 20 80 2 358 2 222 1 179 3 224 1 128 3 86 3 181 1 44 2 321 2 91 3 322 3 92 1 185 2 325 1 
168 1 2 1 117 1 305 2 139 2 94 1 28 1 172 1 6 8 52 4 237 1 9 2 269 1 270 1 195 1 174 2 77 1 147 1 335 2 101 1 81 2 149 8 17 2 222 1 106 1 224 1 128 7 85 1 343 1 44 2 161 1 321 2 91 2 322 2 164 2 259 3 186 1 347 1 209 1 
1 1 168 1 2 1 139 1 117 1 329 1 28 1 52 2 29 1 240 1 9 1 195 1 331 1 291 1 335 1 80 1 81 3 62 1 17 1 179 1 224 1 86 1 362 1 91 1 322 1 207 1 185 1 209 2 69 1 
17 1 139 1 28 2 85 1 52 2 86 1 240 1 9 1 286 1 331 1 322 1 91 1 165 1 291 1 335 1 81 2 80 1 62 1 
17 1 1 1 139 1 37 1 179 1 85 1 52 2 240 1 9 1 331 1 322 1 91 1 291 1 185 1 335 1 209 2 81 2 62 1 
1 1 139 1 28 2 329 1 52 2 9 1 240 2 331 2 291 2 335 1 80 1 81 4 62 2 17 1 179 1 86 1 85 1 91 1 322 1 165 1 185 1 209 2 
17 1 139 1 28 2 52 2 86 1 240 1 9 1 286 1 331 1 322 1 91 1 165 1 291 1 335 1 101 1 81 2 80 1 62 1 
17 1 1 1 139 1 37 1 179 1 52 2 240 1 9 1 331 1 322 1 91 1 291 1 185 1 335 1 101 1 209 2 81 2 62 1 
1 1 139 1 28 2 329 1 52 2 9 1 240 2 331 2 291 2 335 1 101 1 80 1 81 4 62 2 17 1 179 1 86 1 91 1 322 1 165 1 185 1 209 2 
1 1 139 1 28 2 329 1 52 2 9 1 240 2 331 2 291 2 335 1 81 4 80 1 62 2 17 1 179 1 86 1 91 1 322 1 165 1 185 1 209 2 
305 1 117 1 139 1 94 1 28 1 6 1 52 2 9 1 330 1 195 1 174 1 335 1 81 2 358 1 149 1 17 1 249 1 106 1 295 1 128 1 254 1 44 1 321 1 112 1 322 1 91 1 259 1 209 1 
137 1 305 1 117 1 139 1 94 1 3 1 28 1 6 1 52 2 9 1 195 1 174 1 335 1 81 2 149 1 17 1 249 1 106 1 153 1 128 1 254 1 44 1 321 1 112 1 322 1 91 1 259 1 209 1 
1 1 139 1 28 2 329 1 52 2 9 1 240 2 331 2 291 2 335 1 80 1 81 4 62 2 17 1 179 1 86 1 91 1 322 1 165 1 207 1 185 1 209 2 
1 1 117 1 139 1 28 2 329 1 6 1 52 2 240 2 9 1 330 1 195 1 331 2 174 1 291 2 335 1 81 4 80 1 246 1 62 2 358 1 149 1 17 1 249 1 179 1 295 1 128 1 86 1 254 1 44 1 321 1 161 1 322 1 91 1 165 1 185 1 259 1 209 2 
168 1 2 1 139 1 117 1 329 1 28 2 52 2 29 1 309 1 9 1 240 1 195 1 331 1 291 1 335 1 80 1 81 3 62 1 17 1 179 1 224 1 86 1 362 1 91 1 322 1 165 1 207 1 185 1 209 1 
1 3 352 1 266 1 28 9 329 3 52 4 9 2 31 1 332 2 58 1 243 1 271 1 81 19 80 3 62 6 17 2 179 3 20 1 39 1 86 3 43 1 133 1 297 2 91 2 322 2 165 3 323 1 185 3 209 10 211 2 
1 2 352 2 266 1 142 1 28 14 329 3 52 6 9 3 31 1 332 4 58 1 81 26 80 3 15 1 62 4 17 3 251 1 179 2 20 2 86 3 43 2 133 1 162 1 297 2 91 3 322 3 165 2 363 2 323 2 185 2 209 12 229 1 191 1 211 1 
1 4 352 1 194 1 266 1 142 1 28 20 329 4 52 6 30 1 9 3 31 1 99 1 332 4 58 1 271 1 81 41 80 4 15 1 62 8 17 3 105 1 251 1 179 5 20 3 39 1 86 5 43 2 133 1 277 1 162 1 297 4 300 1 91 3 322 3 165 4 92 1 363 1 323 3 185 4 209 21 229 1 191 1 211 1 
1 4 352 1 194 1 266 1 142 1 28 20 329 4 52 8 30 1 9 4 31 1 99 1 332 4 58 1 271 1 81 38 80 4 15 1 62 7 17 4 105 1 251 1 179 4 20 3 39 1 86 5 43 2 133 1 277 1 162 1 297 4 300 1 91 4 322 4 165 3 92 1 363 2 323 3 185 3 209 18 229 1 191 1 211 1 
1 7 352 1 194 1 266 1 142 1 28 27 329 7 52 4 30 1 9 2 31 1 99 1 332 4 58 1 271 2 81 52 80 7 15 1 62 14 17 2 105 1 251 1 252 2 179 8 20 4 86 8 43 1 133 1 162 1 297 4 300 1 91 2 322 2 165 7 92 1 363 1 323 2 185 7 209 25 229 1 191 1 211 1 
123 1 351 1 145 1 110 1 227 1 334 1 41 1 16 1 67 1 261 1 
151 1 146 1 
123 1 90 1 351 1 110 1 227 1 334 1 293 1 67 1 287 1 
175 1 188 1 
182 1 263 1 337 1 
351 1 27 1 264 1 38 1 41 1 67 1 123 1 289 1 204 2 145 1 110 1 357 1 313 1 334 1 227 1 220 1 70 1 261 1 
351 1 27 1 264 1 38 1 41 1 67 1 123 1 289 1 204 2 145 1 110 1 357 1 313 1 334 1 227 1 220 1 70 1 261 1 
351 1 27 1 264 1 38 1 41 1 67 1 123 1 289 1 204 2 145 1 110 1 357 1 313 1 334 1 227 1 220 1 70 1 261 1 
182 1 175 1 188 1 
182 1 175 1 188 1 
263 1 337 1 
182 1 263 1 337 1 
311 1 216 1 
168 2 2 2 117 2 351 1 232 1 216 1 195 2 123 1 311 1 146 1 313 1 334 1 220 1 151 1 224 2 38 1 129 1 225 1 253 1 67 1 204 1 25 1 110 1 112 1 227 1 167 1 70 1 
213 1 2 2 139 1 117 2 94 1 265 1 120 1 28 1 6 2 52 2 9 1 269 1 195 2 174 1 355 1 335 1 79 1 81 2 149 2 17 1 106 1 128 2 343 1 44 1 321 1 322 1 91 1 164 2 207 1 259 1 209 1 
327 1 155 1 308 1 128 2 6 2 7 1 157 1 40 2 236 1 10 1 131 1 217 1 44 1 321 1 161 1 77 1 35 1 187 1 149 2 
155 1 308 1 128 1 6 1 7 1 157 1 40 2 235 1 236 1 10 1 131 1 217 1 44 1 321 1 77 1 187 1 149 1 
327 1 305 1 178 1 128 1 172 1 6 1 236 1 44 1 321 1 174 1 78 1 259 1 186 1 149 1 
327 1 155 1 308 1 128 1 6 1 7 1 157 1 40 2 236 1 10 1 131 1 217 1 44 1 321 1 77 1 35 1 187 1 149 1 
109 1 
18 1 357 1 72 1 346 1 318 1 294 1 342 1 
192 1 138 1 71 1 72 1 75 1 122 1 290 1 144 1 357 2 313 1 59 1 292 1 220 1 294 1 180 1 341 1 342 1 
192 4 138 12 329 2 6 3 234 2 290 4 59 5 292 3 148 1 294 9 149 3 18 1 64 1 150 1 249 3 338 2 199 2 340 2 341 4 22 2 342 8 160 6 161 1 298 2 346 1 259 10 166 1 304 2 350 2 305 1 116 2 72 2 171 6 75 6 174 3 312 2 313 5 357 8 220 5 80 2 36 2 317 2 82 1 179 2 128 3 84 2 180 4 86 2 130 3 44 3 321 4 280 1 185 2 228 1 
192 2 116 1 138 6 72 2 171 5 142 1 329 2 75 3 290 2 313 1 357 5 59 1 292 1 220 1 80 2 148 1 294 8 15 1 36 1 251 1 179 2 20 1 180 2 86 2 341 2 342 5 160 5 297 1 111 1 323 1 185 2 229 1 349 1 191 1 350 2 
192 1 168 1 2 1 116 1 117 1 194 1 29 1 30 1 195 1 197 1 290 1 313 1 60 1 61 1 220 1 294 2 63 1 105 1 179 1 224 1 275 1 180 1 86 2 341 1 360 1 342 2 189 1 350 2 
192 1 18 1 72 1 180 1 341 1 342 1 290 1 357 1 346 1 294 1 
116 1 138 10 179 2 199 1 171 5 329 2 86 2 75 5 342 5 160 5 357 5 185 2 80 2 294 5 350 2 
357 1 72 1 313 1 59 1 292 1 220 1 
192 2 115 1 305 2 118 1 172 1 6 4 98 1 174 1 290 2 313 3 59 4 292 2 220 3 294 2 148 2 149 4 36 2 82 1 128 4 180 2 341 1 342 2 44 1 321 1 259 1 186 1 166 2 230 1 135 1 
168 2 2 2 305 1 117 3 139 1 94 1 52 2 6 1 29 2 9 1 195 3 330 1 174 1 13 1 335 1 81 1 358 1 149 1 17 1 63 1 249 1 224 2 295 1 128 1 254 1 44 1 321 1 112 1 91 1 322 1 259 1 209 1 
192 1 36 1 138 4 72 2 171 2 180 1 75 2 341 1 342 2 160 2 290 1 300 1 357 4 294 1 148 1 
123 1 351 1 242 1 
123 1 351 1 242 1 
123 1 311 1 351 1 145 1 282 1 
123 1 351 1 242 1 
248 1 123 1 351 1 
248 1 123 1 351 1 
248 1 123 1 351 1 
123 1 351 1 
227 1 334 1 
17 2 105 1 1 2 179 1 194 1 28 4 86 1 52 4 30 1 9 2 99 1 300 1 322 2 91 2 165 1 363 1 92 1 209 4 81 8 62 3 
99 1 105 1 1 2 300 1 179 1 194 1 318 1 92 1 28 3 86 1 209 3 81 6 30 1 62 2 
17 1 1 1 179 1 107 1 329 1 28 2 52 2 86 1 9 1 322 1 91 1 165 1 185 1 209 2 80 1 81 4 62 2 
1 1 179 1 20 1 28 3 329 1 86 1 297 2 165 1 323 1 185 1 271 1 209 4 81 7 80 1 62 2 
0 1 1 5 194 2 329 2 28 11 52 4 30 2 9 2 99 1 271 1 80 2 81 23 62 9 17 2 105 1 252 1 179 3 20 2 86 3 297 2 300 1 256 1 322 2 91 2 165 4 92 1 363 2 185 2 209 12 
297 1 209 1 81 1 
20 1 28 1 81 1 
17 1 1 2 179 1 199 1 107 1 329 1 28 3 52 2 86 1 9 1 91 1 322 1 165 1 185 1 209 3 81 6 80 1 62 3 
1 1 28 6 329 2 142 1 52 2 9 1 31 1 81 12 80 2 15 1 62 2 17 1 251 1 179 2 20 1 86 2 297 1 91 1 322 1 165 1 323 1 185 2 209 6 229 1 191 1 
105 1 1 1 179 1 194 1 28 3 86 1 30 1 165 1 209 3 81 6 62 2 
17 1 1 1 194 1 28 1 52 2 30 1 9 1 99 1 256 1 322 1 91 1 165 1 92 1 363 1 209 2 81 3 62 2 
17 1 1 3 105 1 179 2 194 2 28 5 52 2 86 2 30 2 9 1 31 1 197 1 91 1 322 1 165 2 209 5 81 10 62 5 
17 1 28 2 52 2 86 1 9 1 31 1 322 1 91 1 165 1 80 1 81 2 62 1 
17 1 1 1 179 1 329 1 28 2 52 2 86 1 9 1 31 1 322 1 91 1 165 1 185 1 209 2 80 1 81 4 62 2 
17 3 1 1 194 1 28 1 39 1 52 6 30 1 9 3 31 1 256 1 322 3 91 3 165 1 363 1 209 2 81 3 62 2 
1 7 194 3 28 16 329 3 52 10 143 1 30 3 9 5 31 1 99 1 34 1 271 1 81 34 80 3 62 12 17 5 105 2 179 5 107 1 20 3 39 1 86 5 297 4 300 1 256 1 91 5 322 5 165 5 92 1 363 2 323 1 185 3 209 18 136 1 
1 2 194 1 28 4 52 2 30 1 9 1 31 1 99 1 81 8 62 2 17 1 105 1 179 1 20 1 86 1 297 1 300 1 91 1 322 1 323 1 92 1 209 4 191 1 
1 2 194 1 28 6 329 1 52 4 30 1 9 2 31 1 99 1 271 1 81 11 80 1 62 3 17 2 105 1 179 1 107 1 20 1 86 2 297 2 300 1 91 2 322 2 165 1 92 1 323 1 209 5 191 1 
1 3 194 1 28 9 329 2 142 1 52 6 30 1 9 3 31 1 99 1 81 19 80 2 15 1 62 4 17 3 105 1 251 1 179 3 107 1 20 1 86 3 297 1 300 1 91 3 322 3 165 1 92 1 323 1 363 1 185 2 209 10 229 1 191 1 
1 3 194 1 28 10 329 2 142 1 52 6 30 1 9 3 31 1 99 1 81 17 80 2 15 1 62 5 17 3 105 1 251 1 179 2 107 1 20 1 86 3 297 1 300 1 91 3 322 3 165 2 92 1 363 1 323 1 185 1 209 7 229 1 191 1 
1 2 194 1 28 4 52 2 30 1 9 1 31 1 99 1 81 8 62 2 17 1 105 1 179 1 20 1 86 1 297 1 300 1 91 1 322 1 323 1 92 1 209 4 191 1 
1 1 28 6 329 2 142 1 52 2 9 1 31 1 81 12 80 2 15 1 62 2 17 1 251 1 179 2 20 1 86 2 297 1 91 1 322 1 165 1 323 1 185 2 209 6 229 1 191 1 
1 3 194 1 142 1 28 10 329 2 52 8 30 1 9 4 31 1 99 1 81 18 80 2 15 1 62 5 17 4 105 1 251 1 179 2 107 1 20 1 86 3 297 1 300 1 91 4 322 4 165 2 92 1 323 1 363 2 185 1 209 8 229 1 191 1 
1 3 142 1 28 9 329 3 52 8 9 4 31 1 81 16 80 3 15 1 62 6 17 4 251 1 179 2 20 1 39 1 86 3 297 1 91 4 322 4 165 3 323 1 363 2 185 2 209 7 229 1 191 1 
1 3 105 1 179 1 194 3 28 3 86 1 30 3 99 1 165 3 92 2 209 4 81 7 62 6 
1 3 194 1 142 1 28 10 329 2 52 8 30 1 9 4 31 1 99 1 81 18 80 2 15 1 62 4 17 4 105 1 251 1 179 2 20 1 39 1 86 3 297 1 300 1 91 4 322 4 165 1 92 1 323 1 363 2 185 1 209 8 229 1 191 1 
2 1 117 1 205 1 112 1 244 1 267 1 195 1 
169 1 2 1 117 1 66 1 267 1 195 1 278 1 205 1 112 1 134 1 244 1 281 1 
44 1 321 1 174 1 305 1 318 1 259 1 186 1 172 1 128 1 6 1 149 1 
222 1 168 1 249 1 2 1 117 2 305 1 224 1 128 1 6 1 254 1 195 2 44 1 321 1 174 1 112 1 259 1 358 1 149 1 
222 1 168 1 249 2 2 1 117 1 224 1 128 1 234 1 6 1 360 1 158 1 254 1 195 1 44 1 298 1 321 1 174 2 259 3 166 1 113 1 358 1 149 1 
222 1 168 1 249 2 2 1 117 1 224 1 153 1 128 1 234 1 6 1 360 1 158 1 254 1 195 1 44 1 298 1 321 1 174 2 259 3 166 1 113 1 149 1 
249 1 305 1 72 1 215 1 128 3 84 1 234 1 6 3 130 1 44 1 298 1 321 1 174 1 312 1 357 1 313 2 59 1 258 1 259 4 14 1 166 1 220 2 149 3 
249 1 305 1 72 1 340 1 128 3 84 1 234 1 6 3 130 1 44 1 298 1 321 1 174 1 312 1 357 1 313 2 59 1 258 1 259 4 166 1 220 2 149 3 
44 1 321 1 128 1 6 1 347 1 149 1 
193 1 249 1 305 2 128 6 6 7 237 1 42 1 269 1 270 1 44 2 161 1 321 3 174 2 77 1 147 1 126 1 164 1 259 3 347 1 228 1 149 7 
1 2 168 1 2 1 139 2 117 2 194 1 28 3 52 4 6 1 30 1 240 1 9 2 195 2 330 1 99 1 331 1 174 1 355 1 291 1 335 2 81 6 246 1 62 2 358 1 149 1 17 2 105 1 222 1 249 1 179 1 224 1 295 1 128 1 86 1 254 1 44 1 321 1 161 1 300 1 112 2 322 2 91 2 92 1 207 1 259 1 303 1 209 3 
192 2 305 1 72 1 6 1 290 2 312 1 357 1 313 3 59 2 292 1 220 3 294 1 149 1 18 1 82 1 338 1 340 1 128 1 84 1 180 2 341 2 130 1 22 1 342 1 25 1 346 1 259 2 304 1 
150 1 249 1 84 1 128 2 6 2 44 1 161 1 321 2 174 1 259 2 347 1 228 1 149 2 
305 1 128 4 172 1 6 4 44 1 321 1 161 1 174 1 258 1 186 1 259 1 272 1 149 4 
250 1 249 1 4 1 285 1 128 2 6 2 42 1 44 1 321 2 174 1 126 1 259 1 166 1 149 2 
44 1 321 1 305 1 128 1 6 1 40 1 10 1 131 1 217 1 149 1 
213 1 128 2 6 2 269 1 44 1 161 1 321 1 174 1 77 1 259 1 149 2 
305 1 172 1 128 4 6 5 237 1 269 1 44 2 161 1 321 2 174 2 147 1 186 1 259 3 166 1 272 1 149 5 
305 1 172 1 128 4 6 5 8 1 237 1 269 1 44 2 161 1 321 2 174 2 186 1 259 3 166 1 272 1 149 5 
222 1 168 1 249 1 2 1 117 2 305 1 224 1 153 1 128 1 6 1 254 1 195 2 44 1 321 1 174 1 112 1 259 1 149 1 
193 1 249 1 128 1 6 1 42 1 44 1 321 2 174 1 126 1 259 1 166 1 228 1 149 1 
32 1 345 1 112 1 53 1 176 1 
51 1 307 1 53 1 360 1 158 1 32 1 25 1 345 1 313 1 336 1 219 1 245 1 220 1 113 1 176 1 
2 1 117 1 265 1 120 1 53 1 195 1 32 1 79 1 176 1 
51 1 53 1 219 1 
163 1 318 1 221 1 
328 1 163 1 314 1 233 1 221 1 324 1 
104 1 328 1 119 1 
328 3 214 1 233 1 159 2 354 1 33 1 163 1 206 1 314 1 324 3 221 1 
328 2 163 1 314 1 233 1 221 1 324 2 47 1 54 1 
203 1 328 1 354 1 314 1 233 1 74 1 40 1 157 1 10 1 324 1 231 1 
328 1 354 1 163 1 314 1 233 1 324 1 
328 1 354 1 163 1 314 1 233 1 74 1 221 1 324 1 
328 2 233 2 238 1 320 1 354 1 163 1 314 2 315 1 324 2 
328 3 65 1 83 1 233 1 74 1 54 2 354 1 203 1 163 1 314 1 316 1 221 1 324 3 
328 2 155 1 233 1 40 2 157 1 10 1 121 1 217 1 54 1 354 1 163 1 314 1 221 1 324 2 
326 1 328 4 65 1 233 2 74 1 54 2 354 1 203 1 163 1 314 2 221 1 324 4 47 1 
328 1 354 1 163 1 314 1 233 1 221 1 324 1 
328 4 65 1 214 1 233 1 74 1 159 1 54 2 203 1 163 2 218 1 206 1 314 1 221 2 324 4 
328 2 93 1 233 1 54 1 344 1 288 1 354 1 163 1 314 1 324 2 221 1 
48 1 328 3 214 1 233 1 159 2 354 1 163 1 206 2 314 1 324 3 221 1 
152 1 140 2 74 2 68 1 
328 1 354 1 314 1 233 1 324 1 132 1 
328 2 354 1 163 1 314 1 233 1 316 1 221 1 324 2 54 1 
125 1 
328 1 354 1 163 1 314 1 233 1 221 1 324 1 
328 3 354 1 163 1 314 1 233 1 316 1 159 1 221 1 324 3 54 1 
203 1 65 1 218 1 74 1 
163 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 322 204 100 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 102 318 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 6 86 1 25 1 2 1 198 1 341 3 55 1 32 1 319 1 227 1 302 2 209 1 176 4 70 9 35 1 327 2 304 2 74 2 114 1 186 1 349 1 15 2 43 2 17 1 355 2 311 9 358 1 18 5 
0 6 86 1 25 1 2 1 198 1 341 3 55 1 32 1 319 1 227 1 302 2 209 1 176 4 70 9 35 1 327 2 304 2 114 1 186 1 74 2 349 1 15 2 43 2 17 1 355 2 311 9 358 1 18 5 
0 7 86 1 25 1 2 1 198 1 341 4 55 1 32 1 319 1 227 1 302 2 209 1 176 5 70 10 35 1 327 2 304 2 114 1 186 1 74 2 349 1 15 2 43 2 17 1 355 2 311 10 358 1 18 6 
0 4 86 1 2 1 198 1 341 2 55 1 32 1 319 1 227 1 302 2 209 1 176 3 70 7 35 1 327 2 304 2 114 1 186 1 74 1 349 1 15 2 43 2 17 1 355 2 311 7 358 1 18 4 
0 3 176 2 70 4 35 1 25 1 327 1 304 1 74 2 349 1 43 1 15 1 341 1 355 1 311 4 358 1 18 3 319 1 227 1 
302 1 209 1 70 2 327 1 304 1 198 1 112 1 349 1 43 1 15 1 126 1 311 2 18 1 358 1 319 1 33 1 
302 1 0 1 176 1 70 3 349 1 43 2 15 2 341 1 17 1 311 3 358 1 18 2 319 1 
0 7 86 1 25 1 88 1 341 3 32 1 319 1 227 1 302 1 176 4 70 9 35 1 327 1 304 1 217 1 74 2 349 1 15 2 43 2 17 1 355 1 311 9 358 1 18 5 
0 7 86 1 25 1 88 1 341 3 32 1 319 1 227 1 302 1 176 4 70 9 35 1 327 1 304 1 217 1 74 2 349 1 15 2 43 2 17 1 355 1 311 9 358 1 18 5 
177 1 1 1 320 1 
115 2 1 1 294 1 
332 2 351 2 180 2 212 2 373 2 220 1 184 1 216 2 
159 1 360 1 163 1 197 1 92 1 166 1 167 1 365 1 168 2 343 1 170 1 6 2 269 1 369 1 7 1 173 1 8 2 210 1 180 2 212 2 346 1 303 1 245 1 373 3 111 2 12 1 184 1 216 3 332 2 75 2 187 1 135 1 351 2 220 1 121 1 123 1 336 1 
332 1 158 1 351 1 180 1 212 1 373 1 39 1 184 1 216 1 103 1 
158 2 1 1 314 1 265 1 143 1 103 1 174 1 177 1 180 1 212 1 329 1 373 2 39 1 184 1 216 2 231 1 116 1 332 1 218 1 351 2 378 1 
177 1 158 2 180 2 212 2 1 1 373 2 329 2 39 1 314 1 184 1 216 2 231 2 116 1 332 2 218 1 351 2 265 1 143 1 103 1 
21 1 87 1 329 1 40 1 231 1 
177 1 313 1 87 1 1 1 329 2 40 1 28 1 231 2 
329 1 40 1 231 1 
158 1 180 1 212 1 87 1 329 1 373 1 39 1 184 1 216 1 231 1 116 1 332 1 351 1 103 1 
1 1 
177 1 313 1 237 1 87 1 1 1 329 2 40 1 231 2 
242 2 177 1 175 1 229 1 235 2 107 1 313 1 87 2 1 1 329 5 292 1 40 2 315 1 151 1 231 5 77 1 307 1 354 2 203 1 
220 1 320 1 
180 1 212 1 26 1 373 2 216 2 332 1 351 2 171 1 220 2 
99 1 241 1 238 1 
159 1 210 1 360 1 303 1 161 1 245 1 373 1 111 1 216 1 75 1 166 1 365 1 168 1 343 1 220 1 336 1 
233 1 210 1 159 1 359 1 180 1 360 1 212 1 303 1 245 1 373 2 111 1 216 2 75 1 166 1 351 1 365 1 168 1 99 1 343 1 336 1 
233 2 138 1 359 1 180 4 212 4 194 1 26 1 373 5 216 5 332 1 351 5 220 1 378 1 298 1 
117 1 158 1 351 2 180 2 212 2 373 2 216 2 103 1 
332 1 233 1 351 3 180 3 212 3 373 3 220 1 216 3 
158 1 351 1 180 1 212 1 373 1 216 1 103 1 
332 1 158 1 351 1 180 1 212 1 26 1 171 1 373 1 216 1 
158 2 159 1 260 1 163 1 166 1 265 1 168 1 170 1 343 1 6 1 269 1 7 1 8 2 180 3 346 1 303 1 12 1 184 1 231 1 75 1 351 3 135 1 356 1 233 1 359 1 140 1 360 1 26 1 314 1 92 1 365 1 143 1 369 1 210 1 212 3 245 1 329 1 373 4 111 1 216 4 332 2 218 1 220 1 336 1 121 1 
233 1 351 2 180 1 212 1 373 2 220 1 378 1 298 1 216 2 
233 2 158 1 359 1 180 3 236 1 212 3 26 1 1 1 329 1 373 3 314 1 216 3 231 1 332 1 218 1 351 3 265 1 356 1 143 1 
233 1 180 2 212 2 26 1 373 2 216 2 332 1 351 2 99 1 241 1 
159 1 210 1 360 1 245 1 303 1 373 1 111 1 216 1 75 1 166 1 365 1 168 1 343 1 220 1 336 1 
85 1 159 1 210 1 360 1 303 1 373 1 111 1 216 1 75 1 166 1 168 1 282 1 343 1 220 1 336 1 
234 1 163 2 3 1 92 1 199 1 238 2 53 1 280 1 167 2 342 1 99 2 241 2 6 4 369 1 64 1 7 1 8 2 328 1 346 1 347 1 135 1 288 1 156 1 121 1 
117 1 158 1 351 1 180 1 212 1 373 1 143 1 216 1 
34 1 154 1 
34 1 154 1 
215 1 63 1 
215 1 63 1 
215 1 63 1 
34 1 154 1 305 1 
34 1 154 1 30 1 
226 1 34 2 154 2 110 1 215 1 63 1 
34 1 154 1 305 1 
34 1 154 1 305 1 
134 1 34 1 154 1 
134 1 34 1 154 1 
134 1 34 1 154 1 
291 1 312 1 49 1 29 1 30 1 205 1 59 1 61 1 66 1 34 1 180 2 212 2 37 1 329 1 373 2 374 1 216 2 133 1 231 1 351 2 154 1 79 1 80 1 220 1 
291 2 34 2 49 2 9 1 37 2 1 1 182 1 110 1 329 2 374 1 277 2 152 1 231 2 95 1 154 2 205 3 252 1 61 2 172 1 
327 1 355 1 304 1 
327 1 304 1 112 1 
200 1 257 1 327 3 355 2 289 1 112 1 
257 1 327 2 355 1 289 1 232 1 112 1 
257 2 327 2 355 1 289 1 112 1 
157 1 235 1 312 1 313 1 87 4 261 1 1 2 50 1 315 3 294 1 199 1 125 1 53 1 367 2 58 1 342 1 59 1 64 1 242 1 105 2 175 2 229 1 177 1 344 1 244 2 329 5 40 1 231 5 115 3 354 1 189 1 80 1 
21 5 235 2 312 4 87 7 313 1 1 5 261 1 50 2 89 1 292 1 315 8 294 3 199 3 125 3 201 1 53 3 367 6 58 2 342 3 131 5 64 3 242 2 175 6 177 1 229 1 244 6 329 9 40 6 13 1 231 9 42 1 115 9 333 1 354 2 122 1 
235 1 312 1 87 2 1 3 50 1 292 1 315 3 294 2 199 1 125 1 53 1 58 1 367 2 342 1 64 1 242 1 105 1 177 1 175 2 344 1 244 2 329 3 231 3 115 4 354 1 189 1 
235 1 312 2 87 3 1 4 50 1 89 1 292 1 315 5 294 3 199 2 125 2 53 2 367 4 58 1 342 2 64 2 242 1 105 2 177 1 175 4 344 1 244 4 329 4 13 1 231 4 115 7 333 1 354 1 189 1 
303 1 320 1 321 1 
303 1 275 1 
11 1 
210 1 303 1 343 1 
284 1 303 1 
303 1 343 1 
210 1 287 1 147 1 303 3 343 1 321 2 
258 1 243 1 328 3 345 1 259 1 163 3 199 1 295 1 250 1 167 4 296 1 206 2 169 1 342 1 156 2 190 1 6 7 
258 1 243 1 328 3 345 1 259 1 163 3 199 1 295 1 250 1 167 4 296 1 206 2 169 1 342 1 156 2 190 1 6 7 
258 1 243 1 328 3 345 1 259 1 163 3 199 1 295 1 250 1 352 1 296 1 167 4 206 2 169 1 342 1 156 2 190 1 6 7 
258 1 259 1 90 1 163 3 263 1 295 1 362 1 167 3 206 1 169 1 6 6 101 1 369 1 270 1 7 1 8 2 345 2 328 2 346 1 250 1 188 1 251 1 156 1 121 1 
258 1 163 4 199 1 295 1 364 1 167 5 296 1 206 2 169 1 342 1 6 9 369 2 65 1 7 2 8 4 345 1 328 4 243 1 346 2 250 1 251 1 156 3 190 1 121 2 
0 1 137 1 160 1 200 1 165 1 166 1 94 1 168 1 207 1 319 1 144 1 302 1 70 2 327 2 304 1 111 1 112 1 75 1 14 1 349 1 15 1 43 1 355 1 311 2 335 1 18 1 358 1 253 1 337 1 336 1 
137 1 0 2 160 1 200 1 165 1 166 1 94 1 168 1 207 1 319 1 302 1 70 3 327 2 304 1 111 1 248 1 112 1 75 1 15 1 43 1 76 1 355 1 310 1 311 3 335 1 18 1 358 1 253 1 337 1 336 1 
137 1 0 2 200 1 165 1 166 1 168 1 207 1 319 1 302 1 70 2 327 2 304 1 111 1 112 1 75 1 76 1 355 1 310 1 311 2 335 1 18 1 358 1 253 1 337 1 336 1 
302 2 137 2 23 1 70 1 179 1 360 1 303 1 196 1 91 1 248 1 111 1 185 1 142 1 75 1 43 1 15 1 166 1 168 1 343 1 207 2 311 1 253 2 336 1 
144 1 302 1 137 1 70 1 327 2 160 1 304 1 111 1 112 1 200 1 349 1 75 1 43 1 15 1 166 1 165 1 94 1 355 1 310 1 168 1 311 1 207 1 335 1 253 1 336 1 337 1 
225 1 
158 1 1 3 294 2 224 2 166 1 265 1 58 1 168 2 343 1 228 1 300 1 174 1 175 2 229 1 177 2 179 1 72 1 303 1 183 2 231 5 75 2 350 2 351 1 354 1 308 1 274 1 19 2 84 1 83 1 23 1 235 1 360 2 313 3 315 2 314 1 31 1 368 2 143 1 242 1 286 2 329 5 373 1 40 6 111 2 330 1 214 1 216 1 115 2 218 1 155 1 45 1 120 2 378 1 336 1 379 4 
158 1 313 1 237 1 1 2 314 1 265 1 368 1 143 1 174 1 177 2 72 1 373 1 329 3 40 2 216 1 231 3 218 1 351 1 308 1 274 1 378 1 83 1 84 1 379 2 
174 1 177 2 158 1 72 1 286 1 1 2 329 2 373 1 314 1 216 1 231 2 218 1 351 1 308 1 265 1 274 1 378 1 143 1 379 3 84 1 83 1 
158 1 313 1 237 1 1 3 314 1 224 1 265 1 368 1 143 1 174 1 177 3 72 1 286 1 373 1 329 3 40 2 216 1 231 3 218 1 351 1 308 1 274 1 378 1 83 1 84 1 379 3 
322 1 174 1 177 2 158 1 72 1 237 1 313 1 1 2 373 1 329 3 40 3 314 1 216 1 231 3 218 1 224 2 351 1 308 1 265 1 204 1 368 2 274 1 100 1 378 1 143 1 379 2 84 1 83 1 
158 1 1 4 294 2 224 2 265 1 228 1 174 1 177 3 229 1 175 1 72 1 183 2 231 4 350 2 351 1 354 1 308 1 274 1 19 2 84 1 83 1 235 1 313 2 314 1 315 1 368 2 143 1 242 1 286 2 373 1 329 4 40 4 216 1 115 2 218 1 155 1 45 1 120 2 378 1 379 4 
158 1 235 1 313 2 1 3 315 1 314 1 294 2 224 2 265 1 57 1 368 2 228 1 143 1 322 1 242 1 174 1 175 1 177 3 229 1 326 1 72 1 286 2 183 2 373 1 329 4 40 4 216 1 231 4 218 1 350 2 351 1 354 1 308 1 155 1 274 1 120 2 19 2 378 1 83 1 84 1 379 4 
158 1 235 1 313 2 1 3 315 1 314 1 294 2 224 2 265 1 57 1 368 2 228 1 143 1 322 1 242 1 174 1 175 1 177 3 229 1 326 1 72 1 286 2 183 2 373 1 329 4 40 4 216 1 231 4 218 1 350 2 351 1 354 1 308 1 155 1 274 1 120 2 19 2 378 1 83 1 84 1 379 4 
158 1 235 1 313 2 1 3 315 1 314 1 279 1 224 2 281 1 265 1 57 1 368 2 143 1 242 1 174 1 175 1 177 3 229 1 72 1 286 2 38 2 373 1 329 4 40 4 230 2 216 1 231 4 115 2 218 1 375 1 351 1 354 1 308 1 155 1 274 1 120 2 19 2 378 1 83 1 84 1 379 4 
158 1 235 1 313 2 1 3 315 1 314 1 294 2 224 3 265 1 57 1 204 1 368 3 228 1 143 1 242 1 322 1 174 1 175 1 229 1 177 3 326 1 72 1 286 3 183 2 373 1 329 4 40 5 216 1 231 4 218 1 350 2 351 1 354 1 308 1 155 1 274 1 120 2 19 2 378 1 83 1 84 1 379 5 
158 1 235 1 313 2 1 3 315 1 314 1 294 2 224 3 265 1 57 1 204 1 368 3 228 1 143 1 242 1 322 1 174 1 175 1 229 1 177 3 326 1 72 1 286 3 183 2 373 1 329 4 40 5 216 1 231 4 218 1 350 2 351 1 354 1 308 1 155 1 274 1 120 2 19 2 378 1 83 1 84 1 379 5 
158 1 1 3 224 2 265 1 174 1 177 3 229 1 175 1 72 1 230 2 231 4 351 1 354 1 308 1 274 1 19 2 84 1 83 1 235 1 313 2 314 1 315 1 281 1 368 2 143 1 242 1 286 2 38 2 373 1 329 4 40 4 216 1 115 2 218 1 155 1 45 1 120 2 378 1 379 4 
163 3 92 1 199 1 238 1 295 1 296 1 167 3 206 1 99 1 342 1 241 1 320 1 6 6 369 1 7 1 8 2 328 2 243 1 346 1 250 1 135 1 288 1 156 2 190 1 220 2 121 1 
158 1 140 1 48 1 90 2 163 5 92 1 124 1 238 8 199 1 125 2 362 2 53 2 5 1 167 6 169 1 127 1 99 8 342 2 241 3 6 11 369 2 64 1 7 2 8 4 328 2 346 2 12 1 135 2 353 1 156 1 220 1 357 1 121 2 
233 1 290 1 159 1 359 1 360 1 161 1 163 1 92 1 166 1 365 1 167 1 168 1 343 1 241 1 6 2 369 1 370 1 7 1 210 1 8 2 180 1 212 1 346 1 303 1 245 1 373 2 111 1 12 1 216 2 75 1 187 1 135 1 351 1 220 1 357 1 191 1 336 1 121 1 
159 2 163 10 223 2 295 1 125 2 166 2 53 2 296 1 167 10 297 1 168 3 169 4 170 2 343 2 342 3 6 20 64 2 7 3 8 6 180 1 346 3 303 2 12 1 75 3 187 1 306 1 351 1 135 3 78 2 310 1 190 1 357 1 233 1 359 1 360 1 92 3 278 2 199 3 238 7 365 2 366 1 206 1 97 2 99 7 241 7 369 3 210 2 243 1 212 1 328 8 245 2 373 3 111 3 216 3 250 1 156 4 220 2 121 3 336 2 
233 1 23 1 360 2 52 1 163 1 92 2 361 1 166 2 167 1 168 8 343 2 6 2 299 1 369 2 7 2 173 2 8 4 180 1 179 1 212 1 346 2 303 3 373 1 111 7 12 1 216 1 14 1 75 8 153 1 187 1 351 1 135 2 309 1 288 1 310 1 44 1 276 1 336 2 121 2 
26 1 163 2 92 1 238 1 199 1 125 1 53 1 167 1 99 1 342 1 241 1 6 3 369 1 64 1 7 1 145 1 8 2 180 1 328 1 212 1 346 1 373 1 216 1 332 1 135 1 351 1 156 1 357 1 121 1 
7 1 8 2 328 1 346 1 3 1 92 1 238 1 53 1 135 1 288 1 167 2 169 1 99 1 342 1 241 1 6 2 369 1 121 1 
7 1 8 2 328 1 346 1 347 1 163 2 92 1 238 1 199 1 135 1 288 1 156 1 99 1 241 1 6 2 369 1 121 1 64 1 
163 2 92 1 238 2 199 1 125 1 53 1 167 2 169 1 342 1 99 2 241 2 6 4 369 1 64 1 7 1 8 2 328 2 346 1 135 1 288 1 156 1 121 1 
7 1 8 2 328 1 346 1 3 1 92 1 238 1 53 1 135 1 309 1 167 2 169 1 99 1 342 1 241 1 6 2 369 1 121 1 
7 1 8 2 328 1 346 1 347 1 163 2 92 1 238 1 199 1 135 1 309 1 156 1 99 1 241 1 6 2 369 1 121 1 64 1 
163 2 92 1 238 2 199 1 125 1 53 1 167 2 169 1 342 1 99 2 241 2 6 4 369 1 64 1 7 1 8 2 328 2 346 1 135 1 309 1 156 1 121 1 
163 2 92 1 238 2 199 1 125 1 53 1 167 2 169 1 342 1 99 2 241 2 6 4 369 1 64 1 7 1 8 2 328 2 346 1 135 1 156 1 121 1 
159 1 360 1 163 1 92 1 166 1 167 1 365 1 168 1 343 1 170 1 6 2 369 1 7 1 210 1 8 2 346 1 245 1 303 1 373 1 111 1 12 1 216 1 75 1 187 1 135 1 220 1 336 1 121 1 
85 1 159 1 360 1 222 1 163 1 92 1 166 1 167 1 282 1 168 1 343 1 6 2 369 1 7 1 210 1 8 2 346 1 303 1 373 1 111 1 12 1 216 1 75 1 187 1 135 1 220 1 336 1 121 1 
163 2 92 1 238 2 199 1 125 1 53 1 167 2 169 1 342 1 99 2 241 2 6 4 369 1 64 1 7 1 8 2 328 2 346 1 135 1 156 1 357 1 121 1 
159 1 163 2 223 1 92 1 199 1 238 2 125 1 53 1 166 1 167 2 365 1 168 1 169 1 99 2 342 1 170 1 343 1 241 2 6 4 369 1 64 1 7 1 210 1 8 2 328 2 346 1 245 1 303 1 373 1 111 1 216 1 75 1 14 1 135 1 156 1 336 1 121 1 
26 1 163 1 92 1 199 1 238 1 125 1 53 1 167 2 169 1 342 1 99 1 241 1 130 1 6 3 369 1 64 1 7 1 8 2 180 1 328 1 212 1 346 1 373 1 216 1 332 1 135 1 351 1 357 1 121 1 
22 2 90 3 163 18 27 1 293 1 199 4 316 1 295 1 317 1 125 3 362 3 53 3 296 1 167 19 206 1 169 4 240 1 128 1 342 4 129 1 6 37 369 4 65 1 64 3 104 1 270 3 7 4 69 4 8 8 106 1 243 1 328 7 346 4 41 1 250 1 272 1 118 1 251 2 156 3 190 1 192 1 121 4 
22 1 90 2 163 17 27 1 293 1 199 4 316 1 295 1 317 1 125 3 362 2 53 3 296 1 167 18 206 1 169 3 240 1 128 1 342 4 129 1 6 35 369 4 65 1 64 3 104 1 270 2 7 4 69 4 8 8 243 1 328 5 346 4 41 1 250 1 272 1 118 1 251 2 156 2 190 1 192 1 121 4 
22 1 90 2 163 14 27 1 293 1 199 3 316 1 317 1 125 3 362 2 53 3 167 14 169 3 240 1 128 1 342 3 129 1 6 28 369 3 65 1 64 3 270 2 7 3 69 4 8 6 328 6 346 3 41 1 272 1 118 1 251 2 156 3 192 1 121 3 
22 1 90 2 163 16 27 1 293 1 199 4 316 1 295 1 317 1 125 3 362 2 53 3 296 1 167 17 206 1 169 3 240 1 128 1 342 4 129 1 6 33 369 4 65 1 64 3 104 1 270 2 7 4 69 3 8 8 243 1 328 6 346 4 41 1 250 1 118 1 251 2 156 3 47 1 190 1 192 1 121 4 
22 2 90 2 163 12 27 1 293 1 199 2 316 2 317 1 125 3 362 2 53 3 167 14 169 2 240 1 128 1 342 3 129 1 6 26 369 3 65 1 64 2 270 2 69 4 7 3 8 6 328 4 346 3 41 1 272 1 118 1 251 2 156 2 192 1 121 3 
291 1 34 1 49 1 95 1 37 1 154 1 273 1 182 1 110 1 61 1 
66 1 30 1 
291 1 34 1 49 1 148 1 37 1 154 1 98 1 81 1 61 1 
371 1 305 1 
134 1 226 1 56 1 
291 1 34 1 49 1 37 1 1 1 182 1 110 1 329 1 374 1 277 1 152 1 231 1 95 1 154 1 205 2 252 1 61 1 172 1 
291 1 34 1 49 1 37 1 1 1 182 1 110 1 329 1 374 1 277 1 152 1 231 1 95 1 154 1 205 2 252 1 61 1 172 1 
291 1 34 1 49 1 37 1 1 1 182 1 110 1 329 1 374 1 277 1 152 1 231 1 95 1 154 1 205 2 252 1 61 1 172 1 
226 1 371 1 305 1 
226 1 371 1 305 1 
134 1 56 1 
134 1 226 1 56 1 
29 1 133 1 
291 1 312 1 49 1 87 1 277 1 29 1 30 1 205 1 59 1 61 1 172 1 66 1 34 1 178 1 180 2 212 2 37 1 373 2 329 1 216 2 133 1 231 1 351 2 154 1 79 1 80 1 220 1 
255 1 52 1 163 1 92 1 166 1 239 1 167 1 168 2 343 1 6 2 369 1 7 1 173 2 71 1 8 2 211 1 346 1 303 1 271 1 373 2 111 2 12 1 216 2 75 2 187 1 135 1 351 2 44 1 357 1 336 1 121 1 
24 1 327 2 160 1 51 1 304 1 111 2 112 1 200 1 75 2 14 1 202 1 166 1 165 1 355 1 310 1 168 2 207 1 335 1 336 1 
139 1 327 2 160 1 51 1 304 1 111 1 112 1 200 1 75 1 165 1 166 1 355 1 310 1 168 1 207 1 335 1 336 1 
24 1 23 1 360 1 179 1 303 1 196 1 111 1 75 1 166 1 168 1 267 1 343 1 207 1 336 1 
24 1 327 2 160 1 51 1 304 1 111 1 112 1 200 1 75 1 202 1 165 1 166 1 355 1 310 1 168 1 207 1 335 1 336 1 
325 1 
177 1 175 1 77 1 203 1 1 1 315 1 320 1 
235 1 313 1 1 2 315 1 294 1 228 1 242 1 175 1 229 1 177 1 183 1 329 1 40 1 231 1 115 1 350 1 354 1 
1 3 162 1 294 3 125 1 164 1 166 1 53 1 58 1 168 1 343 1 342 1 301 1 64 1 67 1 229 2 175 3 303 4 73 1 231 2 75 1 354 2 275 2 235 2 360 1 313 1 315 4 314 1 199 1 367 3 97 1 321 1 242 2 323 1 210 1 108 1 147 1 244 3 247 1 329 2 111 1 40 2 115 6 336 2 
235 2 313 1 1 5 90 1 27 1 293 1 315 8 294 3 199 2 125 2 164 2 362 1 31 1 53 2 58 1 367 5 96 1 240 1 128 1 342 2 62 1 64 2 270 1 242 2 229 2 175 5 177 2 181 1 244 5 329 1 40 1 231 1 115 6 118 1 354 2 
158 1 235 1 315 2 199 1 295 1 164 2 342 2 62 1 103 1 242 1 229 1 175 2 326 1 180 1 243 1 212 1 36 1 373 1 329 1 39 1 184 1 216 1 231 1 116 1 332 1 250 1 351 1 354 1 
242 1 229 1 175 1 177 1 235 1 1 1 315 1 77 1 354 1 203 1 
175 5 244 5 1 5 315 5 294 5 199 2 115 10 125 2 164 2 53 2 367 5 97 1 342 2 62 1 64 2 
177 1 313 1 1 1 329 1 40 1 231 1 
235 2 23 1 360 2 313 2 292 1 315 1 166 1 31 2 318 1 168 3 58 1 343 1 102 1 300 1 242 2 229 1 175 2 179 1 303 1 149 1 329 3 111 3 40 4 330 1 213 1 231 3 75 3 354 2 336 1 
159 1 360 1 163 1 92 1 166 1 365 1 168 1 170 1 343 1 6 1 269 1 369 1 7 1 8 2 210 1 180 2 212 2 346 1 245 1 303 1 373 3 111 1 12 1 184 1 216 3 332 2 75 1 351 2 135 1 220 1 121 1 336 1 
242 1 175 2 229 1 177 2 235 1 244 2 1 4 315 1 294 2 115 4 31 1 354 1 206 1 367 2 58 1 
37 1 61 1 82 1 
256 1 95 1 37 1 61 1 133 1 
37 1 61 1 82 1 
37 1 61 1 82 1 
37 1 61 1 136 1 
37 1 61 1 136 1 
37 1 61 1 136 1 
37 1 61 1 
34 1 154 1 
90 1 163 10 27 1 293 1 199 4 295 2 125 2 362 1 53 2 296 1 167 14 206 1 169 4 240 1 342 5 128 1 6 24 369 2 65 1 64 1 270 1 7 2 8 4 243 2 328 9 36 1 346 2 250 2 118 1 251 1 156 5 190 1 121 2 
90 1 163 7 27 1 293 1 199 2 295 1 125 2 362 1 53 2 296 1 167 10 206 1 169 1 240 1 342 3 128 1 60 1 6 17 369 3 65 1 64 1 270 1 7 3 8 6 243 1 328 4 346 3 250 1 118 1 251 1 156 3 190 1 121 3 
90 1 163 10 27 1 293 1 199 3 295 1 125 2 362 1 53 2 296 1 167 9 206 1 169 1 240 1 342 3 128 1 60 1 6 19 369 3 65 1 64 2 270 1 7 3 8 6 243 1 328 4 346 3 250 1 118 1 251 1 156 3 190 1 121 3 
90 1 163 7 27 1 293 1 199 2 295 1 125 2 362 1 53 2 296 1 167 10 206 1 169 2 240 1 342 3 128 1 60 1 6 17 369 3 65 1 64 1 270 1 7 3 8 6 243 1 328 5 346 3 250 1 118 1 251 1 156 3 190 1 121 3 
90 1 163 10 27 1 293 1 199 4 295 2 125 2 362 1 53 2 296 1 167 14 206 1 169 4 240 1 342 5 128 1 6 24 369 2 65 1 64 1 270 1 7 2 8 4 243 2 328 9 36 1 346 2 250 2 118 1 251 1 156 5 190 1 121 2 
90 1 163 6 27 1 293 1 199 2 125 2 362 1 53 2 167 6 169 1 240 1 342 2 128 1 6 12 369 1 65 1 64 2 270 1 7 1 8 2 328 2 346 1 118 1 156 1 121 1 
90 1 163 8 27 1 293 1 199 2 295 1 125 2 362 1 53 2 296 1 167 10 206 1 169 2 240 1 128 1 342 3 60 1 6 18 369 4 65 1 64 1 270 1 7 4 8 8 243 1 328 5 346 4 250 1 118 1 251 2 156 3 190 1 121 4 
90 1 163 7 27 1 293 1 199 2 125 3 362 1 53 3 167 9 169 3 240 1 128 1 342 3 6 16 369 4 65 1 64 2 270 1 104 1 7 4 8 8 328 6 346 4 118 1 251 2 156 3 121 4 
328 6 243 1 163 4 199 1 295 3 250 3 296 2 167 3 169 3 156 3 342 1 190 1 6 7 
90 1 163 8 27 1 293 1 199 2 295 1 125 2 362 1 53 2 296 1 167 10 206 1 169 1 240 1 128 1 342 3 6 18 369 4 65 1 64 1 270 1 104 1 7 4 8 8 243 1 328 4 346 4 250 1 118 1 251 2 156 3 190 1 121 4 
7 2 8 4 243 1 328 3 346 2 163 4 199 1 295 1 250 1 167 4 296 1 206 1 251 1 169 1 342 1 156 2 190 1 6 8 369 2 121 2 
328 2 243 1 163 3 199 1 295 1 250 1 296 1 167 3 206 1 156 2 342 1 190 1 320 1 6 6 
7 1 8 2 328 2 346 1 163 2 199 1 125 1 53 1 167 2 169 1 156 1 342 1 60 1 6 4 369 1 64 1 121 1 
270 1 362 1 167 1 90 1 163 1 6 2 
90 2 163 12 124 1 199 5 295 2 125 2 362 2 53 2 296 1 167 13 5 1 206 1 127 1 169 4 342 5 6 25 369 1 64 2 7 1 8 2 243 2 328 8 36 1 346 1 250 2 251 1 156 4 190 1 121 1 
362 1 163 1 6 1 
167 1 90 1 6 1 
7 1 8 2 328 3 346 1 163 3 199 1 125 1 53 1 167 3 169 1 97 1 342 1 156 2 60 1 6 6 369 1 121 1 64 1 
90 1 163 6 27 1 293 1 199 2 125 2 362 1 53 2 167 6 169 1 240 1 342 2 128 1 6 12 369 1 65 1 64 2 270 1 7 1 8 2 328 2 346 1 118 1 156 1 121 1 
295 1 250 1 328 2 243 1 167 3 169 1 156 1 342 1 163 3 6 6 199 1 
7 1 8 2 328 2 346 1 163 2 263 1 295 1 250 1 167 1 296 1 251 1 169 1 156 1 190 1 6 3 369 1 121 1 
7 1 8 2 328 5 243 1 346 1 36 1 163 5 199 2 295 2 250 2 167 5 169 2 156 3 342 2 6 10 369 1 121 1 65 1 
7 1 8 2 328 1 346 1 53 1 167 2 169 1 342 1 6 2 369 1 65 1 121 1 
7 1 8 2 328 2 346 1 163 2 199 1 125 1 53 1 167 2 169 1 156 1 342 1 6 4 369 1 64 1 65 1 121 1 
104 1 7 3 8 6 328 2 346 3 163 2 263 1 295 1 250 1 167 1 251 1 169 1 156 1 6 3 369 3 65 1 121 3 
90 1 163 8 199 2 263 1 295 2 362 1 167 7 296 1 169 3 342 2 60 1 6 15 101 1 369 4 65 1 270 1 104 1 7 4 8 8 243 1 328 6 36 1 346 4 250 2 251 1 156 3 190 1 121 4 
351 1 339 1 373 1 220 1 378 1 298 1 216 1 
339 1 221 1 10 1 373 1 249 1 216 1 351 1 334 1 266 1 220 1 298 1 378 1 
75 1 166 1 23 1 179 1 360 1 303 1 168 1 343 1 111 1 320 1 336 1 
233 1 210 1 159 1 180 1 360 1 212 1 303 1 245 1 373 2 111 1 216 2 75 1 166 1 351 1 168 1 343 1 220 1 336 1 
284 1 233 1 158 1 210 2 159 1 180 1 212 2 303 3 245 1 149 1 373 2 111 1 216 2 348 1 218 1 75 1 166 1 351 2 168 1 343 2 220 1 143 1 336 1 
233 1 158 1 159 1 166 1 282 1 168 2 343 2 143 1 284 1 210 2 180 1 212 2 303 3 149 1 373 2 111 2 331 1 216 2 348 1 75 2 218 1 351 2 220 1 336 1 
158 1 195 1 1 1 314 1 166 1 363 1 168 1 343 1 321 1 103 1 284 1 177 1 210 1 180 1 212 1 303 4 149 1 373 1 329 2 39 1 40 1 111 1 184 1 216 1 231 2 332 1 116 1 348 1 75 1 351 1 275 1 336 1 
158 1 1 1 314 1 166 1 168 1 343 1 321 1 103 1 323 1 284 1 177 1 210 1 180 1 212 1 303 4 149 1 373 1 329 2 39 1 40 1 111 1 184 1 216 1 231 2 332 1 116 1 348 1 75 1 351 1 275 1 336 1 
75 1 166 1 168 1 111 1 299 1 336 1 
173 1 210 1 146 1 360 2 147 1 303 3 141 1 52 1 111 6 14 1 75 7 361 1 153 1 166 2 310 1 168 7 283 1 343 2 299 1 276 1 336 3 
233 1 159 1 163 3 223 1 92 2 238 1 199 1 295 1 166 1 167 3 296 1 365 1 206 1 168 1 99 1 342 1 343 1 170 1 241 1 6 6 369 2 7 2 210 1 71 1 8 4 180 1 243 1 328 2 212 1 346 2 303 1 245 1 373 2 111 1 216 2 14 1 75 1 250 1 135 2 351 1 78 1 156 2 220 2 190 1 357 1 336 1 121 2 
158 1 1 2 162 1 295 1 164 2 168 1 342 2 62 1 229 2 175 5 177 2 180 1 303 2 73 1 184 1 231 3 75 1 77 1 351 1 354 2 275 1 235 2 360 1 313 1 87 1 314 1 315 4 199 2 203 1 321 1 103 1 323 1 242 2 243 1 212 1 36 1 247 1 329 3 373 1 40 2 111 1 39 1 213 1 216 1 116 1 332 1 250 1 
210 1 108 1 147 1 303 2 111 2 14 1 75 2 166 1 168 2 343 1 321 1 299 1 336 2 
23 1 360 1 179 1 303 1 111 4 331 1 75 4 14 1 166 1 376 1 168 4 343 1 336 1 
210 1 146 1 303 1 149 1 141 1 111 2 75 2 166 1 377 1 366 1 168 2 343 1 268 1 336 2 
75 1 166 1 165 1 360 1 327 1 168 1 304 1 111 1 112 1 336 1 
303 1 111 2 52 1 14 1 75 2 166 1 239 1 168 2 310 1 343 1 336 1 
23 1 179 1 360 1 303 3 149 1 111 4 52 1 75 5 14 1 361 1 166 2 376 1 168 5 343 2 276 1 336 2 
23 1 179 1 360 1 372 1 303 3 149 1 111 4 52 1 75 5 14 1 166 2 376 1 168 5 343 2 276 1 336 2 
233 1 210 1 159 1 180 1 360 1 212 1 303 1 373 2 111 1 216 2 75 1 166 1 351 1 168 1 282 1 343 1 220 1 336 1 
210 1 146 1 147 1 303 1 149 1 141 1 111 1 75 1 166 1 168 1 283 1 343 1 336 2 
193 1 264 1 119 1 220 1 150 1 
193 1 338 1 158 2 87 1 1 1 314 1 262 1 264 1 265 1 143 1 103 1 177 1 180 1 212 1 373 1 329 2 150 1 39 1 184 1 216 1 113 1 231 2 332 1 116 1 218 1 351 1 356 1 119 1 
193 1 255 1 211 1 271 1 373 1 150 1 216 1 264 1 351 1 
338 1 264 1 262 1 
18 1 358 1 319 1 320 1 
15 1 43 1 70 1 311 1 18 1 358 1 319 1 
302 1 311 1 253 1 
209 2 70 3 132 1 340 1 349 1 43 1 15 1 311 3 18 1 358 1 319 1 20 1 
74 1 0 1 15 1 43 1 70 2 311 2 18 1 358 1 319 1 
176 1 70 1 327 1 304 1 349 1 43 1 15 1 355 1 311 1 18 1 227 1 
349 1 15 1 43 1 70 1 311 1 18 1 358 1 
349 1 15 1 43 1 70 1 311 1 358 2 319 1 
324 1 68 1 70 2 349 1 43 2 15 2 16 1 311 2 18 1 358 1 
0 2 176 1 70 3 86 1 349 1 43 1 15 1 341 1 32 1 311 3 358 1 18 2 319 1 
0 1 70 2 327 2 304 1 112 1 349 1 200 1 43 1 15 1 355 1 311 2 46 1 18 1 358 1 319 1 
0 2 176 1 70 4 25 1 74 1 349 1 43 2 15 2 341 1 311 4 358 1 18 2 319 1 
349 1 15 1 43 1 70 1 311 1 18 1 358 1 319 1 
0 2 209 1 176 1 70 4 132 1 246 1 43 1 15 1 341 1 311 4 358 2 18 3 319 2 20 1 
0 1 70 2 109 1 88 1 349 1 43 1 15 1 54 1 311 2 18 1 358 1 319 1 
209 2 70 3 132 2 349 1 43 1 15 1 219 1 311 3 18 1 358 1 319 1 20 1 
254 2 285 1 4 1 18 2 
349 1 15 1 43 1 70 1 311 1 93 1 
0 1 349 1 15 1 43 1 70 2 86 1 311 2 18 1 358 1 319 1 
208 1 
349 1 15 1 43 1 70 1 311 1 18 1 358 1 319 1 
0 1 209 1 70 3 86 1 349 1 43 1 15 1 311 3 358 1 18 1 319 1 
176 1 341 1 246 1 18 1 
18 1 358 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) (104,331) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (104,331) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) (104,331) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (22,39,152,177) (22,39,152,177) (22,39,152,177) 174 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 271 98 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 95 133 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
174 1 177 1 22 1 125 1 39 1 
212 1 112 1 132 1 
135 2 100 1 132 1 
320 2 90 2 324 1 226 1 300 2 10 2 81 2 68 2 
90 2 214 1 2 1 291 1 180 1 178 1 142 1 145 1 8 2 297 1 226 1 300 3 10 2 13 1 155 1 157 1 109 2 108 1 237 1 68 3 113 1 30 1 163 1 320 2 248 1 35 1 324 1 75 1 76 1 285 2 82 1 81 2 126 2 128 1 40 1 254 2 131 1 
320 1 90 1 32 1 324 1 300 1 102 1 10 1 81 1 68 1 267 1 
62 1 89 1 197 1 112 1 3 1 68 1 201 1 53 1 300 1 10 1 301 1 209 1 267 1 132 1 
62 2 89 1 197 1 90 1 112 1 68 1 201 1 320 1 300 1 81 1 10 1 209 2 301 1 267 1 132 1 
62 1 16 1 209 1 56 1 50 1 
62 2 112 1 209 2 56 1 49 1 50 1 132 1 29 1 
62 1 209 1 50 1 
62 1 90 1 68 1 320 1 32 1 324 1 102 1 300 1 81 1 10 1 56 1 209 1 267 1 253 1 
132 1 
246 1 62 2 112 1 209 2 56 1 50 1 132 1 29 1 
62 5 156 2 15 1 43 1 44 1 112 1 199 1 273 1 50 2 29 1 222 2 121 2 282 1 263 1 287 1 56 2 209 5 127 1 132 1 
212 1 226 1 
320 1 144 1 90 1 226 2 300 2 81 1 10 2 68 2 86 1 
283 1 257 1 70 1 
214 1 108 1 109 1 178 1 180 1 68 1 23 1 113 1 8 1 226 1 75 1 76 1 300 1 126 1 128 1 13 1 
214 1 90 1 108 1 109 1 180 1 178 1 235 1 68 2 113 1 70 1 277 1 8 1 75 1 76 1 300 2 81 1 10 1 128 1 126 1 13 1 
277 1 320 1 90 3 226 1 300 3 10 3 81 3 68 3 
90 1 32 1 300 1 10 1 81 1 68 1 267 1 
144 1 320 1 90 1 300 1 10 1 81 1 68 1 86 1 267 1 
89 1 214 1 90 3 2 1 291 1 175 1 180 1 178 1 142 1 8 1 297 1 226 1 300 4 10 3 301 1 13 1 267 1 62 1 197 1 157 1 108 1 109 1 237 1 235 1 68 4 201 1 113 1 277 1 320 2 248 1 165 1 324 1 75 1 76 1 285 2 82 1 81 3 209 1 128 1 86 1 126 1 40 1 254 1 131 1 
277 1 90 1 226 1 300 2 3 1 10 2 81 1 68 2 59 1 
62 1 89 1 197 1 90 3 175 1 235 1 68 3 201 1 277 2 320 1 300 3 81 3 10 3 209 1 83 1 301 1 86 1 267 1 132 1 
277 1 320 1 90 2 283 1 300 2 10 2 81 2 68 2 86 1 70 1 
214 1 108 1 109 1 178 1 180 1 68 1 113 1 8 1 226 1 76 1 75 1 300 1 126 1 128 1 13 1 
214 1 108 1 109 1 178 1 180 1 68 1 4 1 113 1 185 1 8 1 226 1 75 1 300 1 126 1 13 1 
87 1 256 1 2 1 291 1 257 2 142 1 262 1 54 1 237 1 158 1 70 2 204 1 162 1 248 1 164 1 283 2 35 2 284 1 285 2 82 2 171 1 170 1 40 1 254 4 
90 1 42 1 300 1 10 1 81 1 68 1 201 1 267 1 
90 4 3 1 235 1 141 1 68 5 183 1 277 2 320 1 226 1 300 5 81 4 10 5 86 1 59 1 
90 2 32 1 42 1 300 2 10 2 81 2 68 2 267 1 
111 1 149 1 
111 1 149 1 
233 1 33 1 
233 1 33 1 
233 1 33 1 
111 1 149 1 85 1 
111 1 149 1 219 1 
233 1 33 1 79 1 111 2 149 2 130 1 
111 1 149 1 85 1 
111 1 149 1 85 1 
99 1 111 1 149 1 
99 1 111 1 149 1 
99 1 111 1 149 1 
62 2 194 1 255 2 176 3 111 2 314 1 27 2 316 1 276 1 278 1 149 2 209 2 84 1 303 2 150 2 130 1 58 1 57 2 132 1 
62 1 90 2 176 1 111 1 68 2 161 1 314 1 219 1 275 1 27 1 184 1 119 1 120 1 226 1 300 2 38 1 10 2 81 2 209 1 149 1 303 1 150 1 57 1 211 1 
325 1 216 1 230 1 
325 1 216 1 21 1 
265 1 216 3 21 1 259 1 295 1 230 2 
265 1 216 2 21 1 259 1 230 1 71 1 
265 1 216 2 21 1 259 2 230 1 
135 3 213 1 93 2 220 2 50 1 184 1 222 1 7 1 100 1 263 2 147 1 299 1 56 4 192 1 62 5 156 1 199 1 112 1 158 1 161 1 114 2 274 1 204 1 29 1 118 1 121 1 38 1 209 5 287 3 170 1 171 1 132 2 
135 9 213 2 215 1 43 1 182 1 220 6 50 6 222 2 100 3 263 6 147 2 56 7 192 1 306 1 62 9 156 2 16 5 112 1 199 1 158 3 200 5 161 4 114 6 274 3 204 3 29 1 321 1 31 1 121 2 123 1 209 9 287 8 170 3 171 3 132 5 
135 4 213 1 43 1 93 1 220 2 222 1 100 2 147 1 263 2 299 1 56 2 62 3 156 1 112 1 158 1 161 1 274 1 114 2 204 1 118 1 121 1 209 3 287 3 170 1 171 1 132 3 
135 7 213 1 43 1 93 2 220 4 182 1 222 1 100 3 147 1 263 4 299 1 56 3 306 1 62 4 156 1 112 1 158 2 161 2 114 4 274 2 204 2 118 1 321 1 121 1 209 4 287 5 170 2 171 2 132 4 
212 1 75 1 250 1 
95 1 75 1 
186 1 
75 1 113 1 
269 1 250 2 75 3 180 1 66 1 113 1 
75 1 180 1 113 1 
75 1 313 1 
290 1 272 1 258 1 181 1 236 1 26 1 204 1 51 1 242 2 262 3 164 2 35 4 82 3 229 1 171 1 254 7 288 1 
290 1 272 1 258 1 181 1 236 1 26 1 204 1 51 1 242 2 262 3 164 2 35 4 82 3 229 1 171 1 254 7 288 1 
309 1 290 1 258 1 272 1 181 1 236 1 26 1 204 1 51 1 242 2 262 3 164 2 35 4 82 3 229 1 171 1 254 7 288 1 
290 1 2 1 92 1 258 1 181 2 46 1 142 1 51 2 262 10 11 1 229 1 60 3 154 1 272 2 236 1 158 3 26 5 274 3 241 1 242 3 204 4 117 1 248 1 164 5 35 16 285 2 82 15 328 1 129 4 171 4 170 3 40 1 254 31 288 2 
290 1 2 2 92 1 258 1 218 1 181 1 142 2 51 1 262 4 229 1 270 1 272 1 26 1 204 1 242 2 248 2 164 3 35 5 285 4 82 4 171 1 40 2 254 9 288 1 
174 1 177 1 22 1 125 1 39 1 
177 1 22 1 125 1 39 1 104 1 
177 1 125 1 152 1 331 1 
177 1 22 1 125 1 39 1 104 1 
174 1 177 1 22 1 125 1 39 1 
251 1 
89 1 178 1 3 1 94 1 261 1 96 2 187 2 8 2 100 2 263 2 189 1 10 1 12 1 267 1 197 1 108 2 109 2 112 1 199 1 201 1 113 1 29 3 281 2 121 1 207 1 34 2 287 2 209 5 126 2 132 2 135 2 289 1 213 1 214 1 137 2 138 1 47 1 50 6 222 1 143 1 296 1 225 1 53 1 300 1 301 1 231 2 62 5 156 1 65 4 68 1 239 1 243 2 73 1 75 1 78 1 
89 1 3 1 50 2 96 1 296 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 62 3 197 1 65 2 68 1 201 1 29 1 73 1 246 1 207 1 209 3 
62 3 89 1 197 1 65 3 112 1 3 1 68 1 201 1 50 1 29 1 246 1 73 1 207 1 296 1 34 1 189 1 53 1 300 1 10 1 301 1 209 3 12 1 267 1 132 1 
89 1 3 1 50 2 96 1 187 1 296 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 62 3 197 1 65 3 112 1 68 1 201 1 29 1 246 1 73 1 207 1 34 1 209 3 132 1 
89 1 3 1 96 4 187 4 263 1 100 2 189 1 10 1 12 1 267 1 197 1 20 1 112 5 199 1 201 1 29 3 116 1 121 1 281 2 207 1 34 4 37 1 209 5 287 1 132 5 137 2 45 1 50 7 222 1 296 1 53 1 225 1 300 1 301 1 61 1 231 2 62 5 156 1 65 6 68 1 239 1 243 2 246 1 73 1 
89 1 3 1 96 2 187 2 263 1 100 2 189 1 10 1 12 1 267 1 197 1 199 1 112 1 201 1 29 2 121 1 281 2 207 1 34 2 209 4 287 1 132 2 135 2 137 2 138 1 50 4 222 1 296 1 53 1 225 1 300 1 301 1 231 2 62 4 156 1 65 4 68 1 239 1 243 2 73 1 
89 1 137 2 3 1 45 1 50 4 222 1 96 2 187 2 296 1 100 2 263 1 225 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 231 2 62 4 197 1 156 1 65 4 20 1 112 1 199 1 68 1 239 1 201 1 29 2 243 2 73 1 281 2 121 1 207 1 34 2 37 1 287 1 209 4 132 1 
89 1 137 2 3 1 45 1 50 4 222 1 96 2 187 2 296 1 100 2 263 1 225 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 231 2 62 4 197 1 156 1 65 4 20 1 112 1 199 1 68 1 239 1 201 1 29 2 243 2 73 1 281 2 121 1 207 1 34 2 37 1 287 1 209 4 132 1 
135 2 89 1 137 2 3 1 217 1 50 4 222 1 96 2 187 2 296 1 263 1 225 1 53 1 189 1 300 1 10 1 301 1 12 1 151 1 267 1 62 4 197 1 156 1 65 4 112 1 199 1 68 1 201 1 28 2 203 1 29 2 73 1 247 2 281 2 121 1 207 1 34 2 37 1 287 1 209 4 132 1 
89 1 137 2 3 1 45 1 50 5 222 1 96 3 187 3 296 1 100 2 263 1 225 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 231 2 62 4 156 1 197 1 20 1 65 5 112 1 199 1 68 1 239 1 201 1 29 2 243 2 73 1 116 1 281 2 121 1 207 1 34 3 37 1 287 1 209 4 132 1 
89 1 137 2 3 1 45 1 50 5 222 1 96 3 187 3 296 1 100 2 263 1 225 1 53 1 189 1 300 1 10 1 301 1 12 1 267 1 231 2 62 4 156 1 197 1 20 1 65 5 112 1 199 1 68 1 239 1 201 1 29 2 243 2 73 1 116 1 281 2 121 1 207 1 34 3 37 1 287 1 209 4 132 1 
89 1 3 1 96 2 187 2 263 1 189 1 10 1 12 1 267 1 197 1 199 1 112 1 201 1 28 2 29 2 121 1 281 2 207 1 34 2 209 4 287 1 132 1 135 2 137 2 138 1 50 4 222 1 296 1 53 1 225 1 300 1 301 1 151 1 62 4 156 1 65 4 68 1 73 1 247 2 
212 1 290 1 2 1 291 1 258 1 257 1 181 1 142 1 262 2 226 2 54 1 229 1 237 1 70 1 204 1 242 1 248 1 164 2 283 1 35 3 285 2 82 3 40 1 171 1 254 6 288 1 
136 1 2 2 291 2 257 11 46 1 142 2 262 2 226 1 228 1 305 1 60 3 310 1 157 1 237 1 158 2 26 1 274 2 70 11 30 1 204 1 117 1 164 1 248 2 283 4 35 8 285 4 82 6 129 3 329 1 40 2 171 2 170 1 254 14 
214 1 90 1 2 1 291 1 180 1 178 1 142 1 223 1 8 1 226 1 300 2 10 1 13 1 109 1 108 1 110 1 157 1 237 1 235 1 23 1 68 2 113 1 160 1 30 1 277 1 248 1 283 1 35 1 75 1 76 1 285 2 81 1 82 1 128 1 126 1 329 1 40 1 254 2 
173 2 90 1 2 3 179 1 258 1 178 2 180 2 257 7 181 1 262 8 8 3 264 1 101 1 10 1 13 2 107 1 109 3 108 1 26 4 113 2 274 2 30 1 204 3 277 1 279 2 283 7 35 10 285 6 126 3 128 2 40 3 131 2 288 1 214 2 290 1 291 3 142 3 226 2 300 3 229 1 157 1 235 1 237 3 68 3 158 2 70 7 242 1 164 4 248 3 76 2 75 2 166 2 82 10 81 1 329 1 169 2 171 3 170 2 254 20 
90 1 214 2 2 2 291 2 178 2 94 1 142 2 221 1 145 2 8 7 146 1 264 1 54 1 300 1 55 1 10 1 103 1 153 1 308 1 232 1 109 8 108 2 157 1 237 2 68 1 113 2 30 1 277 1 248 2 249 1 35 1 75 3 78 1 285 4 81 1 82 1 126 8 40 2 254 2 
90 1 2 1 291 1 257 1 142 1 262 1 300 1 10 1 237 1 68 1 158 1 274 1 70 1 204 1 320 1 164 1 248 1 283 1 35 1 285 2 80 1 81 1 82 2 86 1 329 1 40 1 171 1 170 1 254 3 
291 1 2 1 257 1 237 1 158 1 26 1 70 1 142 1 162 1 262 1 248 1 283 1 35 2 54 1 285 2 40 1 171 1 254 2 
291 1 2 1 257 1 237 1 70 1 142 1 204 1 262 1 164 1 248 1 283 1 284 1 54 1 285 2 82 2 40 1 170 1 254 2 
2 1 291 1 257 2 142 1 262 2 54 1 237 1 158 1 26 1 274 1 70 2 204 1 248 1 164 1 283 2 35 2 285 2 82 2 171 1 40 1 170 1 254 4 
291 1 2 1 257 1 237 1 158 1 26 1 70 1 142 1 162 1 262 1 248 1 283 1 35 2 285 2 103 1 40 1 171 1 254 2 
291 1 2 1 257 1 237 1 70 1 142 1 204 1 262 1 164 1 248 1 283 1 284 1 285 2 82 2 103 1 40 1 170 1 254 2 
2 1 291 1 257 2 142 1 262 2 103 1 237 1 158 1 26 1 274 1 70 2 204 1 248 1 164 1 283 2 35 2 285 2 82 2 171 1 40 1 170 1 254 4 
2 1 291 1 257 2 142 1 262 2 237 1 158 1 26 1 274 1 70 2 204 1 248 1 164 1 283 2 35 2 285 2 82 2 171 1 40 1 170 1 254 4 
214 1 291 1 2 1 180 1 178 1 142 1 8 1 226 1 300 1 13 1 109 1 108 1 157 1 237 1 68 1 113 1 30 1 248 1 35 1 76 1 75 1 285 2 82 1 128 1 126 1 40 1 254 2 131 1 
214 1 291 1 2 1 180 1 178 1 4 1 142 1 185 1 52 1 8 1 226 1 300 1 13 1 109 1 108 1 157 1 237 1 68 1 113 1 30 1 248 1 35 1 75 1 285 2 82 1 126 1 40 1 254 2 
2 1 291 1 257 2 142 1 262 2 237 1 158 1 26 1 274 1 70 2 204 1 248 1 164 1 283 2 35 2 285 2 82 2 329 1 171 1 40 1 170 1 254 4 
214 1 291 1 2 1 257 2 180 1 178 1 142 1 221 1 262 2 8 1 300 1 13 1 109 1 237 1 158 1 68 1 26 1 113 1 274 1 70 2 204 1 164 1 248 1 283 2 35 2 76 1 75 1 285 2 82 2 128 1 126 1 170 1 171 1 169 1 40 1 254 4 131 1 
90 1 2 1 291 1 257 1 142 1 262 1 300 1 10 1 19 1 237 1 68 1 158 1 26 1 274 1 70 1 204 1 320 1 248 1 283 1 35 2 285 2 82 1 81 1 86 1 329 1 170 1 40 1 171 1 254 3 
91 1 2 3 92 1 46 3 218 1 5 1 142 3 260 1 97 1 262 5 98 1 191 3 307 1 60 3 106 1 271 1 234 1 158 4 26 3 274 4 69 1 204 4 117 1 74 1 164 2 248 3 35 15 285 6 124 2 82 17 168 1 129 4 330 1 40 3 171 4 170 4 254 32 
91 1 2 4 92 2 46 3 218 1 5 1 142 4 260 1 97 1 262 6 98 1 191 4 307 1 60 3 106 1 271 1 234 1 158 4 26 3 274 4 69 1 204 3 117 1 74 1 164 3 248 4 35 17 285 8 124 2 82 16 168 1 129 4 330 1 40 4 171 4 170 3 254 33 
290 1 91 1 136 2 2 2 92 1 258 1 181 1 46 2 218 1 142 2 260 1 97 1 262 12 98 1 191 3 229 1 307 1 60 4 106 1 271 1 158 6 26 6 274 6 69 1 242 1 204 7 117 2 74 1 164 6 248 2 35 24 285 4 124 1 82 22 168 1 129 4 330 1 40 2 171 7 170 6 254 46 288 1 
2 2 46 1 218 1 142 2 97 1 262 6 98 1 191 2 60 1 271 2 234 1 158 3 26 3 274 3 69 1 204 3 117 1 74 1 164 3 248 2 35 9 285 4 124 1 82 10 286 1 129 2 40 2 171 3 170 3 254 19 
2 3 91 1 92 2 218 1 46 2 142 3 260 1 262 2 97 2 98 1 191 3 307 1 60 2 106 1 271 1 158 3 26 1 274 3 69 1 204 2 74 1 164 1 248 3 35 13 285 6 82 11 124 2 168 1 129 2 40 3 330 1 171 3 170 2 254 24 
278 1 268 1 111 1 149 1 150 1 303 1 130 1 58 1 57 1 27 1 
219 1 275 1 
322 1 111 1 149 1 150 1 303 1 57 1 202 1 27 1 244 1 
62 1 194 1 255 1 176 2 111 1 314 1 27 1 276 1 278 1 209 1 149 1 84 1 303 1 150 1 130 1 58 1 57 1 132 1 
62 1 194 1 255 1 176 2 111 1 314 1 27 1 276 1 278 1 209 1 149 1 84 1 303 1 150 1 130 1 58 1 57 1 132 1 
62 1 194 1 255 1 176 2 111 1 314 1 27 1 276 1 278 1 209 1 149 1 84 1 303 1 150 1 130 1 58 1 57 1 132 1 
134 1 79 1 85 1 
134 1 79 1 85 1 
99 1 193 1 
99 1 79 1 193 1 
119 1 120 1 
62 1 194 1 255 1 90 2 176 1 111 1 67 1 68 2 161 1 219 1 275 1 27 1 184 1 119 1 120 1 226 1 300 2 10 2 81 2 38 1 149 1 56 1 209 1 303 1 150 1 57 1 211 1 
134 1 85 1 
99 1 79 1 193 1 
214 1 291 1 2 1 178 1 139 1 142 1 145 2 8 2 146 1 300 2 55 1 10 2 109 2 157 1 312 1 237 1 68 2 24 1 113 1 30 1 248 1 122 1 35 1 75 1 285 2 82 1 126 2 329 1 40 1 254 2 210 1 
88 1 1 1 214 1 109 2 18 1 216 2 21 1 178 1 292 1 140 1 295 1 221 1 8 2 208 1 264 1 148 1 325 1 126 2 230 1 
88 1 214 1 109 1 64 1 216 2 21 1 292 1 140 1 178 1 295 1 8 1 208 1 264 1 148 1 325 1 126 1 230 1 
214 1 311 1 108 1 109 1 18 1 178 1 292 1 113 1 94 1 205 1 8 1 75 1 78 1 126 1 
88 1 1 1 214 1 109 1 18 1 216 2 21 1 178 1 292 1 140 1 295 1 8 1 208 1 264 1 148 1 325 1 126 1 230 1 
25 1 
212 1 282 1 263 1 44 1 112 1 287 1 132 1 
62 1 135 1 156 1 112 1 199 1 239 1 50 1 29 1 222 1 243 1 121 1 263 1 100 1 209 1 287 1 231 1 132 2 
133 1 156 1 214 1 108 1 109 1 178 2 180 1 66 1 199 1 113 1 222 1 95 1 121 1 8 1 75 1 227 1 126 1 
135 6 91 1 46 1 48 1 220 5 50 1 222 2 100 3 263 4 307 1 60 1 62 1 196 1 156 2 106 1 199 2 112 1 158 2 114 5 274 2 29 1 204 2 121 2 209 1 287 7 168 1 129 1 330 1 171 2 170 2 132 4 
90 1 181 1 222 1 188 1 263 2 300 1 102 1 10 1 266 1 229 1 267 1 62 1 196 2 156 1 20 1 199 1 68 1 204 1 320 1 121 1 32 1 324 1 81 1 209 1 287 2 171 2 253 1 288 1 
156 1 44 1 199 1 112 1 222 1 121 1 282 1 263 1 287 1 132 1 
196 2 135 10 158 2 274 2 220 5 114 5 204 2 279 1 263 5 100 5 287 5 266 1 171 2 170 2 132 5 
62 1 112 1 209 1 50 1 132 1 29 1 
213 2 214 1 43 1 178 1 47 1 94 1 50 4 222 2 261 1 143 2 8 4 263 2 9 1 62 3 156 2 109 4 108 2 198 1 199 1 113 1 115 1 317 2 29 2 121 2 75 1 78 1 287 2 209 3 126 4 
90 2 214 1 2 1 291 1 178 1 180 1 142 1 8 1 297 1 226 1 300 3 10 2 13 1 157 1 109 1 108 1 237 1 68 3 113 1 320 2 248 1 324 1 76 1 75 1 285 2 82 1 81 2 126 1 128 1 40 1 254 1 131 1 
135 4 156 1 213 1 199 1 112 2 220 2 114 2 242 1 222 1 143 1 121 1 100 2 263 2 287 1 132 4 
36 1 150 1 27 1 
278 1 119 1 17 1 150 1 27 1 
36 1 150 1 27 1 
36 1 150 1 27 1 
206 1 150 1 27 1 
206 1 150 1 27 1 
206 1 150 1 27 1 
150 1 27 1 
111 1 149 1 
290 1 91 1 2 1 258 1 46 1 218 1 181 1 142 1 262 2 229 1 60 1 242 1 204 1 248 1 164 2 35 4 285 2 82 4 129 1 171 1 40 1 254 8 288 1 
290 1 91 1 2 2 258 1 181 1 46 1 218 1 142 2 262 3 229 1 60 1 158 1 26 1 274 1 315 1 242 1 204 1 117 1 164 2 248 2 35 6 285 4 82 5 129 2 40 2 171 2 254 11 288 1 
91 1 2 3 92 1 46 1 218 1 142 3 262 2 307 1 60 1 106 1 158 2 26 1 274 2 315 1 204 2 248 3 164 1 35 6 285 6 82 7 168 1 129 1 40 3 330 1 171 2 170 2 254 13 
91 1 2 3 92 1 46 1 218 1 142 3 262 2 60 1 307 1 106 1 158 2 26 1 274 2 315 1 204 1 248 3 164 1 35 7 285 6 82 4 168 1 129 1 40 3 330 1 171 2 170 1 254 11 
290 1 91 1 2 1 258 1 46 1 218 1 181 1 142 1 262 2 229 1 60 1 242 1 204 1 248 1 164 2 35 4 285 2 82 4 129 1 171 1 40 1 254 8 288 1 
91 1 2 1 46 1 218 1 142 1 262 2 60 1 307 1 106 1 158 2 26 1 274 2 204 2 248 1 164 1 35 6 285 2 82 6 168 1 129 1 40 1 330 1 171 2 170 2 254 12 
91 1 2 4 92 2 46 1 218 1 142 4 262 2 307 1 60 1 106 1 158 2 26 1 274 2 315 1 204 1 248 4 164 1 35 7 285 8 82 5 168 1 129 1 40 4 330 1 171 2 170 1 254 12 
91 1 2 4 92 2 46 1 218 1 142 4 262 4 307 1 60 1 106 1 234 1 158 2 26 2 274 2 204 1 248 4 164 2 35 7 285 8 82 5 168 1 129 1 40 4 330 1 171 2 170 1 254 12 
290 1 258 2 181 3 26 3 204 1 262 6 164 3 35 3 82 4 229 1 171 1 254 7 288 3 
91 1 2 4 92 2 46 1 218 1 142 4 262 2 307 1 60 1 106 1 234 1 158 2 26 1 274 2 204 1 248 4 164 1 35 7 285 8 82 5 168 1 129 1 40 4 330 1 171 2 170 1 254 12 
290 1 2 2 92 1 258 1 181 1 26 1 142 2 242 1 204 1 262 3 164 2 248 2 35 4 285 4 82 4 229 1 171 1 40 2 254 8 288 1 
212 1 290 1 258 1 181 1 242 1 204 1 262 2 164 2 35 3 82 3 229 1 171 1 254 6 288 1 
2 1 158 1 26 1 274 1 315 1 142 1 204 1 262 2 164 1 248 1 35 2 285 2 82 2 170 1 40 1 171 1 254 4 
46 1 158 1 26 1 274 1 204 1 117 1 262 2 164 1 35 3 82 4 129 2 170 1 171 1 254 7 60 1 
290 1 41 1 136 1 2 2 92 2 258 1 181 2 142 2 262 9 229 1 305 1 60 2 158 2 26 4 274 2 242 1 204 3 117 1 164 5 248 2 35 11 285 4 82 12 129 2 171 3 170 2 40 2 254 23 288 2 
82 1 129 1 254 1 
35 1 254 1 60 1 
2 1 158 1 26 1 274 1 142 1 315 1 204 1 279 1 262 3 248 1 164 2 35 3 285 2 82 3 40 1 171 1 170 1 254 6 
91 1 2 1 46 1 218 1 142 1 262 2 60 1 307 1 106 1 158 2 26 1 274 2 204 2 248 1 164 1 35 6 285 2 82 6 168 1 129 1 40 1 330 1 171 2 170 2 254 12 
262 2 164 1 35 3 181 1 82 3 26 1 229 1 171 1 254 6 288 1 204 1 
41 1 290 1 2 1 92 1 258 1 181 1 26 1 142 1 262 2 164 1 248 1 35 1 285 2 82 2 40 1 254 3 288 1 
2 1 218 1 181 2 26 2 142 1 204 2 262 5 248 1 164 3 188 1 35 5 285 2 82 5 229 1 40 1 171 2 254 10 288 2 
2 1 218 1 158 1 26 1 142 1 262 1 248 1 35 2 285 2 40 1 171 1 254 2 
2 1 218 1 158 1 26 1 274 1 142 1 204 1 262 2 164 1 248 1 35 2 285 2 82 2 170 1 40 1 171 1 254 4 
41 1 2 3 92 1 234 1 218 1 181 1 26 1 142 3 262 2 248 3 164 1 35 1 285 6 82 2 40 3 254 3 288 1 
290 1 41 1 2 5 92 2 258 1 181 3 46 1 218 1 142 5 262 12 229 2 60 3 154 1 234 1 158 3 26 5 274 3 241 1 315 1 242 1 204 5 117 1 248 5 164 7 35 16 285 10 82 18 328 1 129 4 40 5 171 5 170 3 254 34 288 3 
226 1 300 1 190 1 10 1 3 1 68 1 59 1 
195 1 0 1 3 1 68 1 238 1 245 1 226 1 300 1 190 1 326 1 10 1 59 1 
212 1 214 1 8 1 109 1 108 1 75 1 78 1 178 1 126 1 113 1 94 1 
90 1 214 1 108 1 109 1 180 1 178 1 68 2 113 1 277 1 8 1 226 1 75 1 300 2 81 1 10 1 126 1 128 1 13 1 
214 1 90 2 178 1 180 2 8 1 226 1 300 2 10 2 301 1 13 1 267 1 109 1 68 2 313 1 201 1 113 2 317 1 277 1 75 3 81 1 252 1 128 1 126 1 
214 1 90 2 178 1 180 2 185 1 8 2 226 1 300 2 10 2 301 1 13 1 267 1 63 1 109 2 68 2 313 1 201 1 113 2 317 1 277 1 75 3 81 1 252 1 126 2 
90 1 214 1 178 1 180 1 50 1 95 1 8 2 224 1 300 1 102 1 10 1 267 1 62 2 197 1 108 1 109 2 112 1 68 1 159 1 313 1 113 1 317 1 320 1 32 1 324 1 250 1 75 4 81 1 252 1 209 2 126 2 253 1 132 1 
62 2 63 1 197 1 214 1 108 1 109 3 180 1 178 1 112 1 313 1 113 1 50 1 317 1 95 1 280 1 8 3 75 4 250 1 252 1 209 2 126 3 132 1 
308 1 214 1 8 1 109 1 178 1 126 1 
308 1 232 1 214 2 108 2 109 7 66 1 180 1 178 3 113 2 72 1 221 1 145 1 8 6 249 1 146 1 298 1 264 1 75 3 327 1 126 7 153 1 
173 1 214 1 90 1 290 1 2 2 291 2 257 1 258 1 180 1 178 1 181 1 142 2 221 1 262 2 8 1 226 2 300 2 10 1 229 1 13 1 109 1 237 2 68 2 24 1 113 1 70 1 242 1 204 1 277 1 164 2 248 2 283 1 35 3 75 1 76 1 285 4 82 3 81 1 126 1 128 1 329 1 171 1 40 2 169 1 254 6 131 1 288 1 
44 1 50 2 222 2 95 1 8 1 263 1 9 1 56 1 302 1 14 1 62 3 105 1 156 2 197 1 108 1 109 1 112 1 199 2 29 1 280 1 121 2 282 1 75 2 250 1 287 1 209 3 126 1 132 1 
308 1 214 1 109 1 66 1 180 1 178 2 113 1 186 1 8 1 250 1 75 1 227 1 126 1 
63 1 214 1 108 1 109 4 178 1 113 1 94 1 221 1 318 1 8 4 75 1 78 1 126 4 
214 1 109 2 179 1 180 1 178 2 113 1 72 1 317 1 319 1 8 2 298 1 75 1 126 2 172 1 
214 1 8 1 208 1 109 1 108 1 325 1 216 1 21 1 178 1 126 1 
214 1 109 2 178 1 312 1 113 1 221 1 8 2 146 1 264 1 75 1 126 2 
232 1 214 2 108 1 109 5 178 2 113 2 94 1 317 1 221 1 318 1 8 4 146 1 249 1 75 3 78 1 126 5 
214 2 108 1 109 5 178 2 294 1 113 2 94 1 317 1 221 1 318 1 8 4 146 1 249 1 75 3 78 1 126 5 
90 1 214 1 108 1 109 1 180 1 178 1 68 2 113 1 277 1 185 1 8 1 226 1 75 1 300 2 81 1 10 1 126 1 13 1 
214 1 109 1 66 1 180 1 178 2 113 1 72 1 317 1 8 1 298 1 75 1 327 1 126 1 
323 1 122 1 300 1 139 1 10 1 68 1 304 1 240 1 210 1 
167 1 293 1 240 1 
323 1 226 1 304 1 6 1 240 1 
62 2 89 1 197 1 175 1 112 1 201 1 293 1 6 2 240 1 323 2 226 1 77 1 167 1 301 1 56 1 209 2 304 2 267 1 132 1 

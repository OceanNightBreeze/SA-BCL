#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 4 325 2 186 6 328 9 47 1 164 1 278 2 218 2 339 1 87 1 241 1 343 1 243 1 259 1 194 2 282 1 372 1 286 2 134 1 138 5 198 1 290 2 321 1 39 9 295 2 119 1 40 1 225 3 
143 4 325 2 186 6 328 9 47 1 164 1 278 2 218 2 339 1 87 1 241 1 343 1 243 1 259 1 194 2 282 1 372 1 134 1 286 2 138 5 198 1 290 2 321 1 39 9 295 2 119 1 40 1 225 3 
143 5 325 2 186 7 328 10 47 1 164 1 278 2 218 2 339 1 87 1 241 1 343 1 243 1 259 1 194 2 282 1 372 1 134 1 286 2 138 6 198 1 290 2 321 1 39 10 295 2 119 1 40 1 225 4 
143 3 325 2 186 4 328 7 47 1 164 1 278 2 218 2 339 1 87 1 241 1 343 1 243 1 259 1 194 2 282 1 372 1 134 1 286 1 138 4 198 1 290 2 321 1 39 7 295 2 40 1 225 2 
241 1 143 2 343 1 243 1 325 1 186 3 372 1 328 4 286 2 164 1 138 3 290 1 278 1 39 4 218 1 295 1 225 1 119 1 
142 1 343 1 325 1 194 1 372 1 328 2 134 1 138 1 164 1 137 1 290 1 321 1 278 1 39 2 13 1 218 1 130 1 
143 1 343 1 194 1 186 1 372 1 328 3 164 1 138 2 198 1 278 2 39 3 218 2 225 1 
143 4 186 7 325 1 328 9 45 1 47 1 164 1 209 1 278 2 218 2 241 1 343 1 243 1 194 1 282 1 372 1 286 2 138 5 198 1 290 1 39 9 295 1 225 3 119 1 
143 4 186 7 325 1 328 9 45 1 47 1 164 1 209 1 278 2 218 2 241 1 343 1 243 1 194 1 282 1 372 1 286 2 138 5 198 1 290 1 39 9 295 1 225 3 119 1 
6 1 84 1 70 1 
261 1 172 2 84 1 
226 1 96 2 340 1 179 2 373 2 335 2 207 2 175 2 
226 1 96 2 357 1 25 2 299 1 205 2 228 1 207 2 166 1 50 1 364 1 52 1 169 1 5 1 81 1 335 3 57 1 175 3 338 1 341 1 340 1 242 2 195 1 312 1 373 2 107 1 89 1 68 1 179 2 21 1 158 1 267 1 95 2 118 1 269 1 324 2 41 1 
96 1 254 1 340 1 179 1 373 1 7 1 335 1 207 1 249 1 175 1 
96 1 16 1 62 1 369 1 335 1 201 1 7 1 55 1 84 1 152 1 238 1 175 1 70 1 239 1 
96 1 16 2 373 1 207 1 179 1 369 1 335 1 201 1 7 1 55 2 84 1 238 1 175 1 70 1 239 1 
16 1 8 1 44 1 177 1 55 1 
101 1 16 2 8 1 177 1 55 2 9 1 84 1 70 1 
16 1 8 1 55 1 
96 1 340 1 16 1 373 1 177 1 207 1 254 1 179 1 322 1 7 1 335 1 55 1 249 1 175 1 
84 1 
156 1 101 1 16 2 8 1 177 1 55 2 84 1 70 1 
192 2 16 5 61 1 301 1 251 1 177 2 76 1 345 1 101 1 3 1 127 1 102 1 234 1 150 2 8 2 55 5 32 2 84 1 70 1 
226 1 6 1 
226 2 96 2 179 1 373 1 140 1 335 2 207 1 28 1 175 2 
377 1 108 1 129 1 
226 1 357 1 341 1 25 1 205 1 228 1 110 1 364 1 52 1 68 1 81 1 335 1 118 1 175 1 324 1 338 1 
357 1 96 1 341 1 122 1 25 1 71 1 373 1 205 1 228 1 207 1 108 1 364 1 52 1 68 1 81 1 335 2 118 1 338 1 175 2 324 1 
226 1 96 3 122 1 179 1 373 3 335 3 207 3 175 3 
96 1 373 1 7 1 335 1 207 1 249 1 175 1 
96 1 179 1 373 1 7 1 335 1 140 1 207 1 28 1 175 1 
226 1 357 1 96 3 122 1 25 1 299 1 71 1 205 1 228 1 207 3 50 1 364 1 189 1 52 1 369 1 5 1 81 1 335 4 7 1 55 1 238 1 57 1 338 1 175 4 239 1 341 1 340 1 242 1 16 1 132 1 373 3 107 1 68 1 179 2 21 1 201 1 140 1 158 1 267 1 95 2 118 1 269 1 324 1 41 1 
226 1 96 2 122 1 373 1 335 2 62 1 236 1 207 1 175 2 
96 3 122 2 16 1 71 1 132 1 373 3 207 3 179 1 369 1 140 1 7 1 335 3 201 1 55 1 84 1 268 1 238 1 175 3 239 1 
96 2 122 1 373 2 207 2 108 1 179 1 140 1 335 2 129 1 175 2 
226 1 357 1 341 1 25 1 205 1 228 1 364 1 52 1 68 1 81 1 335 1 118 1 175 1 324 1 338 1 
226 1 357 1 341 1 25 1 205 1 228 1 364 1 68 1 91 1 81 1 335 1 118 1 175 1 324 1 105 1 
275 1 166 2 50 1 363 1 304 1 233 1 57 2 129 2 280 1 36 1 242 4 176 1 284 1 107 1 135 1 108 2 65 1 377 2 21 1 158 1 267 1 95 2 353 1 269 1 
59 1 
96 5 226 1 122 2 71 1 373 4 62 1 207 4 305 1 179 1 306 1 335 5 140 1 236 1 175 5 
96 1 373 1 7 1 335 1 207 1 249 1 175 1 59 1 
88 1 168 1 
88 1 168 1 
266 1 17 1 
266 1 17 1 
266 1 17 1 
88 1 168 1 170 1 
88 1 246 1 168 1 
88 2 139 1 168 2 115 1 266 1 17 1 
88 1 168 1 170 1 
88 1 168 1 170 1 
88 1 168 1 361 1 
88 1 168 1 361 1 
88 1 168 1 361 1 
88 2 358 1 203 1 16 2 250 2 73 1 188 1 139 1 147 2 168 2 178 1 148 2 221 2 55 2 84 1 104 3 215 2 310 1 86 1 
226 1 96 2 203 1 207 2 330 1 167 1 168 1 147 1 148 1 335 2 55 1 104 1 309 1 215 1 175 2 88 1 16 1 373 2 197 1 90 1 246 1 221 1 318 1 69 1 
290 1 325 1 295 1 
290 1 325 1 137 1 
325 3 334 1 49 1 137 1 51 1 295 2 
371 1 325 2 49 1 137 1 51 1 295 1 
325 2 49 1 137 1 51 2 295 1 
327 1 301 3 330 1 76 2 167 1 232 1 101 1 234 1 172 3 150 1 8 1 32 1 55 5 257 1 84 2 191 2 14 1 240 2 192 1 36 1 16 5 261 1 176 1 177 4 65 1 200 1 351 1 293 2 69 1 353 1 379 1 70 1 
301 8 44 5 330 4 76 6 232 3 3 1 101 1 234 1 333 1 172 9 8 6 150 2 55 9 32 2 257 2 84 5 191 6 279 5 14 2 240 6 192 2 36 3 16 9 261 3 176 3 177 7 65 3 157 1 19 1 92 1 117 1 353 3 379 1 70 1 184 1 
301 3 330 1 76 2 232 1 3 1 172 4 150 1 32 1 55 3 257 1 84 3 191 2 14 1 240 2 192 1 36 1 16 3 261 2 176 1 177 2 65 1 200 1 351 1 293 1 353 1 70 1 
301 5 330 2 76 4 232 2 3 1 333 1 172 7 150 1 32 1 55 4 257 1 84 4 191 4 14 1 240 4 192 1 36 2 16 4 261 3 176 2 177 3 65 2 157 1 200 1 351 1 293 2 117 1 353 2 70 1 
341 1 6 1 210 1 
341 1 124 1 
190 1 
341 1 118 1 
341 3 81 1 118 1 66 1 210 2 85 1 
341 1 81 1 118 1 
341 1 74 1 
280 2 370 1 242 7 176 1 285 1 161 1 163 1 166 4 363 3 100 1 54 2 80 1 116 1 294 1 323 1 353 1 57 3 
280 2 370 1 242 7 176 1 285 1 161 1 163 1 166 4 363 3 100 1 54 2 80 1 116 1 294 1 323 1 353 1 57 3 
280 2 370 1 242 7 176 1 285 1 161 1 163 1 166 4 363 3 100 1 54 2 171 1 80 1 116 1 294 1 323 1 353 1 57 3 
227 1 206 1 161 1 46 4 163 5 50 1 166 16 363 10 232 3 367 1 100 1 146 1 276 1 54 3 80 1 57 15 370 2 280 5 242 31 36 3 176 4 285 2 65 3 347 3 114 1 21 1 116 2 294 2 158 1 267 1 323 1 95 2 353 4 354 1 
163 1 50 2 166 5 363 4 367 1 100 1 54 2 80 1 12 1 57 4 370 1 280 3 242 9 176 1 285 1 20 1 21 2 158 2 294 1 116 1 267 2 95 4 323 1 353 1 
357 1 25 1 186 1 144 1 325 2 205 1 328 2 26 1 329 1 362 1 97 1 164 1 77 1 364 1 278 1 334 1 174 1 218 1 343 1 194 1 372 1 138 1 136 1 137 1 290 1 349 1 180 1 39 2 324 1 295 1 
357 1 25 1 144 1 186 2 325 2 205 1 328 3 329 1 362 1 164 1 77 1 364 1 149 1 278 1 334 1 174 1 218 1 343 1 194 1 138 1 136 1 137 1 18 1 290 1 349 1 180 1 39 3 93 1 324 1 295 1 
357 1 25 1 144 1 186 2 325 2 205 1 328 2 362 1 164 1 77 1 364 1 149 1 334 1 343 1 194 1 138 1 136 1 137 1 18 1 290 1 349 1 180 1 39 2 324 1 295 1 
357 1 341 1 25 1 194 2 144 2 328 1 205 1 228 1 344 1 27 1 136 2 364 1 256 1 278 1 307 1 349 2 31 1 39 1 93 1 118 1 217 1 218 1 324 1 
357 1 25 1 325 2 194 1 144 1 372 1 26 1 328 1 205 1 329 1 362 1 137 1 77 1 136 1 364 1 290 1 149 1 180 1 278 1 349 1 334 1 39 1 174 1 218 1 324 1 295 1 
292 1 
96 1 228 2 331 1 48 2 101 3 234 1 4 4 8 6 150 1 335 1 7 1 55 5 11 2 237 1 152 1 238 1 153 1 239 1 192 1 341 1 16 5 344 1 62 1 245 1 201 1 118 1 70 1 357 1 356 1 25 2 298 1 301 2 205 2 27 1 75 1 76 2 364 1 366 1 365 1 255 2 369 1 172 2 308 1 257 1 32 1 84 2 216 1 34 2 175 1 131 2 261 2 314 1 316 2 324 2 272 2 
96 1 298 1 16 3 314 1 62 1 75 1 156 1 101 1 4 2 369 1 8 2 7 1 335 1 201 1 55 3 237 1 152 1 238 1 216 1 34 1 175 1 239 1 
96 1 298 1 75 1 101 1 369 1 4 3 8 1 335 1 7 1 55 3 84 1 152 1 237 1 216 1 238 1 175 1 239 1 16 3 62 1 314 1 316 1 156 1 201 1 70 1 
96 1 131 1 298 1 16 3 314 1 62 1 75 1 316 1 156 1 101 1 4 3 369 1 8 2 7 1 335 1 201 1 55 3 84 1 237 1 152 1 238 1 216 1 34 1 175 1 70 1 239 1 
96 1 331 1 48 2 101 3 234 1 4 6 7 1 335 1 8 7 150 1 55 5 11 2 237 1 152 1 238 1 239 1 58 1 192 1 16 5 244 1 62 1 156 1 350 1 201 1 248 1 70 5 356 1 298 1 301 1 75 1 76 1 369 1 255 2 32 1 84 5 216 1 34 4 175 1 131 4 261 2 314 1 316 4 376 1 272 2 
96 1 356 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 255 2 369 1 4 4 172 2 308 1 8 4 150 1 335 1 7 1 32 1 55 4 84 2 11 2 152 1 237 1 216 1 238 1 34 2 175 1 239 1 192 1 131 2 16 4 261 2 314 1 62 1 316 2 201 1 70 1 272 2 
356 1 96 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 255 2 369 1 4 4 8 4 150 1 335 1 7 1 55 4 32 1 84 1 11 2 152 1 237 1 216 1 238 1 34 2 175 1 58 1 239 1 192 1 131 2 16 4 261 2 62 1 314 1 316 2 376 1 350 1 201 1 70 1 272 2 
356 1 96 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 255 2 369 1 4 4 8 4 150 1 335 1 7 1 55 4 32 1 84 1 11 2 152 1 237 1 216 1 238 1 34 2 175 1 58 1 239 1 192 1 131 2 16 4 261 2 62 1 314 1 316 2 376 1 350 1 201 1 70 1 272 2 
96 1 274 1 298 1 301 1 331 1 75 1 145 1 48 2 76 1 101 2 234 1 369 1 4 4 172 2 8 4 150 1 335 1 7 1 55 4 32 1 84 1 11 2 152 1 237 1 216 1 238 1 34 2 175 1 58 1 239 1 192 1 258 1 131 2 16 4 62 1 314 1 316 2 112 2 201 1 159 2 70 1 
356 1 96 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 255 2 369 1 4 5 150 1 335 1 7 1 8 5 32 1 55 4 84 1 11 2 152 1 237 1 216 1 238 1 175 1 34 3 58 1 239 1 192 1 16 4 131 3 261 2 244 1 62 1 314 1 376 1 316 3 350 1 201 1 70 1 272 2 
356 1 96 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 255 2 369 1 4 5 150 1 335 1 7 1 8 5 32 1 55 4 84 1 11 2 152 1 237 1 216 1 238 1 175 1 34 3 58 1 239 1 192 1 16 4 131 3 261 2 244 1 62 1 314 1 376 1 316 3 350 1 201 1 70 1 272 2 
96 1 298 1 301 1 331 1 75 1 48 2 76 1 101 2 234 1 369 1 4 4 172 2 308 1 8 4 150 1 335 1 7 1 32 1 55 4 84 1 11 2 152 1 237 1 216 1 238 1 34 2 175 1 239 1 192 1 258 1 131 2 16 4 314 1 62 1 316 2 112 2 201 1 159 2 70 1 
226 2 275 1 50 1 166 3 363 2 100 1 54 1 80 1 6 1 129 1 57 3 280 2 242 6 176 1 107 1 285 1 108 1 377 1 21 1 116 1 158 1 267 1 95 2 323 1 353 1 269 1 
226 1 326 1 43 1 163 1 46 3 50 2 166 8 363 2 232 2 146 1 5 1 56 1 57 6 129 4 280 1 242 14 36 1 176 2 107 1 108 11 65 2 89 1 347 3 377 11 378 1 352 1 21 2 158 2 267 2 95 4 353 1 354 1 269 2 
226 1 357 1 96 1 122 1 25 1 71 1 205 1 43 1 302 1 228 1 207 1 50 1 166 1 364 1 52 1 81 1 5 1 335 2 338 1 129 1 175 2 57 1 341 1 281 1 242 2 373 1 283 1 107 1 110 1 89 1 68 1 21 1 158 1 267 1 118 1 95 2 324 1 269 1 
226 2 96 1 0 2 43 1 228 1 50 3 232 2 100 1 52 2 149 1 54 1 5 1 335 3 336 1 57 10 338 2 280 4 341 2 242 20 285 1 107 3 108 7 65 2 68 2 21 3 116 1 158 3 118 2 353 3 357 2 122 1 25 3 299 2 71 1 205 3 207 1 163 4 166 10 364 2 363 8 80 1 81 2 175 3 129 7 36 2 373 1 176 3 38 1 89 1 220 2 319 2 377 7 182 1 267 3 323 1 95 6 324 3 269 3 183 2 
120 1 96 1 357 2 122 1 25 7 275 1 205 8 228 2 162 1 207 1 97 1 27 1 50 2 166 1 364 2 231 1 332 1 149 1 5 1 335 1 175 1 57 1 341 3 242 2 195 2 373 1 133 1 107 2 344 1 89 1 111 1 199 1 21 2 158 2 267 2 95 4 118 2 324 8 269 2 
96 1 297 1 43 1 207 1 50 1 166 1 363 1 232 1 335 1 129 1 175 1 57 2 280 1 242 3 36 1 373 1 176 1 107 1 108 1 65 1 377 1 179 1 140 1 21 1 158 1 267 1 95 2 353 1 269 1 
242 2 275 1 176 1 107 1 163 1 108 1 65 1 50 1 166 2 363 1 304 1 377 1 21 1 158 1 267 1 95 2 129 1 269 1 
280 1 242 2 36 1 275 1 107 1 108 1 50 1 363 1 233 1 377 1 21 1 158 1 267 1 95 2 353 1 129 1 269 1 57 2 
275 1 163 1 166 2 50 1 363 2 232 1 129 2 57 2 280 1 242 4 36 1 176 1 107 1 65 1 108 2 377 2 21 1 158 1 267 1 95 2 353 1 269 1 
242 2 176 1 107 1 163 1 108 1 65 1 50 1 166 2 363 1 231 1 304 1 377 1 21 1 158 1 267 1 95 2 129 1 269 1 
280 1 242 2 36 1 107 1 108 1 50 1 363 1 231 1 233 1 377 1 21 1 158 1 267 1 95 2 353 1 129 1 269 1 57 2 
163 1 166 2 50 1 231 1 363 2 232 1 129 2 57 2 280 1 242 4 36 1 176 1 107 1 65 1 108 2 377 2 21 1 158 1 267 1 95 2 353 1 269 1 
163 1 166 2 50 1 363 2 232 1 129 2 57 2 280 1 242 4 36 1 176 1 107 1 65 1 108 2 377 2 21 1 158 1 267 1 95 2 353 1 269 1 
226 1 357 1 25 1 299 1 205 1 228 1 166 1 50 1 364 1 52 1 81 1 5 1 335 1 338 1 175 1 57 1 341 1 242 2 107 1 89 1 68 1 21 1 158 1 267 1 118 1 95 2 324 1 269 1 
226 1 357 1 25 1 205 1 228 1 166 1 50 1 364 1 81 1 5 1 214 1 335 1 175 1 57 1 105 1 341 1 242 2 107 1 89 1 68 1 91 1 21 1 158 1 267 1 118 1 95 2 324 1 269 1 
43 1 163 1 166 2 50 1 363 2 232 1 129 2 57 2 280 1 242 4 36 1 176 1 107 1 65 1 108 2 377 2 21 1 158 1 267 1 95 2 353 1 269 1 
357 1 0 1 25 1 299 1 205 1 163 1 97 1 166 2 50 1 363 2 364 1 232 1 52 1 81 1 335 1 57 2 129 2 338 1 175 1 280 1 341 1 36 1 242 4 176 1 107 1 108 2 65 1 68 1 377 2 21 1 158 1 267 1 118 1 95 2 353 1 324 1 269 1 
96 1 43 1 207 1 163 1 50 1 166 2 363 1 232 1 335 1 57 1 175 1 129 1 36 1 242 3 373 1 176 1 107 1 65 1 108 1 377 1 179 1 140 1 21 1 158 1 267 1 95 2 353 1 269 1 141 1 
123 2 360 2 46 2 163 3 2 1 50 2 166 9 363 6 253 1 232 3 146 1 53 1 213 1 83 1 12 1 57 10 280 3 242 19 36 3 106 1 176 3 196 1 65 3 347 1 21 2 158 2 267 2 95 4 353 3 354 1 
123 4 360 1 46 2 2 1 50 1 166 8 232 1 53 2 235 1 213 1 83 1 12 1 57 8 36 1 242 16 176 1 196 2 65 1 347 2 21 1 181 1 158 1 267 1 95 2 353 1 354 2 
123 4 360 1 46 4 163 2 2 1 50 2 166 11 363 3 232 2 146 1 53 2 235 1 82 1 213 1 83 1 12 1 57 12 280 1 242 23 36 2 106 1 176 2 196 1 65 2 347 3 181 1 21 2 158 2 267 2 95 4 353 2 354 3 
123 4 360 1 46 4 163 2 2 1 50 2 166 11 363 4 232 2 146 1 53 2 235 1 82 1 213 1 83 1 12 1 57 12 280 2 242 23 36 2 106 1 176 2 196 1 65 2 347 3 181 1 21 2 158 2 267 2 95 4 353 2 354 3 
123 4 360 1 46 4 163 5 2 1 50 1 166 27 363 13 232 5 100 3 146 2 53 1 235 1 54 3 80 3 213 1 83 1 56 2 12 1 57 24 280 8 242 51 36 5 176 8 285 3 196 1 65 5 347 4 181 1 21 1 116 3 158 1 267 1 323 3 95 2 353 8 354 2 
88 1 358 1 139 1 168 1 147 1 221 1 148 1 188 1 23 1 215 1 
246 1 309 1 
88 1 168 1 147 1 60 1 221 1 148 1 30 1 215 1 288 1 
88 1 358 1 203 1 16 1 250 1 73 1 188 1 139 1 147 1 168 1 148 1 221 1 55 1 84 1 104 2 215 1 310 1 86 1 
88 1 358 1 203 1 16 1 250 1 73 1 188 1 139 1 147 1 168 1 148 1 221 1 55 1 84 1 104 2 215 1 310 1 86 1 
88 1 358 1 203 1 16 1 250 1 73 1 188 1 139 1 147 1 168 1 148 1 221 1 55 1 84 1 104 2 215 1 310 1 86 1 
115 1 170 1 296 1 
115 1 170 1 296 1 
361 1 94 1 
115 1 361 1 94 1 
318 1 90 1 
226 1 96 2 250 1 73 1 207 2 330 1 167 1 168 1 147 1 148 1 335 2 55 1 104 1 309 1 215 1 175 2 88 1 16 1 373 2 177 1 197 1 90 1 246 1 221 1 318 1 223 1 69 1 
170 1 296 1 
115 1 361 1 94 1 
357 1 96 2 25 2 205 2 43 1 162 1 50 1 166 1 364 1 332 1 5 1 335 2 151 1 175 2 57 1 341 1 242 2 195 2 107 1 63 1 64 1 375 1 89 1 21 1 158 1 267 1 118 1 95 2 324 2 269 1 271 1 
357 1 25 2 325 2 144 1 205 2 329 1 362 1 109 1 97 1 137 1 29 1 364 1 290 1 149 1 180 1 334 1 324 2 295 1 224 1 
357 1 121 1 25 1 325 2 144 1 205 1 329 1 362 1 137 1 29 1 364 1 290 1 149 1 180 1 334 1 324 1 295 1 
357 1 341 1 25 1 160 1 144 1 205 1 228 1 344 1 109 1 27 1 364 1 31 1 118 1 324 1 
357 1 25 1 325 2 144 1 205 1 329 1 362 1 109 1 137 1 29 1 364 1 290 1 149 1 180 1 334 1 324 1 295 1 224 1 
313 1 
301 1 251 1 6 1 84 1 76 1 345 1 70 1 
192 1 356 1 16 1 301 1 261 1 76 1 101 1 234 1 255 1 172 1 8 1 150 1 55 1 32 1 84 2 70 1 272 1 
228 1 229 2 97 1 230 2 232 2 101 3 234 4 150 4 8 5 55 5 191 6 239 2 240 6 192 4 341 10 16 5 65 2 287 1 345 1 66 1 346 2 155 2 118 3 353 2 355 1 70 2 357 4 25 3 300 2 301 9 205 3 251 1 303 2 74 2 76 8 124 3 364 3 210 2 366 1 126 1 212 1 172 12 81 3 257 2 32 4 84 8 36 2 261 6 176 2 315 1 265 2 317 2 319 2 324 3 
96 1 301 2 207 1 229 1 46 1 76 2 366 1 254 1 235 1 234 1 172 2 7 1 335 1 150 1 257 1 32 1 84 2 191 2 175 1 240 2 192 1 340 1 373 1 261 1 263 1 346 1 347 1 179 1 322 1 249 1 354 1 70 1 
96 1 301 2 252 1 207 1 229 2 76 2 254 1 234 1 7 1 335 1 150 1 32 1 55 1 175 1 192 1 340 1 16 1 176 2 373 1 285 1 346 1 376 1 179 1 322 1 116 1 249 1 323 1 353 1 
192 1 301 1 251 1 345 1 76 1 234 1 150 1 32 1 84 1 70 1 
36 2 176 2 261 5 301 5 229 2 65 2 76 5 346 1 232 2 319 1 172 10 84 5 191 5 353 2 240 5 
101 1 16 1 8 1 55 1 84 1 70 1 
357 1 25 4 205 4 301 2 228 2 27 1 76 2 165 1 364 1 366 2 3 1 101 2 234 1 150 2 8 4 32 2 257 2 55 3 153 1 192 2 341 1 16 3 344 1 245 1 287 2 118 1 270 1 355 1 324 4 
226 1 96 2 357 1 25 1 299 1 205 1 228 1 207 2 50 1 364 1 52 1 5 1 81 1 335 3 57 1 175 3 338 1 340 1 341 1 242 1 373 2 107 1 68 1 179 2 21 1 158 1 267 1 95 2 118 1 324 1 269 1 41 1 
192 1 261 2 301 1 76 2 366 1 234 1 54 1 172 4 150 1 32 1 257 1 84 4 191 2 70 2 240 2 
221 1 10 1 215 1 
358 1 219 1 318 1 221 1 215 1 
221 1 10 1 215 1 
221 1 10 1 215 1 
221 1 215 1 264 1 
221 1 215 1 264 1 
221 1 215 1 264 1 
221 1 215 1 
88 1 168 1 
280 2 242 8 176 1 285 1 163 1 166 4 50 2 363 3 367 1 100 1 54 1 80 1 21 2 158 2 116 1 267 2 323 1 95 4 353 1 57 4 
280 2 242 6 176 1 285 1 166 3 363 2 100 1 54 1 80 1 6 1 116 1 323 1 353 1 57 3 
280 1 36 1 242 4 176 1 187 1 65 1 163 1 50 1 166 2 363 2 232 1 21 1 158 1 267 1 95 2 353 1 57 2 
280 1 36 1 242 7 176 1 46 2 65 1 163 1 166 3 363 2 347 1 232 1 146 1 353 1 354 1 57 4 
326 1 163 4 46 2 166 11 50 2 363 9 232 2 367 2 100 1 146 1 211 1 54 1 80 1 56 1 57 12 280 5 242 23 36 2 176 3 285 2 65 2 347 2 21 2 116 2 158 2 267 2 323 1 95 4 353 3 
242 1 46 1 57 1 
242 1 166 1 347 1 
280 2 242 6 36 1 176 1 187 1 65 1 163 1 50 1 166 3 363 3 232 1 319 1 21 1 158 1 267 1 95 2 353 1 57 3 
242 2 46 1 166 1 50 1 347 1 235 1 21 1 158 1 12 1 267 1 95 2 354 1 57 1 
280 1 242 6 176 1 285 1 163 1 166 3 363 2 116 1 323 1 353 1 57 3 
280 1 242 3 285 1 163 1 166 1 50 1 363 2 367 1 100 1 211 1 80 1 21 1 116 1 158 1 267 1 95 2 57 2 
280 3 242 10 176 2 285 2 252 1 163 2 50 1 166 5 363 5 21 1 158 1 116 2 267 1 12 1 95 2 323 1 353 2 57 5 
242 2 176 1 65 1 163 1 50 1 166 2 363 1 21 1 158 1 12 1 267 1 95 2 
280 1 36 1 242 4 176 1 65 1 163 1 50 1 166 2 363 2 232 1 21 1 158 1 12 1 267 1 95 2 353 1 57 2 
280 1 242 3 106 1 285 1 163 1 50 3 166 1 363 2 367 1 211 1 21 3 158 3 116 1 12 1 267 3 95 6 57 2 
227 1 206 1 187 1 46 4 163 5 50 5 166 16 363 12 232 3 367 2 100 1 211 1 146 1 54 1 80 1 12 1 57 18 280 7 242 34 36 3 106 1 176 5 285 3 65 3 347 3 114 1 21 5 116 3 158 5 267 5 323 2 95 10 353 5 354 1 
42 1 252 1 163 4 46 1 50 2 166 14 363 9 232 2 367 1 100 1 235 1 54 1 80 1 12 1 128 1 57 10 280 5 242 24 36 1 37 1 176 5 285 2 65 2 347 1 21 2 116 2 158 2 22 1 267 2 323 2 95 4 353 4 354 1 
42 1 187 1 46 2 163 2 50 3 166 12 363 5 232 3 367 1 100 1 146 1 235 1 54 1 80 1 12 1 128 1 57 8 280 3 242 20 36 1 37 1 176 4 285 1 65 3 347 1 21 3 116 1 158 3 22 1 267 3 323 1 95 6 353 2 354 1 
187 1 252 1 163 1 46 1 50 2 166 8 363 4 100 1 235 1 54 1 80 1 12 1 57 7 280 3 242 15 176 3 285 2 347 1 21 2 158 2 116 2 267 2 323 2 95 4 353 3 354 1 
187 1 252 1 163 3 46 1 50 2 166 8 363 7 100 1 235 1 54 1 80 1 12 1 57 7 280 4 242 15 176 3 285 2 347 1 21 2 158 2 116 2 267 2 323 2 95 4 353 3 354 1 
42 1 252 1 163 4 46 1 50 2 166 14 363 9 232 2 367 1 100 1 235 1 54 1 80 1 12 1 128 1 57 10 280 5 242 24 36 1 37 1 176 5 285 2 65 2 347 1 21 2 116 2 158 2 22 1 267 2 323 2 95 4 353 4 354 1 
242 2 46 1 166 1 50 1 347 1 235 1 21 1 158 1 12 1 267 1 95 2 354 1 57 1 
242 2 187 1 46 1 166 1 50 2 347 1 235 1 21 2 158 2 12 1 267 2 95 4 354 1 57 1 
242 2 106 1 46 1 166 1 50 2 347 1 235 1 21 2 158 2 267 2 12 1 95 4 354 1 57 1 
280 3 242 7 176 1 285 3 163 3 166 3 363 6 100 2 80 1 116 3 323 1 353 1 57 4 
242 2 106 1 46 1 166 1 50 2 347 1 235 1 21 2 158 2 267 2 12 1 95 4 354 1 57 1 
226 1 96 1 348 1 335 1 62 1 236 1 175 1 
226 1 96 1 193 1 260 1 62 1 289 1 348 1 247 1 368 1 335 1 236 1 175 1 
357 1 341 1 25 1 205 1 6 1 228 1 344 1 27 1 118 1 364 1 324 1 
226 1 357 1 96 1 341 1 122 1 25 1 373 1 205 1 228 1 207 1 364 1 68 1 81 1 335 2 118 1 175 2 324 1 338 1 
226 1 96 2 357 1 122 1 25 1 205 1 207 2 303 1 74 1 364 1 369 1 81 2 335 2 7 1 238 1 338 1 175 2 341 3 373 1 287 1 68 1 118 2 324 1 
226 1 96 2 357 1 122 1 25 2 205 2 207 2 303 1 74 1 98 1 364 1 369 1 81 2 335 2 7 1 238 1 175 2 105 1 341 3 373 1 287 1 68 1 118 2 324 2 
357 1 25 3 205 3 228 1 303 1 74 1 98 1 124 1 364 1 210 1 81 1 8 1 55 2 173 1 84 1 239 1 341 4 16 2 287 1 154 1 118 1 324 3 70 1 
357 1 341 4 25 3 16 2 300 1 205 3 228 1 74 1 303 1 98 1 287 1 124 1 210 1 364 1 81 1 8 1 55 2 84 1 118 1 324 3 70 1 239 1 
357 1 25 1 205 1 364 1 324 1 111 1 
120 1 357 3 311 1 341 3 25 6 195 1 205 7 133 1 228 2 262 1 162 1 97 1 66 1 125 1 364 2 111 1 199 1 149 1 81 1 118 2 324 7 
96 1 226 2 0 1 43 1 97 1 50 2 100 1 52 1 54 1 335 2 151 1 338 1 57 3 341 1 280 2 242 6 107 2 285 1 108 1 68 1 21 2 158 2 116 1 118 1 353 1 357 1 122 1 25 1 299 1 205 1 207 1 166 3 364 1 363 2 80 1 81 1 129 1 175 2 373 1 176 1 220 1 377 1 267 2 95 4 323 1 324 1 269 2 
25 1 300 1 301 1 205 1 251 1 228 1 76 1 124 1 210 1 101 1 234 2 150 2 8 2 32 2 55 3 84 1 239 1 192 2 341 2 16 3 177 1 345 1 265 1 155 1 317 1 324 1 355 1 70 1 
357 2 341 2 25 2 205 2 97 1 66 1 210 1 364 1 111 1 126 1 81 1 118 1 324 2 
185 1 357 1 341 1 25 4 205 4 228 1 344 1 97 1 27 1 98 1 364 1 118 1 324 4 
357 2 341 1 25 2 205 2 262 1 1 1 287 1 125 1 364 1 81 1 182 1 118 1 337 1 324 2 
290 1 357 1 25 1 325 1 180 1 205 1 228 1 137 1 364 1 324 1 
357 1 341 1 25 2 205 2 162 1 64 1 97 1 364 1 149 1 118 1 324 2 
185 1 357 2 341 3 25 4 205 5 133 1 228 1 344 1 162 1 27 1 97 1 287 1 364 2 199 1 118 2 324 5 
185 1 357 2 341 3 25 4 205 5 133 1 228 1 344 1 162 1 27 1 97 1 287 1 67 1 364 2 118 2 324 5 
226 1 357 1 96 1 341 1 122 1 25 1 373 1 205 1 228 1 207 1 364 1 68 1 81 1 335 2 118 1 175 2 324 1 105 1 
357 2 311 1 341 1 25 1 205 1 262 1 287 1 66 1 125 1 364 1 81 1 118 1 324 1 
226 1 359 1 15 1 222 1 380 1 
226 1 15 1 359 2 16 2 132 1 374 1 177 1 208 1 369 1 222 2 7 1 201 1 55 2 84 1 238 1 70 1 239 1 202 1 380 2 
96 1 15 1 359 1 222 1 335 1 63 1 375 1 175 1 271 1 
359 1 15 1 369 1 132 1 222 1 374 1 7 1 201 1 208 1 238 1 239 1 380 1 
343 1 6 1 138 1 164 1 
343 1 328 1 278 1 39 1 138 1 164 1 218 1 
194 1 328 1 136 1 
343 1 372 1 328 3 134 2 138 1 164 1 277 1 79 1 103 1 278 1 39 3 218 1 
343 1 186 1 328 2 278 1 39 2 286 1 138 1 164 1 218 1 
290 1 143 1 243 1 325 1 372 1 328 1 278 1 39 1 138 1 218 1 295 1 
343 1 372 1 328 1 278 1 39 1 138 1 218 1 
343 2 372 1 328 1 278 1 39 1 164 1 218 1 
343 1 372 1 328 2 138 1 320 1 278 2 39 2 218 2 273 1 24 1 
143 1 343 1 282 1 186 2 372 1 328 3 47 1 164 1 138 2 278 1 39 3 218 1 225 1 
343 1 325 2 186 1 372 1 328 2 72 1 138 1 164 1 137 1 290 1 278 1 39 2 334 1 218 1 295 1 
143 1 343 1 186 2 372 1 328 4 286 1 164 1 138 2 278 2 39 4 218 2 119 1 225 1 
343 1 372 1 328 1 278 1 39 1 138 1 164 1 218 1 
143 1 343 2 186 2 328 4 134 1 164 2 138 3 277 1 79 1 278 1 39 4 218 1 130 1 225 1 
343 1 186 1 372 1 328 2 45 1 138 1 164 1 99 1 278 1 39 2 218 1 35 1 
343 1 372 1 328 3 134 2 138 1 164 1 277 1 79 2 278 1 39 3 33 1 218 1 
342 2 113 1 204 1 138 2 
372 1 328 1 278 1 39 1 78 1 218 1 
343 1 186 1 372 1 328 2 278 1 39 2 47 1 138 1 164 1 218 1 
291 1 
343 1 372 1 328 1 278 1 39 1 138 1 164 1 218 1 
343 1 186 1 372 1 328 3 278 1 39 3 134 1 47 1 138 1 164 1 218 1 
143 1 138 1 130 1 225 1 
343 1 138 1 

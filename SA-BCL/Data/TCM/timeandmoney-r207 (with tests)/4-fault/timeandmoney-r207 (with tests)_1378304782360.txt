#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (78,299) 284 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (78,299) 284 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 291 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
136 1 137 2 113 1 330 1 356 2 222 1 273 1 144 1 51 5 11 1 203 2 204 6 228 1 299 1 123 9 344 1 285 1 78 1 35 2 127 1 348 3 235 1 15 9 328 1 109 4 168 2 110 2 268 2 
136 1 137 2 113 1 330 1 356 2 222 1 273 1 144 1 51 5 11 1 203 2 204 6 228 1 299 1 123 9 344 1 285 1 78 1 35 2 127 1 348 3 235 1 15 9 328 1 109 4 168 2 268 2 110 2 
136 1 137 2 113 1 330 1 356 2 222 1 273 1 144 1 51 6 11 1 203 2 204 7 228 1 299 1 123 10 344 1 285 1 78 1 35 2 127 1 348 4 235 1 15 10 328 1 109 5 168 2 268 2 110 2 
136 1 137 2 113 1 330 1 356 2 222 1 273 1 144 1 51 4 11 1 203 2 204 4 228 1 299 1 123 7 285 1 78 1 35 2 127 1 348 2 235 1 15 7 328 1 109 3 168 2 268 2 110 1 
123 4 113 1 137 1 344 1 330 1 35 1 127 1 348 1 235 1 15 4 51 3 11 1 203 1 109 2 168 1 204 3 268 1 110 2 
30 1 123 2 113 1 137 1 136 1 330 1 356 1 127 1 144 1 15 2 361 1 51 1 203 1 52 1 168 1 268 1 
123 3 113 1 137 2 330 1 78 1 356 1 127 1 348 1 15 3 51 2 203 2 109 1 204 1 
123 1 137 1 113 1 284 1 15 1 78 1 203 1 22 1 
123 1 137 1 113 1 284 1 15 1 78 1 203 1 22 1 
25 1 46 1 311 1 
311 1 302 2 320 1 
323 1 138 2 36 2 248 2 294 2 210 2 226 2 55 1 
112 1 306 1 114 1 138 2 88 1 47 1 248 2 294 3 117 1 6 2 95 1 7 1 277 1 360 1 70 1 199 1 226 2 201 1 253 1 13 1 365 1 121 1 283 1 341 1 345 2 76 1 36 3 210 2 55 1 82 2 323 1 349 1 189 2 108 1 242 1 267 2 44 1 
323 1 182 1 98 1 138 1 36 1 248 1 294 1 210 1 226 1 305 1 
182 1 46 1 36 1 294 1 157 1 370 1 145 1 176 1 17 1 311 1 251 1 226 1 27 1 72 1 
138 1 182 1 46 1 248 1 36 1 210 1 294 1 157 2 145 1 17 1 311 1 251 1 27 2 226 1 72 1 
335 1 9 1 157 1 27 1 178 1 
290 1 46 1 311 1 9 1 157 2 10 1 27 2 178 1 
9 1 157 1 27 1 
182 1 138 1 248 1 36 1 157 1 210 1 294 1 323 1 98 1 27 1 226 1 178 1 364 1 305 1 
311 1 
290 1 46 1 311 1 9 1 157 2 249 1 27 2 178 1 
34 1 46 1 317 1 157 5 319 1 250 1 141 1 105 1 14 1 296 2 290 1 237 2 311 1 9 2 27 5 282 2 205 1 178 2 366 1 
25 1 55 1 
138 1 36 2 248 1 294 2 210 1 318 1 55 2 226 2 313 1 
321 1 247 1 243 1 
112 1 306 1 139 1 345 1 88 1 36 1 294 1 55 1 6 1 95 1 277 1 199 1 108 1 267 1 44 1 341 1 
0 1 65 1 171 2 138 4 36 5 248 1 210 4 294 5 368 1 55 1 370 1 375 1 226 5 313 1 
182 1 98 1 138 2 36 2 294 2 210 2 126 1 226 2 
171 1 112 1 247 1 306 1 138 1 345 1 88 1 36 2 368 1 210 1 294 2 6 1 95 1 277 1 199 1 108 1 226 1 267 1 44 1 341 1 
171 1 138 3 248 1 36 3 294 3 210 3 226 3 55 1 
182 1 98 1 138 1 36 1 294 1 210 1 226 1 
182 1 138 1 36 1 248 1 294 1 210 1 318 1 226 1 313 1 
171 1 112 1 306 1 114 1 138 3 88 1 192 1 47 1 248 2 294 4 117 1 6 1 95 1 145 1 277 1 70 1 199 1 251 1 226 3 27 1 72 1 253 1 313 1 13 1 365 1 121 1 283 1 341 1 182 1 345 1 76 1 36 4 210 3 368 1 157 1 55 1 82 1 323 1 17 1 189 2 108 1 267 1 44 1 111 1 
0 1 171 1 138 1 36 2 294 2 210 1 226 2 55 1 370 1 
171 2 182 1 138 3 248 1 36 3 157 1 368 1 210 3 294 3 145 1 17 1 311 1 251 1 27 1 226 3 72 1 313 1 99 1 111 1 
171 1 247 1 138 2 36 2 248 1 294 2 210 2 226 2 313 1 243 1 
112 1 306 1 345 1 88 1 36 1 294 1 55 1 6 1 95 1 277 1 199 1 108 1 267 1 44 1 341 1 
112 1 306 1 345 1 88 1 36 1 294 1 55 1 6 1 95 1 277 1 108 1 352 1 217 1 267 1 341 1 
247 2 114 2 19 1 47 1 117 1 94 1 173 1 334 1 198 1 360 2 70 1 50 1 13 1 365 1 283 1 261 1 103 1 82 4 234 1 321 2 326 1 189 2 243 2 244 1 
182 1 138 1 17 1 36 1 294 1 210 1 226 1 126 1 
278 1 147 1 
278 1 147 1 
307 1 149 1 
307 1 149 1 
307 1 149 1 
1 1 278 1 147 1 
278 1 147 1 71 1 
307 1 278 2 147 2 149 1 134 1 68 1 
1 1 278 1 147 1 
1 1 278 1 147 1 
278 1 147 1 312 1 
278 1 147 1 312 1 
278 1 147 1 312 1 
74 1 3 1 138 2 230 1 346 1 36 2 294 2 157 1 210 2 55 1 287 1 81 1 49 1 174 1 58 1 167 1 278 1 214 1 327 1 147 1 226 2 27 1 71 1 265 1 
74 1 315 1 230 2 346 2 157 2 220 2 287 3 68 1 289 1 174 2 58 2 297 1 278 2 373 1 147 2 311 1 27 2 169 1 207 1 
35 1 168 1 268 1 
168 1 52 1 268 1 
175 1 264 1 35 2 239 1 168 3 52 1 
175 1 35 1 239 1 168 2 52 1 184 1 
175 1 35 1 239 2 168 2 52 1 
3 1 46 1 221 2 173 1 67 1 198 1 296 1 50 1 9 1 311 2 27 5 282 1 254 1 178 4 179 1 205 3 314 2 157 5 367 1 319 1 288 1 302 3 320 1 105 2 57 2 186 1 290 1 167 1 237 1 238 1 327 1 244 1 
3 4 66 1 270 1 46 1 221 6 173 3 198 3 335 5 296 2 69 1 50 3 9 6 311 5 27 9 282 2 254 3 178 7 205 8 366 1 75 1 300 1 157 9 367 2 319 1 161 1 302 9 320 3 105 6 57 6 186 2 290 1 238 1 237 2 84 5 244 3 
3 1 46 1 221 2 173 1 67 1 198 1 296 1 50 1 311 3 27 3 282 1 178 2 179 1 205 3 254 1 366 1 314 1 157 3 367 1 302 4 320 2 105 2 57 2 186 1 237 1 244 1 
3 2 270 1 46 1 221 4 173 2 67 1 198 2 296 1 69 1 50 2 311 4 27 4 282 1 179 1 205 5 178 3 254 2 366 1 75 1 314 2 157 4 367 1 302 7 320 3 105 4 57 4 186 1 237 1 244 2 
213 1 25 1 341 1 
190 1 341 1 
343 1 
108 1 95 1 341 1 
272 1 341 1 
95 1 341 1 
213 2 231 1 108 1 163 1 95 1 341 3 
114 3 19 3 20 1 357 1 162 1 173 1 103 2 82 7 324 1 97 1 360 4 50 1 26 1 83 1 148 1 85 1 353 2 
114 3 19 3 20 1 357 1 162 1 173 1 103 2 82 7 324 1 97 1 360 4 50 1 26 1 83 1 148 1 85 1 353 2 
114 3 19 3 20 1 331 1 357 1 162 1 173 1 103 2 82 7 324 1 97 1 360 4 50 1 26 1 83 1 148 1 85 1 353 2 
219 3 114 15 19 10 47 1 20 2 357 1 173 4 198 3 97 1 70 1 360 16 8 1 26 2 50 4 148 1 362 1 12 1 13 1 254 3 283 1 258 1 162 2 369 1 103 5 82 31 303 4 324 5 83 1 189 2 132 1 85 2 353 3 244 3 64 1 
114 4 19 4 47 2 20 1 357 1 93 1 173 1 97 1 70 2 360 5 8 1 50 1 26 1 148 1 13 2 206 1 283 2 162 1 103 3 82 9 324 1 189 4 85 1 353 2 
112 1 137 1 113 1 88 1 330 1 356 1 48 1 6 1 295 1 225 1 51 1 203 1 204 1 52 1 53 1 123 2 345 1 77 1 347 1 35 1 127 1 371 1 165 1 15 2 107 1 264 1 133 1 267 1 168 2 268 1 
112 1 137 1 88 1 330 1 356 1 89 1 48 1 6 1 295 1 225 1 51 1 203 1 204 2 52 1 123 3 345 1 77 1 347 1 35 1 127 1 128 1 371 1 165 1 372 1 15 3 107 1 264 1 267 1 168 2 268 1 
112 1 88 1 330 1 356 1 89 1 48 1 6 1 225 1 51 1 204 2 52 1 123 2 345 1 77 1 347 1 35 1 127 1 165 1 372 1 15 2 107 1 264 1 267 1 168 2 268 1 
112 1 87 1 137 1 88 1 356 2 48 2 6 1 95 1 277 1 203 1 342 1 255 1 341 1 123 1 101 1 345 1 77 2 158 1 128 1 165 2 15 1 43 1 267 1 
112 1 123 1 113 1 137 1 345 1 88 1 347 1 77 1 35 1 356 1 48 1 6 1 371 1 295 1 165 1 225 1 372 1 107 1 15 1 264 1 203 1 168 2 52 1 267 1 53 1 268 1 
301 1 
135 1 293 1 88 1 46 1 4 1 294 1 6 2 96 2 95 1 145 1 296 1 9 6 251 1 205 2 150 1 255 1 341 1 256 2 345 2 157 5 211 1 302 2 105 2 106 1 17 1 267 2 355 2 112 1 223 1 276 1 277 2 176 1 311 2 27 5 226 1 29 2 282 1 72 1 180 1 182 1 36 1 319 1 320 2 370 1 38 4 185 1 186 1 39 2 290 3 237 1 240 1 42 1 376 2 43 1 377 2 
182 1 293 1 4 1 36 1 157 3 294 1 249 1 38 2 145 1 223 1 370 1 276 1 290 1 17 1 176 1 9 2 251 1 27 3 226 1 42 1 376 1 72 1 
293 1 46 1 4 1 294 1 249 1 223 1 145 1 276 1 176 1 9 1 251 1 311 1 226 1 27 3 29 1 72 1 182 1 36 1 157 3 370 1 38 3 290 1 17 1 42 1 
256 1 182 1 293 1 46 1 4 1 36 1 157 3 294 1 249 1 38 3 145 1 223 1 370 1 276 1 290 1 17 1 176 1 311 1 9 2 251 1 27 3 226 1 29 1 42 1 376 1 72 1 
355 2 293 1 115 1 46 5 4 1 294 1 249 1 140 1 96 2 223 1 145 1 276 1 296 1 176 1 311 5 9 7 251 1 226 1 27 5 282 1 29 4 72 1 205 1 182 1 256 4 36 1 157 5 319 1 320 2 105 1 370 1 38 6 106 1 39 2 290 3 237 1 130 1 17 1 240 1 60 1 42 1 266 1 376 4 377 2 
355 2 293 1 46 1 4 1 294 1 96 2 223 1 145 1 276 1 296 1 176 1 311 2 9 4 251 1 27 4 226 1 29 2 282 1 72 1 205 1 180 1 256 2 182 1 36 1 157 4 319 1 302 2 320 2 105 1 370 1 38 4 106 1 39 2 290 2 237 1 17 1 240 1 42 1 376 2 377 2 
355 2 293 1 46 1 115 1 4 1 294 1 96 2 223 1 145 1 276 1 296 1 176 1 311 1 9 4 251 1 226 1 27 4 29 2 282 1 72 1 205 1 256 2 182 1 36 1 157 4 319 1 320 2 105 1 370 1 38 4 106 1 39 2 290 2 237 1 130 1 17 1 240 1 42 1 376 2 266 1 377 2 
355 2 293 1 46 1 115 1 4 1 294 1 96 2 223 1 145 1 276 1 296 1 176 1 311 1 9 4 251 1 226 1 27 4 29 2 282 1 72 1 205 1 256 2 182 1 36 1 157 4 319 1 320 2 105 1 370 1 38 4 106 1 39 2 290 2 237 1 130 1 17 1 240 1 42 1 376 2 266 1 377 2 
182 1 293 1 4 1 36 1 157 2 294 1 38 2 145 1 223 1 370 1 276 1 291 1 17 1 176 1 251 1 27 2 226 1 42 1 72 1 
355 2 293 1 46 1 115 1 4 1 294 1 96 2 223 1 145 1 276 1 296 1 176 1 311 1 251 1 9 5 226 1 27 4 282 1 29 3 72 1 205 1 182 1 256 3 36 1 157 4 319 1 320 2 105 1 370 1 38 5 106 1 39 2 290 2 237 1 130 1 17 1 240 1 60 1 42 1 376 3 266 1 377 2 
355 2 293 1 46 1 115 1 4 1 294 1 96 2 223 1 145 1 276 1 296 1 176 1 311 1 251 1 9 5 226 1 27 4 282 1 29 3 72 1 205 1 182 1 256 3 36 1 157 4 319 1 320 2 105 1 370 1 38 5 106 1 39 2 290 2 237 1 130 1 17 1 240 1 60 1 42 1 376 3 266 1 377 2 
269 1 293 1 4 1 294 1 96 1 223 1 145 1 276 1 296 1 176 1 9 1 251 1 27 3 226 1 282 1 72 1 205 1 180 1 182 1 36 1 157 3 319 1 302 1 105 1 370 1 38 2 39 1 236 1 290 1 237 1 17 1 240 1 42 1 63 1 
247 1 114 3 19 2 47 1 20 1 357 1 117 1 173 1 97 1 25 1 70 1 360 3 50 1 148 1 13 1 365 1 283 1 55 2 162 1 103 2 82 6 321 1 326 1 189 2 243 1 353 1 
219 3 247 11 114 6 19 2 47 2 117 2 173 1 23 1 7 1 198 2 70 2 360 8 50 2 362 1 253 1 13 2 365 1 254 2 283 2 154 1 316 1 37 1 55 1 232 1 369 1 103 1 82 14 303 3 321 11 324 1 189 4 243 4 244 1 
171 1 112 1 306 1 139 1 138 1 114 1 88 1 47 1 294 2 90 1 117 1 6 1 95 1 23 1 358 1 7 1 277 1 199 1 70 1 360 1 226 1 253 1 13 1 365 1 341 1 283 1 345 1 36 2 210 1 368 1 55 1 82 2 189 2 108 1 267 1 243 1 44 1 329 1 
247 7 138 1 88 2 47 3 294 3 6 3 95 2 7 1 198 2 97 1 199 2 50 3 148 1 252 2 253 1 13 3 254 2 340 2 341 2 345 3 210 1 55 2 162 1 103 4 216 1 108 2 61 1 353 1 267 3 18 1 171 1 112 2 306 2 114 10 19 8 20 1 357 1 117 3 173 3 23 1 277 1 70 3 360 10 281 2 226 1 365 3 283 3 76 2 36 3 368 1 233 2 82 20 321 7 324 4 372 1 189 6 243 7 244 2 44 2 
171 1 112 2 138 1 114 1 88 2 47 2 294 1 117 2 6 7 118 1 95 2 24 1 7 1 277 2 70 2 309 1 360 1 226 1 28 1 201 2 253 1 13 2 365 2 151 1 341 3 283 2 255 1 345 8 36 1 79 1 210 1 82 2 372 1 326 1 189 4 43 1 62 1 133 1 267 8 
247 1 138 1 114 2 19 1 248 1 47 1 294 1 117 1 173 1 23 1 198 1 70 1 360 1 50 1 226 1 313 1 13 1 365 1 254 1 283 1 36 1 210 1 103 1 82 3 321 1 351 1 189 2 243 1 244 1 
247 1 19 1 47 1 117 1 82 2 234 1 321 1 198 1 324 1 326 1 70 1 360 2 50 1 189 2 243 1 365 1 13 1 283 1 
247 1 114 2 19 1 47 1 117 1 261 1 103 1 173 1 82 2 321 1 326 1 70 1 189 2 243 1 365 1 13 1 244 1 283 1 
247 2 114 2 19 2 47 1 117 1 103 1 173 1 82 4 321 2 198 1 324 1 326 1 70 1 360 2 50 1 189 2 243 2 365 1 13 1 254 1 244 1 283 1 
247 1 19 1 47 1 117 1 82 2 234 1 321 1 198 1 324 1 309 1 70 1 360 2 50 1 189 2 243 1 365 1 13 1 283 1 
247 1 114 2 19 1 47 1 117 1 261 1 103 1 173 1 82 2 321 1 309 1 70 1 189 2 243 1 365 1 13 1 244 1 283 1 
247 2 114 2 19 2 47 1 117 1 103 1 173 1 82 4 321 2 198 1 324 1 309 1 70 1 360 2 50 1 189 2 243 2 365 1 13 1 254 1 244 1 283 1 
247 2 114 2 19 2 47 1 117 1 103 1 173 1 82 4 321 2 198 1 324 1 70 1 360 2 50 1 189 2 243 2 365 1 13 1 254 1 244 1 283 1 
112 1 306 1 114 1 88 1 47 1 294 1 117 1 6 1 95 1 7 1 277 1 360 1 199 1 70 1 253 1 365 1 13 1 341 1 283 1 345 1 76 1 36 1 55 1 82 2 189 2 108 1 267 1 44 1 
112 1 306 1 114 1 88 1 47 1 294 1 117 1 6 1 95 1 7 1 277 1 360 1 70 1 253 1 365 1 13 1 339 1 341 1 283 1 345 1 36 1 55 1 82 2 189 2 108 1 352 1 217 1 267 1 
247 2 114 2 19 2 47 1 117 1 103 1 173 1 82 4 23 1 321 2 198 1 324 1 70 1 360 2 50 1 189 2 243 2 365 1 13 1 254 1 244 1 283 1 
112 1 247 2 306 1 114 2 88 1 19 2 47 1 294 1 117 1 6 1 173 1 95 1 198 1 360 2 199 1 70 1 50 1 365 1 13 1 254 1 340 1 341 1 283 1 345 1 76 1 36 1 103 1 82 4 321 2 324 1 189 2 108 1 133 1 243 2 267 1 244 1 44 1 
247 1 114 1 138 1 19 1 248 1 47 1 294 1 117 1 173 1 23 1 198 1 70 1 359 1 360 2 50 1 226 1 313 1 13 1 365 1 254 1 283 1 36 1 210 1 82 3 321 1 324 1 189 2 243 1 244 1 
219 1 114 10 19 6 47 2 21 1 116 1 173 3 336 2 198 3 70 2 360 9 50 3 310 1 362 1 13 2 254 3 206 1 283 2 125 1 164 2 103 3 369 1 82 19 303 2 324 3 16 1 41 1 59 1 189 4 244 3 
219 2 114 10 19 2 47 2 21 1 116 1 173 2 336 3 198 3 8 1 279 1 70 2 360 13 200 1 50 3 310 2 202 1 13 2 254 3 206 1 283 2 33 1 160 1 164 1 103 1 369 2 82 23 303 2 324 1 16 2 59 1 189 4 245 1 244 2 
219 3 114 16 19 5 47 2 21 1 116 1 173 4 336 3 198 4 279 1 70 2 360 15 200 1 50 4 310 1 362 1 202 1 13 2 254 4 206 1 283 2 33 1 80 1 160 1 164 1 103 2 369 3 82 31 303 4 324 3 16 2 41 1 59 1 189 4 245 1 244 4 
219 3 114 15 19 6 47 3 21 1 116 1 173 3 336 4 198 4 8 1 279 1 70 3 360 17 200 1 50 4 310 1 362 1 202 1 13 3 254 4 206 1 283 3 33 1 80 1 160 1 164 1 103 3 369 3 82 32 303 4 324 3 16 2 41 1 59 1 189 6 245 1 244 3 
219 4 114 25 19 15 47 2 20 1 357 1 21 1 116 1 173 8 336 4 198 7 97 1 8 1 279 1 70 2 360 27 200 1 50 8 148 1 310 1 362 2 202 1 13 2 254 7 206 1 283 2 33 1 154 2 160 1 162 1 164 1 103 7 369 2 82 52 303 4 324 8 16 1 59 1 189 4 353 1 245 1 244 7 
58 1 174 1 278 1 346 1 230 1 147 1 332 1 207 1 68 1 289 1 
214 1 71 1 
229 1 58 1 174 1 278 1 346 1 230 1 147 1 218 1 263 1 
1 1 304 1 
191 1 312 1 134 1 
74 1 315 1 230 1 346 1 157 1 220 1 287 2 68 1 289 1 174 1 58 1 297 1 278 1 373 1 147 1 311 1 27 1 207 1 
74 1 315 1 230 1 346 1 157 1 220 1 287 2 68 1 289 1 174 1 58 1 297 1 278 1 373 1 147 1 311 1 27 1 207 1 
74 1 315 1 230 1 346 1 157 1 220 1 287 2 68 1 289 1 174 1 58 1 297 1 278 1 373 1 147 1 311 1 27 1 207 1 
1 1 304 1 134 1 
1 1 304 1 134 1 
191 1 312 1 
191 1 312 1 134 1 
49 1 81 1 
3 1 138 2 294 2 220 1 49 1 297 1 174 1 278 1 147 1 27 1 226 2 71 1 178 1 346 1 230 1 36 2 157 1 210 2 55 1 287 1 183 1 81 1 58 1 167 1 214 1 327 1 265 1 
112 1 114 1 88 1 47 1 294 2 117 1 6 2 142 1 95 1 23 1 24 1 7 1 70 1 360 1 226 2 363 1 201 2 227 1 253 1 365 1 13 1 341 1 283 1 31 1 153 1 345 2 36 2 79 1 82 2 189 2 267 2 
112 1 345 2 88 1 77 1 347 1 35 1 159 1 6 2 143 1 371 1 372 1 107 1 264 1 374 1 133 1 168 2 52 1 267 2 268 1 
112 1 345 1 88 1 77 1 347 1 35 1 159 1 6 1 275 1 371 1 372 1 107 1 264 1 168 2 52 1 267 1 268 1 
112 1 87 1 345 1 88 1 77 1 6 1 197 1 95 1 143 1 277 1 43 1 267 1 341 1 255 1 
112 1 345 1 88 1 77 1 347 1 35 1 159 1 6 1 143 1 371 1 372 1 107 1 264 1 374 1 168 2 52 1 267 1 268 1 
322 1 
25 1 46 1 317 1 311 1 250 1 205 1 105 1 
355 1 46 1 296 1 311 2 9 1 27 1 282 1 205 1 157 1 319 1 302 1 320 1 105 1 106 1 290 1 237 1 377 1 
88 3 46 2 194 2 91 1 250 1 6 3 95 3 333 1 145 2 198 2 296 4 50 2 9 5 252 2 205 9 254 2 298 1 341 10 345 3 157 5 302 12 105 8 57 6 213 2 350 2 108 3 267 3 354 2 112 4 272 2 221 6 308 2 173 2 277 1 177 2 311 8 27 5 282 4 120 2 73 1 122 2 317 1 231 1 319 4 320 6 185 1 186 2 187 1 290 3 237 4 292 2 190 3 133 1 244 2 
219 1 221 5 173 2 198 2 296 1 279 1 200 1 50 2 311 3 282 1 205 6 254 2 33 1 319 1 160 1 302 6 369 1 320 3 105 4 57 5 303 1 237 1 292 1 245 1 244 2 
138 1 248 1 294 1 20 1 5 1 173 1 296 1 98 1 97 1 50 2 27 1 226 1 282 1 205 2 364 1 182 1 36 1 157 1 210 1 319 1 162 1 105 2 323 1 237 1 130 1 292 2 354 1 305 1 
46 1 317 1 319 1 250 1 105 1 296 1 237 1 311 1 282 1 205 1 
221 5 302 10 173 2 105 5 320 5 57 5 198 2 50 2 311 5 292 2 252 1 354 1 254 2 205 5 244 2 
290 1 46 1 311 1 157 1 9 1 27 1 
112 1 135 1 2 1 88 1 6 4 95 1 296 2 277 2 9 4 27 3 282 2 205 2 366 1 298 1 341 1 255 1 345 4 286 1 157 3 319 1 211 1 105 2 186 2 185 2 187 2 290 2 237 2 43 1 267 4 
112 1 306 1 114 1 138 2 88 1 248 2 47 1 294 3 117 1 6 1 95 1 277 1 70 1 199 1 226 2 253 1 13 1 365 1 121 1 283 1 341 1 345 1 76 1 36 3 210 2 55 1 82 1 323 1 189 2 108 1 267 1 44 1 
46 2 221 2 319 1 302 4 320 2 105 2 57 2 186 1 185 1 296 1 237 1 311 4 282 1 353 1 205 1 
58 1 166 1 346 1 
49 1 32 1 58 1 346 1 207 1 
58 1 166 1 346 1 
58 1 166 1 346 1 
58 1 346 1 215 1 
58 1 346 1 215 1 
58 1 346 1 215 1 
58 1 346 1 
278 1 147 1 
114 4 19 3 47 2 20 1 357 1 162 1 173 1 103 2 82 8 324 1 97 1 360 4 70 2 8 1 50 1 148 1 189 4 353 1 13 2 283 2 
114 3 19 2 20 1 357 1 162 1 103 2 173 1 82 6 97 1 25 1 360 3 50 1 148 1 353 1 
114 2 19 2 156 1 47 1 103 1 173 1 82 4 198 1 324 1 70 1 360 2 50 1 189 2 13 1 254 1 244 1 283 1 
219 1 114 4 19 2 103 1 173 1 369 1 82 7 303 2 198 1 324 1 360 3 50 1 362 1 254 1 244 1 
219 2 114 12 19 9 47 2 20 2 357 1 173 3 198 2 97 1 360 11 8 2 70 2 50 3 148 1 362 1 254 2 13 2 283 2 124 1 154 1 232 1 162 2 103 5 82 23 303 2 324 4 189 4 353 1 244 2 
303 1 114 1 82 1 
219 1 360 1 82 1 
114 3 19 3 47 1 156 1 173 1 103 2 82 6 198 1 324 1 70 1 360 3 50 1 189 2 252 1 13 1 254 1 244 1 283 1 
219 1 114 6 19 2 47 1 173 2 198 2 70 1 360 6 279 1 200 1 50 2 13 1 254 2 206 1 283 1 33 1 160 1 369 1 103 1 82 12 303 1 324 1 189 2 245 1 244 2 
114 3 19 2 20 1 162 1 173 1 103 1 82 6 324 1 97 1 360 3 50 1 
124 1 114 2 19 2 47 1 20 1 357 1 162 1 103 1 82 3 324 1 360 1 8 1 70 1 148 1 189 2 13 1 283 1 
114 5 19 5 47 1 20 2 5 1 162 2 103 3 173 2 82 10 324 2 97 1 70 1 360 5 50 2 189 2 13 1 206 1 283 1 
19 1 47 1 82 2 198 1 324 1 70 1 360 2 50 1 189 2 13 1 206 1 283 1 
114 2 19 2 47 1 103 1 173 1 82 4 198 1 324 1 70 1 360 2 50 1 189 2 13 1 254 1 244 1 206 1 283 1 
124 1 114 2 19 2 47 3 20 1 162 1 103 1 82 3 324 1 8 1 70 3 360 1 41 1 189 6 13 3 206 1 283 3 
219 3 114 18 19 12 47 5 20 3 357 1 173 5 198 3 97 2 8 2 70 5 360 16 50 5 148 1 362 1 12 1 13 5 254 3 206 1 283 5 124 1 258 1 156 1 162 3 369 1 103 7 82 34 303 4 324 5 41 1 189 10 353 1 244 3 64 1 
219 1 114 4 19 2 47 1 20 1 357 1 173 1 97 1 70 1 360 4 50 1 200 1 148 1 13 1 206 1 283 1 162 1 369 1 103 2 82 8 303 1 189 2 353 1 
219 1 114 5 19 3 47 2 20 1 357 1 173 1 198 1 97 1 70 2 360 6 200 1 50 2 148 1 362 1 13 2 254 1 206 1 283 2 156 1 162 1 103 2 369 1 82 11 303 2 324 1 189 4 353 1 
219 1 114 6 19 2 47 2 173 2 198 2 70 2 360 6 279 1 200 1 50 2 13 2 254 2 206 1 283 2 33 1 156 1 160 1 369 1 103 1 82 12 303 1 324 1 189 4 245 1 244 2 
219 1 114 7 19 4 47 3 20 1 357 1 173 2 198 2 97 1 8 1 70 3 360 10 279 1 200 1 50 3 148 1 13 3 254 2 206 1 283 3 33 1 156 1 160 1 162 1 103 2 369 1 82 17 303 1 324 2 189 6 353 1 245 1 244 1 
219 1 114 4 19 2 47 1 20 1 357 1 173 1 97 1 70 1 360 4 50 1 200 1 148 1 13 1 206 1 283 1 162 1 369 1 103 2 82 8 303 1 189 2 353 1 
219 1 114 6 19 1 47 1 173 2 198 2 70 1 360 6 279 1 200 1 50 2 13 1 254 2 206 1 283 1 33 1 160 1 369 1 82 12 303 1 324 1 189 2 245 1 244 2 
219 1 114 4 19 2 47 3 173 1 198 2 8 1 70 3 360 7 279 1 200 1 50 2 13 3 254 2 206 1 283 3 33 1 156 1 160 1 369 1 103 1 82 11 303 1 324 1 189 6 245 1 244 1 
219 1 114 7 19 6 47 4 173 2 198 3 279 1 70 4 360 9 8 2 200 1 50 3 13 4 254 3 206 1 283 4 33 1 160 1 369 1 103 3 82 16 303 1 324 3 41 1 189 8 245 1 244 2 
114 4 19 6 20 3 357 1 162 3 173 1 103 3 82 7 324 3 97 1 360 3 50 1 148 2 
219 1 114 8 19 5 47 4 20 1 357 1 173 2 198 2 97 1 279 1 70 4 360 10 8 2 200 1 50 3 148 1 13 4 254 2 206 1 283 4 33 1 160 1 162 1 369 1 103 4 82 18 303 1 324 1 41 1 189 8 353 1 245 1 244 1 
0 1 129 1 36 1 294 1 226 1 55 1 370 1 
0 1 146 1 129 1 45 1 271 1 36 1 294 1 226 1 55 1 56 1 370 1 246 1 
112 1 345 1 277 1 88 1 25 1 43 1 267 1 6 1 95 1 341 1 255 1 
171 1 112 1 306 1 138 1 345 1 88 1 36 2 210 1 294 2 55 1 6 1 95 1 277 1 199 1 108 1 226 1 267 1 341 1 
171 1 112 1 306 1 182 1 138 1 345 1 88 1 272 1 36 2 210 2 294 2 55 1 6 1 95 2 187 1 199 1 17 1 108 2 226 2 72 1 267 1 122 1 341 3 
171 1 112 1 306 1 182 1 138 1 345 2 88 1 272 1 36 2 210 2 294 2 55 1 6 2 95 2 187 1 325 1 17 1 108 2 226 2 352 1 72 1 267 2 122 1 341 3 
112 1 88 1 272 1 46 1 6 3 95 1 145 1 277 1 9 1 311 1 27 2 122 1 341 4 345 3 259 1 157 2 187 1 213 1 325 1 188 1 108 1 190 1 267 3 
112 1 345 3 88 1 46 1 272 1 194 1 157 2 6 3 95 1 145 1 187 1 277 1 213 1 325 1 311 1 9 1 108 1 27 2 190 1 267 3 122 1 341 4 
112 1 345 1 88 1 28 1 267 1 6 1 
100 1 112 3 208 1 345 7 88 2 231 1 6 6 118 1 95 2 24 1 372 1 277 2 119 1 108 1 201 1 28 1 62 1 133 1 267 7 151 1 341 3 
247 1 138 1 88 1 47 2 294 2 6 1 95 1 97 1 199 1 50 1 148 1 13 2 340 1 341 1 153 1 345 1 210 1 55 2 162 1 103 2 108 1 267 1 353 1 171 1 112 1 306 1 114 3 19 2 20 1 357 1 117 2 173 1 23 1 70 2 360 3 226 1 365 2 283 2 76 1 36 2 233 1 82 6 321 1 189 4 133 1 243 1 44 1 
46 1 194 1 250 1 308 1 6 1 145 1 296 2 277 1 177 1 311 1 9 2 27 3 282 2 205 1 178 1 120 1 298 1 341 2 345 1 317 1 157 3 319 2 105 1 213 1 290 1 237 2 190 1 267 1 
112 2 345 2 88 1 231 1 91 1 6 2 95 1 213 1 108 1 28 1 133 1 267 2 341 2 
112 1 345 4 88 1 6 4 274 1 95 1 277 1 325 1 43 1 133 1 267 4 255 1 341 1 
100 1 112 2 345 2 88 1 172 1 6 2 95 1 187 1 119 1 108 1 61 1 267 2 86 1 341 1 
112 1 345 1 277 1 88 1 107 1 168 1 52 1 267 1 6 1 268 1 
31 1 112 1 372 1 345 2 88 1 133 1 267 2 6 2 95 1 341 1 24 1 
112 2 345 5 88 2 6 4 118 1 274 1 95 2 24 1 187 1 277 1 43 1 133 1 62 1 267 5 255 1 341 3 
112 2 345 5 88 2 6 4 118 1 274 1 95 2 24 1 187 1 277 1 241 1 43 1 133 1 267 5 255 1 341 3 
171 1 112 1 306 1 138 1 345 1 88 1 36 2 210 1 294 2 55 1 6 1 95 1 277 1 108 1 226 1 352 1 267 1 341 1 
100 1 112 2 208 1 345 1 88 1 231 1 6 1 95 1 187 1 119 1 108 1 267 1 341 1 
40 1 55 1 378 1 195 1 262 1 
182 1 46 1 157 2 55 1 262 1 92 1 195 2 145 1 337 1 40 2 17 1 131 1 311 1 251 1 27 2 72 1 378 2 178 1 111 1 
36 1 294 1 195 1 262 1 142 1 226 1 363 1 378 1 227 1 
131 1 92 1 262 1 
25 1 330 1 51 1 127 1 
123 1 137 1 15 1 330 1 51 1 127 1 203 1 
123 1 356 1 48 1 
123 3 113 1 137 1 209 1 330 1 127 1 196 1 104 1 144 2 15 3 51 1 203 1 
123 2 137 1 15 2 330 1 51 1 127 1 203 1 204 1 110 1 
123 1 113 1 137 1 35 1 235 1 15 1 51 1 203 1 109 1 168 1 268 1 
123 1 137 1 113 1 15 1 330 1 51 1 203 1 
123 1 137 1 113 1 15 1 330 2 127 1 203 1 
123 2 113 1 137 2 330 1 54 1 155 1 224 1 15 2 51 1 203 2 
123 3 113 1 137 1 330 1 127 1 222 1 273 1 348 1 15 3 51 2 203 1 109 1 204 2 
123 2 113 1 137 1 330 1 35 1 127 1 15 2 280 1 264 1 51 1 203 1 52 1 168 2 204 1 268 1 
123 4 113 1 137 2 344 1 330 1 127 1 348 1 15 4 51 2 203 2 109 1 204 2 110 1 
123 1 137 1 113 1 15 1 330 1 51 1 127 1 203 1 
123 4 137 1 330 2 257 1 127 2 196 1 104 1 144 1 348 1 15 4 51 3 203 1 109 1 204 2 
123 1 113 1 137 1 257 1 330 1 260 1 127 1 22 1 15 1 203 1 181 1 
123 3 113 1 137 1 330 1 127 1 196 1 104 2 144 2 15 3 51 1 203 1 338 1 
152 2 212 1 51 2 102 1 
123 1 137 1 113 1 15 1 193 1 203 1 
123 2 137 1 113 1 15 2 330 1 51 1 127 1 273 1 203 1 204 1 
170 1 
123 1 137 1 113 1 15 1 330 1 51 1 127 1 203 1 
123 3 113 1 137 1 330 1 127 1 273 1 144 1 15 3 51 1 203 1 204 1 
348 1 257 1 51 1 109 1 
330 1 51 1 

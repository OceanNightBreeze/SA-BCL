#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 136 (21,223) (21,223) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 136 (21,223) (21,223) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 136 (21,223) (21,223) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 136 (21,223) (21,223) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 136 190 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 136 190 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 270 85 80 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 270 85 80 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 270 85 80 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 270 85 80 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 270 85 80 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
7 1 11 1 196 1 91 1 113 2 116 1 343 1 369 2 347 1 348 3 321 2 285 3 35 1 
245 2 7 1 153 2 288 1 352 1 223 1 291 1 26 1 91 4 196 1 263 1 227 1 113 2 343 6 369 2 284 1 347 2 254 2 118 1 321 4 348 9 21 1 136 1 172 2 285 9 35 3 
245 2 7 1 153 2 288 1 352 1 223 1 291 1 26 1 91 4 196 1 263 1 227 1 113 2 343 6 369 2 284 1 347 2 254 2 118 1 321 4 348 9 21 1 136 1 172 2 285 9 35 3 
245 2 7 1 153 2 288 1 352 1 223 1 291 1 26 1 91 4 196 1 263 1 227 1 113 2 343 6 369 2 284 1 347 2 254 2 118 1 321 4 348 9 21 1 136 1 172 2 285 9 35 3 
245 2 7 1 153 2 288 1 223 1 291 1 26 1 91 3 196 1 263 1 227 1 113 2 343 4 369 2 284 1 347 2 254 1 118 1 321 3 348 7 21 1 136 1 172 2 285 7 35 2 
245 1 7 1 153 1 352 1 91 2 113 1 343 3 369 1 284 1 254 2 348 4 321 2 136 1 172 1 285 4 35 1 
7 1 245 1 288 1 127 1 11 1 161 1 26 1 113 1 116 1 329 1 369 1 347 1 321 1 348 2 285 2 172 1 
245 1 7 1 153 1 352 1 163 1 291 1 196 1 91 4 263 1 113 2 343 7 369 2 284 1 347 1 254 2 321 4 348 9 136 1 172 1 285 9 190 1 35 3 
245 1 7 1 153 1 352 1 163 1 291 1 196 1 91 4 263 1 113 2 343 7 369 2 284 1 347 1 254 2 321 4 348 9 136 1 172 1 285 9 190 1 35 3 
275 1 363 1 87 1 214 1 195 1 264 1 104 1 301 1 133 1 198 1 200 1 231 1 182 1 109 1 
346 1 
70 1 346 1 229 1 195 2 149 1 331 1 109 2 104 1 
50 1 70 1 316 1 195 5 147 2 101 1 149 1 40 1 281 1 197 1 104 2 346 1 330 1 157 1 220 2 331 2 109 5 76 1 69 2 
346 1 79 1 149 1 
346 1 314 1 63 2 
198 2 275 2 200 2 363 2 87 2 148 1 231 1 182 2 
23 2 275 2 87 2 353 1 111 2 92 1 282 1 29 1 115 1 198 2 200 3 156 2 357 1 230 1 94 1 231 1 182 2 333 1 78 1 59 1 363 3 61 1 216 1 148 1 62 1 184 1 166 1 341 1 150 1 17 2 19 1 185 1 273 1 375 1 22 2 349 1 350 1 
198 1 133 1 275 1 200 1 363 1 87 1 214 1 231 1 182 1 264 1 
160 1 363 1 98 1 175 1 195 1 149 1 264 1 198 1 346 1 200 1 207 1 189 1 109 1 209 1 
275 1 363 1 87 1 175 1 195 2 149 1 264 1 198 1 346 1 200 1 207 1 189 1 182 1 109 2 209 1 
173 1 195 1 331 1 109 1 104 1 
70 1 346 1 93 1 195 2 149 1 331 1 109 2 104 1 
195 1 331 1 109 1 
58 1 275 1 363 2 87 1 365 1 148 2 198 2 200 2 182 1 
313 1 328 1 238 1 
23 1 59 1 363 1 290 1 61 1 216 1 148 1 111 1 92 1 166 1 200 1 156 1 230 1 185 1 375 1 350 1 
79 1 148 1 
23 1 258 1 59 1 275 1 363 2 87 1 61 1 216 1 276 1 111 1 166 1 92 1 198 1 200 2 156 1 185 1 230 1 313 1 375 1 350 1 
198 3 275 3 200 3 363 3 87 3 276 1 148 1 182 1 
198 1 275 1 200 1 363 1 87 1 214 1 264 1 
58 1 198 1 275 1 200 1 363 1 87 1 365 1 182 1 264 1 
23 1 275 3 87 3 353 1 175 1 276 1 195 1 111 1 92 1 282 1 115 1 198 3 356 1 200 4 156 1 230 1 207 1 231 1 182 2 333 1 209 1 58 1 258 1 78 1 59 1 363 4 61 1 216 1 148 1 62 1 184 1 166 1 341 1 264 1 17 2 370 1 19 1 185 1 375 1 189 1 22 1 349 1 109 1 350 1 
198 2 275 1 200 2 363 2 98 1 87 1 276 1 148 1 308 1 
58 1 258 1 275 3 363 3 87 3 175 1 195 1 276 2 297 1 264 1 198 3 370 1 346 1 200 3 207 1 189 1 182 1 109 1 209 1 
58 1 198 2 275 2 200 2 363 2 87 2 276 1 313 1 328 1 182 1 
23 1 59 1 363 1 216 1 61 1 148 1 111 1 92 1 166 1 200 1 156 1 230 1 185 1 375 1 350 1 
23 1 59 1 363 1 216 1 61 1 148 1 111 1 166 1 200 1 156 1 185 1 187 1 375 1 233 1 350 1 
0 1 25 1 353 1 194 1 328 2 282 1 355 1 310 1 74 1 33 1 313 2 333 2 62 1 184 1 366 1 238 2 17 2 43 1 106 1 19 1 186 1 273 2 22 4 349 1 
198 1 275 1 200 1 363 1 87 1 264 1 209 1 239 1 
58 1 258 1 275 4 335 1 363 5 98 1 87 4 276 2 308 1 148 1 198 5 268 1 200 5 182 1 
198 2 275 2 200 2 363 2 87 2 214 1 264 1 239 1 
71 1 354 1 315 1 
56 1 71 2 312 1 60 1 151 1 354 2 
71 1 354 1 
71 1 354 1 
60 1 151 1 
60 1 151 1 
60 1 151 1 
71 1 95 1 354 1 
71 1 95 1 354 1 
71 1 95 1 354 1 
71 1 354 1 82 1 
71 1 354 1 82 1 
71 1 354 1 82 1 
192 1 137 3 71 2 195 2 354 2 112 1 41 2 345 1 302 1 269 2 346 1 56 1 134 2 373 2 20 1 232 1 171 2 109 2 274 1 
191 1 137 1 275 2 71 1 87 2 195 1 354 1 225 1 2 1 198 2 200 2 6 1 360 1 315 1 363 2 9 1 148 1 295 1 41 1 134 1 373 1 171 1 109 1 274 1 
245 2 153 1 126 1 127 1 298 2 
245 1 153 1 172 1 
245 1 127 1 172 1 
245 3 153 2 126 1 127 1 12 1 298 1 
155 1 245 2 153 1 126 1 127 1 298 1 
191 1 70 1 0 1 195 5 141 1 281 2 310 1 330 1 202 1 74 1 157 3 75 1 314 1 331 1 332 2 208 1 361 1 9 1 317 2 147 1 130 1 63 3 149 1 64 1 295 1 366 1 104 4 346 2 220 1 84 2 109 5 69 1 
191 4 173 5 70 1 0 3 72 1 195 9 281 6 73 1 310 3 202 1 330 1 74 3 157 8 4 5 314 3 331 6 332 6 361 3 362 1 147 2 130 2 101 1 63 9 149 1 64 2 366 3 15 1 104 7 346 5 66 1 220 2 170 1 84 6 109 9 69 2 
191 1 0 1 195 3 141 1 281 2 310 1 157 3 74 1 314 2 332 2 208 1 361 1 317 1 147 1 130 1 101 1 63 4 149 1 64 1 366 1 104 2 346 3 220 1 84 2 109 3 69 1 
191 2 0 2 72 1 195 4 141 1 281 4 73 1 310 2 157 5 74 2 314 3 332 4 208 1 361 2 317 2 147 1 130 1 63 7 101 1 149 1 64 1 366 2 104 3 346 4 220 1 170 1 84 4 109 4 69 1 
199 1 
79 1 61 1 296 1 
61 1 279 1 
59 1 61 1 
59 1 46 1 61 3 375 1 183 1 296 2 
59 1 61 1 375 1 
61 1 124 1 
88 1 102 1 252 1 131 1 367 2 43 2 53 1 319 1 105 1 310 1 74 1 255 1 186 3 273 4 108 1 22 7 286 1 333 3 
0 3 88 2 353 1 177 1 252 2 1 4 282 1 53 1 310 4 74 4 286 2 333 15 361 3 38 1 318 1 99 1 165 1 102 5 366 3 184 1 131 1 367 3 17 2 266 1 43 5 217 3 319 1 105 2 169 1 186 10 108 1 273 16 22 31 349 1 
88 1 353 2 102 1 252 1 184 2 282 2 367 2 43 3 17 4 53 1 319 1 169 1 105 1 310 1 74 1 179 1 186 4 108 1 273 5 272 1 22 9 286 1 349 2 333 4 
88 1 102 1 252 1 131 1 367 2 43 2 53 1 319 1 105 1 310 1 74 1 186 3 273 4 108 1 22 7 286 1 333 3 
88 1 102 1 252 1 131 1 367 2 43 2 53 1 319 1 105 1 310 1 74 1 186 3 273 4 108 1 22 7 286 1 333 3 
23 1 125 2 59 1 259 1 307 1 215 2 90 1 216 1 61 1 27 1 280 1 111 1 113 1 154 2 369 1 347 2 156 1 47 1 348 1 185 1 285 1 34 1 350 1 
23 1 245 2 153 1 174 1 327 1 111 1 154 1 113 1 156 1 57 1 180 1 285 1 125 1 7 1 127 1 215 1 128 1 12 1 216 1 369 1 65 1 347 1 348 1 185 1 172 1 152 1 
23 1 245 2 153 1 174 1 327 1 111 1 154 1 113 1 116 1 156 1 57 1 285 2 125 1 7 1 212 1 127 1 11 1 215 1 128 1 12 1 216 1 343 1 369 1 65 1 347 1 321 1 348 2 185 1 172 1 152 1 
23 1 245 2 153 1 174 1 327 1 111 1 154 1 113 1 116 1 156 1 205 1 180 1 285 3 125 1 127 1 11 1 12 1 215 1 128 1 216 1 343 2 369 1 65 1 347 1 321 1 348 3 47 1 185 1 172 1 152 1 
23 1 245 2 153 1 174 1 327 1 111 1 154 1 116 1 156 1 205 1 180 1 285 2 125 1 127 1 11 1 215 1 12 1 216 1 343 2 347 1 321 1 348 2 185 1 172 1 152 1 
168 1 
86 2 175 1 281 2 330 1 331 6 8 1 59 1 98 1 61 1 147 1 293 1 63 2 149 1 340 1 346 2 185 1 244 1 189 1 109 5 69 1 350 2 23 2 70 3 247 1 307 1 24 1 249 2 195 5 27 1 111 2 198 1 30 1 156 2 200 1 157 2 158 1 359 2 314 2 206 1 207 1 77 2 209 1 257 1 160 1 363 1 260 4 216 1 164 2 130 1 264 1 167 2 265 1 44 1 220 1 48 2 
70 1 247 1 24 1 175 1 195 3 198 1 30 1 200 1 229 1 359 1 207 1 331 2 209 1 257 1 8 1 160 1 363 1 260 2 98 1 264 1 189 1 109 3 
70 1 247 1 24 1 86 1 175 1 195 3 198 1 30 1 200 1 229 1 331 1 207 1 209 1 257 1 8 1 160 1 363 1 260 3 98 1 149 1 264 1 346 1 189 1 109 3 
70 1 247 1 24 1 86 1 175 1 195 3 198 1 30 1 200 1 229 1 359 1 207 1 331 2 209 1 77 1 257 1 8 1 160 1 363 1 260 3 98 1 149 1 264 1 346 1 189 1 109 3 
51 1 86 4 175 1 326 1 281 1 330 1 229 1 331 7 8 1 98 1 147 1 149 5 346 5 303 1 189 1 109 5 69 1 70 3 247 1 24 1 249 2 195 5 198 1 117 1 30 1 200 1 157 1 158 1 359 4 314 2 207 1 77 4 209 1 257 1 160 1 260 6 363 1 164 2 264 1 265 1 167 2 45 1 220 1 48 2 
86 2 175 1 281 1 330 1 331 4 8 1 98 1 147 1 63 2 149 1 346 2 189 1 109 4 69 1 70 2 247 1 24 1 249 2 195 4 198 1 30 1 200 1 157 1 158 1 314 2 359 2 207 1 209 1 77 2 257 1 160 1 260 4 363 1 164 2 264 1 265 1 167 2 44 1 220 1 48 2 
51 1 70 2 247 1 86 2 24 1 249 2 175 1 195 4 281 1 198 1 117 1 30 1 200 1 330 1 157 1 158 1 359 2 314 2 331 4 207 1 77 2 209 1 257 1 8 1 160 1 363 1 260 4 98 1 164 2 147 1 149 1 264 1 167 2 265 1 346 1 303 1 220 1 48 2 189 1 109 4 69 1 
51 1 70 2 247 1 86 2 24 1 249 2 175 1 195 4 281 1 198 1 117 1 30 1 200 1 330 1 157 1 158 1 359 2 314 2 331 4 207 1 77 2 209 1 257 1 8 1 160 1 363 1 260 4 98 1 164 2 147 1 149 1 264 1 167 2 265 1 346 1 303 1 220 1 48 2 189 1 109 4 69 1 
51 1 70 2 247 1 86 2 24 1 175 1 195 4 176 1 281 1 198 1 30 1 200 1 330 1 157 1 311 1 158 1 359 2 331 4 207 1 77 2 209 1 257 1 8 1 160 1 337 2 363 1 260 4 98 1 289 1 292 2 147 1 63 2 149 1 264 1 167 2 346 1 220 1 48 2 189 1 109 4 69 1 
51 1 70 2 247 1 24 1 86 3 249 2 175 1 195 4 326 1 281 1 198 1 117 1 30 1 330 1 200 1 157 1 158 1 314 2 359 3 207 1 331 5 209 1 77 3 257 1 8 1 160 1 363 1 260 5 98 1 164 2 147 1 149 1 264 1 167 2 265 1 346 1 303 1 220 1 48 2 189 1 109 4 69 1 
51 1 70 2 247 1 24 1 86 3 249 2 175 1 195 4 326 1 281 1 198 1 117 1 30 1 330 1 200 1 157 1 158 1 314 2 359 3 207 1 331 5 209 1 77 3 257 1 8 1 160 1 363 1 260 5 98 1 164 2 147 1 149 1 264 1 167 2 265 1 346 1 303 1 220 1 48 2 189 1 109 4 69 1 
86 2 175 1 176 1 281 1 330 1 331 4 8 1 337 2 98 1 147 1 292 2 63 2 149 1 346 1 189 1 109 4 69 1 70 2 247 1 24 1 195 4 198 1 30 1 200 1 157 1 158 1 359 2 207 1 209 1 77 2 257 1 160 1 260 4 363 1 264 1 167 2 44 1 220 1 48 2 
246 1 23 7 275 1 351 1 307 1 87 1 353 2 276 1 27 1 111 8 282 2 115 1 198 1 203 1 200 1 156 8 357 2 33 1 180 1 210 1 333 1 212 1 59 2 363 1 234 1 216 2 61 3 62 2 184 2 17 4 150 1 240 1 19 2 185 2 271 1 273 1 22 2 349 2 350 2 
275 1 0 1 87 1 353 1 328 1 282 1 198 1 200 1 310 1 74 1 256 1 313 1 182 1 333 2 58 1 361 1 363 1 261 1 62 1 184 1 366 1 238 1 43 1 17 2 19 1 186 1 273 1 22 3 349 1 
79 1 353 1 148 2 62 1 328 1 252 1 184 1 238 1 282 1 367 1 43 2 17 2 53 1 319 1 310 1 74 1 19 1 186 2 33 1 313 1 273 3 108 1 22 6 286 1 349 1 333 3 
0 1 353 2 328 4 1 3 228 1 282 2 114 1 115 1 310 1 74 2 358 1 120 1 313 11 333 6 361 2 38 1 261 1 148 1 62 1 102 1 165 1 184 2 366 2 238 11 150 1 43 1 17 4 217 3 19 2 186 2 273 8 22 14 349 2 
23 1 275 1 87 1 353 1 276 1 277 1 224 1 328 1 111 1 92 1 282 1 115 1 198 1 156 1 200 2 230 1 123 1 333 1 258 1 59 1 363 2 290 1 61 1 216 1 261 1 148 1 62 1 166 1 184 1 17 2 150 1 19 1 185 1 273 1 375 1 22 2 349 1 350 1 
323 1 275 1 0 2 87 1 276 1 328 7 92 2 282 3 53 1 55 1 230 2 180 1 286 1 333 10 59 2 61 2 148 2 62 3 102 4 184 3 341 2 238 7 150 1 17 6 304 2 19 3 185 2 186 8 108 1 22 20 349 3 350 1 23 3 353 3 309 2 252 1 111 3 115 1 198 1 310 3 156 3 200 3 32 1 74 3 313 7 159 2 361 2 258 1 363 3 261 1 216 2 262 2 166 2 366 2 367 1 43 4 319 1 273 10 375 2 
353 1 194 1 62 1 102 1 328 1 184 1 366 1 238 1 282 1 17 2 74 1 19 1 186 1 33 1 313 1 273 2 22 2 349 1 
0 1 25 1 353 1 62 1 328 1 184 1 238 1 282 1 43 1 17 2 310 1 19 1 186 1 33 1 313 1 22 2 349 1 333 2 
0 1 353 1 328 2 282 1 310 1 74 1 33 1 313 2 333 2 361 1 62 1 102 1 366 1 184 1 238 2 17 2 43 1 19 1 186 2 273 2 22 4 349 1 
353 1 194 1 62 1 102 1 328 1 184 1 366 1 238 1 282 1 17 2 240 1 74 1 19 1 186 1 313 1 273 2 22 2 349 1 
0 1 25 1 353 1 62 1 328 1 184 1 238 1 282 1 43 1 17 2 240 1 310 1 19 1 186 1 313 1 22 2 349 1 333 2 
0 1 353 1 328 2 282 1 310 1 74 1 313 2 333 2 361 1 62 1 102 1 366 1 184 1 238 2 17 2 43 1 240 1 19 1 186 2 273 2 22 4 349 1 
0 1 353 1 328 2 282 1 310 1 74 1 313 2 333 2 361 1 62 1 102 1 366 1 184 1 238 2 17 2 43 1 19 1 186 2 273 2 22 4 349 1 
23 1 353 1 111 1 92 1 282 1 115 1 156 1 200 1 230 1 333 1 59 1 363 1 216 1 61 1 148 1 62 1 166 1 184 1 341 1 150 1 17 2 19 1 185 1 273 1 375 1 22 2 349 1 350 1 
23 1 353 1 111 1 282 1 115 1 156 1 200 1 121 1 233 1 333 1 59 1 363 1 216 1 61 1 148 1 62 1 166 1 184 1 150 1 17 2 19 1 185 1 187 1 273 1 375 1 22 2 349 1 350 1 
0 1 353 1 328 2 282 1 310 1 74 1 313 2 333 2 361 1 261 1 62 1 102 1 366 1 184 1 238 2 17 2 43 1 19 1 186 2 273 2 22 4 349 1 
23 1 0 1 353 1 328 2 111 1 92 1 282 1 310 1 156 1 200 1 74 1 230 1 313 2 159 1 333 2 361 1 212 1 59 1 363 1 216 1 61 1 62 1 102 1 366 1 166 1 184 1 238 2 341 1 43 1 17 2 19 1 186 2 185 1 273 2 375 1 22 4 349 1 
0 1 275 1 87 1 353 1 328 1 28 1 282 1 198 1 310 1 200 1 74 1 313 1 182 1 333 1 58 1 361 1 363 1 261 1 62 1 102 1 184 1 366 1 238 1 17 2 19 1 186 1 273 2 22 3 349 1 
17 2 132 1 80 1 179 1 353 1 270 1 184 1 349 1 282 1 85 1 
17 2 132 1 80 1 179 1 353 1 270 1 184 1 349 1 282 1 85 1 
17 2 132 1 80 1 179 1 353 1 270 1 184 1 349 1 282 1 85 1 
17 2 132 1 80 1 179 1 353 1 270 1 184 1 349 1 282 1 85 1 
17 2 132 1 80 1 179 1 353 1 270 1 184 1 349 1 282 1 85 1 
192 1 56 1 134 1 71 1 320 1 373 1 354 1 171 1 112 1 41 1 
360 1 315 1 
134 1 71 1 178 1 373 1 139 1 354 1 122 1 171 1 41 1 
192 1 137 2 71 1 195 1 354 1 112 1 41 1 345 1 302 1 269 1 346 1 56 1 134 1 373 1 232 1 171 1 274 1 109 1 
192 1 137 2 71 1 195 1 354 1 112 1 41 1 345 1 302 1 269 1 346 1 56 1 134 1 373 1 232 1 171 1 274 1 109 1 
192 1 137 2 71 1 195 1 354 1 112 1 41 1 345 1 302 1 269 1 346 1 56 1 134 1 373 1 232 1 171 1 274 1 109 1 
213 1 312 1 95 1 
213 1 312 1 95 1 
10 1 82 1 
312 1 10 1 82 1 
225 1 2 1 
191 1 137 1 275 2 71 1 87 2 195 1 354 1 225 1 2 1 198 2 54 1 200 2 6 1 232 1 360 1 315 1 363 2 9 1 148 1 295 1 104 1 41 1 269 1 134 1 373 1 171 1 109 1 
213 1 95 1 
312 1 10 1 82 1 
23 2 351 1 138 1 52 1 353 1 111 2 282 1 115 1 198 2 156 2 200 2 357 2 210 1 333 1 59 1 363 2 162 1 216 1 61 1 261 1 235 1 62 1 184 1 17 2 150 1 218 1 19 1 185 1 273 1 22 2 349 1 
23 1 145 1 59 1 259 1 307 1 215 1 216 1 61 1 27 1 111 1 226 1 156 1 185 1 350 1 
245 2 23 1 153 1 174 1 127 1 12 1 215 1 128 1 216 1 100 1 111 1 226 1 300 1 156 1 185 1 172 1 180 1 152 1 
245 2 23 2 153 1 212 1 174 1 127 1 12 1 215 1 128 1 216 1 100 1 111 2 226 1 300 1 156 2 185 1 172 1 180 1 152 1 
245 2 23 1 153 1 174 1 127 1 12 1 215 1 128 1 216 1 111 1 300 1 156 1 5 1 185 1 172 1 180 1 152 1 
374 1 
147 1 40 1 149 1 281 1 197 1 346 1 330 1 157 1 220 1 69 1 
361 2 0 2 278 1 63 10 262 1 366 2 281 5 346 5 310 2 74 2 157 5 96 2 314 5 332 5 84 5 
70 1 346 1 195 1 149 1 331 1 109 1 
23 4 70 2 307 1 195 3 27 1 111 4 281 2 3 2 330 1 156 4 157 2 206 1 331 4 59 1 216 1 61 1 293 1 147 2 130 2 101 1 299 1 368 1 371 1 220 2 185 1 244 2 109 3 69 2 350 2 
346 1 157 1 79 1 149 1 40 1 281 1 197 1 
70 1 249 1 195 1 281 1 330 1 157 1 314 1 331 1 147 1 164 1 63 1 149 1 265 1 346 2 220 1 109 1 69 1 
0 2 278 2 279 3 281 8 3 1 330 4 96 2 331 5 332 6 181 2 144 1 59 3 146 1 61 10 147 4 294 2 63 12 149 2 296 2 342 2 346 8 185 4 244 1 188 1 189 2 109 5 69 4 350 1 23 3 70 3 195 5 111 3 197 1 156 3 310 2 157 9 74 2 314 6 124 2 361 2 212 1 216 3 130 2 39 2 40 1 262 2 366 2 368 1 46 1 220 4 221 2 375 3 322 2 84 6 
70 1 0 2 278 1 195 1 1 1 281 5 330 2 310 2 157 8 74 2 96 2 314 3 331 1 332 5 287 1 361 2 364 1 38 1 130 1 147 2 63 6 13 1 339 1 149 2 366 2 217 1 219 1 346 5 243 1 220 2 244 1 84 5 109 1 68 1 69 2 
324 1 275 1 87 1 278 1 195 1 252 1 281 2 198 1 117 1 200 1 330 1 310 1 74 2 157 2 96 2 231 1 182 1 286 1 363 1 214 1 147 1 264 1 301 1 133 1 319 1 220 1 109 1 69 1 
23 1 275 2 87 2 353 1 111 1 92 1 282 1 115 1 198 2 156 1 200 3 230 1 231 1 182 2 333 1 78 1 59 1 363 3 216 1 61 1 148 1 62 1 166 1 184 1 341 1 17 2 19 1 185 1 375 1 22 1 349 1 350 1 
147 1 130 1 63 4 149 2 281 2 367 1 346 4 330 1 157 1 220 1 244 1 314 2 332 2 84 2 69 1 
192 1 134 1 373 1 305 1 225 1 
134 1 373 1 107 1 
134 1 373 1 107 1 
134 1 373 1 107 1 
372 1 134 1 373 1 
372 1 134 1 373 1 
372 1 134 1 373 1 
134 1 373 1 
71 1 354 1 
324 1 353 1 102 2 252 2 184 1 282 1 17 2 43 3 319 1 310 2 74 2 179 1 186 5 273 5 22 10 349 1 286 2 333 5 
353 1 102 1 184 1 366 1 282 1 17 2 74 1 179 1 186 1 273 2 22 2 349 1 
361 1 0 1 353 1 102 1 184 1 366 1 282 1 43 1 17 2 310 1 74 1 179 1 186 2 273 2 22 4 349 1 333 2 
353 3 102 1 252 1 184 3 282 3 42 1 17 6 43 1 344 1 169 1 179 1 186 2 273 1 22 3 349 3 286 1 333 2 
0 3 353 5 325 1 252 3 1 4 282 5 53 1 310 5 74 5 179 1 286 3 333 18 361 3 38 1 318 1 99 1 165 1 102 5 184 5 366 3 367 1 266 1 42 1 17 10 43 7 344 1 217 3 319 2 169 2 186 12 108 1 273 16 22 34 349 5 
38 1 353 1 252 1 184 1 1 1 282 1 367 1 43 2 17 2 53 1 217 1 319 1 310 1 74 1 179 1 186 2 108 1 273 4 22 8 286 1 349 1 68 1 333 4 
353 2 325 1 252 1 1 2 282 2 53 1 310 1 74 2 179 1 286 1 333 5 361 1 38 1 165 1 102 1 184 2 366 1 367 1 43 2 17 4 217 1 319 1 186 3 108 1 273 6 22 11 68 1 349 2 
0 2 353 3 325 1 252 1 1 1 282 3 53 1 310 3 74 3 179 1 286 1 287 1 333 10 361 2 38 1 13 1 102 1 184 3 366 2 367 1 17 6 43 3 217 1 319 1 169 1 219 1 243 1 186 4 108 1 273 9 22 19 68 1 349 3 
0 1 353 3 325 1 252 1 1 1 282 3 53 1 310 2 74 3 179 1 286 1 333 7 287 1 361 2 38 1 13 1 102 2 184 3 366 2 367 1 17 6 43 3 217 1 319 1 169 1 219 1 243 1 186 5 108 1 273 10 22 17 68 1 349 3 
38 1 353 1 252 1 184 1 1 1 282 1 367 1 43 2 17 2 53 1 217 1 319 1 310 1 74 1 179 1 186 2 108 1 273 4 22 8 286 1 349 1 68 1 333 4 
0 2 353 1 1 1 282 1 310 2 74 2 179 1 333 6 287 1 361 2 38 1 13 1 102 1 184 1 366 2 17 2 43 1 217 1 219 1 243 1 186 2 273 6 22 12 68 1 349 1 
0 1 353 4 325 1 252 1 1 1 282 4 53 1 310 2 74 3 179 1 286 1 287 1 333 8 361 2 38 1 13 1 102 2 184 4 366 2 367 1 17 8 43 3 217 1 319 1 219 1 169 2 243 1 186 5 108 1 273 10 22 18 68 1 349 4 
0 2 353 4 1 1 282 4 310 2 74 3 179 1 287 1 333 7 361 3 38 1 13 1 102 3 184 4 366 3 17 8 42 1 43 3 217 1 219 1 169 2 243 1 186 6 273 9 22 16 68 1 349 4 
102 3 252 3 43 3 53 2 319 1 310 1 74 1 186 6 108 1 273 3 22 7 286 3 333 4 
0 1 353 4 252 1 1 1 282 4 53 1 310 2 74 3 179 1 286 1 287 1 333 8 361 2 38 1 13 1 102 1 184 4 366 2 367 1 17 8 42 1 43 3 217 1 319 1 219 1 169 2 243 1 186 4 108 1 273 10 22 18 68 1 349 4 
353 2 102 1 252 1 184 2 282 2 367 1 43 2 17 4 53 1 319 1 169 1 310 1 74 1 186 3 273 4 108 1 22 8 349 2 286 1 333 4 
79 1 252 1 367 1 43 2 53 1 319 1 310 1 74 1 186 2 108 1 273 3 22 6 286 1 333 3 
361 1 0 1 353 1 325 1 102 1 184 1 366 1 282 1 43 1 17 2 310 1 74 1 186 2 273 2 22 4 349 1 333 2 
361 1 0 1 38 1 165 1 102 1 1 2 366 1 43 1 217 1 310 1 74 1 186 2 273 3 22 7 333 4 
0 2 353 2 252 2 1 2 228 1 282 2 114 1 53 1 310 3 74 3 286 2 333 12 361 2 102 4 165 1 366 2 184 2 367 1 43 5 17 4 217 2 344 1 319 1 169 2 186 9 108 1 273 11 22 23 349 2 
22 1 1 1 333 1 
217 1 273 1 22 1 
361 1 0 1 353 1 325 1 262 1 102 1 184 1 366 1 282 1 17 2 43 2 310 1 74 1 186 3 273 3 22 6 349 1 333 3 
0 2 353 1 1 1 282 1 310 2 74 2 179 1 333 6 287 1 361 2 38 1 13 1 102 1 184 1 366 2 17 2 43 1 217 1 219 1 243 1 186 2 273 6 22 12 68 1 349 1 
102 1 252 1 43 1 319 1 310 1 74 1 186 2 273 3 22 6 286 1 333 3 
353 1 102 1 252 1 184 1 282 1 43 1 17 2 53 1 344 1 169 1 186 2 273 1 108 1 22 3 286 1 349 1 333 2 
198 1 200 1 363 1 98 1 148 1 308 1 83 1 
363 1 98 1 110 1 148 1 308 1 236 1 103 1 14 1 251 1 198 1 200 1 83 1 
23 4 212 1 59 1 307 1 61 1 216 1 27 1 111 4 283 1 201 1 156 4 185 1 350 1 
23 2 323 1 59 1 61 1 216 1 111 2 16 1 3 1 142 1 156 2 119 1 185 2 375 1 36 1 
245 1 23 1 156 1 127 1 185 1 216 1 172 1 111 1 152 1 350 1 
23 2 59 1 212 1 156 2 162 1 185 1 216 1 61 1 180 1 111 2 210 1 
23 4 246 1 212 1 59 2 307 1 61 3 216 2 27 1 111 5 283 1 3 1 156 5 203 1 185 2 350 1 210 1 
23 4 212 1 59 2 307 1 61 3 216 2 27 1 111 5 283 1 3 1 156 5 203 1 185 2 350 1 49 1 210 1 
23 1 59 1 307 1 156 1 79 1 185 1 216 1 61 1 27 1 111 1 350 1 
23 1 59 1 275 1 363 2 87 1 61 1 276 1 216 1 148 1 111 1 166 1 92 1 198 1 200 2 156 1 185 1 375 1 350 1 
23 1 59 2 275 2 363 2 87 1 175 1 61 3 276 1 216 1 148 1 111 1 166 1 92 1 264 1 342 1 3 1 198 2 200 2 156 1 185 1 375 2 124 1 209 1 
23 2 275 2 87 1 175 1 276 1 111 2 3 1 198 2 201 1 156 2 200 2 233 1 124 1 209 1 59 2 363 2 216 1 61 3 148 1 166 1 264 1 342 1 185 1 375 2 
23 3 195 2 279 1 111 3 3 1 201 1 156 3 331 1 124 1 37 1 59 1 216 1 61 4 149 1 296 1 342 1 267 1 346 1 185 1 375 1 189 1 109 2 350 1 
23 3 59 1 195 2 61 4 216 1 39 1 279 1 149 1 111 3 296 1 342 1 3 1 346 1 201 1 156 3 185 1 331 1 189 1 375 1 124 1 109 2 350 1 
23 1 156 1 234 1 185 1 216 1 111 1 
246 1 23 6 212 1 193 1 59 2 234 1 61 3 216 2 111 7 203 1 156 7 357 1 119 1 46 1 185 3 271 1 180 1 375 1 36 1 210 1 350 2 
23 1 275 1 87 1 353 2 276 1 328 1 252 1 111 1 92 1 282 2 53 1 198 1 310 1 200 2 156 1 74 1 230 1 313 1 286 1 159 1 333 3 59 1 212 1 363 2 61 1 216 1 261 1 148 2 62 2 166 1 184 2 238 1 341 1 367 1 43 2 17 4 218 1 319 1 304 1 19 2 186 2 185 1 273 3 108 1 375 1 22 6 349 2 
23 1 70 1 195 3 279 1 111 1 281 1 197 1 156 1 330 2 157 1 331 2 181 1 61 2 147 2 294 1 39 1 149 1 40 1 296 1 104 1 368 1 346 1 220 2 221 1 189 1 109 3 350 1 69 2 
23 2 212 1 59 1 234 1 61 2 216 1 111 2 296 1 156 2 46 1 185 2 188 1 375 1 
23 1 59 1 275 1 363 2 87 1 61 1 276 1 216 1 148 1 111 1 166 1 198 1 200 2 156 1 185 1 375 1 233 1 350 1 
23 1 193 1 59 1 61 1 216 1 111 1 3 1 156 1 119 1 46 1 185 2 375 1 36 1 
248 1 97 1 67 1 148 1 81 1 
97 1 248 2 175 1 89 1 195 2 250 1 148 1 81 2 149 1 264 1 237 1 104 1 370 1 346 1 67 2 207 1 189 1 109 2 209 1 
198 1 200 1 363 1 97 1 248 1 138 1 52 1 235 1 67 1 
97 1 89 1 250 1 
116 1 7 1 369 1 321 1 348 1 11 1 285 1 113 1 
11 2 26 1 338 1 91 1 113 1 116 2 343 2 369 1 348 4 321 3 285 4 222 1 35 1 306 1 
7 1 11 1 163 1 140 1 113 1 343 1 116 1 369 1 321 1 348 2 135 1 285 2 
7 1 11 1 26 2 113 1 116 1 369 1 242 1 321 1 348 3 285 3 222 2 306 1 
336 1 321 2 204 2 129 1 
7 1 18 1 369 1 348 1 285 1 113 1 
116 1 343 1 7 1 369 1 321 1 348 2 11 1 285 2 263 1 113 1 
143 1 
116 1 7 1 369 1 321 1 348 1 11 1 285 1 113 1 
116 1 79 1 321 1 11 1 
116 1 369 1 321 1 348 1 11 1 285 1 113 1 
125 1 347 1 348 1 
7 1 11 1 26 2 113 1 116 1 369 1 321 1 348 3 285 3 222 1 211 1 306 1 
116 1 343 1 369 1 254 1 321 1 348 2 11 1 285 2 113 1 
245 1 7 1 369 1 284 1 153 1 321 1 348 1 91 1 172 1 285 1 113 1 
7 1 369 1 321 1 348 1 11 1 285 1 113 1 
116 1 7 1 369 1 348 1 11 2 285 1 113 1 
7 1 334 1 11 1 113 2 369 2 241 1 253 1 321 1 348 2 285 2 
7 1 11 1 291 1 91 1 263 1 113 1 116 1 343 2 369 1 348 3 321 2 285 3 35 1 
245 2 7 1 153 1 127 1 11 1 12 1 113 1 116 1 343 1 369 1 31 1 321 1 348 2 285 2 172 1 
7 1 352 1 11 1 91 1 113 2 116 1 343 2 369 2 254 1 348 4 321 2 285 4 35 1 
7 1 11 1 26 1 263 1 113 1 343 1 116 1 369 1 348 3 321 1 285 3 
321 1 338 1 91 1 35 1 
321 1 11 1 

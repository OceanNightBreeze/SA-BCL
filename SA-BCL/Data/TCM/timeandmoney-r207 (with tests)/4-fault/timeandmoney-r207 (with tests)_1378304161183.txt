#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 3 222 242 104 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
307 2 363 1 249 1 175 1 109 2 365 1 227 6 208 1 4 9 156 1 214 1 11 1 37 2 350 1 140 3 12 5 352 1 91 2 377 1 319 1 293 2 161 1 193 2 97 1 194 9 225 4 75 2 272 1 
307 2 363 1 249 1 175 1 109 2 365 1 227 6 208 1 4 9 156 1 214 1 11 1 37 2 350 1 140 3 12 5 352 1 91 2 377 1 319 1 293 2 161 1 193 2 97 1 194 9 225 4 75 2 272 1 
307 2 363 1 249 1 175 1 109 2 365 1 227 7 208 1 4 10 156 1 214 1 11 1 37 2 350 1 140 4 12 6 352 1 91 2 377 1 319 1 293 2 161 1 193 2 97 1 194 10 225 5 75 2 272 1 
307 2 363 1 249 1 175 1 109 1 365 1 227 4 208 1 4 7 156 1 214 1 11 1 37 2 350 1 140 2 12 4 352 1 91 2 377 1 319 1 293 2 161 1 193 2 194 7 225 3 75 2 272 1 
140 1 12 3 307 1 352 1 91 1 377 1 109 2 227 3 161 1 193 1 4 4 97 1 194 4 225 2 75 1 272 1 11 1 37 1 
12 1 350 1 307 1 352 1 126 1 293 1 161 1 4 2 193 1 194 2 114 1 156 1 75 1 9 1 11 1 37 1 
140 1 12 2 307 2 352 1 365 1 293 1 227 1 161 1 4 3 194 3 225 1 11 1 37 2 
307 2 363 1 249 1 109 2 308 1 365 1 227 7 4 9 178 1 11 1 37 2 140 3 12 5 352 1 91 1 377 1 293 1 161 1 193 1 97 1 194 9 225 4 75 1 272 1 
307 2 363 1 249 1 109 2 308 1 365 1 227 7 4 9 178 1 11 1 37 2 140 3 12 5 352 1 91 1 377 1 293 1 161 1 193 1 97 1 194 9 225 4 75 1 272 1 
172 1 58 1 364 1 
172 1 376 2 267 1 
13 1 39 2 232 2 260 2 369 2 133 2 247 2 35 1 
361 1 341 1 106 1 149 1 133 2 327 1 232 2 346 1 328 2 284 1 179 1 369 2 6 1 7 1 116 1 64 2 8 1 329 1 35 1 238 1 13 1 316 1 39 2 260 3 331 1 292 2 159 1 93 2 163 1 224 1 22 1 246 1 146 1 101 1 167 1 247 3 269 2 
13 1 310 1 306 1 39 1 232 1 73 1 260 1 369 1 133 1 247 1 
172 1 50 1 204 1 306 1 39 1 15 1 107 1 260 1 212 1 58 1 83 1 62 1 247 1 63 1 
172 1 50 1 204 1 306 1 39 1 15 1 107 2 133 1 260 1 232 1 212 2 58 1 369 1 62 1 247 1 
215 1 32 1 212 1 107 1 313 1 
172 1 215 1 212 2 58 1 107 2 145 1 313 1 71 1 
215 1 212 1 107 1 
13 1 306 1 39 1 107 1 133 1 260 1 310 1 212 1 232 1 144 1 73 1 313 1 369 1 247 1 
172 1 
172 1 215 1 123 1 212 2 58 1 107 2 313 1 71 1 
172 1 88 1 215 2 324 1 14 1 274 1 174 1 258 1 90 1 107 5 29 1 151 2 71 1 212 5 58 1 313 2 370 1 372 2 257 2 
364 1 35 1 
39 2 108 1 260 2 133 1 344 1 232 1 369 1 247 2 35 2 
382 1 191 1 219 1 
361 1 40 1 149 1 260 1 292 1 327 1 346 1 328 1 22 1 7 1 116 1 247 1 64 1 8 1 329 1 35 1 
361 1 39 1 124 1 149 1 260 2 292 1 94 1 219 1 327 1 232 1 346 1 328 1 369 1 22 1 7 1 116 1 247 2 8 1 64 1 329 1 
39 3 232 3 133 1 260 3 369 3 247 3 94 1 35 1 
306 1 39 1 232 1 73 1 260 1 369 1 247 1 
306 1 39 1 232 1 108 1 260 1 369 1 133 1 247 1 344 1 
50 1 361 1 204 1 306 1 149 1 107 1 133 2 344 1 327 1 232 3 212 1 346 1 328 1 284 1 179 1 369 3 6 1 7 1 116 1 62 1 180 1 8 1 64 1 329 1 35 1 238 1 13 1 316 1 39 3 15 1 124 1 260 4 331 1 159 1 292 1 93 1 94 1 262 1 22 1 246 1 101 1 167 1 247 4 269 2 
304 1 39 2 232 1 260 2 369 1 83 1 247 2 94 1 35 1 
172 1 50 1 306 1 204 1 15 1 39 3 107 1 124 1 133 1 260 3 94 2 344 1 262 1 212 1 232 3 369 3 165 1 62 1 247 3 
39 2 133 1 260 2 94 1 191 1 219 1 344 1 232 2 369 2 247 2 
361 1 149 1 260 1 292 1 327 1 346 1 328 1 22 1 7 1 116 1 247 1 64 1 8 1 329 1 35 1 
361 1 260 1 153 1 292 1 327 1 20 1 328 1 22 1 7 1 116 1 247 1 64 1 8 1 329 1 35 1 
341 2 229 1 278 1 3 1 255 1 284 1 179 1 6 1 183 1 216 1 316 2 331 1 93 4 191 2 294 1 219 2 297 1 382 2 196 1 246 1 268 1 167 1 269 2 383 1 
306 1 39 1 232 1 260 1 369 1 62 1 247 1 147 1 
304 1 39 5 124 1 260 5 133 1 94 2 344 1 232 4 369 4 83 1 61 1 247 5 120 1 35 1 
306 1 39 2 232 2 73 1 260 2 369 2 147 1 247 2 
137 1 177 1 
137 1 177 1 
317 1 358 1 
317 1 358 1 
317 1 358 1 
137 1 177 1 87 1 
137 1 177 1 367 1 
45 1 186 1 137 2 317 1 358 1 177 2 
137 1 177 1 87 1 
137 1 177 1 87 1 
141 1 137 1 177 1 
141 1 137 1 177 1 
141 1 137 1 177 1 
306 1 205 1 276 1 250 2 107 2 133 1 30 1 136 1 177 2 231 1 310 1 232 1 212 2 137 2 283 1 369 1 286 1 139 1 13 1 39 1 260 1 288 2 144 1 73 1 264 2 247 1 338 2 170 1 132 2 
27 1 250 1 107 1 177 1 367 1 154 1 232 2 212 1 137 1 369 2 85 1 35 1 39 2 288 1 260 2 19 1 336 1 264 1 21 1 266 1 247 2 338 1 170 1 132 1 
91 1 75 1 193 1 
75 1 9 1 193 1 
323 1 91 2 68 1 75 3 9 1 200 1 
323 1 91 1 84 1 68 1 75 2 9 1 
323 2 91 1 68 1 75 2 9 1 
173 1 172 2 27 1 77 1 174 2 107 5 28 1 29 3 151 1 54 1 2 2 229 1 3 1 31 2 5 1 154 1 212 5 58 1 313 4 372 1 36 1 10 2 257 1 88 1 215 1 376 3 222 1 71 1 297 1 21 1 268 1 267 1 
172 5 0 5 274 1 174 6 107 9 28 1 29 8 151 2 2 6 229 3 3 3 5 2 32 5 212 9 58 1 313 7 372 2 36 2 182 1 10 6 257 2 215 6 88 1 376 9 158 1 70 1 296 1 222 3 71 1 98 1 297 3 21 4 268 3 267 3 131 1 
172 3 173 1 274 1 174 2 107 3 29 3 151 1 54 1 2 2 229 1 31 1 3 1 5 1 212 3 58 1 313 2 372 1 36 1 257 1 10 2 376 4 222 1 297 1 21 1 268 1 267 2 
172 4 173 1 274 1 174 4 107 4 29 5 151 1 54 1 2 4 229 2 31 2 3 2 5 1 212 4 58 1 313 3 372 1 36 1 10 4 182 1 257 1 376 7 158 1 296 1 222 2 297 2 21 2 268 2 267 3 
364 1 116 1 371 1 
113 1 116 1 
261 1 
327 1 116 1 
327 1 176 1 100 1 116 3 371 2 329 1 
327 1 116 1 329 1 
285 1 116 1 
316 3 341 4 353 1 289 1 290 1 189 1 243 1 93 7 228 1 207 1 278 2 111 2 297 1 254 1 337 1 268 1 383 3 
316 3 341 4 353 1 289 1 290 1 189 1 243 1 93 7 228 1 207 1 278 2 111 2 297 1 254 1 337 1 268 1 383 3 
316 3 341 4 353 1 289 1 290 1 189 1 243 1 93 7 228 1 207 1 278 2 111 2 297 1 254 1 337 1 268 1 383 3 34 1 
248 1 341 16 152 1 228 1 207 1 229 3 326 4 3 3 278 5 279 1 111 3 254 2 284 1 179 1 315 1 316 15 187 1 353 1 289 2 189 1 290 2 93 31 243 5 222 3 297 4 299 1 74 3 337 2 246 1 167 1 268 4 269 2 383 10 198 1 
341 5 228 1 207 1 278 3 279 1 111 2 57 1 254 1 284 2 179 2 256 1 316 4 289 1 353 1 290 1 93 9 243 1 297 1 337 1 246 2 268 1 167 2 269 4 383 4 
26 1 203 1 307 1 273 1 362 1 227 1 4 2 312 1 328 1 7 1 235 1 64 1 9 1 11 1 37 1 12 1 352 1 91 1 292 1 293 1 42 1 161 1 193 1 128 1 194 2 22 1 103 1 303 1 75 2 200 1 
26 1 203 1 307 1 273 1 362 1 227 2 4 3 328 1 282 1 7 1 349 1 64 1 9 1 11 1 37 1 12 1 352 1 91 1 292 1 293 1 42 1 193 1 128 1 194 3 22 1 103 1 303 1 75 2 130 1 200 1 
26 1 203 1 273 1 362 1 227 2 4 2 328 1 282 1 7 1 349 1 64 1 9 1 11 1 12 1 352 1 91 1 292 1 293 1 42 1 193 1 194 2 22 1 303 1 75 2 200 1 
26 2 361 1 307 1 273 2 1 1 292 1 378 1 160 1 293 2 95 1 4 1 194 1 327 1 129 1 143 1 328 1 22 1 7 1 116 1 303 2 64 1 130 1 37 1 
26 1 203 1 307 1 273 1 362 1 4 1 312 1 328 1 282 1 7 1 64 1 9 1 37 1 91 1 292 1 293 1 42 1 161 1 193 1 128 1 194 1 22 1 103 1 303 1 75 2 200 1 
245 1 
305 1 50 1 204 1 306 1 107 5 52 1 150 2 151 1 53 1 5 1 253 2 212 5 58 1 7 1 314 2 116 1 62 1 64 2 63 1 257 1 215 6 15 1 260 1 125 1 318 2 69 1 18 1 71 3 129 1 22 1 267 2 25 1 172 2 361 2 76 1 174 2 29 2 368 1 280 2 327 1 328 2 83 1 372 1 88 1 39 1 241 2 92 1 188 1 376 2 292 2 333 4 95 1 298 2 247 1 339 1 
305 1 50 1 204 1 306 1 76 1 107 3 368 1 212 3 83 1 62 1 63 1 215 2 123 1 39 1 15 1 260 1 333 2 71 1 298 1 247 1 339 1 25 1 
305 1 50 1 172 1 204 1 306 1 76 1 107 3 368 1 212 3 58 1 83 1 62 1 63 1 215 1 123 1 39 1 15 1 241 1 260 1 333 3 71 1 247 1 339 1 25 1 
305 1 50 1 172 1 204 1 306 1 76 1 107 3 368 1 212 3 58 1 83 1 62 1 63 1 123 1 215 2 39 1 15 1 241 1 260 1 333 3 318 1 71 1 298 1 247 1 339 1 25 1 
50 1 305 1 306 1 204 1 107 5 151 1 150 2 253 2 56 1 212 5 58 5 62 1 314 2 63 1 257 1 123 1 215 7 15 1 260 1 125 1 318 4 69 1 71 3 359 1 263 1 267 2 270 1 25 1 172 5 76 1 174 1 29 1 368 1 280 2 233 1 83 1 372 1 88 1 39 1 241 4 333 6 298 4 247 1 339 1 
50 1 305 1 306 1 204 1 107 4 151 1 150 2 253 2 212 4 58 1 62 1 314 2 63 1 257 1 215 4 15 1 125 1 260 1 318 2 69 1 71 2 18 1 267 2 25 1 172 2 76 1 174 1 29 1 368 1 280 2 83 1 372 1 88 1 39 1 241 2 376 2 333 4 298 2 247 1 339 1 
172 1 305 1 50 1 204 1 306 1 76 1 174 1 107 4 29 1 150 2 151 1 368 1 280 2 253 2 56 1 212 4 58 1 233 1 83 1 314 2 62 1 63 1 372 1 257 1 215 4 88 1 39 1 15 1 241 2 125 1 260 1 318 2 333 4 69 1 71 2 359 1 298 2 267 2 247 1 339 1 25 1 
172 1 305 1 50 1 204 1 306 1 76 1 174 1 107 4 29 1 150 2 151 1 368 1 280 2 253 2 56 1 212 4 58 1 233 1 83 1 314 2 62 1 63 1 372 1 257 1 215 4 88 1 39 1 15 1 241 2 125 1 260 1 318 2 333 4 69 1 71 2 359 1 298 2 267 2 247 1 339 1 25 1 
172 1 305 1 50 1 204 1 306 1 76 1 174 1 107 4 29 1 342 1 151 1 78 2 368 1 209 1 280 2 253 2 212 4 58 1 83 1 62 1 63 1 372 1 257 1 215 4 88 1 39 1 15 1 241 2 260 1 376 2 318 2 190 2 333 4 320 1 69 1 71 2 359 1 298 2 247 1 339 1 25 1 
172 1 305 1 50 1 204 1 306 1 76 1 174 1 107 4 29 1 150 2 151 1 368 1 280 2 253 2 56 1 212 4 58 1 233 1 83 1 314 2 62 1 63 1 372 1 257 1 88 1 215 5 39 1 15 1 241 3 125 1 260 1 333 5 318 3 69 1 71 2 359 1 298 3 263 1 267 2 247 1 339 1 25 1 
172 1 305 1 50 1 204 1 306 1 76 1 174 1 107 4 29 1 150 2 151 1 368 1 280 2 253 2 56 1 212 4 58 1 233 1 83 1 314 2 62 1 63 1 372 1 257 1 88 1 215 5 39 1 15 1 241 3 125 1 260 1 333 5 318 3 69 1 71 2 359 1 298 3 263 1 267 2 247 1 339 1 25 1 
50 1 305 1 306 1 204 1 107 4 342 1 151 1 253 2 212 4 58 1 62 1 63 1 257 1 215 4 15 1 260 1 318 2 69 1 71 2 18 1 25 1 172 1 76 1 174 1 29 1 78 2 368 1 280 2 83 1 372 1 88 1 39 1 241 2 376 2 333 4 190 2 298 2 247 1 339 1 
341 3 364 1 228 1 207 1 278 2 111 1 254 1 255 1 284 1 179 1 6 1 35 2 316 3 289 1 353 1 331 1 93 6 191 1 219 1 297 1 382 1 246 1 167 1 268 1 269 2 383 2 
341 8 106 1 105 1 229 1 278 1 326 3 3 2 80 1 284 2 179 2 6 2 117 1 35 1 238 1 316 6 187 1 331 1 243 1 93 14 191 4 17 1 43 1 219 11 222 2 297 2 382 11 299 1 74 3 246 2 167 2 268 1 383 2 269 4 
361 1 341 1 105 1 106 1 149 1 327 1 311 1 232 1 346 1 328 1 284 1 179 1 369 1 234 1 6 1 7 1 116 1 8 1 64 1 329 1 35 1 238 1 40 1 39 1 316 1 124 1 260 2 331 1 292 1 93 2 191 1 94 1 22 1 300 1 246 1 247 2 167 1 269 2 
341 10 106 1 105 1 206 1 149 2 252 1 207 1 3 2 111 1 254 1 346 2 155 2 6 3 7 2 116 2 64 3 8 2 118 2 316 10 124 1 353 1 260 3 159 2 219 7 222 2 22 2 268 3 167 3 269 6 226 1 361 1 228 1 229 2 278 4 327 2 232 1 328 3 33 2 282 1 369 1 179 3 284 3 329 2 35 2 238 1 39 1 185 2 289 1 331 3 292 3 93 20 243 4 94 1 191 7 297 3 382 7 246 3 247 3 383 8 
361 2 51 1 341 1 106 1 327 2 232 1 59 1 255 1 328 7 282 1 369 1 284 2 179 2 6 2 7 2 235 1 116 3 64 8 238 1 65 1 39 1 316 1 260 1 331 2 292 8 93 2 94 1 95 1 162 1 72 1 381 1 129 1 22 2 246 2 146 2 247 1 167 2 269 4 171 1 
341 1 105 1 133 1 230 1 229 1 278 1 3 1 344 1 232 1 369 1 284 1 179 1 6 1 39 1 316 2 260 1 331 1 93 3 191 1 219 1 222 1 297 1 382 1 246 1 167 1 247 1 268 1 383 1 269 2 
341 2 331 1 243 1 93 2 191 1 294 1 3 1 219 1 297 1 382 1 255 1 179 1 284 1 6 1 246 1 167 1 383 1 269 2 
316 2 331 1 93 2 191 1 229 1 278 1 219 1 382 1 255 1 179 1 284 1 6 1 246 1 196 1 167 1 268 1 383 1 269 2 
341 2 229 1 3 1 278 1 255 1 284 1 179 1 6 1 316 2 331 1 93 4 243 1 191 2 219 2 222 1 297 1 382 2 246 1 167 1 268 1 269 2 383 2 
341 2 331 1 243 1 93 2 191 1 294 1 3 1 219 1 297 1 382 1 179 1 284 1 6 1 246 1 167 1 383 1 269 2 171 1 
316 2 331 1 93 2 191 1 229 1 278 1 219 1 382 1 179 1 284 1 6 1 246 1 196 1 167 1 268 1 383 1 269 2 171 1 
341 2 229 1 3 1 278 1 284 1 179 1 6 1 316 2 331 1 93 4 243 1 191 2 219 2 222 1 297 1 382 2 246 1 167 1 268 1 269 2 383 2 171 1 
341 2 229 1 3 1 278 1 284 1 179 1 6 1 316 2 331 1 93 4 243 1 191 2 219 2 222 1 297 1 382 2 246 1 167 1 268 1 269 2 383 2 
361 1 341 1 106 1 149 1 327 1 346 1 328 1 179 1 284 1 6 1 7 1 116 1 8 1 64 1 329 1 35 1 238 1 316 1 260 1 331 1 159 1 292 1 93 2 22 1 246 1 247 1 167 1 269 2 
361 1 341 1 106 1 153 1 327 1 328 1 179 1 284 1 6 1 7 1 116 1 8 1 64 1 329 1 35 1 238 1 121 1 316 1 260 1 331 1 292 1 93 2 20 1 22 1 246 1 247 1 167 1 269 2 
341 2 105 1 229 1 3 1 278 1 284 1 179 1 6 1 316 2 331 1 93 4 243 1 191 2 219 2 222 1 297 1 382 2 246 1 167 1 268 1 269 2 383 2 
341 2 149 1 229 1 278 1 3 1 327 1 346 1 328 1 179 1 284 1 6 1 7 1 235 1 116 1 8 1 64 1 329 1 316 2 185 1 260 1 331 1 159 1 292 1 243 1 93 4 191 2 219 2 222 1 297 1 382 2 22 1 246 1 268 1 247 1 167 1 383 2 269 2 
341 2 105 1 133 1 229 1 3 1 344 1 232 1 369 1 284 1 179 1 6 1 316 1 39 1 260 1 331 1 243 1 93 3 191 1 219 1 222 1 297 1 382 1 246 1 268 1 167 1 247 1 383 1 269 2 47 1 
104 1 341 6 135 1 229 2 278 2 326 2 3 2 211 1 57 1 81 1 284 2 179 2 38 1 316 7 242 1 187 1 93 13 243 2 222 2 297 2 299 1 74 1 265 1 246 2 167 2 268 2 48 1 269 4 383 4 
341 14 135 2 229 2 279 2 278 2 326 2 3 3 79 1 345 1 211 1 57 1 81 4 284 3 179 3 60 1 38 2 316 12 373 1 242 1 187 2 332 1 243 2 93 26 380 1 222 3 297 3 74 2 265 1 246 3 166 1 268 2 167 3 383 4 269 6 
341 20 135 1 228 1 207 1 229 4 279 1 278 4 326 4 3 4 111 1 79 1 345 1 211 1 57 1 254 1 81 4 284 3 179 3 60 1 38 2 316 21 373 1 242 1 187 3 353 1 289 1 332 1 93 41 243 4 380 1 222 4 297 5 299 1 74 3 265 1 246 3 166 1 301 1 167 3 268 5 48 1 269 6 383 8 
341 20 135 1 228 1 207 1 229 3 279 2 278 4 326 4 3 4 111 1 79 1 345 1 211 1 57 1 254 1 81 4 284 4 179 4 60 1 38 2 316 18 373 1 242 1 187 3 353 1 289 1 332 1 93 38 243 3 380 1 222 4 297 5 299 1 74 3 265 1 246 4 166 1 301 1 167 4 268 4 48 1 269 8 383 7 
341 27 135 1 228 1 207 1 229 7 279 1 278 7 326 4 3 7 111 1 79 1 345 1 211 1 57 1 254 1 81 4 284 2 179 2 60 1 38 1 316 25 373 1 242 1 187 2 353 1 289 1 332 1 93 52 243 7 17 2 380 1 222 7 297 8 299 2 74 4 265 1 246 2 166 1 167 2 268 8 269 4 383 14 
186 1 250 1 137 1 264 1 288 1 164 1 287 1 177 1 338 1 55 1 
19 1 367 1 
201 1 250 1 137 1 264 1 288 1 127 1 177 1 338 1 122 1 
306 1 205 1 276 1 250 1 107 1 133 1 30 1 136 1 177 1 231 1 310 1 232 1 212 1 137 1 283 1 369 1 286 1 139 1 13 1 39 1 260 1 288 1 144 1 73 1 264 1 247 1 338 1 170 1 132 2 
306 1 205 1 276 1 250 1 107 1 133 1 30 1 136 1 177 1 231 1 310 1 232 1 212 1 137 1 283 1 369 1 286 1 139 1 13 1 39 1 260 1 288 1 144 1 73 1 264 1 247 1 338 1 170 1 132 2 
306 1 205 1 276 1 250 1 107 1 133 1 30 1 136 1 177 1 231 1 310 1 232 1 212 1 137 1 283 1 369 1 286 1 139 1 13 1 39 1 260 1 288 1 144 1 73 1 264 1 247 1 338 1 170 1 132 2 
45 1 110 1 87 1 
45 1 110 1 87 1 
141 1 343 1 
141 1 45 1 343 1 
336 1 266 1 
205 1 27 1 276 1 250 1 107 1 325 1 177 1 367 1 154 1 212 1 232 2 137 1 313 1 369 2 85 1 35 1 39 2 260 2 288 1 19 1 336 1 264 1 21 1 266 1 247 2 338 1 132 1 
110 1 87 1 
141 1 45 1 343 1 
341 1 105 1 106 1 327 1 328 2 179 1 284 1 6 1 7 1 116 1 64 2 238 1 65 1 39 2 240 1 316 1 259 1 260 2 331 1 292 2 93 2 381 1 44 1 335 1 22 1 246 1 146 2 247 2 167 1 269 2 199 1 
26 1 203 1 362 1 91 1 355 1 292 2 321 1 193 1 328 2 282 1 22 1 7 1 235 1 103 1 75 2 64 2 9 1 360 1 200 1 
26 1 203 1 362 1 91 1 292 1 321 1 193 1 220 1 328 1 282 1 22 1 7 1 103 1 75 2 64 1 9 1 200 1 
361 1 26 1 355 1 292 1 357 1 378 1 95 1 327 1 129 1 328 1 22 1 7 1 116 1 64 1 
26 1 203 1 362 1 91 1 355 1 292 1 321 1 193 1 328 1 282 1 22 1 7 1 103 1 75 2 64 1 9 1 360 1 200 1 
379 1 
172 1 324 1 174 1 58 1 90 1 29 1 364 1 
172 2 174 1 107 1 29 1 151 1 150 1 212 1 58 1 314 1 372 1 257 1 88 1 215 1 125 1 376 1 71 1 267 1 
107 5 151 4 2 6 3 2 5 2 113 3 212 5 210 2 155 2 58 2 7 3 116 10 64 3 257 4 10 6 215 5 15 2 217 2 354 1 67 2 71 3 222 2 22 4 267 6 268 2 169 1 361 1 172 8 324 1 174 8 29 9 229 2 327 3 328 3 138 1 285 2 235 1 236 2 371 2 86 2 329 3 372 4 88 4 184 2 89 2 90 1 92 1 375 2 376 12 292 3 244 1 297 2 195 1 100 1 
172 5 174 5 107 1 29 8 151 2 2 5 229 2 309 1 326 1 3 2 5 1 345 1 210 1 212 1 58 2 60 1 372 2 10 5 257 2 215 1 88 2 89 2 187 1 92 1 332 1 376 6 380 1 71 1 222 2 297 2 74 1 166 1 267 3 268 2 271 1 
306 1 174 2 107 1 29 2 133 1 151 1 310 1 56 1 210 1 212 1 232 1 254 1 369 1 372 1 257 1 88 1 13 1 39 1 89 2 260 1 289 1 353 1 297 2 144 1 73 1 247 1 268 1 148 1 
88 1 172 1 324 1 174 1 90 1 29 1 151 1 58 1 372 1 257 1 
172 5 89 2 174 5 29 5 376 10 2 5 229 2 3 2 222 2 297 2 210 1 155 1 267 5 268 2 10 5 
172 1 215 1 212 1 58 1 107 1 71 1 
361 2 274 1 275 1 174 2 107 3 29 2 53 1 151 2 5 2 327 1 212 3 328 4 7 1 116 1 64 4 372 2 257 2 88 1 215 4 351 1 354 2 188 1 92 2 292 4 95 1 71 2 129 1 22 1 169 1 
361 1 149 1 133 2 327 1 232 2 346 1 328 1 284 1 369 2 179 1 6 1 7 1 116 1 64 1 8 1 329 1 35 1 238 1 13 1 316 1 39 2 260 3 331 1 292 1 159 1 93 1 22 1 246 1 101 1 167 1 247 3 269 2 
88 1 172 4 174 2 29 1 92 1 151 1 376 4 2 2 111 1 5 1 58 2 267 2 372 1 10 2 257 1 
250 1 277 1 264 1 
250 1 266 1 264 1 164 1 356 1 
250 1 277 1 264 1 
250 1 277 1 264 1 
250 1 264 1 192 1 
250 1 264 1 192 1 
250 1 264 1 192 1 
250 1 264 1 
137 1 177 1 
316 4 341 4 353 1 289 1 93 8 243 1 228 1 207 1 278 2 279 1 111 1 297 1 254 1 179 2 284 2 246 2 268 1 167 2 383 3 269 4 
316 3 341 3 289 1 353 1 364 1 93 6 228 1 207 1 278 2 111 1 297 1 254 1 268 1 383 2 
316 2 341 2 93 4 243 1 229 1 278 1 3 1 222 1 297 1 179 1 284 1 246 1 102 1 268 1 167 1 383 2 269 2 
316 4 341 3 187 1 93 7 243 1 229 1 278 1 326 2 3 1 222 1 297 1 299 1 74 1 268 1 383 2 
341 11 228 1 207 1 229 2 3 2 326 2 278 5 279 2 111 1 80 1 254 2 179 2 284 2 316 12 353 1 289 2 218 1 243 4 93 23 17 1 222 2 297 3 299 1 74 2 246 2 268 3 167 2 383 9 269 4 
316 1 93 1 326 1 
341 1 74 1 93 1 
316 3 341 3 93 6 243 1 229 1 3 1 278 2 222 1 297 1 155 1 284 1 179 1 246 1 102 1 167 1 268 1 269 2 383 3 
341 6 229 2 326 1 3 2 278 1 345 1 57 1 284 1 179 1 60 1 316 6 187 1 332 1 243 1 93 12 380 1 222 2 297 2 74 1 246 1 166 1 167 1 268 2 269 2 383 2 
316 3 341 3 353 1 289 1 93 6 243 1 278 1 297 1 254 1 268 1 383 2 
316 2 341 1 289 1 218 1 243 1 93 3 228 1 207 1 278 1 279 1 254 1 179 1 284 1 246 1 167 1 383 2 269 2 
316 5 341 5 289 2 353 1 243 2 93 10 278 3 297 2 57 1 254 2 284 1 179 1 246 1 167 1 268 2 148 1 269 2 383 5 
341 2 93 2 243 1 3 1 297 1 57 1 179 1 284 1 246 1 167 1 269 2 383 1 
316 2 341 2 93 4 243 1 229 1 278 1 3 1 222 1 297 1 57 1 179 1 284 1 246 1 268 1 167 1 383 2 269 2 
316 2 341 1 289 1 218 1 93 3 243 1 279 1 278 1 57 1 254 1 179 3 284 3 246 3 167 3 48 1 269 6 383 2 
248 1 341 16 152 1 228 1 207 1 229 3 279 2 326 4 3 3 278 7 111 1 57 1 254 3 284 5 179 5 315 1 316 18 187 1 353 2 289 3 218 1 93 34 243 5 222 3 297 5 299 1 74 3 246 5 102 1 167 5 268 5 48 1 269 10 383 12 
341 4 228 1 207 1 326 1 278 2 111 1 57 1 254 1 284 1 179 1 316 4 187 1 289 1 353 1 93 8 297 1 74 1 246 1 166 1 268 1 167 1 269 2 383 2 
341 6 228 1 207 1 278 2 326 2 3 1 111 1 57 1 254 1 284 2 179 2 316 5 187 1 353 1 289 1 93 11 243 1 222 1 297 2 299 1 74 1 246 2 166 1 102 1 268 1 167 2 269 4 383 3 
341 9 228 1 207 1 229 2 326 1 3 2 278 3 279 1 111 1 345 1 57 1 254 1 284 3 179 3 60 1 316 10 187 1 353 1 289 1 332 1 243 1 93 19 380 1 222 2 297 3 74 1 246 3 102 1 166 1 167 3 268 3 269 6 383 4 
341 10 228 1 207 1 229 1 279 1 326 1 3 2 278 3 111 1 345 1 57 1 254 1 284 3 179 3 60 1 316 7 187 1 353 1 289 1 332 1 243 2 93 17 380 1 222 2 297 3 74 1 246 3 102 1 166 1 167 3 268 2 269 6 383 5 
341 4 228 1 207 1 326 1 278 2 111 1 57 1 254 1 284 1 179 1 316 4 187 1 289 1 353 1 93 8 297 1 74 1 246 1 166 1 268 1 167 1 269 2 383 2 
341 6 229 2 326 1 3 2 278 1 345 1 57 1 284 1 179 1 60 1 316 6 187 1 332 1 243 1 93 12 380 1 222 2 297 2 74 1 246 1 166 1 167 1 268 2 269 2 383 2 
341 10 228 1 207 1 229 1 326 1 3 2 278 3 279 2 111 1 345 1 57 1 254 1 284 4 179 4 60 1 316 8 187 1 353 1 289 1 332 1 243 2 93 18 380 1 222 2 297 3 74 1 246 4 166 1 102 1 167 4 268 2 269 8 383 5 
341 9 229 2 326 1 3 3 278 3 279 2 345 1 57 1 284 4 179 4 60 1 316 7 187 1 332 1 243 3 93 16 380 1 222 3 297 3 74 1 246 4 166 1 167 4 268 2 269 8 48 1 383 6 
316 4 341 3 289 3 353 1 93 7 243 3 228 1 207 2 278 3 297 1 254 3 268 1 383 6 
341 10 228 1 207 1 229 1 326 1 3 2 278 3 279 2 111 1 345 1 57 1 254 1 284 4 179 4 60 1 316 8 187 1 353 1 289 1 332 1 243 1 93 18 380 1 222 2 297 3 74 1 246 4 166 1 167 4 268 2 269 8 48 1 383 4 
304 1 223 1 39 1 260 1 83 1 247 1 35 1 
239 1 304 1 202 1 39 1 260 1 16 1 295 1 223 1 83 1 247 1 23 1 35 1 
361 1 327 1 129 1 328 1 22 1 7 1 364 1 116 1 292 1 64 1 95 1 
361 1 39 1 260 2 292 1 94 1 327 1 232 1 346 1 328 1 369 1 22 1 7 1 116 1 247 2 8 1 64 1 329 1 35 1 
50 1 306 1 39 2 260 2 354 1 292 1 94 1 327 2 232 2 346 1 328 1 369 1 22 1 285 1 7 1 236 1 62 1 116 3 247 2 8 1 64 1 329 2 35 1 
50 1 306 1 39 2 260 2 354 1 153 1 292 2 94 1 327 2 232 2 328 2 369 1 22 1 285 1 7 1 236 1 62 1 116 3 247 2 8 1 64 2 329 2 35 1 330 1 
361 1 172 1 306 1 107 2 133 1 310 1 113 1 327 1 232 1 212 2 328 2 58 1 369 1 7 1 285 1 116 4 236 1 371 1 64 2 329 1 181 1 13 1 215 1 39 1 15 1 260 1 354 1 292 2 144 1 73 1 22 1 247 1 24 1 
361 1 172 1 215 1 15 1 107 2 354 1 292 3 67 1 327 1 113 1 212 2 58 1 328 3 22 1 285 1 7 1 236 1 116 4 371 1 64 3 329 1 330 1 
328 1 22 1 7 1 292 1 64 1 72 1 
361 2 65 1 51 1 292 7 162 1 334 1 72 1 327 2 142 1 59 1 328 6 282 1 115 1 22 3 100 1 7 2 146 1 235 1 116 3 64 7 329 1 
341 3 105 1 149 1 207 1 111 1 346 1 254 1 6 2 7 1 116 1 64 1 8 1 316 3 260 2 353 1 159 1 219 1 22 1 167 2 268 1 269 4 228 1 278 2 327 1 232 1 33 1 328 1 369 1 179 2 284 2 235 1 329 1 35 2 185 1 39 1 289 1 331 2 292 1 93 6 191 1 94 1 44 1 297 1 382 1 246 2 247 2 383 2 
172 1 361 1 324 1 174 1 107 3 29 1 151 2 113 1 212 3 58 1 328 1 313 1 116 2 371 1 64 1 86 1 372 2 257 2 88 2 215 2 184 1 15 1 90 1 375 1 292 1 67 1 71 1 169 1 
292 2 72 1 327 1 328 2 138 1 22 2 100 1 7 1 235 1 116 2 371 1 64 2 329 1 
361 1 292 4 95 1 129 1 327 1 328 4 22 1 7 1 235 1 116 1 119 1 64 4 330 1 
206 1 354 1 292 2 96 1 334 1 327 1 142 1 347 1 328 2 22 2 7 1 116 1 64 2 329 1 
361 1 203 1 328 1 22 1 7 1 292 1 75 1 64 1 9 1 193 1 
65 1 327 1 328 2 282 1 22 1 7 1 116 1 292 2 235 1 64 2 199 1 
361 1 65 1 51 1 354 1 292 5 95 1 162 1 129 1 327 2 328 4 22 2 7 2 235 1 116 3 119 1 64 5 
361 1 65 1 354 1 134 1 292 5 95 1 162 1 129 1 327 2 328 4 22 2 7 2 235 1 116 3 119 1 64 5 
361 1 39 1 260 2 153 1 292 1 94 1 327 1 232 1 328 1 369 1 22 1 7 1 116 1 247 2 8 1 64 1 329 1 35 1 
354 1 292 1 334 1 327 1 142 1 328 1 115 1 22 2 100 1 7 1 116 1 64 1 329 1 
39 1 240 1 335 1 259 1 260 1 247 1 302 1 157 1 221 1 
348 1 302 1 237 1 
251 1 157 1 302 1 35 1 221 1 
172 1 50 1 306 1 204 1 15 1 107 2 251 2 221 2 322 1 262 1 212 2 58 1 313 1 62 1 348 1 302 1 157 2 237 1 35 1 
12 1 352 1 364 1 11 1 
12 1 194 1 307 1 352 1 4 1 11 1 37 1 
194 1 293 1 303 1 
340 1 307 1 352 1 161 1 4 1 194 1 99 1 197 1 37 1 11 1 
12 1 194 2 307 1 352 1 109 1 227 1 4 2 11 1 37 1 
12 1 307 1 91 1 161 1 4 1 193 1 194 1 225 1 75 1 272 1 37 1 
12 1 194 1 307 1 161 1 4 1 11 1 37 1 
194 1 307 1 352 1 161 1 4 1 11 2 37 1 
12 1 307 2 374 1 66 1 161 1 4 2 194 2 112 1 11 1 37 2 
140 1 12 2 307 1 352 1 363 1 249 1 227 2 161 1 4 3 194 3 225 1 11 1 37 1 
12 1 307 1 352 1 91 1 41 1 227 1 161 1 4 2 193 1 194 2 75 2 9 1 11 1 37 1 200 1 
140 1 12 2 307 2 352 1 109 1 227 2 161 1 4 4 97 1 194 4 225 1 11 1 37 2 
12 1 194 1 307 1 352 1 161 1 4 1 11 1 37 1 
140 1 12 2 340 2 307 1 352 2 227 2 4 3 194 3 99 1 225 1 197 1 11 2 37 1 
12 1 307 1 352 1 308 1 227 1 161 1 4 2 194 2 281 1 213 1 11 1 37 1 
340 1 307 1 352 1 291 1 161 1 4 1 194 1 99 1 37 1 11 1 
12 2 82 1 46 2 366 1 
194 1 307 1 168 1 161 1 4 1 37 1 
12 1 194 2 307 1 352 1 249 1 227 1 161 1 4 2 11 1 37 1 
49 1 
12 1 194 1 307 1 352 1 161 1 4 1 11 1 37 1 
12 1 307 1 352 1 249 1 227 1 161 1 4 3 194 3 156 1 37 1 11 1 
12 1 140 1 340 1 225 1 
12 1 11 1 

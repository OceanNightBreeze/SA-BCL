#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (53,91,184,239,254) (113,207) (113,207) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 1 129 1 255 1 238 9 314 2 222 2 338 1 360 1 131 5 2 1 73 2 225 4 103 2 344 1 227 3 205 1 140 2 165 6 36 9 300 2 350 1 118 1 327 1 19 1 86 1 284 2 25 1 91 1 
288 1 129 1 255 1 238 9 314 2 222 2 338 1 360 1 131 5 2 1 73 2 225 4 103 2 344 1 227 3 205 1 140 2 165 6 36 9 300 2 350 1 118 1 327 1 19 1 86 1 284 2 25 1 91 1 
288 1 129 1 255 1 238 10 314 2 222 2 338 1 360 1 131 6 2 1 73 2 225 5 103 2 344 1 227 4 205 1 140 2 165 7 36 10 300 2 350 1 118 1 327 1 19 1 86 1 284 2 25 1 91 1 
288 1 129 1 255 1 238 7 314 2 222 2 338 1 360 1 131 4 2 1 73 2 225 3 103 2 344 1 227 2 205 1 140 1 165 4 36 7 300 2 118 1 327 1 19 1 86 1 284 2 25 1 91 1 
205 1 140 2 238 4 165 3 36 4 300 1 222 1 360 1 350 1 118 1 131 3 73 1 225 2 86 1 103 1 284 1 344 1 227 1 
129 1 207 1 238 1 314 1 36 1 300 1 103 1 113 1 284 1 91 1 249 1 360 1 
205 1 288 1 238 3 165 1 36 3 314 1 300 2 360 1 131 2 225 1 86 1 284 2 227 1 
205 1 140 2 288 1 255 1 238 9 165 7 36 9 221 1 314 1 300 2 222 1 360 1 17 1 350 1 118 1 131 5 73 1 225 4 86 1 103 1 344 1 25 1 284 2 227 3 
205 1 140 2 288 1 255 1 238 9 165 7 36 9 221 1 314 1 300 2 222 1 360 1 17 1 350 1 118 1 131 5 73 1 225 4 86 1 103 1 344 1 25 1 284 2 227 3 
157 1 361 1 310 1 
157 1 304 2 23 1 
72 2 164 1 76 2 181 2 48 2 89 2 92 1 188 2 
126 1 334 1 291 1 99 1 261 1 202 1 101 1 72 3 76 2 365 2 297 1 181 2 48 2 228 1 6 1 164 1 11 1 80 1 12 1 208 1 274 1 14 1 248 2 82 1 373 1 114 1 116 2 188 3 145 1 18 1 214 2 280 1 167 1 216 2 89 2 330 1 92 1 
72 1 164 1 343 1 76 1 181 1 48 1 89 1 250 1 188 1 34 1 
9 1 124 1 219 1 320 1 257 1 347 1 188 1 45 1 157 1 30 1 72 1 343 1 181 1 310 1 
9 2 124 1 219 1 257 2 188 1 45 1 157 1 30 1 72 1 76 1 343 1 89 1 48 1 181 1 310 1 
9 1 257 1 42 1 141 1 106 1 
157 1 9 2 220 1 257 2 42 1 141 1 310 1 115 1 
9 1 257 1 141 1 
9 1 164 1 257 1 42 1 258 1 250 1 188 1 72 1 343 1 76 1 89 1 48 1 181 1 34 1 
157 1 
157 1 9 2 299 1 257 2 42 1 141 1 310 1 115 1 
138 1 77 1 50 1 9 5 270 1 171 1 257 5 42 2 66 1 141 2 115 1 348 1 186 2 157 1 210 1 349 2 87 1 203 2 310 1 
313 1 72 3 76 3 89 1 181 3 48 3 92 1 188 3 
72 1 343 1 76 1 181 1 48 1 250 1 188 1 
376 1 72 1 235 1 343 1 76 1 181 1 48 1 89 1 188 1 
124 1 313 1 219 1 334 1 257 1 291 1 173 1 99 1 261 1 45 1 30 1 101 1 72 4 160 1 76 3 343 1 365 1 297 1 181 3 48 3 228 1 6 1 51 1 9 1 11 1 164 1 12 1 208 1 14 1 82 1 248 1 373 1 114 1 116 1 188 4 18 1 235 1 214 1 280 1 167 1 216 2 89 2 330 1 92 1 
211 1 72 2 313 1 76 1 181 2 48 1 347 1 92 1 188 2 
9 1 51 1 124 1 313 2 219 1 257 1 173 1 188 3 45 1 157 1 30 1 235 1 72 3 166 1 343 1 76 3 89 1 48 3 181 3 
313 1 188 2 235 1 72 2 175 1 76 2 89 1 48 2 181 2 108 1 
291 1 248 1 82 1 114 1 261 1 188 1 101 1 72 1 214 1 167 1 365 1 6 1 330 1 228 1 92 1 
109 1 291 1 248 1 261 1 188 1 101 1 72 1 214 1 167 1 365 1 49 1 6 1 330 1 228 1 92 1 
334 1 339 1 224 1 202 2 175 2 341 1 297 1 296 1 231 1 108 2 206 1 208 1 209 2 14 1 373 1 116 4 117 1 18 1 213 1 280 2 59 1 216 2 331 1 149 1 
72 1 343 1 76 1 181 1 48 1 45 1 188 1 169 1 
361 1 92 1 
188 2 376 1 72 2 235 1 76 1 181 2 89 1 48 1 92 2 
175 1 209 1 108 1 
291 1 248 1 82 1 114 1 261 1 188 1 101 1 72 1 214 1 236 1 167 1 365 1 228 1 6 1 330 1 92 1 
345 1 313 2 173 1 144 1 347 1 188 5 211 1 72 5 235 1 76 4 48 4 181 5 89 1 92 1 
72 2 343 1 76 2 181 2 48 2 169 1 250 1 188 2 
313 1 291 1 173 1 82 1 248 1 114 1 261 1 188 2 101 1 72 2 175 1 214 1 167 1 76 1 365 1 48 1 181 1 228 1 330 1 6 1 
324 1 366 1 44 1 
324 1 301 1 44 1 
324 1 301 1 44 1 
324 1 301 1 44 1 
324 1 44 1 
324 1 44 1 
26 1 266 1 
26 1 266 1 
26 1 266 1 
324 1 366 1 44 1 
324 1 366 1 44 1 
324 1 41 1 44 1 
324 2 57 1 362 1 26 1 266 1 44 2 
78 1 9 2 64 1 257 2 81 2 185 1 372 1 275 1 154 2 321 1 240 2 44 2 187 2 157 1 324 2 362 1 192 1 38 2 158 3 
41 1 257 1 359 1 240 1 44 1 72 2 317 1 158 1 76 2 48 2 181 2 161 1 229 1 9 1 81 1 275 1 16 1 187 1 188 2 324 1 58 1 38 1 120 1 92 1 
73 1 222 1 103 1 
73 1 103 1 249 1 
60 1 222 2 103 3 100 1 107 1 249 1 
222 1 103 2 100 1 107 1 249 1 194 1 
222 1 103 2 100 1 107 2 249 1 
257 5 42 4 259 1 68 1 69 1 157 2 342 1 341 1 47 1 203 1 296 1 4 1 161 1 369 2 77 2 50 1 138 3 9 5 141 1 115 1 15 2 186 1 304 3 349 1 58 1 215 1 23 1 120 1 381 2 310 1 331 1 149 1 
257 2 42 2 258 1 157 1 72 1 343 1 76 1 48 1 181 1 106 1 34 1 9 2 164 1 141 1 142 1 250 1 188 1 281 1 89 1 310 1 356 1 
257 3 42 2 259 1 68 1 69 1 157 3 341 1 47 1 203 1 296 1 369 2 138 3 77 2 9 3 270 1 15 1 186 1 349 1 304 4 58 1 215 1 23 2 381 2 310 1 331 1 149 1 
257 4 42 3 259 2 68 1 69 1 156 1 157 4 341 2 47 1 203 1 296 2 136 1 369 4 138 5 77 4 9 4 270 1 15 2 186 1 304 7 349 1 58 2 215 1 23 3 353 1 381 4 310 1 331 2 149 2 
228 1 261 1 
101 1 146 2 263 1 367 1 228 3 261 1 
146 1 361 1 228 1 
228 1 56 1 
63 1 
101 1 228 1 261 1 
201 1 228 1 
195 1 200 1 27 1 337 2 155 1 116 7 339 3 202 4 191 1 341 1 251 1 280 3 351 1 119 1 59 2 135 1 331 1 
195 1 200 1 27 1 337 2 155 1 116 7 339 3 202 4 191 1 341 1 251 1 280 3 351 1 119 1 59 2 135 1 331 1 
195 1 200 1 27 1 337 2 155 1 116 7 339 3 202 4 191 1 341 1 279 1 251 1 280 3 351 1 119 1 59 2 135 1 331 1 
195 2 151 1 200 1 334 1 27 1 259 3 337 3 155 5 339 10 340 1 130 1 202 16 264 3 341 4 244 1 134 4 297 1 296 3 135 1 182 1 8 1 373 1 116 31 18 1 191 2 251 1 351 2 280 15 119 2 59 5 216 2 252 1 331 4 149 3 
195 1 200 1 334 2 27 1 337 2 373 2 155 1 116 9 339 4 202 5 18 2 74 1 191 1 341 1 351 1 280 4 119 1 244 1 59 3 380 1 216 4 297 2 135 1 331 1 
287 1 238 2 314 1 98 1 222 1 153 1 358 1 360 1 131 1 294 1 73 1 177 1 363 1 365 1 103 2 368 1 6 1 205 1 165 1 36 2 300 1 248 1 249 1 84 1 86 1 214 1 88 1 60 1 284 1 330 1 
238 3 314 1 98 1 222 1 358 1 131 1 294 1 315 1 73 1 177 1 363 1 365 1 103 2 162 1 368 1 6 1 205 1 165 2 36 3 300 1 248 1 112 1 249 1 84 1 86 1 214 1 60 1 88 1 284 1 330 1 
238 2 314 1 98 1 222 1 358 1 131 1 294 1 315 1 73 1 365 1 103 2 368 1 6 1 205 1 165 2 36 2 248 1 112 1 249 1 84 1 86 1 214 1 88 1 60 1 330 1 
198 1 238 1 314 2 98 2 152 1 261 1 294 2 242 1 365 1 162 1 228 1 6 1 52 1 346 1 36 1 300 1 248 1 326 1 214 1 167 1 88 2 284 1 330 1 
238 1 314 1 98 1 222 1 153 1 358 1 360 1 294 1 315 1 73 1 177 1 363 1 365 1 103 2 368 1 6 1 36 1 300 1 248 1 249 1 84 1 214 1 88 1 60 1 284 1 330 1 
290 1 
0 1 289 1 152 1 335 1 45 1 157 2 242 1 243 1 46 1 203 1 343 1 104 2 3 1 6 1 7 1 50 1 9 5 248 2 115 3 347 1 212 2 304 2 349 1 214 2 215 1 167 2 23 2 308 1 310 1 123 2 218 2 124 1 65 2 219 1 257 5 28 1 261 1 70 1 30 1 132 2 72 1 75 2 365 2 181 1 228 1 77 2 138 2 320 1 273 1 141 6 186 1 188 1 190 1 330 1 285 4 
218 1 124 1 0 1 219 1 289 1 257 3 70 1 45 1 30 1 72 1 343 1 181 1 7 1 9 3 299 1 320 1 141 2 115 1 347 1 188 1 190 1 285 2 
124 1 0 1 219 1 289 1 257 3 70 1 45 1 30 1 157 1 72 1 75 1 343 1 181 1 7 1 9 3 299 1 320 1 141 1 115 1 347 1 188 1 190 1 310 1 285 3 
218 1 124 1 0 1 219 1 289 1 257 3 70 1 45 1 30 1 157 1 72 1 75 1 343 1 181 1 7 1 9 3 299 1 320 1 141 2 115 1 347 1 188 1 212 1 190 1 310 1 285 3 
197 1 0 1 289 1 45 1 157 5 46 1 203 1 343 1 104 2 5 1 7 1 50 1 9 5 299 1 115 3 347 1 212 4 349 1 23 2 310 5 123 2 218 4 124 1 65 2 219 1 257 5 70 1 30 1 132 2 72 1 176 1 75 4 181 1 138 1 77 1 320 1 273 1 141 7 143 1 188 1 186 1 190 1 283 1 285 6 
0 1 289 1 45 1 157 2 46 1 203 1 343 1 104 2 7 1 50 1 9 4 115 2 347 1 349 1 304 2 212 2 23 2 308 1 310 1 123 2 218 2 124 1 65 2 219 1 257 4 70 1 30 1 132 2 72 1 75 2 181 1 138 1 77 1 320 1 273 1 141 4 188 1 186 1 190 1 285 4 
218 2 124 1 65 2 0 1 219 1 289 1 257 4 70 1 45 1 157 1 30 1 132 2 72 1 46 1 176 1 75 2 203 1 343 1 104 2 181 1 7 1 77 1 138 1 50 1 9 4 320 1 273 1 141 4 115 2 143 1 347 1 188 1 186 1 212 2 349 1 190 1 23 2 283 1 310 1 285 4 123 2 
218 2 124 1 65 2 0 1 219 1 289 1 257 4 70 1 45 1 157 1 30 1 132 2 72 1 46 1 176 1 75 2 203 1 343 1 104 2 181 1 7 1 77 1 138 1 50 1 9 4 320 1 273 1 141 4 115 2 143 1 347 1 188 1 186 1 212 2 349 1 190 1 23 2 283 1 310 1 285 4 123 2 
218 2 124 1 65 2 0 1 219 1 289 1 257 4 336 2 70 1 45 1 157 1 30 1 132 2 72 1 75 2 203 1 343 1 181 1 7 1 138 1 77 1 50 1 9 4 232 1 320 1 273 1 141 4 115 2 347 1 188 1 186 1 212 2 304 2 349 1 190 1 39 2 24 1 283 1 310 1 285 4 355 1 
218 3 197 1 124 1 65 2 0 1 219 1 289 1 257 4 70 1 45 1 157 1 30 1 132 2 72 1 46 1 176 1 75 3 203 1 343 1 104 2 181 1 7 1 77 1 138 1 50 1 9 4 320 1 273 1 141 5 115 2 143 1 347 1 186 1 188 1 349 1 212 3 190 1 23 2 283 1 310 1 285 5 123 2 
218 3 197 1 124 1 65 2 0 1 219 1 289 1 257 4 70 1 45 1 157 1 30 1 132 2 72 1 46 1 176 1 75 3 203 1 343 1 104 2 181 1 7 1 77 1 138 1 50 1 9 4 320 1 273 1 141 5 115 2 143 1 347 1 186 1 188 1 349 1 212 3 190 1 23 2 283 1 310 1 285 5 123 2 
0 1 289 1 336 2 45 1 157 1 203 1 343 1 7 1 50 1 9 4 115 2 347 1 349 1 304 2 212 2 308 1 310 1 355 1 218 2 124 1 65 2 219 1 257 4 70 1 30 1 132 2 72 1 75 2 181 1 77 1 138 1 320 1 273 1 141 4 188 1 186 1 190 1 39 2 285 4 
334 1 208 1 209 1 14 1 373 1 155 1 116 2 339 1 117 1 202 2 18 1 175 1 213 1 341 1 216 2 297 1 296 1 108 1 
206 1 334 1 208 1 209 1 14 1 373 1 116 2 339 1 117 1 18 1 175 1 280 2 59 1 216 2 297 1 331 1 149 1 108 1 
334 1 208 1 209 2 259 1 14 1 373 1 155 1 116 4 339 2 117 1 202 2 18 1 175 2 341 1 280 2 59 1 216 2 297 1 296 1 331 1 149 1 108 2 
334 1 172 1 208 1 209 1 14 1 373 1 155 1 116 2 339 1 202 2 18 1 175 1 213 1 341 1 216 2 297 1 296 1 108 1 
206 1 334 1 172 1 208 1 209 1 14 1 373 1 116 2 339 1 18 1 175 1 280 2 59 1 216 2 297 1 331 1 149 1 108 1 
334 1 172 1 208 1 209 2 259 1 14 1 373 1 155 1 116 4 339 2 202 2 18 1 175 2 341 1 280 2 59 1 216 2 297 1 296 1 331 1 149 1 108 2 
334 1 208 1 209 2 259 1 14 1 373 1 155 1 116 4 339 2 202 2 18 1 175 2 341 1 280 2 59 1 216 2 297 1 296 1 331 1 149 1 108 2 
334 1 291 1 99 1 261 1 202 1 101 1 72 1 365 1 297 1 6 1 228 1 208 1 12 1 274 1 82 1 248 1 14 1 114 1 373 1 116 2 188 1 18 1 214 1 167 1 280 1 216 2 330 1 92 1 
334 1 291 1 261 1 202 1 101 1 72 1 365 1 49 1 297 1 6 1 228 1 109 1 208 1 12 1 274 1 248 1 14 1 373 1 116 2 188 1 325 1 18 1 214 1 167 1 280 1 216 2 330 1 92 1 
256 1 334 1 208 1 209 2 259 1 14 1 373 1 155 1 116 4 339 2 202 2 18 1 175 2 341 1 280 2 59 1 216 2 297 1 296 1 331 1 149 1 108 2 
287 1 334 1 291 1 259 1 99 1 155 1 261 1 339 2 202 2 101 1 72 1 175 2 341 1 365 1 296 1 297 1 6 1 228 1 108 2 208 1 209 2 82 1 248 1 14 1 114 1 373 1 116 4 188 1 18 1 214 1 280 2 59 1 216 2 331 1 330 1 122 1 149 1 
94 1 256 1 334 1 259 1 155 1 339 1 202 2 72 1 175 1 341 1 76 1 48 1 297 1 181 1 296 1 108 1 208 1 209 1 14 1 373 1 116 3 188 1 18 1 235 1 280 1 216 2 89 1 331 1 149 1 
334 1 200 1 27 1 337 1 339 2 202 3 361 1 175 1 341 1 297 1 135 1 108 1 208 1 209 1 14 1 373 1 116 6 117 1 18 1 191 1 351 1 280 3 59 2 216 2 331 1 92 2 
256 1 334 2 259 2 155 1 339 2 202 8 175 11 264 3 341 2 364 1 134 3 297 2 296 2 298 1 8 1 108 4 204 1 12 1 208 1 274 1 209 11 14 2 373 2 116 14 18 2 280 6 59 1 216 4 252 1 90 1 331 1 149 1 92 1 
332 1 313 1 256 1 334 1 291 1 173 1 261 1 202 1 101 1 72 2 365 1 76 1 297 1 181 1 48 1 228 1 6 1 230 1 108 1 35 1 208 1 12 1 274 1 82 1 248 1 14 1 114 1 373 1 116 2 188 2 18 1 214 1 167 1 236 1 280 1 216 2 330 1 92 1 
200 1 334 3 291 2 99 2 155 1 339 5 202 11 101 2 341 4 343 1 48 1 297 3 296 2 6 2 108 6 163 1 55 1 12 1 208 3 209 6 248 1 14 3 114 2 116 22 18 3 214 1 351 1 167 1 307 2 59 4 216 6 122 2 313 1 256 1 27 1 173 1 259 2 261 2 72 3 175 6 365 1 76 1 181 1 135 1 32 1 228 2 79 2 274 1 82 2 276 2 373 3 188 3 378 1 191 1 280 11 330 2 331 4 149 2 92 1 
333 1 287 1 313 1 334 2 172 1 152 1 261 2 202 1 315 1 242 1 72 1 133 1 76 1 365 7 181 1 48 1 297 2 268 1 6 2 228 3 208 2 12 1 274 1 248 8 14 2 373 2 116 2 188 1 117 1 145 2 18 2 214 8 306 1 167 2 280 1 216 4 40 1 286 1 330 2 
256 1 334 1 259 1 357 1 339 1 202 1 72 1 175 1 341 1 76 1 48 1 297 1 181 1 296 1 108 1 208 1 209 1 14 1 373 1 116 3 188 1 18 1 235 1 280 2 59 1 216 2 89 1 331 1 149 1 
253 2 127 2 334 2 259 3 155 3 339 6 202 9 264 1 341 3 134 2 297 2 296 3 8 1 110 1 371 1 373 2 116 19 83 1 18 2 20 1 22 1 280 10 352 1 59 3 380 1 216 4 121 1 252 1 331 3 149 3 
253 4 127 1 96 1 128 1 334 3 259 3 260 1 155 2 339 4 202 14 264 2 341 3 244 2 134 2 297 3 296 3 8 2 370 1 110 1 371 2 373 3 116 26 83 2 18 3 280 12 352 1 59 2 380 1 282 1 216 6 121 1 331 2 237 1 149 2 
96 1 334 3 200 1 1 1 337 1 155 4 339 8 202 20 341 5 244 1 296 4 297 3 8 3 110 1 116 41 18 3 351 1 22 1 59 4 352 1 216 6 252 1 121 1 253 4 127 1 128 1 27 1 259 4 260 1 264 3 134 4 135 1 370 1 371 1 373 3 83 2 191 1 280 21 380 1 282 1 331 5 149 4 237 1 
253 4 127 1 96 1 128 1 200 1 334 4 27 1 1 1 259 4 337 1 260 1 155 3 339 7 202 20 264 3 341 5 244 2 134 4 297 4 296 4 135 1 8 3 370 1 110 1 371 1 373 4 116 38 83 2 18 4 191 1 22 1 351 1 280 18 352 1 59 4 282 1 380 1 216 8 121 1 252 1 331 4 237 1 149 3 
253 4 127 1 96 1 128 1 200 1 334 2 27 1 259 7 337 1 260 1 155 7 339 14 202 27 264 4 341 8 244 1 364 2 134 4 297 2 296 7 135 1 8 2 370 1 110 1 371 1 373 2 116 52 83 1 18 2 191 1 351 1 280 25 352 1 59 7 282 1 380 1 216 4 121 1 252 2 331 8 237 1 149 7 
78 1 9 1 64 1 257 1 81 1 372 1 275 1 154 1 321 1 240 1 44 1 187 1 157 1 324 1 362 1 192 1 38 1 158 2 
78 1 9 1 64 1 257 1 81 1 372 1 275 1 154 1 321 1 240 1 44 1 187 1 157 1 324 1 362 1 192 1 38 1 158 2 
78 1 9 1 64 1 257 1 81 1 372 1 275 1 154 1 321 1 240 1 44 1 187 1 157 1 324 1 362 1 192 1 38 1 158 2 
57 1 366 1 148 1 
57 1 366 1 148 1 
193 1 301 1 
57 1 193 1 301 1 
317 1 229 1 
64 1 41 1 257 1 42 1 154 1 359 1 240 1 44 1 72 2 317 1 158 1 76 2 48 2 181 2 161 1 229 1 9 1 81 1 277 1 16 1 188 2 187 1 324 1 58 1 38 1 120 1 92 1 
78 1 324 1 362 1 31 1 192 1 38 1 81 1 240 1 44 1 187 1 
41 1 16 1 
374 1 324 1 246 1 85 1 38 1 81 1 240 1 44 1 187 1 
366 1 148 1 
57 1 193 1 301 1 
333 1 95 1 256 1 334 1 261 1 202 1 72 2 133 1 245 1 365 2 181 2 297 1 105 1 6 1 228 1 208 1 54 1 12 1 274 1 248 2 14 1 373 1 116 2 188 2 375 1 145 2 18 1 214 2 280 1 216 2 330 1 
287 1 222 1 248 2 358 1 249 1 315 1 294 1 316 1 73 1 84 1 318 1 214 2 177 1 60 1 103 2 365 2 330 1 6 1 137 1 
272 1 222 1 248 1 358 1 249 1 315 1 294 1 73 1 84 1 214 1 177 1 60 1 103 2 365 1 6 1 330 1 137 1 
52 1 152 1 248 1 261 1 262 1 294 1 242 1 318 1 214 1 167 1 365 1 330 1 6 1 228 1 
222 1 248 1 358 1 249 1 315 1 294 1 316 1 73 1 84 1 318 1 214 1 177 1 60 1 103 2 365 1 330 1 6 1 137 1 
247 1 
138 1 157 1 77 1 210 1 361 1 171 1 310 1 
257 1 157 2 46 1 203 1 104 1 77 1 138 1 50 1 9 1 141 1 115 1 186 1 349 1 304 1 23 1 310 1 123 1 
287 1 201 2 157 8 101 3 341 2 203 4 295 2 296 2 6 3 50 4 9 5 13 2 248 3 303 2 115 3 56 3 210 1 349 4 304 12 305 2 214 3 215 2 167 1 23 6 309 2 310 2 125 1 219 2 171 1 257 5 259 2 28 1 29 1 261 3 265 1 365 3 267 2 367 1 228 10 33 2 369 6 138 9 77 8 141 5 276 2 233 1 322 1 186 4 146 2 147 2 381 6 330 4 331 2 149 2 
128 1 257 1 259 2 28 1 260 1 157 5 264 1 341 2 203 2 134 1 296 2 8 1 369 5 138 8 50 2 77 5 9 1 370 1 141 1 115 1 186 2 304 6 349 2 305 2 215 1 23 3 282 1 309 1 62 1 381 5 310 2 331 2 237 1 149 2 93 1 
257 1 200 1 258 1 72 1 176 1 341 2 203 1 343 1 76 1 48 1 181 1 32 1 34 1 50 1 77 2 138 2 9 1 164 1 250 1 188 1 186 1 349 1 305 2 191 1 351 1 309 1 89 1 331 1 
50 1 77 1 138 1 171 1 186 1 210 1 349 1 157 1 203 1 310 1 
77 5 138 5 259 2 276 1 304 10 157 5 305 2 341 2 23 5 309 1 296 2 381 5 331 2 149 2 369 5 
157 1 9 1 257 1 141 1 310 1 115 1 
257 3 335 1 152 1 28 2 29 2 261 1 242 1 203 2 365 4 3 1 319 1 6 1 228 1 50 1 138 2 77 2 9 3 270 1 141 4 248 4 115 2 186 2 322 1 349 2 214 4 167 2 215 2 330 1 150 1 
334 1 291 1 99 1 261 1 101 1 72 3 365 1 76 2 297 1 181 2 48 2 6 1 228 1 164 1 11 1 12 1 208 1 248 1 82 1 14 1 114 1 373 1 116 1 188 3 18 1 214 1 280 1 167 1 216 2 89 2 330 1 92 1 
77 2 50 1 138 1 337 1 28 1 186 1 304 4 349 1 157 4 215 1 23 2 203 1 381 2 310 2 369 2 
38 1 61 1 240 1 
199 1 38 1 240 1 
199 1 38 1 240 1 
199 1 38 1 240 1 
38 1 240 1 
324 1 44 1 
38 1 61 1 240 1 
38 1 61 1 240 1 
78 1 196 1 317 1 38 1 240 1 
200 1 334 2 27 1 337 1 373 2 116 8 155 1 339 3 202 4 18 2 191 1 341 1 280 4 351 1 59 2 244 1 216 4 297 2 135 1 331 1 
200 1 27 1 337 1 116 6 339 2 202 3 361 1 191 1 341 1 280 3 351 1 59 2 135 1 331 1 
312 1 334 1 259 1 373 1 116 4 155 1 339 2 202 2 18 1 341 1 280 2 59 1 216 2 297 1 296 1 331 1 149 1 
259 1 116 7 155 1 339 2 202 3 264 1 341 1 280 4 59 1 134 2 252 1 296 1 331 1 149 1 8 1 
200 1 334 2 27 1 259 2 337 1 155 4 339 9 202 11 71 1 264 2 341 3 364 1 244 2 134 2 296 2 297 2 135 1 204 1 373 2 116 23 18 2 191 2 351 2 280 12 59 5 216 4 252 1 331 3 149 2 
280 1 134 1 116 1 
202 1 264 1 116 1 
312 1 334 1 259 1 276 1 373 1 116 6 155 1 339 3 202 3 18 1 341 1 280 3 59 2 216 2 297 1 296 1 331 1 149 1 
128 1 334 1 259 2 260 1 155 1 339 2 202 6 264 1 341 2 134 1 297 1 296 2 8 1 370 1 373 1 116 12 18 1 280 6 59 1 380 1 282 1 216 2 331 2 237 1 149 2 
200 1 116 6 155 1 339 2 202 3 191 1 341 1 280 3 351 1 59 1 331 1 
334 1 27 1 373 1 155 1 116 3 339 2 202 1 71 1 18 1 191 1 351 1 280 2 59 1 244 1 216 2 297 1 135 1 
334 1 200 1 373 1 155 2 116 10 339 5 202 5 18 1 191 2 341 2 351 2 280 5 59 3 380 1 216 2 297 1 32 1 331 2 
334 1 373 1 116 2 155 1 339 1 202 2 18 1 341 1 380 1 216 2 297 1 296 1 
334 1 259 1 373 1 116 4 155 1 339 2 202 2 18 1 341 1 280 2 59 1 380 1 216 2 297 1 296 1 331 1 149 1 
334 3 373 3 116 3 155 1 339 2 202 1 71 1 18 3 191 1 22 1 280 2 351 1 244 1 59 1 380 1 216 6 297 3 
312 1 151 1 200 2 334 5 27 1 259 3 337 1 155 5 339 12 340 1 202 16 71 1 264 3 341 5 244 2 134 4 297 5 296 3 135 1 182 1 8 1 373 5 116 34 18 5 191 3 351 3 280 18 22 1 59 7 380 1 216 10 252 1 331 5 149 3 
200 1 334 1 27 1 337 1 373 1 116 8 339 2 202 4 18 1 191 1 264 1 341 1 351 1 280 4 59 2 380 1 216 2 134 1 297 1 135 1 331 1 237 1 8 1 
312 1 200 1 334 2 27 1 259 1 337 1 155 1 339 3 202 6 264 1 341 2 134 2 297 2 296 1 135 1 8 1 373 2 116 11 18 2 191 1 351 1 280 5 59 2 380 1 216 4 252 1 331 1 237 1 
312 1 128 1 200 1 334 3 27 1 259 2 337 1 260 1 155 1 339 4 202 9 264 1 341 3 244 1 134 1 297 3 296 2 135 1 8 1 370 1 373 3 116 19 18 3 191 1 351 1 280 10 59 3 380 1 282 1 216 6 331 3 237 1 149 2 
312 1 128 1 200 1 334 3 27 1 259 2 337 1 260 1 155 2 339 5 202 10 264 1 341 3 244 1 134 1 297 3 296 2 135 1 8 1 370 1 373 3 116 17 18 3 191 1 351 1 280 7 59 3 380 1 282 1 216 6 331 2 237 1 149 1 
200 1 334 1 27 1 337 1 373 1 116 8 339 2 202 4 18 1 191 1 264 1 341 1 351 1 280 4 59 2 380 1 216 2 134 1 297 1 135 1 331 1 237 1 8 1 
128 1 334 1 259 2 260 1 155 1 339 2 202 6 264 1 341 2 134 1 297 1 296 2 8 1 370 1 373 1 116 12 18 1 280 6 59 1 380 1 282 1 216 2 331 2 237 1 149 2 
312 1 128 1 200 1 334 4 27 1 259 2 337 1 260 1 155 2 339 5 202 10 264 1 341 3 244 2 134 1 297 4 296 2 135 1 8 1 370 1 373 4 116 18 18 4 191 1 351 1 280 8 59 3 380 1 282 1 216 8 331 2 237 1 149 1 
128 1 334 4 259 3 260 1 155 3 339 6 202 9 264 1 341 3 244 2 134 1 297 4 296 3 8 1 370 1 373 4 116 16 18 4 280 7 22 1 59 3 380 1 282 1 216 8 331 2 237 1 149 2 
200 1 27 2 116 7 155 3 339 6 202 3 191 3 341 1 280 4 351 3 59 3 135 1 331 1 
128 1 200 1 334 4 27 1 259 2 337 1 260 1 155 1 339 4 202 10 264 1 341 3 244 2 134 1 297 4 296 2 135 1 8 1 370 1 373 4 116 18 18 4 191 1 351 1 280 8 22 1 59 3 380 1 282 1 216 8 331 2 237 1 149 1 
211 1 10 1 72 1 181 1 347 1 92 1 188 1 
189 1 67 1 223 1 278 1 354 1 
242 1 361 1 214 1 167 1 152 1 248 1 365 1 330 1 6 1 228 1 261 1 
313 1 291 1 248 1 82 1 261 1 188 2 101 1 72 2 214 1 167 1 76 1 365 1 48 1 181 1 228 1 330 1 6 1 92 1 
313 1 291 1 201 1 13 1 248 1 82 1 29 1 261 2 45 1 188 2 30 1 101 2 72 2 214 1 343 1 76 2 365 1 48 1 181 2 228 3 330 1 6 1 92 1 
313 1 291 1 201 1 29 1 261 2 45 1 30 1 101 2 72 2 365 2 76 2 343 1 49 1 181 2 48 1 6 1 228 3 183 1 13 1 248 2 188 2 214 2 330 1 92 1 
9 2 219 1 257 2 201 1 13 1 141 1 248 3 29 1 261 1 56 1 157 1 101 1 377 1 146 1 214 3 167 1 179 1 365 3 310 1 330 1 228 4 6 1 183 1 
9 2 219 1 257 2 201 1 13 1 141 1 248 3 29 1 261 1 56 1 157 1 101 1 146 1 214 3 167 1 365 3 267 1 310 1 330 1 228 4 6 1 183 1 
214 1 248 1 365 1 330 1 6 1 286 1 
333 1 287 1 292 1 248 7 261 2 145 1 315 1 101 1 214 7 306 1 37 1 167 2 365 6 40 1 367 1 286 1 268 1 228 3 6 2 330 3 311 1 
313 1 287 1 256 1 200 1 334 2 27 1 291 1 337 1 99 1 261 1 339 2 202 3 101 1 72 2 175 1 341 1 245 1 76 1 365 1 297 2 181 1 48 1 135 1 228 1 6 1 108 1 208 2 209 1 14 2 248 1 82 1 373 2 114 1 116 6 188 2 18 2 191 1 214 1 280 3 351 1 59 2 307 1 216 4 331 1 330 1 122 1 92 2 
219 1 171 1 257 3 42 1 157 1 203 2 365 1 267 1 228 2 33 1 138 1 77 1 50 2 9 3 141 2 248 1 303 1 115 1 56 1 186 2 322 1 210 1 349 2 146 1 147 1 214 1 167 1 310 1 
287 1 248 2 261 1 101 1 146 1 214 2 265 1 365 2 367 1 286 1 228 2 6 1 330 2 
287 1 152 1 248 4 261 1 242 1 214 4 379 1 167 1 365 4 330 1 228 1 6 1 183 1 
248 2 29 1 261 1 101 1 214 2 21 1 37 1 328 1 365 2 329 1 228 1 6 1 330 2 311 1 
73 1 214 1 167 1 103 1 248 1 365 1 358 1 330 1 6 1 249 1 
287 1 333 1 248 2 261 1 315 1 375 1 214 2 365 2 228 1 6 1 330 1 
287 1 333 1 152 1 248 5 29 1 261 2 242 1 214 5 379 1 167 1 306 1 365 4 268 1 228 3 6 2 330 2 
287 1 333 1 152 1 248 5 29 1 261 2 242 1 214 5 379 1 167 1 306 1 226 1 365 4 228 3 6 2 330 2 
313 1 291 1 248 1 261 1 188 2 101 1 72 2 214 1 167 1 76 1 365 1 48 1 181 1 49 1 228 1 330 1 6 1 92 1 
292 1 248 1 29 1 261 1 101 1 214 1 37 1 365 1 367 1 228 1 6 1 330 2 311 1 
95 1 54 1 111 1 43 1 188 1 72 1 180 1 181 1 105 1 
269 1 97 1 43 1 
111 1 180 1 43 1 174 1 92 1 
9 2 269 1 51 1 139 1 124 1 219 1 257 2 42 1 97 1 111 2 43 1 174 2 45 1 157 1 30 1 343 1 180 2 310 1 92 1 
131 1 205 1 361 1 86 1 
131 1 205 1 86 1 238 1 36 1 300 1 284 1 
238 1 314 1 98 1 
254 1 53 1 205 1 238 3 184 1 36 3 300 1 360 1 131 1 86 1 284 1 91 2 
131 1 205 1 140 1 86 1 165 1 238 2 36 2 300 1 284 1 
131 1 118 1 73 1 225 1 238 1 36 1 300 1 222 1 103 1 284 1 360 1 
131 1 86 1 238 1 36 1 300 1 284 1 360 1 
205 1 86 2 238 1 36 1 300 1 284 1 360 1 
238 2 36 2 300 2 360 1 241 1 131 1 86 1 284 2 217 1 168 1 
205 1 255 1 238 3 165 2 36 3 300 1 360 1 131 2 225 1 86 1 284 1 25 1 227 1 
205 1 238 2 165 1 36 2 300 1 222 1 249 1 360 1 323 1 131 1 73 1 86 1 60 1 103 2 284 1 
205 1 140 1 238 4 165 2 36 4 300 2 360 1 350 1 131 2 225 1 86 1 284 2 227 1 
131 1 205 1 86 1 238 1 36 1 300 1 284 1 360 1 
254 1 53 1 205 2 165 2 238 4 36 4 300 1 131 3 225 1 86 2 159 1 284 1 227 1 91 1 
205 1 238 2 165 1 36 2 221 1 300 1 360 1 131 1 86 1 178 1 284 1 170 1 
131 1 254 1 205 1 53 2 86 1 238 3 36 3 300 1 239 1 284 1 91 2 360 1 
293 1 131 2 234 1 271 2 
238 1 36 1 300 1 302 1 284 1 360 1 
131 1 205 1 255 1 86 1 165 1 238 2 36 2 300 1 284 1 360 1 
102 1 
131 1 205 1 86 1 238 1 36 1 300 1 284 1 360 1 
205 1 255 1 165 1 238 3 36 3 300 1 360 1 131 1 86 1 284 1 91 1 
131 1 225 1 159 1 227 1 
131 1 86 1 

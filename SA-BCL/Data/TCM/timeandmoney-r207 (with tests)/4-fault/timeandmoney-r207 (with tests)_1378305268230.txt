#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) (13,63) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) (13,63) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (23,172,237,296) (23,172,237,296) (23,172,237,296) 36 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
124 1 45 1 17 1 
24 1 45 1 329 2 
324 1 270 2 178 2 310 1 66 2 207 2 37 2 323 2 
324 1 105 1 274 1 325 1 144 1 327 1 126 1 259 1 234 1 330 1 280 2 174 1 282 1 332 1 308 1 150 2 37 2 98 2 266 1 196 1 39 1 178 2 310 1 117 1 16 2 66 3 181 1 289 1 41 1 159 1 68 2 270 2 250 1 253 1 141 1 207 2 323 3 
304 1 324 1 270 1 178 1 112 1 66 1 207 1 37 1 7 1 323 1 
198 1 17 1 233 1 286 1 66 1 155 1 228 1 304 1 45 1 46 1 37 1 97 1 323 1 38 1 
178 1 17 1 286 2 233 1 66 1 155 2 228 1 304 1 270 1 45 1 207 1 37 1 97 1 323 1 38 1 
182 1 56 1 34 1 286 1 155 1 
182 1 45 1 17 1 34 1 286 2 287 1 132 1 155 2 
182 1 286 1 155 1 
324 1 178 1 257 1 34 1 286 1 66 1 155 1 7 1 304 1 270 1 112 1 207 1 37 1 323 1 
45 1 
182 1 114 1 45 1 17 1 34 1 286 2 132 1 155 2 
279 2 17 1 34 2 286 5 170 1 155 5 303 1 315 1 204 1 127 1 182 2 45 1 187 2 129 2 251 1 205 1 238 1 95 1 132 1 
124 1 310 1 
178 1 310 2 66 2 192 1 270 1 139 1 207 1 37 2 323 2 
320 1 200 1 171 1 
196 1 310 1 325 1 117 1 16 1 327 1 259 1 66 1 181 1 79 1 330 1 68 1 280 1 308 1 141 1 323 1 
196 1 178 1 325 1 199 1 117 1 200 1 16 1 327 1 119 1 259 1 181 1 66 2 330 1 68 1 270 1 280 1 308 1 141 1 37 1 323 2 
270 3 178 3 310 1 199 1 207 1 66 3 37 3 323 3 
304 1 270 1 178 1 66 1 37 1 7 1 323 1 
304 1 192 1 270 1 178 1 139 1 66 1 207 1 37 1 323 1 
324 1 274 1 325 1 327 1 259 1 233 1 126 1 234 1 330 1 304 1 280 1 281 1 174 1 282 1 332 1 308 1 150 2 37 3 97 1 38 1 98 1 266 1 196 1 39 1 178 3 310 1 115 1 199 1 117 1 16 1 119 1 286 1 181 1 66 4 155 1 228 1 159 1 68 1 270 3 139 1 253 1 141 1 207 2 323 4 
316 1 270 1 178 1 46 1 310 1 199 1 66 2 37 2 323 2 
51 1 178 3 199 2 286 1 119 1 233 1 66 3 155 1 228 1 304 1 270 3 281 1 139 1 45 1 207 1 37 3 97 1 323 3 38 1 
178 2 199 1 200 1 66 2 270 2 139 1 320 1 207 1 37 2 323 2 
196 1 310 1 325 1 117 1 16 1 327 1 259 1 66 1 181 1 330 1 68 1 280 1 308 1 141 1 323 1 
196 1 267 1 310 1 325 1 117 1 16 1 327 1 66 1 181 1 68 1 280 1 47 1 308 1 141 1 323 1 
89 1 274 1 299 1 171 2 234 1 174 1 282 1 150 2 266 2 98 4 197 1 14 1 39 1 246 1 200 2 100 1 157 1 289 2 313 1 184 1 320 2 253 1 50 1 166 1 
304 1 270 1 224 1 178 1 66 1 37 1 38 1 323 1 
178 4 199 2 310 1 153 1 119 1 66 5 22 1 316 1 270 4 46 1 139 1 207 1 37 5 323 5 
304 1 224 1 270 2 178 2 66 2 37 2 7 1 323 2 
305 1 201 1 
305 1 201 1 
80 1 173 1 
80 1 173 1 
80 1 173 1 
305 1 152 1 201 1 
305 1 152 1 201 1 
73 1 305 1 201 1 
80 1 305 2 173 1 222 1 19 1 201 2 
305 1 152 1 201 1 
305 1 145 1 201 1 
305 1 145 1 201 1 
305 1 145 1 201 1 
242 3 309 2 177 1 311 2 227 1 19 1 201 2 286 2 155 2 305 2 128 1 318 1 45 1 25 2 175 1 273 1 121 2 240 2 113 1 
73 1 275 1 125 1 106 1 305 1 175 1 240 1 11 1 334 1 37 2 242 1 176 1 178 2 310 1 311 1 201 1 286 1 66 2 155 1 270 2 291 1 25 1 121 1 323 2 
230 1 186 1 6 1 
230 1 186 1 90 1 
12 1 143 1 186 3 214 1 90 1 6 2 
143 1 186 2 33 1 214 1 90 1 6 1 
143 1 186 2 214 2 90 1 6 1 
55 1 211 2 279 1 169 1 106 1 299 1 298 2 34 4 329 3 170 3 235 1 262 1 127 2 131 2 129 1 238 1 11 1 96 1 132 1 246 1 17 1 286 5 157 1 155 5 24 1 182 1 291 1 317 1 187 1 45 2 166 1 208 1 
55 2 210 1 56 5 211 6 279 2 106 4 5 1 299 3 34 7 329 9 170 8 235 3 262 1 127 6 131 6 129 2 238 1 132 1 62 5 246 3 17 1 286 9 288 1 157 3 155 9 315 1 24 3 182 6 272 1 44 1 45 5 187 2 346 1 166 3 208 2 
55 1 211 2 279 1 169 1 106 1 299 1 298 1 34 2 170 3 329 4 235 1 127 2 129 1 131 2 246 1 17 1 286 3 155 3 157 1 24 2 315 1 317 1 45 3 187 1 166 1 208 1 
55 1 210 1 211 4 279 1 169 1 106 2 299 2 298 2 34 3 329 7 170 5 235 2 127 4 131 4 129 1 246 2 17 1 286 4 288 1 155 4 157 2 24 3 315 1 317 1 45 4 187 1 346 1 166 2 208 1 
124 1 290 1 141 1 
141 1 71 1 
140 1 
325 1 141 1 
325 1 327 1 216 1 290 2 162 1 140 1 141 2 
325 1 327 1 141 1 
92 1 141 1 
266 3 98 7 57 1 14 2 31 1 245 1 246 1 278 1 268 2 289 4 340 1 183 1 306 1 344 1 50 3 166 1 297 1 
266 3 98 7 57 1 14 2 31 1 245 1 246 1 278 1 268 2 289 4 340 1 183 1 306 1 344 1 50 3 166 1 297 1 
266 3 98 7 57 1 14 2 31 1 245 1 246 1 278 1 268 2 289 4 340 1 183 1 306 1 344 1 93 1 50 3 166 1 297 1 
274 1 57 1 213 1 31 2 278 2 299 3 76 1 146 1 235 3 218 1 306 1 282 1 150 2 266 15 98 31 223 3 14 5 39 1 245 1 246 4 268 3 157 3 289 16 340 2 183 5 341 1 344 2 161 1 206 4 348 1 253 1 50 10 297 1 166 4 
274 2 57 1 31 1 278 1 328 1 220 1 218 1 306 1 282 2 150 4 98 9 266 4 14 3 39 2 246 1 268 2 289 5 340 1 183 1 344 1 253 2 50 4 166 1 297 1 
172 1 237 1 36 1 296 1 
172 1 237 1 63 1 296 1 
1 1 75 2 90 1 258 1 6 1 148 1 172 2 280 1 193 1 59 1 13 1 196 1 12 1 338 1 312 1 16 1 118 1 181 1 23 2 67 1 68 1 230 1 186 2 72 1 123 1 
172 1 237 1 63 1 296 1 
172 1 237 1 36 1 296 1 
10 1 
54 2 168 1 2 1 170 2 217 2 127 2 304 1 129 1 132 3 97 1 16 2 17 1 181 1 66 1 24 2 228 1 314 1 182 6 68 2 229 2 102 1 187 1 319 1 321 1 141 1 323 1 28 1 276 2 325 1 279 1 326 1 233 1 329 2 35 2 191 1 280 2 238 1 37 1 151 2 38 1 196 1 337 2 198 1 117 2 286 5 203 1 155 5 339 4 292 1 43 1 45 2 160 1 46 1 122 1 208 1 
114 1 168 1 2 1 198 1 326 1 286 3 233 1 66 1 35 1 155 3 339 2 228 1 182 2 304 1 46 1 319 1 321 1 132 1 97 1 37 1 38 1 323 1 
54 1 2 1 168 1 326 1 233 1 304 1 37 1 97 1 132 1 38 1 114 1 198 1 17 1 286 3 66 1 155 3 228 1 339 3 182 1 46 1 45 1 319 1 321 1 323 1 
54 1 2 1 168 1 326 1 233 1 35 1 304 1 132 1 37 1 97 1 38 1 114 1 337 1 198 1 17 1 286 3 66 1 155 3 228 1 339 3 182 2 46 1 45 1 319 1 321 1 323 1 
54 4 168 1 2 1 170 1 217 2 304 1 127 1 129 1 97 1 132 3 17 5 66 1 228 1 24 2 182 7 229 2 187 1 319 1 321 1 323 1 28 1 276 2 279 1 326 1 233 1 35 4 238 1 37 1 38 1 151 2 114 1 337 4 87 1 198 1 286 5 247 1 155 5 339 6 46 1 45 5 160 1 254 1 349 1 295 1 
54 2 168 1 2 1 170 1 217 2 304 1 127 1 129 1 97 1 132 2 17 1 66 1 228 1 24 2 182 4 229 2 187 1 319 1 321 1 323 1 28 1 276 2 279 1 326 1 233 1 329 2 35 2 238 1 37 1 38 1 151 2 337 2 198 1 286 4 155 4 339 4 292 1 46 1 160 1 45 2 
28 1 54 2 2 1 168 1 276 2 279 1 326 1 233 1 170 1 35 2 217 2 127 1 304 1 129 1 238 1 132 2 37 1 97 1 151 2 38 1 337 2 87 1 198 1 17 1 247 1 286 4 66 1 155 4 24 2 228 1 339 4 182 4 229 2 45 1 160 1 187 1 46 1 319 1 321 1 254 1 323 1 
28 1 54 2 2 1 168 1 276 2 279 1 326 1 233 1 170 1 35 2 217 2 127 1 304 1 129 1 238 1 132 2 37 1 97 1 151 2 38 1 337 2 87 1 198 1 17 1 247 1 286 4 66 1 155 4 24 2 228 1 339 4 182 4 229 2 45 1 160 1 187 1 46 1 319 1 321 1 254 1 323 1 
54 2 2 1 168 1 279 1 326 1 233 1 329 2 170 1 35 2 263 2 217 2 127 1 304 1 129 1 239 1 238 1 132 2 37 1 97 1 38 1 337 2 179 2 198 1 17 1 247 1 286 4 66 1 155 4 228 1 339 4 182 4 229 2 271 1 45 1 160 1 187 1 46 1 319 1 252 1 321 1 323 1 
28 1 54 3 2 1 168 1 276 2 279 1 326 1 233 1 170 1 35 3 217 2 127 1 304 1 129 1 238 1 132 2 37 1 97 1 151 2 38 1 337 3 87 1 198 1 17 1 247 1 286 4 66 1 155 4 24 2 228 1 339 5 182 5 229 2 45 1 160 1 187 1 46 1 319 1 321 1 254 1 295 1 323 1 
28 1 54 3 2 1 168 1 276 2 279 1 326 1 233 1 170 1 35 3 217 2 127 1 304 1 129 1 238 1 132 2 37 1 97 1 151 2 38 1 337 3 87 1 198 1 17 1 247 1 286 4 66 1 155 4 24 2 228 1 339 5 182 5 229 2 45 1 160 1 187 1 46 1 319 1 321 1 254 1 295 1 323 1 
54 2 2 1 168 1 279 1 326 1 233 1 329 2 170 1 35 2 263 2 217 2 127 1 304 1 129 1 238 1 239 1 132 2 37 1 97 1 38 1 337 2 179 2 198 1 17 1 286 4 66 1 155 4 228 1 339 4 182 4 229 2 292 1 45 1 160 1 187 1 46 1 319 1 321 1 323 1 
124 1 274 1 57 1 31 1 278 1 171 1 234 1 306 1 174 1 282 1 150 2 98 6 266 3 197 1 14 2 39 1 310 2 246 1 200 1 268 1 289 3 320 1 253 1 50 2 297 1 166 1 
274 2 299 1 171 11 234 2 235 2 174 1 282 2 111 1 150 4 241 1 266 6 195 1 98 14 223 3 14 1 39 2 310 1 246 2 200 11 20 1 157 2 289 8 41 1 159 1 183 1 161 1 320 4 348 1 206 3 294 1 253 2 50 2 166 1 
274 1 325 1 327 1 259 1 79 1 234 1 330 1 280 1 174 1 282 1 111 1 308 1 150 2 37 1 266 1 98 2 196 1 285 1 178 1 39 1 310 1 199 1 117 1 16 1 119 1 181 1 66 2 289 1 41 1 68 1 159 1 270 1 88 1 320 1 231 1 253 1 141 1 323 2 
57 1 299 2 259 2 171 7 306 1 174 3 308 2 94 1 266 10 98 20 265 2 225 2 14 4 178 1 310 2 268 1 16 3 66 3 181 2 68 3 183 4 270 1 320 7 26 2 72 1 141 2 323 3 274 3 30 1 31 1 325 2 278 1 327 2 190 2 234 3 235 2 330 2 280 3 282 3 111 1 332 2 150 6 335 1 37 1 196 2 39 3 199 1 117 1 246 3 200 7 119 1 157 2 289 10 41 1 159 1 253 3 50 8 297 1 166 3 
142 1 274 2 188 1 29 1 212 1 325 2 144 2 234 2 280 8 221 1 174 2 282 2 150 4 37 1 61 1 98 2 266 1 196 2 197 1 178 1 39 2 199 1 117 2 16 8 66 1 181 2 203 1 289 1 41 1 68 7 159 1 270 1 102 1 138 1 253 2 72 1 141 3 165 1 323 1 
274 1 299 1 171 1 234 1 235 1 174 1 282 1 111 1 150 2 37 1 243 1 98 3 266 2 14 1 178 1 39 1 246 1 200 1 66 1 157 1 289 1 270 1 139 1 320 1 253 1 207 1 50 1 323 1 166 1 
98 2 274 1 197 1 39 1 246 1 200 1 171 1 157 1 234 1 313 1 289 2 183 1 174 1 282 1 320 1 150 2 253 1 50 1 
98 2 266 2 274 1 197 1 14 1 39 1 200 1 299 1 171 1 234 1 184 1 174 1 282 1 320 1 150 2 253 1 50 1 166 1 
274 1 299 1 171 2 235 1 234 1 174 1 282 1 150 2 98 4 266 2 197 1 14 1 39 1 246 1 200 2 157 1 289 2 183 1 320 2 253 1 50 2 166 1 
98 2 188 1 274 1 39 1 246 1 200 1 171 1 157 1 234 1 313 1 289 2 183 1 174 1 282 1 320 1 150 2 253 1 50 1 
98 2 266 2 188 1 274 1 14 1 39 1 200 1 299 1 171 1 234 1 184 1 174 1 282 1 320 1 150 2 253 1 50 1 166 1 
274 1 188 1 299 1 171 2 235 1 234 1 174 1 282 1 150 2 98 4 266 2 14 1 39 1 246 1 200 2 157 1 289 2 183 1 320 2 253 1 50 2 166 1 
266 2 98 4 274 1 14 1 39 1 246 1 200 2 299 1 171 2 157 1 234 1 235 1 289 2 183 1 174 1 282 1 320 2 150 2 253 1 50 2 166 1 
274 1 325 1 327 1 259 1 234 1 330 1 280 1 174 1 282 1 332 1 308 1 150 2 98 2 266 1 196 1 39 1 310 1 117 1 16 1 181 1 66 1 289 1 41 1 68 1 159 1 253 1 141 1 323 1 
274 1 325 1 327 1 234 1 280 1 174 1 130 1 282 1 308 1 150 2 98 2 266 1 196 1 267 1 39 1 310 1 117 1 16 1 181 1 66 1 289 1 41 1 68 1 159 1 47 1 253 1 141 1 323 1 
274 1 299 1 171 2 235 1 234 1 174 1 282 1 111 1 150 2 98 4 266 2 14 1 39 1 246 1 200 2 157 1 289 2 183 1 320 2 253 1 50 2 166 1 
142 1 274 1 325 1 299 1 327 1 259 1 171 2 234 1 235 1 330 1 280 1 174 1 282 1 332 1 308 1 150 2 266 2 98 4 196 1 14 1 39 1 246 1 200 2 16 1 181 1 66 1 157 1 289 2 183 1 68 1 320 2 26 1 253 1 141 1 50 2 166 1 323 1 
274 1 299 1 171 1 234 1 235 1 174 1 282 1 111 1 150 2 37 1 266 1 98 3 178 1 39 1 246 1 200 1 66 1 21 1 157 1 289 2 183 1 270 1 139 1 320 1 253 1 207 1 50 1 166 1 323 1 
274 2 32 2 299 3 260 1 77 1 235 3 220 1 91 1 9 1 331 2 282 2 150 4 133 1 266 10 98 19 223 1 14 3 39 2 246 3 157 3 289 9 183 3 69 1 161 1 206 2 348 1 253 2 50 6 232 1 166 3 
274 3 0 1 32 4 299 2 260 2 77 2 235 3 218 2 220 1 91 1 9 1 331 1 282 3 150 6 133 1 266 12 98 26 223 2 14 2 39 3 246 3 18 1 157 3 120 1 289 14 183 2 343 1 347 1 348 2 206 2 253 3 50 4 322 1 166 2 
0 1 57 1 299 4 260 2 220 1 218 1 9 1 91 1 306 1 307 1 98 41 266 21 133 1 223 3 14 4 268 1 18 1 183 4 322 1 232 1 274 3 31 1 32 4 278 1 77 1 235 4 282 3 331 1 150 6 39 3 246 5 157 4 289 20 120 1 343 1 161 1 347 1 348 3 206 4 253 3 50 8 166 5 297 1 
0 1 274 4 57 1 31 1 278 1 32 4 299 3 260 2 77 1 235 4 218 2 220 1 91 1 9 1 306 1 331 1 282 4 307 1 150 8 133 1 266 18 98 38 223 3 14 4 39 4 246 5 268 1 18 1 157 4 120 1 289 20 183 3 343 1 161 1 347 1 206 4 348 3 253 4 50 7 232 1 297 1 322 1 166 4 
0 1 274 2 57 1 31 1 278 1 32 4 299 7 260 1 77 1 235 7 218 1 220 1 91 1 9 1 306 1 331 1 282 2 150 4 133 1 266 25 98 52 223 4 14 7 39 2 246 8 268 1 18 1 20 2 157 7 120 1 289 27 183 7 343 1 161 2 347 1 206 4 348 2 253 2 50 14 297 1 322 1 166 8 
305 1 25 1 311 1 121 1 227 1 215 1 240 1 19 1 201 1 113 1 
73 1 334 1 
305 1 25 1 311 1 121 1 333 1 240 1 164 1 201 1 336 1 
242 2 309 1 177 1 311 1 227 1 19 1 286 1 201 1 155 1 305 1 128 1 45 1 25 1 175 1 273 1 121 1 240 1 113 1 
242 2 309 1 177 1 311 1 227 1 19 1 286 1 201 1 155 1 305 1 128 1 45 1 25 1 175 1 273 1 121 1 240 1 113 1 
242 2 309 1 177 1 311 1 227 1 19 1 286 1 201 1 155 1 305 1 128 1 45 1 25 1 175 1 273 1 121 1 240 1 113 1 
222 1 152 1 60 1 
222 1 152 1 60 1 
81 1 145 1 
81 1 222 1 145 1 
275 1 125 1 
73 1 275 1 125 1 106 1 34 1 305 1 128 1 194 1 240 1 11 1 334 1 37 2 309 1 242 1 176 1 178 2 310 1 311 1 286 1 201 1 66 2 155 1 291 1 270 2 25 1 121 1 323 2 
152 1 60 1 
81 1 222 1 145 1 
52 1 209 1 274 1 212 1 325 1 144 2 234 1 280 2 174 1 282 1 111 1 150 2 37 2 98 2 266 1 196 1 39 1 16 2 181 1 66 2 249 1 289 1 41 1 159 1 68 2 104 1 49 1 253 1 141 1 165 1 323 2 
12 1 196 1 142 1 74 1 1 1 15 1 16 2 118 1 90 1 6 1 181 1 156 1 68 2 280 2 230 1 83 1 186 2 59 1 72 1 
12 1 196 1 74 1 1 1 15 1 16 1 118 1 90 1 154 1 6 1 181 1 68 1 280 1 230 1 186 2 59 1 72 1 
167 1 196 1 4 1 325 1 117 1 16 1 181 1 203 1 156 1 68 1 280 1 102 1 59 1 141 1 
12 1 196 1 74 1 1 1 15 1 16 1 118 1 90 1 6 1 181 1 156 1 68 1 280 1 230 1 83 1 186 2 59 1 72 1 
269 1 
127 1 124 1 45 1 17 1 95 1 170 1 303 1 
28 1 276 1 279 1 170 1 329 1 127 1 129 1 238 1 132 1 151 1 17 1 286 1 155 1 24 1 182 1 187 1 45 2 
211 6 256 2 299 2 170 9 302 2 303 1 216 1 127 8 92 2 129 4 131 6 95 1 132 3 225 2 99 2 226 1 16 3 17 2 181 4 228 2 24 6 68 3 182 5 187 4 103 2 71 3 141 10 142 1 325 3 277 2 279 4 327 3 329 12 235 2 236 2 280 3 108 1 283 2 238 4 84 2 85 1 196 3 86 1 117 1 246 2 286 5 155 5 157 2 290 2 345 1 43 1 45 8 208 2 166 2 
0 1 211 5 3 1 279 2 299 2 329 6 170 8 235 2 127 5 109 1 131 5 129 2 283 2 238 2 84 1 132 1 223 1 246 2 17 2 286 1 18 1 155 1 157 2 24 3 182 1 343 1 43 1 187 2 45 5 347 1 206 1 348 1 208 1 322 1 166 2 
324 1 57 1 31 1 278 1 279 1 257 1 170 2 7 1 304 1 127 2 129 1 283 2 238 1 112 1 84 1 37 1 178 1 246 2 286 1 66 1 155 1 158 1 270 1 187 1 254 1 207 1 323 1 166 1 
127 1 45 1 187 1 129 1 279 1 238 1 17 1 95 1 170 1 303 1 
225 1 211 5 246 2 299 2 329 10 170 5 157 2 235 2 24 5 127 5 45 5 131 5 283 2 84 1 166 2 
182 1 45 1 17 1 286 1 155 1 132 1 
325 1 279 2 170 2 191 1 219 1 127 2 280 4 149 1 108 2 129 2 238 1 132 2 196 1 117 2 16 4 286 3 181 1 203 1 155 3 315 1 68 4 182 4 345 1 102 1 43 2 187 2 122 1 141 1 208 2 
324 1 274 1 325 1 327 1 126 1 259 1 234 1 330 1 280 1 174 1 282 1 332 1 308 1 150 2 37 2 98 1 266 1 196 1 39 1 178 2 310 1 117 1 16 1 66 3 181 1 159 1 68 1 270 2 253 1 207 2 141 1 323 3 
211 2 279 1 268 1 17 2 329 4 170 1 24 2 127 2 43 1 187 1 45 4 131 2 129 1 238 1 208 1 
25 1 70 1 311 1 
25 1 70 1 311 1 
275 1 25 1 311 1 261 1 113 1 
25 1 70 1 311 1 
25 1 311 1 163 1 
25 1 311 1 163 1 
25 1 311 1 163 1 
25 1 311 1 
305 1 201 1 
266 4 98 8 274 2 57 1 14 2 39 2 31 1 246 1 278 1 268 1 289 4 218 1 183 1 306 1 282 2 150 4 253 2 50 3 166 1 297 1 
266 3 98 6 124 1 14 2 57 1 31 1 278 1 246 1 268 1 289 3 306 1 50 2 297 1 166 1 
266 2 98 4 274 1 14 1 39 1 246 1 299 1 157 1 235 1 289 2 183 1 185 1 282 1 150 2 253 1 50 2 166 1 
266 4 98 7 223 1 14 1 246 1 299 1 157 1 289 3 235 1 183 1 161 1 348 1 206 2 50 2 166 1 
274 2 57 1 31 2 278 2 299 2 235 2 218 2 306 1 282 2 150 4 98 23 266 12 195 1 223 2 14 5 39 2 246 3 268 1 157 2 20 1 289 11 183 4 342 1 161 1 206 2 253 2 50 9 297 1 166 3 
98 1 266 1 206 1 
98 1 223 1 289 1 
266 3 98 6 274 1 225 1 14 2 39 1 246 1 299 1 157 1 235 1 289 3 183 1 185 1 282 1 150 2 253 1 50 3 166 1 
274 1 0 1 299 2 235 2 220 1 282 1 150 2 98 12 266 6 223 1 14 1 39 1 246 2 18 1 157 2 289 6 183 1 343 1 347 1 206 1 348 1 253 1 50 2 166 2 322 1 
98 6 266 3 57 1 14 1 31 1 246 1 278 1 289 3 183 1 50 2 166 1 
266 2 98 3 274 1 14 1 39 1 31 1 278 1 289 1 218 1 183 1 342 1 306 1 282 1 150 2 253 1 50 2 297 1 
98 10 266 5 274 1 14 3 57 1 39 1 31 2 278 2 246 2 289 5 220 1 158 1 183 2 282 1 150 2 253 1 50 5 166 2 
98 2 274 1 39 1 246 1 157 1 289 2 220 1 183 1 282 1 150 2 253 1 50 1 
266 2 98 4 274 1 14 1 39 1 246 1 299 1 157 1 235 1 289 2 220 1 183 1 282 1 150 2 253 1 50 2 166 1 
266 2 98 3 274 3 14 1 39 3 31 1 278 1 289 1 218 1 220 1 183 1 342 1 282 3 150 6 253 3 50 2 232 1 
274 5 57 2 213 1 31 3 278 3 299 3 146 1 235 3 218 2 220 1 306 1 282 5 150 10 266 18 98 34 223 3 14 7 39 5 246 5 268 1 157 3 289 16 183 5 342 1 341 1 185 1 161 1 206 4 348 1 253 5 50 12 297 1 232 1 166 5 
274 1 57 1 31 1 278 1 220 1 306 1 282 1 150 2 98 8 266 4 223 1 14 2 39 1 246 1 268 1 289 4 343 1 206 1 348 1 253 1 50 2 166 1 297 1 
274 2 57 1 31 1 278 1 235 1 220 1 306 1 282 2 150 4 98 11 266 5 223 1 14 2 39 2 246 2 268 1 157 1 289 6 183 1 343 1 185 1 161 1 206 2 348 1 253 2 50 3 166 1 297 1 
274 3 0 1 57 1 31 1 278 1 299 2 235 2 220 1 218 1 306 1 282 3 150 6 98 19 266 10 223 1 14 3 39 3 246 3 268 1 18 1 157 2 289 9 183 1 343 1 185 1 347 1 206 1 348 1 253 3 50 4 297 1 322 1 166 3 
274 3 0 1 57 1 31 1 278 1 299 1 235 2 218 1 220 1 306 1 282 3 150 6 98 17 266 7 223 1 14 3 39 3 246 3 268 1 18 1 157 2 289 10 183 2 343 1 185 1 347 1 206 1 348 1 253 3 50 5 297 1 166 2 322 1 
274 1 57 1 31 1 278 1 220 1 306 1 282 1 150 2 98 8 266 4 223 1 14 2 39 1 246 1 268 1 289 4 343 1 206 1 348 1 253 1 50 2 166 1 297 1 
274 1 0 1 299 2 235 2 220 1 282 1 150 2 98 12 266 6 223 1 14 1 39 1 246 2 18 1 157 2 289 6 183 1 343 1 347 1 206 1 348 1 253 1 50 2 166 2 322 1 
274 4 0 1 57 1 31 1 278 1 299 1 235 2 220 1 218 2 306 1 282 4 150 8 98 18 266 8 223 1 14 3 39 4 246 3 268 1 18 1 157 2 289 10 183 2 343 1 185 1 347 1 206 1 348 1 253 4 50 5 297 1 322 1 166 2 
274 4 0 1 299 2 235 3 220 1 218 2 282 4 150 8 98 16 266 7 223 1 14 3 39 4 246 3 18 1 157 3 289 9 183 3 343 1 347 1 206 1 348 1 253 4 50 6 322 1 232 1 166 2 
266 4 98 7 14 3 57 1 31 3 278 3 246 1 289 3 183 3 306 2 50 6 166 1 297 1 
274 4 0 1 57 1 31 1 278 1 299 1 235 2 220 1 218 2 306 1 282 4 150 8 98 18 266 8 223 1 14 3 39 4 246 3 268 1 18 1 157 2 289 10 183 1 343 1 347 1 206 1 348 1 253 4 50 4 297 1 322 1 232 1 166 2 
316 1 46 1 310 1 48 1 66 1 37 1 323 1 
137 1 82 1 300 1 40 1 147 1 
124 1 68 1 196 1 280 1 102 1 325 1 117 1 16 1 181 1 141 1 203 1 
196 1 178 1 310 1 325 1 199 1 117 1 16 1 327 1 181 1 66 2 330 1 68 1 270 1 280 1 308 1 141 1 37 1 323 2 
325 2 327 2 330 1 304 1 280 1 92 1 108 1 308 1 37 2 97 1 38 1 196 1 178 1 310 1 199 1 16 1 66 2 181 1 68 1 270 2 103 1 141 3 323 2 
325 2 327 2 304 1 280 2 92 1 108 1 308 1 264 1 37 2 97 1 38 1 196 1 267 1 178 1 310 1 199 1 16 2 66 2 181 1 68 2 270 2 103 1 141 3 323 2 
196 1 325 1 117 1 16 3 17 1 327 1 134 1 286 2 181 1 155 2 135 1 228 1 68 3 182 1 280 3 290 1 92 1 108 1 45 1 103 1 264 1 71 1 141 4 
196 1 99 1 325 1 117 1 16 3 17 1 327 1 286 2 181 1 155 2 228 1 68 3 182 1 280 3 290 1 92 1 108 1 45 1 103 1 264 1 71 1 141 4 
68 1 196 1 280 1 16 1 181 1 61 1 
53 1 142 1 196 2 189 1 29 1 325 2 144 1 117 2 16 7 327 1 181 3 216 1 68 6 280 7 221 1 138 1 284 1 72 1 141 3 61 1 165 1 
209 1 274 2 142 1 57 1 31 1 325 1 278 1 327 1 259 1 171 1 234 2 330 1 280 1 306 1 174 2 282 2 111 1 332 1 308 1 150 4 37 1 266 3 98 6 265 1 196 1 14 2 178 1 39 2 310 2 199 1 246 1 200 1 268 1 16 1 181 1 66 2 289 3 68 1 270 1 320 1 26 1 253 2 141 1 50 2 166 1 297 1 323 2 
256 1 279 2 34 1 170 1 302 1 303 1 127 1 236 1 280 1 129 2 238 2 95 1 132 1 99 1 117 1 16 1 17 1 286 3 155 3 228 1 68 1 182 2 290 1 345 1 45 1 187 2 71 1 141 2 
142 1 196 1 226 1 325 1 16 2 327 1 181 2 216 1 68 2 290 1 280 2 141 2 61 1 
142 1 196 1 325 1 117 1 16 4 202 1 181 1 203 1 68 4 280 4 102 1 264 1 141 1 
53 1 196 1 189 1 325 1 16 2 327 1 181 2 301 1 68 2 280 2 101 1 108 1 94 1 141 1 
68 1 196 1 280 1 230 1 1 1 186 1 117 1 16 1 90 1 181 1 
142 1 196 1 325 1 16 2 181 1 249 1 68 2 280 2 72 1 141 1 165 1 
142 1 196 2 29 1 325 2 117 1 16 5 202 1 203 1 181 2 68 4 280 5 108 1 102 1 221 1 141 3 165 1 
142 1 196 2 325 2 117 1 16 5 202 1 203 1 181 2 68 4 280 5 108 1 102 1 221 1 58 1 141 3 165 1 
196 1 178 1 267 1 310 1 325 1 199 1 117 1 16 1 327 1 181 1 66 2 68 1 270 1 280 1 308 1 141 1 37 1 323 2 
53 1 196 1 189 1 325 1 16 1 327 1 181 2 216 1 68 1 280 1 108 1 284 1 141 1 
255 1 310 1 116 1 107 1 27 1 
244 1 255 2 310 1 116 2 107 1 17 1 34 1 286 2 233 1 155 2 228 1 304 1 42 1 281 1 45 1 110 1 27 2 97 1 38 1 
52 1 255 1 104 1 107 1 49 1 27 1 66 1 37 1 323 1 
42 1 110 1 107 1 
67 1 124 1 193 1 258 1 
172 1 237 1 296 1 
75 1 338 1 312 1 
172 1 237 1 36 1 296 1 
172 1 237 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 78 1 296 1 
172 1 237 1 36 1 296 1 
172 1 186 1 237 1 36 1 90 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
23 1 172 2 8 1 75 1 237 1 296 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
180 1 293 2 65 1 258 2 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
64 1 
172 1 237 1 36 1 296 1 
172 1 237 1 36 1 296 1 
8 1 258 1 248 1 136 1 
193 1 258 1 

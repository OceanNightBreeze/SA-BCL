#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) (126,208) (126,208) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) (126,208) (126,208) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) (126,208) (126,208) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) (126,208) (126,208) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 125 (63,85,157,296) 340 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) 58 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 125 84 (286,337) 58 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 125 84 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 125 (63,85,157,296) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 125 84 320 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 125 84 375 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 1 299 1 134 1 234 2 301 1 337 1 125 1 19 2 339 2 318 2 84 1 
76 1 299 1 134 1 234 3 337 1 301 2 19 2 339 2 151 1 84 1 33 1 165 1 376 1 125 1 126 1 316 1 207 1 318 3 208 1 286 1 
76 1 299 1 134 1 234 3 337 1 301 2 19 2 339 2 151 1 84 1 33 1 165 1 376 1 125 1 126 1 316 1 207 1 318 3 208 1 286 1 
76 1 299 1 134 1 234 3 337 1 301 2 19 2 339 2 151 1 84 1 33 1 165 1 376 1 125 1 126 1 316 1 207 1 318 3 208 1 286 1 
76 1 299 1 134 1 234 3 337 1 301 2 19 2 339 2 151 1 84 1 33 1 165 1 376 1 125 1 126 1 316 1 207 1 318 3 208 1 286 1 
76 1 157 1 340 1 299 1 134 1 146 1 234 2 125 1 37 1 19 1 339 1 318 2 
76 1 93 1 299 1 234 2 301 1 19 1 339 1 330 1 33 1 363 1 100 1 376 1 165 1 207 1 318 2 209 1 
76 1 299 1 134 1 234 3 337 1 301 1 19 2 339 2 84 1 85 1 58 1 125 1 37 1 318 3 
76 1 299 1 134 1 234 3 337 1 301 1 19 2 339 2 84 1 85 1 58 1 125 1 37 1 318 3 
131 1 256 1 110 1 173 1 201 1 244 1 82 1 194 1 35 1 241 1 120 1 195 1 344 1 143 1 
260 1 
110 1 244 2 201 2 141 1 202 1 260 1 284 1 129 1 
110 2 145 1 201 5 244 5 310 2 202 1 260 1 373 1 276 1 115 2 216 2 364 1 253 1 206 1 270 1 141 1 89 1 183 1 284 2 
185 1 202 1 260 1 
260 1 177 2 128 1 
194 2 369 1 256 2 82 2 195 2 120 1 143 2 344 2 
172 1 61 1 198 2 264 1 290 2 246 1 338 1 99 1 227 1 343 1 228 1 184 1 102 1 127 1 10 1 344 2 297 1 130 2 369 1 256 3 321 2 158 1 213 1 82 2 236 2 138 1 348 1 303 1 350 1 194 3 353 1 59 1 377 1 262 1 195 2 120 1 143 2 
131 1 194 1 256 1 35 1 82 1 241 1 195 1 120 1 143 1 344 1 
256 1 201 1 244 1 245 1 202 1 260 1 194 1 13 1 26 1 35 1 319 1 285 1 195 1 106 1 
256 1 244 2 201 2 82 1 202 1 260 1 194 1 13 1 26 1 35 1 285 1 195 1 344 1 143 1 106 1 
110 1 346 1 244 1 201 1 284 1 
49 1 110 1 244 2 201 2 141 1 202 1 260 1 284 1 
244 1 201 1 284 1 
256 2 369 2 82 1 194 2 342 1 187 1 195 2 344 1 143 1 
25 1 281 1 178 1 
130 1 369 1 256 1 264 1 290 1 112 1 236 1 338 1 303 1 194 1 377 1 59 1 184 1 102 1 262 1 10 1 
256 5 369 1 232 1 245 1 82 4 139 1 97 1 194 5 87 1 6 2 187 1 195 5 143 4 344 1 
131 1 194 2 256 2 35 1 82 2 16 1 195 2 143 2 
130 1 256 2 264 1 290 1 82 1 338 1 236 1 139 1 303 1 194 2 59 1 377 1 6 1 281 1 102 1 184 1 262 1 195 1 10 1 143 1 
369 1 185 1 
194 3 369 1 256 3 6 1 82 3 195 3 344 1 143 3 
131 1 194 1 256 1 35 1 82 1 195 1 143 1 
194 1 256 1 35 1 342 1 82 1 187 1 195 1 143 1 344 1 
172 1 61 1 198 2 264 1 201 1 244 1 290 1 338 1 204 1 99 1 26 1 27 1 6 1 343 1 228 1 102 1 184 1 127 1 187 1 10 1 344 2 106 1 297 1 130 1 369 1 256 4 321 1 158 1 213 1 82 3 236 1 138 1 139 1 303 1 194 4 13 1 59 1 377 1 35 1 262 1 285 1 195 3 120 1 143 3 
194 2 369 1 256 2 245 1 6 1 82 1 97 1 195 2 143 1 
256 3 244 1 201 1 82 3 260 1 139 1 67 1 194 3 13 1 6 2 27 1 26 1 35 1 187 1 285 1 195 3 344 1 143 3 106 1 
194 2 256 2 25 1 6 1 281 1 82 2 187 1 195 2 143 2 344 1 
130 1 369 1 256 1 264 1 290 1 236 1 338 1 303 1 194 1 377 1 59 1 184 1 102 1 262 1 10 1 
130 1 369 1 256 1 300 1 264 1 290 1 236 1 338 1 303 1 194 1 377 1 59 1 271 1 262 1 10 1 
61 1 198 2 94 1 121 1 178 2 292 1 23 1 24 1 25 2 227 2 343 1 228 1 127 1 29 1 297 1 321 4 158 1 191 1 302 1 138 2 356 1 281 2 263 1 92 1 
194 1 256 1 13 1 35 1 82 1 16 1 195 1 143 1 
108 1 307 1 0 2 308 1 11 2 294 1 
0 1 15 1 11 1 
0 1 11 1 
0 1 11 1 
307 1 0 1 11 1 294 1 
307 1 0 1 11 1 294 1 
307 1 294 1 
0 1 11 1 103 1 
0 1 11 1 103 1 
0 1 11 1 103 1 
0 1 11 1 329 1 
0 1 11 1 329 1 
0 1 11 1 329 1 
336 1 0 1 244 1 201 1 2 1 362 1 153 1 7 1 72 1 369 1 256 2 210 1 80 1 371 1 52 1 82 2 11 1 327 1 279 1 194 2 15 1 169 1 195 2 143 2 
108 1 336 2 298 1 273 1 0 2 80 2 201 2 244 2 52 3 11 2 260 1 98 1 327 2 279 1 124 1 223 2 218 1 154 1 72 2 
341 1 316 1 207 2 368 2 209 1 
165 1 316 1 207 1 
165 1 207 1 209 1 
42 1 341 1 316 2 207 3 368 1 209 1 
180 1 341 1 316 1 207 2 368 1 209 1 
309 1 94 1 310 1 244 5 201 5 202 1 177 3 314 2 153 1 23 1 250 1 270 1 7 1 29 1 128 1 345 1 155 1 110 4 371 1 191 1 135 1 12 2 260 2 276 2 115 1 373 3 216 1 239 2 141 1 36 1 357 1 284 1 
309 3 94 3 44 5 244 9 201 9 310 2 20 1 202 1 177 9 268 1 314 6 23 3 250 2 293 1 270 1 183 1 7 4 29 3 128 3 110 7 346 5 79 1 191 3 159 1 260 5 276 6 115 2 373 8 216 2 57 1 239 6 141 1 36 1 357 2 284 6 
309 1 94 1 310 1 244 3 201 3 202 1 177 4 314 2 23 1 250 1 183 1 7 1 29 1 128 2 345 1 155 1 110 2 191 1 260 3 12 1 115 1 373 3 276 2 216 1 239 2 357 1 
309 2 94 2 310 1 244 4 201 4 202 1 20 1 177 7 268 1 314 4 23 2 250 1 293 1 183 1 7 2 29 2 128 3 345 1 155 1 110 3 191 2 260 4 12 2 115 1 373 5 276 4 216 1 239 4 357 1 
9 1 
59 1 338 1 262 1 
282 1 262 1 
322 1 185 1 262 1 
332 1 262 1 
338 1 262 1 
226 1 322 2 59 1 323 1 338 1 262 3 
107 1 321 7 31 2 121 2 302 3 96 1 138 3 122 1 161 1 352 1 23 1 227 4 315 1 104 1 254 1 29 1 188 1 189 1 
352 2 321 1 31 1 227 1 148 1 96 1 
197 1 198 4 121 3 96 1 23 1 205 1 227 5 343 2 228 2 315 1 104 1 254 1 29 1 188 1 297 2 107 1 321 9 158 2 31 2 302 4 138 4 161 1 352 1 380 1 
107 1 321 7 31 2 121 2 302 3 96 1 138 3 122 1 161 1 352 1 23 1 227 4 315 1 104 1 254 1 29 1 188 1 
107 1 321 7 31 2 121 2 302 3 96 1 138 3 122 1 161 1 352 1 23 1 227 4 315 1 104 1 254 1 29 1 188 1 
130 1 264 1 234 1 199 1 301 2 290 1 338 1 19 1 236 1 339 1 21 1 303 1 238 1 32 2 306 1 167 1 168 1 116 1 8 2 262 1 40 2 318 1 10 1 
42 1 335 1 76 1 220 1 130 1 264 1 174 1 234 1 214 1 301 1 290 1 19 1 236 1 237 1 339 1 303 1 32 1 165 1 70 1 316 1 207 2 8 1 318 1 40 1 334 1 209 1 
335 1 42 1 264 1 200 1 174 1 290 1 19 1 339 1 363 1 70 1 316 1 8 1 207 2 318 2 209 1 76 1 130 1 299 1 234 2 301 1 214 1 236 1 237 1 303 1 32 1 330 1 165 1 37 1 40 1 334 1 
42 1 220 1 335 1 264 1 174 1 290 1 19 1 339 1 21 1 363 1 365 1 70 1 316 1 8 1 207 2 318 3 209 1 130 1 299 1 234 3 301 1 214 1 236 1 303 1 32 1 330 1 165 1 37 2 40 1 334 1 
220 1 42 1 264 1 174 1 290 1 363 1 365 1 70 1 316 1 8 1 207 2 318 2 209 1 130 1 299 1 234 2 301 1 214 1 236 1 303 1 32 1 330 1 165 1 37 2 40 1 
147 1 
201 5 244 5 290 2 245 1 338 1 202 1 252 1 10 2 106 1 256 1 260 2 115 1 303 1 304 2 215 2 216 1 56 1 13 1 355 1 166 1 167 1 357 1 262 1 17 4 170 1 62 1 264 1 310 1 65 1 177 2 69 2 270 1 26 1 317 2 319 1 128 2 30 2 73 1 130 2 132 2 236 2 326 2 276 2 373 2 238 1 193 1 194 1 141 3 35 1 283 1 38 1 284 6 285 1 195 1 91 1 
256 1 201 3 244 3 245 1 193 1 194 1 56 1 13 1 141 1 26 1 35 1 166 1 317 1 38 1 284 2 17 2 285 1 319 1 129 1 195 1 91 1 106 1 
244 3 201 3 245 1 202 1 26 1 319 1 129 1 30 1 106 1 256 1 260 1 194 1 193 1 56 1 13 1 141 1 166 1 35 1 38 1 284 1 17 3 285 1 195 1 91 1 
244 3 201 3 245 1 202 1 69 1 26 1 317 1 319 1 129 1 30 1 106 1 256 1 260 1 194 1 193 1 56 1 13 1 141 1 166 1 35 1 38 1 17 3 284 2 285 1 195 1 91 1 
144 1 201 5 244 5 245 1 202 5 252 1 255 1 106 1 256 1 260 5 115 1 304 2 216 1 215 2 162 1 56 1 13 1 355 1 166 1 17 6 310 1 69 4 26 1 270 1 317 4 319 1 129 1 128 2 30 4 132 2 326 2 373 1 276 1 194 1 193 1 278 1 331 1 141 3 35 1 38 1 284 7 285 1 195 1 91 1 
201 4 244 4 245 1 202 1 252 1 106 1 256 1 260 2 115 1 304 2 216 1 215 2 56 1 13 1 355 1 166 1 17 4 170 1 310 1 177 2 69 2 26 1 270 1 317 2 319 1 128 2 30 2 132 2 326 2 373 1 276 1 194 1 193 1 141 2 35 1 38 1 284 4 285 1 195 1 91 1 
144 1 244 4 201 4 310 1 245 1 202 1 69 2 252 1 26 1 270 1 317 2 319 1 128 2 255 1 30 2 106 1 256 1 132 2 326 2 260 1 276 1 373 1 115 1 304 2 215 2 216 1 194 1 193 1 331 1 56 1 13 1 141 2 355 1 166 1 35 1 38 1 284 4 17 4 285 1 195 1 91 1 
144 1 244 4 201 4 310 1 245 1 202 1 69 2 252 1 26 1 270 1 317 2 319 1 128 2 255 1 30 2 106 1 256 1 132 2 326 2 260 1 276 1 373 1 115 1 304 2 215 2 216 1 194 1 193 1 331 1 56 1 13 1 141 2 355 1 166 1 35 1 38 1 284 4 17 4 285 1 195 1 91 1 
244 4 201 4 310 1 245 1 95 2 202 1 177 2 69 2 252 1 26 1 270 1 317 2 319 1 255 1 30 2 106 1 190 1 256 1 132 2 235 1 324 2 260 1 373 1 276 1 115 1 215 2 216 1 194 1 193 1 56 1 13 1 141 2 166 1 35 1 38 1 284 4 17 4 285 1 195 1 60 1 91 1 
144 1 310 1 244 4 201 4 245 1 202 1 252 1 69 3 270 1 26 1 317 3 319 1 128 2 255 1 30 3 106 1 256 1 132 2 326 2 260 1 276 1 373 1 115 1 304 2 215 2 216 1 194 1 193 1 278 1 331 1 56 1 13 1 141 2 355 1 166 1 35 1 38 1 17 5 284 5 285 1 195 1 91 1 
144 1 310 1 244 4 201 4 245 1 202 1 252 1 69 3 270 1 26 1 317 3 319 1 128 2 255 1 30 3 106 1 256 1 132 2 326 2 260 1 276 1 373 1 115 1 304 2 215 2 216 1 194 1 193 1 278 1 331 1 56 1 13 1 141 2 355 1 166 1 35 1 38 1 17 5 284 5 285 1 195 1 91 1 
201 4 244 4 245 1 95 2 202 1 252 1 106 1 256 1 260 1 115 1 216 1 215 2 56 1 13 1 166 1 17 4 170 1 310 1 177 2 69 2 26 1 270 1 317 2 319 1 30 2 190 1 132 2 324 2 276 1 373 1 194 1 193 1 141 2 35 1 38 1 284 4 285 1 195 1 91 1 
220 1 61 2 198 4 264 2 200 1 290 8 338 2 313 1 227 1 6 1 343 2 228 2 127 2 10 2 297 2 130 7 256 1 109 1 321 2 158 2 213 1 81 1 82 1 236 8 325 1 136 1 138 1 348 2 303 2 238 1 194 1 353 1 167 1 358 1 119 1 262 3 263 1 195 1 143 1 
61 1 198 2 309 1 94 1 121 1 178 1 23 1 25 1 227 1 343 1 228 1 187 1 127 1 29 1 344 1 297 1 256 1 321 3 158 1 111 1 302 1 191 1 82 1 138 2 54 1 194 1 281 1 195 1 143 1 
61 1 198 2 121 2 178 1 23 1 25 1 227 3 343 1 228 1 315 1 185 1 104 1 127 1 254 1 188 1 29 1 297 1 369 2 321 6 158 1 31 1 302 2 138 3 161 1 281 1 263 1 
61 1 198 4 43 1 309 2 94 2 121 1 221 3 1 3 249 1 178 11 23 2 25 4 224 1 227 8 343 2 228 2 28 1 127 2 29 1 74 1 107 1 297 2 369 1 321 14 158 2 111 1 213 1 78 1 302 2 191 1 138 6 353 1 281 11 
61 1 198 2 264 1 265 1 290 1 311 1 338 1 25 1 227 1 6 1 228 1 343 1 102 1 184 1 127 1 10 1 297 1 130 1 369 1 256 2 321 2 233 1 111 1 158 1 213 1 112 1 82 1 236 1 139 1 138 1 303 1 194 2 353 1 59 1 377 1 262 1 195 1 143 1 
198 6 94 2 290 3 338 2 50 1 6 1 343 3 102 2 104 1 254 1 10 1 297 3 107 4 256 3 158 3 111 1 213 1 302 8 303 2 161 1 261 1 353 1 59 2 14 1 262 2 220 1 172 2 61 3 309 2 264 2 121 4 267 2 175 2 178 7 23 3 181 2 25 7 227 10 228 3 315 1 184 2 367 2 127 3 188 1 29 3 130 3 369 2 321 20 31 1 191 2 82 1 236 3 138 10 139 1 194 3 377 2 281 7 195 1 143 1 
107 1 297 1 61 1 198 2 321 2 158 1 94 1 302 1 178 1 23 1 24 1 25 1 227 2 281 1 228 1 343 1 127 1 263 1 
297 1 61 1 198 2 321 2 158 1 121 1 302 1 191 1 138 2 178 1 25 1 356 1 281 1 228 1 343 1 127 1 263 1 29 1 
61 1 198 2 309 1 94 1 121 1 178 2 23 1 25 2 227 2 343 1 228 1 127 1 29 1 297 1 107 1 321 4 158 1 302 2 191 1 138 2 281 2 263 1 
107 1 297 1 61 1 198 2 109 1 321 2 158 1 94 1 302 1 178 1 23 1 24 1 25 1 227 2 281 1 228 1 343 1 127 1 
297 1 61 1 198 2 109 1 321 2 158 1 121 1 302 1 191 1 138 2 178 1 25 1 356 1 281 1 228 1 343 1 127 1 29 1 
61 1 198 2 309 1 94 1 121 1 178 2 23 1 25 2 227 2 343 1 228 1 127 1 29 1 297 1 107 1 109 1 321 4 158 1 302 2 191 1 138 2 281 2 
61 1 198 2 309 1 94 1 121 1 178 2 23 1 25 2 227 2 343 1 228 1 127 1 29 1 297 1 107 1 321 4 158 1 302 2 191 1 138 2 281 2 
172 1 61 1 198 2 264 1 290 1 338 1 227 1 228 1 343 1 102 1 184 1 127 1 10 1 297 1 130 1 369 1 256 1 321 2 158 1 213 1 236 1 138 1 303 1 194 1 353 1 59 1 377 1 262 1 
61 1 198 2 264 1 290 1 338 1 227 1 228 1 343 1 271 1 127 1 10 1 297 1 130 1 369 1 256 1 321 2 300 1 158 1 213 1 236 1 138 1 303 1 351 1 194 1 353 1 59 1 377 1 262 1 
61 1 198 2 309 1 94 1 121 1 178 2 23 1 25 2 227 2 343 1 228 1 127 1 29 1 297 1 107 1 321 4 158 1 111 1 302 2 191 1 138 2 281 2 
172 1 61 1 198 2 309 1 264 1 94 1 121 1 200 1 290 1 338 1 175 1 178 2 23 1 25 2 227 2 228 1 343 1 102 1 184 1 127 1 29 1 107 1 297 1 130 1 256 1 321 4 158 1 191 1 302 2 236 1 138 2 303 1 194 1 59 1 377 1 281 2 262 1 
61 1 198 2 309 1 94 1 178 1 23 1 25 1 227 2 343 1 228 1 187 1 127 1 29 1 344 1 107 1 297 1 156 1 256 1 321 3 158 1 111 1 191 1 302 1 82 1 138 1 194 1 281 1 195 1 143 1 
198 4 309 3 94 3 121 3 221 2 1 1 361 1 23 3 205 1 224 1 269 1 227 9 343 2 228 2 28 1 29 3 297 2 107 3 211 1 133 1 321 19 347 1 158 2 372 2 302 6 191 3 160 2 138 10 374 1 305 1 
359 1 197 2 198 6 309 3 94 3 121 2 221 2 1 2 361 1 23 3 251 1 205 1 269 2 227 14 343 3 228 3 28 2 29 2 107 2 297 3 211 1 133 2 321 26 77 1 158 3 302 4 372 4 191 2 160 1 137 1 138 12 140 1 305 1 55 1 
197 1 198 6 94 4 1 3 205 1 251 1 343 3 104 1 254 1 107 4 297 3 211 1 158 3 302 8 160 1 161 1 305 1 55 1 359 1 309 4 221 4 121 4 361 1 23 5 224 1 227 20 269 1 228 3 315 1 28 3 29 5 188 1 321 41 133 2 77 1 31 1 191 4 372 4 137 1 138 21 140 1 374 1 280 1 
359 1 197 2 198 8 309 4 94 4 121 4 221 4 1 3 361 1 23 5 251 1 205 1 224 1 269 1 227 20 343 4 228 4 315 1 28 3 104 1 254 1 188 1 29 4 297 4 107 3 211 1 77 1 133 2 321 38 31 1 158 4 372 4 302 7 191 3 160 1 137 1 138 18 374 1 140 1 161 1 305 1 55 1 280 1 
359 1 197 1 198 4 309 7 94 7 121 7 221 4 1 4 249 2 361 1 23 8 251 1 205 1 224 2 269 1 227 27 343 2 228 2 315 1 28 2 104 1 254 1 188 1 29 8 297 2 107 7 211 1 77 1 133 1 321 52 31 1 158 2 372 4 302 14 191 7 160 1 137 1 138 25 140 1 161 1 305 1 55 1 
108 1 336 1 298 1 80 1 0 1 11 1 98 1 327 1 72 1 171 1 
15 1 2 1 
123 1 336 1 80 1 0 1 11 1 333 1 327 1 192 1 72 1 
88 1 103 1 
360 1 308 1 329 1 
108 1 336 1 298 1 273 1 201 1 244 1 0 1 80 1 52 2 11 1 260 1 98 1 327 1 279 1 223 1 218 1 154 1 72 1 
108 1 336 1 298 1 273 1 201 1 244 1 0 1 80 1 52 2 11 1 260 1 98 1 327 1 279 1 223 1 218 1 154 1 72 1 
108 1 336 1 298 1 273 1 201 1 244 1 0 1 80 1 52 2 11 1 260 1 98 1 327 1 279 1 223 1 218 1 154 1 72 1 
88 1 308 1 103 1 
88 1 308 1 103 1 
360 1 329 1 
360 1 308 1 329 1 
210 1 169 1 
336 1 244 1 201 1 0 1 2 1 362 1 153 1 223 1 101 1 154 1 7 1 72 1 369 1 256 2 210 1 110 1 80 1 371 1 52 1 82 2 11 1 327 1 194 2 15 1 169 1 195 2 143 2 
61 1 198 2 264 1 290 2 338 1 22 1 313 1 227 1 228 1 343 1 127 1 231 1 297 1 130 2 256 2 321 2 111 1 158 1 213 1 81 1 236 2 275 1 138 1 348 2 303 1 194 2 353 1 378 1 262 1 195 2 242 1 
130 1 264 1 290 1 338 1 236 1 47 1 303 1 238 1 5 1 168 1 167 1 262 1 40 1 10 1 
42 1 220 1 130 1 264 1 174 1 290 1 214 1 236 1 303 1 48 1 165 1 5 1 316 1 207 2 40 1 334 1 209 1 18 1 
42 1 220 1 130 2 264 1 200 1 174 1 290 2 214 1 236 2 303 1 48 1 165 1 5 1 316 1 207 2 40 1 334 1 209 1 18 1 
42 1 220 1 130 1 264 1 174 1 290 1 214 1 236 1 303 1 48 1 165 1 316 1 207 2 118 1 40 1 334 1 209 1 
354 1 
310 1 202 1 260 1 115 1 276 1 373 1 216 1 206 1 270 1 89 1 
309 1 94 1 191 1 177 4 260 2 276 2 373 2 314 2 23 1 239 2 128 2 29 1 
244 1 201 1 141 1 202 1 260 1 284 1 
62 2 64 1 264 1 289 1 310 2 201 3 244 3 290 4 338 1 270 1 183 1 230 2 73 1 10 2 130 4 274 1 236 4 115 2 373 2 276 2 303 1 216 2 238 1 141 2 167 1 283 1 357 2 262 1 284 4 
206 1 89 1 185 1 202 1 260 1 373 1 276 1 
310 1 201 1 244 1 202 1 177 1 270 1 128 1 326 1 260 2 276 1 373 1 115 1 304 1 216 1 355 1 141 1 284 1 
196 1 309 1 264 1 94 1 244 2 201 2 310 2 266 1 290 1 338 1 66 1 177 6 314 3 23 1 226 1 270 2 186 1 367 1 29 1 128 3 10 1 130 1 257 1 191 1 322 1 236 1 260 3 276 3 83 1 115 2 373 4 303 2 53 1 216 2 239 3 141 1 59 1 332 2 357 1 284 2 262 4 285 1 
359 1 62 1 309 2 94 2 244 1 201 1 221 1 310 2 1 1 202 2 177 6 314 5 23 2 270 2 28 1 128 3 29 2 77 1 191 2 137 1 260 5 373 8 115 2 276 5 140 1 328 1 216 2 55 1 239 5 141 1 240 1 142 2 357 1 90 1 284 1 
173 1 310 1 244 1 201 1 46 1 23 2 270 1 104 1 254 1 29 1 344 1 131 1 256 1 82 1 115 1 276 2 373 2 216 1 161 1 194 1 331 1 35 1 240 1 142 2 241 1 120 1 195 1 143 1 
172 1 61 1 198 2 264 1 290 1 338 1 99 1 343 1 228 1 184 1 102 1 127 1 10 1 344 2 297 1 130 1 369 1 256 3 321 1 158 1 213 1 82 2 236 1 138 1 303 1 194 3 377 1 59 1 262 1 195 2 120 1 143 2 
62 1 310 1 202 1 177 2 260 2 276 1 115 1 373 1 216 1 239 1 270 1 357 1 128 1 
336 1 298 1 80 1 169 1 295 1 
288 1 336 1 80 1 
288 1 336 1 80 1 
288 1 336 1 80 1 
336 1 163 1 80 1 
336 1 163 1 80 1 
336 1 163 1 80 1 
336 1 80 1 
0 1 11 1 
297 1 107 2 198 2 321 10 158 1 121 3 46 1 302 5 138 5 161 1 23 2 205 1 227 5 343 1 228 1 104 2 254 2 29 2 
297 1 107 1 198 2 321 2 158 1 94 1 302 1 23 1 205 1 227 2 228 1 343 1 
297 1 107 1 198 2 309 1 321 4 158 1 94 1 121 1 191 1 302 2 138 2 23 1 205 1 227 2 228 1 343 1 29 1 
297 3 107 1 197 1 198 6 321 3 158 3 121 1 302 2 150 1 138 2 374 1 205 1 227 1 228 3 343 3 104 1 254 1 
197 2 198 10 309 3 94 3 221 4 121 7 150 1 1 3 23 5 205 1 224 1 227 16 343 5 228 5 315 1 28 1 104 3 254 3 188 1 29 5 75 1 297 5 107 5 321 34 31 1 212 1 158 5 302 12 191 3 138 18 374 1 161 2 86 1 41 1 
107 1 297 2 197 1 198 4 321 8 31 1 158 2 121 2 302 3 138 4 161 1 23 1 227 4 228 2 343 2 315 1 104 1 254 1 29 1 188 1 
321 6 31 1 121 2 302 2 138 3 161 1 23 1 227 3 185 1 315 1 104 1 254 1 188 1 29 1 
297 1 107 1 198 2 309 1 321 4 158 1 94 1 121 1 191 1 302 2 138 2 23 1 227 2 228 1 343 1 29 1 75 1 
107 1 309 1 321 7 94 1 121 1 221 2 191 1 302 2 1 1 138 4 23 1 224 1 227 3 28 1 29 1 
197 2 198 4 309 2 43 1 94 2 221 2 121 5 1 2 150 1 249 1 23 3 224 1 227 11 228 2 343 2 315 1 104 2 254 2 188 1 29 3 107 4 297 2 321 23 31 1 158 2 302 9 191 2 138 12 161 1 
321 1 221 1 138 1 
321 1 227 1 1 1 
297 1 107 1 198 2 309 1 321 6 158 1 94 1 121 2 302 3 191 1 138 3 23 1 227 3 343 1 228 1 367 1 29 1 75 1 
359 1 198 2 309 2 94 2 221 1 121 1 1 1 23 2 205 1 227 6 343 1 228 1 28 1 29 2 107 1 297 1 321 12 77 1 158 1 191 2 302 2 137 1 138 6 140 1 55 1 
107 1 321 6 121 1 302 2 138 3 161 1 23 1 227 3 104 1 254 1 29 1 
107 1 297 1 197 1 198 2 321 3 158 1 121 1 302 2 150 1 138 2 227 1 228 1 343 1 315 1 104 1 254 1 188 1 
198 2 221 1 121 2 1 1 23 1 205 1 227 4 343 1 228 1 315 1 28 1 104 1 254 1 29 1 188 1 297 1 321 8 31 1 158 1 302 2 138 4 140 1 161 1 
198 4 309 1 94 1 121 2 221 2 1 1 23 2 205 1 224 1 227 6 343 2 228 2 315 1 28 1 104 1 254 1 29 1 188 1 75 1 297 2 107 1 321 11 31 1 158 2 302 3 138 5 140 1 161 1 
359 1 197 1 198 6 309 2 94 2 221 1 121 3 1 1 23 3 205 1 227 9 343 3 228 3 315 1 28 1 104 1 254 1 188 1 29 3 75 1 107 1 297 3 321 19 77 1 31 1 158 3 191 2 302 4 137 1 138 10 140 1 161 1 55 1 
359 1 197 1 198 6 309 2 94 2 221 1 121 3 1 1 23 3 205 1 227 10 343 3 228 3 315 1 28 1 104 1 254 1 188 1 29 2 75 1 107 2 297 3 321 17 77 1 31 1 158 3 191 1 302 5 137 1 138 7 140 1 161 1 55 1 
198 2 221 1 121 2 1 1 23 1 205 1 227 4 343 1 228 1 315 1 28 1 104 1 254 1 29 1 188 1 297 1 321 8 31 1 158 1 302 2 138 4 140 1 161 1 
359 1 198 2 309 2 94 2 221 1 121 1 1 1 23 2 205 1 227 6 343 1 228 1 28 1 29 2 107 1 297 1 321 12 77 1 158 1 191 2 302 2 137 1 138 6 140 1 55 1 
359 1 197 2 198 8 309 2 94 2 221 1 121 3 1 1 23 3 205 1 227 10 343 4 228 4 315 1 28 1 104 1 254 1 188 1 29 2 75 1 107 2 297 4 321 18 77 1 31 1 158 4 191 1 302 5 137 1 138 8 140 1 161 1 55 1 
359 1 197 2 198 8 309 3 94 3 221 1 121 3 1 1 23 3 205 1 227 9 343 4 228 4 28 1 29 2 107 3 297 4 321 16 77 1 158 4 191 2 302 6 137 1 138 7 140 1 374 1 55 1 
107 3 321 7 121 3 302 6 138 4 161 1 23 1 227 3 315 1 104 3 254 3 29 1 188 2 
359 1 197 2 198 8 309 2 94 2 221 1 121 3 1 1 23 3 205 1 227 10 343 4 228 4 315 1 28 1 104 1 254 1 188 1 29 2 107 1 297 4 321 18 77 1 31 1 158 4 191 1 302 4 137 1 138 8 140 1 374 1 161 1 55 1 
194 1 369 1 256 1 245 1 71 1 97 1 195 1 
369 1 256 1 245 1 113 1 259 1 176 1 97 1 203 1 68 1 194 1 71 1 195 1 
130 4 264 1 200 1 290 4 236 4 338 1 114 1 303 1 349 1 238 1 167 1 262 1 10 1 
130 2 264 1 51 1 290 2 236 2 338 1 247 1 303 2 277 1 261 1 59 1 230 1 379 1 262 1 
130 1 264 1 165 1 214 1 290 1 236 1 207 1 303 1 10 1 209 1 
220 1 130 2 264 1 200 1 290 2 81 1 236 2 338 1 303 1 378 1 262 1 
130 4 264 2 200 1 290 5 81 1 236 5 338 2 114 1 325 1 303 2 238 1 167 1 230 1 358 1 262 3 10 1 
130 4 264 2 200 1 290 5 81 1 236 5 338 2 114 1 325 1 303 2 238 1 179 1 167 1 230 1 262 3 10 1 
130 1 369 1 256 2 264 1 290 1 82 1 338 1 236 1 303 1 194 2 59 1 377 1 6 1 262 1 271 1 195 1 10 1 143 1 
130 1 243 1 264 1 51 1 290 1 236 1 338 1 303 2 277 1 226 1 59 1 230 1 262 1 
130 1 264 1 290 1 338 1 167 1 185 1 236 1 262 1 303 1 10 1 238 1 
130 1 369 1 256 2 264 1 290 1 82 1 338 1 236 1 303 1 194 2 59 1 377 1 6 1 102 1 262 1 195 1 10 1 143 1 
264 1 290 1 338 2 6 1 102 1 230 1 106 1 130 1 369 1 256 2 82 1 236 1 303 1 194 2 13 1 377 1 59 2 35 1 282 1 262 3 195 2 219 1 143 2 
264 1 290 2 338 2 6 1 230 1 271 1 106 1 130 2 369 1 256 2 82 1 236 2 303 1 349 1 194 2 13 1 377 1 59 2 35 1 282 1 262 3 195 2 219 1 143 2 
130 3 264 1 201 2 244 2 290 3 322 1 338 1 236 3 202 1 260 1 303 1 349 1 59 1 332 1 282 1 366 1 230 1 262 4 284 1 285 1 219 1 287 1 10 1 
196 1 130 3 264 1 201 2 244 2 290 3 322 1 338 1 236 3 202 1 260 1 303 1 349 1 59 1 332 1 282 1 230 1 262 4 284 1 285 1 219 1 10 1 
130 1 264 1 290 1 236 1 119 1 303 1 
220 1 130 6 243 1 264 2 51 1 200 1 81 1 290 7 236 7 338 2 325 1 136 1 348 1 303 3 277 1 226 1 59 1 358 1 119 1 262 3 10 2 
172 1 61 2 198 4 264 1 121 2 200 1 290 1 338 1 267 1 175 1 178 1 22 1 23 1 25 1 227 3 6 1 228 2 343 2 315 1 184 1 102 1 104 1 127 2 254 1 29 1 188 1 297 2 130 1 369 2 256 2 321 6 31 1 111 1 158 2 302 2 82 1 236 1 138 3 303 1 161 1 194 2 59 1 377 1 281 1 262 1 195 1 143 1 
196 1 310 2 244 3 201 3 290 1 266 1 202 1 66 1 206 1 270 2 186 1 10 1 130 1 110 1 274 1 322 1 236 1 260 1 373 1 276 1 115 2 216 2 332 1 141 1 89 1 262 2 284 2 285 1 
130 2 257 1 264 1 200 1 322 1 290 2 236 2 338 1 303 2 226 1 59 1 119 1 262 2 
369 1 272 1 370 1 45 1 222 1 
369 1 272 1 110 1 370 2 201 2 244 2 45 2 202 1 260 1 222 2 182 1 4 1 164 1 13 1 27 1 26 1 35 1 285 1 106 1 
194 1 256 1 272 1 45 1 275 1 231 1 195 1 222 1 242 1 
272 1 182 1 164 1 
76 1 330 1 363 1 299 1 234 1 19 1 339 1 318 1 
299 1 134 2 234 2 125 1 19 1 37 1 339 1 318 2 84 1 
296 1 76 1 330 1 85 1 363 1 63 1 299 1 234 2 37 1 19 1 339 1 318 2 
76 1 299 1 234 3 19 1 339 1 291 1 217 1 33 2 330 1 363 1 318 3 39 2 
299 2 149 1 117 1 105 2 
76 1 234 1 19 1 339 1 318 1 248 1 
76 1 330 1 363 1 299 1 234 2 37 1 19 1 339 1 318 2 312 1 
152 1 
76 1 330 1 363 1 299 1 234 1 19 1 339 1 318 1 
330 1 363 1 299 1 185 1 
330 1 363 1 299 1 234 1 19 1 339 1 318 1 
234 1 301 1 32 1 
76 1 299 1 234 3 19 1 339 1 217 1 33 2 330 1 363 1 225 1 318 3 39 1 
330 1 363 1 299 1 146 1 234 2 37 1 19 1 339 1 318 2 
76 1 157 1 299 1 134 1 234 1 125 1 19 1 339 1 318 1 
76 1 330 1 299 1 234 1 19 1 339 1 318 1 
76 1 330 2 363 1 234 1 19 1 339 1 318 1 
76 1 3 1 330 1 299 1 234 2 258 1 229 1 19 2 339 2 318 2 
76 1 320 1 299 1 134 1 234 2 125 1 37 1 19 1 339 1 318 2 84 1 312 1 
76 1 42 1 299 1 234 2 19 1 339 1 330 1 363 1 34 1 165 1 316 1 37 1 207 2 318 2 209 1 
375 1 76 1 299 1 134 1 146 1 234 2 125 1 37 1 19 1 339 1 318 2 84 1 
76 1 299 1 234 3 19 1 339 1 312 1 33 1 330 1 363 1 37 1 318 3 
299 1 234 1 125 1 37 1 318 1 84 1 
330 1 299 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 0 152 147 225 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 369 120 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 369 120 218 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
144 1 214 6 121 1 47 1 278 2 332 2 259 9 237 2 358 1 360 2 129 5 52 3 201 2 58 9 287 1 36 4 105 1 314 1 17 1 293 2 294 1 38 1 184 1 209 1 210 2 112 1 272 1 213 1 
144 1 214 6 121 1 47 1 278 2 332 2 259 9 237 2 358 1 360 2 129 5 52 3 201 2 58 9 287 1 36 4 105 1 314 1 17 1 294 1 293 2 38 1 184 1 209 1 210 2 112 1 272 1 213 1 
144 1 214 7 121 1 47 1 278 2 332 2 259 10 237 2 358 1 360 2 129 6 52 4 201 2 58 10 287 1 36 5 105 1 314 1 17 1 294 1 293 2 38 1 184 1 209 1 210 2 112 1 272 1 213 1 
144 1 214 4 121 1 47 1 278 2 332 2 259 7 237 2 358 1 360 2 129 4 52 2 201 2 58 7 287 1 36 3 105 1 314 1 294 1 293 1 38 1 184 1 209 1 210 2 112 1 272 1 213 1 
144 1 58 4 214 3 121 1 36 2 105 1 17 1 278 1 332 1 237 1 259 4 293 2 358 1 38 1 129 3 210 1 52 1 201 1 
144 1 58 2 105 1 195 1 278 1 237 1 259 2 358 1 129 1 360 1 210 1 201 1 112 1 263 1 272 1 11 1 
144 1 58 3 214 1 36 1 105 1 47 1 237 2 259 3 358 1 360 1 129 2 52 1 201 2 
144 1 214 7 121 1 94 1 47 1 278 1 332 1 259 9 237 2 358 1 360 1 129 5 308 1 52 3 201 2 58 9 36 4 105 1 314 1 17 1 293 2 38 1 184 1 210 1 
144 1 214 7 121 1 94 1 47 1 278 1 332 1 259 9 237 2 358 1 360 1 129 5 308 1 52 3 201 2 58 9 36 4 105 1 314 1 17 1 293 2 38 1 184 1 210 1 
8 1 242 1 348 1 
0 2 53 1 242 1 
366 2 333 2 245 1 159 1 181 2 215 2 203 2 115 2 
329 1 215 2 48 1 127 1 306 1 333 2 199 1 279 1 130 2 32 1 203 2 284 1 104 1 366 3 244 1 245 1 159 1 370 2 181 2 61 1 207 1 62 1 344 2 86 1 291 1 161 1 87 1 162 2 137 1 188 1 299 1 189 1 166 1 115 3 354 1 140 1 300 2 
366 1 333 1 251 1 159 1 124 1 181 1 215 1 203 1 115 1 135 1 
366 1 123 1 204 1 124 1 169 1 215 1 348 1 347 1 250 1 231 1 242 1 324 1 115 1 337 1 
366 1 123 1 204 1 124 1 181 1 169 1 215 1 348 1 347 2 333 1 250 2 203 1 242 1 115 1 337 1 
250 1 136 1 178 1 16 1 347 1 
250 2 178 1 30 1 16 1 242 1 364 1 348 1 347 2 
250 1 178 1 347 1 
366 1 288 1 159 1 124 1 181 1 16 1 215 1 135 1 347 1 250 1 333 1 251 1 203 1 115 1 
242 1 
250 2 178 1 30 1 16 1 242 1 126 1 348 1 347 2 
74 1 83 2 157 1 178 2 180 1 16 2 26 1 64 1 248 1 348 1 347 5 250 5 375 2 30 1 350 2 322 1 242 1 310 1 254 1 
8 1 245 1 
366 2 245 2 315 1 181 1 215 2 333 1 203 1 115 2 271 1 
327 1 362 1 9 1 
366 1 245 1 329 1 86 1 127 1 291 1 306 1 130 1 87 1 162 1 114 1 166 1 284 1 115 1 140 1 300 1 
366 3 333 3 245 1 181 1 215 3 203 3 115 3 40 1 
366 1 333 1 124 1 215 1 203 1 115 1 135 1 
366 1 333 1 124 1 181 1 315 1 215 1 203 1 115 1 271 1 
329 1 123 1 124 1 169 1 215 3 48 1 127 1 306 1 333 3 279 1 130 1 262 1 32 1 203 3 284 1 337 1 104 1 366 4 285 1 244 1 245 1 204 1 159 1 370 2 181 2 315 1 61 1 62 1 344 1 86 1 291 1 161 1 296 1 40 1 347 1 250 1 87 1 162 1 137 1 299 1 166 1 115 4 140 1 300 1 
366 2 333 1 245 1 231 1 172 1 215 2 203 1 115 2 40 1 
285 1 366 3 176 1 123 1 204 1 124 1 181 1 315 1 169 1 215 3 347 1 40 2 250 1 333 3 262 1 203 3 242 1 115 3 337 1 
366 2 315 1 181 1 215 2 40 1 333 2 362 1 9 1 203 2 115 2 
366 1 245 1 329 1 86 1 127 1 291 1 306 1 130 1 87 1 162 1 166 1 284 1 115 1 300 1 140 1 
366 1 245 1 86 1 127 1 291 1 306 1 130 1 87 1 162 1 200 1 56 1 284 1 115 1 300 1 140 1 
190 1 327 2 122 1 328 1 3 1 48 1 9 2 362 2 32 2 57 1 104 1 33 1 244 1 268 1 370 2 207 2 62 1 345 1 344 4 19 1 297 1 137 1 270 1 299 1 
366 1 333 1 204 1 124 1 215 1 203 1 115 1 39 1 
285 1 366 2 329 1 215 1 86 1 291 1 127 1 40 1 306 1 333 1 87 1 130 1 162 1 9 1 203 1 284 1 166 1 115 2 140 1 300 1 
366 5 285 1 342 1 245 1 315 1 181 1 215 5 40 2 333 4 318 1 231 1 172 1 203 4 115 5 
366 2 333 2 124 1 215 2 203 2 115 2 39 1 135 1 
355 1 373 1 
355 1 373 1 
274 1 186 1 
274 1 186 1 
274 1 186 1 
339 1 355 1 373 1 
355 1 373 1 18 1 
355 2 373 2 274 1 186 1 205 1 81 1 
339 1 355 1 373 1 
339 1 355 1 373 1 
355 1 373 1 164 1 
355 1 373 1 164 1 
355 1 373 1 164 1 
355 2 368 2 205 1 85 2 236 3 238 1 347 2 250 2 373 2 374 1 51 1 100 1 241 1 319 1 80 2 323 1 242 1 253 2 338 2 
355 1 257 1 215 2 236 1 305 1 7 1 333 2 51 1 170 1 80 1 203 2 366 2 312 1 245 1 368 1 85 1 372 1 18 1 66 1 347 1 250 1 373 1 253 1 115 2 
210 1 278 1 332 1 
210 1 278 1 195 1 
96 1 182 1 278 3 195 1 332 2 103 1 
96 1 182 1 278 2 195 1 332 1 70 1 
96 2 182 1 278 2 195 1 332 1 
325 1 0 3 191 1 193 1 74 3 122 1 257 1 95 1 3 1 7 1 27 2 219 2 30 1 53 1 310 2 242 2 312 1 33 1 83 1 35 2 178 1 16 4 317 1 64 1 347 5 348 1 250 5 375 1 42 1 350 1 270 1 321 1 
0 9 191 1 74 8 25 1 122 3 257 4 95 3 302 1 3 3 26 1 99 1 219 6 30 1 154 1 101 1 53 3 283 1 310 6 242 5 33 3 83 2 35 6 178 6 160 5 16 7 64 1 347 9 348 1 250 9 136 5 375 2 42 2 350 2 270 3 321 2 
325 1 0 4 193 1 74 3 122 1 257 1 95 1 3 1 26 1 27 1 219 2 53 2 242 3 310 2 83 1 33 1 35 2 16 2 348 1 347 3 250 3 375 1 42 1 350 1 270 1 321 1 
325 1 0 7 193 1 74 5 122 2 257 2 95 2 3 2 26 1 27 2 219 4 154 1 101 1 53 3 283 1 242 4 310 4 83 1 33 2 35 4 16 3 348 1 347 4 250 4 375 1 42 1 350 1 270 2 321 1 
8 1 109 1 140 1 
140 1 22 1 
282 1 
284 1 140 1 
198 1 109 2 284 1 140 3 291 1 273 1 
284 1 140 1 291 1 
261 1 140 1 
190 2 326 2 33 1 145 1 1 1 14 1 268 3 246 1 146 1 3 1 207 4 331 1 344 7 108 1 202 1 32 3 117 1 
190 2 326 2 33 1 145 1 1 1 14 1 268 3 246 1 146 1 3 1 207 4 331 1 344 7 108 1 202 1 32 3 117 1 
190 2 326 2 33 1 145 1 1 1 14 1 268 3 246 1 146 1 15 1 3 1 207 4 331 1 344 7 108 1 202 1 32 3 117 1 
24 1 190 2 326 1 1 1 122 1 95 1 46 1 277 1 3 1 304 2 48 1 331 2 361 1 202 2 32 6 264 1 33 1 341 1 246 1 268 4 370 2 62 1 207 5 344 11 108 1 41 1 270 1 137 1 299 1 117 1 
190 3 326 2 167 1 145 1 1 1 146 1 3 1 48 2 331 1 361 1 202 1 54 1 32 4 33 1 268 4 14 1 370 4 62 2 207 5 344 9 108 1 137 2 299 2 117 1 
144 1 214 1 143 1 195 1 278 2 332 1 259 2 237 1 127 1 358 1 78 1 129 1 360 1 130 1 79 1 201 1 10 1 103 1 365 1 58 2 340 1 313 1 105 1 290 1 87 1 210 1 162 1 298 1 230 1 300 1 
144 1 214 2 143 1 195 1 278 2 332 1 259 3 237 1 127 1 78 1 129 1 360 1 130 1 201 1 103 1 10 1 365 1 58 3 340 1 177 1 313 1 105 1 290 1 65 1 87 1 210 1 162 1 67 1 298 1 300 1 
144 1 214 2 143 1 195 1 278 2 332 1 259 2 127 1 129 1 360 1 130 1 103 1 365 1 58 2 340 1 313 1 105 1 290 1 65 1 87 1 162 1 210 1 67 1 298 1 300 1 
233 1 127 1 259 1 237 1 306 1 196 1 360 2 130 1 201 1 284 1 365 2 58 1 132 1 286 1 340 2 12 1 177 1 313 2 87 1 162 1 300 1 140 1 23 1 
143 1 195 1 278 2 332 1 259 1 237 1 127 1 358 1 78 1 360 1 130 1 79 1 201 1 10 1 103 1 365 1 58 1 340 1 313 1 290 1 87 1 210 1 162 1 67 1 298 1 300 1 
45 1 
0 2 93 1 235 1 152 1 335 1 53 2 242 2 284 1 337 1 155 2 12 1 204 1 60 2 292 1 64 1 348 1 249 2 347 5 250 5 162 2 350 1 21 1 69 1 115 1 300 2 23 1 74 2 301 1 168 4 123 1 124 1 169 1 216 2 215 1 127 1 306 2 130 2 30 3 220 1 310 2 174 2 366 1 83 1 178 6 84 1 37 2 87 1 375 1 231 1 320 1 321 1 324 1 140 1 377 2 141 1 
366 1 301 1 168 2 178 2 204 1 123 1 124 1 169 1 235 1 215 1 126 1 292 1 249 1 347 3 250 3 30 1 335 1 21 1 231 1 324 1 115 1 337 1 
301 1 168 3 123 1 124 1 169 1 215 1 235 1 126 1 30 1 335 1 242 1 337 1 174 1 366 1 178 1 204 1 292 1 347 3 348 1 250 3 21 1 231 1 115 1 324 1 
366 1 301 1 168 3 178 2 204 1 123 1 124 1 169 1 37 1 235 1 215 1 126 1 292 1 348 1 249 1 347 3 250 3 30 1 335 1 21 1 231 1 242 1 324 1 115 1 174 1 337 1 
74 1 301 1 93 1 168 6 123 1 124 1 147 1 169 1 216 2 215 1 235 1 126 1 330 1 152 1 280 1 30 3 335 1 53 2 310 1 242 5 174 4 337 1 366 1 83 1 155 2 156 1 178 7 204 1 60 2 37 4 292 1 64 1 346 1 348 5 347 5 249 4 250 5 375 1 350 1 21 1 231 1 324 1 115 1 377 2 
0 2 93 1 235 1 152 1 335 1 53 2 242 2 337 1 155 2 204 1 60 2 292 1 64 1 347 4 249 2 348 1 250 4 350 1 21 1 115 1 74 1 301 1 168 4 123 1 124 1 169 1 215 1 216 2 30 2 220 1 310 1 174 2 366 1 83 1 178 4 37 2 375 1 231 1 324 1 377 2 
74 1 301 1 93 1 168 4 123 1 124 1 147 1 169 1 216 2 215 1 235 1 152 1 280 1 30 2 335 1 53 2 242 1 310 1 174 2 337 1 366 1 83 1 155 2 156 1 178 4 204 1 60 2 37 2 292 1 64 1 348 1 249 2 347 4 250 4 375 1 350 1 21 1 231 1 115 1 324 1 377 2 
74 1 301 1 93 1 168 4 123 1 124 1 147 1 169 1 216 2 215 1 235 1 152 1 280 1 30 2 335 1 53 2 242 1 310 1 174 2 337 1 366 1 83 1 155 2 156 1 178 4 204 1 60 2 37 2 292 1 64 1 348 1 249 2 347 4 250 4 375 1 350 1 21 1 231 1 115 1 324 1 377 2 
0 1 74 1 301 1 168 2 123 1 124 1 147 1 169 1 215 1 235 1 260 1 197 1 152 1 335 1 310 1 337 1 366 1 83 1 204 1 60 1 225 1 106 1 292 1 64 1 347 2 250 2 375 1 350 1 21 1 231 1 115 1 324 1 377 1 
74 1 301 1 93 1 168 5 123 1 124 1 147 1 169 1 216 2 215 1 235 1 330 1 152 1 280 1 30 2 335 1 53 2 242 1 310 1 337 1 174 3 366 1 83 1 155 2 156 1 204 1 178 5 60 2 37 3 292 1 64 1 348 1 347 4 249 3 250 4 375 1 350 1 21 1 231 1 115 1 324 1 377 2 
74 1 301 1 93 1 168 5 123 1 124 1 147 1 169 1 216 2 215 1 235 1 330 1 152 1 280 1 30 2 335 1 53 2 242 1 310 1 337 1 174 3 366 1 83 1 155 2 156 1 204 1 178 5 60 2 37 3 292 1 64 1 348 1 347 4 249 3 250 4 375 1 350 1 21 1 231 1 115 1 324 1 377 2 
0 2 74 1 301 1 168 4 123 1 124 1 169 1 235 1 215 1 260 2 197 1 152 1 30 2 335 1 220 1 242 1 310 1 174 2 337 1 366 1 83 1 178 4 204 1 60 2 37 2 292 1 64 1 348 1 249 2 347 4 250 4 375 1 350 1 111 2 21 1 231 1 324 1 115 1 377 2 
190 2 326 1 145 1 327 1 1 1 146 1 3 1 48 1 8 1 362 1 9 1 32 3 104 1 33 1 244 1 245 2 268 2 14 1 370 2 62 1 207 3 344 6 108 1 19 1 137 1 299 1 
190 1 24 1 327 11 122 1 95 2 46 3 3 1 304 3 48 2 331 1 279 1 131 1 309 1 336 1 9 11 362 4 32 6 104 2 33 2 244 1 245 1 34 1 268 2 370 4 62 2 207 8 344 14 63 1 41 1 137 2 270 2 299 2 354 1 
329 1 215 1 48 1 127 1 306 1 333 1 130 1 279 1 362 1 32 1 203 1 284 1 363 1 104 1 366 2 285 1 244 1 245 1 34 1 370 2 371 1 62 1 207 1 86 1 344 2 291 1 40 1 87 1 162 1 137 1 299 1 114 1 166 1 139 1 115 2 140 1 300 1 354 1 
190 4 326 1 145 1 327 7 1 1 146 1 329 2 95 2 148 2 3 3 4 2 149 1 48 3 331 4 333 1 279 1 9 7 203 1 284 2 285 1 104 3 244 3 245 2 14 1 61 2 62 3 207 10 344 20 108 1 291 2 162 3 67 1 299 3 113 2 166 2 115 3 354 1 212 1 300 3 122 2 215 1 127 2 306 1 130 3 31 1 362 7 32 10 366 3 33 3 34 1 268 8 370 6 86 2 40 1 87 2 187 2 137 3 270 2 140 2 
215 1 6 1 48 2 127 2 151 1 306 2 333 1 130 7 240 1 279 1 28 1 32 1 102 1 203 1 284 2 366 1 104 2 244 2 12 1 370 4 62 2 207 1 344 2 19 1 40 1 87 2 162 8 67 1 230 1 137 2 299 2 353 1 189 2 115 1 140 3 300 8 354 1 378 1 23 1 
190 1 327 1 122 1 276 1 95 1 3 1 215 1 48 1 333 1 362 1 9 1 32 2 203 1 104 1 366 1 33 1 244 1 34 1 268 1 370 2 181 1 315 1 62 1 207 1 344 3 137 1 270 1 299 1 115 1 
104 1 327 1 33 1 244 1 328 1 268 1 370 2 62 1 48 1 207 2 331 1 344 2 19 1 362 1 9 1 137 1 270 1 299 1 
190 1 104 1 327 1 244 1 122 1 268 1 370 2 3 1 62 1 48 1 344 2 19 1 362 1 9 1 137 1 299 1 32 2 57 1 
190 1 104 1 327 2 33 1 244 1 122 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 331 1 344 4 19 1 362 2 9 2 137 1 270 1 32 2 299 1 
104 1 327 1 33 1 244 1 328 1 268 1 370 2 62 1 48 1 207 2 331 1 344 2 362 1 9 1 137 1 270 1 299 1 378 1 
190 1 104 1 327 1 244 1 122 1 268 1 370 2 3 1 62 1 48 1 344 2 362 1 9 1 137 1 299 1 32 2 57 1 378 1 
190 1 104 1 327 2 33 1 244 1 122 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 331 1 344 4 362 2 9 2 137 1 270 1 32 2 299 1 378 1 
190 1 104 1 327 2 33 1 244 1 122 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 331 1 344 4 362 2 9 2 137 1 270 1 32 2 299 1 
329 1 48 1 127 1 306 1 130 1 279 1 32 1 284 1 366 1 104 1 244 1 245 1 370 2 61 1 207 1 62 1 344 2 86 1 291 1 87 1 162 1 137 1 299 1 166 1 115 1 354 1 300 1 140 1 
48 1 127 1 49 1 306 1 130 1 279 1 200 1 32 1 284 1 56 1 366 1 104 1 244 1 245 1 370 2 207 1 62 1 344 2 86 1 291 1 87 1 162 1 137 1 299 1 115 1 354 1 300 1 140 1 
190 1 104 1 327 2 33 1 244 1 122 1 34 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 331 1 344 4 362 2 9 2 137 1 270 1 32 2 299 1 
190 1 327 2 122 1 329 1 95 1 3 1 48 1 331 1 127 1 130 1 362 2 9 2 32 2 284 1 366 1 104 1 33 1 244 1 268 2 370 2 61 1 207 2 62 1 344 4 86 1 291 1 87 1 162 1 187 1 270 1 230 1 137 1 299 1 166 1 115 1 300 1 140 1 
327 1 122 1 95 1 3 1 215 1 48 1 331 1 333 1 281 1 9 1 362 1 32 1 203 1 104 1 366 1 33 1 244 1 34 1 268 1 370 2 181 1 315 1 62 1 207 2 344 3 137 1 270 1 299 1 115 1 
190 1 24 1 120 1 194 1 122 1 95 1 46 1 3 1 304 2 48 2 331 1 218 1 54 1 32 5 33 1 267 1 268 2 370 4 62 2 207 4 344 9 41 1 349 1 137 2 270 1 299 2 255 1 91 1 92 1 
190 1 120 2 122 1 95 2 46 2 303 1 3 1 304 2 48 3 331 1 258 1 218 1 361 2 32 8 54 1 33 2 267 2 268 2 369 1 370 6 62 3 207 10 344 18 107 1 349 1 41 2 137 3 270 2 299 3 252 1 88 1 255 2 
190 1 24 1 120 1 194 1 122 1 95 1 356 1 46 1 3 1 304 2 48 2 331 1 218 1 54 1 32 5 33 1 267 1 268 2 370 4 62 2 207 4 344 9 41 1 349 1 137 2 270 1 299 2 255 1 92 1 
190 1 24 1 120 1 194 1 122 1 95 1 356 1 46 1 3 1 304 2 48 2 331 1 218 1 54 1 32 5 33 1 267 1 268 2 370 4 62 2 207 4 344 9 41 1 349 1 137 2 270 1 299 2 255 1 92 1 
190 6 24 2 326 1 145 1 120 1 1 1 122 5 146 1 95 6 303 1 46 4 3 6 304 4 48 2 258 1 331 5 218 1 361 1 336 2 54 1 32 19 33 7 267 2 14 1 268 11 369 1 370 4 62 2 207 23 107 1 344 42 108 1 41 2 349 1 137 2 270 6 299 2 252 1 88 1 255 1 
355 1 373 1 368 1 205 1 80 1 323 1 85 1 253 1 238 1 116 1 
372 1 18 1 
355 1 373 1 185 1 368 1 20 1 138 1 80 1 85 1 253 1 
355 1 368 1 205 1 85 1 236 2 238 1 347 1 250 1 373 1 374 1 51 1 100 1 319 1 80 1 323 1 242 1 253 1 338 1 
355 1 368 1 205 1 85 1 236 2 238 1 347 1 250 1 373 1 374 1 51 1 100 1 319 1 80 1 323 1 242 1 253 1 338 1 
355 1 368 1 205 1 85 1 236 2 238 1 347 1 250 1 373 1 374 1 51 1 100 1 319 1 80 1 323 1 242 1 253 1 338 1 
339 1 81 1 71 1 
339 1 81 1 71 1 
164 1 224 1 
164 1 224 1 81 1 
170 1 66 1 
355 1 275 1 257 1 215 2 236 1 305 1 7 1 333 2 100 1 170 1 80 1 203 2 338 1 366 2 312 1 245 1 368 1 16 1 85 1 372 1 18 1 66 1 347 1 250 1 373 1 253 1 115 2 
339 1 71 1 
164 1 224 1 81 1 
97 1 125 1 98 1 215 2 48 1 127 1 240 1 279 1 130 2 32 1 284 1 104 1 366 2 244 1 34 1 179 1 370 2 62 1 207 1 344 2 316 1 87 1 162 2 137 1 299 1 353 1 189 2 115 2 140 1 300 2 354 1 
143 1 340 1 232 1 289 1 278 2 195 1 332 1 127 1 87 1 130 2 210 1 162 2 29 1 67 1 298 1 230 1 103 1 10 1 300 2 
143 1 340 1 232 1 278 2 195 1 332 1 133 1 127 1 130 1 87 1 210 1 162 1 67 1 298 1 103 1 10 1 300 1 
340 1 12 1 289 1 127 1 306 1 196 1 87 1 130 1 162 1 284 1 140 1 300 1 89 1 23 1 
143 1 340 1 232 1 289 1 278 2 195 1 332 1 127 1 130 1 87 1 210 1 162 1 29 1 67 1 298 1 103 1 10 1 300 1 
334 1 
8 1 74 1 322 1 242 1 310 1 254 1 348 1 
0 1 83 1 74 1 155 1 93 1 178 1 216 1 64 1 348 1 347 1 250 1 375 1 30 1 350 1 53 1 242 2 310 1 
192 1 0 12 2 2 95 2 148 2 3 2 150 2 198 1 53 6 284 3 242 8 337 2 291 3 208 1 64 4 348 2 347 5 250 5 109 2 162 3 211 1 350 4 165 2 254 1 22 3 300 3 73 2 74 9 122 2 76 1 127 4 77 2 306 1 130 3 219 6 261 2 30 3 310 8 223 2 265 2 266 1 83 4 33 2 35 6 178 5 84 1 87 3 375 4 230 1 270 2 321 2 322 1 140 10 142 2 
0 6 74 8 122 2 95 2 303 1 46 1 357 1 3 2 304 1 258 1 219 5 30 1 53 3 242 5 310 5 311 1 83 2 33 2 35 5 178 1 84 1 107 1 64 2 347 1 348 2 250 1 41 1 375 2 350 2 270 2 321 1 165 2 252 1 88 1 73 1 
74 2 1 1 124 1 3 1 215 1 333 1 203 1 310 2 366 1 175 1 83 1 33 2 156 1 288 1 14 1 159 1 181 1 108 1 64 1 135 1 347 1 250 1 251 1 375 1 350 1 165 2 115 1 73 1 
74 1 83 1 375 1 350 1 322 1 242 1 310 1 254 1 64 1 348 1 
0 10 33 2 74 5 35 5 122 2 95 2 148 1 3 2 219 5 270 2 53 5 165 2 310 5 242 5 73 1 
250 1 178 1 30 1 242 1 348 1 347 1 
74 2 26 1 76 1 127 1 306 2 130 4 30 2 284 1 310 2 83 2 12 1 178 4 84 2 134 1 64 1 347 3 250 3 87 1 375 2 162 4 211 2 163 1 350 2 321 2 69 1 140 1 300 4 141 1 23 1 
329 1 215 2 48 1 127 1 306 1 333 2 279 1 130 1 32 1 203 2 284 1 366 3 104 1 244 1 245 1 159 1 370 2 181 2 61 1 62 1 344 1 86 1 161 1 291 1 87 1 162 1 137 1 299 1 166 1 115 3 300 1 140 1 
326 1 0 4 83 1 74 1 35 2 84 1 64 1 348 2 375 1 219 2 350 1 53 2 321 1 310 2 242 4 
247 1 85 1 253 1 
323 1 85 1 226 1 253 1 66 1 
247 1 85 1 253 1 
247 1 85 1 253 1 
82 1 85 1 253 1 
82 1 85 1 253 1 
82 1 85 1 253 1 
85 1 253 1 
355 1 373 1 
190 2 326 1 33 1 145 1 1 1 14 1 268 3 146 1 370 4 3 1 207 4 62 2 48 2 344 8 331 1 108 1 361 1 137 2 32 4 299 2 
190 2 326 1 145 1 33 1 1 1 146 1 268 2 14 1 3 1 207 3 344 6 108 1 8 1 32 3 
190 1 33 1 122 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 344 4 331 1 50 1 137 1 270 1 32 2 299 1 
190 1 24 1 33 1 122 1 268 2 95 1 46 1 3 1 304 2 207 3 344 7 331 1 41 1 270 1 32 4 
24 1 190 5 326 1 145 1 1 2 122 2 146 1 95 2 46 2 3 3 304 2 48 2 331 4 361 2 336 1 32 12 33 3 341 1 14 1 268 9 370 4 207 11 62 2 344 23 108 2 63 1 270 2 137 2 299 2 
32 1 304 1 344 1 
46 1 207 1 344 1 
190 2 33 1 122 1 268 3 95 1 370 2 148 1 3 1 48 1 62 1 207 3 344 6 331 1 50 1 137 1 270 1 299 1 32 3 
190 1 122 2 95 2 46 1 303 1 3 2 304 1 48 1 331 1 258 1 32 6 54 1 33 2 268 2 370 2 62 1 207 6 344 12 107 1 41 1 137 1 270 2 299 1 88 1 252 1 
190 1 33 1 1 1 14 1 268 2 3 1 207 3 344 6 331 1 108 1 32 3 
190 1 145 1 1 1 341 1 268 2 146 1 370 2 207 1 62 1 48 1 331 1 344 3 108 1 361 1 137 1 32 2 299 1 
190 3 175 1 33 2 1 2 268 5 14 1 370 2 3 2 48 1 62 1 207 5 331 2 344 10 108 2 137 1 299 1 54 1 32 5 
33 1 268 1 370 2 62 1 48 1 207 2 344 2 331 1 137 1 270 1 54 1 299 1 
190 1 33 1 122 1 268 2 95 1 370 2 3 1 62 1 48 1 207 2 344 4 331 1 137 1 270 1 32 2 54 1 299 1 
190 1 341 1 194 1 1 1 268 2 370 6 62 3 48 3 207 1 344 3 331 1 108 1 361 1 137 3 32 2 54 1 299 3 
190 3 145 1 194 1 1 2 146 1 46 1 3 2 304 1 48 4 331 3 50 1 361 1 32 8 264 1 54 1 33 2 175 1 341 1 14 1 268 6 370 8 62 4 207 7 344 15 108 2 41 1 137 4 299 4 
190 2 326 1 145 1 1 1 146 1 46 1 303 1 3 1 304 1 48 1 32 4 54 1 33 1 268 2 14 1 370 2 62 1 207 4 344 8 108 1 41 1 137 1 299 1 
190 2 24 1 326 1 145 1 1 1 146 1 95 1 303 1 46 1 3 1 304 2 48 2 331 1 50 1 32 5 54 1 33 2 14 1 268 3 370 4 62 2 207 6 344 11 108 1 41 1 137 2 270 1 299 2 
190 3 326 1 145 1 1 1 122 2 146 1 95 2 46 1 303 1 3 3 304 1 48 3 331 1 258 1 50 1 361 1 32 10 54 1 33 3 14 1 268 4 370 6 62 3 207 9 344 19 107 1 108 1 41 1 137 3 270 2 299 3 88 1 252 1 
190 3 326 1 145 1 1 1 122 1 146 1 95 2 46 1 303 1 3 2 304 1 48 3 331 2 258 1 50 1 361 1 32 7 54 1 33 3 14 1 268 5 370 6 62 3 207 10 344 17 107 1 108 1 41 1 137 3 270 2 299 3 88 1 252 1 
190 2 326 1 145 1 1 1 146 1 46 1 303 1 3 1 304 1 48 1 32 4 54 1 33 1 268 2 14 1 370 2 62 1 207 4 344 8 108 1 41 1 137 1 299 1 
190 1 122 2 95 2 46 1 303 1 3 2 304 1 48 1 331 1 258 1 32 6 54 1 33 2 268 2 370 2 62 1 207 6 344 12 107 1 41 1 137 1 270 2 299 1 88 1 252 1 
190 3 326 1 145 1 1 1 122 1 146 1 95 2 303 1 46 1 3 2 304 1 48 4 331 2 258 1 50 1 361 2 32 8 54 1 33 3 14 1 268 5 370 8 62 4 207 10 344 18 107 1 108 1 41 1 137 4 270 2 299 4 252 1 88 1 
190 3 194 1 122 2 95 3 303 1 46 1 3 2 304 1 48 4 331 3 258 1 361 2 32 7 54 1 33 3 268 6 370 8 62 4 207 9 344 16 107 1 41 1 137 4 270 3 299 4 252 1 88 1 
190 3 145 2 33 1 1 3 146 1 268 6 14 1 3 1 207 3 344 7 331 3 108 3 32 4 
190 3 326 1 145 1 1 1 194 1 122 1 146 1 95 2 303 1 46 1 3 2 304 1 48 4 331 1 258 1 361 2 32 8 54 1 33 3 14 1 268 4 370 8 62 4 207 10 344 18 107 1 108 1 41 1 137 4 270 2 299 4 252 1 88 1 
366 1 245 1 231 1 172 1 215 1 115 1 128 1 
366 1 119 1 243 1 307 1 245 1 376 1 351 1 231 1 172 1 215 1 115 1 128 1 
8 1 87 1 130 1 12 1 162 1 284 1 127 1 140 1 300 1 23 1 306 1 
366 2 245 1 329 1 215 1 86 1 291 1 127 1 40 1 306 1 333 1 130 1 87 1 162 1 203 1 284 1 115 2 140 1 300 1 
366 2 245 1 204 1 123 1 329 1 124 1 215 2 86 1 291 2 127 1 40 1 333 2 130 1 87 1 162 1 211 1 261 1 203 1 284 2 115 2 140 3 300 1 142 1 
123 1 124 1 215 2 127 1 333 2 130 2 200 1 261 1 203 1 284 2 366 2 245 1 204 1 86 1 291 2 40 1 87 1 162 2 211 1 115 2 300 2 140 3 43 1 142 1 
44 1 127 1 306 1 130 3 261 1 284 1 242 1 337 1 178 1 291 1 347 2 348 1 250 2 87 1 109 1 162 3 110 1 211 1 140 4 22 1 300 3 43 1 142 1 
178 1 291 1 127 1 306 1 348 1 347 2 250 2 130 3 109 1 87 1 162 3 211 1 261 1 242 1 284 1 337 1 300 3 223 1 22 1 140 4 43 1 142 1 
87 1 130 1 162 1 102 1 127 1 300 1 
59 1 6 1 291 1 127 3 151 1 306 2 198 1 130 6 87 2 162 7 28 1 67 1 230 1 171 1 55 1 189 1 102 1 353 1 284 2 300 7 140 3 
190 2 326 1 145 1 327 1 1 1 329 1 146 1 3 1 98 1 48 2 333 1 9 1 203 1 284 1 104 2 244 2 245 2 14 1 61 1 62 2 207 3 344 6 291 1 108 1 162 1 113 1 299 2 166 1 115 2 300 1 215 1 127 1 130 1 362 1 32 3 366 2 33 1 34 1 268 2 370 4 86 1 40 1 87 1 187 1 230 1 137 2 140 1 
74 1 76 1 150 1 77 1 306 1 130 1 30 1 242 1 310 1 223 1 337 1 265 1 83 2 178 2 16 1 64 2 348 1 347 3 250 3 109 1 375 2 162 1 350 2 322 1 254 1 300 1 22 1 140 2 
192 1 291 1 127 2 198 1 109 1 130 2 87 1 162 2 230 1 102 1 284 1 300 2 140 2 
12 1 5 1 127 1 306 1 130 4 87 1 162 4 230 1 284 1 300 4 140 1 43 1 23 1 
158 1 149 1 291 1 127 2 130 2 87 1 162 2 211 1 153 1 171 1 55 1 284 1 300 2 140 1 
87 1 130 1 210 1 162 1 298 1 278 1 195 1 127 1 300 1 306 1 
87 1 130 2 162 2 67 1 230 1 97 1 353 1 284 1 127 1 140 1 300 2 
12 1 5 1 6 1 127 2 151 1 306 1 130 4 87 2 162 5 211 1 230 1 353 1 284 2 300 5 140 3 23 1 
12 1 343 1 5 1 6 1 127 2 306 1 130 4 87 2 162 5 211 1 230 1 353 1 284 2 300 5 140 3 23 1 
366 2 245 1 215 1 86 1 291 1 127 1 40 1 306 1 333 1 130 1 87 1 162 1 200 1 203 1 284 1 115 2 140 1 300 1 
59 1 291 1 127 2 198 1 130 1 87 1 162 1 211 1 171 1 55 1 284 1 300 1 140 1 
366 1 179 1 125 1 215 1 316 1 229 1 221 1 115 1 90 1 
239 1 206 1 90 1 
245 1 229 1 221 1 222 1 90 1 
245 1 204 1 123 1 124 1 169 1 16 1 206 1 295 1 348 1 347 2 250 2 239 1 262 1 229 2 242 1 221 2 337 1 222 2 90 1 
129 1 144 1 8 1 105 1 
129 1 144 1 58 1 201 1 105 1 259 1 237 1 
360 1 365 1 58 1 
367 1 58 3 144 1 13 1 105 1 237 1 259 3 358 1 129 1 201 1 173 1 272 2 
129 1 144 1 214 1 58 2 201 1 105 1 293 1 259 2 237 1 
58 1 121 1 36 1 278 1 332 1 237 1 259 1 358 1 129 1 210 1 201 1 
129 1 144 1 58 1 201 1 259 1 237 1 358 1 
144 2 58 1 201 1 105 1 259 1 237 1 358 1 
144 1 58 2 217 1 237 2 259 2 358 1 129 1 269 1 201 2 72 1 
144 1 58 3 214 2 36 1 105 1 314 1 237 1 259 3 358 1 184 1 129 2 52 1 201 1 
144 1 58 2 214 1 105 1 195 1 278 2 332 1 237 1 259 2 358 1 129 1 210 1 201 1 103 1 118 1 
144 1 58 4 214 2 36 1 105 1 17 1 237 2 259 4 293 1 358 1 129 2 52 1 201 2 
129 1 144 1 58 1 201 1 105 1 259 1 237 1 358 1 
144 2 214 2 58 4 13 1 36 1 105 2 259 4 237 1 129 3 52 1 201 1 68 1 173 1 272 1 
144 1 58 2 214 1 94 1 105 1 183 1 227 1 237 1 259 2 358 1 129 1 201 1 
129 1 144 1 58 3 13 1 201 1 352 1 105 1 173 2 272 2 259 3 237 1 358 1 
129 2 228 1 234 2 359 1 
58 1 201 1 75 1 259 1 237 1 358 1 
129 1 144 1 214 1 58 2 201 1 105 1 314 1 259 2 237 1 358 1 
256 1 
129 1 144 1 58 1 201 1 105 1 259 1 237 1 358 1 
214 1 58 3 144 1 105 1 314 1 237 1 259 3 358 1 129 1 201 1 272 1 
129 1 52 1 36 1 68 1 
129 1 144 1 

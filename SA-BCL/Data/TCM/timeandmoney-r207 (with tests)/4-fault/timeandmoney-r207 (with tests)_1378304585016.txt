#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 260 (57,93,155) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 119 290 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) (37,84) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (37,84) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) (37,84) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (92,182,318,320) (92,182,318,320) (92,182,318,320) 150 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 187 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
23 1 150 1 182 1 318 1 320 1 
328 1 47 1 187 1 
328 1 232 2 271 1 
98 2 234 1 5 2 207 2 264 1 203 2 122 2 179 2 
259 1 298 1 5 3 265 2 264 1 227 1 229 1 109 1 199 1 117 1 234 1 68 1 163 1 118 1 165 1 71 1 203 2 122 2 21 1 282 1 240 1 207 3 134 1 87 1 173 1 174 1 26 1 175 1 176 1 179 2 95 2 98 2 253 1 99 2 254 2 36 1 43 2 
291 1 98 1 5 1 207 1 56 1 264 1 203 1 122 1 127 1 179 1 
239 1 317 1 5 1 207 1 300 1 56 1 59 1 179 1 211 1 97 1 69 1 40 1 328 1 47 1 
239 1 5 1 207 1 300 2 56 1 59 1 179 1 211 1 98 1 69 1 40 2 122 1 203 1 328 1 47 1 
300 1 40 1 231 1 101 1 75 1 
300 2 40 2 328 1 231 1 279 1 47 1 280 1 75 1 
300 1 40 1 231 1 
5 1 300 1 207 1 56 1 264 1 179 1 291 1 98 1 40 1 122 1 203 1 127 1 75 1 296 1 
328 1 
300 2 256 1 40 2 328 1 231 1 279 1 47 1 75 1 
0 1 224 1 5 1 53 1 300 5 56 1 264 1 302 1 231 2 306 1 61 4 159 2 203 1 122 1 279 1 127 1 75 2 205 1 241 1 315 1 131 1 207 1 208 2 249 2 179 1 136 4 291 1 98 1 141 1 40 5 186 1 328 1 219 1 47 1 296 1 188 1 
234 1 187 1 
206 1 5 2 207 2 319 1 179 2 98 1 234 2 122 1 203 1 
192 1 246 1 146 1 
282 1 5 1 207 1 90 1 26 1 175 1 109 1 199 1 95 1 234 1 99 1 254 1 163 1 36 1 118 1 71 1 
3 1 51 1 193 2 5 5 207 5 319 1 179 5 97 1 98 4 234 1 67 1 203 4 122 1 330 1 
98 2 5 2 207 2 56 1 203 2 147 1 127 1 179 2 
282 1 3 1 193 1 5 2 207 2 26 1 175 1 109 1 179 1 199 1 95 1 98 1 99 1 254 1 36 1 163 1 118 1 71 1 203 1 146 1 
98 3 234 1 193 1 5 3 207 3 122 1 203 3 179 3 
98 1 5 1 207 1 56 1 203 1 127 1 179 1 
98 1 206 1 5 1 207 1 56 1 319 1 203 1 122 1 179 1 
259 1 3 1 5 4 193 1 300 1 265 1 56 1 264 1 227 1 229 1 59 1 109 1 199 1 117 1 234 1 69 1 163 1 118 1 71 1 122 2 203 3 21 1 282 1 239 1 240 1 24 1 207 4 319 1 87 1 173 1 174 1 26 1 175 1 30 1 179 3 211 1 95 1 98 3 253 1 99 1 254 1 36 1 40 1 43 2 
97 1 98 1 234 1 51 1 5 2 193 1 207 2 203 1 179 2 
239 1 3 1 24 1 193 2 5 3 300 1 207 3 319 1 56 1 59 1 179 3 289 1 211 1 98 3 69 1 40 1 122 1 203 3 328 1 
193 1 5 2 207 2 319 1 246 1 179 2 98 2 122 1 203 2 146 1 
282 1 5 1 207 1 26 1 175 1 109 1 199 1 95 1 234 1 99 1 254 1 163 1 36 1 118 1 71 1 
282 1 5 1 207 1 175 1 109 1 14 1 95 1 234 1 99 1 254 1 163 1 36 1 118 1 71 1 100 1 
259 1 192 2 2 1 265 4 227 1 229 1 12 1 159 1 117 1 276 1 311 1 312 1 19 1 313 1 82 1 134 2 87 1 173 1 246 2 208 1 325 1 253 2 43 2 146 2 
98 1 5 1 69 1 207 1 56 1 203 1 147 1 179 1 
78 1 93 1 
78 1 93 1 
260 1 57 1 
260 1 57 1 
260 1 57 1 
78 1 322 1 93 1 
78 1 322 1 93 1 
78 1 260 1 57 1 93 1 
78 1 155 1 93 1 
78 1 322 1 93 1 
189 1 78 1 93 1 
189 1 78 1 93 1 
189 1 78 1 93 1 
5 2 300 1 155 1 62 1 274 1 234 1 203 2 123 1 77 1 76 1 78 1 283 1 207 2 27 1 93 1 29 1 179 2 33 1 98 2 139 1 142 1 40 1 257 1 329 1 
78 2 104 1 300 2 27 2 62 2 93 2 160 1 33 2 162 1 275 1 181 2 40 2 185 1 328 1 295 1 123 2 314 1 76 1 77 3 
242 1 107 1 216 1 
242 1 107 1 86 1 
83 1 107 3 86 1 309 1 133 1 216 2 
83 1 107 2 86 1 309 1 216 1 48 1 
83 1 107 2 86 1 309 2 216 1 
106 2 300 5 9 1 231 1 232 3 271 1 61 3 159 1 274 1 17 2 66 1 119 1 311 1 312 1 279 1 204 2 238 1 75 4 241 1 315 1 283 1 131 1 208 1 29 1 31 1 136 2 214 1 215 1 40 5 328 2 47 1 188 1 
106 2 300 7 231 4 306 1 232 3 271 1 61 3 159 1 113 3 17 2 66 1 119 1 311 1 312 1 167 1 279 1 238 1 75 5 315 1 241 1 316 1 131 1 25 1 208 1 29 2 136 2 214 1 40 7 328 3 47 1 101 3 188 1 
215 1 300 2 119 1 9 1 40 2 306 1 75 1 
300 1 215 1 119 1 40 1 9 1 306 1 290 1 
282 1 201 1 187 1 
282 1 151 1 
244 1 
282 1 36 1 109 1 
282 1 79 1 
282 1 36 1 
282 3 201 2 262 1 36 1 284 1 109 1 
190 1 2 3 4 1 299 1 302 1 265 7 134 4 208 1 159 1 178 1 213 2 253 3 141 1 308 1 237 1 219 1 19 2 
190 1 2 3 4 1 299 1 302 1 265 7 134 4 208 1 159 1 178 1 213 2 253 3 141 1 308 1 237 1 219 1 19 2 
190 1 2 3 299 1 4 1 302 1 265 7 134 4 208 1 270 1 159 1 178 1 213 2 253 3 141 1 308 1 237 1 219 1 19 2 
190 1 2 10 299 1 4 2 302 2 265 31 227 1 268 1 58 1 110 1 159 4 307 3 16 1 117 1 65 1 308 2 237 5 312 3 311 3 19 5 85 1 87 1 134 16 173 1 208 4 178 1 213 3 214 3 141 2 253 15 327 4 43 2 219 1 220 1 
2 4 299 1 4 1 302 1 265 9 134 5 87 2 227 2 173 2 208 1 210 1 159 1 178 1 213 2 117 2 141 1 253 4 292 1 308 1 237 1 43 4 219 1 19 3 220 1 
23 1 150 1 182 1 318 1 320 1 
23 1 182 1 318 1 320 1 37 1 
23 1 318 1 84 1 92 1 
23 1 182 1 318 1 320 1 37 1 
23 1 150 1 182 1 318 1 320 1 
230 1 
105 1 5 1 8 2 108 1 196 2 271 2 197 1 111 1 15 1 118 1 18 2 279 3 282 1 131 1 207 1 285 4 286 1 138 2 136 2 211 1 143 1 293 2 36 1 39 2 40 5 38 1 44 1 47 1 297 1 300 5 55 1 56 1 305 1 231 6 59 1 232 2 61 2 66 1 163 2 69 1 239 1 80 2 315 1 241 1 317 1 175 1 179 1 95 2 97 1 99 2 254 2 328 2 258 1 102 1 188 1 
105 1 5 1 55 1 300 3 56 1 108 1 59 1 231 2 69 1 279 1 239 1 317 1 207 1 285 2 286 1 179 1 138 1 211 1 97 1 256 1 40 3 258 1 
105 1 5 1 55 1 300 3 56 1 231 1 108 1 59 1 69 1 279 1 239 1 317 1 207 1 285 3 286 1 179 1 211 1 97 1 293 1 256 1 40 3 328 1 47 1 258 1 
105 1 5 1 55 1 300 3 56 1 108 1 59 1 231 2 196 1 69 1 279 1 239 1 317 1 207 1 285 3 286 1 179 1 138 1 211 1 97 1 293 1 256 1 40 3 328 1 47 1 258 1 
105 1 5 1 55 1 300 5 8 2 56 1 303 1 108 1 231 7 59 1 196 4 271 2 158 1 61 1 197 1 273 1 69 1 18 2 279 3 239 1 80 2 241 1 315 1 131 1 317 1 207 1 172 1 285 6 286 1 136 1 179 1 138 4 211 1 97 1 293 4 256 1 39 2 40 5 328 5 47 5 258 1 49 1 102 1 188 1 
105 1 5 1 8 2 108 1 196 2 197 1 271 2 18 2 279 2 131 1 207 1 285 4 286 1 136 1 138 2 211 1 293 2 40 4 39 2 47 1 300 4 55 1 56 1 305 1 59 1 231 4 232 2 61 1 69 1 239 1 315 1 241 1 80 2 317 1 179 1 97 1 328 2 258 1 188 1 102 1 
105 1 5 1 55 1 300 4 8 2 56 1 231 4 108 1 59 1 196 2 271 2 158 1 61 1 197 1 273 1 69 1 18 2 279 2 239 1 80 2 315 1 241 1 131 1 317 1 207 1 285 4 286 1 138 2 136 1 179 1 211 1 97 1 293 2 39 2 40 4 328 1 47 1 258 1 49 1 102 1 188 1 
105 1 5 1 55 1 300 4 8 2 56 1 231 4 108 1 59 1 196 2 271 2 158 1 61 1 197 1 273 1 69 1 18 2 279 2 239 1 80 2 315 1 241 1 131 1 317 1 207 1 285 4 286 1 138 2 136 1 179 1 211 1 97 1 293 2 39 2 40 4 328 1 47 1 258 1 49 1 102 1 188 1 
149 2 1 1 105 1 5 1 55 1 300 4 56 1 231 4 108 1 59 1 196 2 232 2 158 1 61 1 69 1 18 2 279 2 126 2 168 1 239 1 80 2 315 1 241 1 81 1 131 1 317 1 207 1 285 4 286 1 138 2 136 1 179 1 211 1 97 1 293 2 40 4 328 1 47 1 258 1 102 1 188 1 
105 1 5 1 55 1 300 4 8 2 56 1 108 1 59 1 231 5 196 3 271 2 158 1 61 1 197 1 273 1 69 1 18 2 279 2 239 1 80 2 241 1 315 1 131 1 317 1 207 1 285 5 172 1 286 1 136 1 179 1 138 3 211 1 97 1 293 3 39 2 40 4 328 1 47 1 258 1 49 1 102 1 188 1 
105 1 5 1 55 1 300 4 8 2 56 1 108 1 59 1 231 5 196 3 271 2 158 1 61 1 197 1 273 1 69 1 18 2 279 2 239 1 80 2 241 1 315 1 131 1 317 1 207 1 285 5 172 1 286 1 136 1 179 1 138 3 211 1 97 1 293 3 39 2 40 4 328 1 47 1 258 1 49 1 102 1 188 1 
105 1 5 1 108 1 196 2 18 2 279 2 126 2 131 1 207 1 285 4 286 1 136 1 138 2 211 1 293 2 40 4 47 1 149 2 300 4 55 1 56 1 305 1 59 1 231 4 232 2 61 1 69 1 239 1 315 1 241 1 80 2 81 1 317 1 179 1 97 1 328 1 258 1 188 1 102 1 
259 1 2 2 192 1 299 1 302 1 265 6 227 1 229 1 159 1 117 1 234 2 19 2 313 1 87 1 134 3 246 1 173 1 208 1 178 1 213 1 141 1 253 3 43 2 146 1 219 1 187 1 
259 1 298 1 2 2 192 11 265 14 227 2 229 2 268 1 159 1 200 1 307 3 64 1 117 2 234 1 65 1 237 1 120 1 312 2 311 1 19 1 21 1 87 2 134 8 173 2 246 4 208 2 94 1 214 2 253 6 327 3 145 1 43 4 146 11 
259 1 298 1 3 1 5 2 193 1 265 2 227 1 229 1 109 1 199 1 117 1 234 1 163 1 118 1 71 1 203 1 21 1 282 1 207 2 132 1 87 1 134 1 246 1 173 1 90 1 26 1 175 1 248 1 94 1 179 1 95 1 98 1 253 1 254 1 99 1 36 1 35 1 43 2 
259 3 3 1 192 7 2 8 193 1 5 3 265 20 109 2 272 2 199 2 117 3 202 1 118 2 203 1 19 4 21 1 129 2 282 2 207 3 134 10 208 3 26 2 213 1 214 2 141 1 34 2 36 2 43 6 217 1 219 1 146 7 294 1 298 1 299 1 302 1 229 3 227 3 156 1 159 3 234 2 163 1 71 2 237 4 312 2 311 2 87 3 173 3 323 2 246 7 174 2 175 2 178 1 179 1 94 1 95 3 98 1 253 10 254 3 99 3 
259 2 298 1 5 1 193 1 54 1 6 1 7 1 265 2 304 1 227 2 229 2 111 1 117 2 202 1 163 2 68 2 118 2 203 1 20 1 21 1 313 1 281 1 282 3 207 1 87 2 134 1 88 1 173 2 175 2 179 1 95 8 180 1 98 1 253 1 254 8 99 7 36 2 43 4 44 1 
259 1 2 1 192 1 5 1 265 3 227 1 229 1 13 1 159 1 117 1 203 1 122 1 312 1 311 1 19 1 207 1 319 1 87 1 134 1 246 1 173 1 208 1 94 1 179 1 98 1 214 1 253 2 43 2 146 1 
259 1 2 1 192 1 265 2 87 1 134 2 246 1 229 1 227 1 173 1 208 1 117 1 325 1 237 1 43 2 312 1 146 1 313 1 
259 1 2 1 192 1 265 2 87 1 246 1 229 1 227 1 173 1 159 1 117 1 253 2 276 1 43 2 311 1 19 1 146 1 313 1 
259 1 192 2 2 2 265 4 227 1 229 1 159 1 117 1 237 1 312 1 311 1 19 1 313 1 134 2 87 1 173 1 246 2 208 1 214 1 253 2 43 2 146 2 
259 1 2 1 192 1 265 2 87 1 134 2 246 1 229 1 227 1 173 1 208 1 117 1 325 1 237 1 43 2 312 1 146 1 281 1 
259 1 2 1 192 1 265 2 87 1 246 1 229 1 227 1 173 1 159 1 117 1 253 2 276 1 43 2 311 1 19 1 146 1 281 1 
259 1 192 2 2 2 265 4 227 1 229 1 159 1 117 1 237 1 312 1 311 1 19 1 281 1 134 2 87 1 173 1 246 2 208 1 214 1 253 2 43 2 146 2 
259 1 192 2 2 2 265 4 227 1 229 1 159 1 117 1 237 1 312 1 311 1 19 1 134 2 87 1 173 1 246 2 208 1 214 1 253 2 43 2 146 2 
259 1 298 1 5 1 265 2 229 1 227 1 109 1 199 1 117 1 234 1 163 1 118 1 71 1 21 1 282 1 207 1 134 1 87 1 173 1 174 1 26 1 175 1 95 1 253 1 254 1 99 1 36 1 43 2 
259 1 298 1 5 1 265 2 229 1 227 1 109 1 14 1 117 1 234 1 277 1 163 1 118 1 71 1 21 1 282 1 207 1 134 1 87 1 173 1 175 1 95 1 253 1 254 1 99 1 36 1 43 2 100 1 
259 1 192 2 2 2 265 4 227 1 229 1 159 1 117 1 237 1 312 1 311 1 19 1 134 2 87 1 173 1 246 2 208 1 94 1 214 1 253 2 43 2 146 2 
259 1 2 2 192 2 5 1 265 4 229 1 227 1 109 1 159 1 199 1 117 1 118 1 237 1 71 1 311 1 312 1 19 1 129 1 282 1 207 1 134 2 87 1 246 2 173 1 208 1 174 1 26 1 175 1 95 1 180 1 214 1 253 2 254 1 99 1 36 1 43 2 146 2 
103 1 259 1 2 1 192 1 5 1 265 3 227 1 229 1 159 1 117 1 237 1 311 1 203 1 122 1 312 1 207 1 319 1 87 1 134 2 173 1 246 1 208 1 94 1 179 1 98 1 214 1 253 1 43 2 146 1 
2 6 194 1 265 19 195 1 10 1 227 2 268 1 233 1 60 1 159 3 307 1 117 2 65 1 235 1 237 3 312 3 311 3 19 3 22 2 128 2 87 2 134 9 173 2 208 3 210 1 96 1 214 3 253 10 327 2 43 4 
2 4 194 1 265 26 10 2 227 3 268 2 233 1 159 2 307 2 116 1 117 3 235 1 237 2 166 1 312 3 311 2 19 2 22 4 128 1 169 1 87 3 134 14 173 3 89 1 208 3 210 1 250 1 96 2 252 1 214 3 253 12 327 2 43 6 220 2 
2 8 299 1 302 1 194 1 265 41 195 1 267 1 10 1 227 3 268 3 233 1 159 5 307 3 116 1 117 3 65 1 235 1 237 4 166 1 312 4 311 4 19 4 22 4 128 1 169 1 87 3 134 20 173 3 89 1 208 5 210 1 178 1 250 1 96 2 213 1 252 1 214 4 141 1 253 21 327 4 43 6 219 1 220 1 
2 7 299 1 302 1 194 1 265 38 195 1 267 1 10 1 227 4 268 3 233 1 159 4 307 3 116 1 117 4 65 1 235 1 237 3 166 1 312 4 311 3 19 4 22 4 128 1 169 1 87 4 134 20 173 4 89 1 208 5 210 1 178 1 250 1 96 2 213 1 252 1 214 4 141 1 253 18 327 4 43 8 219 1 220 2 
2 14 299 1 302 1 194 1 265 52 10 1 227 2 268 2 233 1 159 8 307 4 116 1 117 2 65 2 235 1 120 2 237 7 166 1 312 7 311 7 19 7 22 4 128 1 169 1 87 2 134 27 173 2 89 1 208 8 210 1 178 1 250 1 96 1 213 1 252 1 214 7 141 1 253 25 327 4 43 4 219 1 220 1 
78 1 33 1 104 1 162 1 266 1 27 1 123 1 93 1 62 1 314 1 
155 1 329 1 
78 1 33 1 41 1 27 1 123 1 28 1 177 1 93 1 62 1 
322 1 91 1 
189 1 191 1 278 1 
78 1 104 1 300 1 27 1 62 1 93 1 33 1 162 1 275 1 181 1 40 1 185 1 328 1 295 1 123 1 314 1 76 1 77 2 
78 1 104 1 300 1 27 1 62 1 93 1 33 1 162 1 275 1 181 1 40 1 185 1 328 1 295 1 123 1 314 1 76 1 77 2 
78 1 104 1 300 1 27 1 62 1 93 1 33 1 162 1 275 1 181 1 40 1 185 1 328 1 295 1 123 1 314 1 76 1 77 2 
278 1 322 1 91 1 
278 1 322 1 91 1 
189 1 191 1 
189 1 191 1 278 1 
139 1 257 1 
5 2 300 1 155 1 62 1 274 1 275 1 234 1 203 2 123 1 75 1 77 1 78 1 283 1 207 2 27 1 93 1 29 1 179 2 33 1 181 1 139 1 98 2 142 1 183 1 40 1 257 1 329 1 
223 1 259 1 298 1 5 2 6 1 301 1 7 1 265 2 229 1 227 1 117 1 68 2 118 1 21 1 282 1 207 2 87 1 134 1 173 1 175 1 94 1 32 1 179 2 137 1 95 2 253 1 254 2 99 2 36 1 43 2 218 1 
242 1 225 1 107 2 86 1 226 1 133 1 209 1 175 1 11 1 95 2 251 1 180 1 326 1 202 1 99 2 254 2 118 1 216 1 148 1 
242 1 225 1 107 2 86 1 226 1 133 1 209 1 175 1 324 1 95 1 326 1 202 1 99 1 254 1 118 1 216 1 148 1 
282 1 209 1 175 1 111 1 95 1 114 1 251 1 99 1 254 1 36 1 163 1 118 1 44 1 124 1 
242 1 225 1 107 2 86 1 226 1 133 1 209 1 11 1 175 1 95 1 251 1 326 1 202 1 99 1 254 1 118 1 216 1 148 1 
321 1 
187 1 
300 1 8 1 231 1 232 1 271 1 61 1 197 1 279 1 241 1 315 1 131 1 136 1 39 1 40 1 328 2 47 1 188 1 
262 1 106 6 263 2 109 3 271 6 15 1 201 2 17 6 118 4 279 3 282 10 130 1 131 4 287 2 208 2 288 1 136 8 214 2 34 2 36 3 42 2 40 5 46 1 45 2 47 2 151 3 300 5 228 1 231 5 59 2 232 12 61 9 159 2 63 1 161 1 66 2 163 1 164 1 312 2 311 2 315 4 241 4 79 2 245 2 175 3 249 2 95 3 180 1 99 3 254 3 184 2 328 8 186 2 188 4 
106 5 300 1 268 1 231 1 232 6 61 8 271 3 159 2 307 1 15 1 17 5 66 1 166 1 312 2 311 2 279 1 169 1 241 2 315 2 243 1 131 2 89 1 208 2 249 2 136 5 250 1 252 1 214 2 327 1 40 1 186 1 328 5 47 2 221 1 188 2 
0 1 5 1 300 1 56 1 302 1 264 1 61 2 159 1 273 1 122 1 203 1 127 1 241 1 315 1 131 1 207 1 208 2 249 2 136 2 179 1 291 1 98 1 141 1 40 1 186 1 219 1 188 1 296 1 
241 1 315 1 131 1 188 1 
300 1 40 1 328 1 231 1 279 1 47 1 
297 1 300 2 231 2 306 1 61 1 111 1 63 1 15 1 66 1 163 2 118 1 279 1 282 1 241 1 315 1 131 1 175 1 136 1 95 2 143 1 254 2 99 2 36 1 40 2 44 1 188 1 
259 1 5 3 265 1 264 1 227 1 229 1 109 1 199 1 117 1 234 1 163 1 118 1 71 1 203 2 122 2 21 1 282 1 240 1 207 3 87 1 173 1 174 1 26 1 175 1 179 2 95 1 98 2 253 1 254 1 99 1 36 1 43 2 
315 1 241 1 106 2 131 1 232 4 271 2 61 1 136 2 15 1 213 1 17 2 66 1 328 4 47 2 188 1 
222 1 27 1 123 1 
222 1 27 1 123 1 
257 1 157 1 27 1 123 1 314 1 
222 1 27 1 123 1 
144 1 27 1 123 1 
144 1 27 1 123 1 
144 1 27 1 123 1 
27 1 123 1 
78 1 93 1 
2 3 299 1 265 8 302 1 134 4 87 2 227 2 173 2 208 1 159 1 178 1 213 1 117 2 253 4 141 1 237 1 43 4 219 1 19 2 220 1 
2 2 299 1 302 1 265 6 134 3 208 1 159 1 178 1 213 1 253 3 141 1 19 2 219 1 187 1 
2 2 265 4 87 1 134 2 227 1 173 1 208 1 159 1 212 1 117 1 214 1 253 2 237 1 43 2 311 1 312 1 19 1 
2 2 265 7 134 3 268 1 208 1 159 1 307 1 214 1 253 4 327 2 65 1 237 1 311 1 312 1 19 1 
2 9 299 1 302 2 265 23 227 2 159 3 307 2 115 1 64 1 117 2 65 1 237 4 120 1 312 2 311 2 19 5 134 11 87 2 173 2 208 3 178 1 213 1 214 2 141 2 253 12 327 2 43 4 219 1 220 2 
253 1 327 1 265 1 
265 1 134 1 307 1 
2 3 265 6 87 1 134 3 173 1 227 1 208 1 159 1 212 1 117 1 214 1 253 3 34 1 237 1 43 2 312 1 311 1 19 2 
2 2 265 12 227 1 268 1 159 2 307 1 117 1 237 1 166 1 312 2 311 2 19 1 169 1 87 1 134 6 173 1 89 1 208 2 210 1 250 1 252 1 214 2 253 6 327 1 43 2 
2 2 265 6 302 1 134 3 208 1 159 1 253 3 141 1 237 1 219 1 19 1 
2 2 299 1 302 1 265 3 134 1 87 1 227 1 173 1 178 1 115 1 117 1 141 1 253 2 237 1 43 2 19 1 220 1 
0 1 2 5 302 2 265 10 87 1 134 5 173 1 227 1 208 2 210 1 159 2 117 1 141 2 253 5 237 2 43 2 19 3 219 1 
2 1 265 2 87 1 134 2 227 1 173 1 208 1 210 1 117 1 237 1 43 2 312 1 
2 2 265 4 87 1 134 2 227 1 173 1 208 1 210 1 159 1 117 1 214 1 253 2 237 1 43 2 311 1 312 1 19 1 
2 2 265 3 302 1 195 1 87 3 134 1 227 3 173 3 210 1 115 1 117 3 253 2 141 1 237 1 43 6 19 1 220 1 
2 12 299 1 302 3 265 34 195 1 227 5 268 1 58 1 159 5 307 3 115 1 16 1 117 5 65 1 237 5 312 3 311 3 19 7 85 1 87 5 134 16 173 5 208 5 210 1 178 1 212 1 213 1 214 3 141 3 253 18 327 4 43 10 219 2 220 2 
2 2 299 1 265 8 302 1 227 1 268 1 159 1 307 1 117 1 19 2 87 1 134 4 173 1 208 1 210 1 178 1 213 1 252 1 253 4 141 1 327 1 43 2 219 1 
2 3 299 1 302 1 265 11 227 2 268 1 159 1 307 1 117 2 65 1 237 1 312 1 19 2 87 2 134 6 173 2 208 2 210 1 178 1 212 1 213 1 252 1 214 1 141 1 253 5 327 2 43 4 219 1 
2 4 299 1 302 1 265 19 227 3 268 1 159 3 307 1 117 3 237 1 166 1 312 2 311 2 19 3 169 1 87 3 134 9 173 3 89 1 208 3 210 1 178 1 212 1 250 1 213 1 252 1 214 2 141 1 253 10 327 1 43 6 219 1 220 1 
2 5 299 1 302 1 265 17 227 3 268 1 159 2 307 1 117 3 237 2 166 1 312 2 311 1 19 3 169 1 87 3 134 10 173 3 89 1 208 3 210 1 178 1 212 1 250 1 213 1 252 1 214 2 141 1 253 7 327 1 43 6 219 1 220 1 
2 2 299 1 265 8 302 1 227 1 268 1 159 1 307 1 117 1 19 2 87 1 134 4 173 1 208 1 210 1 178 1 213 1 252 1 253 4 141 1 327 1 43 2 219 1 
2 2 265 12 227 1 268 1 159 2 307 1 117 1 237 1 166 1 312 2 311 2 19 1 169 1 87 1 134 6 173 1 89 1 208 2 210 1 250 1 252 1 214 2 253 6 327 1 43 2 
2 5 299 1 302 1 265 18 227 4 268 1 159 2 307 1 117 4 237 2 166 1 312 2 311 1 19 3 169 1 87 4 134 10 173 4 89 1 208 3 210 1 178 1 250 1 212 1 213 1 252 1 214 2 141 1 253 8 327 1 43 8 219 1 220 2 
2 6 265 16 195 1 227 4 268 1 159 2 307 1 117 4 237 3 166 1 312 3 311 2 19 3 169 1 87 4 134 9 173 4 89 1 208 3 210 1 250 1 252 1 214 3 253 7 327 1 43 8 220 2 
2 6 299 2 265 7 302 3 134 3 208 1 159 1 178 1 253 4 141 3 237 3 19 3 219 1 
2 4 299 1 302 1 265 18 195 1 227 4 268 1 159 2 307 1 117 4 237 1 166 1 312 2 311 1 19 3 169 1 87 4 134 10 173 4 89 1 208 3 210 1 178 1 250 1 213 1 252 1 214 2 141 1 253 8 327 1 43 8 219 1 220 2 
97 1 234 1 51 1 5 1 207 1 72 1 179 1 
50 1 51 1 5 1 207 1 154 1 198 1 179 1 97 1 234 1 236 1 310 1 72 1 
282 1 95 1 254 1 99 1 36 1 163 1 118 1 44 1 175 1 111 1 187 1 
282 1 193 1 5 2 207 2 26 1 175 1 109 1 179 1 95 1 98 1 234 1 99 1 254 1 36 1 163 1 118 1 71 1 203 1 
282 3 79 1 193 1 5 2 207 2 56 1 228 1 26 1 175 1 109 2 179 2 211 1 95 1 98 2 234 1 99 1 254 1 69 1 36 2 118 1 184 1 71 1 203 1 
282 3 79 1 193 1 5 2 207 2 56 1 228 1 269 1 175 1 109 2 179 2 211 1 95 2 98 2 234 1 99 2 254 2 69 1 36 2 118 1 184 1 71 1 203 1 100 1 
151 1 153 1 300 2 228 1 269 1 231 1 59 1 109 1 201 1 163 1 118 1 282 4 79 1 175 1 95 3 140 1 254 3 99 3 36 1 40 2 184 1 328 1 47 1 
282 4 151 1 79 1 300 2 228 1 269 1 59 1 231 1 175 1 109 1 95 3 201 1 99 3 254 3 163 1 36 1 118 1 184 1 40 2 328 1 45 1 47 1 
95 1 254 1 99 1 54 1 118 1 175 1 
282 3 262 1 54 1 6 1 304 1 88 1 175 2 109 1 112 1 95 7 180 1 202 1 99 6 254 7 68 1 163 2 36 2 255 1 118 3 121 1 20 1 
259 2 2 2 192 1 193 1 5 2 265 6 109 1 272 1 199 1 117 2 118 1 203 1 19 2 129 1 282 1 207 2 134 3 208 1 26 1 213 1 141 1 36 1 43 4 219 1 146 1 223 1 299 1 302 1 229 2 227 2 159 1 234 2 71 1 87 2 246 1 173 2 174 1 175 1 179 1 94 1 178 1 95 1 180 1 98 1 253 3 254 1 99 1 
151 1 263 1 300 3 231 2 59 1 61 1 63 1 201 1 163 1 279 1 75 1 282 2 241 2 315 2 131 2 245 1 288 1 136 1 95 1 99 1 254 1 40 3 42 1 328 1 46 1 45 1 47 1 188 2 
282 2 262 1 54 1 175 1 109 1 95 2 201 1 180 1 99 2 254 2 36 1 164 1 118 2 
282 1 95 4 180 1 254 4 99 4 36 1 163 1 118 1 44 1 269 1 175 1 74 1 111 1 
282 1 171 1 228 1 175 1 109 1 112 1 95 2 99 2 254 2 36 1 118 2 121 1 294 1 73 1 
95 1 242 1 225 1 254 1 99 1 163 1 107 1 86 1 118 1 175 1 
282 1 301 1 6 1 175 1 95 2 180 1 99 2 254 2 202 1 36 1 118 1 
282 3 6 1 304 1 228 1 88 1 175 2 111 1 95 5 180 1 99 4 254 5 163 1 36 2 118 2 44 1 74 1 
282 3 6 1 304 1 228 1 175 2 111 1 95 5 180 1 99 4 254 5 163 1 36 2 70 1 118 2 44 1 74 1 
282 1 193 1 5 2 207 2 175 1 109 1 179 1 95 1 98 1 234 1 99 1 254 1 36 1 163 1 118 1 71 1 203 1 100 1 
282 1 262 1 228 1 175 1 109 1 112 1 95 1 99 1 254 1 36 1 255 1 118 2 121 1 
170 1 5 1 152 1 207 1 218 1 247 1 179 1 32 1 137 1 
170 1 52 1 125 1 
170 1 234 1 152 1 135 1 247 1 
239 1 170 1 261 1 24 1 52 1 152 2 300 2 56 1 59 1 247 2 135 2 211 1 234 1 69 1 40 2 328 1 47 1 125 1 75 1 

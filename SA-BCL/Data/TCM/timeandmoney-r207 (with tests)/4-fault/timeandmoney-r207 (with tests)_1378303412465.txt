#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (35,236) (35,236) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 281 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 281 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 281 303 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 294 49 164 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 141 276 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (35,236) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 271 211 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
70 1 71 9 323 2 171 7 2 4 149 1 301 1 193 1 305 3 8 1 124 1 55 1 158 2 127 5 206 2 359 1 87 1 15 9 64 1 320 1 252 1 93 1 216 1 259 1 
70 1 71 9 323 2 2 4 171 7 149 1 301 1 193 1 305 3 8 1 124 1 55 1 158 2 127 5 206 2 359 1 87 1 15 9 64 1 320 1 252 1 93 1 216 1 259 1 
70 1 71 9 323 2 2 4 171 6 149 1 100 1 301 1 328 1 305 3 8 1 124 1 55 1 246 1 158 2 127 5 203 1 359 1 206 2 286 1 87 1 15 9 64 2 320 1 252 2 93 2 167 1 216 2 
70 1 71 9 323 2 2 4 171 6 149 1 100 1 301 1 328 1 305 3 8 1 124 1 55 1 246 1 158 2 127 5 203 1 359 1 206 2 286 1 87 1 15 9 64 2 320 1 252 2 93 2 167 1 216 2 
70 1 71 10 323 2 2 5 171 7 149 1 100 1 301 1 328 1 305 4 8 1 124 1 55 1 246 1 158 2 127 6 203 1 359 1 206 2 286 1 87 1 15 10 64 2 320 1 252 2 93 2 167 1 216 2 
70 1 71 7 323 2 2 3 171 4 149 1 100 1 301 1 328 1 305 2 8 1 124 1 55 1 246 1 158 2 127 4 203 1 206 1 286 1 87 1 15 7 64 2 320 1 252 2 93 2 167 1 216 2 
158 1 70 1 127 3 71 4 323 1 359 1 206 2 171 3 2 2 15 4 305 1 252 1 320 1 8 1 124 1 55 1 93 1 216 1 
158 1 127 1 70 1 96 1 71 2 335 1 323 1 15 2 100 1 64 1 320 1 252 1 124 1 167 1 216 1 125 1 
158 2 70 1 127 2 71 3 323 2 2 1 171 1 87 1 15 3 64 1 320 1 305 1 124 1 
82 1 255 1 373 1 
81 2 11 1 373 1 
184 1 222 2 318 1 154 2 283 2 112 2 371 2 74 2 
261 1 46 1 114 1 343 1 296 1 298 2 99 1 345 1 191 1 117 1 347 2 300 1 74 3 243 2 118 2 222 3 154 2 196 1 197 1 330 1 177 1 157 1 84 1 283 2 179 1 314 1 285 2 184 1 317 1 291 1 318 1 110 1 111 1 112 2 92 1 371 2 257 1 
290 1 222 1 318 1 154 1 283 1 112 1 131 1 371 1 325 1 74 1 
10 1 82 1 57 1 113 1 188 1 283 1 267 1 139 1 325 1 74 1 222 1 215 1 373 1 237 1 
10 2 82 1 113 1 188 1 283 1 267 1 325 1 74 1 222 1 154 1 112 1 215 2 371 1 373 1 237 1 
201 1 10 1 145 1 215 1 287 1 
201 1 10 2 82 1 205 1 215 2 373 1 275 1 287 1 
201 1 10 1 215 1 
290 1 10 1 222 1 318 1 154 1 283 1 112 1 131 1 226 1 371 1 215 1 287 1 325 1 74 1 
373 1 
201 1 10 2 82 1 215 2 373 1 275 1 287 1 349 1 
35 1 10 5 0 1 201 2 82 1 204 2 358 2 86 1 109 1 287 2 13 2 76 1 17 1 215 5 373 1 236 1 104 1 20 1 275 1 
36 2 58 1 282 1 283 5 170 1 139 1 74 5 289 1 184 1 222 5 154 4 112 4 308 1 371 1 
184 1 255 1 
283 2 170 1 265 1 74 2 184 2 222 2 154 1 112 1 371 1 
292 1 160 1 351 1 
261 1 144 1 343 1 179 1 99 1 314 1 285 1 74 1 243 1 118 1 184 1 222 1 110 1 196 1 92 1 257 1 
290 1 222 2 37 1 154 2 283 2 112 2 325 1 74 2 
261 1 58 1 36 1 343 1 179 1 283 1 314 1 99 1 285 1 74 2 243 1 118 1 222 2 110 1 154 1 196 1 112 1 92 1 351 1 257 1 
184 1 36 1 222 3 154 3 283 3 112 3 371 1 74 3 
290 1 222 1 154 1 283 1 112 1 325 1 74 1 
222 1 154 1 283 1 112 1 170 1 265 1 371 1 325 1 74 1 
261 1 46 1 113 1 22 1 114 1 343 1 188 1 48 1 170 1 298 1 99 1 345 1 267 1 117 1 347 2 325 1 300 1 74 4 243 1 118 1 222 4 154 3 196 1 197 1 330 1 177 1 157 1 10 1 36 1 58 1 179 1 283 3 314 1 285 1 184 1 318 1 110 1 111 1 112 3 92 1 371 2 215 1 257 1 237 1 
184 1 222 2 36 1 282 1 154 1 283 2 112 1 139 1 74 2 
10 1 22 1 113 1 58 1 36 2 188 1 170 1 283 3 267 1 325 1 74 3 222 3 101 1 154 3 112 3 371 1 215 1 373 1 237 1 
36 1 170 1 283 2 74 2 222 2 292 1 154 2 112 2 371 1 351 1 
261 1 343 1 179 1 99 1 314 1 285 1 74 1 243 1 118 1 184 1 222 1 110 1 92 1 196 1 257 1 
261 1 143 1 343 1 179 1 314 1 285 1 74 1 243 1 118 1 184 1 222 1 92 1 196 1 32 1 257 1 
146 1 46 1 239 1 114 1 298 4 189 1 299 1 347 2 117 2 300 1 4 1 51 1 197 1 351 2 309 1 177 1 360 1 160 2 183 1 291 2 292 2 111 1 368 1 44 1 
222 1 188 1 154 1 37 1 283 1 112 1 325 1 74 1 
135 1 136 1 
135 1 136 1 
279 1 369 1 
279 1 369 1 
279 1 369 1 
105 1 135 1 136 1 
221 1 135 1 136 1 
279 1 135 2 355 1 136 2 98 1 369 1 
105 1 135 1 136 1 
105 1 135 1 136 1 
135 1 52 1 136 1 
135 1 52 1 136 1 
135 1 52 1 136 1 
135 1 136 1 137 1 26 1 220 1 74 2 221 1 269 1 140 1 222 2 270 1 154 2 120 1 10 1 280 1 283 2 184 1 90 1 112 2 234 1 165 1 215 1 372 1 258 1 
10 2 159 1 135 2 169 1 280 3 136 2 98 1 26 2 209 1 150 1 288 2 140 1 50 1 90 2 120 2 165 2 215 2 373 1 80 1 
252 1 93 1 216 1 
335 1 252 1 216 1 
241 1 335 1 5 1 252 3 198 1 93 2 
244 1 335 1 5 1 252 2 198 1 93 1 
335 1 5 1 252 2 198 2 93 1 
239 1 186 1 137 1 97 1 220 1 327 1 76 2 29 2 270 1 4 1 275 1 155 1 201 1 10 5 81 3 82 1 358 1 204 1 281 1 11 1 207 1 360 1 13 1 287 4 183 1 233 2 17 1 366 1 18 2 215 5 373 2 20 3 
239 1 220 2 327 1 76 2 29 2 4 1 103 1 155 1 275 1 201 4 10 7 81 3 82 1 204 2 358 2 281 1 11 1 360 1 106 3 109 1 287 5 13 2 183 1 231 1 145 3 91 1 233 2 17 1 366 1 215 7 373 3 20 3 
10 2 186 1 281 1 204 1 358 1 97 1 109 1 13 1 287 1 366 1 215 2 20 1 
10 1 186 1 281 1 204 1 358 1 97 1 109 1 13 1 303 1 366 1 215 1 20 1 
212 1 196 1 255 1 
168 1 196 1 
65 1 
261 1 196 1 257 1 
336 1 196 1 
261 1 196 1 
212 2 261 1 196 3 306 1 257 1 56 1 
146 3 141 1 239 1 59 1 172 1 189 2 298 9 117 4 291 5 195 1 63 1 4 1 214 1 319 1 19 1 156 1 374 2 
146 3 141 1 239 1 59 1 172 1 189 2 298 9 117 4 291 5 195 1 63 1 4 1 214 1 319 1 19 1 156 1 374 2 
146 3 141 1 239 1 59 1 172 1 189 2 298 9 117 4 302 1 291 5 195 1 63 1 4 1 214 1 319 1 19 1 156 1 374 2 
146 13 148 1 114 1 239 5 1 4 172 2 344 1 298 34 189 6 347 2 117 17 300 1 327 3 195 3 49 1 4 5 156 2 177 1 276 1 141 3 59 1 356 1 360 3 183 3 316 1 291 17 63 1 214 1 319 1 111 1 367 1 19 7 294 3 45 1 374 1 
146 4 262 1 239 1 114 2 172 1 298 11 189 3 347 4 117 5 300 2 195 1 4 1 177 2 156 1 141 1 59 1 108 1 291 6 63 1 111 2 319 1 19 1 45 1 374 2 
70 1 71 2 241 1 323 1 171 1 243 1 118 1 352 1 124 1 311 1 158 1 332 1 127 1 178 1 223 1 313 1 335 1 179 1 314 1 40 1 285 1 228 1 15 2 89 1 249 1 64 1 320 1 252 2 93 1 216 1 
70 1 241 1 71 3 323 1 171 2 243 1 118 1 352 1 124 1 311 1 158 1 127 1 178 1 313 1 335 1 179 1 314 1 40 1 285 1 228 1 15 3 89 1 182 1 249 1 365 1 64 1 252 2 93 1 216 1 375 1 
70 1 71 2 241 1 171 2 243 1 118 1 352 1 124 1 311 1 127 1 178 1 313 1 335 1 179 1 314 1 40 1 285 1 15 2 182 1 249 1 365 1 64 1 252 2 93 1 216 1 
261 1 158 1 341 1 178 2 71 1 242 1 323 1 179 1 314 1 40 2 285 1 15 1 243 1 230 1 118 1 64 2 273 1 196 1 92 1 132 1 352 2 200 1 375 1 
71 1 241 1 323 1 243 1 118 1 352 1 311 1 158 1 332 1 178 1 313 1 335 1 179 1 314 1 40 1 285 1 228 1 15 1 89 1 182 1 249 1 64 1 320 1 252 2 93 1 216 1 
152 1 
261 1 47 2 267 1 139 1 325 1 222 1 271 1 173 4 7 1 275 3 10 5 57 1 334 1 179 1 283 1 11 2 227 2 12 2 285 2 284 1 13 1 16 1 17 1 293 1 20 2 237 1 340 2 147 1 113 1 240 2 295 2 188 1 74 1 28 1 243 2 76 2 118 2 196 1 200 1 201 6 82 1 81 2 204 1 358 1 39 1 314 1 211 1 210 1 366 1 92 2 254 1 132 1 215 5 373 2 166 2 
147 1 113 1 188 1 267 1 139 1 325 1 349 1 74 1 222 1 173 2 7 1 275 1 10 3 201 2 57 1 283 1 12 1 284 1 16 1 215 3 293 1 237 1 
147 1 113 1 188 1 267 1 139 1 325 1 349 1 74 1 222 1 173 3 7 1 275 1 201 1 10 3 57 1 82 1 283 1 227 1 284 1 16 1 215 3 293 1 373 1 237 1 
147 1 113 1 240 1 188 1 267 1 139 1 349 1 325 1 74 1 222 1 173 3 7 1 275 1 10 3 201 2 57 1 82 1 283 1 12 1 227 1 284 1 16 1 215 3 293 1 373 1 237 1 
47 2 267 1 139 1 325 1 222 1 173 6 7 1 275 3 10 5 57 1 283 1 11 2 12 4 227 4 284 1 13 1 16 1 17 1 293 1 237 1 20 1 340 2 147 1 113 1 240 4 295 2 188 1 27 1 349 1 74 1 76 1 245 1 122 1 201 7 82 5 204 1 358 1 210 1 163 1 254 1 215 5 373 5 166 2 260 1 
47 2 267 1 139 1 325 1 222 1 173 4 7 1 275 2 10 4 57 1 283 1 11 2 12 2 227 2 284 1 13 1 16 1 17 1 293 1 237 1 20 1 340 2 147 1 113 1 295 2 240 2 188 1 74 1 76 1 201 4 81 2 82 1 204 1 358 1 39 1 210 1 254 1 215 4 373 2 166 2 
147 1 113 1 240 2 295 2 47 2 188 1 267 1 139 1 325 1 74 1 76 1 222 1 173 4 7 1 122 1 275 2 201 4 10 4 82 1 57 1 358 1 204 1 283 1 11 2 227 2 12 2 284 1 13 1 210 1 16 1 163 1 17 1 254 1 215 4 373 1 293 1 166 2 20 1 237 1 340 2 260 1 
147 1 113 1 240 2 295 2 47 2 188 1 267 1 139 1 325 1 74 1 76 1 222 1 173 4 7 1 122 1 275 2 201 4 10 4 82 1 57 1 358 1 204 1 283 1 11 2 227 2 12 2 284 1 13 1 210 1 16 1 163 1 17 1 254 1 215 4 373 1 293 1 166 2 20 1 237 1 340 2 260 1 
147 1 113 1 240 2 47 2 188 1 297 1 267 1 346 1 139 1 325 1 74 1 76 1 222 1 272 1 173 4 7 1 275 2 201 4 10 4 82 1 81 2 57 1 358 1 204 1 283 1 361 2 227 2 12 2 284 1 13 1 16 1 62 2 17 1 254 1 215 4 373 1 293 1 166 2 20 1 237 1 260 1 
147 1 113 1 295 2 240 3 47 2 188 1 267 1 27 1 139 1 325 1 74 1 76 1 222 1 173 5 7 1 122 1 275 2 10 4 201 5 82 1 57 1 358 1 204 1 283 1 11 2 12 3 227 3 284 1 13 1 210 1 16 1 163 1 17 1 254 1 215 4 373 1 293 1 166 2 20 1 237 1 340 2 260 1 
147 1 113 1 295 2 240 3 47 2 188 1 267 1 27 1 139 1 325 1 74 1 76 1 222 1 173 5 7 1 122 1 275 2 10 4 201 5 82 1 57 1 358 1 204 1 283 1 11 2 12 3 227 3 284 1 13 1 210 1 16 1 163 1 17 1 254 1 215 4 373 1 293 1 166 2 20 1 237 1 340 2 260 1 
47 2 267 1 139 1 325 1 222 1 173 4 7 1 275 2 10 4 57 1 283 1 12 2 227 2 284 1 13 1 16 1 62 2 17 1 293 1 237 1 20 1 147 1 113 1 240 2 188 1 346 1 74 1 76 1 201 4 81 2 82 1 204 1 358 1 361 2 39 1 254 1 215 4 373 1 166 2 
146 2 46 1 114 1 239 1 189 2 298 8 347 2 117 4 300 1 195 1 4 1 197 1 351 1 177 1 141 1 59 1 160 1 184 3 291 4 63 1 292 1 319 1 111 1 368 1 255 1 374 1 
146 2 46 1 114 2 239 2 296 1 1 3 266 1 189 1 298 14 345 1 268 1 117 6 347 4 300 2 327 2 49 1 4 1 304 1 197 2 307 1 351 11 177 2 360 2 160 11 183 1 184 1 316 1 291 8 292 4 111 2 253 1 19 1 294 3 
261 1 46 1 114 1 343 1 296 1 99 1 298 2 345 1 268 1 347 2 117 1 74 2 300 1 243 1 118 1 222 2 154 1 196 1 197 1 33 1 177 1 36 1 58 1 144 1 179 1 283 1 314 1 285 1 184 1 291 1 292 1 42 1 110 1 92 1 111 1 112 1 67 1 257 1 
261 2 46 3 99 2 268 1 326 1 327 2 222 3 4 3 177 3 141 1 59 1 58 1 283 1 179 2 107 1 285 3 182 1 183 2 184 3 291 11 63 1 292 7 110 2 112 1 111 3 19 4 21 2 146 8 23 2 114 3 239 3 343 2 342 2 296 1 189 4 298 22 345 1 117 11 347 6 300 3 74 3 243 3 118 3 195 1 154 1 196 2 197 3 351 7 157 2 36 1 360 2 247 1 314 2 362 2 160 7 319 1 92 1 257 2 374 1 
261 2 46 2 114 2 296 1 219 1 298 2 345 1 191 2 347 4 117 1 74 1 300 2 243 8 118 7 222 1 154 1 196 3 53 1 329 1 197 2 200 1 177 2 331 1 9 1 223 1 36 1 283 1 179 2 314 2 285 8 363 1 182 1 291 1 130 1 112 1 92 2 111 2 368 1 132 1 
146 1 46 1 114 1 239 1 170 1 189 1 298 3 268 1 347 2 117 2 300 1 74 1 327 1 222 1 4 1 154 1 197 1 351 1 177 1 85 1 283 1 360 1 160 1 183 1 291 1 292 1 112 1 111 1 371 1 
146 1 46 1 114 1 239 1 360 1 160 1 298 2 347 2 300 1 291 2 292 1 111 1 368 1 197 1 19 1 351 1 44 1 177 1 
146 1 46 1 114 1 189 1 160 1 298 2 347 2 117 2 300 1 183 1 292 1 4 1 111 1 368 1 197 1 351 1 309 1 177 1 
146 2 46 1 239 1 114 1 298 4 189 1 347 2 117 2 300 1 327 1 4 1 197 1 351 2 177 1 360 1 160 2 183 1 291 2 292 2 111 1 368 1 19 1 
146 1 46 1 114 1 239 1 360 1 160 1 298 2 219 1 347 2 300 1 291 2 292 1 111 1 197 1 19 1 351 1 44 1 177 1 
146 1 46 1 114 1 189 1 160 1 298 2 219 1 347 2 117 2 300 1 183 1 292 1 4 1 111 1 197 1 351 1 309 1 177 1 
146 2 46 1 239 1 114 1 219 1 298 4 189 1 347 2 117 2 300 1 327 1 4 1 197 1 351 2 177 1 360 1 160 2 183 1 291 2 292 2 111 1 19 1 
146 2 46 1 114 1 239 1 360 1 189 1 160 2 298 4 117 2 347 2 300 1 183 1 327 1 291 2 4 1 292 2 111 1 197 1 19 1 351 2 177 1 
261 1 46 1 114 1 343 1 296 1 298 2 99 1 345 1 347 2 117 1 74 1 300 1 243 1 118 1 222 1 196 1 197 1 177 1 157 1 179 1 314 1 285 1 184 1 291 1 110 1 92 1 111 1 257 1 
261 1 46 1 114 1 343 1 296 1 298 2 345 1 347 2 117 1 74 1 300 1 243 1 118 1 222 1 196 1 32 1 197 1 177 1 143 1 179 1 314 1 285 1 229 1 184 1 291 1 92 1 111 1 257 1 
146 2 46 1 239 1 114 1 298 4 189 1 268 1 347 2 117 2 300 1 327 1 4 1 197 1 351 2 177 1 360 1 160 2 183 1 291 2 292 2 111 1 19 1 
146 2 261 1 23 1 46 1 239 1 114 1 343 1 189 1 298 4 99 1 117 2 347 2 74 1 300 1 243 1 327 1 118 1 222 1 4 1 196 1 197 1 351 2 177 1 157 1 223 1 179 1 360 1 160 2 314 1 285 1 183 1 291 2 292 2 110 1 111 1 19 1 257 1 
146 1 46 1 114 1 239 1 170 1 298 3 268 1 138 1 117 1 347 2 300 1 74 1 327 1 222 1 4 1 154 1 197 1 351 1 177 1 283 1 360 1 160 1 183 1 291 2 292 1 112 1 111 1 19 1 371 1 
146 4 218 1 114 2 239 4 187 1 116 3 1 4 189 1 298 31 347 4 117 16 300 2 327 4 49 3 4 4 79 1 175 1 199 1 123 1 177 2 83 2 225 1 360 4 108 1 41 1 14 1 61 1 183 4 316 1 232 1 291 15 164 1 111 2 19 3 238 1 294 3 
146 5 218 1 114 3 239 4 187 1 116 4 1 4 189 2 298 32 347 6 117 15 300 3 327 4 49 3 4 3 79 1 175 1 199 1 123 1 177 3 83 2 225 1 360 4 108 1 41 1 14 1 61 1 183 3 316 1 232 1 291 17 164 1 111 3 19 3 45 1 238 1 294 3 
146 15 218 1 114 3 239 8 187 1 116 4 1 4 189 8 298 55 347 6 117 27 300 3 327 7 195 1 49 2 4 8 79 1 175 1 307 2 199 1 123 1 177 3 141 1 59 1 83 1 360 7 108 1 41 1 14 1 183 7 316 2 232 1 291 28 63 1 319 1 164 1 111 3 19 7 45 2 238 1 294 4 374 1 
146 6 114 2 239 3 116 2 1 2 189 3 298 19 347 4 117 10 300 2 327 3 49 1 4 3 79 1 199 1 123 1 177 2 83 1 225 1 360 3 108 1 60 1 183 3 316 1 232 2 291 9 111 2 19 3 238 1 294 1 
146 1 218 1 114 2 239 3 187 1 116 3 1 2 298 23 117 10 347 4 300 2 327 3 4 2 49 2 79 1 175 1 199 1 123 2 177 2 83 2 360 3 108 1 41 1 14 1 183 2 232 1 291 13 111 2 164 1 19 1 45 1 238 1 294 2 
105 1 43 1 
353 1 355 1 52 1 
135 1 90 1 136 1 120 1 98 1 26 1 165 1 209 1 162 1 80 1 
221 1 258 1 
135 1 90 1 213 1 136 1 120 1 121 1 26 1 324 1 165 1 
10 1 159 1 135 1 169 1 280 2 136 1 98 1 26 1 209 1 150 1 288 1 140 1 90 1 120 1 215 1 165 1 373 1 80 1 
10 1 159 1 135 1 169 1 280 2 136 1 98 1 26 1 209 1 150 1 288 1 140 1 90 1 120 1 215 1 165 1 373 1 80 1 
10 1 159 1 135 1 169 1 280 2 136 1 98 1 26 1 209 1 150 1 288 1 140 1 90 1 120 1 215 1 165 1 373 1 80 1 
105 1 355 1 43 1 
105 1 355 1 43 1 
353 1 52 1 
353 1 355 1 52 1 
234 1 372 1 
135 1 169 1 136 1 137 1 26 1 220 1 74 2 3 1 221 1 269 1 222 2 270 1 154 2 120 1 10 1 280 1 283 2 287 1 288 1 184 1 90 1 112 2 234 1 215 1 165 1 372 1 258 1 
261 1 46 1 114 1 72 1 296 1 298 2 345 1 191 2 268 1 347 2 117 1 74 2 300 1 243 2 118 2 222 2 196 1 119 1 53 1 197 1 177 1 142 1 179 1 283 2 314 1 285 2 363 1 364 1 291 1 111 1 66 1 
223 1 313 1 241 1 335 1 179 1 314 1 285 2 40 1 89 1 182 1 243 2 118 2 30 1 252 2 31 1 68 1 93 1 311 1 216 1 
333 1 313 1 241 1 335 1 179 1 314 1 285 1 40 1 89 1 182 1 243 1 118 1 252 2 31 1 93 1 311 1 216 1 
261 1 242 1 179 1 314 1 285 1 40 1 348 1 243 1 118 1 30 1 196 1 92 1 132 1 200 1 
313 1 241 1 335 1 179 1 314 1 285 1 40 1 89 1 182 1 243 1 118 1 30 1 252 2 31 1 68 1 93 1 311 1 216 1 
185 1 
76 1 35 1 82 1 255 1 373 1 236 1 20 1 
295 1 76 1 275 1 201 1 10 1 81 1 82 1 358 1 204 1 11 1 13 1 210 1 17 1 215 1 373 2 20 1 340 1 
261 3 134 2 168 3 327 2 4 2 274 2 54 2 275 3 56 1 10 5 223 1 334 1 336 2 224 2 179 3 11 6 285 3 180 1 13 4 183 2 17 4 233 6 236 1 20 9 237 2 239 2 24 2 73 1 25 2 190 2 243 3 118 3 76 8 29 6 194 1 196 10 34 1 35 1 201 5 82 2 312 2 81 12 204 4 358 4 360 2 314 4 362 2 128 1 212 2 366 2 92 1 215 5 373 8 257 3 
81 2 204 1 358 1 1 1 11 1 13 1 76 1 29 1 49 1 17 1 164 1 233 1 373 1 20 1 294 1 
141 1 10 1 312 1 204 1 358 1 13 1 76 1 163 1 195 1 17 1 215 1 20 1 276 1 
76 1 82 1 358 1 204 1 17 1 373 1 236 1 20 1 13 1 
81 2 239 1 11 1 360 1 327 1 183 1 76 2 29 1 4 1 233 1 373 1 20 1 
10 1 201 1 82 1 215 1 373 1 275 1 
261 1 73 1 243 2 118 2 76 1 271 1 196 1 200 1 275 1 201 2 10 2 334 1 358 2 204 2 179 1 314 1 109 1 285 2 13 2 211 1 17 1 92 2 366 1 132 1 215 2 20 1 
261 1 46 1 114 1 343 1 298 1 99 1 345 1 117 1 347 2 300 1 74 3 243 1 118 1 222 3 154 2 196 1 197 1 330 1 177 1 157 1 283 2 179 1 314 1 285 1 184 1 318 1 110 1 111 1 92 1 112 2 371 2 257 1 
81 4 82 2 334 1 204 1 358 1 11 2 13 1 76 2 29 2 233 2 17 1 366 1 373 4 20 1 374 1 
90 1 102 1 165 1 
90 1 165 1 209 1 372 1 129 1 
90 1 102 1 165 1 
90 1 102 1 165 1 
90 1 174 1 165 1 
90 1 174 1 165 1 
90 1 174 1 165 1 
90 1 165 1 
135 1 136 1 
146 2 239 1 114 1 1 1 298 10 189 2 117 5 347 2 300 1 195 1 4 1 49 1 177 1 141 1 59 1 108 1 291 5 63 1 164 1 111 1 319 1 294 1 374 1 
146 3 114 2 239 2 1 2 189 2 298 13 117 6 347 4 300 2 327 1 195 1 4 1 49 1 177 2 141 1 278 1 59 1 360 1 108 1 316 1 291 7 63 1 319 1 164 1 111 2 19 1 294 1 374 1 
146 1 114 2 239 2 218 1 187 1 1 1 298 12 117 6 347 4 300 2 327 2 49 1 4 2 175 1 177 2 278 1 360 2 108 1 14 1 183 2 291 6 164 1 111 2 19 1 294 1 
146 3 218 1 114 4 239 2 187 1 1 1 298 12 189 2 117 5 347 8 300 4 327 2 49 1 4 1 175 1 177 4 278 1 360 2 108 1 14 1 183 1 291 7 164 1 111 4 19 1 294 1 45 2 
146 2 239 1 114 1 1 1 298 10 189 2 117 5 347 2 300 1 195 1 4 1 49 1 177 1 141 1 59 1 108 1 291 5 63 1 164 1 111 1 319 1 294 1 374 1 
146 3 218 1 114 2 239 2 187 1 1 1 298 13 189 2 117 7 347 4 300 2 327 2 49 1 4 2 175 1 177 2 360 2 108 1 14 1 183 2 291 6 164 1 111 2 19 1 294 1 45 1 
146 1 114 3 239 2 218 1 187 1 1 1 298 11 117 4 347 6 300 3 327 2 49 1 4 1 175 1 177 3 278 1 360 2 108 1 14 1 183 1 291 7 164 1 111 3 19 1 45 1 294 1 
146 3 218 1 114 3 239 2 187 1 1 1 298 11 189 1 117 4 347 6 300 3 327 2 49 1 4 1 175 1 177 3 225 1 360 2 108 1 14 1 183 1 291 7 164 1 111 3 19 2 45 1 294 1 
141 2 146 4 189 2 298 4 117 2 291 2 63 1 195 2 319 2 19 2 
146 1 114 3 239 2 218 1 187 1 1 1 298 11 117 4 347 6 300 3 327 2 49 1 4 1 175 1 177 3 225 1 360 2 108 1 14 1 183 1 291 7 164 1 111 3 19 1 45 1 294 1 
146 2 141 1 114 2 189 1 347 4 300 2 63 1 195 1 111 2 319 1 19 1 177 2 45 1 
146 2 141 1 239 1 59 1 291 4 195 1 63 1 4 1 319 1 255 1 298 8 189 2 117 4 374 1 
146 2 278 1 114 1 239 1 360 1 189 1 298 4 117 2 347 2 300 1 183 1 327 1 291 2 4 1 111 1 19 1 177 1 
146 2 239 1 1 2 360 1 189 1 298 7 117 4 183 1 327 1 316 1 291 3 4 1 49 1 19 1 294 1 
146 9 239 3 114 2 1 2 266 1 298 21 189 5 117 11 347 4 300 2 327 2 195 2 4 3 307 1 177 2 141 2 59 1 360 2 183 2 316 1 291 10 63 1 319 1 111 2 19 4 294 2 45 2 69 1 374 1 
1 1 298 1 117 1 
291 1 298 1 294 1 
278 1 146 3 114 1 239 1 360 1 362 1 298 6 189 2 347 2 117 3 300 1 327 1 183 1 291 3 4 1 111 1 19 1 177 1 
146 3 218 1 114 2 239 2 187 1 1 1 298 13 189 2 117 7 347 4 300 2 327 2 49 1 4 2 175 1 177 2 360 2 108 1 14 1 183 2 291 6 164 1 111 2 19 1 294 1 45 1 
141 1 146 2 59 1 239 1 298 6 189 1 117 3 291 3 195 1 4 1 19 1 
146 2 141 1 114 1 189 1 298 1 117 1 347 2 300 1 195 1 63 1 319 1 111 1 19 1 69 1 45 1 177 1 
141 1 146 4 114 1 59 1 239 2 189 2 298 10 108 1 347 2 117 5 300 1 291 5 195 1 4 2 111 1 19 2 177 1 276 1 
146 1 114 1 239 1 360 1 298 2 108 1 347 2 300 1 291 2 111 1 19 1 177 1 
146 2 114 1 239 1 360 1 189 1 298 4 108 1 117 2 347 2 300 1 183 1 327 1 291 2 4 1 111 1 19 1 177 1 
141 1 146 1 114 1 189 1 298 2 108 1 117 1 347 2 300 1 291 1 195 1 111 1 177 1 
146 11 148 1 114 5 239 4 1 4 298 26 189 6 117 14 347 10 300 5 327 3 195 3 49 1 4 4 177 5 141 3 278 1 59 1 356 1 225 1 360 3 108 1 183 3 316 1 291 12 63 1 319 1 367 1 111 5 19 5 69 1 45 2 294 3 
184 1 321 1 222 1 282 1 283 1 139 1 74 1 
217 1 321 1 322 1 282 1 283 1 139 1 74 1 184 1 222 1 176 1 235 1 310 1 
261 1 243 1 118 1 179 1 196 1 92 1 255 1 314 1 132 1 285 1 200 1 
261 1 36 1 343 1 283 1 179 1 314 1 285 1 74 2 243 1 118 1 184 1 222 2 154 1 110 1 196 1 112 1 92 1 257 1 
261 2 34 1 36 1 336 1 343 1 188 1 283 2 179 1 314 1 285 1 267 1 325 1 74 2 243 1 118 1 184 1 222 2 154 2 110 1 196 3 112 1 54 1 257 2 
261 2 34 1 36 1 336 1 343 1 143 1 188 1 283 2 179 1 314 1 285 2 267 1 325 1 74 2 243 2 118 2 184 1 222 2 154 2 196 3 112 1 54 1 257 2 94 1 
261 1 34 1 10 2 168 1 201 1 82 1 336 1 264 1 179 1 314 1 285 3 248 1 243 3 212 1 118 3 92 1 196 4 54 1 215 2 373 1 237 1 257 1 94 1 
261 1 34 1 10 2 168 1 201 1 82 1 336 1 224 1 179 1 314 1 285 3 243 3 212 1 118 3 92 1 196 4 54 1 215 2 373 1 237 1 257 1 94 1 
243 1 118 1 179 1 314 1 285 1 331 1 
261 2 223 1 179 2 314 3 191 1 285 7 151 1 363 1 182 1 243 7 118 6 130 1 251 1 92 2 196 3 329 1 256 1 257 1 331 1 9 1 56 1 
146 2 261 1 46 2 23 1 239 1 114 2 343 1 298 8 189 2 99 1 268 1 117 4 347 4 74 2 300 2 243 1 118 1 222 2 195 1 4 1 154 1 196 1 197 2 351 1 177 2 141 1 157 1 223 1 59 1 36 1 179 1 283 1 160 1 314 1 285 1 184 3 364 1 291 4 63 1 292 1 110 1 319 1 111 2 112 1 257 1 374 1 21 1 
134 1 168 1 24 1 73 1 243 1 76 1 118 1 274 1 196 2 275 1 35 1 10 3 201 2 82 1 358 2 204 2 224 1 285 1 13 2 287 1 212 1 92 1 17 2 215 3 373 1 236 1 20 1 237 1 
261 1 223 1 179 1 314 2 285 2 128 1 212 1 243 2 118 2 196 2 257 1 331 1 56 1 
261 1 223 1 179 1 314 1 285 4 243 4 118 4 92 1 196 1 78 1 132 1 200 1 94 1 
34 1 261 1 115 1 179 1 107 1 314 2 285 2 243 2 118 2 350 1 251 1 196 1 256 1 257 1 
243 1 118 1 313 1 335 1 252 1 179 1 92 1 314 1 285 1 216 1 
261 1 182 1 243 2 118 2 142 1 223 1 179 1 196 1 314 1 285 2 363 1 
34 1 261 2 223 1 179 2 314 2 285 5 363 1 243 5 118 4 130 1 92 1 196 3 78 1 329 1 132 1 200 1 
34 1 277 1 261 2 223 1 179 2 314 2 285 5 363 1 243 5 118 4 130 1 92 1 196 3 78 1 132 1 200 1 
261 1 36 1 343 1 143 1 283 1 179 1 314 1 285 1 74 2 243 1 118 1 184 1 222 2 154 1 196 1 112 1 92 1 257 1 
34 1 261 1 179 1 314 2 285 1 151 1 243 1 118 1 251 1 196 1 256 1 257 1 56 1 
184 1 161 1 315 1 133 1 339 1 
10 2 95 1 82 1 22 1 113 1 202 1 188 1 338 1 161 2 267 1 315 1 287 1 325 1 184 1 215 2 373 1 237 1 133 2 339 2 
72 1 283 1 161 1 315 1 74 1 222 1 119 1 66 1 339 1 
95 1 202 1 315 1 
301 1 100 1 158 1 127 1 70 1 71 3 323 1 320 1 171 1 124 1 15 3 
126 1 127 1 305 1 2 1 
127 1 124 1 
127 1 70 1 255 1 124 1 
158 1 127 1 70 1 71 1 323 1 124 1 15 1 
178 1 64 1 15 1 
158 1 127 1 70 1 71 3 323 1 192 1 208 1 15 3 100 2 153 1 320 1 124 1 
158 1 127 1 70 1 71 2 323 1 171 1 206 1 124 1 15 2 
158 1 127 1 71 1 323 1 252 1 320 1 2 1 8 1 93 1 216 1 15 1 
158 1 127 1 71 1 323 1 320 1 124 1 15 1 
158 1 70 1 71 1 323 1 320 1 124 2 15 1 
158 2 127 1 354 1 71 2 250 1 323 2 320 1 6 1 124 1 15 2 
158 1 70 1 127 2 71 3 323 1 171 2 2 1 149 1 15 3 301 1 320 1 305 1 124 1 
158 1 127 1 70 1 335 1 71 2 241 1 323 1 171 1 181 1 15 2 252 2 320 1 124 1 93 1 216 1 
158 2 70 1 127 2 71 4 323 2 359 1 206 1 171 2 2 1 15 4 320 1 305 1 124 1 
158 1 127 1 70 1 71 1 323 1 320 1 124 1 15 1 
126 1 158 1 70 2 127 3 71 4 323 1 171 2 2 1 208 1 15 4 100 1 153 1 305 1 124 2 
158 1 127 1 70 1 71 2 357 1 323 1 38 1 171 1 15 2 193 1 320 1 124 1 
158 1 127 1 70 1 71 3 337 1 323 1 208 1 15 3 100 2 153 2 320 1 124 1 
127 2 263 1 77 1 370 2 
158 1 71 1 323 1 320 1 75 1 15 1 
301 1 158 1 127 1 70 1 71 2 323 1 320 1 171 1 124 1 15 2 
88 1 
158 1 127 1 70 1 71 1 323 1 320 1 124 1 15 1 

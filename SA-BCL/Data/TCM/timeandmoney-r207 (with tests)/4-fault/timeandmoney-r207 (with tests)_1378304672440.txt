#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 205 (83,217) (83,217) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 205 (83,217) (83,217) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 205 (83,217) (83,217) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 205 (83,217) (83,217) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
308 1 151 1 83 1 11 1 120 1 217 1 205 1 42 1 108 1 201 1 36 1 
308 1 151 1 83 1 11 1 120 1 217 1 205 1 42 1 108 1 201 1 36 1 
308 1 151 1 83 1 11 1 120 1 217 1 205 1 42 1 108 1 201 1 36 1 
308 1 151 1 83 1 11 1 120 1 217 1 205 1 42 1 108 1 201 1 36 1 
349 1 225 3 76 3 285 1 61 1 215 1 306 1 120 1 363 1 140 2 42 4 273 2 308 1 151 1 136 1 90 1 59 1 36 4 
225 1 349 1 215 1 11 1 120 1 178 1 42 2 373 1 308 1 151 1 18 1 71 1 90 1 59 1 108 1 36 2 
225 2 76 1 11 1 120 1 140 1 42 3 308 2 276 1 151 2 136 1 90 1 59 1 36 3 
349 1 225 5 285 1 76 7 61 1 215 1 11 1 306 1 147 1 120 1 363 1 140 4 273 2 42 9 325 1 308 2 276 1 151 2 136 3 253 1 90 1 59 1 36 9 223 1 
349 1 225 5 285 1 76 7 61 1 215 1 11 1 306 1 147 1 120 1 363 1 140 4 273 2 42 9 325 1 308 2 276 1 151 2 136 3 253 1 90 1 59 1 36 9 223 1 
244 1 354 1 213 1 
244 1 299 1 346 2 
145 2 114 1 88 2 81 1 377 2 297 2 133 2 364 2 
145 2 25 2 165 1 286 1 340 1 81 1 342 1 133 2 100 1 364 3 343 1 316 1 33 1 104 1 58 1 297 2 222 1 224 1 202 1 114 1 115 1 263 2 158 1 351 1 67 1 252 1 183 2 231 2 88 3 89 1 124 1 326 1 72 1 280 1 234 2 377 2 282 1 
145 1 5 1 88 1 355 1 336 1 81 1 377 1 297 1 133 1 364 1 
321 1 288 1 213 1 266 1 364 1 160 1 244 1 88 1 355 1 102 1 103 1 197 1 297 1 23 1 
145 1 321 1 213 1 133 1 364 1 160 2 244 1 88 1 355 1 102 1 103 1 197 2 377 1 297 1 23 1 
17 1 197 1 13 1 283 1 160 1 
244 1 17 1 213 1 157 1 197 2 99 1 283 1 160 2 
17 1 197 1 160 1 
145 1 336 1 81 1 219 1 133 1 160 1 364 1 5 1 88 1 355 1 197 1 377 1 297 1 283 1 
244 1 
244 1 17 1 213 1 197 2 99 1 14 1 283 1 160 2 
9 2 137 1 117 1 213 1 41 1 99 1 160 5 244 1 275 1 87 2 16 1 17 2 34 1 279 2 197 5 221 1 93 1 360 1 283 2 
165 1 115 1 286 1 263 1 305 1 133 1 364 2 231 1 88 2 89 1 326 1 104 1 72 1 58 1 234 1 296 1 377 1 297 1 52 1 224 1 
114 1 354 1 
145 1 77 1 114 2 28 1 133 1 364 2 88 2 377 1 297 2 
37 1 186 1 296 1 
165 1 114 1 286 1 115 1 263 1 138 1 364 1 231 1 88 1 89 1 326 1 72 1 104 1 58 1 234 1 224 1 
145 1 114 1 88 3 305 1 377 3 297 3 133 3 364 3 
5 1 88 1 355 1 377 1 297 1 133 1 364 1 
145 1 77 1 88 1 355 1 28 1 377 1 297 1 133 1 364 1 
145 2 25 1 165 1 236 1 286 1 28 1 340 1 81 1 342 1 133 3 100 1 364 4 343 1 33 1 104 1 102 1 103 1 58 1 197 1 297 3 222 1 224 1 321 1 114 1 115 1 263 1 305 1 158 1 351 1 204 1 183 2 160 1 231 1 88 4 355 1 89 1 124 1 326 1 72 1 234 1 282 1 377 3 52 1 23 1 
114 1 88 2 288 1 305 1 292 1 377 1 297 2 133 1 364 2 
145 1 236 1 321 1 305 2 28 1 133 3 160 1 364 3 244 1 88 3 355 1 102 1 103 1 197 1 377 3 297 3 320 1 23 1 52 1 
145 1 88 2 305 1 28 1 186 1 296 1 377 2 297 2 133 2 364 2 
165 1 114 1 286 1 115 1 263 1 364 1 231 1 88 1 89 1 72 1 104 1 326 1 58 1 234 1 224 1 
165 1 114 1 115 1 263 1 238 1 364 1 15 1 231 1 88 1 89 1 104 1 326 1 58 1 234 1 224 1 
25 4 340 1 2 1 100 2 293 1 343 1 344 1 152 1 135 1 33 1 199 1 296 2 222 1 247 1 37 2 158 1 351 1 324 1 252 2 183 2 161 1 186 2 22 1 335 1 
321 1 88 1 355 1 210 1 377 1 297 1 133 1 364 1 
145 1 114 1 288 1 305 2 28 1 292 1 218 1 133 4 364 5 88 5 105 1 377 4 297 5 52 1 
5 1 88 2 355 1 210 1 377 2 297 2 133 2 364 2 
262 1 132 1 
262 1 132 1 
20 1 353 1 
20 1 353 1 
20 1 353 1 
262 1 132 1 21 1 
262 1 132 1 21 1 
262 1 132 1 68 1 
113 1 262 2 20 1 132 2 380 1 353 1 
262 1 132 1 21 1 
262 1 132 1 179 1 
262 1 132 1 179 1 
262 1 132 1 179 1 
113 1 262 2 26 1 78 1 177 1 132 2 180 1 160 2 244 1 230 2 19 2 134 1 197 2 162 2 359 2 51 2 200 1 155 1 110 3 
132 1 239 1 133 2 364 2 172 1 197 1 297 2 110 1 155 1 262 1 114 1 227 1 271 1 68 1 160 1 230 1 88 2 277 1 19 1 188 1 377 2 51 1 359 1 50 1 
349 1 61 1 215 1 
349 1 18 1 215 1 
61 2 18 1 91 1 215 3 333 1 182 1 
61 1 18 1 91 1 215 2 182 1 255 1 
61 1 18 1 91 1 215 2 182 2 
213 1 239 1 2 1 99 1 169 1 244 2 197 5 199 1 346 3 319 2 299 1 9 1 137 1 264 2 117 2 62 1 118 1 41 3 160 5 206 1 87 1 17 1 279 1 254 1 188 1 331 1 50 1 22 1 143 2 283 4 335 1 381 1 
237 1 258 1 213 1 98 1 2 3 99 1 244 5 34 1 197 9 199 3 346 9 319 6 369 1 246 5 299 3 9 2 137 1 264 6 117 6 62 3 39 1 118 2 41 8 13 5 160 9 17 6 87 2 44 1 279 2 254 2 188 4 22 3 283 7 335 3 381 1 
213 1 2 1 169 1 244 3 34 1 197 3 199 1 319 2 346 4 299 2 9 1 117 2 264 2 62 1 118 1 41 3 160 3 87 1 279 1 254 1 188 1 331 1 22 1 143 1 283 2 335 1 
237 1 258 1 213 1 2 2 169 1 244 4 34 1 197 4 199 2 346 7 319 4 299 3 9 1 264 4 117 4 62 2 118 1 41 5 160 4 87 1 44 1 279 1 254 1 188 2 331 1 22 2 143 2 283 3 335 2 
6 1 354 1 326 1 
326 1 3 1 
318 1 
326 1 104 1 
115 1 6 2 326 3 104 1 40 1 242 1 
115 1 326 1 104 1 
326 1 315 1 
247 3 25 7 129 1 10 1 257 1 12 1 30 1 2 1 241 1 352 1 100 3 252 4 293 2 46 1 209 1 22 1 361 2 
247 3 25 7 129 1 10 1 257 1 12 1 30 1 2 1 241 1 352 1 100 3 252 4 293 2 46 1 209 1 22 1 361 2 
247 3 25 7 129 1 10 1 257 1 12 1 30 1 2 1 241 1 352 1 100 3 252 4 293 2 46 1 73 1 209 1 22 1 361 2 
25 31 129 1 287 3 257 2 340 1 30 5 241 2 2 4 100 15 4 1 293 5 343 1 199 3 295 1 60 1 222 1 247 10 10 2 62 3 158 1 121 1 12 2 352 1 183 2 252 16 274 4 45 1 375 1 46 1 209 1 22 4 313 1 361 3 335 3 
25 9 129 1 257 1 340 2 30 1 2 1 241 1 100 4 293 3 343 2 222 2 247 4 10 1 371 1 158 2 12 1 352 1 183 4 252 5 375 1 330 1 46 1 22 1 361 2 
75 1 76 1 215 2 260 1 32 1 151 1 84 1 58 1 59 1 365 1 366 1 36 2 224 1 225 1 349 1 61 1 263 1 11 1 120 1 269 1 42 2 231 1 308 1 374 1 18 1 311 1 90 1 234 1 48 1 333 1 
75 1 76 2 215 2 259 1 260 1 240 1 32 1 151 1 84 1 58 1 59 1 365 1 366 1 36 3 224 1 225 1 349 1 61 1 263 1 11 1 269 1 270 1 42 3 231 1 308 1 374 1 18 1 90 1 234 1 333 1 
75 1 76 2 215 2 260 1 240 1 32 1 58 1 59 1 365 1 36 2 224 1 225 1 349 1 61 1 263 1 11 1 269 1 270 1 42 2 231 1 374 1 18 1 90 1 234 1 333 1 
75 2 301 1 263 1 53 1 191 1 11 2 259 1 269 2 42 1 32 2 308 1 231 1 151 1 89 1 326 1 104 1 58 1 234 1 345 1 175 1 367 1 36 1 224 1 
75 1 215 2 260 1 240 1 32 1 151 1 84 1 58 1 365 1 366 1 36 1 224 1 349 1 61 1 263 1 11 1 120 1 269 1 42 1 231 1 308 1 374 1 18 1 311 1 234 1 333 1 
0 1 
288 1 53 1 337 1 338 2 1 1 55 1 99 3 244 2 101 4 195 2 104 1 102 1 103 1 196 1 58 1 197 5 345 1 346 2 297 1 298 2 299 2 9 1 117 2 64 1 160 5 17 6 355 1 310 1 254 1 164 2 23 1 212 2 213 1 167 2 168 1 82 2 364 1 224 1 321 1 137 1 263 2 266 1 139 1 41 2 86 1 87 1 231 2 88 1 89 2 141 1 327 1 326 1 279 1 234 2 189 1 
288 1 55 1 168 1 99 1 364 1 101 2 195 1 102 1 103 1 197 3 297 1 321 1 266 1 139 1 86 1 14 1 160 3 17 2 88 1 355 1 141 1 23 1 
288 1 213 1 55 1 168 1 99 1 364 1 244 1 101 3 102 1 103 1 197 3 297 1 298 1 321 1 266 1 139 1 86 1 14 1 160 3 17 1 88 1 355 1 141 1 23 1 
288 1 213 1 55 1 168 1 99 1 364 1 244 1 101 3 195 1 102 1 103 1 197 3 297 1 298 1 321 1 266 1 139 1 86 1 14 1 160 3 17 2 88 1 355 1 141 1 164 1 23 1 
288 1 1 1 338 2 55 1 99 3 244 5 101 6 195 4 56 1 103 1 102 1 197 5 294 1 297 1 298 4 299 2 9 1 117 1 14 1 160 5 123 1 17 7 355 1 310 1 164 4 23 1 212 2 213 5 167 2 168 1 82 2 364 1 261 1 321 1 137 1 266 1 139 1 41 1 86 1 181 1 87 1 88 1 141 1 279 1 
288 1 1 1 338 2 55 1 99 2 244 2 101 4 195 2 103 1 102 1 197 4 346 2 297 1 299 2 298 2 9 1 117 1 64 1 160 4 17 4 355 1 310 1 164 2 23 1 212 2 213 1 167 2 168 1 82 2 364 1 321 1 137 1 266 1 139 1 41 1 86 1 87 1 88 1 141 1 279 1 
212 2 288 1 213 1 338 2 1 1 167 2 55 1 168 1 82 2 99 2 364 1 244 1 101 4 195 2 102 1 103 1 294 1 197 4 297 1 261 1 298 2 299 2 9 1 321 1 137 1 117 1 266 1 139 1 41 1 86 1 181 1 160 4 17 4 87 1 88 1 355 1 141 1 310 1 279 1 164 2 23 1 
212 2 288 1 213 1 338 2 1 1 167 2 55 1 168 1 82 2 99 2 364 1 244 1 101 4 195 2 102 1 103 1 294 1 197 4 297 1 261 1 298 2 299 2 9 1 321 1 137 1 117 1 266 1 139 1 41 1 86 1 181 1 160 4 17 4 87 1 88 1 355 1 141 1 310 1 279 1 164 2 23 1 
288 1 213 1 79 2 338 2 1 1 167 2 55 1 168 1 99 2 220 2 364 1 244 1 101 4 195 2 102 1 103 1 294 1 197 4 346 2 176 1 297 1 298 2 9 1 321 1 137 1 117 1 266 1 139 1 307 1 41 1 86 1 160 4 17 4 87 1 88 1 355 1 141 1 279 1 92 1 164 2 23 1 
212 2 288 1 213 1 338 2 1 1 167 2 55 1 168 1 82 2 99 2 364 1 244 1 101 5 195 3 102 1 103 1 294 1 197 4 261 1 297 1 299 2 298 3 9 1 321 1 137 1 117 1 266 1 139 1 41 1 86 1 181 1 160 4 123 1 87 1 17 5 88 1 355 1 141 1 310 1 279 1 164 3 23 1 
212 2 288 1 213 1 338 2 1 1 167 2 55 1 168 1 82 2 99 2 364 1 244 1 101 5 195 3 102 1 103 1 294 1 197 4 261 1 297 1 299 2 298 3 9 1 321 1 137 1 117 1 266 1 139 1 41 1 86 1 181 1 160 4 123 1 87 1 17 5 88 1 355 1 141 1 310 1 279 1 164 3 23 1 
288 1 1 1 338 2 55 1 99 2 244 1 101 4 195 2 103 1 102 1 197 4 346 2 297 1 298 2 9 1 117 1 64 1 160 4 17 4 355 1 164 2 23 1 213 1 79 2 167 2 168 1 220 2 364 1 321 1 137 1 266 1 139 1 41 1 86 1 87 1 88 1 141 1 279 1 92 1 
247 2 25 6 114 2 129 1 37 1 10 1 351 1 158 1 340 1 2 1 241 1 352 1 100 3 252 3 183 2 293 2 343 1 161 1 354 1 33 1 186 1 46 1 296 1 22 1 222 1 361 1 
25 14 287 3 340 2 30 1 341 1 2 2 342 1 100 6 293 1 343 2 33 1 153 1 199 2 296 11 295 1 222 2 247 2 114 1 37 11 62 2 158 2 351 2 67 1 183 4 252 8 274 3 45 1 358 1 186 4 312 1 49 1 22 1 335 1 
165 1 25 2 286 1 97 1 340 1 133 1 342 1 364 2 100 1 343 1 33 1 104 1 58 1 297 1 222 1 224 1 114 1 115 1 263 1 138 1 305 1 158 1 351 1 67 1 70 1 183 2 252 1 231 1 88 2 89 1 326 1 72 1 234 1 186 1 49 1 377 1 52 1 94 1 
284 1 286 2 340 3 241 1 2 4 342 1 100 11 293 4 343 3 104 2 58 2 199 2 296 6 297 1 247 5 156 1 302 2 114 1 115 2 10 1 305 1 62 2 351 3 158 3 67 1 352 1 252 11 355 1 72 2 22 4 25 22 165 2 129 1 30 1 133 1 364 3 33 3 370 2 222 3 224 2 263 1 37 6 38 1 268 1 183 6 231 1 88 3 89 1 326 2 234 1 186 6 46 1 49 1 376 2 377 1 282 2 379 2 52 1 335 2 
25 2 362 1 53 1 340 2 240 1 133 1 342 1 364 1 100 1 343 2 33 2 104 2 58 2 107 1 345 1 368 1 297 1 222 2 224 2 203 1 300 1 202 2 263 7 305 1 158 2 351 2 67 1 183 4 252 1 231 8 88 1 161 1 89 2 326 3 233 1 234 8 48 1 126 1 377 1 
145 1 25 3 28 1 291 1 340 1 2 1 133 1 364 1 100 2 293 1 343 1 33 1 199 1 296 1 297 1 222 1 247 1 37 1 62 1 158 1 351 1 183 2 252 1 88 1 186 1 49 1 377 1 22 1 335 1 
247 1 25 2 37 1 351 1 158 1 340 1 30 1 2 1 183 2 252 2 343 1 161 1 152 1 33 1 186 1 199 1 296 1 222 1 
247 1 25 2 37 1 351 1 158 1 340 1 183 2 100 2 293 1 343 1 161 1 344 1 33 1 186 1 296 1 22 1 222 1 335 1 
25 4 340 1 30 1 2 1 100 2 293 1 343 1 33 1 199 1 296 2 222 1 247 2 37 2 62 1 158 1 351 1 252 2 183 2 161 1 186 2 22 1 335 1 
247 1 25 2 37 1 351 1 158 1 340 1 30 1 2 1 183 2 252 2 343 1 152 1 33 1 186 1 199 1 296 1 126 1 222 1 
247 1 25 2 37 1 351 1 158 1 340 1 183 2 100 2 293 1 343 1 344 1 33 1 186 1 296 1 126 1 22 1 222 1 335 1 
25 4 340 1 30 1 2 1 100 2 293 1 343 1 33 1 199 1 296 2 222 1 247 2 37 2 62 1 158 1 351 1 252 2 183 2 186 2 126 1 22 1 335 1 
25 4 340 1 30 1 2 1 100 2 293 1 343 1 33 1 199 1 296 2 222 1 247 2 37 2 62 1 158 1 351 1 252 2 183 2 186 2 22 1 335 1 
25 2 165 1 286 1 340 1 342 1 364 1 100 1 343 1 33 1 104 1 58 1 222 1 224 1 114 1 115 1 263 1 351 1 158 1 67 1 252 1 183 2 231 1 88 1 89 1 72 1 326 1 234 1 282 1 
25 2 165 1 238 1 340 1 342 1 364 1 100 1 343 1 33 1 104 1 58 1 198 1 222 1 224 1 114 1 115 1 263 1 351 1 158 1 67 1 252 1 15 1 183 2 231 1 88 1 89 1 326 1 234 1 
25 4 340 1 30 1 2 1 100 2 293 1 343 1 33 1 199 1 296 2 222 1 247 2 37 2 62 1 158 1 351 1 252 2 183 2 186 2 49 1 22 1 335 1 
25 4 165 1 286 1 340 1 30 1 2 1 100 2 364 1 293 1 343 1 33 1 104 1 58 1 199 1 296 2 222 1 224 1 247 2 302 1 115 1 37 2 263 1 62 1 351 1 158 1 252 2 183 2 231 1 88 1 72 1 326 1 186 2 234 1 48 1 22 1 282 1 335 1 
145 1 25 3 28 1 340 1 30 1 2 1 133 1 100 1 364 1 343 1 33 1 199 1 296 1 297 1 222 1 247 1 37 1 62 1 158 1 351 1 250 1 183 2 252 2 88 1 186 1 49 1 22 1 377 1 335 1 
314 1 146 1 25 19 287 1 340 2 30 3 2 3 170 2 100 10 293 3 193 1 343 2 199 3 295 1 35 1 222 2 247 6 249 2 350 1 62 3 158 2 183 4 252 9 274 2 142 1 45 1 356 1 330 1 22 3 335 3 
146 1 25 26 256 1 287 2 340 3 30 2 2 3 170 1 100 12 245 1 293 2 193 2 343 3 317 1 199 3 35 2 222 3 247 4 249 4 350 1 62 3 158 3 119 1 267 1 183 6 252 14 274 2 375 2 45 2 356 1 357 1 330 1 22 2 335 2 
146 1 287 3 340 3 2 5 241 1 100 21 245 1 293 4 343 3 193 1 199 4 295 1 247 8 303 1 10 1 249 4 62 4 350 1 158 3 119 1 352 1 252 20 356 1 357 1 22 5 361 1 25 41 256 1 129 1 30 4 170 1 317 1 35 2 222 3 267 1 183 6 274 4 45 3 375 1 142 1 330 1 46 1 335 4 
146 1 25 38 129 1 256 1 287 3 340 4 30 3 241 1 2 5 170 1 100 18 245 1 293 4 193 1 343 4 317 1 199 4 295 1 35 2 222 4 247 7 303 1 10 1 249 4 350 1 62 4 158 4 119 1 267 1 352 1 183 8 252 20 274 4 142 1 375 2 45 3 357 1 356 1 46 1 330 1 22 4 361 1 335 3 
146 1 25 52 129 1 256 1 287 4 340 2 30 7 241 1 2 8 170 1 100 25 245 1 293 7 193 1 343 2 317 1 199 7 295 2 35 1 222 2 247 14 10 1 249 4 350 1 62 7 158 2 119 1 267 1 352 1 183 4 252 27 274 4 375 1 45 2 357 1 356 1 46 1 330 1 312 2 22 8 361 1 335 7 
113 1 262 1 230 1 19 1 134 1 78 1 226 1 132 1 51 1 359 1 
277 1 68 1 
262 1 230 1 19 1 173 1 125 1 132 1 29 1 51 1 359 1 
113 1 262 1 78 1 177 1 132 1 180 1 160 1 244 1 230 1 19 1 134 1 197 1 162 1 359 1 51 1 200 1 155 1 110 2 
113 1 262 1 78 1 177 1 132 1 180 1 160 1 244 1 230 1 19 1 134 1 197 1 162 1 359 1 51 1 200 1 155 1 110 2 
113 1 262 1 78 1 177 1 132 1 180 1 160 1 244 1 230 1 19 1 134 1 197 1 162 1 359 1 51 1 200 1 155 1 110 2 
27 1 21 1 380 1 
27 1 21 1 380 1 
95 1 179 1 
95 1 179 1 380 1 
172 1 271 1 
132 1 239 1 133 2 364 2 172 1 197 1 297 2 110 1 262 1 248 1 114 1 227 1 271 1 68 1 180 1 160 1 230 1 88 2 277 1 19 1 162 1 188 1 51 1 359 1 50 1 377 2 283 1 
27 1 21 1 
95 1 179 1 380 1 
25 2 362 1 214 1 192 1 340 1 342 1 364 2 100 1 343 1 33 1 104 1 58 1 297 2 222 1 224 1 348 1 300 1 202 2 263 2 351 1 158 1 85 1 67 1 183 2 252 1 231 2 88 2 208 1 326 1 234 2 49 1 
349 1 75 1 61 1 263 2 265 1 215 2 65 1 260 1 240 1 231 2 18 1 374 1 84 1 58 1 234 2 48 1 333 1 211 1 224 1 
349 1 75 1 61 1 263 1 265 1 215 2 54 1 260 1 240 1 231 1 18 1 374 1 84 1 58 1 234 1 333 1 224 1 
75 1 263 1 191 1 53 1 231 1 89 1 326 1 104 1 58 1 234 1 345 1 211 1 224 1 144 1 
349 1 75 1 61 1 263 1 265 1 215 2 65 1 260 1 240 1 231 1 18 1 374 1 84 1 58 1 234 1 333 1 211 1 224 1 
130 1 
244 1 275 1 354 1 117 1 213 1 41 1 360 1 
212 1 213 1 82 1 99 1 244 2 197 1 346 1 299 1 9 1 137 1 117 1 41 1 160 1 87 1 17 1 310 1 279 1 
289 2 99 3 2 2 3 3 243 1 244 8 6 2 104 3 57 1 58 3 197 5 106 2 199 2 346 12 299 6 9 4 304 1 115 3 117 8 62 2 159 2 160 5 17 5 254 2 74 2 163 2 127 2 22 2 360 1 23 2 213 2 315 2 319 6 224 4 137 4 263 3 264 6 40 1 272 2 41 9 275 1 87 4 231 3 89 1 232 1 327 1 326 10 185 2 279 4 234 3 187 1 48 1 376 2 335 2 
256 1 287 1 96 1 213 2 289 2 99 1 2 2 245 1 244 5 197 1 317 1 199 2 346 6 319 5 299 3 9 2 137 2 116 1 264 5 117 5 62 2 267 1 41 8 160 1 274 1 17 1 87 2 45 1 327 1 279 2 357 1 254 1 127 1 22 2 335 2 
145 1 336 1 289 2 81 1 241 1 2 2 219 1 133 1 364 1 5 1 197 1 261 1 297 1 9 1 137 1 10 1 117 2 38 1 41 2 352 1 160 1 87 1 88 1 355 1 279 1 127 1 22 1 377 1 
9 1 137 1 117 1 213 1 41 1 275 1 244 1 87 1 279 1 360 1 
299 5 117 5 264 5 62 2 289 2 41 5 2 2 244 5 199 2 319 5 346 10 376 1 127 1 22 2 335 2 
244 1 17 1 213 1 197 1 99 1 160 1 
337 1 53 1 99 2 150 1 34 1 104 1 57 2 58 1 8 1 197 3 345 1 224 1 9 2 137 1 263 4 117 2 41 2 160 3 87 2 231 4 17 4 89 2 326 1 232 1 327 2 279 2 234 4 254 2 189 1 
145 2 25 1 165 1 286 1 340 1 81 1 342 1 133 2 100 1 364 3 343 1 33 1 104 1 58 1 297 2 222 1 224 1 114 1 115 1 263 1 158 1 351 1 183 2 231 1 88 3 89 1 124 1 72 1 326 1 234 1 377 2 282 1 
299 2 9 1 137 1 264 2 117 2 213 2 41 1 244 4 87 1 327 1 279 1 254 1 346 4 319 2 361 1 
19 1 378 1 51 1 
19 1 378 1 51 1 
19 1 134 1 271 1 51 1 128 1 
19 1 378 1 51 1 
24 1 19 1 51 1 
24 1 19 1 51 1 
24 1 19 1 51 1 
19 1 51 1 
262 1 132 1 
247 3 25 8 129 1 10 1 158 2 340 2 30 1 2 1 241 1 352 1 100 4 252 4 183 4 293 2 343 2 375 1 46 1 22 1 222 2 361 1 
247 2 25 6 129 1 10 1 241 1 2 1 352 1 100 3 252 3 293 2 354 1 46 1 22 1 361 1 
247 2 25 4 62 1 158 1 340 1 30 1 2 1 100 2 183 2 252 2 293 1 343 1 47 1 199 1 22 1 222 1 335 1 
247 2 25 7 287 1 62 1 30 1 2 1 100 4 252 3 274 2 293 1 45 1 199 1 295 1 22 1 335 1 
25 23 129 1 287 2 340 2 30 4 341 1 241 2 2 3 100 12 293 5 343 2 199 2 295 1 222 2 247 9 10 2 62 2 63 1 158 2 352 1 252 11 183 4 274 2 375 2 46 1 312 1 22 3 361 1 335 2 
274 1 25 1 100 1 
25 1 287 1 252 1 
247 3 25 6 62 1 158 1 340 1 30 1 2 1 183 2 100 3 252 3 293 2 343 1 47 1 199 1 376 1 22 1 222 1 335 1 
25 12 287 1 256 1 340 1 30 1 2 2 100 6 245 1 293 1 343 1 199 2 317 1 222 1 247 2 62 2 158 1 267 1 183 2 252 6 274 1 45 1 357 1 330 1 22 2 335 2 
247 2 25 6 10 1 30 1 2 1 241 1 352 1 252 3 100 3 293 1 22 1 
247 2 25 3 129 1 10 1 63 1 158 1 340 1 30 1 241 1 252 1 100 2 183 2 293 1 343 1 375 1 46 1 222 1 
247 5 25 10 10 2 38 1 158 1 340 1 30 2 241 2 2 2 352 1 183 2 252 5 100 5 293 3 343 1 330 1 22 2 222 1 
247 1 25 2 158 1 340 1 30 1 2 1 183 2 252 2 343 1 330 1 199 1 222 1 
247 2 25 4 62 1 158 1 340 1 30 1 2 1 100 2 183 2 252 2 293 1 343 1 330 1 199 1 22 1 222 1 335 1 
247 2 25 3 10 1 63 1 158 3 340 3 30 1 241 1 100 2 183 6 252 1 293 1 343 3 375 1 142 1 330 1 222 3 
25 34 129 1 287 3 340 5 30 5 241 3 2 5 100 18 4 1 293 7 343 5 199 3 295 1 60 1 222 5 247 12 10 3 62 3 63 1 158 5 121 1 352 2 183 10 252 16 274 4 375 2 45 1 142 1 46 1 47 1 330 1 22 5 361 1 335 3 
25 8 287 1 129 1 340 1 2 1 241 1 100 4 245 1 293 2 343 1 222 1 247 2 10 1 158 1 352 1 183 2 252 4 274 1 45 1 330 1 46 1 22 1 361 1 
25 11 129 1 287 1 340 2 30 1 241 1 2 2 100 5 245 1 293 2 343 2 199 1 295 1 222 2 247 3 10 1 62 1 158 2 352 1 183 4 252 6 274 2 45 1 46 1 330 1 47 1 22 1 361 1 
25 19 129 1 256 1 287 1 340 3 30 1 241 1 2 3 100 10 245 1 293 3 343 3 199 2 317 1 222 3 247 4 10 1 62 2 158 3 267 1 352 1 183 6 252 9 274 1 45 1 375 1 357 1 46 1 47 1 330 1 22 3 361 1 335 2 
25 17 129 1 287 1 256 1 340 3 30 2 241 1 2 3 100 7 245 1 293 3 343 3 199 2 317 1 222 3 247 5 10 1 62 2 158 3 267 1 352 1 183 6 252 10 274 1 375 1 45 1 357 1 46 1 47 1 330 1 22 2 361 1 335 1 
25 8 287 1 129 1 340 1 2 1 241 1 100 4 245 1 293 2 343 1 222 1 247 2 10 1 158 1 352 1 183 2 252 4 274 1 45 1 330 1 46 1 22 1 361 1 
25 12 287 1 256 1 340 1 30 1 2 2 100 6 245 1 293 1 343 1 199 2 317 1 222 1 247 2 62 2 158 1 267 1 183 2 252 6 274 1 45 1 357 1 330 1 22 2 335 2 
25 18 129 1 256 1 287 1 340 4 30 2 241 1 2 3 100 8 245 1 293 3 343 4 317 1 199 2 222 4 247 5 10 1 62 2 158 4 267 1 352 1 183 8 252 10 274 1 45 1 375 2 357 1 46 1 47 1 330 1 22 2 361 1 335 1 
25 16 256 1 287 1 340 4 30 3 2 3 100 7 245 1 293 3 343 4 317 1 199 3 222 4 247 6 62 3 158 4 267 1 183 8 252 9 274 1 45 1 142 1 375 2 357 1 330 1 22 2 335 2 
247 6 25 7 129 1 10 3 30 3 241 3 2 1 352 1 100 4 252 3 293 3 46 2 22 1 
25 18 129 1 256 1 287 1 340 4 30 1 241 1 2 3 100 8 245 1 293 3 343 4 317 1 199 2 222 4 247 4 10 1 62 2 158 4 267 1 352 1 183 8 252 10 274 1 45 1 142 1 375 2 357 1 46 1 330 1 22 2 361 1 335 1 
114 1 88 1 288 1 131 1 292 1 297 1 364 1 
190 1 114 1 288 1 131 1 216 1 292 1 364 1 88 1 194 1 332 1 297 1 334 1 
231 1 354 1 263 1 89 1 326 1 104 1 53 1 58 1 234 1 345 1 224 1 
165 1 114 1 115 1 263 1 305 1 133 1 364 2 231 1 88 2 89 1 326 1 104 1 72 1 58 1 234 1 377 1 297 1 224 1 
165 1 315 1 133 1 364 2 104 2 103 1 58 1 57 1 106 1 297 2 224 1 321 1 114 1 115 2 263 1 305 1 231 1 88 2 355 1 72 1 326 3 234 1 377 2 
165 1 238 1 315 1 133 1 364 2 104 2 103 1 58 1 57 1 106 1 297 2 347 1 224 1 321 1 114 1 115 2 263 2 305 1 231 2 88 2 355 1 326 3 234 2 377 2 
213 1 315 1 3 1 244 1 6 1 104 1 58 1 57 1 197 2 106 1 154 1 347 1 224 1 115 1 263 3 160 2 17 1 231 3 89 1 184 1 326 4 234 3 23 1 
115 1 263 3 213 1 315 1 3 1 160 2 244 1 231 3 17 1 89 1 6 1 104 1 326 4 57 1 58 1 106 1 197 2 234 3 163 1 347 1 23 1 224 1 
231 1 263 1 58 1 234 1 233 1 224 1 
202 1 203 1 362 1 115 1 263 6 40 1 240 1 231 7 89 2 104 2 326 3 58 2 233 1 7 1 234 7 107 1 48 1 368 1 235 1 111 1 224 3 
286 1 340 2 241 1 2 1 100 3 293 2 343 2 104 1 58 1 296 1 297 1 348 1 247 2 302 1 115 1 114 2 10 1 305 1 351 2 158 2 352 1 252 3 72 1 22 1 361 1 165 1 25 6 129 1 133 1 364 2 33 2 370 1 222 2 224 1 263 1 37 1 183 4 231 1 88 2 326 1 186 1 234 1 46 1 48 1 49 1 282 1 377 1 
213 1 99 1 3 1 244 1 6 1 197 3 9 2 137 2 263 1 117 1 159 1 272 1 41 1 160 3 275 1 87 2 231 1 17 2 89 1 232 1 326 2 279 2 234 1 74 1 163 1 360 1 283 1 23 1 
115 1 263 2 40 1 231 2 6 1 104 1 326 2 58 1 233 1 234 2 187 1 48 1 224 2 
231 4 322 1 263 4 89 1 326 1 104 1 53 1 58 1 234 4 345 1 48 1 347 1 224 1 
115 1 263 2 372 1 122 1 231 2 278 1 104 1 326 1 57 1 58 1 7 1 234 2 111 1 224 2 
349 1 231 1 18 1 263 1 89 1 215 1 58 1 234 1 260 1 224 1 
362 1 263 2 240 1 231 2 208 1 104 1 326 1 58 1 234 2 48 1 224 1 
322 1 362 1 263 4 53 1 231 5 89 1 104 2 326 3 57 1 58 2 234 5 345 1 107 1 48 1 368 1 224 2 
322 1 362 1 263 4 53 1 231 5 89 1 104 2 326 3 57 1 58 2 234 5 345 1 107 1 48 1 281 1 224 2 
165 1 114 1 115 1 263 1 305 1 238 1 133 1 364 2 231 1 88 2 89 1 326 1 104 1 58 1 234 1 377 1 297 1 224 1 
115 1 263 1 40 1 231 1 104 1 326 1 57 1 58 1 7 1 234 1 235 1 111 1 224 2 
166 1 214 1 85 1 192 1 364 1 171 1 207 1 88 1 297 1 
43 1 207 1 339 1 
166 1 114 1 171 1 207 1 323 1 
321 1 166 2 236 1 114 1 213 1 323 2 339 1 228 1 160 2 244 1 43 1 207 1 171 2 355 1 103 1 102 1 197 2 23 1 283 1 
225 1 354 1 90 1 59 1 
225 1 308 1 151 1 90 1 59 1 42 1 36 1 
11 1 269 1 42 1 
120 1 42 1 69 1 149 1 308 1 151 1 90 1 59 1 109 1 36 1 
225 1 76 1 308 1 151 1 90 1 59 1 273 1 42 2 36 2 
225 1 349 1 285 1 61 1 215 1 120 1 140 1 42 1 308 1 151 1 36 1 
225 1 308 1 151 1 90 1 120 1 42 1 36 1 
308 1 151 1 90 2 120 1 59 1 42 1 36 1 
225 1 308 2 151 2 90 1 329 1 120 1 80 1 42 2 31 1 36 2 
225 2 76 2 120 1 140 1 42 3 325 1 308 1 151 1 136 1 253 1 90 1 59 1 36 3 
225 1 349 1 76 1 61 1 215 2 120 1 42 2 308 1 18 1 151 1 90 1 59 1 174 1 333 1 36 2 
225 2 76 2 306 1 120 1 140 1 42 4 273 1 308 2 151 2 136 1 90 1 59 1 36 4 
225 1 308 1 151 1 90 1 120 1 59 1 42 1 36 1 
225 2 76 2 140 1 69 1 42 3 149 1 308 1 151 1 136 1 90 2 59 2 109 2 36 3 
225 1 76 1 308 1 151 1 90 1 120 1 59 1 251 1 148 1 42 2 36 2 223 1 
120 1 42 1 69 1 308 1 151 1 328 1 90 1 59 1 109 1 36 1 
225 2 309 1 290 2 66 1 
308 1 151 1 120 1 229 1 42 1 36 1 
225 1 76 1 308 1 151 1 253 1 90 1 120 1 59 1 42 2 36 2 
112 1 
225 1 308 1 151 1 90 1 120 1 59 1 42 1 36 1 
225 1 76 1 120 1 42 3 373 1 308 1 151 1 253 1 90 1 59 1 36 3 
225 1 136 1 140 1 109 1 
225 1 90 1 

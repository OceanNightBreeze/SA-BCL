#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 65 106 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 65 106 232 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 65 106 232 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 65 106 232 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
248 1 360 2 265 1 361 2 45 3 98 2 341 1 128 1 227 1 27 4 4 1 171 2 298 2 344 1 68 2 51 2 102 1 329 1 182 9 186 1 79 9 57 1 58 1 307 1 41 1 244 6 142 1 314 5 
248 1 360 2 265 1 361 2 45 3 98 2 341 1 128 1 227 1 27 4 4 1 298 2 171 2 344 1 68 2 51 2 102 1 329 1 182 9 186 1 79 9 57 1 58 1 307 1 41 1 244 6 142 1 314 5 
248 1 360 2 265 1 361 2 45 4 98 2 341 1 128 1 227 1 27 5 4 1 298 2 171 2 344 1 68 2 51 2 102 1 329 1 182 10 186 1 79 10 57 1 58 1 307 1 41 1 244 7 142 1 314 6 
360 2 265 1 361 2 45 2 98 2 341 1 128 1 227 1 27 3 4 1 298 2 171 2 344 1 68 2 51 1 102 1 329 1 182 7 186 1 79 7 57 1 58 1 307 1 41 1 244 4 142 1 314 4 
248 1 360 1 361 1 45 1 182 4 98 1 79 4 186 1 341 1 128 1 227 1 27 2 298 1 68 1 51 2 244 3 329 1 314 3 
360 1 361 1 182 2 257 1 57 1 79 2 98 1 341 1 227 1 365 1 171 1 344 1 68 1 261 1 314 1 329 1 
360 2 361 2 182 3 45 1 79 3 58 1 341 1 227 1 27 1 171 1 244 1 329 1 314 2 
317 1 248 1 360 2 361 2 45 3 98 1 341 1 128 1 227 1 27 4 320 1 4 1 171 1 298 1 68 1 51 2 102 1 329 1 182 9 58 1 79 9 186 1 244 7 314 5 
317 1 248 1 360 2 361 2 45 3 98 1 341 1 128 1 227 1 27 4 320 1 4 1 171 1 298 1 68 1 51 2 102 1 329 1 182 9 58 1 79 9 186 1 244 7 314 5 
218 1 166 1 46 1 
164 1 137 2 46 1 
323 2 266 2 2 2 174 2 151 2 255 1 234 1 280 2 
94 1 121 1 266 2 221 2 2 2 124 2 295 1 146 1 270 1 323 2 200 1 325 1 272 1 131 1 369 1 174 3 150 1 151 3 32 1 255 1 70 2 234 1 73 1 178 1 277 1 75 1 188 1 237 1 280 2 334 1 336 1 38 1 113 2 90 2 161 1 59 1 312 1 
323 1 220 1 266 1 42 1 2 1 174 1 151 1 234 1 280 1 16 1 
104 1 218 1 249 1 46 1 47 1 363 1 280 1 281 1 379 1 42 1 69 1 174 1 151 1 262 1 
104 2 218 1 249 2 266 1 2 1 46 1 363 1 280 1 281 1 379 1 323 1 42 1 174 1 151 1 262 1 
104 1 249 1 77 1 7 1 71 1 
104 2 218 1 179 1 249 2 145 1 7 1 46 1 71 1 
104 1 249 1 71 1 
104 1 249 1 220 1 266 1 2 1 100 1 16 1 280 1 323 1 42 1 7 1 174 1 151 1 234 1 
46 1 
104 2 218 1 179 1 249 2 52 1 7 1 46 1 71 1 
104 5 218 1 179 1 249 5 276 2 183 1 291 1 62 1 223 1 46 1 197 1 296 1 297 1 85 2 283 2 7 2 9 1 327 1 71 2 
166 1 255 1 
266 1 2 1 280 2 323 1 368 1 174 2 151 2 201 1 255 2 
169 1 194 1 139 1 
94 1 221 1 75 1 124 1 237 1 295 1 334 1 159 1 90 1 131 1 272 1 369 1 174 1 59 1 151 1 255 1 
256 1 94 1 266 1 221 1 75 1 2 1 124 1 237 1 334 1 295 1 280 1 139 1 90 1 272 1 131 1 233 1 369 1 59 1 174 2 151 2 
323 1 266 3 2 3 233 1 174 3 151 3 255 1 280 3 
220 1 266 1 42 1 2 1 174 1 151 1 280 1 
323 1 368 1 266 1 42 1 2 1 174 1 151 1 201 1 280 1 
94 1 249 1 121 1 266 3 221 1 2 3 124 1 363 1 295 1 28 1 270 1 323 2 325 1 272 1 131 1 233 1 369 1 174 4 150 1 201 1 151 4 255 1 70 2 234 1 256 1 104 1 178 1 277 1 75 1 188 1 237 1 334 1 280 3 281 1 336 1 379 1 113 1 90 1 42 1 161 1 59 1 312 1 263 1 262 1 
266 1 2 1 69 1 233 1 174 2 151 2 255 1 274 1 280 2 
104 1 256 1 249 1 266 3 2 3 155 1 46 1 363 1 280 3 281 1 379 1 323 1 42 1 233 2 174 3 201 1 262 1 151 3 263 1 
266 2 2 2 280 2 139 1 169 1 323 1 233 1 174 2 201 1 151 2 
94 1 221 1 75 1 124 1 237 1 295 1 334 1 90 1 131 1 272 1 369 1 174 1 59 1 151 1 255 1 
120 1 221 1 75 1 124 1 237 1 374 1 295 1 334 1 90 1 272 1 369 1 174 1 59 1 151 1 255 1 
121 1 318 1 194 2 267 1 195 1 64 1 169 2 325 2 31 1 150 1 32 2 370 1 70 2 302 1 11 1 178 1 372 1 188 1 110 1 139 2 113 4 310 1 161 1 312 1 
379 1 350 1 266 1 42 1 2 1 174 1 151 1 280 1 
256 1 266 4 2 4 280 5 323 1 69 1 233 2 174 5 151 5 201 1 255 1 274 1 348 1 301 1 
350 1 220 1 266 2 42 1 2 2 174 2 151 2 280 2 
366 1 216 1 
366 1 216 1 
162 1 163 1 
162 1 163 1 
162 1 163 1 
366 1 216 1 294 1 
366 1 216 1 294 1 
366 1 12 1 216 1 
366 2 89 1 162 1 342 1 216 2 163 1 
366 1 216 1 294 1 
366 1 101 1 216 1 
366 1 101 1 216 1 
366 1 101 1 216 1 
104 2 204 1 331 1 249 2 14 1 63 1 362 2 319 2 25 2 342 1 46 1 129 3 366 2 241 1 356 1 175 2 245 1 216 2 202 2 
104 1 204 1 12 1 249 1 266 2 76 1 78 1 165 1 2 2 362 1 319 1 211 1 129 1 280 2 366 1 140 1 174 2 175 1 151 2 216 1 255 1 132 1 202 1 103 1 
298 1 68 1 98 1 
365 1 68 1 98 1 
298 2 365 1 219 1 56 1 98 3 358 1 
298 1 365 1 56 1 98 2 141 1 358 1 
298 1 365 1 56 1 98 2 358 2 
144 1 164 1 218 1 249 5 264 1 96 2 95 1 291 1 195 1 64 1 167 1 46 2 197 3 296 2 199 2 300 1 7 4 71 1 103 1 104 5 11 1 276 1 179 1 78 1 137 3 211 1 110 1 378 1 85 1 283 1 160 2 22 1 
144 1 315 1 218 1 264 1 249 5 220 1 266 1 2 1 96 1 291 1 251 1 167 1 46 1 197 1 100 1 296 2 323 1 199 1 300 1 7 4 174 1 151 1 234 1 71 3 104 5 11 1 276 1 179 1 207 2 78 1 77 2 137 1 110 1 16 1 280 1 85 1 283 1 42 1 
144 1 218 1 164 2 249 3 264 1 95 1 96 2 195 1 64 1 46 3 197 3 296 2 297 1 199 2 300 1 7 2 104 3 11 1 276 1 78 1 137 4 110 1 378 1 85 1 283 1 160 1 
144 2 218 1 164 3 249 4 264 1 96 4 95 1 195 2 64 2 46 4 197 5 296 4 297 1 199 4 300 1 7 3 104 4 11 2 276 1 78 2 137 7 109 1 110 2 213 1 378 1 85 1 283 1 214 1 160 2 
346 1 166 1 237 1 
215 1 237 1 
190 1 
272 1 237 1 
75 1 240 1 272 1 346 2 340 1 237 3 
75 1 272 1 237 1 
173 1 237 1 
11 1 24 1 318 2 1 1 187 1 81 1 83 1 195 1 335 1 322 1 271 1 113 7 325 3 31 3 357 1 54 2 32 4 
11 1 24 1 318 2 1 1 187 1 81 1 83 1 195 1 335 1 322 1 271 1 113 7 325 3 31 3 357 1 54 2 32 4 
11 1 24 1 318 2 1 1 187 1 81 1 83 1 195 1 335 1 229 1 322 1 271 1 113 7 325 3 31 3 357 1 54 2 32 4 
144 3 93 1 24 1 121 1 1 1 318 5 289 1 3 1 64 3 195 4 364 4 322 2 271 1 325 15 31 10 150 1 32 16 54 3 70 2 10 3 11 4 258 1 81 1 187 2 83 2 188 1 110 3 335 5 355 1 113 31 357 2 312 1 117 1 313 1 
43 1 61 1 121 2 318 3 1 1 195 1 322 1 271 1 325 4 31 4 150 2 32 5 54 2 70 4 11 1 187 1 81 1 188 2 83 1 335 1 113 9 357 1 312 2 117 1 
316 1 360 1 219 1 221 1 361 1 123 1 124 1 98 2 341 1 222 1 99 1 227 1 295 1 298 1 171 1 365 1 50 1 68 1 329 1 180 1 305 1 306 1 182 2 79 2 112 1 90 1 244 1 191 1 59 1 314 1 
316 1 219 1 360 1 221 1 361 1 123 1 124 1 98 2 292 1 222 1 99 1 227 1 295 1 147 1 298 1 171 1 365 1 50 1 68 1 329 1 180 1 182 3 79 3 84 1 112 1 90 1 191 1 244 2 59 1 314 1 
316 1 219 1 221 1 123 1 124 1 98 2 222 1 99 1 227 1 295 1 147 1 171 1 365 1 298 1 68 1 329 1 180 1 182 2 79 2 84 1 90 1 191 1 244 2 59 1 314 1 
316 2 360 1 221 1 361 1 124 1 292 1 99 2 226 1 295 1 252 1 171 2 272 1 369 1 273 1 275 1 182 1 278 1 79 1 237 1 40 1 90 1 59 1 191 2 
316 1 360 1 219 1 221 1 361 1 123 1 124 1 98 2 341 1 222 1 99 1 295 1 147 1 298 1 171 1 365 1 50 1 68 1 180 1 306 1 182 1 79 1 112 1 90 1 191 1 59 1 
250 1 
249 5 291 1 46 2 47 1 5 1 197 2 198 1 295 1 296 2 253 2 300 1 151 1 347 4 104 5 208 1 156 2 59 1 262 1 311 1 217 2 218 1 164 2 359 1 221 2 124 2 363 1 172 1 29 1 230 1 67 2 69 1 272 1 273 1 369 2 176 1 174 1 275 1 71 6 179 3 276 1 137 2 36 1 237 1 280 1 281 1 85 1 379 1 189 2 283 1 90 2 338 2 42 1 92 1 243 2 287 1 
249 3 47 1 363 1 230 1 69 1 52 1 174 1 176 1 151 1 347 2 71 2 104 3 179 1 208 1 36 1 156 1 280 1 281 1 379 1 42 1 262 1 287 1 
218 1 249 3 47 1 46 1 363 1 230 1 67 1 69 1 52 1 174 1 176 1 151 1 347 3 71 1 104 3 179 1 208 1 36 1 280 1 281 1 379 1 42 1 262 1 287 1 
218 1 249 3 47 1 46 1 363 1 230 1 67 1 253 1 69 1 52 1 174 1 176 1 151 1 347 3 71 2 104 3 179 1 208 1 36 1 156 1 280 1 281 1 379 1 42 1 262 1 287 1 
249 5 291 1 47 1 46 5 197 1 5 1 296 1 48 1 253 4 52 1 347 6 151 1 104 5 208 1 156 4 262 1 118 1 217 2 218 5 359 1 164 2 363 1 230 1 67 4 30 1 69 1 174 1 176 1 71 7 179 3 276 1 36 1 37 1 281 1 280 1 376 1 379 1 85 1 283 1 189 2 338 2 42 1 243 2 287 1 
249 4 291 1 47 1 46 2 197 1 5 1 296 1 253 2 347 4 151 1 104 4 208 1 156 2 262 1 217 2 359 1 164 2 218 1 363 1 230 1 172 1 67 2 69 1 174 1 176 1 71 4 276 1 179 2 137 2 36 1 281 1 280 1 379 1 85 1 283 1 189 2 338 2 42 1 243 2 287 1 
218 1 164 2 359 1 249 4 291 1 46 1 47 1 363 1 5 1 197 1 296 1 230 1 67 2 253 2 69 1 174 1 176 1 151 1 347 4 71 4 104 4 179 2 276 1 208 1 156 2 36 1 37 1 280 1 281 1 376 1 379 1 85 1 189 2 283 1 338 2 42 1 243 2 262 1 118 1 217 2 287 1 
218 1 164 2 359 1 249 4 291 1 46 1 47 1 363 1 5 1 197 1 296 1 230 1 67 2 253 2 69 1 174 1 176 1 151 1 347 4 71 4 104 4 179 2 276 1 208 1 156 2 36 1 37 1 280 1 281 1 376 1 379 1 85 1 189 2 283 1 338 2 42 1 243 2 262 1 118 1 217 2 287 1 
218 1 249 4 291 1 293 1 46 1 47 1 363 1 5 1 197 1 296 1 230 1 67 2 253 2 69 1 174 1 176 1 151 1 347 4 55 1 71 4 72 2 104 4 179 2 276 1 208 1 137 2 156 2 36 1 37 1 279 2 280 1 281 1 86 1 379 1 85 1 189 2 283 1 338 2 42 1 262 1 287 1 
218 1 164 2 359 1 249 4 291 1 46 1 47 1 363 1 5 1 197 1 296 1 48 1 230 1 67 3 253 3 69 1 174 1 176 1 151 1 347 5 71 5 104 4 179 2 276 1 208 1 36 1 156 3 37 1 280 1 281 1 376 1 85 1 379 1 189 2 283 1 338 2 42 1 243 2 262 1 118 1 217 2 287 1 
218 1 164 2 359 1 249 4 291 1 46 1 47 1 363 1 5 1 197 1 296 1 48 1 230 1 67 3 253 3 69 1 174 1 176 1 151 1 347 5 71 5 104 4 179 2 276 1 208 1 36 1 156 3 37 1 280 1 281 1 376 1 85 1 379 1 189 2 283 1 338 2 42 1 243 2 262 1 118 1 217 2 287 1 
249 4 291 1 47 1 46 1 197 1 5 1 296 1 253 2 347 4 151 1 104 4 208 1 156 2 262 1 218 1 363 1 230 1 172 1 67 2 69 1 174 1 176 1 72 2 71 4 276 1 179 2 137 2 36 1 279 2 281 1 280 1 86 1 379 1 85 1 283 1 189 2 338 2 42 1 287 1 
11 1 178 1 121 1 318 2 1 1 194 1 166 1 81 1 267 1 188 1 195 1 139 1 169 1 322 1 271 1 113 6 325 3 31 2 161 1 357 1 150 1 312 1 54 1 255 2 32 3 70 2 
144 2 121 2 318 1 289 1 126 1 194 11 64 1 195 1 364 3 168 1 169 4 200 1 31 2 325 6 150 2 255 1 32 8 70 4 10 3 203 1 11 2 178 1 258 1 35 1 188 2 335 1 110 2 139 11 336 1 113 14 161 2 312 2 60 1 
94 1 121 1 221 1 266 1 2 1 124 1 295 1 169 1 6 1 200 1 325 1 272 1 131 1 369 1 233 1 174 2 150 1 151 2 255 1 32 1 70 2 256 1 178 1 134 1 75 1 154 1 188 1 237 1 334 1 280 1 336 1 90 1 159 1 113 2 161 1 59 1 312 1 60 1 
144 2 94 2 1 1 2 1 194 7 195 3 295 2 147 1 148 1 200 1 254 2 151 3 150 3 54 1 255 2 256 1 11 3 209 1 110 2 113 20 114 2 161 3 357 1 59 2 312 3 60 1 121 3 318 4 221 3 266 1 124 3 64 2 169 7 130 1 322 1 271 1 325 10 31 8 131 2 272 2 369 1 233 1 174 3 32 10 70 6 371 2 178 3 277 2 75 2 81 1 188 3 237 2 280 1 334 2 335 4 139 7 336 1 90 3 242 2 
121 2 122 1 266 1 221 7 2 1 124 8 267 1 295 2 147 1 146 2 200 1 325 1 272 2 233 1 369 2 273 1 174 1 326 1 151 1 150 2 32 1 70 4 275 1 178 2 305 1 188 2 237 3 280 1 238 1 336 1 88 1 337 1 90 8 113 2 161 2 59 2 312 2 143 1 246 1 
144 1 121 1 318 1 266 1 2 1 194 1 64 1 195 1 169 1 323 1 31 1 325 2 174 1 201 1 150 1 151 1 32 1 70 2 11 1 178 1 135 1 188 1 280 1 110 1 139 1 113 3 161 1 312 1 60 1 
11 1 178 1 121 1 194 1 267 1 188 1 335 1 110 1 139 1 169 1 113 2 31 1 161 1 150 1 312 1 32 2 70 2 302 1 
178 1 121 1 318 1 194 1 267 1 188 1 64 1 195 1 139 1 169 1 113 2 31 1 161 1 325 2 150 1 312 1 70 2 370 1 
144 1 121 1 318 1 194 2 267 1 64 1 195 1 169 2 31 2 325 2 150 1 32 2 70 2 11 1 178 1 188 1 110 1 335 1 139 2 113 4 161 1 312 1 
11 1 178 1 121 1 194 1 188 1 335 1 110 1 139 1 169 1 113 2 31 1 161 1 326 1 150 1 312 1 32 2 70 2 302 1 
178 1 121 1 318 1 194 1 188 1 64 1 195 1 139 1 169 1 113 2 31 1 161 1 325 2 326 1 150 1 312 1 70 2 370 1 
144 1 121 1 318 1 194 2 64 1 195 1 169 2 31 2 325 2 326 1 150 1 32 2 70 2 11 1 178 1 188 1 110 1 335 1 139 2 113 4 161 1 312 1 
144 1 121 1 318 1 194 2 64 1 195 1 169 2 31 2 325 2 150 1 32 2 70 2 11 1 178 1 188 1 110 1 335 1 139 2 113 4 161 1 312 1 
94 1 121 1 221 1 124 1 295 1 200 1 325 1 272 1 131 1 369 1 174 1 151 1 150 1 32 1 255 1 70 2 178 1 277 1 75 1 188 1 237 1 334 1 336 1 113 2 90 1 161 1 59 1 312 1 
120 1 121 1 221 1 124 1 295 1 200 1 325 1 272 1 369 1 174 1 151 1 150 1 32 1 255 1 70 2 349 1 178 1 75 1 188 1 237 1 334 1 374 1 336 1 113 2 90 1 161 1 59 1 312 1 
144 1 121 1 318 1 194 2 64 1 195 1 169 2 31 2 325 2 150 1 32 2 70 2 11 1 178 1 188 1 110 1 335 1 139 2 113 4 161 1 312 1 60 1 
144 1 94 1 121 1 318 1 221 1 124 1 194 2 195 1 64 1 295 1 169 2 325 2 31 2 131 1 254 1 272 1 174 1 151 1 150 1 32 2 70 2 11 1 178 1 277 1 305 1 75 1 188 1 237 1 335 1 110 1 334 1 139 2 113 4 90 1 161 1 59 1 312 1 
144 1 121 1 266 1 2 1 194 1 195 1 64 1 169 1 323 1 49 1 325 1 31 1 174 1 201 1 150 1 151 1 32 2 70 2 11 1 178 1 188 1 335 1 280 1 110 1 139 1 113 3 161 1 312 1 60 1 
144 3 61 1 121 2 318 3 289 1 64 3 195 3 364 2 232 1 324 1 325 10 31 6 150 2 32 9 70 4 10 1 11 3 304 1 106 1 210 1 258 1 34 1 82 1 188 2 110 3 335 3 91 2 113 19 115 2 312 2 
61 1 121 1 106 2 258 1 34 1 188 1 364 1 65 1 232 1 113 6 324 2 325 3 115 2 150 1 312 1 32 3 10 1 70 2 
144 2 61 1 121 2 318 1 289 1 64 2 195 2 364 3 65 1 232 1 324 2 325 10 31 3 150 2 32 9 70 4 10 2 11 2 303 1 304 1 106 1 210 1 258 2 34 1 188 2 110 2 335 2 91 1 113 19 115 3 312 2 
144 2 61 1 121 2 318 2 289 1 64 2 195 2 364 3 65 1 232 1 324 2 325 10 31 4 150 2 32 9 70 4 10 2 11 2 303 1 304 1 106 1 210 1 258 2 34 1 188 2 110 2 335 2 91 1 113 19 115 3 312 2 
144 2 61 1 121 1 1 1 318 3 289 1 64 2 195 3 364 2 65 1 322 1 271 1 232 1 324 1 325 10 31 5 150 1 54 1 32 11 70 2 10 2 11 3 106 1 35 1 258 1 34 1 81 1 188 1 110 2 335 2 113 21 115 2 357 1 312 1 
331 1 366 1 63 1 362 1 319 1 342 1 224 1 175 1 216 1 202 1 
12 1 132 1 
260 1 366 1 125 1 362 1 319 1 175 1 216 1 268 1 202 1 
104 1 204 1 331 1 249 1 14 1 63 1 362 1 319 1 25 1 342 1 46 1 129 2 366 1 241 1 356 1 175 1 216 1 202 1 
104 1 204 1 331 1 249 1 14 1 63 1 362 1 319 1 25 1 342 1 46 1 129 2 366 1 241 1 356 1 175 1 216 1 202 1 
104 1 204 1 331 1 249 1 14 1 63 1 362 1 319 1 25 1 342 1 46 1 129 2 366 1 241 1 356 1 175 1 216 1 202 1 
89 1 286 1 294 1 
89 1 286 1 294 1 
119 1 101 1 
119 1 89 1 101 1 
140 1 76 1 
249 1 266 2 165 1 2 2 362 1 319 1 25 1 129 1 366 1 7 1 174 2 175 1 151 2 255 1 202 1 132 1 103 1 104 1 12 1 14 1 78 1 76 1 211 1 280 2 140 1 192 1 216 1 
286 1 294 1 
119 1 89 1 101 1 
121 1 122 1 221 2 124 2 196 1 295 1 146 2 200 1 325 1 272 1 53 1 174 2 151 2 150 1 32 1 70 2 133 1 178 1 188 1 237 1 308 1 280 2 336 1 88 1 90 2 113 2 161 1 59 1 312 1 21 1 60 1 
330 1 180 1 219 1 221 2 305 1 123 1 124 2 98 2 99 1 295 1 147 1 17 1 321 1 298 1 365 1 90 2 50 1 68 1 59 1 
180 1 219 1 221 1 123 1 124 1 98 2 136 1 99 1 295 1 147 1 321 1 298 1 365 1 90 1 50 1 68 1 59 1 
221 1 124 1 99 1 237 1 295 1 17 1 252 1 90 1 272 1 285 1 369 1 273 1 59 1 275 1 
330 1 180 1 219 1 221 1 123 1 124 1 98 2 99 1 295 1 147 1 17 1 321 1 298 1 365 1 90 1 50 1 68 1 59 1 
284 1 
218 1 223 1 166 1 327 1 46 1 197 1 296 1 
164 1 359 1 218 1 249 1 291 1 46 2 197 1 296 1 71 1 104 1 276 1 179 1 137 1 85 1 283 1 243 1 217 1 
144 2 249 5 290 1 291 4 96 6 97 2 46 8 195 2 197 9 295 3 296 8 299 2 199 6 149 2 300 2 346 2 152 2 104 5 11 2 351 2 305 1 157 1 158 1 110 2 259 2 309 2 114 2 215 3 59 4 262 2 218 2 164 6 221 3 124 3 223 1 64 2 173 2 272 3 369 1 327 1 71 5 276 4 179 3 75 3 137 12 237 10 85 4 87 2 283 4 90 3 92 1 380 1 339 1 340 1 
144 2 164 3 44 1 218 2 249 1 96 5 291 2 46 5 64 2 195 2 197 8 364 1 296 5 199 5 300 1 149 2 10 1 71 1 104 1 11 2 351 1 179 1 276 2 333 1 107 1 80 1 137 6 258 1 110 2 39 1 85 2 283 2 92 1 193 1 247 1 
249 1 220 1 266 1 2 1 291 1 195 1 197 2 100 1 296 2 322 1 271 1 323 1 149 2 174 1 151 1 328 1 234 1 104 1 11 2 351 1 276 1 16 1 280 1 376 1 85 1 283 1 42 1 357 1 
218 1 276 1 291 1 223 1 46 1 197 1 296 1 85 1 283 1 327 1 
144 2 11 2 164 5 351 1 96 5 137 10 46 5 64 2 195 2 110 2 197 5 296 5 199 5 114 1 149 2 
104 1 218 1 249 1 179 1 46 1 71 1 
249 3 221 4 290 2 291 1 124 4 127 1 295 1 198 1 197 2 296 2 297 1 29 1 300 2 272 1 369 2 273 1 71 4 275 1 104 3 276 2 179 2 15 1 237 1 158 1 85 2 283 2 90 4 92 2 59 1 
94 1 121 1 221 1 266 2 2 2 124 1 295 1 270 1 323 2 325 1 131 1 272 1 369 1 174 3 150 1 151 3 255 1 70 2 234 1 178 1 277 1 75 1 188 1 237 1 280 2 334 1 336 1 113 1 90 1 161 1 59 1 312 1 
164 2 218 2 276 1 96 2 291 1 137 4 46 4 197 1 296 2 85 1 283 1 199 2 300 1 92 1 54 1 
74 1 319 1 202 1 
74 1 319 1 202 1 
282 1 140 1 63 1 319 1 202 1 
74 1 319 1 202 1 
332 1 319 1 202 1 
332 1 319 1 202 1 
332 1 319 1 202 1 
319 1 202 1 
366 1 216 1 
11 1 121 2 318 2 1 1 81 1 188 2 195 1 335 1 322 1 271 1 113 8 325 4 31 3 357 1 150 2 312 2 54 1 32 4 70 4 117 1 
11 1 1 1 318 2 166 1 81 1 195 1 322 1 271 1 113 6 325 3 31 2 357 1 54 1 32 3 
144 1 11 1 121 1 318 1 188 1 195 1 64 1 110 1 335 1 113 4 325 2 31 2 150 1 312 1 32 2 33 1 70 2 
144 1 11 1 318 1 289 1 258 1 195 1 64 1 364 2 110 1 335 1 113 7 325 4 31 2 32 3 10 1 
144 2 288 1 121 2 1 1 318 5 289 1 64 2 195 3 364 2 168 1 322 2 271 1 31 9 325 12 150 2 54 1 32 11 10 2 70 4 11 3 35 1 81 1 188 2 335 4 110 2 113 23 357 2 312 2 117 2 
113 1 325 1 364 1 
113 1 32 1 10 1 
144 1 11 1 121 1 318 2 188 1 64 1 195 1 110 1 335 1 113 6 114 1 325 3 31 3 312 1 150 1 32 3 70 2 33 1 
144 2 61 1 44 1 121 1 318 1 64 2 195 2 364 1 325 6 31 2 150 1 32 6 10 1 70 2 11 2 333 1 107 1 258 1 188 1 335 1 110 2 39 1 113 12 312 1 193 1 
11 1 318 1 195 1 335 1 322 1 271 1 113 6 325 3 31 2 357 1 32 3 
288 1 121 1 318 1 1 1 81 1 188 1 335 1 322 1 113 3 31 2 325 2 357 1 150 1 312 1 32 1 117 1 70 2 
61 1 11 2 121 1 318 3 188 1 195 2 335 2 322 2 271 1 113 10 31 5 325 5 357 2 312 1 150 1 328 1 32 5 70 2 
61 1 11 1 121 1 188 1 110 1 335 1 113 2 31 1 150 1 312 1 32 2 70 2 
144 1 61 1 11 1 121 1 318 1 188 1 195 1 64 1 110 1 335 1 113 4 325 2 31 2 150 1 312 1 32 2 70 2 
288 1 61 1 304 1 121 3 318 1 188 3 335 1 322 1 113 3 325 2 31 2 357 1 150 3 312 3 32 1 117 1 70 6 
93 1 144 3 61 1 121 4 1 1 318 5 289 1 3 1 64 3 195 4 364 4 322 2 271 1 325 15 31 10 150 4 54 1 32 14 33 1 70 8 10 3 11 4 304 1 258 1 81 1 188 4 110 3 335 5 113 29 357 2 312 4 117 1 313 1 
61 1 121 1 1 1 318 2 195 1 364 1 322 1 271 1 325 4 31 2 150 1 54 1 32 4 10 1 70 2 11 1 333 1 258 1 81 1 188 1 113 8 357 1 312 1 
144 1 61 1 121 2 318 2 1 1 289 1 195 1 364 2 322 1 271 1 325 5 31 3 150 2 54 1 32 6 70 4 33 1 10 1 11 2 333 1 258 1 81 1 188 2 110 1 335 1 113 11 357 1 312 2 
144 2 61 1 44 1 121 3 1 1 318 3 64 2 195 3 364 1 322 1 271 1 325 10 31 4 150 3 54 1 32 9 33 1 10 1 70 6 11 3 333 1 107 1 258 1 81 1 188 3 335 1 110 2 39 1 113 19 357 1 312 3 117 1 193 1 
144 2 61 1 44 1 121 3 1 1 318 3 64 1 195 2 364 1 322 1 271 1 325 7 31 5 150 3 54 1 32 10 33 1 10 1 70 6 11 3 333 1 107 1 258 1 81 1 188 3 335 2 110 2 39 1 113 17 357 1 312 3 117 1 193 1 
61 1 121 1 1 1 318 2 195 1 364 1 322 1 271 1 325 4 31 2 150 1 54 1 32 4 10 1 70 2 11 1 333 1 258 1 81 1 188 1 113 8 357 1 312 1 
144 2 61 1 44 1 121 1 318 1 64 2 195 2 364 1 325 6 31 2 150 1 32 6 10 1 70 2 11 2 333 1 107 1 258 1 188 1 335 1 110 2 39 1 113 12 312 1 193 1 
144 2 61 1 44 1 121 4 1 1 318 3 64 1 195 2 364 1 322 1 271 1 325 8 31 5 150 4 54 1 32 10 33 1 70 8 10 1 11 3 333 1 107 1 258 1 81 1 188 4 335 2 110 2 39 1 113 18 357 1 312 4 117 2 193 1 
144 3 61 1 44 1 121 4 318 3 64 2 195 2 364 1 325 7 31 6 150 4 32 9 70 8 10 1 11 3 304 1 333 1 107 1 258 1 188 4 335 3 110 3 39 1 113 16 312 4 117 2 193 1 
11 1 1 2 318 3 81 1 195 1 335 3 322 3 271 1 113 7 325 4 31 6 357 3 32 3 
144 2 61 1 44 1 121 4 1 1 318 3 64 1 195 2 364 1 322 1 271 1 325 8 31 4 150 4 54 1 32 10 70 8 10 1 11 3 304 1 333 1 107 1 258 1 81 1 188 4 335 1 110 2 39 1 113 18 357 1 312 4 117 2 193 1 
69 1 26 1 174 1 151 1 255 1 274 1 280 1 
13 1 206 1 353 1 26 1 280 1 375 1 69 1 116 1 174 1 151 1 255 1 274 1 
90 1 221 1 124 1 272 1 273 1 369 1 59 1 166 1 237 1 295 1 275 1 
266 1 221 1 75 1 2 1 124 1 237 1 334 1 280 1 295 1 90 1 272 1 131 1 233 1 369 1 59 1 174 2 151 2 255 1 
266 1 221 1 75 2 2 2 290 1 124 1 97 1 237 3 281 1 334 1 280 2 295 1 379 1 173 1 90 1 42 1 272 2 131 1 233 1 59 1 174 2 151 2 255 1 
266 1 221 2 75 2 2 2 290 1 124 2 97 1 237 3 281 1 334 1 280 2 374 1 295 1 228 1 379 1 173 1 90 2 42 1 272 2 233 1 59 1 174 2 151 2 255 1 
104 2 218 1 249 2 221 3 75 1 290 1 124 3 185 1 97 1 46 1 237 4 295 1 228 1 173 1 20 1 90 3 272 1 369 1 59 1 215 1 346 1 262 1 71 1 
104 2 218 1 249 2 221 3 75 1 290 1 124 3 97 1 46 1 237 4 295 1 228 1 87 1 173 1 90 3 272 1 369 1 59 1 215 1 346 1 262 1 71 1 
90 1 337 1 221 1 124 1 59 1 295 1 
122 1 305 1 221 6 75 1 124 7 354 1 237 3 212 1 295 2 146 1 147 1 238 1 111 1 337 1 90 7 272 2 369 2 59 3 340 1 143 1 246 1 
94 1 121 2 318 2 1 1 266 1 221 1 2 1 124 1 194 1 195 1 196 1 295 1 169 1 322 1 271 1 325 3 31 2 272 1 254 1 131 1 233 1 174 2 150 2 151 2 54 1 255 2 32 3 70 4 11 1 178 2 277 1 305 1 75 1 81 1 188 2 237 1 334 1 280 1 139 1 113 6 90 1 161 2 357 1 242 1 59 1 312 2 60 1 
218 1 249 3 221 1 124 1 291 2 223 1 46 1 197 1 296 1 369 1 7 1 346 1 327 1 152 1 71 2 104 3 276 2 179 1 237 2 158 1 259 1 85 2 87 1 283 2 90 1 309 1 215 1 262 1 
305 1 221 2 75 1 124 2 237 2 295 1 337 1 90 2 339 1 272 1 346 1 59 2 340 1 
228 1 235 1 90 4 305 1 221 4 124 4 272 1 273 1 369 1 59 1 237 1 295 1 275 1 
221 2 290 1 75 1 124 2 237 1 212 1 295 1 111 1 130 1 239 1 18 1 90 2 272 1 59 2 
365 1 180 1 90 1 221 1 68 1 124 1 98 1 369 1 59 1 295 1 
133 1 305 1 221 2 122 1 124 2 237 1 295 1 147 1 90 2 272 1 59 1 
235 1 221 4 305 1 122 1 290 1 124 5 237 3 295 2 90 5 272 2 273 1 369 1 59 2 275 1 246 1 143 1 
235 1 221 4 305 1 122 1 290 1 124 5 237 3 295 2 90 5 272 2 273 1 369 1 345 1 59 2 275 1 143 1 
266 1 221 1 75 1 2 1 124 1 237 1 334 1 280 1 374 1 295 1 90 1 272 1 233 1 369 1 59 1 174 2 151 2 255 1 
221 1 290 1 75 1 124 1 354 1 237 1 212 1 295 1 111 1 90 1 272 1 59 2 340 1 
0 1 236 1 255 1 373 1 177 1 
104 2 218 1 249 2 0 1 236 2 225 1 46 1 373 2 363 1 281 1 269 1 379 1 19 1 42 1 7 1 262 1 263 1 255 1 177 2 
0 1 236 1 308 1 373 1 280 1 53 1 174 1 151 1 21 1 
19 1 0 1 225 1 
166 1 227 1 314 1 329 1 
360 1 361 1 182 1 79 1 227 1 314 1 329 1 
171 1 316 1 79 1 
205 1 352 1 360 1 361 1 182 3 79 3 57 2 341 1 227 1 66 1 314 1 329 1 
360 1 361 1 182 2 51 1 79 2 244 1 227 1 314 1 329 1 
360 1 361 1 182 1 79 1 186 1 98 1 341 1 27 1 298 1 68 1 314 1 
360 1 361 1 182 1 79 1 341 1 227 1 314 1 
360 1 361 1 182 1 79 1 341 1 227 2 329 1 
231 1 367 1 360 2 181 1 361 2 182 2 79 2 341 1 227 1 314 1 
360 1 361 1 182 3 45 1 79 3 341 1 227 1 4 1 27 1 244 2 102 1 329 1 314 2 
360 1 219 1 361 1 182 2 98 2 79 2 341 1 227 1 377 1 365 1 298 1 68 1 244 1 314 1 329 1 
248 1 360 2 361 2 182 4 45 1 79 4 341 1 227 1 27 1 51 1 244 2 329 1 314 2 
360 1 361 1 182 1 79 1 341 1 227 1 314 1 329 1 
205 1 23 1 352 1 360 1 361 1 182 4 45 1 57 1 79 4 227 2 27 1 244 2 329 2 314 3 
317 1 360 1 361 1 182 2 184 1 79 2 341 1 227 1 343 1 244 1 314 1 329 1 
105 1 205 2 352 1 360 1 361 1 182 3 79 3 57 2 341 1 227 1 314 1 329 1 
170 1 153 2 138 1 314 2 
360 1 361 1 182 1 79 1 108 1 341 1 
360 1 361 1 182 2 79 2 341 1 244 1 227 1 102 1 314 1 329 1 
8 1 
360 1 361 1 182 1 79 1 341 1 227 1 314 1 329 1 
360 1 361 1 182 3 57 1 79 3 341 1 244 1 227 1 102 1 314 1 329 1 
23 1 45 1 27 1 314 1 
227 1 314 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 45 (42,108,185) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 68 67 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 68 375 319 154 276 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 68 375 319 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 68 375 319 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 68 375 319 154 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 68 375 319 154 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (23,31) 35 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (23,31) 343 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (23,31) 343 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (23,31) 35 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 29 3 22 3 332 1 115 2 267 1 299 1 350 1 363 1 374 1 6 2 263 1 66 2 
22 9 332 1 221 2 115 5 287 1 150 1 267 1 268 2 206 1 363 4 290 1 6 2 248 2 50 1 159 1 295 6 29 9 187 1 56 1 33 1 299 1 350 2 166 1 278 2 374 1 18 1 263 3 66 2 
22 9 332 1 221 2 115 5 287 1 150 1 267 1 268 2 206 1 363 4 290 1 6 2 248 2 50 1 159 1 295 6 29 9 187 1 56 1 33 1 299 1 350 2 166 1 278 2 374 1 18 1 263 3 66 2 
22 10 332 1 221 2 115 6 287 1 150 1 267 1 268 2 206 1 363 5 290 1 6 2 248 2 50 1 159 1 295 7 29 10 187 1 56 1 33 1 299 1 350 2 166 1 278 2 374 1 18 1 263 4 66 2 
22 7 332 1 221 2 115 4 287 1 150 1 267 1 268 1 206 1 363 3 290 1 6 2 248 2 50 1 159 1 295 4 29 7 187 1 56 1 33 1 299 1 350 2 166 1 278 2 374 1 263 2 66 2 
295 3 29 4 22 4 332 1 115 3 221 1 299 1 268 2 278 1 363 2 374 1 18 1 290 1 6 1 248 1 263 1 50 1 66 1 
29 2 22 2 332 1 115 1 33 1 150 1 299 1 350 1 41 1 278 1 270 1 374 1 6 1 248 1 217 1 66 1 
22 9 332 1 115 5 221 1 267 1 268 2 363 4 290 1 6 2 248 1 50 1 295 7 29 9 187 1 56 1 299 1 350 1 371 1 278 1 374 1 18 1 263 3 109 1 66 2 
22 9 332 1 115 5 221 1 267 1 268 2 363 4 290 1 6 2 248 1 50 1 295 7 29 9 187 1 56 1 299 1 350 1 371 1 278 1 374 1 18 1 263 3 109 1 66 2 
174 1 113 1 117 1 116 1 336 1 119 1 302 1 60 1 46 1 195 1 365 1 89 1 357 1 51 1 
98 1 
237 1 136 1 98 1 113 1 194 1 195 2 117 2 337 1 
237 1 102 2 12 1 113 2 320 1 117 5 337 2 349 2 301 1 269 2 44 1 37 1 136 1 98 1 195 5 196 1 78 1 313 1 156 1 
136 1 98 1 347 1 
228 1 98 1 170 2 
302 2 174 2 365 2 336 2 116 1 357 2 252 1 119 2 
199 2 305 1 71 2 174 3 307 1 72 1 336 3 116 1 119 2 180 1 121 1 225 1 47 1 365 2 341 2 342 1 226 1 252 1 344 1 227 1 9 1 272 1 129 1 253 1 161 1 366 1 82 1 298 1 132 2 133 1 106 2 322 1 302 2 280 1 377 1 357 2 21 1 
302 1 60 1 174 1 365 1 89 1 336 1 116 1 357 1 51 1 119 1 
331 1 174 1 175 1 336 1 117 1 234 1 364 1 136 1 60 1 98 1 62 1 195 1 357 1 79 1 
331 1 174 1 117 2 336 1 119 1 302 1 234 1 136 1 60 1 98 1 62 1 365 1 195 2 357 1 79 1 
284 1 113 1 195 1 117 1 337 1 
237 1 136 1 98 1 113 1 292 1 195 2 117 2 337 1 
195 1 117 1 337 1 
174 2 336 2 152 1 232 1 119 1 302 1 365 1 357 2 252 2 
3 1 123 1 188 1 
199 1 366 1 174 1 307 1 13 1 133 1 336 1 106 1 322 1 180 1 341 1 377 1 252 1 227 1 21 1 272 1 
347 1 252 1 
199 1 366 1 174 2 307 1 11 1 133 1 336 2 106 1 322 1 119 1 3 1 302 1 180 1 341 1 377 1 357 1 227 1 265 1 21 1 272 1 
346 1 302 4 364 1 174 5 11 2 365 1 285 1 321 1 336 5 357 5 265 1 252 1 232 1 119 4 
302 2 297 1 60 1 174 2 89 1 336 2 357 2 119 2 
302 3 174 3 11 1 365 1 336 3 357 3 252 1 119 3 
302 1 60 1 174 1 89 1 336 1 357 1 119 1 
302 1 60 1 174 1 365 1 336 1 357 1 152 1 119 1 232 1 
305 1 199 1 71 1 331 1 174 4 307 1 72 1 336 4 117 1 116 1 119 3 180 1 121 1 225 1 122 1 47 1 365 2 341 1 79 1 252 1 344 1 227 1 272 1 129 1 161 1 366 1 11 1 298 1 132 2 133 1 322 1 106 1 232 1 302 3 234 1 303 1 60 1 62 1 195 1 280 1 377 1 357 3 265 1 21 1 
302 1 364 1 174 2 11 1 285 1 336 2 357 2 252 1 119 1 
331 1 174 3 11 2 117 1 336 3 300 1 232 1 119 3 302 3 234 1 303 1 60 1 98 1 62 1 365 1 195 1 357 3 79 1 265 1 
174 2 11 1 336 2 232 1 119 2 3 1 302 2 123 1 365 1 357 2 
199 1 366 1 174 1 307 1 133 1 336 1 106 1 322 1 180 1 341 1 377 1 252 1 227 1 272 1 21 1 
199 1 174 1 307 1 133 1 336 1 106 1 94 1 180 1 341 1 377 1 28 1 252 1 227 1 272 1 21 1 
238 1 71 4 72 1 3 2 4 1 121 1 123 2 342 2 293 1 344 1 129 1 161 1 298 1 132 2 165 1 57 1 188 2 261 1 19 1 280 2 326 1 20 1 172 1 329 1 
302 1 297 1 60 1 174 1 336 1 79 1 357 1 119 1 
185 1 45 1 277 1 42 1 
108 1 277 1 42 1 
277 1 42 1 
277 1 42 1 
185 1 45 1 277 1 42 1 
185 1 45 1 277 1 42 1 
185 1 45 1 
14 1 277 1 42 1 
14 1 277 1 42 1 
14 1 277 1 42 1 
327 1 277 1 42 1 
327 1 277 1 42 1 
327 1 277 1 42 1 
143 1 174 2 333 1 130 1 242 1 336 2 117 1 26 1 42 1 277 1 119 2 302 2 75 1 108 1 195 1 48 1 356 1 27 1 264 1 357 2 124 1 80 1 252 1 173 1 
143 2 23 1 130 3 164 1 367 2 243 1 242 1 117 2 36 1 42 2 277 2 98 1 75 2 195 2 312 1 124 2 80 2 184 1 110 1 
274 1 270 1 221 1 248 2 215 2 
278 1 221 1 248 1 
278 1 270 1 248 1 
274 1 270 1 373 1 221 2 248 3 215 1 
274 1 270 1 221 1 248 2 215 1 43 1 
237 1 333 1 114 2 113 4 204 1 117 5 337 1 26 1 269 1 207 2 98 2 224 1 27 1 78 1 156 2 228 1 102 1 54 1 348 1 12 3 57 1 84 2 349 1 134 1 167 1 136 1 261 1 170 3 19 1 195 5 218 1 329 1 
237 1 306 1 284 5 114 6 113 7 204 3 205 1 117 9 337 6 269 2 98 5 224 1 208 1 250 1 27 4 78 1 156 6 318 1 228 3 102 2 55 5 12 8 57 3 84 6 349 2 301 1 134 2 136 1 261 3 170 9 19 3 195 9 218 2 171 1 329 3 
113 2 114 2 204 1 117 3 269 1 207 1 98 3 27 1 156 2 228 2 102 1 348 1 12 3 57 1 349 1 84 2 301 1 134 1 167 1 136 1 261 1 170 4 195 3 19 1 218 1 329 1 
114 4 113 3 204 2 117 4 269 1 207 2 98 4 208 1 250 1 27 2 156 4 228 3 102 1 348 1 12 5 57 2 84 4 349 1 301 1 134 1 167 1 136 1 261 2 170 7 195 4 19 2 218 1 171 1 329 2 
317 1 
347 1 275 1 21 1 
149 1 21 1 
377 1 133 1 21 1 
147 1 21 1 
377 1 21 1 
275 2 231 1 377 1 133 1 93 1 21 3 
229 1 53 1 71 7 230 1 240 1 286 2 288 1 85 1 193 1 86 1 99 1 19 1 280 3 326 3 293 2 342 4 210 1 329 1 
200 3 71 31 240 2 24 1 286 3 204 3 25 1 73 1 95 4 121 1 97 1 99 1 342 16 293 5 251 1 344 1 210 5 229 1 53 1 161 1 230 2 298 1 132 2 369 1 57 3 85 1 261 3 193 2 86 2 19 4 280 15 326 10 38 1 329 4 
229 1 53 1 161 2 71 9 230 1 240 1 132 4 298 2 286 2 73 1 15 1 121 2 85 1 193 1 86 1 139 1 19 1 326 4 293 3 280 4 342 5 210 1 344 2 329 1 
229 1 53 1 71 7 230 1 240 1 286 2 85 1 193 1 86 1 99 1 19 1 280 3 326 3 293 2 342 4 210 1 329 1 
229 1 53 1 71 7 230 1 240 1 286 2 85 1 193 1 86 1 99 1 19 1 280 3 326 3 293 2 342 4 210 1 329 1 
199 1 22 1 201 2 307 1 244 1 2 2 180 1 341 1 6 1 77 2 272 1 273 1 29 1 160 1 106 1 350 2 352 1 323 1 279 1 377 1 66 1 282 1 21 1 
199 1 22 1 332 1 201 1 111 1 307 1 221 1 2 1 310 1 270 1 340 1 341 1 6 1 77 1 248 2 272 1 29 1 163 1 131 1 106 1 350 1 278 1 324 1 260 1 373 1 66 1 
199 1 22 2 332 1 201 1 307 1 115 1 221 1 2 1 310 1 270 1 340 1 341 1 6 1 77 1 248 2 272 1 295 1 29 2 163 1 131 1 106 1 299 1 350 1 278 1 324 1 260 1 374 1 373 1 216 1 66 1 
199 1 22 3 201 1 111 1 307 1 115 1 221 1 2 1 153 1 310 1 270 1 340 1 341 1 6 1 77 1 248 2 272 1 295 2 29 3 163 1 131 1 106 1 299 1 350 1 352 1 278 1 260 1 374 1 373 1 66 1 
199 1 22 2 201 1 111 1 307 1 115 1 221 1 2 1 153 1 310 1 270 1 340 1 341 1 77 1 248 2 272 1 295 2 29 2 106 1 299 1 350 1 278 1 260 1 374 1 373 1 
262 1 
237 1 199 2 331 1 0 1 92 1 336 1 337 2 100 1 341 2 49 1 156 2 157 1 102 1 12 2 105 2 106 2 349 1 60 1 169 1 62 1 64 1 218 1 357 1 67 1 68 1 21 1 174 1 307 1 175 1 117 3 177 1 269 1 178 1 180 2 364 1 311 1 78 1 79 1 272 1 234 1 279 1 195 3 377 1 282 1 198 1 
237 1 331 1 174 1 105 2 175 1 117 3 336 1 337 2 234 1 364 1 60 1 169 1 62 1 311 1 194 1 195 3 64 1 294 1 79 1 357 1 157 1 198 1 
237 1 331 1 174 1 105 3 175 1 117 3 336 1 337 1 234 1 364 1 136 1 247 1 60 1 98 1 169 1 62 1 311 1 194 1 195 3 64 1 79 1 357 1 157 1 198 1 
237 1 331 1 174 1 175 1 336 1 117 3 337 2 223 1 364 1 247 1 98 1 311 1 294 1 79 1 157 1 105 3 234 1 60 1 136 1 62 1 169 1 194 1 64 1 195 3 357 1 198 1 
237 1 331 1 174 1 92 1 175 1 117 3 336 1 337 3 177 1 269 1 223 2 339 1 154 1 364 1 311 1 294 2 49 1 78 1 79 1 156 1 157 1 102 1 319 1 12 1 105 2 276 1 349 1 234 1 60 1 169 1 62 1 375 1 64 1 194 1 195 3 357 1 68 1 198 1 
331 1 174 1 92 1 175 1 117 2 336 1 177 1 269 1 364 1 311 1 49 1 78 1 79 1 156 1 157 1 102 1 12 1 105 2 349 1 234 1 60 1 169 1 62 1 64 1 195 2 357 1 68 1 198 1 
331 1 174 1 92 1 175 1 336 1 117 2 177 1 269 1 339 1 364 1 311 1 49 1 78 1 79 1 156 1 157 1 102 1 319 1 12 1 105 2 349 1 234 1 60 1 62 1 169 1 375 1 64 1 195 2 357 1 68 1 198 1 
331 1 174 1 92 1 175 1 336 1 117 2 177 1 269 1 339 1 364 1 311 1 49 1 78 1 79 1 156 1 157 1 102 1 319 1 12 1 105 2 349 1 234 1 60 1 62 1 169 1 375 1 64 1 195 2 357 1 68 1 198 1 
237 2 331 1 174 1 145 1 92 2 175 1 335 2 336 1 117 4 337 4 269 1 223 2 364 1 247 2 98 1 311 1 294 2 49 2 78 1 79 1 156 1 157 1 52 1 102 1 162 2 12 1 105 4 213 1 349 1 234 1 136 1 60 1 170 2 62 1 169 1 375 1 64 1 195 4 357 1 68 1 198 1 
331 1 174 1 92 1 175 1 336 1 117 2 337 1 177 1 269 1 223 1 339 1 154 1 364 1 247 1 311 1 294 1 49 1 78 1 79 1 156 1 157 1 102 1 319 1 12 1 105 3 349 1 234 1 60 1 62 1 169 1 375 1 64 1 195 2 357 1 68 1 198 1 
331 1 174 1 92 1 175 1 336 1 117 2 337 1 177 1 269 1 223 1 339 1 154 1 364 1 247 1 311 1 294 1 49 1 78 1 79 1 156 1 157 1 102 1 319 1 12 1 105 3 349 1 234 1 60 1 62 1 169 1 375 1 64 1 195 2 357 1 68 1 198 1 
237 2 330 1 331 1 92 2 335 2 336 1 337 4 247 2 98 1 294 2 49 2 156 1 157 1 52 1 102 1 162 2 105 4 12 1 349 1 60 1 62 1 169 1 170 2 64 1 357 1 68 1 174 1 175 1 117 4 269 1 223 2 364 1 311 1 78 1 79 1 234 1 136 1 195 4 198 1 
39 1 199 8 71 2 174 1 111 1 307 2 112 1 72 2 336 1 119 1 246 1 180 2 121 2 225 1 341 7 342 1 226 2 344 2 345 1 272 2 9 1 129 2 161 2 11 1 298 2 132 4 106 8 302 1 279 1 216 1 138 1 376 1 280 1 377 2 141 1 357 1 20 1 282 1 21 3 
70 1 71 3 174 1 72 1 204 1 336 1 119 1 3 1 121 1 123 1 365 1 293 1 342 1 344 1 129 1 161 1 298 1 132 2 57 1 188 1 232 1 302 1 261 1 19 1 326 1 280 2 304 1 357 1 329 1 
71 6 72 1 286 1 3 1 121 1 123 1 293 2 342 3 344 1 252 2 129 1 229 1 53 1 161 1 347 1 298 1 132 2 188 1 85 1 86 1 193 1 19 1 326 2 280 3 20 1 329 1 
70 1 144 1 71 14 200 3 72 2 204 2 95 3 3 11 121 2 225 1 123 4 293 1 342 8 252 1 210 1 344 2 9 1 129 1 104 1 161 2 30 1 298 2 132 4 369 1 57 2 188 11 61 1 261 1 19 2 326 2 280 6 38 1 329 1 
70 1 199 1 71 2 174 2 307 1 72 1 336 2 119 1 180 1 182 1 121 1 225 1 341 1 123 1 342 1 252 1 227 1 344 1 272 1 9 1 296 1 129 1 161 1 366 1 11 1 13 1 133 1 132 2 298 1 322 1 106 1 351 1 302 1 377 1 280 1 357 1 265 1 21 1 
199 3 286 1 204 2 336 3 3 7 341 3 293 4 342 10 209 1 252 2 344 3 210 4 9 1 53 1 161 3 11 1 298 3 257 1 57 2 106 3 302 1 261 2 19 3 357 1 265 1 21 2 70 1 305 2 71 20 174 3 111 1 307 2 72 3 119 1 180 1 121 3 225 1 123 7 271 2 227 2 272 2 229 1 129 3 366 2 132 6 133 2 322 2 370 2 188 7 85 1 193 1 86 1 280 10 377 2 326 8 197 2 236 2 328 1 329 3 
129 1 161 1 71 2 72 1 132 2 298 1 57 1 188 1 3 1 121 1 123 1 19 1 326 1 342 2 210 1 344 1 20 1 172 1 
129 1 161 1 71 2 72 1 132 2 298 1 165 1 188 1 3 1 121 1 261 1 123 1 326 1 293 1 280 2 344 1 20 1 329 1 
71 4 72 1 204 1 3 2 121 1 123 2 342 2 293 1 344 1 210 1 129 1 161 1 298 1 132 2 57 1 188 2 261 1 19 1 326 2 280 2 20 1 329 1 
129 1 161 1 71 2 72 1 132 2 298 1 57 1 188 1 3 1 121 1 123 1 19 1 326 1 342 2 210 1 344 1 345 1 172 1 
129 1 161 1 71 2 72 1 132 2 298 1 165 1 188 1 3 1 121 1 261 1 123 1 326 1 293 1 280 2 344 1 345 1 329 1 
71 4 72 1 204 1 3 2 121 1 123 2 342 2 293 1 344 1 210 1 345 1 129 1 161 1 298 1 132 2 57 1 188 2 261 1 19 1 326 2 280 2 329 1 
71 4 72 1 204 1 3 2 121 1 123 2 342 2 293 1 344 1 210 1 129 1 161 1 298 1 132 2 57 1 188 2 261 1 19 1 326 2 280 2 329 1 
305 1 199 1 71 2 174 1 307 1 72 1 336 1 180 1 121 1 225 1 341 1 342 1 252 1 227 1 344 1 9 1 272 1 129 1 161 1 366 1 133 1 132 2 298 1 322 1 106 1 377 1 280 1 21 1 
199 1 71 2 174 1 307 1 72 1 336 1 94 1 180 1 121 1 225 1 341 1 342 1 28 1 252 1 227 1 344 1 9 1 272 1 129 1 161 1 214 1 133 1 132 2 298 1 106 1 377 1 280 1 21 1 
70 1 71 4 72 1 204 1 3 2 121 1 123 2 342 2 293 1 344 1 210 1 129 1 161 1 298 1 132 2 57 1 188 2 261 1 19 1 326 2 280 2 329 1 
305 1 199 1 71 4 174 1 307 1 72 1 204 1 336 1 3 2 121 1 123 2 341 1 293 1 342 2 210 1 227 1 344 1 272 1 129 1 161 1 366 1 133 1 132 2 298 1 57 1 322 1 106 1 188 2 370 1 261 1 216 1 19 1 280 2 326 2 377 1 329 1 21 1 
70 1 71 3 174 1 72 1 204 1 336 1 119 1 3 1 121 1 365 1 123 1 342 2 210 1 344 1 129 1 161 1 298 1 132 2 57 1 188 1 232 1 302 1 261 1 19 1 280 1 326 1 357 1 90 1 329 1 
71 19 200 1 146 1 204 3 95 2 245 1 121 2 96 1 76 1 293 3 342 9 249 1 344 2 210 3 10 2 161 2 298 2 132 4 369 1 57 3 59 2 235 1 261 3 139 1 19 3 280 10 326 6 378 1 38 1 329 3 
219 1 71 26 200 2 146 1 204 3 362 1 73 2 95 2 245 1 121 3 96 2 76 1 293 2 342 14 249 2 210 2 344 3 10 1 161 3 254 1 298 3 132 6 32 1 34 1 57 3 59 4 261 2 139 1 354 1 19 3 326 4 280 12 38 2 329 2 
200 3 146 1 204 4 286 1 95 4 245 1 96 2 342 20 293 4 249 1 210 4 344 3 161 3 53 1 10 1 254 1 298 3 57 4 59 4 261 4 354 1 19 5 219 1 71 41 362 1 73 1 121 3 76 1 229 1 128 1 132 6 369 1 32 1 34 1 235 1 85 1 86 1 193 1 139 1 326 8 280 21 38 3 329 5 
219 1 71 38 200 3 146 1 286 1 204 4 362 1 73 2 95 4 245 1 121 4 96 2 76 1 293 4 342 20 249 1 344 4 210 3 128 1 229 1 10 1 53 1 161 4 254 1 298 4 132 8 32 1 369 1 34 1 57 4 59 4 235 1 85 1 261 3 193 1 86 1 354 1 139 1 19 5 280 18 326 7 38 3 329 4 
219 1 71 52 200 4 146 1 286 1 204 7 362 1 73 1 95 4 245 1 121 2 96 1 76 1 293 7 342 27 249 1 344 2 210 7 229 1 10 1 53 1 161 2 254 1 298 2 132 4 32 1 369 2 34 1 57 7 59 4 61 2 85 1 261 7 193 1 86 1 354 1 139 1 19 8 280 25 326 14 38 2 329 8 
143 1 23 1 75 1 164 1 243 1 80 1 124 1 277 1 42 1 127 1 
108 1 356 1 
143 1 75 1 65 1 255 1 40 1 80 1 124 1 277 1 42 1 
14 1 343 1 
31 1 327 1 35 1 
143 1 23 1 130 2 164 1 367 1 243 1 242 1 117 1 42 1 277 1 98 1 75 1 195 1 312 1 124 1 80 1 184 1 110 1 
143 1 23 1 130 2 164 1 367 1 243 1 242 1 117 1 42 1 277 1 98 1 75 1 195 1 312 1 124 1 80 1 184 1 110 1 
143 1 23 1 130 2 164 1 367 1 243 1 242 1 117 1 42 1 277 1 98 1 75 1 195 1 312 1 124 1 80 1 184 1 110 1 
31 1 14 1 343 1 
31 1 14 1 343 1 
327 1 35 1 
31 1 327 1 35 1 
264 1 173 1 
143 1 174 2 333 1 113 1 308 1 336 2 117 1 26 1 42 1 119 2 75 1 48 1 27 1 80 1 124 1 252 1 130 1 367 1 277 1 302 2 195 1 108 1 356 1 264 1 357 2 110 1 173 1 
70 1 199 2 71 2 174 2 307 1 202 1 72 1 334 1 336 2 246 1 179 1 121 1 225 1 341 2 342 1 226 2 344 1 272 1 158 1 9 1 129 1 161 1 132 2 298 1 106 2 135 1 377 1 376 1 280 1 357 2 21 1 
160 1 199 1 307 1 203 1 106 1 2 1 222 1 180 1 279 1 341 1 377 1 282 1 272 1 21 1 
199 1 111 1 307 1 221 1 131 1 203 1 106 1 258 1 189 1 2 1 310 1 278 1 270 1 260 1 373 1 341 1 248 2 272 1 
199 2 307 1 111 1 221 1 131 1 203 1 106 2 258 1 189 1 2 1 310 1 278 1 270 1 260 1 373 1 216 1 341 2 248 2 272 1 
199 1 111 1 307 1 221 1 131 1 106 1 258 1 2 1 310 1 278 1 270 1 260 1 373 1 341 1 248 2 211 1 272 1 
315 1 
102 1 12 1 349 1 269 1 136 1 98 1 196 1 78 1 313 1 156 1 
228 5 114 5 12 5 204 2 57 2 338 1 84 5 170 10 98 5 261 2 19 2 197 1 183 2 156 5 329 2 
237 1 136 1 98 1 195 1 117 1 337 1 
237 2 199 4 0 1 307 1 117 3 337 4 269 2 178 1 289 1 180 2 5 2 341 4 100 2 78 1 156 2 272 1 102 2 186 1 12 2 106 4 349 2 301 1 279 1 325 1 195 3 377 1 218 2 282 1 21 1 
136 1 98 1 347 1 12 1 196 1 313 1 156 1 
102 1 12 1 78 1 177 1 349 1 156 1 269 1 
237 3 199 3 331 2 148 2 147 2 149 3 204 2 93 1 337 5 338 2 289 1 5 1 98 8 100 1 341 3 155 1 156 8 102 4 12 9 256 2 57 2 106 3 349 4 107 2 168 2 170 12 261 2 216 1 19 2 218 2 21 10 307 3 360 2 114 6 361 1 117 5 269 4 180 1 183 2 78 4 313 1 126 2 314 1 272 4 228 6 275 2 133 3 84 6 136 2 195 5 377 3 196 1 197 2 329 2 
219 1 237 1 200 1 114 5 204 2 117 1 338 1 337 1 362 1 95 1 269 2 309 1 98 5 100 1 183 2 78 2 156 5 212 1 228 3 102 2 254 1 12 8 32 1 57 2 84 5 349 2 136 2 170 6 261 2 354 1 195 1 19 2 218 1 38 1 329 2 
174 1 336 1 117 1 116 1 338 1 269 1 119 1 339 1 46 1 365 1 183 2 78 1 51 1 156 2 102 1 229 1 12 2 349 1 302 1 60 1 193 1 86 1 195 1 19 2 281 1 89 1 357 1 329 1 
199 1 305 1 71 1 174 3 307 1 72 1 336 3 116 1 119 2 180 1 121 1 225 1 47 1 341 1 365 2 252 1 344 1 227 1 272 1 129 1 161 1 366 1 298 1 132 2 133 1 106 1 322 1 302 2 280 1 377 1 357 2 21 1 
228 2 102 1 114 2 12 1 286 1 84 2 349 1 269 1 136 2 170 4 98 4 100 1 218 1 78 1 156 2 
75 1 83 1 243 1 264 1 80 1 
75 1 368 1 80 1 
75 1 368 1 80 1 
75 1 368 1 80 1 
192 1 75 1 80 1 
192 1 75 1 80 1 
192 1 75 1 80 1 
75 1 80 1 
277 1 42 1 
229 1 161 1 71 10 298 1 132 2 121 1 86 2 193 2 139 1 19 2 281 1 293 3 326 5 342 5 280 5 344 1 210 2 329 2 
121 1 161 1 71 2 139 1 19 1 326 1 342 2 298 1 132 2 57 1 210 1 344 1 
161 1 71 4 132 2 298 1 204 1 57 1 121 1 261 1 139 1 19 1 293 1 280 2 326 2 342 2 344 1 210 1 329 1 
161 3 71 3 132 6 298 3 73 1 235 1 121 3 86 1 193 1 139 1 280 2 293 1 326 2 342 1 101 1 344 3 210 1 
71 34 200 3 24 1 286 1 204 3 25 1 73 2 95 4 121 5 97 1 342 16 293 7 101 1 344 5 210 5 229 2 53 1 103 1 161 5 298 5 132 10 369 1 57 3 235 1 85 1 261 3 193 3 86 3 139 1 19 5 280 18 326 12 38 1 329 5 
229 1 53 1 161 1 71 8 200 1 254 1 132 2 298 1 286 1 95 1 121 1 85 1 193 1 86 1 139 1 19 1 326 2 293 2 342 4 280 4 38 1 344 1 329 1 
71 11 200 1 286 1 204 1 95 2 121 2 293 2 342 6 344 2 210 1 229 1 53 1 161 2 103 1 254 1 298 2 132 4 369 1 57 1 85 1 193 1 86 1 139 1 19 2 280 5 326 3 38 1 329 1 
219 1 200 1 71 19 286 1 204 2 362 1 73 1 95 1 121 3 342 9 293 3 210 1 344 3 229 1 53 1 103 1 161 3 254 1 298 3 132 6 32 1 57 2 85 1 261 2 193 1 86 1 139 1 354 1 19 3 280 10 326 4 38 1 329 3 
219 1 200 1 71 17 286 1 204 2 362 1 73 1 95 1 121 3 342 10 293 3 210 2 344 3 229 1 53 1 103 1 161 3 254 1 298 3 132 6 32 1 57 2 85 1 261 1 193 1 86 1 139 1 354 1 19 3 280 7 326 5 38 1 329 2 
229 1 53 1 161 1 71 8 200 1 254 1 132 2 298 1 286 1 95 1 121 1 85 1 193 1 86 1 139 1 19 1 326 2 293 2 342 4 280 4 38 1 344 1 329 1 
219 1 200 1 71 12 204 2 362 1 95 1 121 1 342 6 293 1 210 1 344 1 161 1 254 1 298 1 132 2 32 1 57 2 261 2 139 1 354 1 19 2 280 6 326 2 38 1 329 2 
219 1 71 18 200 1 286 1 204 2 362 1 73 2 95 1 121 4 342 10 293 3 210 2 344 4 229 1 53 1 103 1 161 4 254 1 298 4 132 8 32 1 57 2 85 1 261 1 193 1 86 1 139 1 354 1 19 3 280 8 326 5 38 1 329 2 
219 1 71 16 200 1 204 3 362 1 73 2 95 1 121 4 342 9 293 3 210 3 344 4 161 4 254 1 298 4 132 8 32 1 57 3 235 1 261 2 139 1 354 1 19 3 280 7 326 6 38 1 329 2 
229 1 53 2 71 7 85 1 86 3 193 3 19 1 280 4 293 3 326 6 342 3 210 3 329 1 
219 1 71 18 200 1 286 1 204 2 362 1 73 2 95 1 121 4 342 10 293 3 210 1 344 4 229 1 53 1 161 4 254 1 298 4 132 8 32 1 57 2 235 1 85 1 261 1 193 1 86 1 139 1 354 1 19 3 280 8 326 4 38 1 329 2 
229 1 161 2 53 1 71 8 132 4 298 2 286 1 73 1 121 2 85 1 86 1 193 1 19 1 280 4 342 4 326 3 293 2 210 1 344 2 329 1 
229 1 53 1 71 6 347 1 286 1 85 1 86 1 193 1 19 1 280 3 293 2 326 2 342 3 329 1 
103 1 161 1 71 4 132 2 298 1 204 1 57 1 121 1 261 1 19 1 293 1 280 2 326 2 342 2 344 1 210 1 329 1 
71 7 200 1 369 1 204 1 57 1 95 2 261 1 19 1 293 1 280 4 342 3 326 2 38 1 210 1 329 1 
200 2 71 23 286 1 204 2 73 2 95 2 121 2 342 11 293 5 101 1 210 4 344 2 229 1 53 1 161 2 30 1 132 4 298 2 369 1 57 2 61 1 85 1 261 2 193 2 86 2 19 3 326 9 280 12 329 3 
71 1 280 1 95 1 
71 1 200 1 342 1 
161 1 103 1 71 6 298 1 132 2 204 1 57 1 121 1 261 1 19 1 280 3 342 3 326 3 293 2 197 1 344 1 210 1 329 1 
219 1 200 1 71 12 204 2 362 1 95 1 121 1 342 6 293 1 210 1 344 1 161 1 254 1 298 1 132 2 32 1 57 2 261 2 139 1 354 1 19 2 280 6 326 2 38 1 329 2 
229 1 71 6 86 1 193 1 19 1 342 3 280 3 293 1 326 2 210 1 329 1 
53 1 161 1 71 3 132 2 298 1 73 1 121 1 85 1 193 1 86 1 342 1 326 2 293 1 280 2 101 1 210 1 344 1 
120 1 364 1 174 1 285 1 336 1 357 1 252 1 
174 1 359 1 285 1 336 1 120 1 364 1 137 1 63 1 87 1 357 1 252 1 8 1 
69 1 199 4 307 1 106 4 190 1 180 1 279 1 216 1 341 4 377 1 282 1 272 1 21 1 
199 2 307 1 176 1 133 1 106 2 118 1 5 1 372 1 341 2 88 1 377 1 328 1 21 1 272 2 
278 1 180 1 199 1 270 1 307 1 341 1 248 1 106 1 272 1 310 1 
199 2 111 1 307 1 106 2 179 1 216 1 341 2 376 1 377 1 21 1 272 1 
199 5 307 2 112 1 106 5 190 1 180 1 5 1 279 1 216 1 341 4 376 1 377 2 141 1 282 1 21 3 272 2 
199 5 307 2 1 1 106 5 190 1 180 1 5 1 279 1 216 1 341 4 376 1 377 2 141 1 282 1 21 3 272 2 
180 1 199 1 279 1 347 1 307 1 341 1 377 1 106 1 282 1 272 1 21 1 
199 1 366 1 174 2 11 1 307 1 133 1 336 2 106 1 119 1 302 1 180 1 341 1 377 1 357 1 252 1 227 1 21 1 272 1 
199 1 174 2 307 1 147 1 336 2 119 1 5 1 341 1 79 1 252 1 227 1 272 1 366 1 11 1 133 2 256 1 106 1 302 2 234 1 60 1 377 2 357 2 21 3 
69 1 199 2 174 2 307 1 147 1 336 2 119 1 5 1 341 2 79 1 28 1 252 1 227 1 272 1 11 1 133 2 256 1 106 2 302 2 234 1 60 1 377 2 357 2 21 3 
81 1 69 1 199 3 331 1 147 1 307 1 275 1 149 1 133 1 256 1 117 2 106 3 337 1 180 1 17 1 5 1 136 1 98 1 195 2 341 3 377 1 272 1 21 4 
69 1 199 3 331 1 147 1 307 1 275 1 149 1 133 1 256 1 117 2 106 3 337 1 180 1 5 1 136 1 168 1 98 1 195 2 341 3 377 1 272 1 21 4 
39 1 199 1 307 1 341 1 106 1 272 1 
39 1 199 7 111 1 307 2 112 1 133 1 93 1 106 7 118 1 74 1 180 2 372 1 216 1 138 1 341 6 376 1 377 2 226 1 141 1 21 3 272 3 
199 1 286 1 336 2 3 1 341 1 293 2 342 3 344 2 252 2 158 1 161 2 53 1 11 1 298 2 106 1 302 1 216 1 19 1 357 1 21 1 70 1 305 1 71 6 174 2 307 1 72 2 119 1 121 2 123 1 227 1 272 1 129 2 229 1 366 1 132 4 133 1 322 1 370 1 188 1 85 1 86 1 193 1 377 1 326 2 280 3 236 1 329 1 
237 1 199 1 331 1 148 1 360 1 113 1 149 1 117 3 337 2 269 2 289 1 180 1 98 1 341 1 78 2 313 1 156 1 126 1 102 2 12 1 275 1 106 1 349 2 136 1 168 1 195 3 196 1 21 2 
39 1 199 2 307 1 275 1 133 1 361 1 93 1 106 2 216 1 341 2 377 1 21 2 272 2 
199 1 174 2 11 1 307 1 133 1 336 2 106 1 119 1 302 1 180 1 341 1 377 1 357 1 28 1 252 1 227 1 21 1 272 1 
199 1 307 1 133 1 93 1 106 1 118 1 74 1 5 1 372 1 341 1 377 1 21 1 272 2 
142 1 191 1 358 1 266 1 252 1 
142 2 331 1 358 2 266 2 113 1 117 2 234 1 191 1 16 1 303 1 136 1 60 1 98 1 62 1 291 1 195 2 79 1 125 1 252 1 
358 1 266 1 174 1 202 1 334 1 336 1 191 1 135 1 357 1 
191 1 291 1 125 1 
29 1 22 1 332 1 374 1 115 1 6 1 299 1 66 1 
295 2 29 4 22 4 115 3 33 1 299 2 233 1 363 1 374 2 6 1 7 1 263 1 66 1 91 1 
295 1 29 2 22 2 332 1 239 1 115 1 299 1 374 1 6 1 140 1 66 1 109 1 
29 3 22 3 332 1 374 1 115 1 355 1 6 1 7 1 33 2 299 1 66 1 91 2 
259 1 353 2 115 2 241 1 
29 1 22 1 332 1 6 1 151 1 66 1 
295 1 29 2 22 2 332 1 374 1 187 1 115 1 6 1 299 1 66 1 
379 1 
29 1 22 1 332 1 374 1 115 1 6 1 299 1 66 1 
374 1 347 1 115 1 299 1 
29 1 22 1 374 1 115 1 6 1 299 1 66 1 
22 1 77 1 350 1 
29 3 22 3 332 1 115 1 33 2 58 1 299 1 374 1 6 1 7 1 66 1 91 1 
295 1 29 2 22 2 374 1 115 1 6 1 299 1 268 1 66 1 
29 1 22 1 332 1 115 1 221 1 278 1 363 1 6 1 248 1 50 1 66 1 
29 1 22 1 332 1 374 1 115 1 6 1 66 1 
29 1 22 1 332 1 374 2 6 1 299 1 66 1 
29 2 220 1 22 2 332 1 283 1 115 1 181 1 374 1 6 2 66 2 
295 2 29 3 22 3 332 1 187 1 115 2 56 1 299 1 363 1 374 1 6 1 263 1 66 1 
295 1 29 2 22 2 332 1 115 1 221 1 299 1 278 1 270 1 374 1 373 1 6 1 248 2 66 1 316 1 
295 2 29 4 22 4 332 1 115 2 299 1 268 1 363 1 374 1 18 1 6 2 263 1 66 2 
295 1 29 3 22 3 332 1 187 1 374 1 115 1 6 1 33 1 299 1 66 1 
233 1 363 1 115 1 263 1 
374 1 115 1 

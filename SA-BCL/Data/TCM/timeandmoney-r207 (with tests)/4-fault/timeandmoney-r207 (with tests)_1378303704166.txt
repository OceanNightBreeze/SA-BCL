#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 55 64 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 1 127 2 305 2 101 1 361 2 363 1 286 1 332 1 58 1 190 2 334 5 195 1 38 1 251 2 373 1 291 9 252 3 277 4 317 1 171 1 296 2 233 1 320 1 20 1 257 2 74 9 380 6 303 1 
356 1 127 2 305 2 101 1 361 2 363 1 286 1 332 1 58 1 190 2 334 5 195 1 38 1 251 2 373 1 291 9 252 3 277 4 317 1 171 1 296 2 233 1 257 2 320 1 20 1 74 9 380 6 303 1 
356 1 127 2 305 2 101 1 361 2 363 1 286 1 332 1 58 1 190 2 334 6 195 1 38 1 251 2 373 1 291 10 252 4 277 5 317 1 171 1 296 2 233 1 257 2 320 1 20 1 74 10 380 7 303 1 
356 1 127 2 305 2 101 1 361 1 363 1 286 1 332 1 58 1 190 2 334 4 195 1 38 1 251 2 373 1 291 7 252 2 277 3 317 1 171 1 296 2 257 2 320 1 20 1 74 7 380 4 303 1 
334 3 305 1 127 1 356 1 252 1 291 4 101 1 361 2 277 2 296 1 233 1 286 1 332 1 257 1 74 4 380 3 190 1 303 1 
334 1 182 1 273 1 356 1 127 1 305 1 251 1 291 2 101 1 171 1 296 1 74 2 379 1 58 1 190 1 303 1 
334 2 356 1 251 1 373 1 291 3 252 1 101 1 277 1 296 2 74 3 380 1 190 2 303 1 
356 1 127 1 305 1 101 1 361 2 224 1 363 1 286 1 332 1 190 2 334 5 251 1 373 1 252 3 291 9 277 4 317 1 296 2 148 1 233 1 257 1 74 9 380 7 303 1 
356 1 127 1 305 1 101 1 361 2 224 1 363 1 286 1 332 1 190 2 334 5 251 1 373 1 252 3 291 9 277 4 317 1 296 2 148 1 233 1 257 1 74 9 380 7 303 1 
91 1 72 1 121 1 
250 1 121 1 353 2 
226 1 228 2 97 1 230 2 52 2 149 2 326 2 319 2 
262 1 97 1 52 2 358 1 284 1 264 1 185 1 326 3 6 2 102 2 133 1 265 1 328 1 30 2 270 1 108 1 87 1 192 1 226 1 229 1 228 2 230 3 215 1 41 1 16 1 319 2 174 1 199 1 345 2 117 1 222 1 19 1 149 2 280 1 47 1 96 1 120 2 
228 1 97 1 79 1 230 1 52 1 149 1 66 1 282 1 326 1 319 1 
228 1 230 1 79 1 4 1 326 1 308 1 8 1 364 1 91 1 220 1 365 1 137 1 107 1 121 1 
228 1 230 1 79 1 52 1 4 1 326 1 319 1 8 1 364 2 91 1 365 1 137 2 149 1 107 1 121 1 
137 1 49 1 168 1 246 1 364 1 
91 1 143 1 137 2 168 1 246 1 121 1 369 1 364 2 
137 1 168 1 364 1 
97 1 228 1 79 1 230 1 52 1 66 1 242 1 326 1 364 1 319 1 137 1 149 1 282 1 246 1 
121 1 
91 1 137 2 168 1 75 1 246 1 121 1 369 1 364 2 
260 1 338 1 239 2 240 1 168 2 88 1 131 1 364 5 91 1 329 1 299 1 368 1 137 5 348 2 246 2 302 1 121 1 369 1 77 2 
226 1 228 5 230 5 52 4 304 1 197 1 326 5 308 1 255 1 319 1 342 2 367 1 149 4 76 1 
228 2 79 1 230 2 52 2 194 1 149 2 282 1 326 2 
226 1 72 1 
226 2 228 2 230 2 52 1 326 2 67 1 319 1 149 1 76 1 
238 1 157 1 378 1 
226 1 230 1 324 1 284 1 185 1 326 1 6 1 102 1 16 1 133 1 222 1 47 1 87 1 270 1 96 1 120 1 
226 1 342 1 228 3 230 3 52 3 149 3 326 3 319 1 
228 1 79 1 230 1 52 1 149 1 282 1 326 1 
228 1 79 1 230 1 52 1 149 1 76 1 326 1 67 1 319 1 
262 1 97 1 79 1 52 3 4 1 128 1 358 1 284 1 264 1 185 1 326 4 6 1 102 1 133 1 8 1 364 1 328 1 365 1 30 2 137 1 107 1 270 1 87 1 192 1 226 1 228 3 230 4 41 1 16 1 255 1 319 2 174 1 71 1 342 1 345 1 117 1 222 1 19 1 149 3 280 1 47 1 76 1 96 1 120 1 
226 1 228 2 342 1 230 2 52 1 149 1 197 1 326 2 308 1 
354 1 228 3 79 1 230 3 52 3 4 1 128 1 326 3 255 1 319 1 364 1 8 1 342 2 365 1 137 1 149 3 76 1 107 1 121 1 
228 2 230 2 52 2 238 1 326 2 319 1 342 1 378 1 149 2 76 1 
226 1 230 1 284 1 185 1 326 1 6 1 102 1 16 1 133 1 222 1 47 1 87 1 270 1 96 1 120 1 
226 1 230 1 284 1 326 1 6 1 102 1 16 1 222 1 47 1 311 1 87 1 270 1 12 1 96 1 120 1 
262 1 261 1 238 2 358 1 325 1 362 1 328 1 103 1 83 1 157 2 30 2 159 1 192 1 109 1 163 1 65 1 41 2 174 1 199 2 345 4 346 1 18 1 19 1 378 2 
365 1 228 1 79 1 230 1 52 1 194 1 149 1 326 1 
228 1 230 2 238 1 52 1 284 1 185 1 326 2 6 1 16 1 255 1 102 1 133 1 342 1 222 1 149 1 47 1 270 1 87 1 96 1 120 1 
200 1 272 1 
200 1 272 1 
94 1 316 1 
94 1 316 1 
94 1 316 1 
200 1 205 1 272 1 
200 1 205 1 272 1 
200 1 272 1 318 1 
123 1 94 1 200 2 316 1 272 2 341 1 
200 1 205 1 272 1 
200 1 11 1 272 1 
200 1 11 1 272 1 
200 1 11 1 272 1 
181 1 126 1 52 2 326 2 82 1 364 1 137 1 268 1 32 1 211 1 140 1 272 1 226 1 228 2 230 2 293 1 318 1 43 1 147 1 200 1 46 1 149 2 377 1 95 1 
123 1 181 2 335 1 243 1 210 1 364 2 43 3 56 1 147 2 200 2 137 2 377 2 268 1 104 2 321 1 95 2 121 1 272 2 141 1 
305 1 127 1 257 1 
305 1 127 1 379 1 
248 1 347 1 127 3 257 2 379 1 23 1 
248 1 127 2 257 1 53 1 379 1 23 1 
248 1 127 2 257 1 379 1 23 2 
260 1 183 1 239 1 357 1 209 2 362 1 364 5 267 1 188 2 137 5 211 1 33 1 246 4 140 1 369 1 109 1 250 1 338 3 65 1 168 1 88 2 91 1 18 1 46 1 348 1 351 1 204 2 77 1 51 1 121 2 352 1 353 3 
260 1 239 2 357 2 209 6 362 3 364 9 329 1 267 3 135 5 137 9 211 4 246 7 212 1 369 1 109 3 250 3 338 8 65 3 168 6 15 1 115 1 88 6 146 1 91 1 18 3 177 1 348 2 49 5 21 1 351 1 204 6 121 5 77 2 352 2 353 9 
183 1 239 1 357 1 209 2 362 1 364 3 329 1 267 1 188 1 137 3 211 1 246 2 109 1 250 2 338 3 65 1 88 2 91 1 18 1 348 1 204 2 121 3 51 1 77 1 352 1 353 4 
183 1 239 1 357 1 209 4 362 2 364 4 329 1 267 2 188 2 137 4 211 2 246 3 212 1 109 2 250 3 338 5 65 2 115 1 88 4 91 1 18 2 177 1 348 1 204 4 121 4 77 1 51 1 352 1 353 7 
222 1 284 1 270 1 
284 1 68 1 
72 1 158 1 284 1 
60 1 284 1 
283 1 
222 1 284 1 
198 1 222 1 158 2 284 3 270 1 134 1 
109 1 370 1 61 1 1 1 263 1 163 3 3 1 41 3 290 1 362 1 132 2 136 1 199 4 345 7 159 2 271 1 150 1 
109 1 370 1 61 1 1 1 263 1 163 3 3 1 41 3 290 1 362 1 132 2 136 1 199 4 345 7 159 2 271 1 150 1 
109 1 370 1 61 1 1 1 263 1 163 3 3 1 41 3 290 1 362 1 132 2 136 1 199 4 345 7 159 2 350 1 271 1 150 1 
262 1 1 1 207 3 3 2 263 5 358 1 362 4 132 3 266 1 267 3 136 1 309 1 156 1 30 2 159 5 271 2 370 2 109 4 162 1 61 2 163 10 113 1 65 3 41 15 290 1 114 4 174 1 92 1 345 31 199 16 18 3 19 1 45 1 150 1 
262 2 1 1 3 1 263 1 358 2 154 1 362 1 132 2 136 1 30 4 159 3 271 1 109 1 162 1 370 1 61 1 163 4 41 4 290 1 42 1 174 2 345 9 199 5 19 2 
305 1 356 1 127 2 359 1 101 1 6 1 102 1 9 1 189 1 190 1 334 1 193 1 275 1 231 1 251 1 291 2 16 1 89 1 278 1 296 1 347 1 176 1 257 1 74 2 234 1 380 1 379 1 96 1 120 1 303 1 
305 1 127 2 359 1 101 1 6 1 102 1 9 1 189 1 190 1 334 1 193 1 231 1 166 1 251 1 291 3 16 1 278 1 172 1 296 1 347 1 44 1 176 1 257 1 74 3 234 1 380 2 379 1 96 1 120 1 303 1 
127 2 305 1 359 1 101 1 6 1 102 1 9 1 189 1 334 1 231 1 251 1 291 2 16 1 278 1 172 1 44 1 347 1 176 1 257 1 74 2 380 2 379 1 96 1 120 1 303 1 
284 1 129 1 6 1 102 1 9 2 138 1 190 1 231 2 63 1 166 1 251 2 291 1 16 1 296 1 222 1 176 2 376 1 47 1 74 1 258 1 96 1 120 1 237 1 
305 1 356 1 127 2 359 1 6 1 102 1 9 1 189 1 190 1 193 1 275 1 231 1 251 1 291 1 16 1 278 1 296 1 44 1 347 1 176 1 257 1 74 1 234 1 379 1 96 1 120 1 
225 1 
4 1 239 1 284 1 241 4 6 2 326 1 102 2 155 1 8 1 107 1 288 2 336 1 250 2 164 1 338 2 339 2 168 6 167 1 16 1 292 2 69 2 256 2 220 1 221 1 175 1 297 1 222 1 118 2 223 1 348 1 121 2 77 1 120 2 353 2 78 1 260 1 79 1 25 1 357 1 81 1 308 1 364 5 365 1 29 1 137 5 138 1 369 3 228 1 230 1 314 2 88 2 91 1 47 2 96 1 237 1 
79 1 25 1 4 1 241 2 326 1 308 1 8 1 155 1 364 3 365 1 137 3 107 1 369 1 228 1 230 1 164 1 168 2 69 1 220 1 297 1 75 1 78 1 
79 1 25 1 4 1 241 3 326 1 308 1 8 1 155 1 364 3 365 1 137 3 107 1 369 1 228 1 230 1 164 1 168 1 220 1 256 1 91 1 297 1 75 1 121 1 78 1 
79 1 25 1 4 1 241 3 326 1 308 1 8 1 155 1 364 3 365 1 137 3 107 1 369 1 228 1 230 1 164 1 314 1 168 2 69 1 220 1 256 1 91 1 297 1 75 1 121 1 78 1 
0 1 2 1 4 1 239 1 241 6 54 1 326 1 8 1 155 1 107 1 288 2 250 2 164 1 338 1 339 2 168 7 292 2 69 4 220 1 256 4 297 1 175 1 118 2 348 1 75 1 121 5 77 1 78 1 260 1 79 1 25 1 306 1 81 1 308 1 364 5 365 1 137 5 369 3 228 1 230 1 314 4 88 1 232 1 91 5 
4 1 239 1 241 4 326 1 8 1 155 1 107 1 288 2 250 2 164 1 338 1 339 2 168 4 292 2 69 2 220 1 256 2 221 1 297 1 175 1 118 2 348 1 77 1 121 2 78 1 353 2 260 1 79 1 25 1 81 1 308 1 364 4 365 1 137 4 369 2 228 1 230 1 314 2 88 1 91 1 
0 1 260 1 79 1 25 1 4 1 306 1 239 1 81 1 241 4 326 1 308 1 8 1 155 1 364 4 365 1 137 4 107 1 369 2 288 2 228 1 230 1 250 2 164 1 338 1 339 2 314 2 168 4 88 1 292 2 232 1 69 2 91 1 256 2 220 1 175 1 297 1 118 2 348 1 121 1 77 1 78 1 
0 1 260 1 79 1 25 1 4 1 306 1 239 1 81 1 241 4 326 1 308 1 8 1 155 1 364 4 365 1 137 4 107 1 369 2 288 2 228 1 230 1 250 2 164 1 338 1 339 2 314 2 168 4 88 1 292 2 232 1 69 2 91 1 256 2 220 1 175 1 297 1 118 2 348 1 121 1 77 1 78 1 
260 1 79 1 25 1 4 1 239 1 241 4 326 1 308 1 8 1 155 1 364 4 365 1 366 1 137 4 107 1 369 2 228 1 230 1 313 2 164 1 371 1 165 2 338 1 339 2 314 2 168 4 253 1 88 1 232 1 69 2 91 1 256 2 220 1 175 1 297 1 118 2 348 1 121 1 77 1 353 2 78 1 
260 1 0 1 79 1 2 1 25 1 4 1 306 1 239 1 81 1 241 5 326 1 308 1 8 1 155 1 364 4 365 1 137 4 107 1 369 2 288 2 228 1 230 1 250 2 164 1 338 1 339 2 314 3 168 5 88 1 292 2 232 1 69 3 91 1 220 1 256 3 175 1 297 1 118 2 348 1 121 1 77 1 78 1 
260 1 0 1 79 1 2 1 25 1 4 1 306 1 239 1 81 1 241 5 326 1 308 1 8 1 155 1 364 4 365 1 137 4 107 1 369 2 288 2 228 1 230 1 250 2 164 1 338 1 339 2 314 3 168 5 88 1 292 2 232 1 69 3 91 1 220 1 256 3 175 1 297 1 118 2 348 1 121 1 77 1 78 1 
4 1 239 1 241 4 326 1 8 1 155 1 107 1 164 1 338 1 165 2 339 2 168 4 253 1 69 2 220 1 256 2 221 1 297 1 175 1 118 2 348 1 77 1 121 1 78 1 353 2 260 1 79 1 25 1 308 1 364 4 365 1 137 4 369 2 228 1 230 1 313 2 314 2 88 1 91 1 
262 1 1 1 238 1 358 1 362 1 132 1 328 1 83 1 136 1 157 1 30 2 159 2 271 1 192 1 370 1 109 1 226 2 163 2 41 3 290 1 174 1 72 1 199 3 345 6 19 1 378 1 
124 1 323 1 262 1 207 2 263 1 238 8 358 1 362 2 328 1 267 2 157 8 159 1 30 2 192 1 142 1 109 1 163 2 113 1 65 2 41 4 169 1 114 2 174 1 345 10 199 6 18 1 19 1 378 3 322 1 
262 1 52 1 324 1 284 1 358 1 185 1 264 1 6 1 326 2 102 1 133 1 327 1 328 1 30 2 270 1 87 1 192 1 226 1 228 1 230 2 215 1 41 1 169 1 16 1 255 1 219 1 174 1 342 1 345 2 199 1 222 1 19 1 47 1 378 1 149 1 48 1 96 1 120 1 
98 2 1 1 52 1 238 7 284 2 6 3 326 3 102 3 7 2 328 3 157 7 159 4 109 3 163 8 215 1 65 2 290 1 169 1 255 1 16 2 17 1 174 3 342 1 345 20 117 2 300 1 222 2 18 2 19 3 120 3 262 3 80 2 263 4 358 3 307 1 264 1 185 2 362 3 132 1 133 2 267 2 136 1 30 6 87 2 270 2 271 1 192 3 226 2 370 1 228 1 230 3 34 2 41 10 44 1 199 10 47 1 149 1 378 7 96 2 
262 2 52 1 284 3 358 2 264 1 326 1 6 8 102 8 328 2 83 1 285 1 10 1 84 1 30 4 138 1 192 2 228 1 229 2 230 1 213 1 196 1 215 1 41 1 372 1 16 2 89 1 174 2 342 1 44 1 116 1 199 1 345 2 222 2 19 2 149 1 47 2 96 2 120 7 237 1 
262 1 238 1 52 1 358 1 326 1 362 1 328 1 267 1 157 1 159 1 30 2 192 1 109 1 228 1 230 1 163 1 65 1 41 2 169 1 319 1 174 1 93 1 199 1 345 3 18 1 19 1 378 1 149 1 76 1 
262 1 163 1 263 1 238 1 358 1 65 1 362 1 328 1 174 1 345 2 83 1 346 1 199 2 157 1 19 1 30 2 378 1 192 1 
109 1 262 1 163 1 238 1 358 1 41 2 328 1 174 1 345 2 83 1 103 1 18 1 157 1 19 1 159 1 30 2 378 1 192 1 
262 1 238 2 263 1 358 1 362 1 328 1 267 1 83 1 157 2 30 2 159 1 192 1 109 1 163 2 65 1 41 2 174 1 199 2 345 4 18 1 19 1 378 2 
262 1 163 1 263 1 238 1 358 1 65 1 362 1 328 1 174 1 345 2 346 1 199 2 157 1 84 1 19 1 30 2 378 1 192 1 
109 1 262 1 163 1 238 1 358 1 41 2 328 1 174 1 345 2 103 1 18 1 157 1 84 1 19 1 159 1 30 2 378 1 192 1 
262 1 238 2 263 1 358 1 362 1 328 1 267 1 84 1 157 2 30 2 159 1 192 1 109 1 163 2 65 1 41 2 174 1 199 2 345 4 18 1 19 1 378 2 
262 1 238 2 263 1 358 1 362 1 328 1 267 1 157 2 30 2 159 1 192 1 109 1 163 2 65 1 41 2 174 1 345 4 199 2 18 1 19 1 378 2 
262 1 284 1 358 1 185 1 264 1 6 1 326 1 102 1 133 1 328 1 30 2 270 1 87 1 192 1 226 1 230 1 215 1 41 1 16 1 174 1 199 1 345 2 117 1 222 1 19 1 47 1 96 1 120 1 
262 1 284 1 358 1 264 1 6 1 326 1 102 1 328 1 30 2 270 1 87 1 311 1 12 1 161 1 192 1 226 1 230 1 215 1 41 1 16 1 174 1 199 1 345 2 222 1 19 1 47 1 96 1 120 1 
262 1 238 2 263 1 358 1 362 1 328 1 267 1 157 2 30 2 159 1 192 1 109 1 163 2 65 1 41 2 169 1 174 1 199 2 345 4 18 1 19 1 378 2 
262 1 263 1 238 2 284 1 358 1 185 1 6 1 326 1 362 1 7 1 102 1 133 1 328 1 267 1 157 2 159 1 30 2 270 1 87 1 192 1 109 1 230 1 163 2 65 1 41 2 16 1 89 1 174 1 345 4 199 2 117 1 18 1 222 1 19 1 378 2 96 1 120 1 
262 1 263 1 52 1 238 1 358 1 326 1 362 1 328 1 267 1 157 1 30 2 85 1 192 1 109 1 228 1 230 1 163 1 65 1 41 1 169 1 319 1 174 1 199 2 345 3 18 1 19 1 149 1 378 1 76 1 
262 3 207 3 263 3 184 1 358 3 154 1 244 1 362 4 55 1 187 3 267 4 159 2 30 6 287 1 106 2 333 1 162 1 109 4 289 1 111 1 163 5 64 1 113 1 65 4 41 17 315 1 114 4 174 3 343 1 70 1 345 32 199 15 18 4 45 3 19 3 24 1 122 1 
262 4 207 3 263 3 184 1 358 4 154 1 244 1 362 4 55 1 187 4 267 4 159 3 30 8 287 1 106 2 333 1 162 2 109 3 289 1 111 1 163 6 64 1 113 1 65 4 41 16 315 1 114 4 174 4 343 1 70 1 345 33 199 17 18 3 45 3 19 4 24 1 122 1 
262 2 1 1 207 4 263 6 184 1 358 2 154 1 244 1 362 7 132 1 55 1 187 3 267 6 136 1 159 6 30 4 287 1 106 1 271 1 370 1 162 1 109 7 111 1 163 12 64 1 113 2 65 6 41 22 290 1 315 1 114 4 174 2 343 1 70 1 345 46 199 24 18 6 45 2 19 2 322 2 24 1 122 1 
262 2 207 1 263 3 184 1 358 2 154 1 362 3 55 2 187 2 267 3 159 3 30 4 106 1 333 1 109 3 163 6 64 1 113 1 65 3 41 10 114 2 174 2 70 1 375 1 345 19 199 9 18 3 45 1 19 2 24 1 
262 3 207 2 263 1 184 1 358 3 154 1 244 1 362 3 55 1 187 3 267 3 159 1 30 6 287 1 106 2 162 2 109 2 111 1 163 2 64 1 65 3 41 11 315 1 114 2 174 3 343 1 70 2 345 24 199 13 18 2 19 3 45 2 24 1 122 1 
312 1 205 1 
11 1 139 1 341 1 
123 1 181 1 335 1 147 1 200 1 217 1 377 1 95 1 243 1 272 1 
126 1 318 1 
181 1 153 1 147 1 208 1 200 1 377 1 95 1 144 1 272 1 
123 1 181 1 335 1 243 1 210 1 364 1 43 2 147 1 200 1 137 1 268 1 377 1 104 1 321 1 95 1 121 1 272 1 141 1 
123 1 181 1 335 1 243 1 210 1 364 1 43 2 147 1 200 1 137 1 268 1 377 1 104 1 321 1 95 1 121 1 272 1 141 1 
123 1 181 1 335 1 243 1 210 1 364 1 43 2 147 1 200 1 137 1 268 1 377 1 104 1 321 1 95 1 121 1 272 1 141 1 
312 1 205 1 341 1 
312 1 205 1 341 1 
11 1 139 1 
11 1 139 1 341 1 
32 1 82 1 
181 1 126 1 52 2 360 1 326 2 82 1 364 1 137 1 104 1 32 1 211 1 246 1 140 1 272 1 141 1 226 1 228 2 230 2 293 1 318 1 43 1 147 1 200 1 46 1 377 1 149 2 95 1 
262 1 284 1 358 1 264 1 6 2 326 2 102 2 328 1 30 2 191 1 192 1 228 2 229 2 230 2 249 1 196 1 215 1 40 1 41 1 169 1 372 1 16 1 90 1 174 1 199 1 345 2 222 1 19 1 22 1 96 1 120 2 
193 1 231 1 305 1 127 2 359 1 6 2 254 1 16 1 102 2 89 1 278 1 344 1 347 1 44 1 257 1 202 1 379 1 96 1 120 2 
193 1 231 1 305 1 127 2 359 1 6 1 102 1 16 1 278 1 347 1 44 1 28 1 257 1 202 1 379 1 96 1 120 1 
231 1 284 1 6 1 254 1 16 1 102 1 222 1 376 1 47 1 138 1 96 1 120 1 59 1 237 1 
193 1 231 1 305 1 127 2 359 1 6 1 254 1 16 1 102 1 278 1 344 1 347 1 44 1 257 1 202 1 379 1 96 1 120 1 
355 1 
91 1 72 1 338 1 240 1 88 1 131 1 121 1 
260 1 239 1 81 1 364 1 137 1 369 1 288 1 250 1 338 1 168 1 88 1 292 1 91 1 348 1 77 1 121 2 353 1 
98 2 100 1 284 10 239 4 240 1 209 6 6 3 102 3 330 1 158 2 107 2 109 2 60 3 14 2 337 1 250 6 338 9 65 2 168 5 16 4 68 2 173 1 298 2 222 3 18 2 348 4 119 2 77 4 120 3 121 8 353 12 260 4 357 2 131 1 130 2 362 2 134 1 364 5 267 2 29 1 137 5 86 2 270 3 369 3 35 2 36 2 37 1 88 8 89 1 91 2 279 2 47 1 96 3 204 6 
260 2 207 2 239 2 209 8 130 4 244 1 362 4 364 1 267 4 137 1 287 1 369 1 109 4 111 1 250 8 338 12 113 1 65 4 168 1 315 1 114 2 88 7 91 1 18 4 45 1 201 1 348 2 322 1 204 8 77 2 121 6 122 1 353 13 
260 1 0 1 97 1 79 1 52 1 239 1 326 1 130 2 242 1 362 2 364 1 136 1 137 1 271 1 370 1 109 1 228 1 230 1 338 2 66 1 88 2 295 1 319 1 279 1 348 1 149 1 282 1 77 1 
260 1 338 1 239 1 240 1 131 1 88 1 91 1 348 1 77 1 121 1 
109 2 98 1 250 5 338 5 65 2 209 5 130 2 88 5 362 2 267 2 279 1 18 2 204 5 121 5 353 10 
91 1 137 1 168 1 121 1 369 1 364 1 
260 1 100 1 284 1 239 2 357 2 6 4 102 4 364 3 329 1 29 2 137 3 269 1 138 1 369 2 216 1 338 2 167 1 168 4 88 2 16 1 173 2 222 1 223 1 348 2 47 2 96 1 77 2 120 4 237 1 
262 1 97 1 52 2 358 1 284 1 264 1 185 1 6 1 326 3 102 1 133 1 328 1 30 2 87 1 270 1 192 1 226 1 228 2 230 3 41 1 16 1 319 2 174 1 345 1 117 1 222 1 19 1 47 1 149 2 280 1 96 1 120 1 
260 1 250 2 338 1 239 1 357 1 209 2 88 2 132 1 91 2 29 1 348 1 204 2 77 1 121 4 353 4 
147 1 39 1 377 1 
147 1 39 1 377 1 
335 1 147 1 62 1 32 1 377 1 
147 1 39 1 377 1 
147 1 179 1 377 1 
147 1 179 1 377 1 
147 1 179 1 377 1 
147 1 377 1 
200 1 272 1 
262 1 207 1 1 1 358 1 154 1 362 1 244 1 132 1 136 1 30 2 159 2 271 1 109 1 370 1 163 2 41 4 290 1 114 1 174 1 345 8 199 4 45 1 19 1 
262 2 1 1 207 1 263 1 154 1 358 2 244 1 362 2 132 1 267 1 136 1 159 2 30 4 271 1 109 1 370 1 163 3 113 1 65 1 41 5 290 1 114 2 174 2 345 11 199 6 45 1 19 2 281 1 
262 3 207 1 263 1 358 3 154 1 244 1 362 2 267 2 30 6 159 1 287 1 109 2 162 1 111 1 163 2 65 2 41 7 315 1 114 1 174 3 345 13 199 6 18 2 45 1 19 3 281 1 122 1 
262 3 207 1 263 1 358 3 154 1 244 1 362 2 267 2 30 6 159 1 287 1 162 1 109 1 163 2 111 1 65 2 41 4 315 1 114 1 174 3 345 11 199 7 18 1 45 1 19 3 281 1 122 1 
262 1 207 1 1 1 358 1 154 1 362 1 244 1 132 1 136 1 30 2 159 2 271 1 109 1 370 1 163 2 41 4 290 1 114 1 174 1 345 8 199 4 45 1 19 1 
262 1 207 1 263 1 358 1 154 1 244 1 362 2 267 2 30 2 159 1 287 1 109 2 163 2 111 1 65 2 41 6 315 1 114 1 174 1 345 12 199 6 18 2 45 1 19 1 122 1 
262 4 207 1 263 1 358 4 154 1 244 1 362 2 267 2 30 8 159 1 287 1 109 1 162 2 111 1 163 2 65 2 41 5 315 1 114 1 174 4 345 12 199 7 18 1 45 1 19 4 281 1 122 1 
262 4 207 1 263 2 154 1 358 4 244 1 362 2 267 2 30 8 159 2 287 1 333 1 109 1 162 2 111 1 163 4 65 2 41 5 315 1 114 1 174 4 345 12 199 7 18 1 45 1 19 4 122 1 
109 1 370 3 1 1 163 6 263 3 41 4 290 2 362 1 345 7 136 1 199 3 159 3 271 3 
262 4 207 1 263 1 154 1 358 4 244 1 362 2 267 2 30 8 159 1 287 1 333 1 109 1 162 2 111 1 163 2 65 2 41 5 315 1 114 1 174 4 345 12 199 7 18 1 45 1 19 4 122 1 
109 1 162 1 370 1 262 2 1 1 263 1 163 3 358 2 41 4 290 1 362 1 132 1 174 2 136 1 345 8 199 4 19 2 159 2 30 4 271 1 
109 1 370 1 72 1 345 6 199 3 136 1 1 1 163 2 159 2 41 3 290 1 362 1 271 1 132 1 
109 1 262 1 163 2 263 1 358 1 65 1 41 2 362 1 174 1 267 1 199 2 345 4 18 1 19 1 159 1 30 2 281 1 
109 1 207 1 263 1 163 2 113 1 65 1 41 4 114 2 362 1 267 1 345 7 199 3 18 1 45 1 159 1 
124 1 262 2 1 1 207 2 263 4 358 2 362 3 132 1 267 2 136 1 159 5 30 4 271 2 370 2 109 3 162 2 163 9 113 1 65 2 41 12 290 1 114 2 170 1 174 2 199 11 345 23 18 2 19 2 322 1 
345 1 41 1 114 1 
345 1 199 1 207 1 
109 1 262 1 98 1 263 1 163 3 358 1 65 1 41 3 362 1 174 1 267 1 345 6 199 3 18 1 19 1 30 2 159 2 281 1 
262 1 207 1 263 1 358 1 154 1 244 1 362 2 267 2 30 2 159 1 287 1 109 2 163 2 111 1 65 2 41 6 315 1 114 1 174 1 345 12 199 6 18 2 45 1 19 1 122 1 
109 1 370 1 163 2 263 1 41 3 362 1 136 1 199 3 345 6 159 1 271 1 
370 1 162 1 262 1 1 1 263 1 163 2 358 1 41 2 290 1 170 1 174 1 199 1 345 3 19 1 159 1 30 2 271 1 
370 2 109 2 262 1 163 5 263 2 358 1 154 1 41 5 362 2 295 1 174 1 199 5 345 10 136 1 19 1 30 2 159 3 271 2 
262 1 263 1 163 1 154 1 358 1 65 1 362 1 174 1 199 2 345 2 19 1 30 2 
109 1 262 1 163 2 263 1 154 1 358 1 65 1 41 2 362 1 174 1 267 1 199 2 345 4 18 1 19 1 159 1 30 2 
162 1 370 1 262 3 163 2 263 1 154 1 358 3 41 2 170 1 174 3 345 3 199 1 19 3 30 6 159 1 271 1 333 1 
262 5 1 1 207 3 263 5 358 5 154 1 362 5 132 1 266 1 267 3 136 2 309 1 30 10 159 7 271 3 333 1 370 3 162 2 109 5 163 12 113 1 65 3 41 18 290 1 114 4 170 1 174 5 92 1 345 34 199 16 18 3 45 1 19 5 281 1 
226 1 228 1 230 1 197 1 326 1 308 1 259 1 
226 1 227 1 228 1 230 1 110 1 374 1 197 1 326 1 308 1 27 1 50 1 259 1 
226 1 228 1 230 2 52 1 284 1 326 2 6 1 16 1 102 1 342 1 222 1 149 1 47 1 270 1 87 1 311 1 96 1 120 1 
112 1 284 1 6 1 102 1 16 2 134 1 173 1 222 1 31 1 270 1 96 1 236 1 120 1 
72 1 222 1 47 1 284 1 138 1 96 1 6 1 16 1 102 1 120 1 237 1 
226 1 228 1 230 2 52 1 284 1 326 2 6 1 16 1 102 1 133 1 342 1 222 1 149 1 47 1 270 1 87 1 96 1 120 1 
226 1 228 2 79 1 230 2 52 1 36 1 4 1 284 3 326 2 6 1 16 1 102 1 133 1 68 1 173 1 365 1 342 1 222 2 149 2 270 2 87 1 96 1 120 1 
226 1 228 2 79 1 230 2 52 1 36 1 4 1 284 3 326 2 6 2 16 1 102 2 68 1 173 1 365 1 342 1 222 2 149 2 301 1 270 2 87 1 311 1 96 1 120 2 
60 1 99 1 36 1 284 4 168 1 6 3 16 1 102 3 68 1 364 2 91 1 173 1 222 1 158 1 178 1 137 2 47 1 301 1 107 1 270 1 96 1 121 1 120 3 
14 1 60 1 36 1 284 4 168 1 6 3 16 1 102 3 68 1 364 2 91 1 173 1 222 1 158 1 137 2 47 1 301 1 107 1 270 1 96 1 121 1 120 3 
285 1 96 1 6 1 16 1 102 1 120 1 
229 1 213 1 196 1 112 1 284 3 6 7 102 7 16 3 89 1 134 1 44 1 116 1 285 1 10 1 222 2 31 1 47 2 270 1 96 2 236 1 120 6 
1 1 52 1 238 1 284 1 6 1 326 2 7 1 102 1 328 2 157 1 159 2 109 1 163 2 169 1 290 1 16 1 174 2 342 1 117 1 345 6 222 1 19 2 120 1 262 2 358 2 185 1 362 1 133 1 132 1 136 1 30 4 87 1 270 1 271 1 191 1 192 2 370 1 226 2 228 1 34 1 230 2 41 3 89 1 199 3 378 1 149 1 96 1 
260 2 100 1 239 2 284 2 240 1 131 1 6 1 102 1 364 3 158 1 137 3 107 1 246 1 369 1 14 1 60 1 35 1 338 1 168 2 88 1 91 1 298 1 348 2 47 1 119 1 121 1 120 1 77 2 
337 1 284 2 6 2 102 2 16 2 89 1 134 1 285 1 222 1 158 1 270 1 96 1 120 2 
284 1 6 4 16 1 102 4 89 1 222 1 47 1 301 1 138 1 247 1 96 1 120 4 237 1 
112 1 284 1 6 2 102 2 16 2 17 1 173 1 222 1 31 1 349 1 245 1 270 1 96 1 120 2 
305 1 127 1 47 1 379 1 359 1 96 1 6 1 16 1 102 1 120 1 
196 1 40 1 284 1 6 2 102 2 16 1 89 1 44 1 222 1 96 1 120 2 
213 1 196 1 284 3 6 5 102 5 16 2 89 1 173 1 10 1 222 2 47 1 138 1 247 1 96 2 120 4 237 1 
213 1 196 1 284 3 6 5 102 5 16 2 89 1 173 1 222 2 47 1 138 1 247 1 96 2 120 4 13 1 237 1 
226 1 274 1 73 1 214 1 294 1 
226 1 79 1 152 1 274 2 4 1 214 2 128 1 218 1 145 1 294 1 364 2 8 1 91 1 365 1 73 2 137 2 107 1 246 1 121 1 
228 1 230 1 274 1 249 1 214 1 326 1 294 1 90 1 22 1 
152 1 218 1 294 1 
334 1 72 1 101 1 303 1 
334 1 296 1 74 1 291 1 101 1 190 1 303 1 
176 1 251 1 291 1 
334 1 276 1 356 1 291 3 101 1 186 1 171 2 296 1 74 3 160 1 190 1 303 1 
334 1 296 1 74 2 380 1 291 2 101 1 361 1 190 1 303 1 
334 1 296 1 305 1 127 1 286 1 356 1 257 1 74 1 291 1 277 1 190 1 
334 1 296 1 356 1 74 1 291 1 101 1 190 1 
296 1 356 1 74 1 291 1 101 2 190 1 303 1 
334 1 206 1 356 1 5 1 291 2 101 1 296 2 74 2 235 1 190 2 
334 2 356 1 291 3 252 1 101 1 277 1 317 1 363 1 296 1 74 3 380 2 190 1 303 1 
334 1 125 1 127 2 356 1 305 1 291 2 101 1 296 1 347 1 257 1 74 2 379 1 380 1 190 1 303 1 
334 2 356 1 291 4 252 1 101 1 361 1 277 1 296 2 233 1 74 4 380 2 190 2 303 1 
334 1 296 1 356 1 74 1 291 1 101 1 190 1 303 1 
334 3 276 1 26 1 291 4 252 1 101 2 277 1 186 1 171 1 296 1 74 4 380 2 190 1 303 2 
334 1 296 1 148 1 57 1 356 1 203 1 74 2 380 1 291 2 101 1 190 1 303 1 
334 1 296 1 276 1 356 1 180 1 74 3 291 3 101 1 186 2 190 1 303 1 171 2 
334 2 105 1 340 1 151 2 
296 1 331 1 356 1 74 1 291 1 190 1 
334 1 296 1 356 1 74 2 380 1 291 2 101 1 363 1 190 1 303 1 
310 1 
334 1 296 1 356 1 74 1 291 1 101 1 190 1 303 1 
334 1 356 1 291 3 101 1 363 1 171 1 296 1 74 3 380 1 190 1 303 1 
334 1 26 1 252 1 277 1 
334 1 101 1 

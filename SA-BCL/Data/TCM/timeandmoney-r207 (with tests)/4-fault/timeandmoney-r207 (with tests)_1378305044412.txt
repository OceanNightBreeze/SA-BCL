#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 304 0 23 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 304 323 23 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 304 0 375 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 304 0 23 129 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 304 323 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 304 323 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 29 65 126 323 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 29 65 126 323 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 1 37 1 16 1 169 1 72 2 292 3 63 1 234 2 11 3 32 1 320 1 289 2 45 1 
179 2 136 2 252 1 4 1 158 2 72 2 234 2 8 1 11 9 32 4 83 1 260 1 289 5 361 1 194 1 339 1 239 3 37 1 16 2 169 1 292 9 63 6 172 1 90 2 148 1 320 1 71 1 45 1 
179 2 136 2 252 1 4 1 158 2 72 2 234 2 8 1 11 9 32 4 83 1 260 1 289 5 361 1 194 1 339 1 239 3 37 1 16 2 169 1 292 9 63 6 172 1 90 2 148 1 320 1 71 1 45 1 
179 2 136 2 252 1 4 1 158 2 72 2 234 2 8 1 11 10 32 5 83 1 260 1 289 6 361 1 194 1 339 1 239 4 37 1 16 2 169 1 292 10 63 7 172 1 90 2 148 1 320 1 71 1 45 1 
179 2 136 2 252 1 4 1 158 1 72 2 234 2 8 1 11 7 32 3 83 1 260 1 289 4 361 1 194 1 339 1 239 2 37 1 16 2 169 1 292 7 63 4 172 1 90 2 148 1 320 1 45 1 
136 1 179 1 239 1 252 1 37 1 169 1 158 2 72 1 292 4 63 3 234 1 8 1 90 1 11 4 32 2 289 3 71 1 45 1 
136 1 37 1 4 1 16 1 169 1 72 1 292 2 234 1 347 1 172 1 90 1 227 1 11 2 133 1 289 1 45 1 
179 1 136 1 252 1 158 2 72 2 234 2 8 1 188 1 11 9 32 4 289 5 194 1 339 1 239 3 37 1 16 1 169 1 292 9 63 7 90 1 316 1 320 1 45 1 71 1 
179 1 136 1 252 1 158 2 72 2 234 2 8 1 188 1 11 9 32 4 289 5 194 1 339 1 239 3 37 1 16 1 169 1 292 9 63 7 90 1 316 1 320 1 45 1 71 1 
220 1 233 1 341 1 17 1 211 1 345 1 296 1 185 1 187 1 33 1 360 1 204 1 55 1 105 1 
301 1 
348 1 352 1 266 1 3 1 17 2 187 1 33 2 301 1 
291 1 266 1 3 2 95 2 17 5 325 1 313 1 272 2 356 1 348 1 331 1 132 1 187 2 288 1 317 2 142 1 33 5 301 1 117 1 
348 1 301 1 207 1 
120 2 247 1 301 1 
296 1 341 2 185 2 211 2 360 2 51 1 55 2 345 2 
178 1 152 2 157 2 211 2 31 1 51 1 6 1 75 1 215 1 76 1 163 1 185 2 79 1 186 1 164 1 359 1 81 1 360 3 166 1 264 1 55 2 311 2 108 1 195 1 341 3 38 1 269 1 131 2 196 1 345 2 296 1 66 1 226 1 26 1 300 1 231 1 135 2 
220 1 296 1 233 1 341 1 185 1 211 1 360 1 204 1 55 1 345 1 
27 1 220 1 341 1 17 1 211 1 112 1 348 1 189 1 360 1 33 1 301 1 376 1 58 1 134 1 
27 1 220 1 341 1 17 2 211 1 112 1 345 1 348 1 185 1 33 2 360 1 301 1 55 1 58 1 134 1 
46 1 3 1 17 1 187 1 33 1 
348 1 266 1 3 1 17 2 187 1 33 2 301 1 295 1 
3 1 17 1 33 1 
341 2 19 1 211 2 51 2 345 1 185 1 360 2 363 1 55 1 
245 1 235 1 48 1 
311 1 152 1 341 1 157 1 269 1 38 1 196 1 51 1 75 1 66 1 226 1 79 1 359 1 360 1 300 1 280 1 
311 1 152 1 341 2 157 1 38 1 269 1 211 1 196 1 75 1 66 1 224 1 79 1 226 1 185 1 335 1 359 1 235 1 360 2 300 1 55 1 
51 1 207 1 
199 1 224 2 341 5 185 4 335 1 97 1 211 5 360 5 230 1 376 1 51 1 363 1 55 4 345 1 
220 1 341 2 185 2 25 1 211 2 360 2 204 1 55 2 
224 1 341 3 185 3 211 3 360 3 51 1 55 3 345 1 
220 1 341 1 185 1 211 1 360 1 204 1 55 1 
220 1 341 1 185 1 19 1 211 1 360 1 55 1 363 1 345 1 
27 1 178 1 152 1 157 1 211 3 31 1 119 1 51 1 6 1 75 1 215 1 76 1 163 1 79 1 185 3 164 1 335 1 359 1 81 1 360 4 33 1 166 1 193 1 363 1 55 3 58 1 220 1 311 1 108 1 341 4 17 1 38 1 269 1 131 1 196 1 112 1 345 2 296 1 66 1 224 1 226 1 300 1 135 2 134 1 
224 1 341 2 185 1 211 2 360 2 230 1 376 1 51 1 55 1 
220 1 27 1 341 3 17 1 211 3 369 1 119 1 112 1 345 1 224 2 185 3 335 1 33 1 360 3 301 1 363 1 55 3 58 1 134 1 
341 2 211 2 345 1 245 1 224 1 185 2 360 2 235 1 363 1 55 2 
311 1 152 1 341 1 157 1 269 1 38 1 196 1 51 1 75 1 66 1 226 1 79 1 359 1 360 1 300 1 
311 1 152 1 341 1 157 1 182 1 269 1 38 1 196 1 51 1 75 1 66 1 79 1 101 1 360 1 300 1 
29 1 306 1 160 1 48 2 49 1 31 1 6 1 76 2 217 1 163 1 164 1 258 1 12 1 81 1 235 2 166 1 236 1 263 1 366 1 87 1 131 4 245 2 26 2 135 2 
220 1 341 1 185 1 25 1 211 1 360 1 55 1 134 1 
155 1 373 1 116 1 
373 2 116 2 242 1 285 1 290 1 377 1 
373 1 116 1 
373 1 116 1 
242 1 290 1 
242 1 290 1 
242 1 290 1 
373 1 88 1 116 1 
373 1 88 1 116 1 
373 1 88 1 116 1 
62 1 373 1 116 1 
62 1 373 1 116 1 
62 1 373 1 116 1 
240 1 341 1 185 1 211 1 360 1 55 1 
233 1 255 1 282 1 211 1 327 1 9 1 185 1 360 1 33 1 55 1 105 1 220 1 61 1 240 1 341 1 17 1 144 1 40 1 197 1 345 1 296 1 373 1 248 1 116 1 43 1 204 1 151 1 
179 1 136 2 133 1 39 1 85 2 
136 1 179 1 90 1 
136 1 90 1 133 1 
179 2 136 3 118 1 133 1 39 1 85 1 
179 1 136 2 133 1 39 1 307 1 85 1 
351 1 266 1 3 1 17 4 181 1 348 1 200 1 187 3 114 1 125 1 33 4 301 1 
338 1 237 1 46 1 351 1 266 1 3 2 17 4 348 1 187 3 125 1 249 1 33 4 301 1 
154 2 95 1 29 1 181 1 160 1 7 1 120 4 187 2 190 1 33 3 125 1 366 1 291 1 87 1 17 3 65 1 313 3 272 1 348 1 200 1 132 2 114 1 42 2 317 1 247 2 301 3 
154 4 324 1 95 1 29 2 181 2 160 2 7 2 120 7 187 3 190 1 102 1 33 4 125 1 366 2 265 1 291 1 87 2 17 4 65 2 313 5 272 1 348 1 200 1 132 4 42 4 114 1 317 1 247 3 301 4 
353 1 
66 1 80 1 207 1 
59 1 66 1 
66 1 38 1 269 1 
66 1 14 1 
66 1 38 1 
66 3 67 1 80 2 10 1 38 1 269 1 
281 1 340 1 87 1 138 1 156 1 222 1 306 3 160 1 131 7 22 1 76 3 184 1 286 1 122 2 91 1 26 4 68 1 263 2 
281 1 304 1 156 1 138 2 29 3 306 10 73 3 160 4 31 1 357 1 76 15 184 2 78 1 77 1 286 2 163 1 164 1 122 3 166 1 13 1 263 5 366 3 340 2 87 4 342 1 222 1 65 3 131 31 22 5 174 4 277 1 26 16 68 1 135 2 
156 1 138 1 306 4 160 1 31 2 184 1 76 4 163 2 286 1 164 2 122 2 259 1 166 2 263 3 340 1 87 1 342 1 222 1 131 9 22 1 26 5 68 1 92 1 135 4 
281 1 340 1 87 1 138 1 156 1 222 1 306 3 160 1 131 7 22 1 76 3 184 1 286 1 122 2 26 4 68 1 263 2 
281 1 340 1 87 1 138 1 156 1 222 1 306 3 160 1 131 7 22 1 76 3 184 1 286 1 122 2 26 4 68 1 263 2 
311 1 152 1 268 1 16 2 157 1 72 1 292 1 38 1 234 1 196 1 75 1 140 1 53 2 308 1 66 1 216 1 79 1 24 1 334 1 11 1 250 2 262 2 206 1 
179 1 152 1 136 2 137 1 118 1 253 1 157 1 72 1 234 1 75 1 53 1 358 1 121 1 79 1 11 1 262 1 167 1 365 1 311 1 16 1 292 1 64 1 90 1 133 1 250 1 45 1 
179 1 152 1 136 2 137 1 118 1 253 1 157 1 72 1 234 1 75 1 53 1 121 1 79 1 11 2 289 1 262 1 167 1 365 1 311 1 37 1 16 1 169 1 292 2 63 1 64 1 293 1 90 1 133 1 250 1 45 1 
179 1 152 1 136 2 118 1 253 1 157 1 72 1 234 1 75 1 53 1 358 1 121 1 79 1 11 3 289 1 262 1 167 1 365 1 311 1 268 1 37 1 16 1 169 1 292 3 63 2 64 1 344 1 90 1 133 1 250 1 
152 1 136 2 179 1 118 1 253 1 157 1 75 1 53 1 358 1 121 1 79 1 11 2 289 1 262 1 167 1 311 1 37 1 16 1 169 1 292 2 63 2 344 1 90 1 133 1 250 1 
213 1 
94 1 3 6 95 1 183 2 52 1 334 1 288 1 190 1 189 1 191 2 58 1 104 2 107 1 341 1 241 1 17 5 196 2 243 2 112 1 348 1 66 1 349 2 149 1 247 2 301 2 302 1 27 1 152 2 28 1 157 2 211 1 75 1 120 2 216 1 79 1 33 5 360 1 311 2 220 1 266 3 367 2 38 1 313 2 272 1 372 1 132 2 374 1 228 1 317 1 321 2 175 1 376 1 44 1 134 1 177 4 
220 1 27 1 352 1 28 1 94 1 266 1 3 2 341 1 17 3 211 1 112 1 52 1 374 1 189 1 33 3 360 1 321 1 175 1 376 1 134 1 58 1 177 2 
27 1 94 1 28 1 352 1 3 1 211 1 52 1 189 1 360 1 33 3 191 1 58 1 220 1 266 1 341 1 17 3 112 1 348 1 374 1 376 1 175 1 301 1 134 1 177 3 
27 1 352 1 94 1 28 1 3 2 211 1 52 1 189 1 360 1 33 3 191 1 58 1 104 1 220 1 266 1 341 1 17 3 112 1 348 1 374 1 376 1 175 1 321 1 301 1 134 1 177 3 
94 1 3 7 95 1 98 1 183 2 52 1 288 1 189 1 191 4 58 1 104 4 107 1 341 1 17 5 112 1 243 2 147 1 348 5 113 1 349 2 247 2 301 5 27 1 352 1 28 1 210 1 211 1 360 1 33 5 220 1 266 3 367 2 313 1 272 1 374 1 132 1 317 1 321 4 175 1 376 1 322 1 44 1 134 1 177 6 
94 1 3 4 95 1 183 2 52 1 288 1 189 1 191 2 58 1 104 2 107 1 341 1 241 1 17 4 112 1 243 2 348 1 349 2 247 2 301 2 27 1 28 1 211 1 120 2 360 1 33 4 220 1 266 2 367 2 313 1 272 1 374 1 132 1 317 1 44 1 376 1 175 1 321 2 134 1 177 4 
27 1 94 1 28 1 3 4 95 1 210 1 211 1 183 2 52 1 288 1 189 1 191 2 360 1 33 4 58 1 104 2 220 1 107 1 266 2 341 1 17 4 367 2 243 2 313 1 112 1 272 1 147 1 348 1 132 1 374 1 349 2 317 1 247 2 301 1 321 2 44 1 376 1 175 1 322 1 134 1 177 4 
27 1 94 1 28 1 3 4 95 1 210 1 211 1 183 2 52 1 288 1 189 1 191 2 360 1 33 4 58 1 104 2 220 1 107 1 266 2 341 1 17 4 367 2 243 2 313 1 112 1 272 1 147 1 348 1 132 1 374 1 349 2 317 1 247 2 301 1 321 2 44 1 376 1 175 1 322 1 134 1 177 4 
27 1 94 1 28 1 3 4 95 1 30 2 210 1 211 1 183 2 74 1 52 1 120 2 288 1 189 1 191 2 360 1 33 4 58 1 104 2 220 1 107 1 266 2 341 1 17 4 243 2 313 1 112 1 146 1 272 1 348 1 173 1 132 1 374 1 317 1 301 1 321 2 376 1 175 1 279 2 134 1 177 4 
27 1 94 1 28 1 3 5 95 1 210 1 211 1 183 2 52 1 288 1 189 1 360 1 33 4 191 3 58 1 104 3 220 1 107 1 266 2 341 1 17 4 367 2 243 2 313 1 112 1 272 1 147 1 348 1 113 1 132 1 374 1 349 2 317 1 247 2 301 1 44 1 322 1 376 1 175 1 321 3 134 1 177 5 
27 1 94 1 28 1 3 5 95 1 210 1 211 1 183 2 52 1 288 1 189 1 360 1 33 4 191 3 58 1 104 3 220 1 107 1 266 2 341 1 17 4 367 2 243 2 313 1 112 1 272 1 147 1 348 1 113 1 132 1 374 1 349 2 317 1 247 2 301 1 44 1 322 1 376 1 175 1 321 3 134 1 177 5 
27 1 94 1 28 1 3 4 95 1 30 2 211 1 183 2 74 1 52 1 120 2 288 1 189 1 191 2 33 4 360 1 58 1 104 2 220 1 107 1 266 2 341 1 241 1 17 4 243 2 313 1 112 1 272 1 348 1 132 1 374 1 317 1 301 1 321 2 175 1 376 1 279 2 134 1 177 4 
152 8 47 1 157 7 211 1 49 1 31 2 100 1 6 2 75 2 76 1 358 1 216 1 185 1 79 2 163 2 332 1 164 2 334 1 81 2 360 1 166 2 55 1 264 1 35 1 311 8 108 1 195 2 341 1 38 2 293 1 196 2 131 2 145 1 346 1 171 1 224 1 66 3 26 1 135 4 
29 1 306 1 211 1 160 1 48 1 31 1 6 1 76 2 185 1 163 1 164 1 81 1 235 1 360 1 166 1 263 1 363 1 55 1 366 1 341 1 87 1 65 1 21 1 131 3 345 1 245 1 26 1 203 1 135 2 
340 1 87 1 138 1 156 1 222 1 306 2 160 1 48 1 49 1 131 6 31 1 51 2 6 1 245 1 76 3 163 1 122 1 164 1 26 3 81 1 68 1 235 1 166 1 263 2 135 2 207 1 
304 1 2 1 29 2 306 2 73 3 160 1 48 11 31 2 51 1 6 2 76 6 78 1 163 2 164 2 81 1 235 11 166 2 264 1 263 1 366 1 108 1 87 2 65 2 131 14 22 1 245 4 275 1 174 3 115 1 26 8 319 1 203 1 135 4 
152 1 157 1 211 1 31 1 51 1 6 1 75 1 76 1 79 1 163 1 185 1 164 1 335 1 123 1 359 1 81 1 360 2 166 1 55 1 264 1 311 1 108 1 341 2 38 1 269 1 196 1 131 2 198 1 245 1 66 1 224 1 226 1 26 1 203 1 350 1 300 1 280 1 135 2 
138 1 48 7 99 1 326 1 51 2 6 3 185 1 335 1 235 7 55 1 108 1 340 1 341 3 65 2 196 1 297 2 245 7 22 4 66 2 201 2 26 10 68 1 203 1 300 2 152 3 156 1 157 3 29 2 306 8 160 3 211 1 31 3 75 2 215 2 76 10 358 1 163 3 79 2 122 1 164 3 359 2 81 3 360 3 166 3 264 1 263 4 364 1 311 3 366 2 87 3 222 1 269 2 38 2 131 20 371 2 274 2 224 1 226 2 135 6 
87 1 29 1 306 1 48 1 49 1 131 2 31 1 6 1 22 1 245 1 163 1 164 1 26 2 81 1 235 1 166 1 236 1 135 2 
366 1 306 1 160 1 48 1 49 1 131 2 31 1 6 1 245 1 76 2 163 1 164 1 81 1 12 1 235 1 166 1 263 1 135 2 
29 1 306 2 160 1 48 2 49 1 31 1 6 1 76 2 163 1 164 1 81 1 235 2 166 1 263 1 366 1 87 1 65 1 131 4 245 2 22 1 26 2 135 2 
87 1 29 1 306 1 48 1 131 2 100 1 31 1 6 1 22 1 245 1 163 1 164 1 26 2 81 1 235 1 166 1 236 1 135 2 
366 1 306 1 160 1 48 1 131 2 100 1 31 1 6 1 245 1 76 2 163 1 164 1 81 1 12 1 235 1 166 1 263 1 135 2 
29 1 306 2 160 1 48 2 31 1 100 1 6 1 76 2 163 1 164 1 81 1 235 2 166 1 263 1 366 1 87 1 65 1 131 4 245 2 22 1 26 2 135 2 
29 1 306 2 160 1 48 2 31 1 6 1 76 2 163 1 164 1 81 1 235 2 166 1 263 1 366 1 87 1 65 1 131 4 245 2 22 1 26 2 135 2 
152 1 157 1 31 1 51 1 6 1 75 1 215 1 76 1 79 1 163 1 164 1 359 1 81 1 360 1 166 1 264 1 311 1 108 1 341 1 38 1 269 1 131 2 196 1 66 1 226 1 26 1 300 1 135 2 
152 1 157 1 182 1 31 1 51 1 6 1 75 1 76 1 79 1 163 1 164 1 101 1 81 1 360 1 166 1 264 1 311 1 108 1 341 1 38 1 269 1 131 2 196 1 66 1 26 1 300 1 205 1 135 2 
29 1 306 2 160 1 48 2 31 1 6 1 76 2 163 1 164 1 81 1 235 2 166 1 263 1 366 1 87 1 65 1 131 4 245 2 22 1 26 2 203 1 135 2 
152 1 29 1 157 1 306 2 160 1 48 2 31 1 6 1 75 1 215 1 76 2 79 1 163 1 164 1 359 1 81 1 235 2 360 1 166 1 263 1 366 1 311 1 87 1 341 1 269 1 38 1 293 1 65 1 131 4 22 1 245 2 371 1 66 1 226 1 26 2 300 1 135 2 
29 1 306 1 160 1 211 1 48 1 31 1 6 1 76 1 185 1 163 1 164 1 81 1 360 1 235 1 166 1 363 1 55 1 366 1 341 1 87 1 18 1 65 1 131 3 345 1 22 1 245 1 26 2 203 1 135 2 
0 1 304 1 29 3 306 6 73 1 160 3 31 2 76 10 78 1 163 2 164 2 84 1 259 1 310 1 166 2 263 3 366 3 87 3 129 1 65 3 130 1 131 19 170 1 22 3 298 2 23 1 276 2 174 2 26 9 135 4 
0 2 304 1 73 1 129 1 130 1 131 4 31 1 23 2 298 1 76 2 163 1 164 1 174 1 26 2 259 1 166 1 135 2 
0 2 304 3 29 2 306 3 73 3 160 2 31 2 76 11 78 1 163 2 164 2 84 1 259 1 166 2 263 1 366 2 87 2 129 1 65 2 130 1 131 21 170 1 22 2 298 3 23 1 276 1 174 4 26 10 375 1 135 4 323 1 
0 2 304 2 29 2 306 4 73 2 160 2 31 2 76 9 78 1 163 2 164 2 84 1 259 1 166 2 263 2 366 2 87 2 129 1 65 2 130 1 131 17 170 1 22 2 298 2 23 1 276 1 174 3 26 8 375 1 135 4 
0 1 304 1 156 1 138 1 306 1 160 1 73 1 31 1 76 4 163 1 122 1 164 1 259 1 166 1 263 1 340 1 87 1 222 1 129 1 130 1 131 9 23 1 298 1 174 1 26 5 68 1 135 2 
373 1 299 1 282 1 116 1 144 1 327 1 56 1 127 1 151 1 377 1 
15 1 155 1 
238 1 373 1 209 1 282 1 116 1 144 1 327 1 139 1 151 1 
208 1 88 1 
62 1 285 1 110 1 
220 1 233 1 61 1 240 1 341 1 255 1 211 1 40 1 197 1 345 1 296 1 9 1 185 1 248 1 43 1 360 1 204 1 55 1 105 1 
220 1 233 1 61 1 240 1 341 1 255 1 211 1 40 1 197 1 345 1 296 1 9 1 185 1 248 1 43 1 360 1 204 1 55 1 105 1 
220 1 233 1 61 1 240 1 341 1 255 1 211 1 40 1 197 1 345 1 296 1 9 1 185 1 248 1 43 1 360 1 204 1 55 1 105 1 
208 1 88 1 285 1 
208 1 88 1 285 1 
62 1 110 1 
62 1 285 1 110 1 
168 1 69 1 
180 1 155 1 282 1 211 2 327 1 51 1 7 1 330 1 9 1 185 2 187 1 360 2 33 1 192 1 55 2 15 1 61 1 168 1 221 1 341 2 17 1 144 1 373 1 248 1 116 1 69 1 151 1 
152 2 47 1 157 2 283 1 211 2 31 1 6 1 75 1 354 1 76 1 79 1 163 1 332 1 257 1 164 1 81 1 360 2 166 1 264 1 311 2 108 1 195 2 341 2 38 1 20 1 131 2 314 1 66 1 26 1 203 1 135 2 
311 1 152 1 157 1 38 1 196 1 75 1 315 1 66 1 216 1 79 1 24 1 334 1 336 1 250 1 
311 1 179 1 136 2 152 1 143 1 118 1 253 1 157 1 64 1 75 1 244 1 90 1 358 1 121 1 79 1 133 1 336 1 250 1 
311 2 179 1 136 2 152 2 143 1 118 1 253 1 157 2 64 1 293 1 75 1 244 1 90 1 358 1 121 1 79 1 133 1 336 1 250 1 
311 1 179 1 136 2 152 1 143 1 118 1 253 1 157 1 64 1 75 1 90 1 358 1 121 1 79 1 287 1 133 1 250 1 
96 1 
95 1 325 1 313 1 272 1 348 1 132 1 288 1 317 1 142 1 301 1 
366 2 154 5 87 2 29 2 160 2 65 2 214 1 313 5 297 1 120 10 223 2 132 5 42 5 247 5 301 5 
348 1 266 1 3 1 17 1 33 1 301 1 
152 4 153 2 3 4 95 2 157 4 75 1 216 1 79 1 334 1 288 1 190 2 33 3 57 1 311 4 106 1 291 1 266 2 109 1 17 3 38 1 196 2 313 2 272 2 66 1 132 2 228 2 149 1 317 2 302 1 
348 1 132 1 142 1 301 1 325 1 313 1 207 1 
3 1 95 1 120 1 288 1 33 1 266 1 17 1 367 1 313 1 272 1 348 1 132 1 349 1 317 1 247 1 44 1 301 2 
3 5 95 4 50 1 325 1 333 2 288 4 190 2 142 1 14 2 57 1 59 3 17 5 293 1 65 2 196 1 112 2 297 2 348 2 66 10 67 1 247 6 251 2 301 8 152 3 153 1 154 6 157 3 29 2 160 2 212 2 214 2 75 4 120 12 79 3 162 2 80 2 33 5 362 1 311 3 366 2 266 3 87 2 38 3 269 3 313 9 272 4 273 2 225 1 223 2 132 8 228 1 42 6 317 4 93 2 
154 5 304 1 95 1 29 2 254 1 73 1 160 2 161 1 120 4 288 1 126 1 366 2 87 2 65 2 313 6 272 1 132 4 42 5 174 1 317 1 247 2 301 2 150 1 323 1 
233 1 138 1 95 1 160 1 211 1 214 1 328 1 185 1 288 1 360 1 33 1 55 1 105 1 220 1 340 1 341 1 87 2 17 1 222 1 313 2 272 1 345 1 296 1 223 2 132 2 317 1 204 1 322 1 
178 1 152 1 157 1 211 2 31 1 51 1 6 1 75 1 215 1 76 1 185 2 79 1 163 1 164 1 359 1 81 1 360 3 166 1 55 2 311 1 108 1 341 3 269 1 38 1 131 1 196 1 345 2 296 1 66 1 226 1 300 1 135 2 
154 2 95 1 313 1 272 1 120 4 348 2 132 2 122 1 42 2 288 1 228 1 317 1 247 2 190 1 301 4 
168 1 282 1 5 1 56 1 151 1 
232 1 282 1 151 1 
232 1 282 1 151 1 
232 1 282 1 151 1 
329 1 282 1 151 1 
329 1 282 1 151 1 
329 1 282 1 151 1 
282 1 151 1 
373 1 116 1 
340 2 138 2 87 2 222 1 306 5 160 2 31 1 131 10 22 2 328 1 76 5 163 1 164 1 26 5 259 1 166 1 263 3 135 2 
87 1 29 1 306 1 31 1 131 2 22 1 163 1 164 1 26 2 259 1 166 1 135 2 
366 1 87 1 29 1 306 2 160 1 65 1 31 1 131 4 22 1 76 2 163 1 164 1 26 2 259 1 166 1 263 1 135 2 
340 1 342 1 138 1 306 2 131 3 31 3 22 1 76 2 163 3 164 3 26 1 84 1 259 1 34 1 166 3 263 1 135 6 
304 1 138 3 156 1 29 3 306 12 73 3 160 5 31 5 357 1 76 18 78 1 163 5 122 1 54 1 164 5 84 1 259 1 34 1 166 5 13 1 263 7 366 3 340 3 342 2 87 5 222 2 65 3 131 34 22 5 174 4 277 1 26 16 68 1 135 10 
304 1 156 1 138 1 306 2 160 1 73 1 31 1 76 4 163 1 122 1 164 1 259 1 166 1 263 2 340 1 87 1 222 1 131 8 174 1 26 4 68 1 135 2 323 1 
304 1 138 1 156 1 29 1 306 3 160 1 73 1 31 2 76 5 78 1 163 2 122 1 164 2 54 1 259 1 166 2 263 2 340 1 87 2 222 1 65 1 131 11 22 1 174 2 26 6 68 1 135 4 323 1 
76 1 304 1 163 1 164 1 174 1 26 1 73 1 259 1 166 1 131 2 31 1 135 2 323 1 
304 1 138 1 156 1 29 2 254 1 306 5 73 1 160 2 31 3 161 1 76 7 163 3 122 1 54 1 164 3 259 1 126 1 166 3 263 3 366 1 340 1 342 1 87 3 222 1 65 2 131 17 22 2 174 1 26 10 68 1 150 1 135 6 323 1 
304 1 156 1 138 1 306 2 160 1 73 1 31 1 76 4 163 1 122 1 164 1 259 1 166 1 263 2 340 1 87 1 222 1 131 8 174 1 26 4 68 1 135 2 323 1 
76 1 304 1 163 1 164 1 174 1 26 1 73 1 259 1 166 1 131 2 31 1 135 2 323 1 
304 1 87 1 29 1 73 1 65 1 31 2 131 5 76 2 163 2 164 2 54 1 174 1 26 3 126 1 259 1 166 2 150 1 135 4 323 1 
304 1 254 1 29 3 306 6 73 1 160 2 31 4 161 1 76 7 163 4 164 4 259 1 84 1 126 1 166 4 263 3 366 2 87 3 342 2 65 3 131 16 22 3 174 1 26 9 150 1 135 8 323 1 
340 3 156 2 138 3 87 1 222 1 306 6 160 1 131 7 22 3 76 4 26 3 68 1 263 3 
304 1 87 1 29 1 73 1 65 1 31 2 131 5 76 2 163 2 164 2 174 1 26 3 126 1 84 1 259 1 166 2 150 1 135 4 323 1 
340 1 87 1 342 1 156 1 138 1 222 1 306 3 160 1 131 8 31 2 22 1 76 4 163 2 122 1 164 2 26 4 68 1 166 2 263 2 135 4 
76 3 340 1 87 1 138 1 156 1 122 1 222 1 26 3 306 2 160 1 68 1 131 6 263 2 207 1 
366 1 87 1 29 1 306 2 160 1 65 1 31 1 131 4 22 1 76 2 163 1 54 1 164 1 26 2 166 1 263 1 135 2 
76 1 304 1 174 1 26 1 73 1 131 2 
138 1 156 1 2 1 29 2 306 4 160 3 73 2 31 1 76 9 78 1 163 1 122 1 164 1 166 1 263 3 366 2 340 1 87 3 342 1 222 1 65 2 131 18 22 1 174 2 26 9 68 1 319 1 135 2 
76 1 174 1 131 1 
26 1 73 1 131 1 
366 1 87 1 29 1 306 3 160 1 65 1 31 1 131 6 297 1 22 1 76 3 163 1 164 1 54 1 26 3 166 1 263 2 135 2 
304 1 29 2 254 1 306 2 73 1 160 2 31 1 161 1 76 6 163 1 164 1 259 1 126 1 166 1 263 1 366 2 87 2 65 2 131 12 22 1 174 1 26 6 150 1 135 2 323 1 
340 1 87 1 138 1 222 1 306 2 160 1 131 6 22 1 76 3 26 3 263 1 
340 1 138 1 156 1 342 1 306 2 131 3 31 1 22 1 76 2 163 1 164 1 26 1 68 1 34 1 166 1 263 1 135 2 
341 1 211 1 360 1 230 1 376 1 51 1 176 1 
86 1 305 1 341 1 159 1 211 1 51 1 202 1 219 1 360 1 230 1 376 1 176 1 
311 4 152 4 1 1 157 4 38 1 293 1 196 1 75 1 216 1 66 1 79 1 334 1 103 1 
311 2 152 2 153 1 157 2 269 1 38 1 99 1 75 2 66 1 79 1 309 1 165 1 261 1 70 1 
311 1 136 1 152 1 90 1 79 1 253 1 157 1 133 1 196 1 75 1 
311 2 152 2 47 1 157 2 38 1 293 1 75 1 314 1 358 1 66 1 79 1 
311 5 152 5 1 1 153 1 47 1 157 4 38 2 293 1 196 1 145 1 75 2 216 1 66 3 79 2 334 1 35 1 
311 5 152 5 1 1 153 1 47 1 157 4 38 2 293 1 196 1 370 1 75 2 216 1 66 3 79 2 334 1 35 1 
311 1 152 1 66 1 216 1 79 1 334 1 157 1 38 1 196 1 75 1 207 1 
311 1 152 1 341 2 157 1 38 1 269 1 211 1 196 1 51 1 75 1 66 1 224 1 185 1 226 1 79 1 360 2 300 1 55 1 
220 1 27 1 311 1 152 1 153 1 341 2 157 1 38 2 269 2 211 2 51 1 75 1 66 3 224 1 162 1 185 1 226 1 79 1 360 2 300 1 14 1 55 2 134 1 
27 1 152 2 153 1 157 2 211 2 51 1 75 1 79 1 185 1 162 1 101 1 103 1 360 2 55 2 14 1 311 2 220 1 341 2 269 2 38 2 224 1 66 3 300 1 134 1 
152 3 153 1 3 1 157 3 75 1 79 1 162 1 80 1 103 1 33 2 14 1 311 3 59 1 17 2 269 1 38 1 196 1 111 1 112 1 348 1 66 4 301 1 303 1 
311 3 152 3 59 1 153 1 3 1 17 2 157 3 38 1 269 1 196 1 112 1 75 1 348 1 66 4 162 1 79 1 80 1 103 1 33 2 251 1 301 1 14 1 
311 1 152 1 171 1 79 1 157 1 75 1 
311 7 152 7 195 1 47 1 157 6 269 1 38 2 293 1 294 1 196 2 145 1 75 3 346 1 171 1 358 1 66 3 67 1 79 2 165 1 35 1 70 1 
138 1 283 1 48 1 6 2 51 2 185 1 235 1 55 1 340 1 341 2 293 1 245 1 66 1 201 1 26 3 203 1 68 1 300 1 152 1 156 1 157 1 306 2 211 1 160 1 31 2 75 1 215 1 76 3 163 2 79 1 164 2 122 1 359 1 81 2 360 2 166 2 263 2 311 1 87 1 222 1 269 1 38 1 131 6 371 1 224 1 226 1 135 4 
152 1 3 2 95 2 157 1 212 1 325 1 80 1 187 1 288 2 142 1 33 3 57 1 311 1 59 1 266 1 17 3 196 1 313 1 112 1 272 2 273 1 348 1 66 2 132 1 317 2 251 1 301 1 93 1 
311 2 152 2 157 2 269 1 38 1 293 1 50 1 75 2 171 1 66 2 67 1 79 1 80 1 
311 1 152 1 341 2 157 1 38 1 269 1 211 1 196 1 51 1 75 1 66 1 224 1 185 1 79 1 101 1 360 2 300 1 55 1 
311 1 152 1 153 1 157 1 269 1 38 1 294 1 75 2 66 1 67 1 79 1 165 1 70 1 
82 1 284 1 229 1 51 1 278 1 
220 1 27 1 17 2 128 1 284 2 119 1 51 1 112 1 256 1 348 1 187 1 141 1 82 2 229 1 33 2 301 1 278 2 134 1 58 1 
341 1 257 1 211 1 360 1 229 1 284 1 20 1 278 1 354 1 
128 1 141 1 229 1 
37 1 169 1 292 1 11 1 72 1 234 1 289 1 45 1 
239 1 37 2 4 1 169 2 292 4 72 1 343 1 63 2 234 1 246 1 11 4 32 1 289 3 337 1 
37 1 169 1 89 1 72 1 292 2 63 1 234 1 368 1 11 2 188 1 289 1 45 1 
41 1 37 1 4 2 169 1 246 2 292 3 11 3 72 1 343 1 234 1 289 1 45 1 
60 1 267 1 318 2 289 2 
292 1 11 1 72 1 124 1 234 1 45 1 
339 1 37 1 169 1 292 2 11 2 72 1 63 1 234 1 289 1 45 1 
270 1 
37 1 169 1 292 1 11 1 72 1 234 1 289 1 45 1 
37 1 169 1 289 1 207 1 
37 1 169 1 292 1 11 1 72 1 234 1 289 1 
16 1 292 1 53 1 
36 1 37 1 4 2 169 1 246 1 292 3 11 3 72 1 343 1 234 1 289 1 45 1 
37 1 169 1 158 1 292 2 11 2 72 1 63 1 234 1 289 1 
136 1 179 1 90 1 252 1 292 1 11 1 72 1 32 1 234 1 289 1 45 1 
169 1 292 1 11 1 72 1 234 1 289 1 45 1 
37 1 169 2 292 1 11 1 72 1 234 1 45 1 
169 1 72 2 292 2 312 1 271 1 234 2 218 1 11 2 289 1 45 1 
339 1 239 1 37 1 169 1 72 1 292 3 63 2 234 1 11 3 32 1 289 2 45 1 194 1 
136 2 179 1 37 1 118 1 169 1 72 1 292 2 63 1 234 1 355 1 90 1 133 1 11 2 289 1 45 1 
239 1 37 1 169 1 158 1 72 2 292 4 63 2 234 2 11 4 32 1 289 2 45 1 71 1 
339 1 37 1 4 1 169 1 72 1 292 3 63 1 234 1 11 3 289 1 45 1 
239 1 32 1 289 1 337 1 
169 1 289 1 

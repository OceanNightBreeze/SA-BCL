#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 334 (144,299) (144,299) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 334 (144,299) (144,299) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 334 (144,299) (144,299) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 334 (144,299) (144,299) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 238 343 283 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
276 1 334 1 162 1 298 1 299 1 35 1 289 1 290 1 144 1 8 1 168 1 369 1 52 1 
276 1 334 1 162 1 298 1 299 1 35 1 289 1 290 1 144 1 8 1 168 1 369 1 52 1 
276 1 334 1 162 1 298 1 299 1 35 1 289 1 290 1 144 1 8 1 168 1 369 1 52 1 
276 1 334 1 162 1 298 1 299 1 35 1 289 1 290 1 144 1 8 1 168 1 369 1 52 1 
0 1 255 2 230 1 373 1 276 1 261 1 334 1 162 4 298 1 35 1 289 1 290 1 37 2 166 3 117 3 7 1 8 4 51 1 
331 1 186 1 276 1 162 2 334 1 35 1 289 1 290 1 166 1 5 1 252 1 7 1 8 2 369 1 51 1 52 1 
162 3 261 1 35 1 289 2 290 2 37 1 166 2 266 1 117 1 7 1 8 3 51 1 52 1 
0 1 255 2 230 1 261 3 162 9 334 1 289 2 290 2 142 1 166 5 266 1 117 7 7 1 8 9 51 1 52 1 242 1 373 1 276 1 298 1 35 1 175 1 74 1 37 4 
0 1 255 2 230 1 261 3 162 9 334 1 289 2 290 2 142 1 166 5 266 1 117 7 7 1 8 9 51 1 52 1 242 1 373 1 276 1 298 1 35 1 175 1 74 1 37 4 
216 1 233 1 305 1 
216 1 265 1 57 2 
137 2 10 2 60 2 151 2 284 1 161 1 163 2 108 2 
181 1 137 3 208 1 19 1 111 2 60 2 210 1 89 1 284 1 161 1 90 1 286 1 163 2 188 1 264 2 167 1 341 1 66 1 67 1 270 1 9 2 124 1 32 1 10 3 372 1 151 2 72 1 220 1 348 1 277 2 249 1 224 2 300 1 106 1 206 1 108 2 79 1 
137 1 10 1 115 1 60 1 151 1 161 1 6 1 101 1 163 1 108 1 
137 1 216 1 10 1 151 1 113 1 246 1 222 1 248 1 350 1 48 1 115 1 178 1 305 1 268 1 
137 1 216 1 10 1 60 1 151 1 113 1 222 1 163 1 248 1 48 2 115 1 178 1 305 1 108 1 268 2 
376 1 112 1 48 1 158 1 268 1 
376 1 263 1 216 1 243 1 48 2 305 1 158 1 268 2 
48 1 158 1 268 1 
137 1 10 1 60 1 151 1 161 1 139 1 163 1 376 1 48 1 115 1 6 1 101 1 108 1 268 1 
216 1 
376 1 27 1 216 1 243 1 48 2 305 1 158 1 268 2 
195 2 216 1 330 1 150 1 243 1 257 1 33 2 324 1 24 1 376 2 75 1 213 2 48 5 145 1 93 1 301 1 305 1 158 2 268 5 
270 1 32 1 137 2 21 1 10 2 209 1 111 1 60 1 245 1 151 1 220 1 348 1 163 1 277 1 188 1 264 1 167 1 206 1 66 1 67 1 
284 1 233 1 
309 1 137 2 10 2 60 1 151 2 284 2 163 1 43 1 108 1 
1 1 245 1 159 1 
270 1 137 1 32 1 10 1 111 1 185 1 284 1 220 1 348 1 277 1 188 1 264 1 167 1 206 1 66 1 67 1 
137 3 10 3 209 1 60 3 151 3 284 1 163 3 108 1 
137 1 10 1 115 1 60 1 151 1 6 1 163 1 
309 1 137 1 10 1 115 1 60 1 151 1 43 1 163 1 108 1 
181 1 137 4 208 1 21 1 209 1 111 1 60 3 210 1 89 1 284 1 113 1 161 1 90 1 286 1 187 1 163 3 188 1 264 1 48 1 115 1 167 1 341 1 66 1 67 1 268 1 270 1 9 2 32 1 10 4 372 1 151 3 220 1 348 1 222 1 248 1 277 1 202 1 224 1 300 1 178 1 43 1 206 1 108 2 79 1 
137 2 10 2 350 1 209 1 60 1 151 2 284 1 41 1 163 1 
137 3 216 1 21 1 10 3 209 2 60 3 151 3 294 1 113 1 187 1 222 1 248 1 163 3 48 1 115 1 178 1 43 1 108 1 268 1 
137 2 10 2 209 1 60 2 151 2 245 1 163 2 43 1 159 1 108 1 
270 1 137 1 32 1 10 1 111 1 284 1 220 1 348 1 277 1 188 1 264 1 167 1 206 1 66 1 67 1 
270 1 137 1 136 1 32 1 10 1 111 1 284 1 220 1 348 1 277 1 188 1 264 1 104 1 206 1 66 1 
181 2 208 1 1 2 160 1 232 1 89 1 46 1 90 1 4 1 239 1 341 1 9 2 149 1 372 1 245 2 201 1 249 2 224 4 300 1 77 1 306 1 80 1 159 2 81 1 
137 1 10 1 115 1 60 1 151 1 113 1 173 1 163 1 
137 5 10 5 21 1 209 2 60 4 151 5 284 1 275 1 163 4 350 1 190 1 41 1 43 1 108 1 
137 2 10 2 115 1 60 2 151 2 173 1 6 1 163 2 
203 1 205 1 
203 1 205 1 
189 1 227 1 
189 1 227 1 
189 1 227 1 
64 1 203 1 205 1 
64 1 203 1 205 1 
203 1 240 1 205 1 
189 1 360 1 203 2 280 1 205 2 227 1 
64 1 203 1 205 1 
375 1 203 1 205 1 
375 1 203 1 205 1 
375 1 203 1 205 1 
31 2 360 1 216 1 84 2 126 1 138 1 70 2 143 1 48 2 203 2 102 1 116 3 105 2 205 2 42 1 318 2 169 1 134 1 268 2 
137 2 84 1 60 2 138 1 231 1 284 1 163 2 48 1 116 1 65 1 240 1 318 1 268 1 10 2 11 1 151 2 70 1 296 1 16 1 129 1 203 1 133 1 205 1 105 1 
276 1 334 1 298 1 
331 1 276 1 334 1 
349 1 378 1 331 1 276 3 298 2 362 1 
47 1 349 1 378 1 331 1 276 2 298 1 
378 1 349 2 331 1 276 2 298 1 
330 2 232 1 46 1 140 1 338 2 213 1 48 5 214 1 265 1 93 3 239 1 50 1 268 5 195 1 216 2 150 1 11 1 243 1 219 1 273 1 33 1 14 2 296 1 57 3 16 1 76 1 376 4 155 1 156 2 158 1 305 1 81 1 
330 6 44 1 20 1 112 5 232 3 46 3 338 6 213 2 48 9 214 2 145 1 265 3 93 8 94 1 239 3 118 5 50 2 319 1 268 9 195 2 216 5 150 1 243 1 219 1 33 2 296 4 98 1 57 9 76 3 376 7 156 6 281 1 158 6 305 1 81 3 
330 2 232 1 46 1 140 1 338 2 213 1 48 3 214 1 145 1 265 2 93 3 239 1 50 1 268 3 195 1 216 3 33 1 296 1 14 1 57 4 376 2 76 1 155 1 156 2 305 1 81 1 
330 4 20 1 232 2 46 2 140 1 338 4 213 1 48 4 214 1 145 1 265 3 93 5 239 2 50 1 319 1 268 4 195 1 216 4 33 1 296 2 14 2 57 7 376 3 76 2 155 1 156 4 305 1 281 1 81 2 
188 1 237 1 233 1 
188 1 317 1 
215 1 
188 1 348 1 
188 3 180 1 253 1 237 2 348 1 66 1 
188 1 348 1 66 1 
188 1 71 1 
181 3 160 2 196 1 232 1 259 1 114 1 279 1 223 1 325 2 249 4 130 1 224 7 327 1 77 3 239 1 368 1 95 1 
181 3 160 2 196 1 232 1 259 1 114 1 279 1 223 1 325 2 249 4 130 1 224 7 327 1 77 3 239 1 368 1 95 1 
181 3 160 2 196 1 232 1 259 1 274 1 114 1 279 1 223 1 325 2 249 4 130 1 224 7 327 1 77 3 239 1 368 1 95 1 
181 15 208 1 160 5 184 1 232 4 259 2 46 3 90 1 114 2 337 4 314 1 364 1 49 1 239 4 193 1 368 2 341 1 194 1 95 5 9 2 196 2 76 3 279 1 223 1 130 1 249 16 325 3 224 31 327 1 300 1 154 1 77 10 357 3 81 3 
181 4 208 2 160 3 232 1 259 1 90 2 114 1 239 1 368 1 341 2 194 1 95 1 9 4 196 1 171 1 223 1 279 1 249 5 325 2 130 1 326 1 224 9 300 2 77 4 
359 1 111 1 331 1 88 1 62 1 334 1 162 2 362 1 289 1 290 1 264 1 166 1 117 1 7 1 267 1 119 1 8 2 370 1 51 1 52 1 148 1 32 1 174 1 276 2 298 1 247 1 35 1 277 1 328 1 206 1 
109 1 359 1 182 1 111 1 331 1 88 1 62 1 334 1 162 3 362 1 289 1 290 1 264 1 166 1 117 2 7 1 267 1 8 3 370 1 51 1 52 1 32 1 13 1 174 1 276 2 298 1 247 1 277 1 328 1 206 1 
359 1 182 1 111 1 331 1 88 1 62 1 162 2 334 1 362 1 264 1 166 1 117 2 7 1 267 1 8 2 370 1 51 1 52 1 32 1 13 1 174 1 276 2 298 1 277 1 206 1 
109 1 270 1 32 1 111 1 332 1 88 2 285 1 174 2 348 1 162 1 335 1 313 1 277 1 188 1 289 1 290 1 264 1 316 1 353 1 8 1 267 2 206 1 52 2 
359 1 182 1 111 1 331 1 88 1 62 1 334 1 162 1 362 1 289 1 290 1 264 1 267 1 8 1 370 1 52 1 148 1 32 1 174 1 276 2 298 1 247 1 35 1 277 1 328 1 206 1 
54 1 
137 1 330 2 332 1 335 1 287 1 188 1 3 2 48 5 238 1 93 2 50 1 345 1 195 1 292 2 150 1 10 1 243 3 12 1 151 1 152 1 246 1 348 1 297 4 248 1 57 2 350 1 250 1 251 2 17 1 158 6 305 4 206 1 308 1 111 2 113 1 211 2 260 2 212 2 213 1 264 2 115 1 265 2 29 1 320 1 268 5 270 2 32 1 271 1 216 5 33 1 222 1 36 2 277 2 128 1 178 1 
137 1 113 1 27 1 48 3 115 1 268 3 271 1 216 2 10 1 292 1 243 1 151 1 152 1 246 1 297 2 222 1 248 1 350 1 250 1 17 1 178 1 305 2 158 2 308 1 
137 1 113 1 27 1 48 3 115 1 268 3 271 1 216 3 10 1 243 1 151 1 152 1 246 1 297 3 222 1 248 1 36 1 350 1 250 1 17 1 178 1 158 1 305 3 308 1 
137 1 113 1 27 1 48 3 115 1 268 3 271 1 216 3 10 1 292 1 243 1 151 1 152 1 246 1 297 3 222 1 248 1 36 1 350 1 250 1 17 1 251 1 178 1 305 3 158 2 308 1 
137 1 330 1 288 1 3 2 48 5 238 1 93 1 343 1 345 1 195 1 10 1 292 4 150 1 243 3 151 1 152 1 246 1 297 6 248 1 250 1 350 1 17 1 251 4 305 8 158 7 308 1 113 1 63 1 211 2 260 2 212 2 27 1 213 1 115 1 265 2 268 5 271 1 216 8 33 1 222 1 36 4 38 1 178 1 82 1 
137 1 330 1 3 2 48 4 238 1 93 1 345 1 195 1 10 1 150 1 292 2 243 2 151 1 152 1 246 1 297 4 248 1 57 2 350 1 250 1 17 1 251 2 305 5 158 4 308 1 113 1 211 2 260 2 212 2 213 1 115 1 265 2 268 4 271 1 216 6 33 1 222 1 36 2 128 1 178 1 
137 1 330 1 113 1 211 2 260 2 212 2 3 2 213 1 48 4 115 1 265 2 238 1 93 1 343 1 345 1 268 4 271 1 195 1 216 5 292 2 10 1 150 1 243 2 151 1 33 1 152 1 246 1 297 4 222 1 248 1 36 2 350 1 250 1 38 1 251 2 17 1 178 1 158 4 305 5 308 1 82 1 
137 1 330 1 113 1 211 2 260 2 212 2 3 2 213 1 48 4 115 1 265 2 238 1 93 1 343 1 345 1 268 4 271 1 195 1 216 5 292 2 10 1 150 1 243 2 151 1 33 1 152 1 246 1 297 4 222 1 248 1 36 2 350 1 250 1 38 1 251 2 17 1 178 1 158 4 305 5 308 1 82 1 
137 1 330 1 283 1 113 1 260 1 3 1 213 1 340 1 48 2 115 1 238 1 93 1 343 1 268 2 271 1 195 1 216 2 10 1 150 1 151 1 33 1 152 1 246 1 297 2 222 1 248 1 350 1 250 1 225 1 17 1 178 1 305 2 308 1 
137 1 330 1 113 1 63 1 211 2 260 2 212 2 3 2 213 1 48 4 115 1 265 2 238 1 93 1 343 1 345 1 268 4 195 1 271 1 216 6 150 1 10 1 292 3 243 2 151 1 33 1 152 1 246 1 297 5 222 1 248 1 36 3 38 1 350 1 250 1 17 1 251 3 178 1 305 6 158 5 308 1 82 1 
137 1 330 1 113 1 63 1 211 2 260 2 212 2 3 2 213 1 48 4 115 1 265 2 238 1 93 1 343 1 345 1 268 4 195 1 271 1 216 6 150 1 10 1 292 3 243 2 151 1 33 1 152 1 246 1 297 5 222 1 248 1 36 3 38 1 350 1 250 1 17 1 251 3 178 1 305 6 158 5 308 1 82 1 
137 1 330 1 113 1 260 1 3 1 213 1 48 2 115 1 238 1 93 1 268 2 271 1 195 1 216 2 150 1 10 1 151 1 152 1 33 1 246 1 297 2 222 1 248 1 250 1 350 1 225 1 17 1 178 1 305 2 308 1 
181 3 208 1 160 2 1 1 232 1 89 1 259 1 233 1 284 2 90 1 239 1 341 1 9 2 149 1 196 1 372 1 245 1 223 1 279 1 130 1 249 3 325 1 224 6 300 1 77 2 159 1 
181 6 160 1 208 2 1 11 85 1 232 1 210 1 89 2 284 1 46 1 90 2 337 3 364 1 239 2 193 1 341 2 95 1 346 1 9 4 372 1 245 11 72 1 76 2 249 8 224 14 351 1 300 2 77 2 40 1 204 1 357 3 159 4 81 2 
181 1 137 2 208 1 21 1 111 1 209 1 310 1 60 1 185 1 89 1 210 1 284 1 90 1 163 1 188 1 363 1 264 1 365 1 167 1 341 1 66 1 67 1 270 1 32 1 9 2 10 2 372 1 151 1 220 1 72 1 348 1 277 1 249 1 224 2 300 1 40 1 206 1 159 1 
181 10 137 3 182 1 1 7 232 3 87 2 89 3 284 2 46 2 234 1 90 3 286 2 141 1 188 2 239 3 341 3 95 4 9 6 196 1 10 3 151 1 245 7 348 2 200 2 249 10 300 3 58 2 107 2 206 2 159 7 160 4 208 3 21 1 111 3 209 1 60 1 210 1 259 1 163 1 264 3 167 2 122 1 66 2 67 2 270 1 32 2 372 3 72 1 220 2 277 3 76 2 279 1 223 1 325 1 130 1 224 20 77 8 40 1 81 2 
181 1 137 1 182 1 208 2 209 1 111 8 60 1 332 1 89 2 210 1 312 1 90 2 163 1 335 1 25 1 188 3 264 8 119 1 341 2 270 2 32 2 9 4 124 2 149 1 10 1 372 2 272 1 151 1 374 1 72 1 34 1 348 2 277 7 249 1 224 2 300 2 354 1 177 1 206 2 
181 2 137 1 160 1 1 1 208 1 60 1 232 1 89 1 46 1 90 1 163 1 366 1 239 1 341 1 9 2 10 1 372 1 245 1 151 1 76 1 249 1 224 3 300 1 77 1 40 1 43 1 159 1 108 1 81 1 
9 2 1 1 149 1 208 1 372 1 245 1 89 1 90 1 249 2 224 2 300 1 77 1 239 1 341 1 306 1 159 1 95 1 81 1 
181 2 9 2 160 1 1 1 149 1 208 1 372 1 232 1 245 1 89 1 46 1 90 1 201 1 224 2 300 1 77 1 341 1 159 1 
181 2 208 1 1 2 160 1 232 1 89 1 46 1 90 1 239 1 341 1 95 1 9 2 149 1 372 1 245 2 76 1 249 2 224 4 300 1 77 2 159 2 81 1 
9 2 1 1 208 1 372 1 245 1 89 1 90 1 25 1 249 2 224 2 300 1 77 1 239 1 341 1 306 1 159 1 95 1 81 1 
181 2 9 2 160 1 1 1 208 1 372 1 232 1 245 1 89 1 46 1 90 1 25 1 201 1 224 2 300 1 77 1 341 1 159 1 
181 2 208 1 1 2 160 1 232 1 89 1 46 1 90 1 25 1 239 1 341 1 95 1 9 2 372 1 245 2 76 1 249 2 224 4 300 1 77 2 159 2 81 1 
181 2 208 1 1 2 160 1 232 1 89 1 46 1 90 1 239 1 341 1 95 1 9 2 372 1 245 2 76 1 249 2 224 4 300 1 77 2 159 2 81 1 
181 1 137 1 208 1 111 1 89 1 210 1 284 1 286 1 90 1 188 1 264 1 167 1 341 1 66 1 67 1 270 1 32 1 9 2 10 1 372 1 72 1 220 1 348 1 277 1 249 1 224 2 300 1 206 1 
181 1 136 1 137 1 208 1 111 1 89 1 210 1 284 1 90 1 188 1 264 1 341 1 66 1 270 1 32 1 9 2 10 1 372 1 72 1 220 1 348 1 277 1 249 1 224 2 131 1 300 1 104 1 206 1 
181 2 208 1 1 2 160 1 232 1 89 1 46 1 90 1 239 1 341 1 95 1 9 2 372 1 245 2 76 1 249 2 224 4 300 1 77 2 40 1 159 2 81 1 
181 2 137 1 160 1 1 2 208 1 111 1 232 1 89 1 46 1 286 1 90 1 188 1 264 1 239 1 167 1 119 1 341 1 66 1 95 1 67 1 32 1 9 2 10 1 372 1 245 2 220 1 348 1 277 1 76 1 249 2 224 4 300 1 77 2 107 1 206 1 159 2 81 1 
181 1 137 1 208 1 1 1 232 1 60 1 89 1 46 1 90 1 163 1 239 1 341 1 95 1 9 2 10 1 372 1 151 1 245 1 56 1 76 1 249 2 224 3 300 1 77 1 40 1 43 1 108 1 159 1 81 1 
181 21 45 1 232 5 46 4 90 3 337 4 92 1 239 5 193 1 341 3 194 1 95 4 53 1 9 6 196 1 291 1 293 2 295 1 249 20 300 3 352 1 357 3 208 3 160 4 259 1 262 1 26 1 364 3 28 1 322 1 217 1 218 1 127 1 76 4 278 4 223 1 279 1 130 1 325 1 224 41 326 1 77 8 81 4 
181 18 160 4 208 4 45 1 232 4 259 1 46 3 90 4 337 4 262 1 26 1 364 3 92 1 28 1 239 5 193 1 341 4 194 2 95 3 53 1 9 8 196 1 322 1 217 1 291 1 293 2 218 1 127 1 295 1 278 4 76 4 279 1 223 1 325 1 130 1 249 20 326 1 224 38 300 4 77 7 352 1 357 3 81 4 
181 25 160 7 208 2 45 1 232 8 259 1 46 7 90 2 337 4 262 1 26 1 364 2 28 1 239 8 193 2 341 2 194 1 95 7 53 1 9 4 196 1 322 1 291 1 293 1 218 1 127 1 295 1 278 4 76 7 279 1 223 1 325 1 130 1 249 27 326 1 224 52 300 2 77 14 352 1 204 2 357 4 81 7 
181 10 160 3 208 2 232 3 46 3 90 2 337 2 262 1 364 1 92 1 239 3 193 1 341 2 95 3 9 4 322 1 293 1 127 2 295 1 278 2 76 3 249 9 326 1 224 19 300 2 100 1 77 6 352 1 357 1 81 3 
181 12 160 2 208 3 45 1 232 2 46 2 90 3 337 2 262 1 26 1 364 2 28 1 239 3 341 3 194 2 95 2 53 1 9 6 322 1 291 1 293 2 218 1 127 1 295 2 278 4 76 3 249 14 326 1 224 26 300 3 77 4 352 1 357 2 81 3 
360 1 84 1 126 1 97 1 203 1 70 1 205 1 105 1 318 1 169 1 
231 1 240 1 
84 1 203 1 70 1 367 1 303 1 205 1 105 1 356 1 318 1 
31 1 360 1 216 1 84 1 126 1 138 1 70 1 48 1 203 1 102 1 116 2 105 1 205 1 42 1 318 1 169 1 134 1 268 1 
31 1 360 1 216 1 84 1 126 1 138 1 70 1 48 1 203 1 102 1 116 2 105 1 205 1 42 1 318 1 169 1 134 1 268 1 
31 1 360 1 216 1 84 1 126 1 138 1 70 1 48 1 203 1 102 1 116 2 105 1 205 1 42 1 318 1 169 1 134 1 268 1 
64 1 254 1 280 1 
64 1 254 1 280 1 
375 1 236 1 
375 1 280 1 236 1 
129 1 133 1 
137 2 84 1 231 1 60 2 284 1 163 2 48 1 116 1 65 1 240 1 318 1 268 1 31 1 371 1 10 2 11 1 151 2 70 1 296 1 376 1 16 1 129 1 203 1 133 1 42 1 205 1 105 1 
64 1 254 1 
375 1 280 1 236 1 
181 1 137 2 208 1 86 1 111 2 89 1 210 1 90 1 23 1 188 1 264 2 146 1 341 1 342 1 32 1 9 2 124 2 10 2 347 1 372 1 151 2 72 1 348 1 277 2 249 1 224 2 300 1 40 1 354 1 177 1 206 1 
32 1 182 1 125 1 331 1 111 2 172 1 62 1 276 2 174 1 334 1 298 1 361 1 247 1 362 1 277 2 264 2 119 1 206 1 370 1 
32 1 182 1 331 1 111 1 62 1 276 2 221 1 174 1 334 1 298 1 361 1 247 1 362 1 277 1 264 1 370 1 206 1 
270 1 32 1 111 1 332 1 172 1 174 1 348 1 335 1 277 1 313 1 188 1 264 1 121 1 206 1 
32 1 182 1 125 1 331 1 111 1 172 1 62 1 276 2 174 1 334 1 298 1 361 1 247 1 362 1 277 1 264 1 370 1 206 1 
73 1 
216 1 330 1 93 1 301 1 233 1 305 1 24 1 
330 1 211 1 212 1 213 1 48 1 265 1 93 1 345 1 268 1 195 1 216 2 150 1 243 1 33 1 57 1 158 1 305 1 
135 1 330 8 232 2 46 2 287 1 336 1 188 10 338 6 237 2 48 5 192 2 93 9 239 2 50 2 195 4 150 4 243 3 55 2 198 2 348 3 200 2 248 2 57 12 301 1 302 2 304 2 156 6 305 2 158 5 206 3 307 1 207 1 253 1 110 1 111 3 24 1 213 4 264 3 265 6 317 3 119 1 321 2 66 3 68 2 268 5 270 1 32 4 216 8 69 2 33 4 71 2 277 3 76 2 81 2 
330 5 45 1 232 2 46 2 287 1 337 1 338 5 91 1 213 2 26 1 364 1 48 1 28 1 265 3 93 8 239 2 50 1 268 1 53 1 195 2 216 5 150 2 69 1 243 1 218 1 33 2 57 6 76 2 302 2 103 1 156 5 158 1 305 2 357 1 81 2 
137 1 330 2 232 1 60 1 259 1 161 1 139 1 163 1 213 1 48 1 115 1 93 2 6 1 239 2 268 1 195 1 196 1 10 1 150 1 69 1 151 1 33 1 279 1 302 2 101 1 355 1 108 1 82 1 
195 1 330 1 216 1 150 1 33 1 24 1 213 1 301 1 93 1 305 1 
330 5 216 5 69 1 232 2 46 2 200 1 57 10 76 2 338 5 265 5 93 5 302 2 239 2 156 5 81 2 
216 1 48 1 243 1 305 1 158 1 268 1 
207 2 110 1 330 2 111 4 332 1 287 2 335 1 188 1 213 2 264 4 48 3 145 1 29 1 147 1 93 2 50 2 268 3 270 2 32 1 195 2 150 1 243 2 12 1 33 2 15 1 348 1 277 4 158 4 206 1 
181 1 137 3 208 1 111 1 60 2 210 1 89 1 284 1 161 1 90 1 286 1 163 2 188 1 264 1 167 1 341 1 66 1 67 1 270 1 9 2 32 1 10 3 372 1 151 2 220 1 348 1 277 1 224 1 300 1 206 1 108 2 79 1 
195 1 330 2 216 4 150 1 33 1 287 1 57 4 338 2 213 1 325 1 265 2 93 1 156 2 50 1 305 2 
84 1 70 1 120 1 
84 1 70 1 120 1 
170 1 129 1 84 1 70 1 169 1 
84 1 70 1 120 1 
84 1 70 1 344 1 
84 1 70 1 344 1 
84 1 70 1 344 1 
84 1 70 1 
203 1 205 1 
181 4 208 1 160 2 45 1 232 1 259 1 90 1 337 1 364 1 239 1 341 1 9 2 196 1 223 1 279 1 325 1 249 4 130 1 224 8 326 1 300 1 77 2 357 1 
181 5 160 2 208 2 45 1 232 1 259 1 90 2 337 2 364 1 239 2 193 1 341 2 95 1 9 4 196 1 244 1 76 1 279 1 223 1 325 1 130 1 249 6 224 11 326 1 300 2 77 3 357 1 81 1 
181 10 208 3 160 3 45 1 232 3 259 1 46 2 90 3 337 1 26 1 364 1 28 1 239 3 341 3 194 1 95 1 53 1 9 6 196 1 244 1 218 1 76 2 279 1 223 1 325 1 130 1 249 9 224 19 326 1 300 3 77 4 357 1 81 2 
181 7 208 3 160 3 45 1 232 2 259 1 46 1 90 3 337 1 26 1 364 1 28 1 239 3 341 3 194 1 95 2 53 1 9 6 196 1 244 1 218 1 76 2 279 1 223 1 325 1 130 1 249 10 224 17 326 1 300 3 77 5 357 1 81 2 
181 4 208 1 160 2 45 1 232 1 259 1 90 1 337 1 364 1 239 1 341 1 9 2 196 1 223 1 279 1 325 1 249 4 130 1 224 8 326 1 300 1 77 2 357 1 
181 6 208 1 160 1 45 1 232 2 46 2 90 1 337 1 26 1 364 1 28 1 239 2 341 1 95 1 53 1 9 2 218 1 76 2 249 6 224 12 326 1 300 1 77 2 357 1 81 2 
181 8 208 4 160 3 45 1 232 2 259 1 46 1 90 4 337 1 26 1 364 1 28 1 239 3 341 4 194 2 95 2 53 1 9 8 196 1 244 1 218 1 76 2 279 1 223 1 325 1 130 1 249 10 224 18 326 1 300 4 77 5 357 1 81 2 
181 7 208 4 160 3 45 1 232 2 46 2 90 4 337 1 26 1 364 1 92 1 28 1 239 3 341 4 194 2 95 3 53 1 9 8 218 1 76 3 249 9 224 16 326 1 300 4 77 6 357 1 81 3 
181 4 196 3 160 3 232 1 259 3 223 2 279 1 130 1 249 3 224 7 77 6 239 1 95 3 
181 8 208 4 160 3 45 1 232 2 259 1 46 1 90 4 337 1 26 1 364 1 92 1 28 1 239 3 341 4 194 2 95 1 53 1 9 8 196 1 218 1 76 2 279 1 223 1 325 1 130 1 249 10 224 18 326 1 300 4 77 4 357 1 81 2 
181 4 9 4 160 2 208 2 196 1 232 1 259 1 90 2 279 1 223 1 325 1 249 4 130 1 224 8 300 2 77 3 239 1 341 2 194 1 95 1 
181 3 196 1 160 2 232 1 233 1 259 1 223 1 279 1 325 1 130 1 249 3 224 6 77 2 239 1 
181 2 9 2 160 1 208 1 232 1 244 1 46 1 90 1 76 1 249 2 224 4 300 1 77 2 239 1 341 1 81 1 95 1 
181 4 160 1 232 1 46 1 337 2 76 1 364 1 249 3 224 7 77 2 239 1 193 1 357 1 81 1 95 1 
181 12 160 5 208 2 232 3 259 2 46 2 90 2 337 2 30 1 239 3 193 1 341 2 194 2 95 4 9 4 196 2 76 2 279 1 223 1 325 1 130 1 249 11 224 23 351 1 300 2 77 9 204 1 357 2 81 2 
181 1 224 1 337 1 
249 1 224 1 357 1 
181 3 9 2 208 1 160 2 244 1 232 1 46 1 90 1 200 1 76 1 249 3 224 6 300 1 77 3 239 1 341 1 81 1 95 1 
181 6 208 1 160 1 45 1 232 2 46 2 90 1 337 1 26 1 364 1 28 1 239 2 341 1 95 1 53 1 9 2 218 1 76 2 249 6 224 12 326 1 300 1 77 2 357 1 81 2 
181 3 196 1 160 1 232 1 259 1 279 1 249 3 224 6 77 2 239 1 95 1 
181 2 9 2 160 1 196 1 208 1 259 1 90 1 223 1 249 1 130 1 224 3 300 1 77 2 30 1 341 1 194 1 95 1 
181 5 9 2 208 1 196 2 160 3 232 2 259 2 90 1 279 1 249 5 326 1 224 10 300 1 77 5 239 2 355 1 341 1 95 2 
9 2 208 1 90 1 249 2 326 1 224 2 300 1 77 1 239 1 341 1 81 1 95 1 
181 2 9 2 160 1 208 1 232 1 46 1 90 1 76 1 249 2 326 1 224 4 300 1 77 2 239 1 341 1 81 1 95 1 
181 2 9 6 208 3 196 1 160 1 259 1 90 3 249 1 92 1 224 3 326 1 300 3 30 1 77 2 341 3 194 1 95 1 
181 18 208 5 160 7 184 1 232 5 259 3 46 3 90 5 337 4 314 1 364 1 92 1 30 1 239 5 193 1 341 5 194 2 95 5 9 10 196 3 244 1 76 3 279 2 223 1 325 1 130 1 249 16 326 1 224 34 154 1 300 5 77 12 357 3 81 3 
137 1 10 1 350 1 151 1 284 1 258 1 41 1 
137 1 10 1 282 1 151 1 284 1 258 1 350 1 132 1 41 1 329 1 241 1 228 1 
188 1 270 1 32 1 264 1 111 1 332 1 233 1 348 1 206 1 335 1 277 1 
270 1 32 1 137 2 10 2 209 1 111 1 60 1 151 1 284 1 220 1 348 1 163 1 277 1 188 1 264 1 167 1 206 1 66 1 
207 1 137 2 111 1 209 1 60 1 284 1 113 1 163 2 188 3 264 1 115 1 167 1 66 2 32 1 10 2 151 2 71 1 220 1 348 2 222 1 277 1 304 1 206 1 
207 1 136 1 137 2 111 2 209 1 60 1 284 1 113 1 22 1 163 2 188 3 264 2 115 1 66 2 32 1 10 2 151 2 71 1 220 1 348 2 222 1 277 2 304 1 206 1 
270 1 83 1 207 1 32 1 216 1 111 3 22 1 71 1 348 1 248 1 277 3 188 4 264 3 237 1 48 2 317 1 304 1 305 1 157 1 158 1 206 1 66 1 268 2 
270 1 207 1 32 1 216 1 111 3 22 1 71 1 198 1 348 1 248 1 277 3 188 4 264 3 237 1 48 2 317 1 304 1 305 1 158 1 206 1 66 1 268 2 
32 1 264 1 111 1 272 1 206 1 277 1 
270 2 124 1 253 1 32 3 182 1 111 7 272 1 374 1 312 1 34 1 348 2 277 6 188 3 264 7 165 1 39 1 119 1 177 1 179 1 206 2 66 1 
181 3 137 2 1 1 160 2 208 2 209 1 111 1 232 1 60 1 87 1 89 2 284 2 259 1 90 2 286 1 23 1 163 1 188 1 264 1 239 1 119 1 167 1 341 2 66 1 67 1 32 1 9 4 196 1 10 2 372 2 245 1 151 1 220 1 348 1 277 1 279 1 223 1 325 1 249 3 130 1 224 6 300 2 77 2 40 1 107 1 206 1 159 1 
330 1 110 1 111 1 24 1 188 2 213 2 264 1 237 1 48 3 192 1 93 1 317 1 321 1 268 3 68 1 270 1 195 2 216 1 150 2 243 1 33 2 198 1 248 1 277 1 376 1 301 1 305 1 158 2 
253 1 32 2 111 2 272 1 348 1 336 1 277 2 188 2 264 2 237 1 119 1 206 1 66 1 
188 1 270 1 32 1 264 4 111 4 332 1 22 1 119 1 348 1 206 1 335 1 123 1 277 4 
207 1 32 2 111 2 348 1 199 1 277 2 141 1 188 1 264 2 165 1 39 1 226 1 206 1 66 1 
270 1 32 1 264 1 331 1 111 1 62 1 276 1 334 1 206 1 277 1 
32 1 182 1 86 1 111 2 348 1 277 2 188 1 264 2 119 1 177 1 206 1 
207 1 270 1 32 2 111 5 332 1 374 1 34 1 348 2 335 1 277 4 188 3 264 5 119 1 177 1 206 2 123 1 
207 1 270 1 32 2 111 5 332 1 374 1 348 2 335 1 277 4 164 1 188 3 264 5 119 1 177 1 206 2 123 1 
270 1 32 1 137 2 136 1 10 2 209 1 111 1 60 1 151 1 284 1 220 1 348 1 163 1 277 1 188 1 264 1 206 1 66 1 
207 1 253 1 32 2 111 1 348 1 277 1 188 1 264 1 165 1 39 1 179 1 206 1 66 1 
269 1 137 1 10 1 339 1 347 1 146 1 191 1 151 1 342 1 
339 1 315 1 311 1 
269 1 229 1 339 1 191 1 284 1 
269 2 216 1 229 2 323 1 284 1 113 1 311 1 222 1 187 1 248 1 376 1 339 1 48 2 115 1 191 2 315 1 178 1 305 1 268 2 
166 1 233 1 7 1 51 1 
289 1 290 1 166 1 7 1 8 1 162 1 51 1 
267 1 8 1 52 1 
289 1 290 1 176 1 96 1 166 1 5 2 7 1 8 3 78 1 162 3 51 1 35 1 
289 1 290 1 255 1 166 1 117 1 7 1 8 2 162 2 51 1 
373 1 276 1 162 1 298 1 334 1 35 1 289 1 290 1 37 1 166 1 8 1 
289 1 290 1 166 1 7 1 8 1 162 1 35 1 
289 1 290 1 7 2 8 1 162 1 51 1 35 1 
256 1 197 1 162 2 35 1 99 1 289 2 290 2 166 1 7 1 8 2 
162 3 261 1 35 1 289 1 74 1 290 1 142 1 37 1 166 2 117 2 7 1 8 3 51 1 
331 1 276 2 162 2 298 1 334 1 35 1 362 1 289 1 290 1 166 1 117 1 7 1 8 2 51 1 59 1 
255 1 230 1 162 4 261 1 35 1 289 2 290 2 37 1 166 2 117 2 7 1 8 4 51 1 
289 1 290 1 166 1 7 1 8 1 162 1 51 1 35 1 
162 4 261 1 289 1 290 1 37 1 377 1 176 1 166 3 5 1 117 2 7 2 8 4 78 1 51 2 
183 1 242 1 162 2 153 1 35 1 289 1 290 1 166 1 117 1 7 1 8 2 51 1 
289 1 290 1 176 2 166 1 5 2 7 1 18 1 8 3 78 1 162 3 51 1 35 1 
166 2 2 1 235 1 358 2 
289 1 290 1 333 1 8 1 162 1 35 1 
74 1 289 1 290 1 166 1 117 1 7 1 8 2 162 2 51 1 35 1 
61 1 
289 1 290 1 166 1 7 1 8 1 162 1 51 1 35 1 
74 1 289 1 290 1 166 1 5 1 117 1 7 1 8 3 162 3 51 1 35 1 
37 1 377 1 166 1 261 1 
166 1 7 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 56 (41,48) 30 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 56 145 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 56 (41,48) 30 176 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 34 27 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 34 27 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 34 27 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 34 27 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 34 27 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (53,96) (183,296) (183,296) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (36,62,211) (196,253,274) (196,253,274) (196,253,274) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (36,62,211) (196,253,274) (196,253,274) (196,253,274) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (36,62,211) (196,253,274) (196,253,274) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (36,62,211) (196,253,274) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 118 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 56 145 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 56 (41,48) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 331 153 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 56 (41,48) (41,48) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 124 335 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 124 335 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 116 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (53,96) (53,96) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (36,62,211) (36,62,211) (36,62,211) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (36,62,211) (36,62,211) (36,62,211) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (36,62,211) (36,62,211) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 56 (41,48) 30 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 159 74 130 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 118 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 34 (202,333) (202,333) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 118 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 5 259 2 261 1 188 1 142 9 306 1 227 1 103 2 147 9 151 2 312 1 152 1 198 4 155 1 158 1 318 1 281 1 284 1 32 1 165 1 329 1 76 3 252 7 299 1 
222 5 259 2 261 1 188 1 142 9 306 1 227 1 103 2 147 9 151 2 312 1 152 1 198 4 155 1 158 1 318 1 281 1 284 1 32 1 165 1 329 1 76 3 252 7 299 1 
222 2 261 1 188 1 142 3 165 1 103 2 147 3 151 2 198 1 76 1 155 1 252 1 158 1 
135 1 136 1 222 5 259 2 261 1 188 1 142 9 306 1 227 1 16 1 103 2 147 9 151 2 312 1 198 4 155 2 58 1 158 1 318 2 32 1 284 2 164 1 165 1 329 2 76 3 252 6 299 1 82 1 
135 1 136 1 222 5 259 2 261 1 188 1 142 9 306 1 227 1 16 1 103 2 147 9 151 2 312 1 198 4 155 2 58 1 158 1 318 2 32 1 284 2 164 1 165 1 329 2 76 3 252 6 299 1 82 1 
135 1 136 1 222 6 259 2 261 1 188 1 142 10 306 1 227 1 16 1 103 2 147 10 151 2 312 1 198 5 155 2 58 1 158 1 318 2 32 1 284 2 164 1 165 1 329 2 76 4 252 7 299 1 82 1 
135 1 136 1 222 4 259 1 261 1 188 1 142 7 306 1 227 1 16 1 103 2 147 7 151 2 312 1 198 3 155 2 58 1 158 1 318 2 284 2 164 1 165 1 329 2 76 2 252 4 299 1 82 1 
222 3 318 1 259 2 261 1 32 1 284 1 188 1 142 4 165 1 329 1 227 1 103 1 147 4 151 1 198 2 76 1 252 3 299 1 
222 1 135 1 261 1 163 1 284 1 188 1 142 2 165 1 329 1 103 1 147 2 195 1 151 1 155 1 82 1 133 1 
185 1 90 1 67 1 100 1 17 1 51 1 309 1 311 1 173 1 52 1 106 1 294 1 57 1 111 1 
109 1 
59 1 17 2 89 1 247 1 106 1 20 1 109 1 57 2 
221 1 59 1 28 1 89 1 205 1 160 1 282 1 43 1 242 1 189 2 17 5 19 1 106 2 290 1 20 2 109 1 40 2 57 5 201 2 
89 1 118 1 109 1 
109 1 327 2 277 1 
185 2 51 2 309 2 69 1 173 2 90 1 52 2 111 2 
185 1 223 1 90 1 30 1 48 1 325 1 166 1 51 1 309 1 173 1 52 1 175 1 22 2 56 1 111 1 
185 1 51 1 309 1 173 1 90 1 52 1 294 1 67 1 111 1 100 1 
185 1 89 1 280 1 92 1 191 1 244 1 17 1 51 1 52 1 109 1 294 1 57 1 298 1 204 1 
185 1 89 1 280 1 191 1 17 2 51 1 309 1 173 1 52 1 109 1 294 1 57 2 298 1 204 1 111 1 
17 1 106 1 20 1 197 1 57 1 
59 1 17 2 89 1 237 1 106 1 20 1 109 1 57 2 
17 1 20 1 57 1 
60 1 185 2 94 1 51 2 309 1 173 1 69 2 52 2 111 1 
213 1 224 1 251 1 
223 1 22 1 56 1 145 1 
69 1 118 1 
185 3 51 3 309 3 173 1 69 1 52 3 93 1 111 3 
185 1 51 1 309 1 52 1 294 1 67 1 111 1 
60 1 185 1 51 1 309 1 173 1 52 1 94 1 294 1 111 1 
185 3 223 1 280 1 90 1 30 1 93 1 94 1 48 1 191 1 17 1 51 3 309 3 173 2 52 3 22 1 294 1 176 1 56 1 57 1 298 1 204 1 301 1 111 3 180 1 
185 2 51 2 309 1 69 1 52 2 92 1 93 1 121 1 111 1 
185 3 280 1 94 1 93 2 191 1 17 1 51 3 309 3 173 1 52 3 109 1 294 1 23 1 57 1 298 1 204 1 301 1 111 3 180 1 
185 2 224 1 93 1 94 1 51 2 309 2 173 1 52 2 251 1 111 2 
223 1 22 1 56 1 
331 1 223 1 22 1 
1 1 139 1 260 1 2 1 224 2 302 1 4 1 187 1 303 1 13 1 50 1 148 1 104 1 150 4 272 1 161 1 243 1 123 2 127 2 213 2 332 1 287 1 251 2 300 2 
185 1 51 1 280 1 309 1 52 1 294 1 111 1 15 1 
185 1 51 1 223 1 309 1 52 1 93 1 22 1 56 1 301 1 111 1 
185 5 321 1 92 1 93 2 94 1 121 1 51 5 309 4 173 1 69 1 52 5 301 1 278 1 111 4 
185 2 51 2 309 2 52 2 294 1 15 1 67 1 111 2 
167 1 228 1 181 1 
320 1 279 1 47 1 342 1 167 2 181 2 
167 1 181 1 
167 1 181 1 
279 1 47 1 
279 1 47 1 
279 1 47 1 
167 1 257 1 181 1 
167 1 257 1 181 1 
167 1 257 1 181 1 
167 1 98 1 181 1 
167 1 98 1 181 1 
167 1 98 1 181 1 
84 1 283 2 322 1 66 3 162 2 119 1 328 1 167 2 169 2 17 2 129 2 313 2 109 1 338 1 342 1 57 2 79 1 181 2 83 1 
185 2 46 1 228 1 17 1 51 2 309 2 230 1 52 2 105 1 313 1 57 1 111 2 283 1 66 1 167 1 169 1 69 1 129 1 292 1 248 1 341 1 343 1 181 1 83 1 
318 1 163 1 284 2 168 1 267 2 
318 1 284 1 329 1 
163 1 284 1 329 1 
318 2 163 1 284 3 326 1 168 1 267 1 
318 1 208 1 163 1 284 2 168 1 267 1 
0 2 221 3 89 1 302 1 186 1 189 1 13 1 14 1 17 5 229 2 230 1 104 1 269 1 271 1 106 4 20 1 109 2 275 1 201 1 57 5 277 1 59 1 205 2 206 1 31 1 327 3 243 1 214 2 248 1 290 1 40 1 341 1 
0 6 221 8 89 1 302 3 189 2 13 3 99 1 17 9 230 4 231 1 104 3 269 2 271 1 106 7 20 6 197 5 109 5 110 1 57 9 201 2 277 3 59 1 112 5 205 6 206 2 31 3 242 1 327 9 243 3 245 1 214 6 68 1 38 1 290 1 40 2 
221 3 0 2 89 1 302 1 189 1 13 1 14 1 17 3 229 1 230 1 269 1 104 1 106 2 109 3 275 1 201 1 57 3 277 2 205 2 206 1 31 1 242 1 327 4 243 1 214 2 40 1 
0 4 221 5 89 1 302 2 189 1 13 2 14 1 99 1 17 4 229 2 230 2 231 1 269 1 104 2 106 3 109 4 275 1 201 1 57 4 277 3 205 4 206 1 31 2 327 7 242 1 243 2 214 4 38 1 40 1 
24 1 
118 1 276 1 254 1 
45 1 276 1 
276 1 156 1 
337 1 5 1 276 3 254 2 156 1 144 1 
337 1 276 1 156 1 
295 1 276 1 
27 1 150 1 154 1 34 1 132 1 300 1 
27 1 150 1 154 1 34 1 300 1 
27 1 150 1 154 1 34 1 300 1 
27 1 150 1 154 1 34 1 300 1 
27 1 150 1 154 1 34 1 300 1 
183 1 223 1 262 2 239 2 142 1 9 1 96 1 103 1 147 1 151 1 22 1 296 1 297 1 155 2 157 2 
262 1 239 1 142 1 165 1 36 1 103 1 147 1 196 1 151 1 22 1 274 1 155 1 253 1 315 1 157 1 220 1 
262 1 239 1 142 1 165 1 36 1 103 1 147 1 196 1 151 1 73 1 22 1 274 1 155 1 253 1 157 1 220 1 
262 1 239 1 142 2 307 1 36 1 103 1 147 2 151 1 22 1 274 1 252 1 297 1 155 1 253 1 315 1 157 1 220 1 
147 1 262 1 239 1 22 1 142 1 155 1 252 1 253 1 315 1 157 1 307 1 36 1 
39 1 
185 1 86 1 89 1 263 1 92 1 8 5 189 1 191 1 17 4 193 3 20 5 108 3 109 1 199 1 201 1 204 1 277 2 113 1 280 1 205 1 210 1 290 1 294 1 40 1 217 2 298 1 221 1 141 2 226 3 51 1 310 1 52 1 54 2 57 4 317 2 59 2 236 1 64 1 244 1 339 1 178 1 80 1 
221 1 185 1 86 1 89 1 263 1 92 1 141 2 8 5 189 1 191 1 226 3 17 4 51 1 193 3 310 1 52 1 20 5 108 3 109 1 199 1 54 2 201 1 57 4 204 1 317 2 277 2 59 2 236 1 113 1 205 1 280 1 64 1 210 1 244 1 290 1 40 1 294 1 217 2 339 1 178 1 298 1 80 1 
185 1 86 1 89 1 92 1 8 4 189 1 191 1 17 4 193 2 268 1 20 4 108 2 109 1 201 1 204 1 113 1 280 1 205 1 117 2 215 2 290 1 294 1 40 1 217 2 298 1 221 1 141 2 226 2 51 1 310 1 52 1 57 4 59 2 236 1 64 1 327 2 244 1 336 1 80 1 
185 1 86 1 89 1 92 1 264 1 8 4 189 1 191 1 17 5 193 2 268 1 269 1 20 6 108 2 109 2 22 2 201 1 204 1 277 2 113 1 205 2 280 1 286 1 290 1 40 1 294 1 217 2 298 1 221 2 223 2 141 2 226 2 51 1 310 1 52 1 54 2 57 5 317 2 59 3 236 1 319 1 64 1 241 1 327 2 244 1 178 1 80 1 
185 1 86 1 92 1 8 2 191 1 17 3 51 1 310 1 52 1 20 2 108 1 57 3 204 1 59 1 236 1 113 1 280 1 64 1 244 1 247 1 294 1 298 1 
185 1 86 1 89 1 92 1 8 3 191 1 17 3 51 1 193 1 310 1 52 1 20 1 109 1 57 3 204 1 59 1 236 1 113 1 280 1 64 1 244 1 247 1 294 1 298 1 
185 1 86 1 89 1 92 1 8 3 191 1 226 1 17 3 51 1 193 1 310 1 52 1 20 2 108 1 109 1 57 3 204 1 59 1 236 1 113 1 280 1 64 1 244 1 247 1 294 1 298 1 
221 1 185 1 86 1 89 5 263 1 92 1 141 2 8 6 189 1 191 1 226 4 17 5 193 4 51 1 310 1 52 1 20 7 108 4 199 1 109 5 54 2 201 1 57 5 204 1 317 2 277 2 59 3 236 1 113 1 205 1 280 1 64 1 210 1 244 1 37 1 247 1 290 1 40 1 294 1 217 2 339 1 178 1 298 1 80 1 
185 1 86 1 89 1 92 1 8 4 189 1 191 1 17 4 193 2 268 1 20 4 108 2 109 2 201 1 204 1 277 2 113 1 280 1 205 1 290 1 294 1 40 1 217 2 298 1 221 1 141 2 226 2 51 1 310 1 52 1 54 2 57 4 317 2 59 2 236 1 64 1 327 2 244 1 178 1 80 1 
221 1 185 1 86 1 89 1 92 1 141 2 8 4 189 1 191 1 226 2 17 4 193 2 51 1 310 1 52 1 20 4 108 2 109 1 199 1 54 2 57 4 201 1 204 1 317 2 277 2 59 2 236 1 113 1 205 1 280 1 64 1 210 1 244 1 290 1 40 1 294 1 217 2 339 1 178 1 298 1 80 1 
221 1 185 1 86 1 89 1 92 1 141 2 8 4 189 1 191 1 226 2 17 4 193 2 51 1 310 1 52 1 20 4 108 2 109 1 199 1 54 2 57 4 201 1 204 1 317 2 277 2 59 2 236 1 113 1 205 1 280 1 64 1 210 1 244 1 290 1 40 1 294 1 217 2 339 1 178 1 298 1 80 1 
221 1 185 1 86 1 89 1 92 1 141 2 8 4 189 1 143 1 191 1 226 2 17 4 193 2 51 1 310 1 52 1 20 4 108 2 109 1 57 4 201 1 204 1 59 2 236 1 113 1 205 1 280 1 64 1 117 2 120 1 210 1 327 2 244 1 215 2 290 1 336 1 40 1 294 1 217 2 298 1 80 1 
185 1 223 2 260 2 2 2 4 1 93 1 187 2 10 1 51 1 194 1 50 2 309 1 150 2 52 1 272 2 22 4 111 1 166 1 123 4 126 1 127 1 332 2 334 1 73 1 300 1 179 1 
185 1 224 1 260 1 2 1 302 1 94 1 303 1 187 1 11 1 13 1 50 1 51 1 148 1 309 1 104 1 52 1 150 3 272 1 111 1 31 1 123 2 243 1 127 2 213 1 332 1 173 1 174 1 251 1 300 1 
2 1 260 1 44 1 302 1 118 1 4 1 303 1 187 1 34 1 123 2 13 1 127 2 332 1 50 1 148 1 69 1 333 1 150 5 71 1 272 1 202 1 300 3 344 1 
184 1 138 1 260 2 2 1 140 3 224 4 302 2 303 2 187 2 11 1 13 1 50 2 148 1 104 2 270 1 150 14 272 2 234 1 235 1 61 3 31 2 123 4 243 1 127 6 213 11 332 2 69 1 334 1 340 1 251 11 218 1 179 1 300 8 
182 1 185 1 223 1 224 1 260 1 2 1 93 1 187 1 145 1 11 1 308 1 51 1 50 1 309 1 52 1 150 2 272 1 22 1 56 1 316 1 111 1 123 2 127 1 332 1 334 1 301 1 179 1 300 1 
185 1 223 1 2 1 260 1 6 1 93 1 187 1 123 2 11 1 127 1 50 1 51 1 332 1 309 1 150 1 52 1 272 1 22 1 179 1 301 1 111 1 
1 1 224 1 2 1 260 1 302 1 4 1 303 1 187 1 123 2 213 1 332 1 50 1 104 1 150 2 272 1 234 1 251 1 300 2 
224 1 2 1 260 1 4 1 303 1 187 1 123 2 243 1 13 1 127 2 213 1 332 1 50 1 148 1 287 1 150 2 272 1 251 1 
260 1 2 1 224 2 302 1 4 1 187 1 303 2 13 1 50 1 148 1 104 1 150 4 272 1 234 1 31 1 123 2 243 1 127 2 213 2 332 1 251 2 300 2 
1 1 224 1 2 1 260 1 302 1 303 1 187 1 10 1 123 2 213 1 332 1 50 1 104 1 150 2 272 1 234 1 251 1 300 2 
224 1 2 1 260 1 303 1 187 1 10 1 123 2 243 1 13 1 127 2 213 1 332 1 50 1 148 1 287 1 150 2 272 1 251 1 
260 1 2 1 224 2 302 1 187 1 303 2 10 1 13 1 50 1 148 1 104 1 150 4 272 1 234 1 31 1 123 2 243 1 127 2 213 2 332 1 251 2 300 2 
224 2 2 1 260 1 302 1 31 1 303 2 187 1 243 1 123 2 13 1 127 2 213 2 332 1 50 1 148 1 104 1 150 4 272 1 234 1 251 2 300 2 
223 1 22 1 48 1 56 1 
331 1 223 1 153 1 22 1 
260 1 2 1 224 2 302 1 187 1 303 2 11 1 13 1 50 1 148 1 104 1 150 4 272 1 234 1 31 1 123 2 243 1 127 2 213 2 332 1 251 2 300 2 
73 1 22 1 48 1 56 1 41 1 
185 1 260 1 2 1 224 1 302 1 94 1 303 1 187 1 11 1 13 1 102 1 50 1 51 1 309 1 104 1 52 1 150 3 272 1 234 1 111 1 31 1 243 1 123 2 127 1 213 1 332 1 173 1 251 1 300 2 
260 3 187 3 97 1 13 5 104 4 18 1 272 3 21 2 202 1 116 1 31 4 285 4 122 1 123 6 34 1 124 1 127 21 216 1 291 1 130 1 293 1 218 3 300 20 140 3 44 1 302 5 303 7 305 1 50 3 148 3 150 41 314 1 234 4 235 1 159 1 61 4 243 4 333 1 72 1 71 1 335 1 74 1 344 1 
260 4 140 3 44 1 302 5 187 4 303 7 305 1 97 1 13 4 50 4 148 4 104 4 150 38 18 1 272 4 314 1 21 2 234 3 235 1 202 1 159 1 61 4 116 1 31 4 285 4 122 1 34 1 123 8 243 3 124 1 127 18 333 1 216 1 71 1 72 1 291 2 293 1 74 1 130 1 335 1 218 3 300 20 344 1 
260 1 140 1 44 1 302 1 187 1 303 1 13 1 50 1 148 1 150 9 272 1 21 1 202 1 61 1 116 1 285 1 34 1 123 2 127 4 333 1 216 1 72 1 71 1 335 1 218 1 300 5 344 1 
260 2 140 1 302 3 187 2 303 6 305 1 13 3 50 2 148 3 104 3 150 19 272 2 21 1 234 3 235 1 61 2 116 1 31 3 285 2 122 2 123 4 243 3 127 10 216 1 72 1 293 1 335 1 218 1 42 1 300 9 
260 3 140 2 302 3 303 4 187 3 305 1 97 1 13 2 50 3 148 2 104 3 150 26 18 1 272 3 21 2 234 2 159 1 61 2 116 1 31 3 285 4 122 1 123 6 243 2 124 1 127 12 216 1 72 1 291 2 74 1 335 2 130 1 218 2 300 14 
84 1 283 1 129 1 313 1 342 1 328 1 167 1 81 1 169 1 181 1 
46 1 228 1 
283 1 129 1 233 1 313 1 95 1 167 1 265 1 169 1 181 1 
84 1 283 1 322 1 66 2 162 1 119 1 328 1 167 1 169 1 17 1 129 1 313 1 109 1 342 1 57 1 79 1 83 1 181 1 
84 1 283 1 322 1 66 2 162 1 119 1 328 1 167 1 169 1 17 1 129 1 313 1 109 1 342 1 57 1 79 1 83 1 181 1 
84 1 283 1 322 1 66 2 162 1 119 1 328 1 167 1 169 1 17 1 129 1 313 1 109 1 342 1 57 1 79 1 83 1 181 1 
320 1 65 1 257 1 
320 1 65 1 257 1 
240 1 98 1 
320 1 240 1 98 1 
105 1 343 1 
185 2 46 1 49 1 228 1 17 1 51 2 230 1 309 2 52 2 105 1 106 1 313 1 57 1 111 2 283 1 162 1 66 1 167 1 169 1 69 1 129 1 292 1 248 1 341 1 79 1 343 1 181 1 
65 1 257 1 
320 1 240 1 98 1 
185 2 260 1 2 1 304 1 187 1 166 2 123 2 190 1 11 1 127 1 194 1 50 1 51 2 332 1 172 1 150 2 334 1 52 2 272 1 22 2 179 1 300 1 134 1 
223 1 53 1 239 1 238 1 22 1 96 1 
62 1 239 1 238 1 22 1 211 1 315 1 36 1 220 1 
62 1 239 1 238 1 73 1 22 2 211 1 315 1 36 1 220 1 
62 1 63 1 239 1 22 1 315 1 36 1 220 1 
107 1 
185 1 51 1 223 1 309 1 173 1 90 1 52 1 30 1 22 1 48 1 56 1 111 1 
0 1 221 1 205 2 89 1 327 2 189 1 241 1 34 1 214 1 269 1 290 1 40 1 109 2 201 1 277 1 
221 1 160 1 205 1 89 1 189 1 19 1 290 1 40 1 109 1 201 1 
85 2 0 5 221 5 205 5 3 1 302 2 31 2 327 10 243 2 13 2 214 5 104 2 109 5 75 1 277 5 
17 1 59 1 89 1 20 1 109 1 57 1 
59 2 221 2 319 1 205 2 223 2 33 1 242 1 241 2 189 2 286 1 170 1 17 3 269 2 20 4 290 1 22 4 40 2 57 3 201 2 25 1 219 2 
221 1 89 1 205 1 160 1 19 1 118 1 109 1 
221 1 89 1 189 1 17 1 20 1 109 2 54 1 201 1 57 1 277 1 317 1 59 1 205 1 327 1 290 1 40 1 178 1 
223 1 91 1 290 1 22 1 40 1 189 1 201 1 
85 1 0 4 221 5 89 1 140 1 302 1 189 2 97 1 13 1 17 1 104 1 18 1 20 1 109 4 57 1 201 2 277 3 159 1 59 1 61 1 205 3 31 1 327 6 243 1 214 4 249 1 290 2 74 1 130 1 40 2 218 1 
85 2 221 2 185 1 90 1 44 1 3 1 302 2 189 1 225 1 13 1 100 1 17 1 51 1 309 1 311 1 52 1 199 1 201 1 57 1 111 1 205 2 67 1 173 1 71 1 290 1 294 1 40 1 344 1 
84 1 105 1 283 1 77 1 169 1 
88 1 283 1 169 1 
88 1 283 1 169 1 
88 1 283 1 169 1 
283 1 232 1 169 1 
283 1 232 1 169 1 
283 1 232 1 169 1 
283 1 169 1 
167 1 181 1 
140 1 260 1 44 1 302 1 187 1 303 1 13 1 50 1 148 1 150 7 272 1 202 1 61 1 34 1 123 2 127 3 333 1 72 1 71 1 130 1 218 1 300 4 344 1 
260 2 140 1 44 1 302 2 187 2 303 2 13 1 50 2 148 1 149 1 104 1 150 10 272 2 234 1 235 1 202 1 61 2 31 1 34 1 123 4 127 4 333 1 71 1 72 1 130 1 218 1 300 6 344 1 
140 1 260 3 44 1 302 3 187 3 303 3 97 1 13 3 50 3 148 2 149 1 104 2 150 18 18 1 272 3 234 1 202 1 159 1 61 1 31 2 34 1 123 6 243 2 127 9 333 1 71 1 72 1 291 1 130 1 74 1 218 1 300 9 344 1 
140 1 260 3 44 1 302 3 187 3 303 4 97 1 13 2 50 3 148 2 149 1 104 2 150 16 18 1 272 3 234 2 202 1 159 1 61 1 31 2 34 1 123 6 243 1 127 6 333 1 71 1 72 1 291 1 130 1 74 1 218 1 300 10 344 1 
140 1 260 1 44 1 302 1 187 1 303 1 13 1 50 1 148 1 150 7 272 1 202 1 61 1 34 1 123 2 127 3 333 1 72 1 71 1 130 1 218 1 300 4 344 1 
140 1 260 1 302 2 187 1 303 2 97 1 13 2 50 1 148 1 104 2 150 12 18 1 272 1 234 1 159 1 61 1 31 2 123 2 243 2 127 6 72 1 130 1 74 1 218 1 300 6 
260 4 140 1 44 1 302 3 187 4 303 3 97 1 13 2 50 4 148 2 149 1 104 2 150 17 18 1 272 4 234 1 202 1 159 1 61 1 31 2 34 1 123 8 243 1 127 7 333 1 71 1 72 1 291 2 74 1 130 1 218 1 300 10 344 1 
260 4 140 1 302 3 187 4 303 6 97 1 13 2 50 4 148 3 104 3 150 16 18 1 272 4 234 3 159 1 61 1 31 3 123 8 243 2 127 7 72 1 291 2 74 1 130 1 293 1 218 1 300 9 
44 1 302 1 303 6 13 1 127 4 148 3 333 1 150 7 71 3 234 3 202 2 300 3 344 3 
260 4 140 1 44 1 302 3 187 4 303 3 97 1 13 2 50 4 148 2 104 2 150 17 18 1 272 4 234 1 202 1 159 1 61 1 31 2 34 1 123 8 243 1 127 7 333 1 71 1 72 1 291 2 74 1 130 1 293 1 218 1 300 10 344 1 
260 1 44 1 302 2 187 1 303 5 123 2 225 1 13 2 127 5 50 1 148 3 150 10 72 1 71 2 272 1 234 2 300 5 344 2 
260 1 302 1 187 1 303 1 123 2 50 1 104 1 150 2 72 1 272 1 234 1 300 2 
260 1 302 1 31 1 303 2 187 1 243 1 123 2 13 1 127 2 50 1 148 1 104 1 150 4 72 1 272 1 234 1 300 2 
260 3 187 3 303 2 123 6 127 2 50 3 148 1 150 3 72 1 71 1 291 1 272 3 293 1 55 1 234 1 300 1 344 1 
260 4 140 3 44 1 302 3 187 4 303 4 13 3 50 4 148 2 149 1 104 2 150 21 272 4 273 1 234 2 202 1 203 1 61 3 31 2 34 1 123 8 243 2 127 10 333 1 71 1 72 1 291 1 293 1 218 1 255 1 300 11 344 1 
260 2 44 1 302 1 303 2 187 2 34 1 123 4 13 1 127 3 50 2 148 1 333 1 150 7 71 1 272 2 291 1 234 1 202 1 300 4 344 1 
44 1 118 1 302 1 303 1 34 1 13 1 127 2 148 1 333 1 150 5 71 1 202 1 300 3 344 1 
260 1 302 1 31 1 303 2 187 1 243 1 123 2 13 1 127 2 50 1 148 1 149 1 104 1 150 4 272 1 234 1 300 2 
61 2 140 1 302 1 31 1 303 2 243 1 13 1 127 4 148 1 104 1 150 7 234 1 235 1 218 1 300 3 
138 1 140 2 260 1 44 1 302 3 303 3 187 1 13 3 50 1 148 2 104 2 150 17 270 1 272 1 234 1 235 1 202 1 61 2 31 2 34 1 243 2 123 2 127 8 333 1 71 1 291 1 300 9 344 1 
61 1 150 1 127 1 
140 1 150 1 300 1 
260 1 302 1 31 1 187 1 303 3 123 2 243 1 13 1 127 3 50 1 148 2 149 1 104 1 150 6 272 1 75 1 234 1 300 3 
140 1 260 1 302 2 187 1 303 2 97 1 13 2 50 1 148 1 104 2 150 12 18 1 272 1 234 1 159 1 61 1 31 2 123 2 243 2 127 6 72 1 130 1 74 1 218 1 300 6 
44 1 302 1 303 2 13 1 127 3 148 1 150 6 71 1 234 1 300 3 344 1 
260 1 303 2 187 1 123 2 127 2 50 1 148 1 333 1 150 3 71 1 291 1 272 1 55 1 234 1 202 1 300 1 344 1 
185 1 51 1 114 1 69 1 52 1 92 1 121 1 
137 1 185 1 114 1 92 1 7 1 121 1 101 1 171 1 51 1 69 1 52 1 26 1 
115 1 223 1 73 1 22 4 125 1 
289 1 22 1 
223 1 22 1 
73 1 22 2 315 1 
223 1 73 1 22 2 
223 1 73 1 22 2 
223 1 118 1 22 1 
185 1 51 1 223 1 309 1 52 1 93 1 22 1 111 1 
185 1 51 1 309 1 52 1 93 1 22 1 219 1 111 1 
185 1 51 1 309 1 52 1 93 1 22 1 219 1 111 1 
17 1 22 1 57 1 219 1 
17 1 22 1 57 1 219 1 
246 1 22 1 
223 1 22 1 
185 1 2 1 260 1 93 1 304 1 187 1 123 2 11 1 50 1 51 1 332 1 309 1 52 1 272 1 73 1 22 1 111 1 
17 1 223 1 106 1 290 1 22 1 40 1 189 1 201 1 57 1 25 1 
246 1 22 1 
185 1 51 1 223 1 309 1 52 1 93 1 22 1 111 1 
22 1 219 1 
69 1 200 1 177 1 258 1 212 1 
89 1 280 1 191 1 212 2 266 1 330 1 17 2 146 1 69 1 106 1 109 1 294 1 200 1 57 2 177 2 298 1 204 1 258 2 180 1 
185 1 190 1 51 1 172 1 52 1 200 1 177 1 258 1 134 1 
146 1 200 1 330 1 
222 1 103 1 147 3 261 1 312 1 151 1 188 1 142 3 165 1 252 1 82 1 
222 1 198 1 76 1 35 1 
222 1 188 1 
222 1 103 1 147 1 261 1 151 1 188 1 142 1 165 1 
222 3 261 2 323 1 188 2 142 4 35 1 192 1 103 1 147 4 151 1 198 1 76 1 252 2 82 1 
222 1 281 1 261 1 324 1 188 1 142 2 165 1 103 1 147 2 288 1 151 1 252 1 
222 1 261 1 323 2 142 3 188 1 165 1 12 1 192 1 103 1 147 3 151 1 82 2 
222 2 70 1 209 1 250 2 
103 1 147 1 151 1 131 1 142 1 165 1 
222 1 103 1 147 2 261 1 312 1 151 1 188 1 142 2 165 1 252 1 
256 1 
222 1 103 1 147 1 261 1 151 1 188 1 142 1 165 1 
222 1 261 1 118 1 188 1 
222 1 103 1 147 1 261 1 151 1 188 1 142 1 
142 1 155 1 157 1 
222 1 261 1 323 1 142 3 188 1 165 1 192 1 103 1 147 3 128 1 151 1 82 2 
222 1 259 1 103 1 147 2 261 1 151 1 188 1 142 2 252 1 
222 1 318 1 284 1 142 1 165 1 329 1 227 1 103 1 147 1 151 1 198 1 
222 1 103 1 147 1 151 1 188 1 142 1 165 1 
103 1 147 1 261 1 151 1 188 2 142 1 165 1 
222 1 207 1 29 1 188 1 142 2 165 1 103 2 147 2 151 2 78 1 
222 2 261 1 188 1 142 3 165 1 306 1 103 1 147 3 151 1 312 1 198 1 76 1 252 2 
222 1 318 1 87 1 261 1 163 1 284 2 188 1 142 2 326 1 165 1 329 1 103 1 147 2 151 1 252 1 
222 2 259 1 261 1 32 1 188 1 142 4 165 1 103 2 147 4 151 2 198 1 76 1 252 2 

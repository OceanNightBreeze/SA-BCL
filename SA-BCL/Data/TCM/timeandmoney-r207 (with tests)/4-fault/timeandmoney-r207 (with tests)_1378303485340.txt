#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
58 9 149 1 0 2 134 1 352 1 356 6 319 1 89 1 290 2 306 1 197 1 92 1 11 1 182 5 325 1 221 1 268 4 292 1 328 2 205 1 272 2 16 2 372 2 142 2 341 1 234 1 284 3 235 9 
58 9 149 1 0 2 134 1 352 1 356 6 319 1 89 1 290 2 306 1 197 1 92 1 11 1 182 5 325 1 221 1 268 4 292 1 328 2 205 1 272 2 142 2 16 2 372 2 341 1 234 1 284 3 235 9 
58 10 149 1 0 2 134 1 352 1 356 7 319 1 89 1 290 2 306 1 197 1 92 1 11 1 182 6 325 1 221 1 268 5 292 1 328 2 205 1 272 2 142 2 16 2 372 2 341 1 234 1 284 4 235 10 
58 7 149 1 0 2 134 1 352 1 356 4 89 1 290 2 306 1 197 1 92 1 11 1 182 4 325 1 221 1 268 3 292 1 328 2 205 1 272 1 142 2 16 2 372 2 341 1 234 1 284 2 235 7 
58 4 292 1 328 1 0 1 149 1 205 1 356 3 272 2 319 1 372 1 142 1 290 1 92 1 182 3 325 1 284 1 235 4 268 2 
58 2 328 1 0 1 205 1 192 1 372 1 16 1 164 1 290 1 191 1 92 1 11 1 234 1 182 1 325 1 235 2 
58 3 0 2 205 1 356 1 372 2 16 1 197 1 92 1 182 2 325 1 284 1 235 3 268 1 
58 9 0 2 149 1 134 1 352 1 356 7 319 1 290 1 360 1 197 1 361 1 92 1 182 5 325 1 268 4 292 1 328 1 205 1 272 2 16 1 372 2 142 1 284 3 235 9 
58 9 0 2 149 1 134 1 352 1 356 7 319 1 290 1 360 1 197 1 361 1 92 1 182 5 325 1 268 4 292 1 328 1 205 1 272 2 16 1 372 2 142 1 284 3 235 9 
240 1 34 1 308 1 
308 1 216 2 365 1 
329 2 358 2 104 2 368 1 174 2 3 2 214 1 275 2 
170 2 150 1 288 1 33 1 152 1 174 2 260 1 3 2 214 1 178 1 358 3 359 2 65 1 91 2 140 1 201 1 46 1 293 1 309 1 329 3 204 1 295 1 368 1 14 1 275 2 127 1 99 1 17 2 277 1 190 1 104 2 281 1 255 1 165 1 22 1 211 2 346 1 
329 1 358 1 180 1 104 1 174 1 3 1 214 1 296 1 275 1 175 1 
329 1 240 1 173 1 242 1 137 1 297 1 358 1 104 1 180 1 233 1 379 1 200 1 308 1 57 1 
329 1 240 1 173 1 242 2 174 1 137 2 3 1 297 1 275 1 358 1 104 1 180 1 379 1 308 1 57 1 
344 1 242 1 137 1 66 1 163 1 
286 1 344 1 240 1 242 2 137 2 66 1 308 1 36 1 
242 1 137 1 66 1 
327 1 329 1 242 1 174 1 137 1 214 1 3 1 296 1 175 1 275 1 358 1 180 1 104 1 344 1 
308 1 
344 1 240 1 242 2 137 2 66 1 93 1 308 1 36 1 
238 1 348 1 240 1 121 2 2 1 242 5 123 2 137 5 51 1 36 1 209 1 253 1 344 2 232 1 246 1 362 1 118 2 66 2 308 1 
368 1 34 1 
329 2 368 2 174 1 3 1 49 1 275 1 358 2 104 2 156 1 
60 1 106 1 167 1 
170 1 329 1 368 1 14 1 260 1 207 1 127 1 99 1 277 1 358 1 190 1 165 1 65 1 91 1 140 1 211 1 
170 1 329 2 14 1 260 1 85 1 3 1 275 1 127 1 99 1 277 1 190 1 358 2 6 1 104 1 165 1 65 1 140 1 91 1 167 1 211 1 
329 3 358 3 104 3 368 1 174 1 85 1 3 3 275 3 
329 1 358 1 180 1 104 1 3 1 296 1 275 1 
329 1 358 1 180 1 104 1 174 1 3 1 49 1 156 1 275 1 
170 1 33 1 172 1 152 1 173 1 242 1 260 1 174 2 85 1 3 3 137 1 214 1 178 1 358 4 359 2 6 1 180 1 65 1 140 1 91 1 156 1 201 1 46 1 293 1 309 1 329 4 204 1 295 1 368 1 14 1 369 1 297 1 275 3 127 1 99 1 17 1 277 1 190 1 104 3 281 1 165 1 211 1 379 1 57 1 
329 2 358 2 104 2 368 1 233 1 84 1 85 1 3 1 275 1 
329 3 172 1 242 1 173 1 174 1 85 2 137 1 3 3 297 1 275 3 358 3 180 1 6 1 104 3 279 1 156 1 379 1 308 1 57 1 
329 2 85 1 174 1 3 2 275 2 358 2 104 2 106 1 167 1 156 1 
170 1 329 1 368 1 14 1 260 1 127 1 99 1 277 1 358 1 190 1 165 1 65 1 91 1 140 1 211 1 
170 1 329 1 368 1 14 1 260 1 99 1 54 1 277 1 358 1 190 1 165 1 91 1 140 1 211 1 108 1 
60 2 33 1 318 1 263 1 139 1 178 1 359 2 8 1 199 1 201 2 293 1 309 1 69 1 295 1 333 1 126 1 373 1 17 4 300 1 281 1 106 2 132 1 22 2 167 2 
329 1 358 1 180 1 104 1 323 1 3 1 275 1 57 1 
329 5 368 1 84 1 85 2 174 1 3 4 275 4 276 1 358 5 104 5 6 1 233 1 156 1 380 1 
329 2 358 2 180 1 104 2 323 1 3 2 296 1 275 2 
198 1 188 1 
198 1 188 1 
64 1 119 1 
64 1 119 1 
64 1 119 1 
351 1 198 1 188 1 
198 1 50 1 188 1 
64 1 198 2 119 1 265 1 44 1 188 2 
351 1 198 1 188 1 
351 1 198 1 188 1 
98 1 198 1 188 1 
98 1 198 1 188 1 
98 1 198 1 188 1 
285 1 347 3 310 1 227 1 62 2 242 2 354 1 137 2 265 1 188 2 266 2 342 2 113 1 103 1 129 2 198 2 67 2 308 1 202 1 
285 1 29 1 287 1 347 1 62 1 242 1 3 2 137 1 264 1 266 1 358 2 198 1 67 1 158 1 366 1 203 1 329 2 368 1 187 1 275 2 50 1 188 1 104 2 129 1 
290 1 328 1 142 1 
290 1 328 1 191 1 
328 3 7 1 191 1 86 1 273 1 142 2 
328 2 135 1 191 1 86 1 273 1 142 1 
328 2 191 1 86 1 273 2 142 1 
287 1 240 1 242 5 137 5 4 2 88 1 318 1 264 1 216 3 36 1 139 1 246 1 40 1 118 1 199 1 66 1 184 1 308 2 365 1 366 1 97 2 121 1 122 1 123 1 51 2 229 2 300 1 55 1 74 1 344 4 232 3 316 1 
240 1 242 9 355 1 137 9 4 6 195 5 88 2 318 3 216 9 36 1 139 3 246 1 362 1 40 2 118 2 199 3 66 6 184 3 308 5 365 3 366 4 121 2 123 2 162 1 51 6 163 5 229 6 340 1 300 3 55 1 344 7 301 1 377 1 232 8 145 1 
240 1 242 3 137 3 88 1 4 2 318 1 216 4 139 1 362 1 40 1 118 1 199 1 184 1 308 3 365 2 366 1 97 1 121 1 123 1 51 2 229 2 300 1 74 1 344 2 232 3 316 1 
240 1 242 4 137 4 4 4 88 1 318 2 216 7 139 2 362 1 40 1 118 1 199 2 184 2 308 4 365 3 366 2 97 2 121 1 123 1 51 4 229 4 300 2 74 1 344 3 301 1 377 1 232 5 145 1 316 1 
190 1 34 1 270 1 
190 1 315 1 
153 1 
190 1 14 1 
190 3 331 1 14 1 41 1 270 2 99 1 
190 1 14 1 99 1 
190 1 312 1 
111 1 133 1 70 1 317 1 333 3 136 1 186 1 206 1 126 2 215 1 17 9 139 1 300 1 39 1 22 5 201 4 81 2 
111 1 133 1 70 1 317 1 333 3 136 1 186 1 206 1 126 2 215 1 17 9 139 1 300 1 39 1 22 5 201 4 81 2 
111 1 133 1 70 1 317 1 333 3 136 1 186 1 206 1 126 2 215 1 17 9 139 1 300 1 39 1 22 5 157 1 201 4 81 2 
111 2 133 2 317 2 33 1 241 1 136 5 112 1 215 1 318 3 177 1 217 1 139 4 359 2 39 2 199 2 184 3 201 13 293 1 309 1 70 1 96 4 295 1 333 10 186 1 125 1 206 1 126 5 17 29 375 3 300 3 313 1 22 16 24 1 81 3 
111 1 133 1 317 1 33 2 136 2 217 1 139 1 359 4 39 1 201 5 293 2 309 2 70 1 295 2 333 5 186 1 371 1 206 1 126 3 17 11 300 1 314 1 22 6 81 2 
170 1 58 2 0 1 353 1 260 1 356 1 290 1 179 1 7 1 92 1 91 1 140 1 182 1 307 1 325 1 328 2 205 1 161 1 311 1 142 1 372 1 16 1 298 1 299 1 210 1 191 1 79 1 211 1 212 1 235 2 
170 1 58 3 0 1 353 1 260 1 356 2 290 1 38 1 179 1 7 1 245 1 92 1 91 1 140 1 182 1 307 1 325 1 328 2 161 1 142 1 372 1 16 1 299 1 210 1 191 1 79 1 211 1 212 1 235 3 147 1 
170 1 58 2 353 1 260 1 356 2 290 1 7 1 245 1 92 1 91 1 140 1 182 1 307 1 325 1 328 2 161 1 16 1 142 1 299 1 210 1 191 1 211 1 212 1 235 2 147 1 
170 1 58 1 0 1 213 1 260 1 63 1 38 1 140 1 91 1 307 2 95 1 225 1 14 1 161 2 338 1 372 1 16 2 190 1 210 2 165 1 144 1 211 1 235 1 
170 1 58 1 0 1 353 1 260 1 290 1 179 1 7 1 245 1 91 1 140 1 307 1 328 2 205 1 161 1 311 1 142 1 372 1 16 1 299 1 210 1 191 1 79 1 211 1 212 1 235 1 
220 1 
236 1 240 1 242 5 243 1 246 1 10 2 118 1 324 1 66 6 200 1 329 1 14 1 121 1 123 1 336 2 297 1 338 1 339 1 256 1 165 2 166 2 20 1 211 2 30 1 170 2 258 1 173 1 260 1 137 5 87 1 35 2 216 2 36 3 358 1 180 1 40 1 91 2 140 1 267 1 308 2 365 2 95 1 48 2 51 2 100 1 190 1 230 1 104 1 282 2 232 2 233 1 379 1 148 4 381 2 57 1 
236 1 329 1 242 3 173 1 137 3 297 1 87 1 36 1 339 1 358 1 180 1 104 1 166 1 20 1 233 1 93 1 66 2 267 1 379 1 200 1 148 2 57 1 
236 1 240 1 173 1 242 3 137 3 87 1 36 1 358 1 180 1 66 1 267 1 93 1 200 1 308 1 329 1 48 1 297 1 339 1 104 1 233 1 20 1 379 1 148 3 57 1 
236 1 240 1 173 1 242 3 137 3 87 1 36 1 358 1 180 1 93 1 267 1 66 2 200 1 308 1 329 1 336 1 48 1 297 1 339 1 104 1 166 1 233 1 20 1 379 1 148 3 57 1 
236 1 239 1 240 5 242 5 246 1 10 2 118 1 324 1 66 7 200 1 329 1 121 1 123 1 336 4 297 1 339 1 256 1 19 1 166 4 20 1 349 1 173 1 303 1 137 5 87 1 35 2 36 3 358 1 180 1 267 1 93 1 308 5 365 2 48 4 51 1 104 1 278 1 232 1 282 2 233 1 379 1 148 6 57 1 381 2 
236 1 240 1 242 4 246 1 10 2 324 1 118 1 66 4 200 1 329 1 121 1 123 1 336 2 297 1 339 1 256 1 166 2 20 1 30 1 173 1 137 4 87 1 35 2 216 2 36 2 358 1 180 1 267 1 308 2 365 2 48 2 51 1 104 1 232 1 282 2 233 1 379 1 148 4 57 1 381 2 
236 1 239 1 240 1 303 1 173 1 242 4 137 4 87 1 35 2 36 2 358 1 180 1 246 1 10 2 324 1 118 1 66 4 267 1 200 1 308 1 365 2 329 1 121 1 123 1 48 2 336 2 297 1 51 1 339 1 104 1 278 1 256 1 282 2 232 1 166 2 233 1 20 1 379 1 148 4 381 2 57 1 
236 1 239 1 240 1 303 1 173 1 242 4 137 4 87 1 35 2 36 2 358 1 180 1 246 1 10 2 324 1 118 1 66 4 267 1 200 1 308 1 365 2 329 1 121 1 123 1 48 2 336 2 297 1 51 1 339 1 104 1 278 1 256 1 282 2 232 1 166 2 233 1 20 1 379 1 148 4 381 2 57 1 
236 1 240 1 303 1 173 1 242 4 137 4 87 1 289 1 35 2 36 2 216 2 358 1 180 1 246 1 118 1 66 4 267 1 200 1 94 2 308 1 329 1 294 2 121 1 123 1 271 1 48 2 336 2 297 1 51 1 339 1 104 1 256 1 282 2 232 1 166 2 78 1 233 1 20 1 379 1 148 4 57 1 
236 1 239 1 240 1 303 1 173 1 242 4 137 4 87 1 35 2 36 2 358 1 180 1 246 1 10 2 324 1 118 1 267 1 66 5 200 1 308 1 365 2 329 1 121 1 123 1 336 3 48 3 297 1 51 1 339 1 278 1 104 1 256 1 282 2 232 1 19 1 166 3 233 1 20 1 379 1 148 5 381 2 57 1 
236 1 239 1 240 1 303 1 173 1 242 4 137 4 87 1 35 2 36 2 358 1 180 1 246 1 10 2 324 1 118 1 267 1 66 5 200 1 308 1 365 2 329 1 121 1 123 1 336 3 48 3 297 1 51 1 339 1 278 1 104 1 256 1 282 2 232 1 19 1 166 3 233 1 20 1 379 1 148 5 381 2 57 1 
236 1 240 1 242 4 289 1 246 1 118 1 66 4 200 1 329 1 294 2 121 1 123 1 336 2 297 1 339 1 256 1 166 2 20 1 30 1 173 1 137 4 87 1 35 2 216 2 36 2 358 1 180 1 267 1 94 2 308 1 48 2 51 1 104 1 232 1 282 2 233 1 379 1 148 4 57 1 
111 1 60 1 317 1 33 1 136 1 34 1 139 1 178 1 359 2 201 4 293 1 309 1 69 1 70 1 295 1 333 3 368 3 186 1 206 1 126 2 17 8 300 1 106 1 281 1 167 1 22 4 81 1 
150 1 60 11 136 1 33 2 241 1 318 2 322 1 139 2 178 2 359 4 199 1 184 2 201 6 222 1 293 2 309 2 204 1 96 3 295 2 333 2 368 1 337 1 126 1 52 1 102 1 17 14 375 3 300 1 281 1 106 4 313 1 167 11 22 8 
170 1 150 1 33 1 260 1 85 1 3 1 322 1 178 1 358 2 154 1 6 1 359 2 65 1 140 1 91 1 12 1 201 1 309 1 293 1 329 2 204 1 295 1 368 1 14 1 275 1 127 1 207 1 99 1 17 2 277 1 190 1 104 1 106 1 281 1 165 1 211 1 22 1 168 1 
111 1 150 1 151 2 60 7 317 1 61 1 152 2 3 1 318 2 322 1 6 1 245 1 65 2 199 2 201 11 293 3 329 3 70 1 204 1 295 3 333 11 14 2 334 2 206 1 126 6 127 2 17 22 300 3 75 2 130 1 165 1 77 1 211 3 167 7 22 11 81 1 170 3 259 2 33 3 136 5 85 1 260 2 139 3 358 3 178 3 359 6 91 3 140 2 184 2 309 3 368 3 186 1 275 1 99 2 277 2 190 2 104 1 281 3 106 7 
170 8 150 1 1 1 33 2 85 1 260 2 3 1 358 1 178 2 5 1 359 4 245 1 140 2 91 8 201 1 45 1 95 1 293 2 309 2 329 1 69 1 204 1 295 2 14 2 275 1 338 1 18 1 101 1 298 1 17 2 189 1 190 3 104 1 280 1 281 2 255 2 165 2 211 7 22 1 
60 1 33 1 174 1 3 1 318 1 322 1 139 1 178 1 114 1 358 1 359 2 199 1 156 1 184 1 201 2 293 1 309 1 329 1 295 1 333 1 126 1 275 1 17 3 104 1 300 1 106 1 281 1 167 1 22 1 
309 1 293 1 60 1 69 1 295 1 333 1 136 1 33 1 318 1 263 1 17 2 139 1 178 1 359 2 106 1 281 1 167 1 22 2 
309 1 293 1 60 1 69 1 295 1 333 1 33 1 126 1 17 2 373 1 178 1 359 2 300 1 106 1 281 1 167 1 199 1 201 2 
60 2 33 1 318 1 139 1 178 1 359 2 199 1 184 1 201 2 293 1 309 1 69 1 295 1 333 1 126 1 17 4 300 1 281 1 106 2 22 2 167 2 
309 1 293 1 60 1 295 1 333 1 136 1 33 1 318 1 263 1 17 2 139 1 5 1 178 1 359 2 106 1 281 1 167 1 22 2 
309 1 293 1 60 1 295 1 333 1 33 1 126 1 17 2 373 1 5 1 178 1 359 2 300 1 106 1 281 1 167 1 199 1 201 2 
60 2 33 1 136 1 318 1 139 1 178 1 5 1 359 2 199 1 184 1 201 2 293 1 309 1 295 1 333 2 126 1 17 4 300 1 281 1 106 2 22 2 167 2 
309 1 293 1 60 2 295 1 333 1 33 1 126 1 318 1 17 4 139 1 178 1 300 1 359 2 106 2 281 1 199 1 167 2 22 2 184 1 201 2 
170 1 150 1 33 1 152 1 260 1 358 1 178 1 359 2 65 1 140 1 91 1 201 1 309 1 293 1 329 1 204 1 295 1 368 1 14 1 127 1 99 1 17 2 277 1 190 1 281 1 165 1 22 1 211 1 
170 1 150 1 33 1 260 1 358 1 178 1 359 2 140 1 91 1 201 1 309 1 293 1 329 1 204 1 295 1 368 1 14 1 99 1 17 2 54 1 277 1 190 1 281 1 165 1 22 1 108 1 211 1 26 1 
309 1 293 1 60 2 295 1 333 1 33 1 126 1 318 1 322 1 17 4 139 1 178 1 300 1 359 2 106 2 281 1 199 1 167 2 22 2 184 1 201 2 
170 1 60 2 33 1 152 1 260 1 318 1 139 1 358 1 178 1 359 2 65 1 140 1 91 1 199 1 184 1 201 2 309 1 293 1 329 1 295 1 333 1 14 1 126 1 127 1 99 1 17 4 298 1 277 1 190 1 300 1 106 2 75 1 281 1 167 2 22 2 211 1 
257 1 60 1 136 1 33 1 174 1 3 1 318 1 322 1 139 1 178 1 358 1 359 2 199 1 156 1 184 1 201 1 293 1 309 1 329 1 295 1 333 1 275 1 17 3 300 1 104 1 281 1 106 1 22 2 167 1 
59 1 33 2 241 1 136 1 261 1 318 2 139 2 359 4 244 1 219 1 199 1 364 1 184 2 201 5 185 1 293 2 309 2 96 2 295 2 333 2 371 1 126 1 73 1 17 11 375 1 300 1 76 1 313 1 22 6 
302 1 136 2 33 3 261 1 318 3 217 2 139 3 359 6 244 2 181 1 219 2 199 2 184 3 269 1 201 12 185 4 293 3 309 3 96 2 120 1 295 3 333 4 141 1 371 1 126 2 228 1 73 1 17 26 375 2 300 2 76 1 313 2 22 14 110 1 
111 1 59 1 317 1 241 1 318 4 244 1 199 2 201 17 293 4 120 1 70 1 295 4 333 8 206 1 126 3 73 1 17 38 300 3 76 1 22 21 81 1 302 1 136 5 33 4 261 1 217 2 139 5 359 8 181 1 219 2 184 4 269 1 185 4 309 4 96 4 141 1 186 1 371 1 228 1 375 3 107 1 313 3 110 1 
59 1 33 2 241 1 136 2 261 1 318 2 139 2 359 4 244 1 219 1 199 1 184 2 201 6 185 2 293 2 309 2 96 2 295 2 333 3 141 1 371 1 126 1 73 1 17 13 375 1 300 1 76 1 313 1 22 7 
111 1 302 1 317 1 33 3 241 1 136 5 261 1 318 4 217 2 139 5 359 6 244 1 181 1 219 1 199 2 184 4 269 1 201 15 185 3 293 3 309 3 70 1 120 1 96 3 295 3 333 8 141 1 186 1 371 1 206 1 126 3 228 1 73 1 17 34 375 2 300 3 76 1 313 2 22 19 110 1 81 1 
266 1 113 1 47 1 103 1 198 1 129 1 62 1 67 1 265 1 188 1 
29 1 50 1 
266 1 330 1 105 1 198 1 129 1 62 1 67 1 68 1 188 1 
285 1 347 2 310 1 242 1 62 1 354 1 137 1 265 1 188 1 266 1 342 1 113 1 103 1 129 1 198 1 67 1 308 1 202 1 
285 1 347 2 310 1 242 1 62 1 354 1 137 1 265 1 188 1 266 1 342 1 113 1 103 1 129 1 198 1 67 1 308 1 202 1 
285 1 347 2 310 1 242 1 62 1 354 1 137 1 265 1 188 1 266 1 342 1 113 1 103 1 129 1 198 1 67 1 308 1 202 1 
351 1 138 1 44 1 
351 1 138 1 44 1 
98 1 176 1 
98 1 44 1 176 1 
203 1 187 1 
29 1 287 1 347 1 242 1 62 1 354 1 137 1 3 2 264 1 266 1 358 2 198 1 67 1 158 1 366 1 203 1 329 2 368 1 187 1 50 1 275 2 208 1 188 1 342 1 104 2 344 1 129 1 
351 1 138 1 
98 1 44 1 176 1 
170 2 150 1 350 1 33 1 260 1 322 1 178 1 358 2 359 2 140 1 91 2 43 1 201 1 309 1 293 1 329 2 204 1 295 1 14 1 71 1 15 1 18 1 17 2 190 1 104 2 280 1 281 1 255 2 22 1 211 2 109 1 
170 2 171 1 328 2 260 1 353 1 142 1 298 1 290 1 376 1 210 1 179 1 7 1 245 1 191 1 9 1 140 1 91 2 211 2 212 1 
170 1 171 1 328 2 332 1 353 1 260 1 142 1 290 1 210 1 179 1 7 1 245 1 191 1 91 1 140 1 211 1 212 1 
170 1 225 1 14 1 260 1 338 1 320 1 190 1 376 1 210 1 165 1 140 1 91 1 211 1 95 1 
170 1 171 1 328 2 353 1 260 1 142 1 290 1 376 1 210 1 179 1 7 1 245 1 191 1 9 1 140 1 91 1 211 1 212 1 
226 1 
238 1 240 1 232 1 2 1 34 1 51 1 308 1 
240 1 242 1 137 1 216 1 36 1 246 1 10 1 324 1 118 1 66 1 308 2 365 1 121 1 123 1 51 1 232 1 381 1 
238 1 240 2 2 1 242 5 4 6 318 2 246 4 118 4 66 5 199 2 331 1 13 2 159 2 250 1 249 2 14 3 121 4 123 4 298 1 300 2 165 1 211 3 23 2 169 2 170 3 28 1 259 2 260 3 137 5 36 3 216 12 357 2 139 2 42 1 40 2 140 4 91 3 184 2 270 2 308 8 365 6 224 2 51 8 99 3 229 6 190 10 312 2 230 1 231 1 232 9 146 2 315 3 379 2 56 1 
302 1 240 2 242 1 137 1 4 5 318 2 36 1 216 6 139 2 181 1 246 2 40 1 118 2 66 1 199 2 184 2 269 1 308 5 365 3 96 1 120 1 249 2 121 2 123 2 251 1 228 1 51 5 229 5 374 1 375 1 230 1 300 2 232 8 313 1 23 1 
111 1 317 1 242 1 174 1 137 1 214 1 3 1 175 1 139 2 358 1 180 1 246 1 118 1 223 1 327 1 329 1 70 1 249 2 121 1 123 1 296 1 275 1 51 2 278 1 300 1 104 1 232 2 23 1 
238 1 240 1 121 1 2 1 123 1 51 1 246 1 232 1 118 1 308 1 
259 1 249 2 4 5 318 2 51 5 216 10 229 5 139 2 300 2 232 5 199 2 184 2 23 1 308 5 365 5 
240 1 242 1 137 1 66 1 308 1 36 1 
170 4 242 3 260 1 243 1 137 3 193 1 262 1 36 2 246 1 362 1 42 2 140 1 91 4 40 2 118 2 66 4 95 1 14 1 121 2 123 2 338 1 51 2 100 1 190 1 230 2 231 1 165 2 232 2 211 4 
170 1 33 1 152 1 174 2 260 1 3 2 214 1 358 3 178 1 359 2 65 1 91 1 140 1 201 1 46 1 293 1 309 1 329 3 204 1 295 1 368 1 14 1 275 2 127 1 99 1 17 1 277 1 190 1 104 2 281 1 165 1 211 1 
240 2 121 1 123 1 4 2 51 2 216 4 229 2 230 1 246 1 232 1 40 1 118 1 81 1 308 4 365 2 
266 1 21 1 67 1 
266 1 113 1 67 1 274 1 187 1 
266 1 21 1 67 1 
266 1 21 1 67 1 
266 1 343 1 67 1 
266 1 343 1 67 1 
266 1 343 1 67 1 
266 1 67 1 
198 1 188 1 
309 2 293 2 111 1 70 1 317 1 295 2 333 3 136 1 33 2 186 1 206 1 126 2 217 1 17 8 139 1 300 1 359 4 22 4 201 4 81 1 
111 1 317 1 70 1 333 3 136 1 186 1 206 1 34 1 126 2 17 8 139 1 300 1 22 4 201 4 81 1 
309 1 293 1 295 1 333 2 248 1 33 1 136 1 126 1 318 1 17 4 139 1 300 1 359 2 199 1 22 2 184 1 201 2 
17 2 375 1 96 1 313 1 22 1 201 1 
111 2 317 2 241 1 136 4 33 1 318 2 217 1 139 5 359 2 199 1 184 2 201 13 223 1 222 1 309 1 293 1 70 2 96 2 295 1 333 8 186 1 206 1 126 4 17 28 102 1 375 2 300 4 22 15 81 1 
17 1 96 1 201 1 
17 1 375 1 22 1 
293 1 309 1 295 1 259 1 248 1 333 4 33 1 136 2 318 1 126 2 17 6 139 1 359 2 300 1 22 3 199 1 184 1 201 3 
302 1 136 2 33 1 318 2 139 2 359 2 181 1 199 1 184 2 201 5 269 1 293 1 309 1 96 1 120 1 295 1 333 4 371 1 228 1 126 2 17 12 375 1 300 1 313 1 22 7 
111 1 70 1 317 1 333 2 136 1 126 1 17 6 139 1 300 1 22 3 201 3 
111 1 309 1 293 1 317 1 295 1 333 2 136 1 33 1 186 1 206 1 126 1 217 1 17 3 359 2 183 1 22 1 201 2 
111 1 317 1 70 1 333 4 136 2 126 2 17 10 139 2 300 2 22 5 201 5 223 1 
309 1 293 1 295 1 333 1 33 1 136 1 371 1 318 1 17 2 139 1 359 2 22 2 
309 1 293 1 295 1 333 1 33 1 371 1 126 1 318 1 17 4 139 1 300 1 359 2 22 2 199 1 184 1 201 2 
309 1 293 1 111 1 317 1 295 1 333 2 33 1 136 1 371 1 126 1 17 2 359 2 22 1 201 1 
111 3 59 1 317 3 33 5 241 1 136 6 112 1 318 3 177 1 217 2 139 5 359 10 183 1 199 2 184 3 201 17 293 5 309 5 70 2 96 4 295 5 248 1 333 12 186 1 371 1 125 1 206 1 126 6 17 34 375 3 300 4 313 1 22 17 81 1 
111 1 317 1 33 1 136 1 139 1 359 2 201 5 293 1 309 1 70 1 96 1 295 1 333 3 186 1 371 1 206 1 228 1 126 2 17 10 375 1 300 1 313 1 22 5 81 1 
111 1 317 1 33 2 241 1 136 2 318 1 139 2 359 4 184 1 201 6 293 2 309 2 70 1 96 2 295 2 248 1 333 4 186 1 371 1 206 1 126 2 228 1 17 13 375 1 300 1 313 1 22 7 81 1 
302 1 136 2 33 4 318 2 217 2 139 2 359 8 181 1 199 1 184 2 201 5 269 1 293 4 309 4 96 1 120 1 295 4 248 1 333 3 371 1 228 1 126 1 17 12 375 1 300 1 313 1 22 7 
302 1 136 1 33 4 318 2 217 2 139 2 359 8 181 1 199 1 184 2 201 5 269 1 293 4 309 4 96 1 120 1 295 4 248 1 333 3 371 1 228 1 126 2 17 12 375 1 300 1 313 1 22 7 
111 1 317 1 33 1 136 1 139 1 359 2 201 5 293 1 309 1 70 1 96 1 295 1 333 3 186 1 371 1 206 1 228 1 126 2 17 10 375 1 300 1 313 1 22 5 81 1 
302 1 136 2 33 3 318 2 217 2 139 2 359 6 181 1 199 1 184 2 201 5 269 1 293 3 309 3 96 1 120 1 295 3 333 4 371 1 228 1 126 2 17 12 375 1 300 1 313 1 22 7 
111 1 302 1 317 1 136 2 33 4 318 2 217 2 139 3 359 8 181 1 199 1 184 2 269 1 201 9 293 4 309 4 70 1 96 1 120 1 295 4 248 1 333 5 186 1 371 1 206 1 228 1 126 3 17 20 375 1 300 2 313 1 22 11 81 1 
59 1 302 1 136 2 33 2 318 2 139 2 359 4 181 1 199 1 184 2 201 5 269 1 293 2 309 2 96 1 120 1 295 2 333 4 371 1 228 1 126 2 17 12 375 1 300 1 313 1 22 7 
111 2 317 2 333 4 136 2 186 2 206 1 126 2 17 4 22 2 201 2 
111 1 59 1 302 1 317 1 136 2 33 4 318 2 217 2 139 3 359 8 181 1 199 1 184 2 269 1 201 9 293 4 309 4 70 1 96 1 120 1 295 4 333 5 186 1 371 1 206 1 228 1 126 3 17 20 375 1 300 2 313 1 22 11 81 1 
329 1 358 1 104 1 368 1 131 1 233 1 84 1 
329 1 368 1 84 1 321 1 304 1 358 1 104 1 283 1 131 1 233 1 345 1 27 1 
170 1 190 1 165 1 14 1 140 1 260 1 91 1 211 1 338 1 34 1 95 1 
170 1 329 2 368 1 14 1 85 1 260 1 3 1 275 1 99 1 277 1 190 1 358 2 104 1 165 1 65 1 140 1 91 1 211 1 
170 1 260 1 85 1 3 2 358 2 180 1 65 1 91 1 42 1 140 1 329 2 368 1 14 2 297 1 275 1 99 2 277 1 190 3 312 1 104 2 146 1 211 1 57 1 
170 2 260 1 85 1 3 2 358 2 180 1 363 1 91 2 42 1 140 1 329 2 368 1 14 2 297 1 275 1 99 2 277 1 190 3 312 1 104 2 146 1 108 1 211 2 57 1 
170 3 240 1 242 2 260 1 137 2 115 1 363 1 247 1 91 3 42 1 140 1 66 1 270 1 308 1 14 1 99 1 190 4 312 1 165 1 146 1 211 3 315 1 379 1 
170 3 13 1 240 1 14 1 242 2 260 1 137 2 99 1 312 1 190 4 165 1 363 1 140 1 42 1 91 3 146 1 211 3 66 1 379 1 315 1 308 1 270 1 
170 1 140 1 260 1 91 1 211 1 45 1 
170 7 331 1 1 1 14 2 160 1 260 2 99 1 18 1 101 1 298 1 189 1 190 3 255 1 245 1 165 2 116 1 90 1 91 7 140 3 211 6 45 1 
111 1 60 1 317 1 152 1 3 1 322 1 65 1 201 4 293 2 329 2 70 1 295 2 333 3 14 1 334 1 71 1 206 1 126 2 127 1 298 1 17 8 300 1 75 1 167 1 211 1 22 4 81 1 170 1 33 2 136 1 85 1 260 1 139 1 358 2 178 2 359 4 91 1 140 1 309 2 368 3 186 1 275 1 99 1 277 1 190 1 104 1 106 1 281 2 
170 1 238 1 240 1 2 1 242 3 137 3 36 1 357 1 246 2 91 1 118 2 66 2 308 1 270 1 224 1 13 1 159 1 121 2 123 2 51 1 190 2 231 1 344 1 165 1 232 1 211 1 315 1 379 1 
170 2 331 1 14 1 260 1 99 1 298 1 190 2 91 2 140 2 211 2 56 1 270 1 45 1 
170 4 14 1 83 1 260 1 338 1 298 1 190 1 165 1 363 1 140 1 91 4 211 4 95 1 
170 2 367 1 14 1 160 1 260 1 99 1 190 1 130 1 42 1 90 1 91 2 140 2 378 1 211 2 
170 1 290 1 328 1 165 1 191 1 140 1 260 1 91 1 211 1 212 1 
170 2 14 1 260 1 298 1 18 1 190 1 245 1 91 2 140 1 211 2 109 1 
170 5 14 2 83 1 260 2 338 1 298 1 101 1 18 1 190 3 189 1 165 1 42 1 91 5 140 2 211 4 95 1 
170 5 14 2 83 1 260 2 194 1 338 1 298 1 18 1 190 3 189 1 165 1 42 1 91 5 140 2 211 4 95 1 
170 1 329 2 368 1 14 1 85 1 260 1 3 1 275 1 99 1 277 1 190 1 358 2 104 1 165 1 140 1 91 1 211 1 108 1 
170 1 331 1 14 1 160 1 260 1 99 1 190 1 116 1 90 1 42 1 91 1 140 2 211 1 
53 1 37 1 368 1 370 1 196 1 
82 1 240 1 368 1 172 1 242 2 173 1 335 1 370 2 137 2 297 1 196 2 53 2 37 1 180 1 344 1 379 1 25 1 308 1 57 1 
329 1 350 1 370 1 15 1 53 1 37 1 358 1 104 1 43 1 
37 1 335 1 25 1 
92 1 182 1 325 1 34 1 
58 1 0 1 92 1 182 1 325 1 235 1 372 1 
58 1 161 1 16 1 
58 3 0 1 205 1 72 1 372 1 155 1 218 1 11 2 92 1 182 1 325 1 235 3 
58 2 0 1 92 1 182 1 356 1 325 1 272 1 235 2 372 1 
58 1 328 1 0 1 149 1 205 1 372 1 142 1 290 1 182 1 235 1 268 1 
58 1 0 1 205 1 92 1 182 1 235 1 372 1 
58 1 0 1 205 1 92 2 325 1 235 1 372 1 
58 2 31 1 0 2 205 1 128 1 372 2 291 1 92 1 182 1 235 2 
58 3 0 1 134 1 205 1 352 1 356 2 372 1 92 1 182 2 325 1 284 1 235 3 268 1 
58 2 328 2 0 1 237 1 205 1 356 1 372 1 142 1 290 1 7 1 191 1 92 1 182 1 325 1 235 2 
58 4 0 2 205 1 356 2 272 1 319 1 372 2 92 1 182 2 325 1 284 1 235 4 268 1 
58 1 0 1 205 1 92 1 182 1 325 1 235 1 372 1 
58 4 0 1 356 2 124 1 372 1 218 1 155 1 11 1 92 2 182 3 325 2 284 1 235 4 268 1 
58 2 0 1 205 1 252 1 356 1 372 1 305 1 361 1 92 1 182 1 325 1 235 2 
58 3 0 1 205 1 372 1 155 1 218 2 11 2 92 1 182 1 325 1 235 3 80 1 
254 1 117 2 182 2 326 1 
58 1 0 1 32 1 205 1 235 1 372 1 
58 2 0 1 205 1 352 1 92 1 182 1 356 1 325 1 235 2 372 1 
143 1 
58 1 0 1 205 1 92 1 182 1 325 1 235 1 372 1 
58 3 0 1 205 1 352 1 356 1 372 1 11 1 92 1 182 1 325 1 235 3 
182 1 124 1 284 1 268 1 
92 1 182 1 

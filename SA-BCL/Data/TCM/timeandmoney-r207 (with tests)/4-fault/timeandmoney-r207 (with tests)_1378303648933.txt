#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 2 123 1 200 1 359 2 317 1 8 1 34 2 152 1 271 2 319 5 108 4 134 1 339 1 366 9 185 1 186 1 141 1 17 1 63 9 237 1 65 2 117 1 118 1 240 3 22 2 21 6 284 2 120 1 
122 2 123 1 200 1 359 2 317 1 8 1 34 2 152 1 271 2 319 5 108 4 134 1 339 1 366 9 185 1 186 1 141 1 17 1 63 9 237 1 65 2 117 1 118 1 240 3 22 2 21 6 284 2 120 1 
122 2 123 1 200 1 359 2 317 1 8 1 34 2 152 1 271 2 319 6 108 5 134 1 339 1 366 10 185 1 186 1 141 1 17 1 63 10 237 1 65 2 117 1 118 1 240 4 22 2 21 7 284 2 120 1 
122 2 123 1 200 1 359 1 317 1 34 2 152 1 271 2 319 4 108 3 134 1 339 1 366 7 185 1 186 1 141 1 17 1 63 7 237 1 65 2 117 1 118 1 240 2 22 2 21 4 284 2 120 1 
134 1 366 4 122 1 186 1 123 1 63 4 237 1 65 1 359 2 317 1 240 1 8 1 34 1 22 1 21 3 319 3 271 1 108 2 
302 1 134 1 366 2 122 1 123 1 17 1 63 2 117 1 65 1 317 1 347 1 34 1 22 1 319 1 50 1 284 1 
134 1 366 3 185 1 122 2 123 1 63 3 317 1 34 2 240 1 21 1 319 2 284 1 108 1 
122 2 123 1 268 1 200 1 359 2 317 1 34 2 8 1 319 5 271 1 108 4 134 1 366 9 185 1 186 1 253 1 63 9 237 1 65 1 240 3 21 7 22 1 284 1 120 1 
122 2 123 1 268 1 200 1 359 2 317 1 34 2 8 1 319 5 271 1 108 4 134 1 366 9 185 1 186 1 253 1 63 9 237 1 65 1 240 3 21 7 22 1 284 1 120 1 
239 1 292 1 101 1 
239 1 228 2 57 1 
321 2 340 2 318 2 227 2 36 1 304 2 23 2 183 1 
53 1 27 1 73 1 100 1 269 1 126 1 104 1 333 1 296 2 318 2 227 2 297 2 36 1 360 1 40 1 183 1 184 1 42 1 321 3 210 1 340 3 342 1 139 1 45 1 304 2 254 1 116 1 164 1 375 1 349 2 68 1 23 2 215 2 286 2 285 1 51 1 262 1 
321 1 19 1 340 1 318 1 227 1 36 1 304 1 23 1 231 1 250 1 
321 1 1 1 54 1 340 1 292 1 304 1 114 1 5 1 239 1 19 1 334 1 180 1 272 1 287 1 
1 2 321 2 54 2 340 2 292 1 304 2 305 1 5 1 239 1 19 2 318 2 227 2 36 1 23 2 180 1 272 1 287 1 231 1 250 1 
1 1 54 1 212 1 187 1 198 1 
1 2 54 2 239 1 212 1 292 1 187 1 84 1 121 1 
1 1 54 1 187 1 
1 1 321 1 54 1 212 1 340 1 304 1 305 1 19 1 318 1 227 1 36 1 23 1 231 1 250 1 
239 1 
264 1 1 2 54 2 239 1 212 1 292 1 187 1 121 1 
365 1 1 5 0 1 54 5 212 2 292 1 325 1 187 2 173 1 75 1 162 1 127 2 239 1 153 2 362 1 229 1 121 1 39 1 160 2 
183 1 101 1 
329 1 321 2 136 1 340 2 304 2 318 1 227 1 23 1 183 2 
130 1 155 1 311 1 
321 1 210 1 27 1 340 1 342 1 254 1 100 1 126 1 164 1 333 1 297 1 349 1 360 1 215 1 183 1 379 1 
321 2 210 1 27 1 303 1 340 2 342 1 304 1 254 1 100 1 126 1 164 1 333 1 227 1 297 1 349 1 155 1 360 1 249 1 23 1 215 1 
321 3 303 1 340 3 318 1 227 3 304 3 23 3 183 1 
321 1 19 1 340 1 227 1 304 1 23 1 250 1 
329 1 321 1 136 1 19 1 340 1 318 1 227 1 304 1 23 1 
329 1 53 1 1 1 27 1 54 1 73 1 100 1 269 1 126 1 333 1 5 1 104 1 296 1 318 2 227 3 297 1 248 1 36 1 360 1 249 1 180 1 272 1 183 1 42 1 321 4 210 1 340 4 303 1 342 1 45 1 304 3 254 1 236 1 116 1 164 1 375 1 19 1 349 1 68 1 23 3 215 1 286 2 285 1 287 1 
91 1 321 2 340 2 303 1 227 1 334 1 304 2 23 1 183 1 
329 1 1 1 321 3 54 1 303 2 340 3 304 3 5 1 66 1 239 1 19 1 318 1 227 3 248 1 272 1 249 1 23 3 180 1 287 1 
329 1 321 2 303 1 340 2 304 2 311 1 318 1 227 2 155 1 23 2 
321 1 210 1 27 1 340 1 342 1 254 1 100 1 126 1 164 1 333 1 297 1 349 1 360 1 215 1 183 1 
321 1 210 1 27 1 340 1 342 1 100 1 126 1 164 1 297 1 349 1 360 1 215 1 202 1 243 1 183 1 
96 1 53 1 73 1 311 2 269 1 314 1 79 1 296 4 155 2 130 2 42 2 109 1 137 1 139 2 89 1 344 1 306 1 116 1 189 1 165 1 68 1 69 1 286 2 285 1 
321 1 12 1 19 1 340 1 227 1 304 1 23 1 287 1 
329 1 321 5 303 2 340 5 304 5 149 1 222 1 91 1 318 1 227 4 334 1 23 4 249 1 183 1 
321 2 12 1 19 1 340 2 227 2 304 2 23 2 250 1 
2 1 313 1 
2 1 313 1 
49 1 197 1 
49 1 197 1 
49 1 197 1 
35 1 2 1 313 1 
2 1 125 1 313 1 
190 1 49 1 214 1 197 1 2 2 313 2 
35 1 2 1 313 1 
35 1 2 1 313 1 
60 1 2 1 313 1 
60 1 2 1 313 1 
60 1 2 1 313 1 
97 1 1 2 11 1 147 2 195 2 135 2 54 2 140 1 2 2 324 1 99 2 313 2 190 1 239 1 93 2 67 3 242 1 156 1 288 1 
321 2 1 1 219 1 54 1 147 1 195 1 135 1 340 2 354 1 304 2 324 1 2 1 199 1 125 1 313 1 224 1 6 1 93 1 227 2 67 1 23 2 351 1 337 1 183 1 
65 1 22 1 271 1 
302 1 65 1 22 1 
302 1 364 1 65 3 201 1 271 2 358 1 
302 1 364 1 65 2 201 1 271 1 182 1 
302 1 364 1 65 2 201 2 271 1 
1 5 54 5 292 1 354 1 171 2 75 2 57 1 150 1 224 1 314 1 127 1 153 1 228 3 37 1 85 1 229 1 362 3 159 2 160 1 109 1 212 4 137 1 88 2 14 1 344 1 187 1 188 1 239 2 166 1 95 1 121 1 351 1 
0 1 307 5 1 9 54 9 292 1 171 6 198 5 75 6 78 1 57 3 314 3 127 2 153 2 228 9 37 2 203 1 229 1 362 8 160 2 133 1 109 3 212 7 137 3 88 6 14 3 344 3 187 6 376 1 239 5 166 1 95 2 24 1 121 1 350 1 351 4 
1 3 0 1 54 3 292 1 171 2 75 2 57 2 150 1 314 1 127 1 153 1 37 1 228 4 362 3 159 1 160 1 109 1 212 2 137 1 14 1 88 2 344 1 188 1 239 3 95 1 351 1 
1 4 0 1 54 4 292 1 171 4 75 4 78 1 57 3 150 1 314 2 127 1 153 1 228 7 37 1 203 1 362 5 159 2 160 1 109 2 212 3 137 2 88 4 14 2 344 2 188 1 239 4 95 1 350 1 351 2 
342 1 101 1 232 1 
342 1 361 1 
332 1 
27 1 342 1 
210 1 27 1 342 2 221 1 312 1 332 1 232 2 
210 1 27 1 342 1 
179 1 342 1 
96 3 71 1 42 3 211 1 367 1 111 1 170 1 137 1 139 4 344 1 62 2 176 1 165 2 296 7 193 1 94 1 352 1 
96 3 71 1 42 3 211 1 367 1 111 1 170 1 137 1 139 4 344 1 62 2 176 1 165 2 296 7 193 1 94 1 352 1 
96 3 71 1 42 3 211 1 367 1 170 1 111 1 137 1 139 4 344 1 62 2 176 1 165 2 296 7 192 1 193 1 94 1 352 1 
71 1 96 10 53 1 73 1 170 1 55 1 174 3 176 2 314 3 296 31 81 1 205 4 106 1 86 1 42 15 320 1 109 3 211 2 367 2 111 1 137 4 139 16 14 3 344 4 277 1 62 3 372 1 165 5 193 1 68 1 94 5 286 2 285 1 352 2 
96 4 129 1 42 4 53 2 211 1 367 1 73 2 170 1 111 1 55 1 137 1 139 5 344 1 62 2 176 1 165 3 296 9 193 1 94 1 68 2 285 2 286 4 352 1 70 1 
122 1 196 1 123 1 357 1 358 1 126 1 317 1 34 1 297 1 319 1 271 1 360 1 338 1 301 1 302 1 134 1 366 2 343 1 112 1 63 2 65 2 21 1 22 1 349 1 256 1 215 1 284 1 244 1 261 1 52 1 
122 1 196 1 358 1 126 1 317 1 34 1 297 1 319 1 271 1 360 1 338 1 301 1 302 1 134 1 366 3 343 1 276 1 370 1 63 3 65 2 22 1 349 1 21 2 256 1 119 1 215 1 284 1 244 1 261 1 52 1 
196 1 358 1 126 1 317 1 297 1 319 1 271 1 360 1 338 1 302 1 134 1 366 2 343 1 370 1 63 2 65 2 349 1 21 2 22 1 256 1 119 1 284 1 215 1 261 1 52 1 
366 1 27 1 98 1 122 1 342 1 276 1 343 2 172 1 126 1 63 1 178 1 164 1 246 1 34 1 297 1 349 1 360 1 284 2 215 1 338 2 52 2 300 1 251 1 
122 1 196 1 123 1 357 1 358 1 126 1 34 1 297 1 271 1 360 1 338 1 301 1 302 1 366 1 343 1 370 1 63 1 65 2 22 1 349 1 256 1 215 1 284 1 244 1 261 1 52 1 
345 1 
1 5 54 5 292 1 293 1 3 1 57 2 331 2 58 1 102 2 151 2 5 1 297 2 153 1 334 1 207 2 300 1 160 1 251 1 209 1 340 1 342 1 304 1 114 1 18 1 164 2 19 1 20 4 349 2 215 2 121 3 308 2 27 1 74 1 76 2 75 2 30 1 126 1 127 1 228 2 37 1 360 1 180 1 272 1 362 2 229 1 321 1 275 1 187 6 369 1 280 1 281 2 142 1 239 2 241 1 287 1 
264 1 1 3 54 3 308 1 3 1 30 1 58 1 5 1 334 1 180 1 272 1 209 1 321 1 340 1 304 1 187 2 114 1 369 1 19 1 20 2 121 1 287 1 
264 1 1 3 54 3 292 1 3 1 30 1 76 1 58 1 5 1 334 1 180 1 272 1 209 1 321 1 340 1 187 1 304 1 114 1 369 1 19 1 239 1 20 3 121 1 287 1 
264 1 1 3 54 3 308 1 292 1 3 1 30 1 76 1 58 1 5 1 334 1 180 1 272 1 207 1 209 1 321 1 340 1 304 1 187 2 114 1 369 1 19 1 239 1 20 3 121 1 287 1 
1 5 54 5 292 5 3 1 331 2 57 2 58 1 102 2 151 2 5 1 153 1 334 1 105 1 207 4 160 1 209 1 340 1 304 1 114 1 19 1 20 6 121 3 264 1 308 4 355 1 30 1 76 4 75 1 127 1 272 1 180 1 230 1 229 1 362 1 321 1 187 7 369 1 142 1 281 2 239 5 143 1 241 1 377 1 287 1 
1 4 54 4 292 1 3 1 331 2 57 2 58 1 102 2 151 2 5 1 153 1 334 1 160 1 207 2 209 1 340 1 304 1 114 1 19 1 20 4 121 2 308 2 30 1 75 1 76 2 127 1 228 2 272 1 180 1 229 1 362 1 321 1 275 1 187 4 369 1 142 1 281 2 239 2 241 1 287 1 
1 4 308 2 54 4 292 1 3 1 76 2 75 1 30 1 57 2 331 2 58 1 102 2 127 1 151 2 5 1 153 1 334 1 180 1 272 1 362 1 230 1 229 1 207 2 160 1 209 1 321 1 340 1 187 4 304 1 114 1 369 1 281 2 142 1 239 1 143 1 19 1 241 1 20 4 377 1 121 2 287 1 
1 4 308 2 54 4 292 1 3 1 76 2 75 1 30 1 57 2 331 2 58 1 102 2 127 1 151 2 5 1 153 1 334 1 180 1 272 1 362 1 230 1 229 1 207 2 160 1 209 1 321 1 340 1 187 4 304 1 114 1 369 1 281 2 142 1 239 1 143 1 19 1 241 1 20 4 377 1 121 2 287 1 
1 4 308 2 54 4 292 1 3 1 76 2 75 1 30 1 58 1 102 2 127 1 151 2 5 1 128 1 153 1 228 2 334 1 180 1 272 1 362 1 229 1 9 1 207 2 206 2 160 1 209 1 132 1 321 1 340 1 13 2 187 4 304 1 114 1 369 1 142 1 239 1 143 1 19 1 20 4 121 2 287 1 
1 4 54 4 308 3 292 1 355 1 3 1 75 1 30 1 76 3 57 2 331 2 58 1 102 2 127 1 151 2 5 1 153 1 334 1 180 1 272 1 362 1 229 1 230 1 160 1 207 3 209 1 321 1 340 1 304 1 187 5 114 1 369 1 281 2 142 1 239 1 143 1 19 1 241 1 20 5 377 1 121 2 287 1 
1 4 54 4 308 3 292 1 355 1 3 1 75 1 30 1 76 3 57 2 331 2 58 1 102 2 127 1 151 2 5 1 153 1 334 1 180 1 272 1 362 1 229 1 230 1 160 1 207 3 209 1 321 1 340 1 304 1 187 5 114 1 369 1 281 2 142 1 239 1 143 1 19 1 241 1 20 5 377 1 121 2 287 1 
1 4 308 2 54 4 292 1 3 1 76 2 75 1 30 1 58 1 102 2 127 1 151 2 5 1 153 1 228 2 334 1 180 1 272 1 362 1 229 1 207 2 206 2 160 1 209 1 321 1 132 1 340 1 13 2 275 1 187 4 304 1 114 1 369 1 142 1 239 1 19 1 20 4 121 2 287 1 
96 2 53 1 73 1 170 1 311 1 101 1 176 1 269 1 79 1 296 6 155 1 183 2 130 1 42 3 211 1 111 1 137 1 139 3 344 1 62 1 116 1 165 2 193 1 68 1 286 2 285 1 
96 2 53 2 73 2 56 1 311 4 174 3 269 1 314 1 296 14 155 11 205 3 183 1 130 11 42 6 109 2 137 1 139 8 14 2 344 2 277 1 61 1 46 1 116 2 372 1 64 1 165 1 375 1 94 1 68 2 286 4 285 2 262 1 290 1 
53 1 27 1 73 1 294 1 311 1 100 1 77 1 126 1 269 1 333 1 296 2 297 1 227 1 360 1 298 1 249 1 183 1 321 2 42 1 210 1 340 2 303 1 342 1 139 1 304 1 254 1 116 1 164 1 375 1 349 1 68 1 215 1 23 1 285 1 286 2 379 1 262 1 290 1 
96 3 53 3 100 2 333 2 296 14 297 1 155 4 249 1 335 1 210 2 109 1 211 1 303 1 340 3 111 1 342 2 14 1 304 1 344 2 254 2 62 1 116 3 164 1 165 3 349 1 68 3 215 1 23 1 262 1 27 2 73 3 170 1 311 4 267 2 176 1 177 1 223 2 269 3 126 2 314 1 227 1 360 2 38 1 183 2 130 4 42 7 321 3 137 2 45 2 139 7 373 1 375 1 193 1 286 6 285 3 290 1 
53 2 27 2 73 2 4 1 126 2 269 2 79 1 296 2 227 1 297 8 82 1 360 2 300 1 251 1 321 1 42 1 340 1 303 1 342 3 112 1 139 1 304 1 326 1 16 1 370 1 116 2 371 1 328 1 164 2 375 1 349 8 68 2 258 1 23 1 215 7 286 4 285 2 51 2 262 1 
96 1 329 1 53 1 73 1 311 1 269 1 314 1 296 3 318 1 227 1 155 1 336 1 130 1 321 1 42 2 109 1 340 1 137 1 14 1 139 1 304 1 344 1 116 1 165 1 68 1 23 1 286 2 285 1 290 1 
96 1 130 1 53 1 109 1 73 1 89 1 139 2 344 1 311 1 116 1 269 1 79 1 296 2 94 1 155 1 68 1 285 1 286 2 
96 1 130 1 53 1 42 2 73 1 137 1 311 1 306 1 116 1 269 1 314 1 79 1 165 1 296 2 155 1 68 1 285 1 286 2 
96 2 53 1 73 1 311 2 269 1 314 1 79 1 296 4 155 2 130 2 42 2 109 1 137 1 139 2 14 1 344 1 116 1 165 1 68 1 94 1 286 2 285 1 
96 1 130 1 53 1 109 1 73 1 89 1 139 2 344 1 311 1 116 1 269 1 296 2 82 1 94 1 155 1 68 1 285 1 286 2 
96 1 130 1 53 1 42 2 73 1 137 1 311 1 306 1 116 1 269 1 314 1 165 1 296 2 82 1 155 1 68 1 285 1 286 2 
96 2 53 1 73 1 311 2 269 1 314 1 296 4 82 1 155 2 130 2 42 2 109 1 137 1 139 2 14 1 344 1 116 1 165 1 68 1 94 1 286 2 285 1 
96 2 53 1 73 1 311 2 269 1 314 1 296 4 155 2 130 2 42 2 109 1 137 1 139 2 14 1 344 1 116 1 165 1 68 1 94 1 286 2 285 1 
53 1 27 1 73 1 100 1 126 1 269 1 333 1 296 2 297 1 360 1 183 1 321 1 42 1 210 1 340 1 342 1 139 1 45 1 254 1 116 1 164 1 375 1 349 1 68 1 215 1 285 1 286 2 262 1 
53 1 27 1 73 1 100 1 126 1 269 1 296 2 297 1 360 1 202 1 83 1 183 1 321 1 42 1 210 1 340 1 342 1 139 1 116 1 164 1 375 1 349 1 68 1 243 1 215 1 285 1 286 2 262 1 
96 2 53 1 73 1 311 2 269 1 314 1 296 4 155 2 130 2 42 2 109 1 137 1 139 2 14 1 344 1 116 1 165 1 68 1 94 1 286 2 285 1 290 1 
96 2 53 1 27 1 73 1 311 2 100 1 267 1 126 1 269 1 314 1 333 1 296 4 297 1 155 2 360 1 130 2 42 2 321 1 109 1 210 1 340 1 342 1 137 1 112 1 139 2 45 1 14 1 344 1 254 1 116 1 165 1 349 1 94 1 68 1 215 1 285 1 286 2 
96 1 329 1 53 1 73 1 311 1 269 1 314 1 296 3 318 1 227 1 155 1 130 1 42 1 321 1 109 1 341 1 340 1 137 1 14 1 139 2 304 1 344 1 116 1 94 1 68 1 23 1 286 2 285 1 290 1 
96 6 53 2 220 1 73 2 29 2 124 1 266 1 174 1 314 3 296 19 59 1 205 2 107 1 129 1 42 10 109 3 137 3 139 9 14 3 344 3 277 1 255 1 372 1 165 3 68 2 94 3 216 2 286 4 285 2 145 1 
96 1 53 2 73 2 55 1 29 1 356 1 124 1 266 2 174 2 314 2 296 24 204 1 205 2 107 1 129 1 42 11 109 3 322 1 137 2 139 13 14 3 90 1 344 3 277 2 213 1 255 2 94 1 68 2 216 3 286 4 285 2 263 1 145 1 
96 4 53 2 220 1 73 2 29 1 356 1 124 1 266 1 174 3 314 4 296 32 204 1 157 1 205 4 107 1 129 1 42 17 109 4 322 1 137 4 139 15 14 4 90 1 344 4 277 3 213 1 255 2 372 1 165 1 68 2 94 3 216 3 286 4 285 2 263 1 145 1 
96 5 53 3 220 1 73 3 55 1 29 1 356 1 124 1 266 1 174 3 314 3 296 33 204 1 157 1 205 4 107 1 129 1 42 16 109 4 322 1 137 3 139 17 14 4 90 1 344 4 277 3 213 1 255 2 372 1 165 2 68 3 94 3 216 4 286 6 285 3 263 1 145 1 
96 14 53 2 73 2 170 1 55 1 29 1 356 1 124 1 266 1 174 4 176 1 314 7 296 52 204 1 205 4 107 1 129 1 42 25 109 7 211 1 322 1 111 1 137 8 139 27 14 7 90 1 344 8 277 2 213 1 61 2 62 1 255 1 372 2 165 7 193 1 68 2 94 7 216 4 286 4 285 2 263 1 145 1 
97 1 11 1 190 1 135 1 195 1 147 1 110 1 93 1 2 1 313 1 
6 1 125 1 
135 1 195 1 147 1 80 1 161 1 93 1 2 1 31 1 313 1 
97 1 1 1 11 1 54 1 147 1 195 1 135 1 140 1 324 1 2 1 99 1 313 1 190 1 239 1 93 1 67 2 242 1 156 1 
97 1 1 1 11 1 54 1 147 1 195 1 135 1 140 1 324 1 2 1 99 1 313 1 190 1 239 1 93 1 67 2 242 1 156 1 
97 1 1 1 11 1 54 1 147 1 195 1 135 1 140 1 324 1 2 1 99 1 313 1 190 1 239 1 93 1 67 2 242 1 156 1 
309 1 214 1 35 1 
309 1 214 1 35 1 
60 1 208 1 
214 1 60 1 208 1 
219 1 199 1 
1 1 219 1 54 1 195 1 147 1 354 1 2 1 99 1 125 1 199 1 313 1 224 1 6 1 227 2 337 1 183 1 321 2 135 1 340 2 212 1 304 2 238 1 93 1 67 1 242 1 23 2 351 1 
309 1 35 1 
214 1 60 1 208 1 
53 1 27 1 73 1 175 1 126 1 269 1 296 2 247 1 297 2 360 1 131 1 321 2 42 1 340 2 342 1 139 1 304 2 326 1 278 1 116 1 375 1 349 2 283 1 68 1 258 1 215 2 285 1 286 2 51 2 262 1 290 1 
302 1 196 1 112 1 15 1 358 1 370 1 115 1 126 1 65 2 92 1 22 1 297 2 349 2 271 1 360 1 215 2 261 1 338 1 301 1 
302 1 218 1 196 1 15 1 358 1 370 1 126 1 65 2 22 1 297 1 349 1 271 1 360 1 215 1 261 1 338 1 301 1 
72 1 27 1 98 1 342 1 115 1 126 1 164 1 297 1 349 1 360 1 215 1 338 1 300 1 251 1 
302 1 196 1 15 1 358 1 370 1 115 1 126 1 65 2 92 1 22 1 297 1 349 1 271 1 360 1 215 1 261 1 338 1 301 1 
226 1 
365 1 239 1 292 1 362 1 173 1 75 1 101 1 
1 1 54 1 292 1 75 1 57 1 331 1 127 1 153 1 228 1 362 1 229 1 160 1 187 1 281 1 239 2 241 1 121 1 
330 1 1 5 146 2 54 5 292 2 293 1 57 6 297 3 153 4 158 2 299 1 160 4 210 3 109 2 342 10 112 1 14 2 344 2 164 1 349 3 215 3 121 3 26 2 27 3 353 2 171 6 173 1 312 1 75 8 126 3 225 1 127 4 314 2 179 2 33 1 37 2 361 3 360 4 38 2 228 12 272 2 362 9 229 4 181 1 232 2 365 1 274 2 137 2 368 2 88 6 187 5 144 2 191 2 239 8 
292 1 171 5 356 1 174 1 75 4 57 3 127 1 314 2 153 1 228 6 204 1 362 7 229 1 205 1 160 1 109 2 137 2 88 5 14 2 90 1 344 2 277 1 213 1 239 4 263 1 
1 1 54 1 75 2 176 1 127 1 103 1 318 1 227 1 153 1 36 1 229 1 362 2 231 1 160 1 250 1 321 1 211 1 340 1 274 1 137 1 368 2 344 2 304 1 305 1 19 1 377 1 193 1 23 1 
365 1 292 1 173 1 75 1 127 1 239 1 153 1 229 1 362 1 160 1 
109 2 274 1 137 2 368 2 14 2 171 5 88 5 344 2 75 5 57 5 314 2 239 5 38 1 228 10 362 5 
1 1 54 1 239 1 292 1 187 1 121 1 
330 2 0 1 1 3 27 1 54 3 293 2 74 1 75 2 126 1 127 2 297 4 153 2 360 1 37 2 229 1 362 2 160 2 299 1 300 1 251 1 342 1 138 1 187 4 18 1 164 2 349 4 215 4 259 1 121 2 
53 1 27 1 73 1 100 1 126 1 269 1 104 1 333 1 296 1 318 2 297 1 227 2 36 1 360 1 183 1 42 1 321 3 210 1 340 3 342 1 45 1 304 2 254 1 116 1 164 1 375 1 349 1 68 1 215 1 23 2 286 2 285 1 
292 2 293 1 171 2 88 2 75 2 62 1 57 2 127 1 239 4 153 1 228 4 37 1 229 1 362 1 160 1 
28 1 135 1 195 1 
11 1 135 1 195 1 87 1 199 1 
28 1 135 1 195 1 
28 1 135 1 195 1 
135 1 195 1 41 1 
135 1 195 1 41 1 
135 1 195 1 41 1 
135 1 195 1 
2 1 313 1 
96 3 42 4 53 2 211 1 73 2 55 1 111 1 170 1 137 1 139 4 344 1 62 1 176 1 165 2 296 8 193 1 94 1 68 2 285 2 286 4 
96 2 42 3 165 2 296 6 211 1 170 1 111 1 137 1 193 1 139 3 344 1 62 1 176 1 101 1 
96 2 42 2 43 1 53 1 109 1 73 1 137 1 14 1 139 2 344 1 314 1 165 1 296 4 68 1 94 1 285 1 286 2 
96 2 42 4 109 1 137 1 139 3 14 1 344 1 277 1 174 1 314 1 372 1 165 1 296 7 94 1 205 2 
96 9 53 2 194 1 73 2 170 1 55 2 56 1 174 2 176 2 314 2 296 23 205 2 42 12 109 2 211 2 111 1 137 3 14 2 139 11 344 3 61 1 62 1 372 1 165 5 193 1 94 4 68 2 285 2 286 4 
42 1 296 1 205 1 
296 1 139 1 174 1 
96 3 53 1 43 1 42 3 109 1 73 1 137 1 14 1 139 3 344 1 314 1 165 2 296 6 68 1 38 1 94 1 286 2 285 1 
96 2 53 1 73 1 356 1 174 1 314 2 296 12 204 1 205 1 129 1 42 6 109 2 137 2 139 6 14 2 344 2 90 1 277 1 213 1 165 1 94 1 68 1 286 2 285 1 263 1 
96 2 42 3 211 1 137 1 139 3 344 1 176 1 165 1 296 6 193 1 94 1 
96 2 42 2 53 1 194 1 211 1 73 1 170 1 55 1 111 1 139 1 176 1 165 1 296 3 94 1 68 1 285 1 286 2 
129 1 96 5 53 1 42 5 211 2 73 1 137 2 139 5 344 2 176 2 103 1 165 3 296 10 193 1 68 1 94 2 286 2 285 1 
129 1 96 1 53 1 109 1 73 1 139 2 344 1 296 2 68 1 94 1 285 1 286 2 
96 2 129 1 42 2 53 1 109 1 73 1 137 1 14 1 139 2 344 1 314 1 165 1 296 4 68 1 94 1 285 1 286 2 
129 1 96 2 42 2 53 3 194 1 220 1 211 1 73 3 55 1 139 1 176 1 165 1 296 3 68 3 94 1 285 3 286 6 
96 12 53 5 194 1 220 1 73 5 170 1 55 2 174 3 176 3 314 3 296 34 81 1 205 4 106 1 129 1 320 1 42 18 43 1 109 3 211 3 111 1 137 5 139 16 14 3 344 5 277 1 62 1 372 1 165 7 193 2 68 5 94 5 286 10 285 5 
96 2 53 1 73 1 170 1 174 1 176 1 296 8 205 1 129 1 42 4 211 1 111 1 137 1 139 4 344 1 277 1 213 1 62 1 165 2 193 1 68 1 286 2 285 1 
96 3 53 2 73 2 170 1 174 1 176 1 296 11 205 2 129 1 42 5 43 1 109 1 211 1 111 1 137 1 139 6 14 1 344 2 277 1 213 1 62 1 372 1 165 2 193 1 68 2 94 1 286 4 285 2 
96 1 53 2 73 2 356 1 174 1 314 2 296 13 204 1 205 1 129 1 43 1 42 7 109 2 137 2 139 6 14 2 344 2 90 1 277 1 213 1 68 2 94 1 286 4 285 2 263 1 
96 5 53 3 73 3 170 1 55 1 356 1 174 1 176 1 314 1 296 17 204 1 205 1 129 1 43 1 42 7 109 2 211 1 111 1 137 2 139 10 14 2 344 3 90 1 277 1 213 1 62 1 165 3 193 1 94 2 68 3 286 6 285 3 263 1 
96 2 53 1 73 1 170 1 174 1 176 1 296 8 205 1 129 1 42 4 211 1 111 1 137 1 139 4 344 1 277 1 213 1 62 1 165 2 193 1 68 1 286 2 285 1 
96 2 53 1 73 1 356 1 174 1 314 2 296 12 204 1 205 1 129 1 42 6 109 2 137 2 139 6 14 2 344 2 90 1 277 1 213 1 165 1 94 1 68 1 286 2 285 1 263 1 
96 1 53 3 73 3 55 1 356 1 174 1 314 1 296 12 204 1 205 1 129 1 42 5 43 1 109 2 137 1 139 7 14 2 344 2 90 1 277 1 213 1 68 3 94 1 286 6 285 3 263 1 
96 4 53 3 220 1 73 3 55 1 356 1 174 1 314 1 296 12 204 1 205 1 129 1 42 5 109 2 137 1 139 7 14 2 90 1 344 2 277 1 213 1 165 2 94 2 68 3 286 6 285 3 263 1 
96 6 42 4 211 3 111 1 170 2 137 1 139 3 344 1 176 3 165 3 296 7 193 1 94 3 
96 1 53 3 220 1 73 3 55 1 356 1 174 1 314 1 296 12 204 1 205 1 129 1 42 5 109 2 137 1 139 7 14 2 344 2 90 1 277 1 213 1 68 3 94 1 286 6 285 3 263 1 
321 1 91 1 340 1 334 1 304 1 183 1 291 1 
321 1 148 1 340 1 304 1 91 1 282 1 48 1 348 1 334 1 217 1 183 1 291 1 
164 1 27 1 342 1 349 1 297 1 360 1 215 1 101 1 300 1 126 1 251 1 
321 2 210 1 27 1 303 1 340 2 342 1 304 1 254 1 100 1 126 1 164 1 227 1 297 1 349 1 360 1 23 1 215 1 183 1 
330 1 27 2 100 1 126 1 179 1 297 1 227 1 360 1 180 1 183 1 158 1 321 2 210 2 340 2 303 1 342 3 304 2 254 1 19 1 349 1 215 1 23 2 287 1 
330 1 27 2 100 1 126 1 179 1 297 2 227 1 360 1 180 1 183 1 158 1 321 2 210 2 340 2 303 1 342 3 304 2 19 1 167 1 349 2 243 1 215 2 23 2 287 1 
330 1 1 2 54 2 27 1 292 1 126 1 179 1 297 3 361 1 360 1 272 1 158 1 232 1 210 1 342 4 323 1 187 1 327 1 164 1 239 1 167 1 349 3 215 3 
1 2 330 1 210 1 27 1 54 2 292 1 342 4 187 1 126 1 164 1 179 1 239 1 191 1 167 1 297 3 349 3 360 1 361 1 272 1 215 3 158 1 232 1 
349 1 297 1 360 1 215 1 16 1 126 1 
210 1 27 2 342 3 112 1 312 1 16 1 370 1 47 1 4 1 371 1 126 2 328 1 164 2 316 1 297 7 349 7 154 1 360 3 258 1 215 6 51 1 
96 2 53 2 27 1 73 2 170 1 311 1 100 1 267 1 176 1 223 1 126 1 269 2 333 1 296 6 227 1 297 1 155 1 360 1 183 2 130 1 42 3 321 2 210 1 211 1 340 2 303 1 111 1 342 1 137 1 112 1 139 3 45 1 344 1 304 1 254 1 62 1 116 2 165 2 349 1 193 1 283 1 68 2 23 1 215 1 285 2 286 4 290 1 
1 3 54 3 26 1 292 1 353 1 173 1 75 1 127 2 297 1 153 2 361 1 272 1 362 1 229 2 160 2 299 1 232 1 365 1 212 1 342 2 187 2 164 1 239 1 144 1 191 1 349 1 215 1 121 1 
210 1 27 1 342 2 112 1 312 1 16 1 126 1 297 2 349 2 360 2 215 2 181 1 232 1 
27 1 342 1 112 1 235 1 126 1 164 1 167 1 297 4 349 4 360 1 215 4 300 1 251 1 
330 1 210 1 27 1 342 1 47 1 126 1 315 1 316 1 270 1 297 2 349 2 257 1 360 2 215 2 
302 1 164 1 65 1 196 1 22 1 349 1 297 1 360 1 215 1 126 1 
131 1 27 1 342 1 112 1 370 1 126 1 297 2 349 2 360 1 215 2 258 1 
330 1 27 2 342 3 112 1 235 1 4 1 126 2 164 1 328 1 297 5 349 5 360 2 215 4 258 1 300 1 251 1 
330 1 27 2 342 3 112 1 235 1 4 1 126 2 164 1 374 1 297 5 349 5 360 2 215 4 258 1 300 1 251 1 
321 2 210 1 27 1 303 1 340 2 342 1 304 1 100 1 126 1 164 1 227 1 297 1 349 1 360 1 23 1 215 1 243 1 183 1 
330 1 210 1 27 1 342 1 312 1 47 1 126 1 316 1 297 1 349 1 154 1 360 2 215 1 
32 1 310 1 265 1 183 1 25 1 
1 2 54 2 310 2 292 1 265 1 295 1 32 2 5 1 7 1 318 1 227 1 36 1 248 1 180 1 272 1 231 1 273 1 183 1 250 1 321 1 340 1 212 1 304 1 305 1 19 2 239 1 23 1 287 1 25 2 
321 1 340 1 310 1 247 1 265 1 304 1 278 1 175 1 25 1 
7 1 265 1 273 1 
134 1 317 1 319 1 101 1 
134 1 366 1 317 1 122 1 34 1 319 1 63 1 
366 1 343 1 284 1 
366 3 134 1 122 1 245 1 169 1 123 1 346 1 63 3 117 2 317 1 34 1 319 1 
134 1 366 2 359 1 317 1 122 1 34 1 21 1 319 1 63 2 
366 1 122 1 186 1 123 1 63 1 65 1 34 1 22 1 319 1 271 1 108 1 
366 1 317 1 122 1 34 1 319 1 123 1 63 1 
134 1 366 1 317 2 122 1 34 1 123 1 63 1 
366 2 233 1 122 2 123 1 113 1 63 2 317 1 34 2 319 1 260 1 
134 1 366 3 122 1 123 1 63 3 200 1 317 1 34 1 240 1 21 2 319 2 120 1 108 1 
302 1 134 1 366 2 122 1 44 1 123 1 358 1 63 2 65 2 317 1 34 1 22 1 21 1 319 1 271 1 
134 1 366 4 122 2 123 1 63 4 359 1 317 1 34 2 8 1 240 1 21 2 319 2 108 1 
134 1 366 1 317 1 122 1 34 1 319 1 123 1 63 1 
134 2 366 4 245 1 122 1 169 1 63 4 117 1 317 2 34 1 240 1 21 2 319 3 10 1 108 1 
366 2 134 1 122 1 123 1 253 1 163 1 63 2 317 1 34 1 21 1 319 1 289 1 
366 3 134 1 245 1 122 1 169 2 234 1 123 1 63 3 117 2 317 1 34 1 319 1 
319 2 279 1 378 1 168 2 
366 1 252 1 122 1 34 1 123 1 63 1 
134 1 366 2 317 1 122 1 34 1 21 1 319 1 123 1 120 1 63 2 
363 1 
134 1 366 1 317 1 122 1 34 1 319 1 123 1 63 1 
134 1 366 3 117 1 317 1 122 1 34 1 21 1 319 1 123 1 120 1 63 3 
240 1 319 1 10 1 108 1 
317 1 319 1 

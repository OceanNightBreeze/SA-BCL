#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 76 104 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 76 104 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 163 1 142 1 218 1 197 3 358 1 143 9 98 5 362 1 202 2 317 2 7 2 72 4 75 2 33 1 321 2 262 6 264 1 267 1 79 1 296 1 185 1 334 9 379 2 19 1 242 1 281 1 190 2 
20 1 163 1 142 1 218 1 197 3 358 1 143 9 98 5 362 1 202 2 317 2 7 2 72 4 75 2 33 1 321 2 262 6 264 1 267 1 79 1 296 1 185 1 334 9 379 2 19 1 242 1 190 2 281 1 
20 1 163 1 142 1 218 1 197 4 358 1 143 10 98 6 362 1 202 2 317 2 7 2 72 5 75 2 33 1 321 2 262 7 264 1 267 1 79 1 296 1 185 1 334 10 379 2 19 1 242 1 190 2 281 1 
20 1 163 1 142 1 218 1 197 2 358 1 143 7 98 4 362 1 202 2 317 2 7 2 72 3 75 1 33 1 321 2 262 4 264 1 267 1 79 1 185 1 334 7 379 2 19 1 242 1 190 2 281 1 
163 1 262 3 218 1 197 1 267 1 296 1 143 4 98 3 362 1 7 1 317 1 202 1 72 2 75 2 334 4 379 1 19 1 190 1 
20 1 321 1 177 1 218 1 79 1 267 1 143 2 98 1 362 1 202 1 291 1 317 1 7 1 254 1 334 2 379 1 
321 1 262 1 218 1 197 1 267 1 143 3 98 2 362 1 202 2 72 1 33 1 334 3 379 2 
163 1 262 7 321 1 142 1 264 1 218 1 197 3 267 1 296 1 143 9 98 5 362 1 373 1 7 1 317 1 202 2 72 4 237 1 75 2 33 1 334 9 19 1 379 2 190 1 
163 1 262 7 321 1 142 1 264 1 218 1 197 3 267 1 296 1 143 9 98 5 362 1 373 1 7 1 317 1 202 2 72 4 237 1 75 2 33 1 334 9 19 1 379 2 190 1 
164 1 118 1 328 1 
144 1 248 2 328 1 
154 2 245 2 234 2 300 1 236 2 44 2 239 1 17 2 
191 1 92 2 44 2 166 1 168 1 123 1 124 1 316 1 47 2 287 1 245 2 68 1 226 1 9 1 127 1 105 1 322 1 266 2 208 1 179 1 231 1 270 1 372 1 211 1 154 2 40 1 275 1 234 2 353 1 300 1 236 3 239 1 17 3 18 1 187 2 189 2 115 1 
154 1 245 1 234 1 299 1 311 1 236 1 44 1 45 1 239 1 17 1 
90 1 129 1 148 1 23 1 118 1 311 1 221 1 360 1 273 1 328 1 154 1 236 1 376 1 17 1 
148 2 23 1 118 1 311 1 44 1 221 1 360 1 273 1 328 1 154 1 245 1 234 1 236 1 376 2 17 1 
147 1 148 1 376 1 256 1 103 1 
232 1 147 1 288 1 148 2 118 1 376 2 256 1 328 1 
147 1 148 1 376 1 
148 1 311 1 44 1 45 1 256 1 269 1 154 1 245 1 299 1 234 1 236 1 376 1 239 1 17 1 
328 1 
232 1 147 1 148 2 118 1 376 2 256 1 43 1 328 1 
1 1 335 2 147 2 148 5 118 1 295 1 256 2 46 2 339 1 327 2 328 1 96 1 232 1 30 1 145 1 376 5 8 1 378 1 216 1 
164 1 300 1 
283 1 44 1 313 1 154 2 245 1 234 1 236 2 300 2 17 2 
62 1 255 1 271 1 
266 1 179 1 231 1 270 1 208 1 124 1 47 1 40 1 300 1 236 1 276 1 17 1 115 1 189 1 127 1 105 1 
162 1 154 3 245 3 234 1 300 1 236 3 44 3 17 3 
154 1 245 1 311 1 236 1 44 1 45 1 17 1 
154 1 245 1 234 1 311 1 283 1 236 1 44 1 313 1 17 1 
191 1 162 1 21 1 92 1 193 1 23 1 283 1 311 1 44 3 166 1 221 1 168 1 123 1 360 1 124 1 316 1 47 1 287 1 245 3 173 1 226 1 127 1 105 1 148 1 322 1 266 1 208 1 270 1 231 1 179 1 273 1 211 1 154 3 40 1 353 1 234 2 300 1 236 4 376 1 239 1 17 4 187 2 115 1 189 1 
129 1 306 1 154 2 162 1 245 1 300 1 236 2 44 1 17 2 
162 2 21 1 148 1 193 1 23 1 283 1 311 1 44 3 221 1 360 1 273 1 328 1 154 3 245 3 70 1 234 1 236 3 376 1 17 3 
162 1 62 1 283 1 44 2 154 2 245 2 234 1 236 2 255 1 17 2 
266 1 179 1 231 1 270 1 208 1 124 1 47 1 40 1 300 1 236 1 17 1 115 1 189 1 127 1 105 1 
219 1 266 1 231 1 270 1 208 1 124 1 47 1 300 1 236 1 354 1 17 1 115 1 189 1 127 1 105 1 
191 1 92 4 62 2 166 2 356 1 222 1 121 1 123 1 316 1 28 1 287 1 289 1 322 1 134 1 136 1 271 2 112 1 211 1 275 2 86 1 255 2 114 1 187 2 305 1 
154 1 245 1 311 1 236 1 44 1 323 1 17 1 360 1 
162 1 21 1 44 1 266 1 208 1 270 1 231 1 179 1 124 1 47 1 154 1 40 1 245 1 236 2 255 1 17 2 115 1 189 1 127 1 105 1 
129 1 306 1 162 2 21 1 283 1 44 4 243 1 154 5 245 4 234 1 236 5 300 1 17 5 261 1 
154 2 245 2 311 1 236 2 44 2 323 1 45 1 17 2 
361 1 227 1 
361 1 227 1 
342 1 4 1 
342 1 4 1 
342 1 4 1 
50 1 361 1 227 1 
84 1 361 1 227 1 
213 1 342 1 158 1 361 2 227 2 4 1 
50 1 361 1 227 1 
50 1 361 1 227 1 
282 1 361 1 227 1 
282 1 361 1 227 1 
282 1 361 1 227 1 
116 1 249 1 148 2 347 1 268 2 110 3 361 2 341 1 328 1 246 1 182 2 14 2 257 1 213 1 376 2 59 1 258 2 227 2 141 2 
308 1 44 2 361 1 245 2 257 1 100 1 31 1 74 1 258 1 227 1 77 1 148 1 133 1 268 1 110 1 350 1 154 2 84 1 14 1 182 1 300 1 236 2 376 1 17 2 
7 1 317 1 190 1 
7 1 317 1 291 1 
97 1 263 1 317 3 291 1 318 1 190 2 
97 1 263 1 317 2 291 1 16 1 190 1 
97 2 263 1 317 2 291 1 190 1 
335 1 1 3 337 2 22 1 308 1 118 1 46 1 256 4 339 2 222 1 121 1 27 1 5 1 289 1 30 1 144 1 247 1 74 1 248 3 77 1 147 1 148 5 38 1 108 2 112 1 327 1 328 2 232 1 351 1 329 1 376 5 280 2 
335 2 1 8 337 6 22 2 118 1 256 7 46 2 339 6 222 3 121 3 5 1 289 3 30 1 144 3 145 1 248 9 103 5 49 5 77 4 346 1 147 6 148 9 151 1 108 6 13 1 112 3 327 2 328 5 232 1 351 2 156 1 329 3 277 1 376 9 240 1 
335 1 1 3 22 1 337 2 118 1 256 2 46 1 339 2 222 1 121 1 27 1 289 1 144 2 247 1 145 1 248 4 77 1 148 3 108 2 112 1 327 1 328 3 351 1 329 1 376 3 280 1 
335 1 1 5 337 4 22 1 118 1 46 1 256 3 339 4 222 2 121 2 27 1 289 2 144 3 145 1 247 1 248 7 77 2 346 1 148 4 108 4 112 2 327 1 328 4 351 1 156 1 329 2 277 1 376 4 280 2 
164 1 152 1 127 1 
41 1 127 1 
252 1 
127 1 105 1 
130 1 194 1 152 2 208 1 127 3 105 1 
208 1 127 1 105 1 
340 1 127 1 
320 2 307 1 92 7 166 3 356 3 222 1 121 1 183 1 352 1 275 4 375 1 377 1 34 1 343 1 305 2 260 1 51 1 
320 2 307 1 92 7 166 3 356 3 222 1 121 1 183 1 352 1 275 4 375 1 377 1 34 1 343 1 305 2 260 1 51 1 
320 2 307 1 92 7 166 3 356 3 222 1 121 1 181 1 183 1 352 1 275 4 375 1 377 1 34 1 343 1 305 2 260 1 51 1 
191 1 307 1 92 6 166 3 356 2 123 1 316 1 36 1 260 1 51 1 320 1 368 1 229 1 153 1 371 1 211 1 352 2 183 1 275 3 377 1 333 1 186 1 187 2 305 1 
191 2 307 1 92 9 166 4 356 4 222 1 121 1 123 2 316 2 343 1 34 1 36 1 51 1 320 2 78 1 210 1 211 2 352 1 183 1 275 5 375 1 377 1 187 4 305 3 
117 1 309 1 218 1 119 1 143 2 124 1 47 1 98 1 362 1 200 1 7 1 202 1 291 1 317 2 126 1 318 1 262 1 321 1 106 1 150 1 266 1 267 1 231 1 85 1 302 1 304 1 334 2 189 1 379 1 190 1 
93 1 218 1 63 1 119 1 143 3 124 1 47 1 98 1 362 1 200 1 7 1 202 1 291 1 317 2 126 1 318 1 321 1 262 2 106 1 250 1 150 1 266 1 231 1 85 1 302 1 304 1 334 3 189 1 379 1 190 1 
93 1 218 1 119 1 143 2 124 1 47 1 98 1 362 1 200 1 291 1 317 2 7 1 126 1 318 1 321 1 262 2 250 1 266 1 231 1 85 1 302 1 304 1 334 2 189 1 190 1 
321 2 63 1 266 1 80 1 231 1 124 1 26 1 143 1 47 1 202 1 374 1 203 1 363 1 302 2 126 2 334 1 344 1 304 2 379 1 115 1 189 1 127 1 105 1 
117 1 119 1 143 1 124 1 47 1 200 1 7 1 202 1 291 1 317 2 126 1 318 1 321 1 106 1 250 1 150 1 266 1 267 1 231 1 85 1 302 1 304 1 334 1 189 1 379 1 190 1 
83 1 
1 2 89 1 335 1 90 1 46 1 339 2 47 2 144 2 203 1 101 1 248 2 105 1 52 2 146 2 147 6 148 5 11 2 207 1 154 1 301 4 17 1 115 2 161 1 22 1 23 1 118 1 311 1 217 1 167 2 221 1 360 1 124 1 30 1 71 1 32 2 259 1 365 1 127 1 129 1 265 2 369 2 266 2 231 1 180 1 327 1 273 1 328 2 138 1 232 3 374 1 236 1 42 1 376 5 189 2 241 1 
90 1 23 1 311 1 217 1 221 1 360 1 101 1 259 1 365 1 129 1 147 2 148 3 265 1 180 1 273 1 154 1 232 1 236 1 376 3 301 2 43 1 17 1 
90 1 23 1 311 1 118 1 217 1 221 1 360 1 101 1 259 1 365 1 129 1 147 1 52 1 148 3 180 1 273 1 328 1 154 1 232 1 236 1 376 3 301 3 43 1 17 1 
90 1 23 1 311 1 118 1 217 1 221 1 360 1 101 1 259 1 365 1 129 1 147 2 52 1 148 3 369 1 265 1 180 1 273 1 328 1 232 1 154 1 236 1 376 3 43 1 301 3 17 1 
1 1 335 1 90 1 23 1 118 5 311 1 217 1 46 1 167 2 339 1 221 1 360 1 30 1 144 2 48 1 101 1 32 2 259 1 76 1 104 1 365 1 129 1 146 2 52 4 147 7 148 5 11 2 369 4 265 4 180 1 327 1 273 1 138 1 328 5 154 1 232 3 233 1 236 1 376 5 238 1 43 1 301 6 17 1 241 1 
1 1 90 1 335 1 23 1 118 1 311 1 217 1 46 1 167 2 339 1 221 1 360 1 30 1 71 1 144 2 101 1 32 2 259 1 248 2 365 1 129 1 52 2 147 4 146 2 148 4 11 2 265 2 369 2 180 1 327 1 273 1 328 2 138 1 232 2 154 1 236 1 376 4 301 4 17 1 241 1 
1 1 90 1 335 1 23 1 118 1 311 1 217 1 46 1 167 2 339 1 221 1 360 1 30 1 144 2 48 1 101 1 32 2 259 1 365 1 76 1 129 1 52 2 147 4 146 2 148 4 11 2 265 2 369 2 180 1 327 1 273 1 328 1 138 1 232 2 154 1 236 1 376 4 238 1 301 4 17 1 241 1 
1 1 90 1 335 1 23 1 118 1 311 1 217 1 46 1 167 2 339 1 221 1 360 1 30 1 144 2 48 1 101 1 32 2 259 1 365 1 76 1 129 1 52 2 147 4 146 2 148 4 11 2 265 2 369 2 180 1 327 1 273 1 328 1 138 1 232 2 154 1 236 1 376 4 238 1 301 4 17 1 241 1 
1 1 90 1 335 1 23 1 118 1 311 1 217 1 46 1 220 2 339 1 221 1 122 1 360 1 95 1 30 1 73 2 101 1 259 1 248 2 365 1 129 1 52 2 147 4 146 2 148 4 11 2 265 2 369 2 180 1 327 1 273 1 328 1 138 1 232 2 154 1 58 1 236 1 376 4 238 1 301 4 17 1 
90 1 129 1 52 1 147 1 148 2 23 1 311 1 217 1 265 1 369 1 221 1 360 1 180 1 273 1 154 1 236 1 101 1 376 2 301 3 259 1 76 1 104 1 365 1 17 1 
90 1 129 1 52 1 147 1 148 2 23 1 311 1 217 1 265 1 369 1 221 1 360 1 180 1 273 1 154 1 236 1 101 1 376 2 301 3 259 1 76 1 104 1 365 1 17 1 
335 1 90 1 1 1 46 1 339 1 95 1 101 1 248 2 146 2 147 4 52 2 148 4 11 2 154 1 301 4 17 1 23 1 311 1 118 1 217 1 221 1 220 2 360 1 30 1 71 1 73 2 259 1 365 1 129 1 369 2 265 2 180 1 273 1 327 1 138 1 328 1 232 2 236 1 376 4 
191 1 164 1 307 1 62 1 92 6 166 3 356 2 222 1 121 1 123 1 316 1 287 1 343 1 34 1 320 1 322 1 271 1 211 1 275 3 300 2 255 1 375 1 86 1 377 1 187 2 305 2 
336 1 191 2 310 1 92 22 62 6 166 9 356 4 168 1 222 2 121 4 123 2 316 2 287 1 289 4 175 1 368 1 322 2 229 4 109 2 271 16 57 1 112 2 372 1 211 2 183 2 329 4 275 13 300 1 255 16 140 2 333 4 305 2 187 4 
191 1 162 1 21 1 62 1 310 1 92 2 44 1 166 1 168 1 123 1 124 1 47 1 316 1 287 1 245 1 127 1 105 1 322 1 228 1 266 1 208 1 270 1 231 1 179 1 56 1 211 1 154 1 372 1 40 1 253 1 275 1 300 1 276 1 236 2 17 2 189 1 115 1 187 2 
191 3 2 2 92 20 44 1 47 3 245 1 287 3 289 2 205 1 343 1 105 2 345 2 250 1 208 2 112 2 154 1 211 3 353 2 300 2 255 7 215 2 17 3 305 4 115 1 162 1 21 1 307 1 310 1 62 7 166 10 356 8 222 3 168 1 65 1 121 3 123 3 124 2 316 3 69 1 34 1 127 2 320 1 322 3 266 3 179 2 231 2 270 2 271 7 372 1 40 2 329 2 183 4 275 10 236 3 278 2 375 1 377 1 189 3 187 6 
162 1 191 2 309 1 92 2 44 1 166 1 168 1 314 1 120 1 123 2 124 2 47 8 316 2 245 1 287 2 203 1 9 2 127 3 105 2 293 1 322 2 250 1 266 8 231 2 154 1 211 2 372 1 212 1 275 1 332 1 236 1 374 1 86 1 17 1 188 1 189 7 115 2 187 4 60 1 
191 1 0 1 62 1 310 1 92 3 283 1 44 1 166 2 356 1 222 1 121 1 123 1 316 1 245 1 287 1 289 1 322 1 271 1 112 1 211 1 154 1 329 1 234 1 275 1 236 1 255 1 17 1 305 1 187 2 
191 1 62 1 92 2 322 1 356 1 136 1 121 1 271 1 123 1 316 1 211 1 287 1 183 1 289 1 275 2 255 1 86 1 187 2 
191 1 62 1 92 2 322 1 166 2 356 1 222 1 271 1 123 1 112 1 316 1 211 1 28 1 287 1 255 1 86 1 305 1 187 2 
191 1 92 4 62 2 166 2 356 2 222 1 121 1 123 1 316 1 287 1 289 1 322 1 271 2 112 1 211 1 329 1 183 1 275 2 86 1 255 2 187 2 305 1 
191 1 62 1 92 2 322 1 356 1 136 1 121 1 271 1 123 1 316 1 211 1 287 1 183 1 289 1 275 2 255 1 60 1 187 2 
191 1 62 1 92 2 322 1 166 2 356 1 222 1 271 1 123 1 112 1 316 1 211 1 28 1 287 1 255 1 305 1 60 1 187 2 
191 1 92 4 62 2 166 2 356 2 222 1 121 1 123 1 316 1 287 1 289 1 322 1 271 2 112 1 211 1 329 1 183 1 275 2 255 2 187 2 60 1 305 1 
191 1 92 4 62 2 166 2 356 2 222 1 121 1 123 1 316 1 287 1 289 1 322 1 271 2 112 1 211 1 329 1 183 1 275 2 255 2 187 2 305 1 
191 1 92 2 166 1 168 1 123 1 124 1 47 1 316 1 287 1 127 1 105 1 322 1 266 1 208 1 270 1 231 1 179 1 372 1 211 1 40 1 275 1 353 1 300 1 236 1 17 1 189 1 115 1 187 2 
191 1 92 2 219 1 166 1 168 1 123 1 124 1 47 1 316 1 287 1 201 1 127 1 105 1 322 1 266 1 208 1 270 1 231 1 372 1 211 1 275 1 300 1 236 1 354 1 17 1 189 1 115 1 187 2 
191 1 310 1 92 4 62 2 166 2 356 2 222 1 121 1 123 1 316 1 287 1 289 1 322 1 271 2 112 1 211 1 329 1 183 1 275 2 255 2 187 2 305 1 
191 1 62 2 92 4 309 1 166 2 356 2 222 1 121 1 123 1 124 1 47 1 316 1 287 1 289 1 127 1 105 1 322 1 266 1 271 2 208 1 270 1 231 1 179 1 112 1 211 1 40 1 183 1 329 1 275 2 353 1 236 1 255 2 215 1 17 1 305 1 189 1 187 2 
191 1 310 1 92 3 62 1 283 1 44 1 166 1 356 1 222 1 121 1 123 1 316 1 245 1 287 1 289 1 322 1 271 1 112 1 211 1 154 1 183 1 329 1 234 1 235 1 275 2 236 1 255 1 17 1 187 2 
191 4 61 1 307 1 92 33 3 3 166 16 64 1 356 6 222 4 121 4 123 4 199 1 316 4 289 3 125 1 204 1 34 1 343 1 36 2 128 1 292 1 320 1 10 1 53 1 368 2 131 1 78 1 229 2 135 1 230 1 112 3 211 4 297 1 183 3 329 3 275 17 375 1 377 1 333 2 305 3 187 8 
61 1 191 3 92 46 3 4 166 22 64 1 356 8 222 6 121 7 123 3 316 3 289 7 125 2 204 1 36 2 128 1 292 1 53 1 131 2 78 1 368 2 229 4 349 1 135 1 230 1 109 2 112 6 211 3 297 1 183 4 329 7 275 24 140 2 333 4 187 6 305 4 
191 4 92 60 3 4 289 7 204 1 343 2 292 1 53 1 10 1 349 1 109 2 112 5 211 4 297 1 157 1 305 6 61 1 307 2 166 27 356 13 64 1 222 7 121 9 123 4 316 4 125 1 34 2 36 2 128 1 320 2 78 1 131 2 368 3 229 5 135 1 230 1 329 7 183 7 275 33 375 2 377 2 333 5 140 2 187 8 
191 4 61 1 307 1 92 35 3 4 166 17 64 1 356 5 222 4 121 4 123 4 316 4 289 3 125 1 204 1 34 1 343 1 36 2 128 1 292 1 320 1 10 1 53 1 368 2 131 1 78 1 229 2 349 1 135 1 230 1 112 3 211 4 297 1 183 3 329 3 275 18 375 1 377 1 333 2 305 2 187 8 
61 1 191 3 307 1 92 42 3 4 166 20 64 1 356 8 222 5 121 6 123 3 316 3 289 5 125 1 204 1 34 1 343 1 36 2 128 1 292 1 320 1 53 1 368 2 131 1 78 1 229 3 349 1 135 1 230 1 109 1 112 4 211 3 297 1 183 3 329 5 275 22 375 1 377 1 140 1 333 3 187 6 305 5 
246 1 14 1 182 1 347 1 213 1 268 1 258 1 159 1 361 1 227 1 
84 1 350 1 
223 1 14 1 182 1 268 1 55 1 258 1 366 1 361 1 227 1 
249 1 148 1 347 1 268 1 110 2 361 1 341 1 328 1 246 1 257 1 182 1 14 1 213 1 376 1 59 1 258 1 227 1 141 1 
249 1 148 1 347 1 268 1 110 2 361 1 341 1 328 1 246 1 257 1 182 1 14 1 213 1 376 1 59 1 258 1 227 1 141 1 
249 1 148 1 347 1 268 1 110 2 361 1 341 1 328 1 246 1 257 1 182 1 14 1 213 1 376 1 59 1 258 1 227 1 141 1 
284 1 158 1 50 1 
284 1 158 1 50 1 
282 1 25 1 
282 1 25 1 158 1 
100 1 133 1 
308 1 44 2 256 1 341 1 361 1 245 2 169 1 100 1 31 1 74 1 258 1 227 1 77 1 148 1 133 1 268 1 110 1 350 1 154 2 84 1 14 1 182 1 300 1 236 2 376 1 17 2 141 1 
284 1 50 1 
282 1 25 1 158 1 
191 1 310 1 92 2 165 1 312 1 166 1 168 1 123 1 124 1 47 2 316 1 287 1 9 2 127 1 105 1 293 1 322 1 266 2 325 1 81 1 82 1 231 1 154 2 211 1 372 1 275 1 236 2 17 2 188 1 187 2 189 2 
309 1 250 1 150 1 266 2 119 1 178 1 231 1 124 1 47 2 85 1 15 1 298 1 7 1 317 2 291 1 126 1 189 2 318 1 190 1 
250 1 150 1 266 1 119 1 231 1 111 1 124 1 47 1 85 1 298 1 7 1 317 2 291 1 126 1 189 1 318 1 190 1 
176 1 266 1 80 1 231 1 124 1 47 1 15 1 374 1 203 1 126 1 115 1 189 1 127 1 105 1 
250 1 150 1 266 1 119 1 178 1 231 1 124 1 47 1 85 1 15 1 298 1 7 1 317 2 291 1 126 1 189 1 318 1 190 1 
224 1 
1 1 164 1 118 1 339 1 378 1 216 1 328 1 
1 1 335 1 118 1 46 1 339 1 167 1 30 1 144 1 32 1 248 1 147 1 148 1 327 1 328 2 232 1 376 1 241 1 
1 7 335 3 337 6 196 2 46 3 339 7 47 1 289 2 144 6 102 2 248 12 105 1 147 5 148 5 149 1 152 2 108 6 208 1 112 2 214 1 160 1 115 1 22 1 24 2 222 2 121 2 124 1 30 3 225 2 364 2 127 6 130 1 266 1 231 2 327 3 273 2 328 6 232 3 329 2 41 3 331 2 42 1 278 2 376 5 189 1 
1 13 61 1 335 2 22 1 337 8 118 2 24 3 46 2 64 1 339 8 357 1 222 4 66 1 121 4 30 2 289 4 144 5 204 1 248 10 147 1 148 1 53 1 12 1 368 1 229 2 108 8 109 1 327 2 112 4 328 7 232 1 297 1 329 4 42 1 376 1 333 2 140 1 
335 1 1 2 307 1 311 1 24 2 44 1 45 1 46 1 339 2 222 1 121 2 94 1 245 1 30 1 48 1 34 1 148 1 12 1 269 1 327 1 154 1 299 1 234 1 236 1 376 1 377 1 239 1 17 1 
335 1 1 1 118 1 46 1 339 1 327 1 328 1 30 1 216 1 378 1 
1 5 337 5 12 1 24 2 339 5 108 5 222 2 121 2 112 2 328 5 329 2 289 2 144 5 278 1 248 10 
232 1 147 1 148 1 118 1 376 1 328 1 
89 1 161 1 335 2 1 2 22 2 46 2 339 2 124 2 47 4 290 1 30 1 145 1 203 1 35 2 127 2 105 2 37 1 147 4 148 3 266 4 251 1 208 1 370 1 231 3 209 1 327 2 232 2 330 1 184 1 374 1 42 2 376 3 189 4 115 2 
191 1 92 1 44 2 166 1 168 1 123 1 124 1 316 1 47 1 245 2 287 1 226 1 127 1 105 1 322 1 266 1 179 1 231 1 270 1 208 1 211 1 154 2 40 1 234 2 353 1 300 1 236 3 239 1 17 3 187 2 189 1 115 1 
335 1 1 1 320 1 337 2 22 1 118 2 46 1 339 2 108 2 327 1 328 4 30 1 144 2 42 1 248 4 
206 1 14 1 258 1 
246 1 14 1 348 1 133 1 258 1 
206 1 14 1 258 1 
206 1 14 1 258 1 
14 1 258 1 244 1 
14 1 258 1 244 1 
14 1 258 1 244 1 
14 1 258 1 
361 1 227 1 
191 2 320 1 307 1 92 8 166 4 356 3 222 1 121 1 123 2 316 2 211 2 183 1 275 4 375 1 377 1 34 1 343 1 305 2 187 4 36 1 
320 1 164 1 307 1 92 6 166 3 356 2 222 1 121 1 275 3 375 1 377 1 343 1 34 1 305 2 
191 1 92 4 166 2 356 2 222 1 121 1 123 1 112 1 67 1 316 1 211 1 329 1 289 1 183 1 275 2 305 1 187 2 
92 12 368 1 229 2 166 6 356 2 222 2 109 1 121 2 112 2 183 1 329 2 289 2 275 6 140 1 333 2 305 1 
191 2 307 2 92 23 166 12 356 9 222 3 121 3 123 2 316 2 289 2 34 1 343 1 36 2 320 1 229 2 109 1 153 1 57 1 112 2 211 2 183 4 329 2 275 11 375 1 377 2 333 2 140 1 305 5 187 4 
92 1 229 1 166 1 
92 1 275 1 333 1 
191 1 92 6 166 3 356 3 222 1 121 1 123 1 67 1 112 1 316 1 211 1 329 1 289 1 183 1 275 3 278 1 187 2 305 2 
61 1 191 1 92 22 166 11 64 1 356 4 222 4 121 4 123 1 316 1 289 4 204 1 53 1 368 1 78 1 229 2 109 1 112 4 211 1 297 1 329 4 183 2 275 11 333 2 140 1 187 2 305 2 
307 1 92 6 166 3 356 2 222 1 121 1 183 1 275 3 377 1 34 1 305 1 
191 1 307 1 92 3 166 2 356 2 153 1 123 1 316 1 211 1 183 1 275 1 375 1 377 1 343 1 305 1 36 1 187 2 
191 1 307 2 92 10 78 1 166 5 356 5 222 2 121 2 123 1 94 1 316 1 211 1 183 2 275 5 377 2 34 1 187 2 305 3 
191 1 92 2 78 1 356 1 121 1 123 1 316 1 211 1 289 1 183 1 275 2 187 2 
191 1 92 4 78 1 166 2 356 2 222 1 121 1 123 1 112 1 316 1 211 1 329 1 289 1 183 1 275 2 305 1 187 2 
191 3 10 1 307 1 92 3 78 1 166 2 356 2 153 1 123 3 316 3 211 3 183 1 275 1 377 1 36 1 187 6 305 1 
191 4 307 2 92 15 166 8 356 6 222 2 121 2 123 4 94 1 67 1 316 4 34 1 343 1 36 1 10 1 368 1 78 1 229 1 153 1 211 4 183 3 275 7 375 1 377 2 333 1 186 1 187 8 305 3 
61 1 191 2 307 2 92 24 166 10 356 9 64 1 222 4 121 5 123 2 94 1 316 2 289 2 204 1 34 2 343 1 36 1 320 1 53 1 368 1 78 1 229 1 112 1 211 2 297 1 183 4 329 2 275 14 375 1 377 2 333 1 187 4 305 5 
61 1 191 3 307 1 92 17 166 7 64 1 356 4 222 2 121 3 123 3 67 1 316 3 289 2 204 1 34 1 343 1 36 1 320 1 53 1 368 1 78 1 229 1 112 1 211 3 297 1 183 1 329 2 275 10 375 1 377 1 333 1 187 6 305 3 
61 1 191 3 307 1 92 29 166 15 64 1 356 6 222 5 121 5 123 3 67 1 316 3 289 4 204 1 34 1 343 1 36 1 320 1 53 1 368 1 78 1 229 2 109 1 112 4 211 3 297 1 329 4 183 2 275 14 375 1 377 1 333 2 140 1 187 6 305 4 
61 1 191 3 307 1 92 27 166 12 64 1 356 7 222 4 121 5 123 3 67 1 316 3 289 4 204 1 34 1 343 1 36 1 320 1 53 1 368 1 78 1 229 2 109 1 112 3 211 3 297 1 329 4 183 3 275 15 375 1 377 1 333 2 140 1 187 6 305 4 
61 1 191 2 307 2 92 24 166 10 356 9 64 1 222 4 121 5 123 2 94 1 316 2 289 2 204 1 34 2 343 1 36 1 320 1 53 1 368 1 78 1 229 1 112 1 211 2 297 1 183 4 329 2 275 14 375 1 377 2 333 1 187 4 305 5 
61 1 191 1 92 22 166 11 64 1 356 4 222 4 121 4 123 1 316 1 289 4 204 1 53 1 368 1 78 1 229 2 109 1 112 4 211 1 297 1 329 4 183 2 275 11 333 2 140 1 187 2 305 2 
61 1 191 4 307 1 92 28 166 13 64 1 356 7 222 4 121 5 123 4 67 1 316 4 289 4 204 1 34 1 343 1 36 2 320 1 53 1 368 1 78 1 229 2 109 1 112 3 211 4 297 1 329 4 183 3 275 15 375 1 377 1 333 2 140 1 187 8 305 4 
61 1 191 2 92 7 166 4 356 1 222 1 121 1 123 2 316 2 289 1 10 1 368 1 78 1 229 2 109 1 112 1 211 2 329 1 275 3 333 1 187 4 305 1 
307 3 92 7 166 4 356 6 222 1 121 1 183 3 275 3 375 1 377 3 343 2 34 1 305 3 
61 1 191 2 92 7 166 4 356 1 222 1 121 1 123 2 316 2 289 1 10 1 368 1 78 1 229 2 109 1 112 1 211 2 329 1 275 3 333 1 187 4 305 1 
154 1 129 1 306 1 300 1 236 1 17 1 315 1 
306 1 129 1 195 1 132 1 324 1 286 1 315 1 154 1 300 1 236 1 279 1 17 1 
164 1 374 1 203 1 266 1 231 1 189 1 115 1 127 1 124 1 105 1 47 1 
162 1 44 1 266 1 208 1 270 1 231 1 124 1 47 1 154 1 245 1 40 1 300 1 236 2 17 2 115 1 189 1 127 1 105 1 
162 1 23 1 311 1 44 2 340 1 360 1 124 1 47 1 245 1 171 1 35 1 127 3 105 2 266 1 231 1 270 1 208 2 154 2 40 1 300 1 236 2 17 2 189 1 
162 1 23 1 311 1 44 2 219 1 340 1 360 1 124 1 47 2 245 1 171 1 172 1 35 1 127 3 105 2 266 2 231 1 270 1 208 2 154 2 300 1 236 2 17 2 189 2 
118 1 340 1 124 1 47 3 99 1 171 1 172 1 35 1 127 4 105 1 147 1 148 2 152 1 266 3 326 1 231 1 208 1 273 1 328 1 41 1 376 2 189 3 115 1 
147 1 148 2 118 1 196 1 152 1 266 3 340 1 208 1 231 1 273 1 124 1 328 1 47 3 171 1 41 1 172 1 376 2 35 1 115 1 189 3 127 4 105 1 
332 1 266 1 231 1 189 1 124 1 47 1 
37 1 130 1 309 1 250 1 266 7 285 1 314 1 120 1 208 1 231 3 124 2 47 7 290 1 212 1 332 1 9 1 188 1 115 2 189 6 127 3 105 2 
191 2 92 6 44 1 47 1 245 1 287 2 343 1 105 1 345 1 208 1 154 1 211 2 353 1 300 2 255 1 215 1 17 2 305 2 162 1 307 1 62 1 309 1 310 1 165 1 166 3 356 2 222 1 121 1 123 2 124 1 316 2 34 1 127 1 320 1 322 2 266 1 179 1 231 1 270 1 271 1 40 1 275 3 236 2 375 1 377 1 189 1 187 4 
1 1 335 2 118 1 196 1 46 2 256 1 339 1 47 1 30 2 225 1 364 1 102 1 127 2 147 2 148 3 152 1 266 1 327 2 273 1 328 1 232 1 330 1 41 1 376 3 378 1 216 1 189 1 115 1 
130 1 309 1 332 1 152 1 214 1 266 2 231 2 208 1 189 2 127 2 124 1 105 1 47 2 
309 1 266 4 39 1 231 1 124 1 47 4 374 1 203 1 172 1 115 1 189 4 127 1 105 1 
37 1 266 2 370 1 208 1 231 2 124 1 47 2 290 1 184 1 35 1 205 1 189 2 127 1 105 1 
7 1 317 1 291 1 266 1 119 1 231 1 189 1 115 1 124 1 47 1 
309 1 250 1 312 1 266 2 231 1 124 1 47 2 189 2 188 1 127 1 105 1 
309 1 266 5 39 1 314 1 120 1 231 2 124 2 47 5 374 1 203 1 35 1 115 1 189 4 188 1 127 3 105 2 
309 1 266 5 39 1 314 1 231 2 124 2 47 5 374 1 203 1 139 1 35 1 115 1 189 4 188 1 127 3 105 2 
162 1 44 1 219 1 266 1 208 1 270 1 231 1 124 1 47 1 154 1 245 1 300 1 236 2 17 2 115 1 189 1 127 1 105 1 
37 1 130 1 266 1 285 1 208 1 231 2 124 1 47 1 290 1 35 1 189 1 127 1 105 1 
154 1 91 1 236 1 54 1 107 1 325 1 81 1 17 1 82 1 
91 1 113 1 294 1 
91 1 300 1 338 1 54 1 107 1 
91 1 148 2 23 1 193 1 118 1 311 1 338 2 294 1 54 2 256 1 198 1 107 2 221 1 360 1 273 1 328 1 113 1 300 1 376 2 
98 1 164 1 362 1 218 1 
98 1 362 1 202 1 218 1 334 1 379 1 143 1 
321 1 304 1 334 1 
98 1 362 1 6 1 202 1 218 1 79 2 174 1 267 1 87 1 334 3 379 1 143 3 
98 1 362 1 262 1 202 1 218 1 75 1 334 2 379 1 143 2 
98 1 163 1 7 1 317 1 202 1 72 1 267 1 334 1 379 1 143 1 190 1 
98 1 362 1 202 1 267 1 334 1 379 1 143 1 
362 2 202 1 218 1 267 1 334 1 379 1 143 1 
88 1 192 1 267 1 137 1 143 2 98 1 362 1 202 2 334 2 379 2 
262 2 264 1 142 1 218 1 197 1 267 1 143 3 98 2 362 1 202 1 72 1 334 3 379 1 
262 1 218 1 267 1 143 2 98 1 362 1 291 1 317 2 202 1 170 1 7 1 334 2 379 1 318 1 190 1 
262 2 218 1 197 1 267 1 296 1 143 4 98 2 362 1 202 2 72 1 75 1 334 4 379 2 
98 1 362 1 202 1 218 1 267 1 334 1 379 1 143 1 
262 2 218 2 197 1 79 1 143 4 274 1 98 3 362 2 202 1 72 1 174 1 87 1 334 4 379 1 
262 1 218 1 267 1 272 1 143 2 98 1 362 1 202 1 237 1 334 2 379 1 367 1 
218 1 267 1 79 2 143 3 98 1 29 1 362 1 202 1 174 1 334 3 87 2 379 1 
155 1 98 2 319 1 355 2 
202 1 267 1 334 1 359 1 379 1 143 1 
98 1 362 1 262 1 202 1 142 1 218 1 267 1 334 2 379 1 143 2 
303 1 
98 1 362 1 202 1 218 1 267 1 334 1 379 1 143 1 
262 1 142 1 218 1 267 1 79 1 143 3 98 1 362 1 202 1 334 3 379 1 
98 1 72 1 197 1 274 1 
98 1 362 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 277 (192,205) (192,205) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 277 (192,205) (192,205) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 277 (192,205) (192,205) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 277 (192,205) (192,205) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 1 192 1 165 1 205 1 124 1 265 1 17 1 331 1 238 1 87 1 277 1 294 1 189 1 
331 1 238 1 87 1 326 1 192 1 277 1 165 1 205 1 294 1 189 1 124 1 17 1 265 1 
331 1 238 1 87 1 326 1 192 1 277 1 165 1 205 1 294 1 189 1 124 1 17 1 265 1 
331 1 238 1 87 1 326 1 192 1 277 1 165 1 205 1 294 1 189 1 124 1 17 1 265 1 
176 1 282 3 165 4 14 1 179 1 265 1 17 1 257 2 331 1 238 4 127 3 87 1 182 1 208 1 277 1 212 2 294 1 367 1 
282 1 165 2 109 1 247 1 317 1 124 1 265 1 17 1 238 2 331 1 87 1 208 1 277 1 76 1 367 1 189 1 
282 2 165 3 14 1 265 2 17 2 257 1 238 3 206 1 127 1 87 1 208 1 367 1 189 1 
193 1 165 9 257 4 127 7 238 9 331 1 87 1 277 1 367 1 282 5 176 1 14 3 179 1 17 2 265 2 370 1 206 1 96 1 182 1 208 1 212 2 294 1 189 1 190 1 
193 1 165 9 257 4 127 7 238 9 331 1 87 1 277 1 367 1 282 5 176 1 14 3 179 1 17 2 265 2 370 1 206 1 96 1 182 1 208 1 212 2 294 1 189 1 190 1 
297 1 139 1 118 1 
139 1 187 1 62 2 
153 2 335 2 88 1 130 2 213 2 37 2 22 2 55 1 
355 1 325 1 255 2 301 1 219 1 150 1 335 3 365 1 88 1 130 2 278 1 259 1 37 2 224 1 7 1 366 1 174 1 134 1 241 1 153 2 44 2 227 1 178 1 264 1 108 2 314 2 111 1 266 1 289 1 290 1 75 2 213 2 377 1 22 3 323 1 55 1 324 1 
153 1 24 1 122 1 335 1 130 1 213 1 37 1 116 1 22 1 55 1 
24 2 297 1 235 1 122 1 304 1 335 2 130 1 37 2 153 1 46 1 10 1 139 1 181 1 248 1 18 1 376 1 213 1 116 1 163 1 22 2 55 1 
24 2 297 1 235 1 122 1 304 2 335 2 130 2 37 2 153 2 46 1 10 2 139 1 248 1 18 1 213 2 116 1 163 1 22 2 55 1 
304 1 250 1 10 1 125 1 71 1 
304 2 250 1 297 1 209 1 10 2 172 1 139 1 125 1 
304 1 250 1 10 1 
153 1 24 1 10 1 122 1 125 1 304 1 335 1 130 1 213 1 116 1 37 1 163 1 22 1 55 1 
139 1 
304 2 250 1 297 1 10 2 172 1 60 1 139 1 125 1 
136 1 226 2 297 1 93 1 10 5 139 1 217 1 13 1 5 2 125 2 237 1 51 1 304 5 250 2 172 1 97 2 252 1 40 1 191 1 
88 1 118 1 
153 1 82 1 24 1 180 1 335 2 130 1 88 1 213 1 37 2 22 2 379 1 
31 1 120 1 144 1 
44 1 355 1 325 1 178 1 264 1 255 1 236 1 266 1 335 1 88 1 75 1 377 1 224 1 366 1 22 1 134 1 
153 4 82 1 216 1 15 1 171 1 335 5 130 1 88 1 33 2 376 1 52 1 213 4 37 5 22 5 
153 1 24 1 335 1 213 1 116 1 37 1 22 1 
153 1 216 1 44 1 325 1 355 1 178 1 264 1 255 1 266 1 335 2 144 1 33 1 75 1 377 1 213 1 37 1 224 1 366 1 134 1 22 2 
153 3 335 3 130 1 88 1 33 1 213 3 37 3 22 3 
153 1 24 1 335 1 213 1 116 1 37 1 22 1 
153 1 82 1 24 1 180 1 335 1 130 1 213 1 37 1 22 1 
82 1 216 1 325 1 24 1 355 1 235 1 255 1 301 1 303 1 304 1 150 1 335 4 88 1 130 2 33 1 259 1 37 3 224 1 7 1 366 1 174 1 134 1 241 1 153 3 44 1 227 1 178 1 46 1 10 1 264 1 108 2 314 1 111 1 266 1 158 1 18 1 248 1 289 1 75 1 377 1 213 3 22 4 323 1 55 1 
153 1 24 1 335 2 171 1 88 1 33 1 376 1 213 1 37 2 22 2 379 1 
153 3 82 1 216 1 24 1 46 1 10 1 235 1 139 1 346 1 303 1 304 1 248 1 18 1 335 3 130 1 33 2 213 3 37 3 22 3 
153 2 82 1 120 1 335 2 130 1 33 1 144 1 213 2 37 2 22 2 
44 1 355 1 325 1 178 1 264 1 255 1 266 1 335 1 88 1 75 1 377 1 224 1 366 1 22 1 134 1 
44 1 355 1 325 1 178 1 26 1 264 1 12 1 255 1 335 1 88 1 75 1 377 1 366 1 22 1 134 1 
215 1 2 1 120 2 330 1 301 1 219 2 31 2 259 1 198 1 225 1 174 1 241 1 281 1 227 2 108 2 111 1 314 4 289 1 184 1 144 2 185 1 293 1 162 1 188 1 
153 1 24 1 235 1 50 1 335 1 213 1 37 1 22 1 
99 1 140 1 
99 1 140 1 
313 1 274 1 
313 1 274 1 
313 1 274 1 
99 1 347 1 140 1 
99 1 347 1 140 1 
333 1 99 1 140 1 
99 2 137 1 313 1 274 1 140 2 321 1 
99 1 347 1 140 1 
99 1 36 1 140 1 
99 1 36 1 140 1 
99 1 36 1 140 1 
99 1 329 1 361 1 276 1 304 1 332 1 333 1 335 2 88 1 37 2 104 1 153 2 41 1 309 1 10 1 110 1 140 1 48 1 372 1 95 1 210 1 211 1 213 2 22 2 
41 3 72 1 99 2 10 2 3 1 139 1 110 1 140 2 361 2 319 2 276 2 372 2 304 2 267 1 102 1 220 1 21 1 104 2 321 1 
331 1 277 1 294 1 
331 1 277 1 247 1 
331 3 315 1 247 1 294 2 169 1 343 1 
331 2 170 1 315 1 247 1 294 1 343 1 
331 2 315 1 247 1 294 1 343 2 
84 2 58 1 297 1 217 2 61 1 5 1 125 4 62 3 256 2 304 5 332 1 172 1 338 1 340 2 262 1 281 1 226 1 309 1 10 5 139 2 250 1 269 1 351 1 210 1 97 1 252 3 162 1 293 1 187 1 188 1 191 1 380 1 
84 6 297 1 58 1 217 6 195 1 5 2 125 7 62 9 256 6 304 9 172 1 341 1 68 5 262 3 71 5 281 3 226 2 10 9 345 1 244 1 139 5 13 1 250 6 183 1 269 2 210 4 373 1 97 2 252 8 162 3 293 3 187 3 188 3 191 1 380 2 
84 2 297 1 61 1 217 2 5 1 125 2 256 2 62 4 304 3 340 1 262 1 281 1 226 1 10 3 139 3 13 1 269 1 351 1 210 1 97 1 252 3 162 1 293 1 187 2 188 1 380 1 
84 4 297 1 61 1 217 4 195 1 5 1 125 3 62 7 256 4 304 4 340 2 262 2 281 2 226 1 10 4 345 1 139 4 13 1 183 1 269 1 351 1 210 2 97 1 252 5 162 2 293 2 187 3 188 2 380 1 
178 1 118 1 202 1 
178 1 337 1 
305 1 
178 1 366 1 134 1 
23 1 178 1 
178 1 366 1 
178 3 350 1 194 1 366 1 134 1 202 2 
79 1 0 1 80 1 227 3 312 1 314 7 113 2 219 4 197 1 184 3 185 2 162 1 293 1 91 1 260 1 92 1 271 1 
79 1 0 1 80 1 227 3 312 1 314 7 113 2 219 4 197 1 184 3 185 2 162 1 293 1 91 1 260 1 92 1 271 1 
79 1 0 1 80 1 227 3 312 1 314 7 113 2 219 4 197 1 184 3 185 2 162 1 293 1 91 1 260 1 92 1 39 1 271 1 
79 2 0 2 80 1 28 3 301 1 218 1 219 16 197 1 221 1 259 1 91 5 260 2 92 2 262 3 174 1 106 4 201 1 175 1 281 3 241 1 227 15 312 1 108 2 314 31 157 1 113 3 268 1 184 10 185 5 293 4 162 4 188 3 271 1 295 1 
0 1 79 1 80 1 121 1 301 2 218 1 219 5 259 2 91 1 260 1 92 1 174 2 241 2 227 4 312 1 108 4 314 9 113 2 184 4 185 3 186 1 162 1 293 1 271 1 
354 1 325 1 298 1 165 2 255 1 169 1 127 1 238 2 331 2 87 1 277 1 279 1 367 1 44 1 282 1 138 1 264 1 155 1 247 1 316 1 17 1 265 1 208 1 74 1 75 1 145 1 294 1 189 1 322 1 253 1 
354 1 325 1 298 1 328 1 165 3 255 1 169 1 238 3 127 2 331 2 277 1 367 1 44 1 308 1 282 1 138 1 264 1 155 1 156 1 247 1 316 1 17 1 265 1 208 1 74 1 75 1 145 1 294 1 189 1 322 1 
354 1 325 1 298 1 328 1 165 2 255 1 169 1 238 2 127 2 331 2 277 1 367 1 44 1 308 1 282 1 138 1 264 1 155 1 247 1 316 1 208 1 74 1 75 1 294 1 189 1 
325 1 355 1 25 1 298 2 165 1 255 1 238 1 65 1 366 1 44 1 178 1 138 2 264 1 156 1 316 2 143 1 17 1 265 1 348 1 288 1 75 1 251 1 189 2 
354 1 44 1 325 1 138 1 264 1 298 1 165 1 328 1 155 1 255 1 247 1 169 1 316 1 265 1 17 1 331 2 238 1 87 1 277 1 74 1 75 1 279 1 145 1 294 1 322 1 189 1 
47 1 
325 1 232 1 235 1 101 2 5 1 62 2 148 1 335 1 65 1 66 1 199 1 151 1 240 2 10 5 286 1 18 1 248 1 250 6 251 1 75 2 353 1 252 2 77 2 22 1 355 2 24 1 297 2 164 1 300 1 217 2 167 1 255 2 362 1 304 5 172 3 37 1 173 2 366 1 226 1 44 2 310 4 178 1 46 1 263 1 264 1 139 3 181 1 269 1 230 2 97 1 376 1 53 2 187 2 54 2 191 1 
24 1 297 2 164 1 235 1 300 1 60 1 304 3 335 1 172 1 37 1 66 1 151 1 310 2 46 1 263 1 10 3 139 2 181 1 18 1 248 1 250 2 376 1 53 1 22 1 
310 3 24 1 263 1 297 2 46 1 235 1 10 2 164 1 300 1 139 2 181 1 248 1 18 1 304 2 335 1 376 1 66 1 37 1 22 1 151 1 240 1 
24 1 297 2 164 1 235 1 300 1 101 1 60 1 304 3 335 1 172 1 37 1 66 1 151 1 240 1 310 3 46 1 263 1 10 3 139 2 181 1 18 1 248 1 250 2 376 1 53 1 22 1 
232 1 235 1 101 4 60 1 5 1 335 2 66 1 151 1 240 3 153 1 344 1 10 5 248 1 18 1 250 7 213 1 353 1 116 1 252 1 163 1 22 2 77 2 78 1 24 2 297 4 164 1 27 1 300 1 122 1 217 1 304 5 130 1 172 3 37 2 173 2 226 1 310 5 263 1 46 1 139 4 181 1 49 1 376 1 375 1 97 1 230 2 53 4 187 2 55 1 54 2 191 1 
232 1 235 1 101 2 5 1 62 2 335 1 66 1 151 1 240 2 10 4 286 1 248 1 18 1 250 4 353 1 252 1 22 1 77 2 24 1 297 3 164 1 300 1 217 1 304 4 172 2 37 1 173 2 226 1 310 4 46 1 263 1 139 4 181 1 376 1 97 1 230 2 53 2 187 2 54 2 191 1 
232 1 24 1 297 3 164 1 235 1 27 1 101 2 300 1 217 1 5 1 304 4 335 1 172 2 37 1 66 1 173 2 151 1 240 2 344 1 226 1 310 4 46 1 263 1 10 4 139 3 181 1 18 1 248 1 250 4 230 2 97 1 376 1 375 1 353 1 252 1 53 2 187 2 77 2 22 1 54 2 191 1 
232 1 24 1 297 3 164 1 235 1 27 1 101 2 300 1 217 1 5 1 304 4 335 1 172 2 37 1 66 1 173 2 151 1 240 2 344 1 226 1 310 4 46 1 263 1 10 4 139 3 181 1 18 1 248 1 250 4 230 2 97 1 376 1 375 1 353 1 252 1 53 2 187 2 77 2 22 1 54 2 191 1 
119 2 24 1 297 3 164 1 235 1 101 2 300 1 217 1 5 1 62 2 304 4 335 1 172 2 37 1 66 1 67 1 38 1 151 1 240 2 344 1 226 1 177 2 9 1 310 4 46 1 263 1 10 4 139 3 181 1 18 1 248 1 250 4 230 2 97 1 376 1 353 1 252 1 53 2 22 1 54 2 191 1 
232 1 24 1 297 3 164 1 235 1 27 1 300 1 101 3 217 1 5 1 304 4 335 1 172 2 37 1 66 1 173 2 151 1 240 3 344 1 226 1 310 5 46 1 263 1 10 4 139 3 181 1 18 1 248 1 250 5 230 2 97 1 375 1 376 1 353 1 252 1 53 3 187 2 77 2 22 1 54 2 191 1 78 1 
232 1 24 1 297 3 164 1 235 1 27 1 300 1 101 3 217 1 5 1 304 4 335 1 172 2 37 1 66 1 173 2 151 1 240 3 344 1 226 1 310 5 46 1 263 1 10 4 139 3 181 1 18 1 248 1 250 5 230 2 97 1 375 1 376 1 353 1 252 1 53 3 187 2 77 2 22 1 54 2 191 1 78 1 
235 1 101 2 5 1 62 2 335 1 66 1 151 1 240 2 9 1 10 4 286 1 248 1 18 1 250 4 353 1 252 1 22 1 119 2 24 1 297 3 164 1 300 1 217 1 304 4 172 2 37 1 226 1 310 4 177 2 46 1 263 1 139 3 181 1 376 1 97 1 230 2 53 2 54 2 191 1 
79 1 241 1 0 1 80 1 227 3 2 1 312 1 120 1 108 2 314 6 111 1 113 1 301 1 219 3 31 1 289 1 88 2 184 2 144 1 185 2 259 1 162 1 293 1 118 1 174 1 271 1 
120 4 147 1 28 3 301 2 219 8 31 11 88 1 278 1 221 1 259 2 91 1 7 1 262 2 106 3 174 2 241 2 281 2 227 6 108 4 111 1 314 14 289 2 184 2 144 11 291 1 160 1 374 1 185 1 293 2 162 1 188 1 295 1 296 1 
216 1 325 1 355 1 57 1 234 1 254 1 120 1 255 1 236 1 301 1 219 1 335 2 88 1 33 1 278 1 259 1 37 1 224 1 366 1 7 1 134 1 174 1 241 1 153 1 44 1 227 1 178 1 264 1 108 2 111 1 314 2 266 1 289 1 75 1 374 1 377 1 213 1 22 2 
0 1 325 2 328 1 64 2 150 2 335 3 278 1 7 1 153 1 241 3 281 2 108 6 111 3 113 1 289 3 75 3 352 2 213 1 162 3 293 3 22 3 79 1 80 1 216 1 356 1 355 1 120 7 255 3 123 2 301 3 128 1 219 10 31 7 88 2 33 1 37 1 259 3 91 4 261 1 224 2 366 2 262 2 174 3 134 2 44 3 227 10 178 2 312 1 264 2 314 20 266 2 184 8 144 7 374 1 185 4 377 2 378 2 188 2 271 1 
83 1 325 2 355 2 2 1 233 1 328 1 255 7 301 2 219 1 335 1 33 1 278 1 222 1 65 1 37 1 259 2 200 1 7 1 366 2 174 2 153 1 241 2 44 8 227 1 178 3 311 1 264 2 108 4 111 2 314 2 368 1 289 2 290 2 75 8 251 1 213 1 22 1 56 1 253 1 
82 1 120 1 301 1 196 1 219 1 31 1 335 1 130 1 259 1 37 1 262 1 174 1 153 1 241 1 281 1 227 2 108 2 111 1 314 3 289 1 184 1 144 1 374 1 185 1 213 1 293 1 162 1 22 1 188 1 
241 1 281 1 2 1 120 1 108 2 314 2 111 1 330 1 301 1 219 2 31 1 289 1 184 1 144 1 259 1 91 1 293 1 174 1 
241 1 227 2 2 1 120 1 108 2 314 2 111 1 301 1 31 1 289 1 184 1 144 1 185 1 259 1 162 1 174 1 225 1 188 1 
2 1 120 2 301 1 219 2 31 2 259 1 91 1 262 1 174 1 281 1 241 1 227 2 108 2 111 1 314 4 289 1 184 2 144 2 185 1 293 1 162 1 188 1 
241 1 281 1 233 1 120 1 108 2 314 2 111 1 330 1 301 1 219 2 31 1 289 1 184 1 144 1 259 1 91 1 293 1 174 1 
241 1 227 2 233 1 120 1 108 2 314 2 111 1 301 1 31 1 289 1 184 1 144 1 185 1 259 1 162 1 174 1 225 1 188 1 
233 1 120 2 301 1 219 2 31 2 259 1 91 1 262 1 174 1 281 1 241 1 227 2 108 2 111 1 314 4 289 1 184 2 144 2 185 1 293 1 162 1 188 1 
120 2 301 1 219 2 31 2 259 1 91 1 262 1 174 1 281 1 241 1 227 2 108 2 314 4 111 1 289 1 184 2 144 2 185 1 293 1 162 1 188 1 
325 1 355 1 255 1 301 1 219 1 150 1 335 1 88 1 278 1 259 1 224 1 366 1 7 1 134 1 174 1 241 1 44 1 227 1 178 1 264 1 108 2 314 2 111 1 266 1 289 1 75 1 377 1 22 1 
325 1 355 1 26 1 255 1 301 1 219 1 335 1 88 1 278 1 259 1 366 1 7 1 134 1 174 1 241 1 44 1 227 1 178 1 264 1 108 2 12 1 314 2 111 1 349 1 289 1 75 1 377 1 22 1 
120 2 301 1 219 2 31 2 259 1 91 1 262 1 174 1 281 1 241 1 227 2 108 2 111 1 314 4 289 1 184 2 144 2 374 1 185 1 293 1 162 1 188 1 
325 1 120 2 255 1 301 1 219 2 150 1 31 2 335 1 259 1 91 1 224 1 366 1 262 1 134 1 174 1 281 1 241 1 44 1 227 2 178 1 264 1 108 2 314 4 111 1 266 1 289 1 184 2 144 2 352 1 75 1 185 1 377 1 162 1 293 1 188 1 22 1 253 1 
82 1 98 1 120 1 301 1 219 2 335 1 31 1 130 1 259 1 37 1 91 1 262 1 174 1 153 1 241 1 281 1 227 1 108 2 111 1 314 3 289 1 184 1 144 1 374 1 213 1 162 1 293 1 188 1 22 1 
121 1 28 1 301 2 219 9 336 1 221 1 90 1 259 2 91 3 262 3 106 2 174 2 135 2 241 2 281 3 42 1 227 10 154 1 108 4 314 19 285 1 287 1 73 2 369 1 184 6 185 3 293 3 162 3 188 3 295 1 
121 1 28 2 85 1 301 3 218 2 63 1 219 14 239 1 90 2 259 3 91 2 223 1 262 3 174 3 106 2 135 1 241 3 281 3 42 1 227 12 154 1 283 1 108 6 314 26 142 1 285 2 73 4 369 1 184 4 185 2 162 2 293 3 188 2 295 2 
0 1 63 1 336 1 239 1 106 4 281 4 241 3 154 1 108 6 283 1 285 2 113 1 73 4 162 5 293 5 295 3 79 1 80 1 121 1 28 3 85 1 301 3 218 1 219 20 221 1 259 3 90 1 91 4 223 1 262 4 174 3 135 1 42 1 227 21 312 1 314 41 142 1 369 1 184 8 185 4 231 1 188 4 271 1 
79 1 0 1 80 1 121 1 28 3 85 1 301 4 218 2 63 1 219 20 336 1 221 1 239 1 90 1 259 4 91 3 223 1 262 4 106 4 174 4 135 1 241 4 281 4 42 1 227 18 154 1 312 1 283 1 108 8 314 38 113 1 142 1 285 2 73 4 369 1 184 7 185 4 293 5 162 4 231 1 188 3 271 1 295 3 
79 1 0 1 80 1 121 1 28 4 85 1 301 2 218 1 63 1 219 27 221 2 239 1 90 1 259 2 91 7 223 1 262 7 106 4 174 2 135 1 241 2 281 7 42 1 227 25 154 1 312 1 283 1 108 4 314 52 113 1 142 1 285 1 73 4 369 1 184 14 291 2 185 7 293 8 162 8 188 7 271 1 295 2 
372 1 276 1 99 1 102 1 21 1 140 1 104 1 321 1 133 1 361 1 
95 1 333 1 
372 1 276 1 1 1 129 1 99 1 360 1 140 1 104 1 361 1 
347 1 280 1 
81 1 137 1 36 1 
41 2 72 1 99 1 10 1 3 1 139 1 110 1 140 1 361 1 319 1 276 1 372 1 304 1 102 1 220 1 21 1 104 1 321 1 
41 2 72 1 99 1 10 1 3 1 139 1 110 1 140 1 361 1 319 1 276 1 372 1 304 1 102 1 220 1 21 1 104 1 321 1 
41 2 72 1 99 1 10 1 3 1 139 1 110 1 140 1 361 1 319 1 276 1 372 1 304 1 102 1 220 1 21 1 104 1 321 1 
137 1 347 1 280 1 
137 1 347 1 280 1 
81 1 36 1 
81 1 137 1 36 1 
211 1 329 1 
99 1 329 1 125 1 361 1 276 1 304 1 332 1 333 1 335 2 88 1 220 1 37 2 104 1 41 1 153 2 309 1 10 1 140 1 48 1 319 1 372 1 95 1 159 1 210 1 211 1 213 2 22 2 
325 1 255 2 301 1 219 1 335 2 278 1 37 2 259 1 306 1 200 1 366 1 7 1 174 1 241 1 44 2 227 1 178 1 264 1 204 1 108 2 111 1 314 2 229 1 289 1 290 2 207 1 75 2 374 1 22 2 56 1 272 1 
44 2 354 1 325 1 138 1 264 1 328 1 155 1 255 2 247 1 169 1 16 1 331 2 277 1 75 2 339 1 294 1 322 1 342 1 253 1 
44 1 354 1 327 1 325 1 138 1 264 1 328 1 155 1 255 1 247 1 169 1 16 1 331 2 277 1 75 1 294 1 322 1 
44 1 325 1 355 1 178 1 138 1 264 1 255 1 112 1 143 1 75 1 251 1 65 1 339 1 366 1 
44 1 354 1 325 1 138 1 264 1 328 1 155 1 255 1 247 1 169 1 16 1 331 2 277 1 75 1 339 1 294 1 322 1 342 1 
299 1 
136 1 297 1 93 1 139 1 252 1 217 1 118 1 
232 1 297 1 217 1 5 1 62 1 304 1 172 1 173 1 226 1 10 1 139 2 250 1 97 1 252 1 187 1 77 1 191 1 
273 1 325 2 59 1 4 1 5 2 62 6 337 2 69 1 202 1 281 1 10 2 249 1 248 1 250 2 350 1 75 1 252 4 293 1 162 1 355 1 84 3 255 1 217 3 126 1 256 3 86 1 304 2 172 1 366 1 262 1 134 1 226 2 44 1 178 4 264 1 139 3 318 1 269 1 97 2 378 1 187 3 188 1 191 2 
84 5 297 2 217 5 5 2 28 1 85 1 126 2 62 6 256 5 63 1 304 1 172 1 131 1 239 1 199 1 223 1 262 2 106 1 281 2 226 2 10 1 284 1 139 5 142 1 250 1 269 1 97 2 292 1 252 8 293 2 162 2 187 3 188 2 295 1 191 2 
79 1 0 1 24 1 27 1 217 2 122 1 5 1 126 2 304 1 335 1 130 1 131 1 37 1 153 1 226 1 10 1 312 1 97 1 161 1 213 1 116 1 252 2 293 2 162 1 163 1 22 1 55 1 191 1 
136 1 226 1 93 1 297 1 139 1 217 1 5 1 97 1 252 1 191 1 
281 2 84 5 139 5 217 5 126 2 256 5 62 10 131 1 378 1 252 5 293 2 162 2 187 5 262 2 188 2 
304 1 250 1 297 1 10 1 172 1 139 1 
325 1 355 2 167 1 255 4 217 2 5 2 362 1 363 1 149 1 304 3 172 2 65 1 199 2 366 1 105 2 226 2 44 4 178 1 10 3 264 1 13 1 250 4 269 2 320 1 75 4 251 1 97 2 252 2 191 1 
355 1 325 1 255 1 301 1 150 1 335 3 88 1 130 2 259 1 37 2 224 1 7 1 366 1 174 1 134 1 153 2 241 1 44 1 227 1 178 1 264 1 108 2 314 1 111 1 266 1 289 1 75 1 213 2 377 1 22 3 323 1 55 1 
226 1 84 2 297 2 139 4 217 2 113 1 5 1 62 4 256 2 269 1 97 1 252 1 187 2 199 1 191 1 
372 1 276 1 358 1 
372 1 276 1 358 1 
372 1 276 1 19 1 102 1 211 1 
372 1 276 1 358 1 
372 1 276 1 275 1 
372 1 276 1 275 1 
372 1 276 1 275 1 
372 1 276 1 
99 1 140 1 
241 2 0 1 79 1 80 1 227 4 312 1 108 4 314 8 113 1 301 2 218 1 219 4 184 3 185 2 259 2 162 1 293 1 91 1 174 2 271 1 
79 1 0 1 219 3 80 1 227 3 312 1 184 2 314 6 185 2 162 1 293 1 113 1 118 1 271 1 
241 1 281 1 43 1 227 2 108 2 314 4 301 1 219 2 184 2 185 1 259 1 162 1 293 1 91 1 262 1 188 1 174 1 
281 1 227 4 314 7 28 1 219 3 184 2 221 1 185 1 162 1 293 1 91 1 262 1 188 1 106 2 295 1 
79 2 0 2 80 1 28 2 301 2 218 2 219 11 221 1 259 2 91 4 262 2 106 2 174 2 281 2 241 2 227 12 312 1 108 4 314 23 113 1 371 1 184 9 160 1 291 1 185 5 293 3 162 3 188 2 271 1 
227 1 314 1 106 1 
219 1 314 1 28 1 
241 1 281 1 43 1 227 3 108 2 314 6 301 1 219 3 184 3 185 2 259 1 378 1 293 1 91 1 162 1 262 1 174 1 188 1 
121 1 28 1 85 1 301 1 63 1 219 6 239 1 259 1 91 1 223 1 262 2 106 1 174 1 241 1 281 2 227 6 108 2 314 12 142 1 184 2 185 1 293 2 162 2 188 2 295 1 
0 1 79 1 227 3 312 1 314 6 219 3 184 2 185 1 293 1 162 1 91 1 
79 1 0 1 241 1 80 1 227 2 108 2 314 3 301 1 218 1 371 1 219 1 184 2 185 1 259 1 91 1 174 1 271 1 
241 1 0 2 79 2 227 5 312 1 108 2 314 10 121 1 301 1 219 5 184 5 161 1 185 3 259 1 91 2 293 2 162 2 174 1 
241 1 281 1 108 2 314 2 121 1 301 1 219 2 184 1 259 1 293 1 91 1 174 1 
241 1 281 1 227 2 108 2 314 4 121 1 301 1 219 2 184 2 185 1 259 1 162 1 293 1 91 1 262 1 188 1 174 1 
241 3 0 1 79 1 227 2 108 6 314 3 121 1 301 3 218 1 371 1 219 1 336 1 184 2 185 1 259 3 91 1 174 3 
79 3 0 3 80 1 121 1 28 3 301 5 218 2 219 16 336 1 221 1 259 5 91 5 262 3 175 1 106 4 174 5 241 5 281 3 43 1 227 18 312 2 108 10 314 34 157 1 113 1 371 1 268 1 184 12 185 7 293 5 162 5 188 3 271 1 295 1 
0 1 79 1 80 1 121 1 28 1 301 1 63 1 219 4 259 1 106 1 174 1 241 1 227 4 312 1 108 2 314 8 113 1 184 2 185 2 162 1 293 1 295 1 271 1 
79 1 0 1 80 1 121 1 28 1 301 2 63 1 219 6 221 1 259 2 91 1 262 1 106 2 174 2 241 2 281 1 43 1 227 5 312 1 108 4 314 11 113 1 184 3 185 2 162 1 293 2 271 1 295 1 
79 1 0 1 80 1 121 1 28 1 85 1 301 3 218 1 63 1 219 9 239 1 259 3 91 1 223 1 262 2 106 1 174 3 241 3 281 2 43 1 227 10 312 1 108 6 314 19 113 1 142 1 184 4 185 3 293 3 162 3 188 2 271 1 295 1 
79 1 0 1 80 1 121 1 28 1 85 1 301 3 218 1 63 1 219 10 239 1 259 3 91 2 223 1 262 2 106 1 174 3 241 3 281 2 43 1 227 7 312 1 108 6 314 17 113 1 142 1 184 5 185 3 293 3 162 2 188 1 271 1 295 1 
0 1 79 1 80 1 121 1 28 1 301 1 63 1 219 4 259 1 106 1 174 1 241 1 227 4 312 1 108 2 314 8 113 1 184 2 185 2 162 1 293 1 295 1 271 1 
121 1 28 1 85 1 301 1 63 1 219 6 239 1 259 1 91 1 223 1 262 2 106 1 174 1 241 1 281 2 227 6 108 2 314 12 142 1 184 2 185 1 293 2 162 2 188 2 295 1 
79 1 0 1 80 1 121 1 28 1 85 1 301 4 218 2 63 1 219 10 239 1 259 4 91 2 223 1 262 2 106 1 174 4 241 4 281 2 43 1 227 8 312 1 108 8 314 18 113 1 142 1 184 5 185 3 293 3 162 2 188 1 271 1 295 1 
121 1 28 1 85 1 301 4 218 2 63 1 219 9 336 1 239 1 259 4 91 3 223 1 262 3 106 1 174 4 241 4 281 3 227 7 108 8 314 16 142 1 184 6 185 3 293 3 162 2 188 2 295 1 
0 3 79 3 80 1 227 4 312 1 314 7 219 3 184 6 185 3 162 1 91 3 293 1 271 2 
79 1 0 1 80 1 121 1 28 1 85 1 301 4 218 2 63 1 219 10 336 1 239 1 259 4 91 1 223 1 262 2 106 1 174 4 241 4 281 2 227 8 312 1 108 8 314 18 113 1 142 1 184 4 185 3 293 3 162 2 188 1 271 1 295 1 
335 1 171 1 88 1 376 1 37 1 22 1 302 1 
45 1 114 1 302 1 171 1 335 1 88 1 103 1 376 1 37 1 22 1 152 1 214 1 
44 1 325 1 355 1 178 1 264 1 251 1 75 1 65 1 255 1 366 1 118 1 
153 1 44 1 325 1 355 1 178 1 264 1 255 1 266 1 335 2 88 1 33 1 75 1 377 1 213 1 37 1 366 1 134 1 22 2 
23 1 325 1 24 2 235 1 255 1 335 2 88 1 33 1 37 2 366 2 105 1 134 2 153 1 203 1 44 1 178 3 264 1 266 1 18 1 75 1 213 2 377 1 22 2 379 1 
23 1 325 1 24 2 26 1 235 1 255 1 335 2 88 1 33 1 37 2 366 2 105 1 134 2 153 1 203 1 44 1 178 3 264 1 18 1 75 1 213 2 377 1 22 2 379 1 
23 1 24 1 325 1 297 1 122 1 255 1 304 2 335 1 130 1 32 1 337 1 37 1 366 1 105 1 134 1 202 1 153 1 242 1 203 1 44 1 178 4 10 2 264 1 139 1 248 1 250 1 75 1 213 1 116 1 163 1 22 1 55 1 
23 1 24 1 325 1 297 1 122 1 255 1 304 2 335 1 130 1 337 1 37 1 366 1 105 1 134 1 202 1 153 1 203 1 44 1 178 4 10 2 264 1 139 1 249 1 248 1 250 1 75 1 213 1 116 1 163 1 22 1 55 1 
44 1 325 1 264 1 75 1 255 1 368 1 
83 1 44 7 355 2 325 3 178 3 311 1 264 2 328 1 368 1 255 6 30 1 290 1 350 1 75 7 89 1 222 1 307 1 366 2 134 1 56 1 253 1 
79 1 0 1 80 1 325 1 120 1 255 1 123 1 301 2 219 3 150 1 31 1 335 2 88 2 33 1 259 2 37 1 224 1 366 1 134 1 174 2 241 2 153 1 44 1 227 3 178 1 312 1 264 1 108 4 314 6 111 2 113 1 266 1 289 2 184 2 144 1 374 1 75 1 352 1 185 2 377 1 213 1 162 1 293 1 22 2 271 1 272 1 253 1 
273 1 0 1 59 1 5 2 335 1 337 1 202 1 153 1 10 3 248 1 249 1 250 2 75 1 161 1 213 1 116 1 252 4 293 2 162 2 163 1 22 1 79 1 24 1 355 1 297 2 255 1 217 5 122 1 125 1 126 2 86 1 304 3 130 1 172 1 131 1 37 1 136 1 226 2 44 1 178 2 93 1 312 1 139 2 320 1 97 2 55 1 191 2 
44 2 325 2 178 2 264 1 368 1 255 2 4 1 350 1 75 2 366 1 134 1 202 1 253 1 
44 4 357 1 325 1 355 1 178 1 264 1 255 4 141 1 75 4 251 1 65 1 366 1 253 1 
44 2 325 2 178 1 264 1 166 1 255 2 168 1 128 1 75 2 89 1 307 1 366 1 105 1 134 1 
331 1 44 1 325 1 355 1 277 1 264 1 75 1 155 1 255 1 247 1 
44 2 325 1 178 1 207 1 264 1 328 1 75 2 255 2 366 1 56 1 253 1 
44 5 355 1 325 2 178 3 311 1 264 2 255 4 141 1 251 1 75 5 65 1 222 1 366 2 105 1 253 1 56 1 
44 5 355 1 325 2 178 3 311 1 264 2 94 1 255 4 141 1 251 1 75 5 65 1 366 2 105 1 253 1 56 1 
153 1 44 1 325 1 355 1 178 1 26 1 264 1 255 1 335 2 88 1 33 1 75 1 377 1 213 1 37 1 366 1 134 1 22 2 
44 1 325 2 178 1 264 1 255 1 30 1 350 1 75 1 89 1 307 1 366 1 105 1 134 1 
204 1 245 1 229 1 335 1 20 1 132 1 37 1 306 1 22 1 
20 1 359 1 29 1 
88 1 20 1 11 1 132 1 245 1 
24 2 297 1 235 1 359 1 122 1 29 1 125 1 303 1 304 2 335 1 130 1 132 1 37 1 153 1 46 1 10 2 11 1 139 1 245 1 246 1 18 1 248 1 20 1 213 1 116 1 163 1 22 1 55 1 
282 1 208 1 118 1 367 1 
238 1 282 1 208 1 165 1 367 1 17 1 265 1 
298 1 165 1 189 1 
282 1 243 1 165 3 109 2 265 1 17 1 238 3 87 1 364 1 208 1 258 1 367 1 
127 1 238 2 282 1 208 1 165 2 212 1 367 1 17 1 265 1 
331 1 238 1 182 1 87 1 282 1 277 1 165 1 294 1 17 1 265 1 257 1 
238 1 87 1 282 1 208 1 165 1 17 1 265 1 
238 1 87 1 208 2 165 1 367 1 17 1 265 1 
238 2 87 1 282 1 208 1 34 1 165 2 115 1 146 1 17 2 265 2 
282 2 193 1 165 3 14 1 265 1 17 1 370 1 257 1 238 3 127 2 87 1 208 1 367 1 
282 1 165 2 247 1 169 1 265 1 17 1 331 2 238 2 127 1 87 1 208 1 277 1 6 1 294 1 367 1 
127 2 238 4 87 1 282 2 208 1 165 4 212 1 14 1 179 1 367 1 17 2 265 2 257 1 
238 1 87 1 282 1 208 1 165 1 367 1 17 1 265 1 
282 3 243 1 100 1 165 4 109 1 14 1 265 1 17 1 257 1 127 2 238 4 208 2 258 1 367 2 
127 1 238 2 96 1 87 1 282 1 334 1 208 1 165 2 117 1 367 1 17 1 265 1 
8 1 282 1 243 2 165 3 109 2 265 1 17 1 238 3 87 1 208 1 258 1 367 1 
107 1 282 2 35 2 270 1 
238 1 87 1 165 1 70 1 17 1 265 1 
127 1 238 2 87 1 282 1 208 1 165 2 367 1 17 1 265 1 370 1 
228 1 
238 1 87 1 282 1 208 1 165 1 367 1 17 1 265 1 
282 1 165 3 109 1 265 1 17 1 370 1 127 1 238 3 87 1 208 1 367 1 
282 1 100 1 14 1 257 1 
282 1 208 1 

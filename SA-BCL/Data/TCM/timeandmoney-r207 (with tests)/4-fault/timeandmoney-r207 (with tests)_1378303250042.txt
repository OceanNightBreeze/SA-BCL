#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (23,40,283) (126,134,255) (126,134,255) (126,134,255) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 196 221 148 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 117 (44,249) (44,249) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (23,40,283) (23,40,283) (23,40,283) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 196 260 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 196 221 148 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
75 3 136 1 246 3 308 1 79 1 350 1 38 1 296 1 297 1 203 2 342 2 273 1 20 2 
75 9 336 1 308 1 79 4 230 1 80 2 360 1 233 1 206 1 342 2 129 1 102 1 177 2 162 1 136 3 320 1 246 9 349 1 350 1 38 1 296 6 297 1 203 2 68 2 273 2 20 5 253 2 274 1 
75 9 336 1 308 1 79 4 230 1 80 2 360 1 233 1 206 1 342 2 129 1 102 1 177 2 162 1 136 3 320 1 246 9 349 1 350 1 38 1 296 6 297 1 203 2 68 2 273 2 20 5 253 2 274 1 
75 10 336 1 308 1 79 5 230 1 80 2 360 1 233 1 206 1 342 2 129 1 102 1 177 2 162 1 136 4 320 1 246 10 349 1 350 1 38 1 296 7 297 1 203 2 68 2 273 2 20 6 253 2 274 1 
75 7 336 1 308 1 79 3 230 1 80 1 360 1 233 1 206 1 342 2 129 1 102 1 177 2 162 1 136 2 320 1 246 7 349 1 350 1 38 1 296 4 297 1 203 2 68 2 273 2 20 4 253 2 
75 4 162 1 136 1 320 1 246 4 79 2 350 1 80 2 38 1 296 3 297 1 68 1 203 1 342 1 20 3 253 1 274 1 177 1 
75 2 246 2 349 1 350 1 38 1 252 1 206 1 297 1 203 1 68 1 342 1 157 1 20 1 273 1 253 1 147 1 
75 9 308 1 79 4 230 1 80 2 342 2 102 1 84 1 177 1 162 1 136 3 320 1 245 1 246 9 350 1 38 1 296 7 297 1 203 2 68 1 273 1 20 5 253 1 274 1 
75 9 308 1 79 4 230 1 80 2 342 2 102 1 84 1 177 1 162 1 136 3 320 1 245 1 246 9 350 1 38 1 296 7 297 1 203 2 68 1 273 1 20 5 253 1 274 1 
356 1 47 1 225 1 227 1 6 1 324 1 41 1 182 1 265 1 58 1 204 1 42 1 238 1 45 1 
34 1 
34 1 225 2 227 2 209 1 69 1 345 1 62 1 324 1 
278 1 34 1 259 1 305 2 179 1 225 5 281 1 227 5 217 1 189 1 324 2 369 1 56 1 145 2 69 1 286 2 146 1 345 2 62 1 
34 1 85 1 62 1 
34 1 110 2 212 1 
41 2 47 1 192 1 265 2 58 2 204 2 42 2 45 2 
47 1 49 1 96 1 78 1 339 1 2 2 98 1 231 1 52 2 236 1 234 1 235 1 192 1 313 1 265 2 58 2 103 1 176 2 289 1 10 1 239 1 364 1 213 2 268 1 137 1 16 1 111 2 19 1 249 1 37 1 41 2 325 1 117 1 204 3 42 2 43 1 45 3 
41 1 47 1 182 1 265 1 58 1 204 1 42 1 238 1 45 1 6 1 
34 1 335 1 64 1 321 1 225 1 227 1 262 1 58 1 204 1 317 1 238 1 104 1 62 1 45 1 
34 1 335 1 64 1 321 1 225 2 227 2 262 1 41 1 265 1 58 1 204 1 42 1 238 1 62 1 45 1 
225 1 227 1 99 1 345 1 324 1 
34 1 225 2 227 2 69 1 366 1 345 1 62 1 324 1 
225 1 227 1 345 1 
41 1 192 2 265 1 58 2 204 2 42 1 318 1 275 1 45 2 
284 1 348 1 113 1 
16 1 339 1 306 1 2 1 98 1 52 1 235 1 325 1 192 1 117 1 313 1 204 1 103 1 10 1 45 1 213 1 
16 1 108 1 339 1 348 1 98 1 2 1 52 1 235 1 41 1 325 1 313 1 117 1 58 1 159 1 204 2 103 1 42 1 10 1 45 2 213 1 
192 1 85 1 
41 3 192 1 265 1 58 3 159 1 204 3 42 3 45 3 
41 1 182 1 58 1 204 1 42 1 238 1 45 1 
41 1 265 1 58 1 204 1 42 1 238 1 318 1 275 1 45 1 
47 1 49 1 335 1 96 1 225 1 78 1 339 1 227 1 98 1 2 1 262 1 52 1 235 1 192 1 313 1 265 2 58 3 159 1 103 1 176 2 238 1 10 1 239 1 364 1 213 1 268 1 137 1 16 1 64 1 108 1 321 1 111 1 19 1 249 1 37 1 270 1 41 3 325 1 117 1 204 4 254 1 42 3 275 1 45 4 
41 1 192 1 299 1 58 2 204 2 159 1 42 1 317 1 45 2 
34 1 335 1 321 1 108 1 64 1 225 1 227 1 262 1 41 3 265 1 58 3 159 2 204 3 254 1 42 3 175 1 238 1 275 1 45 3 
348 1 41 2 265 1 58 2 159 1 284 1 204 2 42 2 275 1 45 2 
16 1 339 1 2 1 98 1 52 1 235 1 325 1 192 1 117 1 313 1 204 1 103 1 10 1 45 1 213 1 
16 1 339 1 2 1 98 1 52 1 39 1 235 1 325 1 192 1 313 1 204 1 103 1 332 1 45 1 213 1 
122 1 96 1 152 1 30 1 53 1 236 2 190 1 284 2 176 2 12 1 364 1 239 2 346 1 291 1 268 1 137 1 19 1 111 4 348 2 37 1 113 2 72 1 256 1 74 1 
41 1 58 1 204 1 42 1 287 1 238 1 262 1 45 1 
76 1 108 1 41 4 192 1 299 1 265 1 58 5 159 2 204 5 42 4 317 1 61 1 275 1 45 5 
41 2 182 1 58 2 204 2 42 2 287 1 238 1 45 2 
120 1 29 1 89 1 
343 1 124 1 9 1 29 2 89 2 174 1 
29 1 89 1 
29 1 89 1 
9 1 174 1 
9 1 174 1 
9 1 174 1 
29 1 89 1 352 1 
29 1 89 1 352 1 
29 1 89 1 352 1 
33 1 29 1 89 1 
33 1 29 1 89 1 
33 1 29 1 89 1 
34 1 357 1 337 2 358 3 225 2 227 2 29 2 89 2 100 1 219 1 158 1 128 1 343 1 316 2 371 2 302 1 375 1 328 2 63 2 
27 1 358 1 337 1 225 1 227 1 173 1 229 1 29 1 100 1 192 1 58 2 131 1 14 1 63 1 89 1 166 1 41 2 371 1 204 2 42 2 120 1 328 1 121 1 45 2 
68 2 25 1 157 1 32 2 177 1 
68 1 253 1 177 1 
68 1 157 1 253 1 
48 1 68 3 25 1 157 1 32 1 177 2 
68 2 25 1 157 1 32 1 347 1 177 1 
278 1 305 1 1 1 225 5 227 5 307 1 173 1 30 1 127 2 341 1 190 1 7 1 56 2 286 1 131 1 345 1 197 1 14 1 212 1 105 2 62 1 15 1 291 1 34 2 110 3 217 3 271 2 67 1 324 4 145 1 69 1 256 1 
278 1 305 2 1 1 77 1 225 7 227 7 307 1 261 1 99 3 30 1 127 2 190 1 7 1 56 2 285 1 131 2 286 2 345 4 212 1 105 2 62 1 15 1 291 1 34 3 110 3 250 1 217 3 324 5 369 1 145 2 69 1 71 3 256 1 
305 1 1 1 225 3 227 3 30 1 127 2 190 1 7 1 56 2 286 1 131 1 197 1 62 1 212 2 105 2 15 1 291 1 34 3 110 4 217 3 271 1 324 2 67 1 369 1 145 1 256 1 
305 1 225 1 77 1 227 1 67 1 369 1 145 1 286 1 197 1 
216 1 
85 1 339 1 323 1 
339 1 247 1 
313 1 339 1 
313 1 215 1 339 3 103 1 70 1 323 2 
313 1 339 1 103 1 
339 1 142 1 
291 1 135 1 150 1 138 1 111 7 30 1 5 1 65 1 263 2 143 1 236 4 361 1 22 1 72 3 303 1 239 3 333 1 74 2 
150 1 96 1 3 4 30 4 5 2 263 3 236 16 190 3 7 3 361 2 176 2 161 1 211 1 239 15 291 4 135 1 268 1 137 1 138 1 248 1 111 31 295 3 294 1 65 2 37 1 91 1 167 1 22 1 72 10 303 2 256 3 333 5 73 1 74 5 
291 1 135 1 150 1 137 2 268 2 96 2 138 1 111 9 30 1 5 1 65 1 263 2 37 2 236 5 368 1 282 1 361 1 176 4 72 4 303 1 73 1 333 1 239 4 74 3 
291 1 135 1 150 1 138 1 111 7 30 1 5 1 65 1 263 2 236 4 361 1 22 1 72 3 303 1 239 3 333 1 74 2 
291 1 135 1 150 1 138 1 111 7 30 1 5 1 65 1 263 2 236 4 361 1 22 1 72 3 303 1 239 3 333 1 74 2 
75 1 339 1 2 1 98 1 154 2 4 2 52 1 313 1 342 1 213 1 16 1 17 1 246 1 201 2 35 1 139 1 325 1 203 1 118 1 273 2 355 1 277 1 46 1 
48 1 75 1 16 1 185 1 246 1 201 1 98 1 2 1 154 1 126 1 4 1 155 1 38 1 52 1 40 1 68 2 203 1 157 1 342 1 273 1 253 1 301 1 255 1 177 1 134 1 213 1 
75 1 185 1 246 1 338 1 201 1 154 1 126 1 4 1 38 1 40 1 203 1 342 1 273 1 255 1 134 1 
48 1 75 3 185 1 2 1 98 1 154 1 4 1 126 1 155 1 52 1 342 1 157 1 177 1 213 1 134 1 16 1 246 3 201 1 350 1 40 1 296 2 297 1 203 1 68 2 20 1 273 1 253 1 301 1 331 1 277 1 
75 2 48 1 2 1 98 1 154 1 4 1 126 1 155 1 52 1 157 1 177 1 213 1 16 1 246 2 201 1 350 1 40 1 296 2 297 1 68 2 20 1 273 1 253 1 301 1 331 1 
57 1 
278 1 0 1 335 1 1 1 225 5 227 5 339 1 153 1 2 2 98 1 156 2 52 2 56 2 58 1 344 2 286 1 238 1 345 6 104 1 62 1 241 2 242 1 290 1 16 1 64 1 200 1 110 2 112 1 114 2 204 1 69 3 354 1 257 2 305 1 125 2 262 1 313 1 317 1 212 2 213 2 34 2 87 1 269 1 321 1 35 1 139 1 217 2 181 1 325 2 370 1 145 1 376 2 330 4 95 1 45 1 
335 1 225 3 227 3 125 1 153 1 262 1 58 1 209 1 317 1 238 1 345 2 104 1 64 1 321 1 181 1 112 1 370 1 204 1 69 1 330 2 95 1 45 1 
335 1 225 3 227 3 153 1 262 1 58 1 209 1 317 1 238 1 345 1 104 1 62 1 34 1 64 1 321 1 181 1 112 1 370 1 204 1 69 1 376 1 330 3 95 1 45 1 
335 1 225 3 227 3 125 1 153 1 262 1 58 1 344 1 209 1 317 1 238 1 345 2 104 1 62 1 34 1 64 1 321 1 181 1 112 1 370 1 204 1 69 1 376 1 330 3 95 1 45 1 
223 1 278 1 0 1 335 1 149 1 225 5 227 5 153 1 156 2 56 1 58 1 344 4 286 1 238 1 345 7 104 1 62 5 241 2 242 1 64 1 112 1 114 2 204 1 69 3 257 2 305 1 125 4 262 1 311 1 209 1 317 1 212 2 34 5 321 1 322 1 88 1 217 1 181 1 370 1 145 1 376 4 330 6 95 1 45 1 
0 1 278 1 335 1 225 4 227 4 153 1 156 2 56 1 58 1 344 2 286 1 238 1 345 4 104 1 62 1 241 2 242 1 64 1 200 1 110 2 112 1 114 2 204 1 69 2 257 2 305 1 125 2 262 1 317 1 212 2 34 2 321 1 217 1 181 1 370 1 145 1 376 2 330 4 95 1 45 1 
0 1 223 1 278 1 335 1 305 1 225 4 125 2 227 4 153 1 262 1 156 2 56 1 58 1 344 2 286 1 317 1 238 1 345 4 104 1 62 1 212 2 241 2 242 1 34 1 64 1 321 1 322 1 88 1 217 1 181 1 112 1 114 2 370 1 204 1 145 1 69 2 376 2 330 4 257 2 95 1 45 1 
0 1 223 1 278 1 335 1 305 1 225 4 125 2 227 4 153 1 262 1 156 2 56 1 58 1 344 2 286 1 317 1 238 1 345 4 104 1 62 1 212 2 241 2 242 1 34 1 64 1 321 1 322 1 88 1 217 1 181 1 112 1 114 2 370 1 204 1 145 1 69 2 376 2 330 4 257 2 95 1 45 1 
278 1 335 1 305 1 225 4 125 2 227 4 153 1 262 1 156 2 56 1 58 1 344 2 286 1 317 1 238 1 345 4 104 1 62 1 241 2 242 1 34 1 64 1 321 1 110 2 88 1 90 2 181 1 112 1 141 2 370 1 300 1 183 1 204 1 145 1 69 2 376 2 329 1 330 4 95 1 45 1 
0 1 278 1 223 1 335 1 149 1 305 1 225 4 227 4 125 3 153 1 262 1 156 2 56 1 58 1 344 3 286 1 317 1 238 1 345 5 104 1 62 1 212 2 241 2 242 1 34 1 64 1 321 1 322 1 88 1 217 1 181 1 112 1 114 2 370 1 204 1 145 1 69 2 376 3 330 5 257 2 95 1 45 1 
0 1 278 1 223 1 335 1 149 1 305 1 225 4 227 4 125 3 153 1 262 1 156 2 56 1 58 1 344 3 286 1 317 1 238 1 345 5 104 1 62 1 212 2 241 2 242 1 34 1 64 1 321 1 322 1 88 1 217 1 181 1 112 1 114 2 370 1 204 1 145 1 69 2 376 3 330 5 257 2 95 1 45 1 
278 1 335 1 225 4 227 4 153 1 156 2 56 1 58 1 344 2 286 1 238 1 345 4 104 1 62 1 241 2 242 1 64 1 200 1 110 2 112 1 204 1 69 2 305 1 125 2 262 1 317 1 34 1 321 1 90 2 181 1 141 2 370 1 183 1 145 1 376 2 330 4 95 1 45 1 
49 1 26 1 96 2 338 1 339 1 98 1 2 3 231 1 52 3 236 1 313 1 58 1 159 1 196 1 176 4 289 1 364 2 239 1 346 1 213 3 16 1 268 2 137 2 35 1 139 1 19 2 111 2 37 2 41 1 325 2 221 1 204 1 372 1 42 1 148 1 45 1 
96 1 30 1 190 1 236 1 7 1 265 1 58 1 284 1 210 1 176 2 364 1 239 2 291 1 268 1 137 1 348 1 19 1 180 1 111 3 113 1 37 1 41 1 204 1 42 1 72 1 275 1 256 1 74 1 45 1 
150 1 96 1 30 1 263 1 236 3 192 2 284 1 176 2 364 1 239 3 346 1 291 1 135 1 85 1 268 1 137 1 138 1 348 1 19 1 111 6 37 1 65 1 113 1 72 2 303 1 74 2 
49 1 96 2 3 3 30 2 236 8 190 2 192 1 312 1 7 2 284 4 210 1 176 4 289 1 161 1 239 6 364 1 133 1 291 1 268 2 137 2 19 2 111 14 348 11 295 3 36 1 37 2 113 11 91 1 72 2 256 1 333 1 74 1 304 1 
49 1 96 1 339 1 306 1 98 1 2 1 52 1 205 1 235 1 236 1 192 1 313 1 58 1 284 1 159 1 210 1 103 1 176 2 289 1 10 1 364 1 239 1 213 1 16 1 137 1 268 1 108 1 365 1 19 1 111 2 37 1 325 1 41 1 353 1 117 1 204 2 42 1 45 2 
49 1 150 1 96 3 339 2 2 3 98 2 155 1 52 3 235 2 190 2 236 10 192 2 7 2 58 1 159 1 284 7 103 2 289 1 10 2 239 10 291 3 16 2 244 1 108 1 19 3 111 20 348 7 249 2 65 1 113 7 251 2 117 2 204 3 72 8 303 1 256 2 74 4 171 1 309 2 30 3 263 1 313 2 210 1 176 6 364 3 213 3 135 1 268 3 137 3 138 1 140 2 37 3 325 1 41 1 42 1 44 2 333 4 276 1 45 3 
137 1 268 1 96 1 152 1 348 1 111 2 19 1 30 1 113 1 37 1 190 1 236 2 284 1 176 2 72 1 333 1 364 1 346 1 
291 1 137 1 268 1 96 1 348 1 111 2 19 1 113 1 37 1 53 1 284 1 176 2 72 1 256 1 364 1 239 2 74 1 346 1 
291 1 137 1 268 1 96 1 348 2 111 4 19 1 30 1 113 2 37 1 190 1 236 2 7 1 284 2 176 2 72 2 256 1 239 2 333 1 364 1 74 1 346 1 
137 1 268 1 96 1 152 1 348 1 111 2 19 1 30 1 113 1 37 1 190 1 236 2 284 1 372 1 176 2 72 1 333 1 364 1 
291 1 137 1 268 1 96 1 348 1 111 2 19 1 113 1 37 1 53 1 284 1 372 1 176 2 72 1 256 1 364 1 239 2 74 1 
291 1 137 1 268 1 96 1 348 2 111 4 19 1 30 1 113 2 37 1 190 1 236 2 7 1 284 2 372 1 176 2 72 2 256 1 239 2 333 1 364 1 74 1 
291 1 137 1 268 1 96 1 348 2 19 1 111 4 30 1 113 2 37 1 190 1 236 2 7 1 284 2 176 2 72 2 256 1 239 2 333 1 364 1 74 1 
49 1 96 1 339 1 98 1 2 1 52 1 236 1 235 1 192 1 313 1 103 1 176 2 289 1 10 1 364 1 239 1 213 1 16 1 137 1 268 1 111 2 19 1 249 1 37 1 325 1 117 1 204 1 45 1 
49 1 123 1 96 1 339 1 98 1 2 1 52 1 236 1 235 1 192 1 313 1 103 1 176 2 289 1 364 1 239 1 213 1 16 1 137 1 268 1 111 2 19 1 37 1 39 1 325 1 204 1 332 1 45 1 
291 1 137 1 268 1 96 1 348 2 111 4 19 1 30 1 113 2 37 1 190 1 236 2 7 1 284 2 210 1 176 2 72 2 256 1 239 2 333 1 364 1 74 1 
117 1 338 1 249 1 44 1 
96 1 30 1 190 1 236 2 7 1 265 1 58 1 284 1 210 1 176 2 239 1 364 1 291 1 268 1 137 1 19 1 111 3 348 1 37 1 218 1 113 1 41 1 204 1 42 1 72 1 256 1 275 1 333 1 45 1 
279 1 150 1 96 3 50 1 28 1 151 1 3 4 30 5 51 1 263 1 54 1 264 1 236 20 190 4 7 4 130 1 195 2 176 6 59 1 161 3 11 1 239 21 291 5 135 1 268 3 137 3 138 1 198 1 111 41 295 3 65 1 66 4 37 3 91 1 368 1 298 1 272 1 72 8 303 1 256 4 73 1 333 4 74 4 
279 1 150 1 96 4 50 1 28 1 151 1 3 4 30 5 51 1 263 1 54 1 264 1 236 20 190 4 7 4 130 1 195 2 176 8 59 1 161 3 11 1 239 18 291 4 135 1 268 4 137 4 138 1 198 1 111 38 295 3 65 1 66 4 37 4 91 1 368 1 298 1 272 1 72 7 303 1 256 3 73 2 333 3 74 4 
279 1 150 1 96 2 28 1 151 1 3 4 30 8 51 1 263 1 54 1 264 1 236 27 190 7 7 7 130 1 195 1 176 4 59 1 161 2 239 25 133 2 291 8 135 1 268 2 137 2 138 1 198 1 111 52 295 4 65 1 66 4 37 2 91 2 368 1 298 1 272 1 72 14 303 1 256 7 73 1 333 7 74 7 
96 2 151 1 3 2 30 3 51 2 54 1 236 9 190 3 7 3 315 1 130 1 195 1 176 4 161 1 11 1 239 10 291 3 268 2 137 2 111 19 295 1 66 2 37 2 91 1 368 1 272 1 72 6 256 3 333 3 74 3 
279 1 96 3 28 1 151 2 3 2 30 3 51 1 54 1 264 1 236 14 190 3 7 3 130 1 195 2 176 6 59 1 161 2 239 12 291 2 268 3 137 3 198 1 111 26 295 2 66 4 37 3 368 1 298 1 272 1 72 4 256 2 333 2 73 2 74 2 
220 1 337 1 343 1 371 1 302 1 375 1 328 1 29 1 89 1 63 1 
120 1 121 1 
224 1 337 1 326 1 371 1 328 1 29 1 351 1 89 1 63 1 
34 1 357 1 337 1 358 2 225 1 227 1 29 1 89 1 100 1 219 1 158 1 343 1 316 1 371 1 302 1 375 1 328 1 63 1 
34 1 357 1 337 1 358 2 225 1 227 1 29 1 89 1 100 1 219 1 158 1 343 1 316 1 371 1 302 1 375 1 328 1 63 1 
34 1 357 1 337 1 358 2 225 1 227 1 29 1 89 1 100 1 219 1 158 1 343 1 316 1 371 1 302 1 375 1 328 1 63 1 
124 1 202 1 352 1 
124 1 202 1 352 1 
55 1 33 1 
55 1 124 1 33 1 
27 1 229 1 
357 1 27 1 337 1 358 1 225 1 227 1 173 1 229 1 29 1 192 1 193 1 58 2 316 1 131 1 14 1 63 1 89 1 166 1 324 1 41 2 204 2 371 1 120 1 42 2 328 1 121 1 45 2 
202 1 352 1 
55 1 124 1 33 1 
49 1 26 1 280 1 96 1 339 1 98 1 2 2 231 2 52 2 236 1 313 1 58 2 210 1 196 1 362 1 176 2 289 1 364 1 239 1 213 2 106 1 16 1 137 1 268 1 19 1 111 2 37 1 116 1 204 2 327 1 45 2 
258 1 16 1 17 1 339 1 35 1 139 1 98 1 2 1 188 1 4 1 52 1 325 1 313 1 213 1 
48 1 16 1 185 1 2 1 98 1 188 1 4 1 155 1 52 1 40 1 68 2 157 1 283 1 253 1 301 1 23 1 177 1 213 1 
185 1 283 1 338 1 2 1 23 1 4 1 188 1 155 1 52 1 40 1 213 1 
48 1 185 1 16 1 2 1 98 1 4 1 155 1 52 1 40 1 68 2 157 1 101 1 253 1 301 1 23 1 177 1 213 1 
237 1 
278 1 34 1 259 1 305 1 281 1 217 1 56 1 145 1 286 1 62 1 
291 2 34 5 359 1 214 2 110 10 140 1 30 2 217 5 127 5 190 2 7 2 56 5 256 2 105 5 212 5 
34 1 225 1 227 1 69 1 345 1 62 1 
184 2 278 1 305 2 1 2 97 1 225 3 339 1 227 3 98 1 2 4 52 4 313 1 56 2 286 2 345 4 178 1 213 4 16 1 87 1 269 2 35 1 139 1 217 2 325 2 369 1 169 1 145 2 69 2 354 1 
34 1 85 1 56 1 259 1 281 1 217 1 62 1 
0 1 278 1 305 1 225 1 227 1 56 1 286 1 345 1 212 1 62 1 34 2 110 1 217 1 114 1 145 1 69 1 257 1 
278 4 1 2 338 1 225 5 281 1 339 6 227 5 98 1 2 1 52 1 190 2 7 2 56 8 103 1 286 4 288 1 345 5 62 2 105 6 291 2 16 2 164 2 247 3 110 12 293 2 119 2 70 1 69 3 256 2 259 1 305 4 359 2 30 2 127 6 314 1 313 1 83 2 178 1 267 1 212 6 213 1 86 2 34 8 269 1 321 2 214 2 140 2 217 9 323 2 325 1 145 4 
278 2 1 1 305 2 359 1 225 1 227 1 28 1 3 1 30 2 127 5 264 1 190 2 191 1 7 2 56 5 286 2 59 1 345 1 161 1 105 5 212 3 62 2 291 2 34 5 269 1 214 2 198 1 199 1 110 6 295 1 217 8 298 1 145 2 69 1 256 2 
278 1 223 1 356 1 47 1 305 1 150 1 359 1 225 1 227 1 30 2 6 1 207 1 56 2 265 1 58 1 286 1 238 1 291 1 214 2 217 2 65 1 41 1 182 1 204 1 145 1 42 1 303 1 45 1 
47 1 49 1 96 1 78 1 339 1 2 1 98 1 52 1 235 1 192 1 313 1 265 2 58 2 103 1 176 2 10 1 239 1 364 1 213 1 268 1 16 1 137 1 111 1 19 1 249 1 37 1 325 1 41 2 117 1 204 3 42 2 45 3 
278 1 34 4 305 1 1 1 269 1 110 4 217 1 263 1 127 2 56 2 145 1 286 1 212 2 105 2 62 2 
163 1 337 1 302 1 229 1 328 1 
337 1 186 1 328 1 
337 1 186 1 328 1 
337 1 186 1 328 1 
337 1 328 1 363 1 
337 1 328 1 363 1 
337 1 328 1 363 1 
337 1 328 1 
29 1 89 1 
150 1 96 1 3 1 30 1 263 1 236 4 176 2 59 1 161 1 239 4 291 1 135 1 268 1 137 1 138 1 111 8 295 1 37 1 65 1 368 1 72 2 303 1 74 2 
150 1 96 2 3 2 30 2 263 1 236 6 190 1 7 1 176 4 59 1 161 1 239 5 291 1 135 1 268 2 137 2 138 1 111 11 295 1 65 1 37 2 91 1 368 1 168 1 72 3 303 1 333 1 74 2 
150 1 96 3 28 1 3 1 30 3 263 1 264 1 236 9 190 2 7 2 176 6 59 1 161 1 239 10 291 3 135 1 268 3 137 3 138 1 198 1 111 19 295 1 65 1 37 3 368 1 298 1 168 1 72 4 303 1 256 2 333 1 73 1 74 3 
150 1 96 3 28 1 3 1 30 3 263 1 264 1 236 10 190 2 7 2 176 6 59 1 161 1 239 7 291 2 135 1 268 3 137 3 138 1 198 1 111 17 295 1 65 1 37 3 368 1 298 1 168 1 72 5 303 1 256 1 73 1 333 2 74 3 
150 1 96 1 3 1 30 1 263 1 236 4 176 2 59 1 161 1 239 4 291 1 135 1 268 1 137 1 138 1 111 8 295 1 37 1 65 1 368 1 72 2 303 1 74 2 
96 1 28 1 3 1 30 2 264 1 236 6 190 2 7 2 176 2 59 1 161 1 239 6 291 2 268 1 137 1 198 1 111 12 295 1 37 1 368 1 298 1 72 2 256 2 333 1 74 1 
150 1 96 4 28 1 3 1 30 3 263 1 264 1 236 10 190 2 7 2 176 8 59 1 161 1 239 8 291 2 135 1 268 4 137 4 138 1 198 1 111 18 295 1 65 1 37 4 368 1 298 1 168 1 72 5 303 1 256 1 333 2 73 2 74 3 
96 4 28 1 3 1 30 3 264 1 236 9 190 3 7 3 176 8 59 1 161 1 11 1 239 7 291 2 268 4 137 4 198 1 111 16 295 1 37 4 368 1 298 1 72 6 256 2 333 3 73 2 74 3 
291 1 135 1 150 1 138 2 111 7 30 1 65 3 236 3 72 6 303 3 239 4 333 3 74 3 
150 1 96 4 28 1 3 1 30 3 263 1 264 1 236 10 190 2 7 2 176 8 59 1 161 1 11 1 239 8 291 2 135 1 268 4 137 4 138 1 198 1 111 18 295 1 65 1 37 4 368 1 298 1 72 4 303 1 256 1 333 1 73 2 74 3 
291 2 268 1 137 1 150 1 96 1 111 10 30 2 37 1 65 2 207 1 236 5 368 1 176 2 72 5 303 2 333 2 239 5 74 3 
137 1 268 1 96 1 111 2 30 1 37 1 190 1 236 2 368 1 176 2 72 1 333 1 
291 1 137 1 268 1 96 1 111 4 30 1 37 1 190 1 236 2 368 1 7 1 176 2 72 2 256 1 239 2 333 1 74 1 
137 3 268 3 96 3 111 3 37 3 65 1 236 1 368 1 82 1 176 6 72 2 11 1 303 1 73 1 239 2 333 1 74 1 
150 2 96 5 3 4 30 5 263 1 236 16 190 3 82 1 7 3 176 10 211 1 161 1 11 1 239 18 291 5 135 1 268 5 137 5 138 1 111 34 294 1 295 3 65 3 37 5 91 1 368 1 167 1 168 1 72 12 303 3 256 3 73 2 333 5 74 7 
291 1 135 1 150 1 137 2 268 2 96 2 138 1 111 8 30 1 263 1 37 2 65 1 236 4 176 4 72 3 303 1 239 4 333 1 73 1 74 2 
291 1 85 1 135 1 150 1 138 1 111 6 30 1 263 1 65 1 236 3 72 2 303 1 239 3 74 2 
291 1 137 1 268 1 96 1 111 4 30 1 37 1 190 1 236 2 7 1 168 1 176 2 72 2 256 1 239 2 333 1 74 1 
291 1 3 2 111 7 295 1 30 1 91 1 236 3 190 1 7 1 161 1 72 2 256 1 239 4 333 1 74 1 
150 1 96 2 3 2 30 3 263 1 190 2 236 11 7 2 82 1 176 4 239 12 133 1 291 3 135 1 137 2 268 2 138 1 111 23 295 2 36 1 65 2 91 1 37 2 72 9 303 2 256 2 333 4 73 2 74 5 
111 1 3 1 239 1 
111 1 295 1 236 1 
291 1 268 1 137 1 96 1 140 1 111 6 30 1 37 1 190 1 236 3 7 1 168 1 176 2 72 3 256 1 239 3 333 1 74 2 
96 1 28 1 3 1 30 2 264 1 236 6 190 2 7 2 176 2 59 1 161 1 239 6 291 2 268 1 137 1 198 1 111 12 295 1 37 1 368 1 298 1 72 2 256 2 333 1 74 1 
291 1 150 1 111 6 30 1 65 1 236 3 72 2 303 1 239 3 333 1 74 1 
135 1 137 1 268 1 96 1 138 1 111 3 65 1 37 1 236 1 82 1 176 2 72 2 303 1 333 1 239 2 73 1 74 1 
192 1 299 1 58 1 204 1 21 1 317 1 45 1 
92 1 94 1 192 1 299 1 58 1 204 1 21 1 60 1 317 1 132 1 319 1 45 1 
16 2 338 1 339 1 35 1 165 1 98 1 2 1 52 1 325 1 313 1 8 1 103 1 170 1 13 1 213 1 
184 1 16 2 244 1 339 1 165 1 2 2 98 1 52 2 8 1 313 1 170 1 103 1 13 1 213 2 
68 1 325 1 157 1 16 1 253 1 98 1 301 1 2 1 52 1 213 1 
338 1 2 1 155 1 52 1 213 1 
325 1 338 1 2 1 52 1 213 1 
325 1 260 1 338 1 2 1 196 1 52 1 213 1 
325 1 313 1 85 1 16 1 339 1 35 1 139 1 98 1 2 1 52 1 213 1 
16 1 339 1 2 1 98 1 52 1 235 1 41 1 325 1 192 1 313 1 58 1 159 1 204 2 103 1 42 1 10 1 45 2 213 1 
184 1 335 1 339 3 98 1 2 1 262 1 52 1 235 1 192 1 313 2 58 2 159 1 103 2 238 1 10 1 213 1 16 1 142 1 41 1 204 2 42 2 222 1 45 2 
184 1 335 1 339 3 98 1 2 2 228 1 262 1 52 2 235 1 192 1 313 2 58 2 159 1 103 2 238 1 213 2 16 1 39 1 142 1 41 1 204 2 42 2 222 1 45 2 
184 1 34 1 107 1 16 1 321 1 225 2 227 2 339 4 247 1 2 3 98 1 228 1 52 3 323 1 142 1 367 1 325 1 313 1 103 1 345 1 222 1 62 1 213 3 
184 1 34 1 86 1 16 1 321 1 225 2 227 2 339 4 247 1 2 3 98 1 228 1 52 3 323 1 142 1 325 1 313 1 103 1 345 1 222 1 62 1 213 3 
16 1 98 1 2 1 373 1 52 1 213 1 
16 2 338 1 339 1 165 1 2 2 98 1 52 2 325 2 208 1 313 1 221 1 70 1 103 1 196 1 13 1 148 1 213 2 
268 1 137 1 280 1 96 1 338 1 19 1 37 1 41 1 58 1 159 1 204 1 210 1 42 1 176 2 364 1 45 1 
278 2 259 1 305 2 225 3 281 1 227 3 339 2 2 1 52 1 56 1 286 2 345 2 178 1 62 1 213 1 34 1 86 1 321 1 164 1 247 1 293 1 217 1 323 1 324 1 325 1 119 1 145 2 69 1 
16 2 338 1 339 2 2 1 98 1 323 1 52 1 313 1 373 1 70 1 103 1 267 1 213 1 
16 1 339 1 2 1 98 1 52 1 39 1 235 1 41 1 325 1 192 1 313 1 58 1 159 1 204 2 103 1 42 1 45 2 213 1 
184 1 16 2 339 1 165 1 2 1 98 1 52 1 208 1 313 1 70 1 103 1 13 1 213 1 
106 1 58 1 194 1 204 1 266 1 327 1 362 1 160 1 45 1 
194 1 115 1 93 1 
192 1 243 1 194 1 266 1 160 1 
34 1 335 1 243 2 321 1 64 1 225 2 227 2 292 1 262 1 324 1 93 1 115 1 192 1 194 1 266 2 254 1 160 2 238 1 62 1 
297 1 75 1 203 1 342 1 20 1 246 1 350 1 38 1 
75 4 18 1 136 1 246 4 187 1 79 1 350 2 232 1 206 1 296 2 297 2 203 1 342 1 20 3 
75 2 246 2 350 1 38 1 144 1 296 1 203 1 297 1 342 1 20 1 84 1 377 1 
75 3 246 3 187 2 350 1 232 1 38 1 81 1 206 2 203 1 297 1 342 1 20 1 
20 2 226 1 340 2 240 1 
75 1 203 1 342 1 246 1 374 1 38 1 
297 1 75 2 203 1 342 1 20 1 102 1 246 2 350 1 38 1 296 1 
109 1 
297 1 75 1 203 1 342 1 20 1 246 1 350 1 38 1 
297 1 85 1 20 1 350 1 
297 1 75 1 203 1 342 1 20 1 246 1 350 1 
75 1 273 1 201 1 
334 1 75 3 246 3 187 1 350 1 38 1 232 1 206 2 203 1 297 1 342 1 20 1 
297 1 75 2 203 1 342 1 20 1 246 2 350 1 80 1 296 1 
68 1 162 1 75 1 203 1 342 1 20 1 246 1 253 1 79 1 177 1 38 1 
75 1 203 1 342 1 20 1 246 1 350 1 38 1 
297 1 75 1 203 1 342 1 246 1 350 2 38 1 
75 2 246 2 350 1 310 1 38 1 31 1 203 2 342 2 20 1 24 1 
75 3 136 1 246 3 79 1 350 1 230 1 38 1 296 2 297 1 203 1 342 1 102 1 20 2 
75 2 48 1 246 2 172 1 350 1 38 1 296 1 297 1 68 2 203 1 157 1 342 1 20 1 253 1 177 1 
75 4 136 1 246 4 79 1 350 1 80 1 38 1 296 2 297 1 203 2 342 2 20 2 274 1 
75 3 246 3 350 1 38 1 296 1 206 1 203 1 297 1 342 1 20 1 102 1 
18 1 136 1 20 1 79 1 
20 1 350 1 

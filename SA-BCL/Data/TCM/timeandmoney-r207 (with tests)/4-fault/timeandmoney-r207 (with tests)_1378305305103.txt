#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (85,199,260) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (85,199,260) 170 162 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (85,199,260) 170 288 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (85,199,260) (85,199,260) 237 174 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (85,199,260) 170 44 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 3 43 3 239 1 304 2 279 1 136 1 198 2 66 1 331 1 267 1 223 2 54 1 128 1 
43 9 26 2 27 1 347 1 304 2 279 1 136 2 140 1 331 4 283 1 54 1 236 9 35 2 94 2 239 1 287 2 118 1 61 1 291 1 179 1 198 5 319 1 66 3 267 1 223 2 127 1 83 1 128 6 
43 9 26 2 27 1 347 1 304 2 279 1 136 2 140 1 331 4 283 1 54 1 236 9 35 2 94 2 239 1 287 2 118 1 61 1 291 1 179 1 198 5 319 1 66 3 267 1 223 2 127 1 83 1 128 6 
43 10 26 2 27 1 347 1 304 2 279 1 136 2 140 1 331 5 283 1 54 1 236 10 35 2 94 2 239 1 287 2 118 1 61 1 291 1 179 1 198 6 319 1 66 4 267 1 223 2 127 1 83 1 128 7 
43 7 26 1 347 1 304 2 279 1 136 2 140 1 331 3 283 1 54 1 236 7 35 2 94 2 239 1 287 2 118 1 61 1 291 1 179 1 198 4 319 1 66 2 267 1 223 2 127 1 83 1 128 4 
236 4 35 1 94 1 43 4 239 1 287 1 61 1 26 2 27 1 304 1 179 1 198 3 66 1 331 2 267 1 223 1 54 1 128 3 
236 2 253 1 43 2 94 1 239 1 287 1 346 1 304 1 165 1 136 1 291 1 198 1 267 1 223 1 54 1 127 1 
270 1 43 9 26 2 27 1 304 2 279 1 136 1 331 4 54 1 236 9 35 1 94 1 239 1 118 1 287 1 61 1 292 1 179 1 198 5 319 1 66 3 267 1 223 2 128 7 
270 1 43 9 26 2 27 1 304 2 279 1 136 1 331 4 54 1 236 9 35 1 94 1 239 1 118 1 287 1 61 1 292 1 179 1 198 5 319 1 66 3 267 1 223 2 128 7 
1 1 4 1 225 1 325 1 85 1 30 1 8 1 144 1 308 1 310 1 246 1 82 1 55 1 84 1 
354 1 
354 1 224 1 90 1 144 2 325 1 85 2 317 1 218 1 
203 1 352 1 185 1 354 1 173 1 224 2 325 2 85 5 154 2 317 1 63 1 29 1 218 1 290 2 123 1 144 5 210 1 311 2 181 1 
354 1 19 1 317 1 
166 1 
337 1 4 2 308 2 310 1 246 2 82 2 55 2 8 2 
129 1 4 2 160 1 131 1 226 1 299 1 24 1 345 1 277 1 72 1 28 2 188 1 8 2 256 1 141 1 143 1 308 3 310 1 282 2 259 1 351 1 76 1 146 1 55 2 284 1 33 1 116 1 337 1 353 2 149 1 238 2 155 2 177 1 246 3 82 2 295 1 202 1 
1 1 4 1 225 1 308 1 310 1 246 1 82 1 55 1 8 1 30 1 
4 1 308 1 199 1 168 1 260 1 246 1 
4 1 308 1 260 1 246 1 82 1 55 1 8 1 
224 1 144 1 325 1 85 1 60 1 
354 1 224 1 144 2 325 1 85 2 326 1 317 1 218 1 
224 1 144 1 85 1 
323 1 4 2 337 2 272 1 8 1 308 2 246 2 82 1 55 1 
79 1 233 1 104 1 
337 1 353 1 149 1 160 1 238 1 226 1 275 1 345 1 277 1 72 1 308 1 282 1 351 1 246 1 146 1 33 1 
337 1 19 1 
160 1 4 1 353 1 149 1 226 1 238 1 345 1 277 1 72 1 40 1 8 1 79 1 308 2 282 1 351 1 246 2 82 1 146 1 33 1 20 1 
323 1 4 5 337 1 40 1 8 4 135 1 308 5 220 1 168 1 246 5 82 4 55 1 13 1 20 2 
1 1 4 2 318 1 225 1 308 2 246 2 82 2 8 2 
337 1 4 3 308 3 246 3 82 3 55 1 20 1 8 3 
1 1 4 1 225 1 308 1 246 1 82 1 8 1 
323 1 4 1 225 1 272 1 308 1 246 1 82 1 55 1 8 1 
323 1 4 2 162 1 308 2 260 1 246 2 170 1 82 2 40 1 55 1 8 2 20 1 
337 1 4 2 308 2 220 1 168 1 246 2 82 1 8 1 20 1 
4 1 308 1 288 1 260 1 246 1 170 1 82 1 40 1 8 1 20 1 
323 1 4 2 104 1 8 2 79 1 308 2 246 2 82 2 55 1 20 1 
337 1 353 1 149 1 160 1 238 1 226 1 345 1 277 1 72 1 308 1 282 1 351 1 246 1 146 1 33 1 
337 1 353 1 286 1 160 1 238 1 226 1 345 1 277 1 72 1 257 1 308 1 282 1 351 1 246 1 146 1 
129 1 299 2 155 2 316 1 188 1 28 2 278 1 241 1 256 1 79 1 233 1 141 1 143 1 350 1 259 1 193 1 
4 1 318 1 225 1 308 1 246 1 82 1 158 1 8 1 
18 1 59 1 215 1 
242 1 147 1 59 2 215 2 335 1 182 1 
59 1 215 1 
59 1 215 1 
147 1 182 1 
147 1 182 1 
147 1 182 1 
59 1 215 1 53 1 
59 1 215 1 53 1 
59 1 215 1 53 1 
152 1 59 1 215 1 
152 1 59 1 215 1 
152 1 59 1 215 1 
42 1 4 2 161 1 85 1 301 1 189 1 8 2 106 1 305 1 280 1 144 1 308 2 309 1 115 1 337 1 148 1 59 1 215 1 196 1 243 1 18 1 97 1 246 2 82 2 
322 1 1 1 42 2 4 1 161 2 225 1 85 2 102 1 187 1 7 1 8 1 106 2 30 1 305 2 280 1 308 1 144 2 75 1 310 1 55 1 77 1 115 2 354 1 117 1 59 2 215 2 359 1 246 1 201 1 82 1 84 1 
15 1 35 1 94 2 346 1 62 2 
35 1 94 1 287 1 
94 1 287 1 346 1 
15 1 313 1 35 2 94 3 346 1 62 1 
15 1 35 1 191 1 94 2 346 1 62 1 
185 3 224 1 325 4 85 5 232 1 328 2 166 3 350 1 144 5 309 1 52 1 311 1 113 1 34 1 114 1 148 1 354 2 151 1 154 1 121 2 315 1 241 1 63 2 317 1 218 1 290 1 243 1 244 1 123 1 268 1 247 1 320 2 
203 1 185 8 224 6 273 1 325 7 85 9 25 1 205 1 229 5 166 9 281 1 350 3 144 9 52 3 110 1 311 2 113 1 34 3 114 2 354 5 151 3 154 2 60 5 120 1 121 6 315 3 241 3 63 6 317 1 218 1 290 2 243 4 123 1 247 2 320 6 
203 1 185 3 325 2 85 3 328 1 166 4 350 1 144 3 52 1 311 1 114 1 34 1 354 3 151 2 154 1 315 1 121 2 317 1 241 1 63 2 290 1 243 1 244 1 268 1 247 1 320 2 
203 1 185 5 325 3 85 4 25 1 328 2 166 7 350 2 281 1 144 4 52 2 110 1 311 1 114 1 34 2 354 4 151 3 154 1 121 4 315 2 317 1 241 2 63 4 290 1 243 2 244 1 268 1 247 1 320 4 
111 1 
208 1 277 1 19 1 
99 1 277 1 
226 1 351 1 277 1 
78 1 277 1 
226 1 277 1 
226 1 208 2 351 1 277 3 261 1 126 1 
172 2 263 1 45 1 38 1 299 3 132 1 133 1 315 1 155 7 6 1 241 1 105 1 107 1 177 4 109 1 156 2 296 3 364 1 
129 1 297 1 45 1 100 1 299 15 132 5 133 2 6 1 28 2 105 2 74 4 107 1 256 1 143 1 350 3 109 2 52 3 259 1 145 1 92 3 34 3 172 5 36 1 38 2 315 4 155 31 355 1 241 4 219 1 177 16 156 3 157 1 296 10 364 1 
129 2 100 1 299 4 132 1 133 1 86 1 28 4 6 1 105 1 256 2 107 1 143 2 109 1 259 2 262 1 172 3 38 1 315 1 155 9 241 1 177 5 156 2 296 4 364 1 
172 2 45 1 38 1 299 3 132 1 133 1 315 1 155 7 6 1 241 1 105 1 107 1 177 4 109 1 156 2 296 3 364 1 
172 2 45 1 38 1 299 3 132 1 133 1 315 1 155 7 6 1 241 1 105 1 107 1 177 4 109 1 156 2 296 3 364 1 
183 2 236 1 160 1 353 1 43 1 226 1 238 1 339 1 289 2 277 1 72 1 304 1 136 2 9 1 89 1 32 1 234 1 307 2 51 1 360 1 282 1 223 1 146 1 
183 1 0 1 160 1 43 1 186 1 346 1 72 1 304 1 136 1 31 1 307 1 282 1 54 1 56 1 336 1 313 1 236 1 35 1 353 1 94 2 238 1 287 1 289 1 80 1 223 1 321 1 
183 1 160 1 43 2 186 1 346 1 72 1 304 1 136 1 31 1 307 1 282 1 54 1 56 1 58 1 336 1 313 1 236 2 35 1 353 1 94 2 238 1 239 1 287 1 289 1 80 1 198 1 267 1 223 1 128 1 321 1 
183 1 0 1 160 1 43 3 186 1 346 1 72 1 304 1 136 1 31 1 307 1 282 1 56 1 313 1 336 1 236 3 35 1 353 1 94 2 238 1 239 1 287 1 289 1 80 1 198 1 360 1 267 1 180 1 223 1 128 2 
183 1 0 1 160 1 43 2 186 1 346 1 72 1 136 1 307 1 282 1 56 1 336 1 313 1 236 2 353 1 35 1 94 2 238 1 239 1 287 1 289 1 198 1 267 1 180 1 128 2 
169 1 
4 1 160 1 185 1 224 2 204 1 226 1 85 2 277 1 72 1 330 1 206 1 32 1 89 1 308 1 144 2 168 1 282 2 260 1 146 2 91 1 311 1 114 1 237 1 353 2 238 2 174 1 154 1 63 1 218 1 290 1 123 1 199 1 361 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
237 1 4 1 224 1 85 2 174 1 218 1 330 1 90 1 308 1 144 2 199 1 361 1 168 1 260 1 246 1 
4 1 237 1 85 1 154 1 174 1 290 1 330 1 123 1 308 1 144 1 199 1 168 1 361 1 260 1 246 1 311 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 330 1 308 1 144 1 199 1 168 1 361 1 174 1 85 1 260 1 246 1 
4 1 237 1 85 1 154 1 174 1 290 1 330 1 123 1 308 1 144 1 199 1 168 1 361 1 260 1 246 1 311 1 
129 2 0 1 4 1 160 2 254 1 226 2 70 1 299 1 277 3 72 2 28 4 188 2 8 1 256 2 141 2 32 1 89 1 308 1 143 2 282 8 259 2 76 1 146 2 193 1 171 1 58 1 353 8 116 1 238 7 16 1 155 2 177 1 125 1 96 1 246 1 82 1 342 1 20 1 202 2 
323 1 129 1 4 1 5 1 299 2 300 1 104 1 28 2 188 1 8 1 256 1 233 1 141 1 143 1 308 1 350 1 52 1 259 1 55 1 172 1 34 1 315 1 155 3 241 1 177 1 79 1 246 1 82 1 296 1 
129 1 299 3 133 1 6 1 28 2 188 1 105 1 256 1 107 1 233 1 141 1 143 1 259 1 193 1 172 2 337 2 315 1 155 6 241 1 177 3 79 1 156 1 19 1 296 2 364 1 
129 2 159 1 3 1 225 1 5 1 299 3 28 4 188 1 104 5 74 2 256 2 233 7 141 2 349 1 143 2 52 2 259 2 76 1 92 2 285 1 34 2 337 1 340 1 315 2 155 9 355 1 177 6 79 7 
129 1 160 1 4 1 226 1 5 1 275 1 299 1 345 1 276 1 277 1 72 1 104 1 188 1 28 2 8 1 256 1 141 1 308 2 143 1 282 1 351 1 259 1 76 1 146 1 10 1 33 1 337 1 149 1 353 1 116 1 238 1 119 1 40 1 155 2 177 1 246 2 82 1 20 1 
129 2 68 1 160 1 4 1 226 1 5 1 299 2 345 1 277 1 72 1 188 2 28 4 8 1 256 2 233 2 141 2 308 2 143 2 52 1 282 1 351 1 259 2 211 1 76 1 192 1 146 1 33 1 12 1 34 1 149 1 353 1 238 1 153 1 315 1 155 5 40 1 177 3 79 2 246 2 82 1 295 1 20 1 
129 1 338 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 193 1 
129 1 299 2 155 2 316 1 188 1 28 2 241 1 256 1 79 1 233 1 141 1 143 1 350 1 259 1 193 1 
129 1 34 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 193 1 
129 1 338 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 342 1 
129 1 299 2 155 2 316 1 188 1 28 2 241 1 256 1 79 1 233 1 141 1 143 1 350 1 259 1 342 1 
129 1 34 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 342 1 
129 1 34 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 
129 1 160 1 226 1 299 1 345 1 277 1 72 1 188 1 28 2 256 1 141 1 308 1 143 1 282 1 351 1 259 1 76 1 146 1 33 1 116 1 337 1 149 1 353 1 238 1 155 2 177 1 246 1 295 1 
129 1 160 1 226 1 299 1 345 1 277 1 72 1 188 1 28 2 256 1 257 1 48 1 141 1 308 1 143 1 282 1 351 1 259 1 76 1 146 1 116 1 337 1 286 1 353 1 238 1 155 2 177 1 246 1 
129 1 34 1 5 1 315 1 155 2 188 1 28 2 256 1 177 2 79 1 233 1 141 1 143 1 52 1 259 1 
129 1 160 1 226 1 345 1 277 1 72 1 188 1 28 2 256 1 233 1 141 1 308 1 143 1 52 1 282 1 351 1 259 1 33 1 58 1 34 1 149 1 353 1 238 1 153 1 315 1 155 2 177 2 79 1 246 1 295 1 
323 1 129 1 4 1 5 1 132 1 28 2 188 1 104 1 8 1 256 1 233 1 141 1 143 1 308 1 52 1 259 1 55 1 34 1 176 1 315 1 155 2 177 2 79 1 246 1 82 1 296 1 
129 2 130 1 299 10 132 3 228 1 28 4 74 2 256 2 108 1 137 1 143 2 350 3 52 3 258 2 259 2 262 1 92 1 172 3 34 3 150 1 315 3 41 1 155 19 355 1 241 3 177 9 81 2 245 1 157 1 296 6 
343 1 129 3 130 1 344 1 255 1 100 2 299 12 132 2 28 6 230 1 74 2 256 3 137 2 143 3 350 2 52 3 258 4 259 3 262 1 92 2 172 2 34 3 150 1 315 3 41 2 155 26 241 2 217 1 177 14 124 1 81 1 245 1 157 2 296 4 
343 1 129 3 130 1 344 1 255 1 100 1 299 21 132 4 133 1 6 1 28 6 105 1 230 1 74 4 107 1 256 3 108 1 137 1 143 3 350 4 52 4 258 4 259 3 262 1 92 3 172 4 34 4 150 1 315 5 41 2 155 41 217 1 355 1 241 5 177 20 124 1 81 1 245 1 156 1 249 1 157 3 296 8 364 1 
343 1 129 4 130 1 344 1 255 1 100 2 299 18 132 3 133 1 6 1 28 8 105 1 230 1 74 4 107 1 256 4 108 1 137 1 143 4 350 3 52 4 258 4 259 4 262 1 92 3 172 4 34 4 150 1 315 5 41 2 155 38 217 1 355 1 241 4 177 20 124 1 81 1 245 1 156 1 249 1 157 3 296 7 364 1 
343 1 129 2 130 1 344 1 255 1 100 1 299 25 132 7 133 1 6 1 28 4 105 1 230 1 74 4 107 1 256 2 137 1 349 2 143 2 350 7 52 7 258 4 259 2 262 1 92 4 172 7 34 7 150 1 315 8 41 1 155 52 217 1 355 2 241 8 177 27 124 1 81 1 245 1 156 1 157 2 296 14 364 1 
115 1 42 1 117 1 59 1 215 1 187 1 106 1 305 1 178 1 359 1 77 1 
18 1 97 1 
305 1 42 1 115 1 138 1 264 1 59 1 215 1 71 1 106 1 
221 1 53 1 
14 1 152 1 335 1 
322 1 1 1 42 1 4 1 161 2 225 1 85 1 102 1 187 1 7 1 8 1 106 1 30 1 305 1 280 1 308 1 144 1 75 1 310 1 55 1 77 1 115 1 354 1 117 1 59 1 215 1 359 1 246 1 201 1 82 1 84 1 
322 1 1 1 42 1 4 1 161 2 225 1 85 1 102 1 187 1 7 1 8 1 106 1 30 1 305 1 280 1 308 1 144 1 75 1 310 1 55 1 77 1 115 1 354 1 117 1 59 1 215 1 359 1 246 1 201 1 82 1 84 1 
322 1 1 1 42 1 4 1 161 2 225 1 85 1 102 1 187 1 7 1 8 1 106 1 30 1 305 1 280 1 308 1 144 1 75 1 310 1 55 1 77 1 115 1 354 1 117 1 59 1 215 1 359 1 246 1 201 1 82 1 84 1 
221 1 53 1 335 1 
221 1 53 1 335 1 
14 1 152 1 
14 1 152 1 335 1 
189 1 196 1 
42 1 4 2 161 1 325 1 85 1 102 1 301 1 189 1 106 1 8 2 305 1 308 2 144 1 75 1 309 1 115 1 337 1 148 1 59 1 216 1 215 1 196 1 243 1 18 1 97 1 246 2 82 2 
98 1 129 1 160 1 4 2 254 1 163 1 226 1 5 1 299 1 277 1 72 1 188 1 28 2 256 1 141 1 308 2 143 1 207 1 282 2 259 1 209 1 76 1 353 2 116 1 238 2 155 2 177 1 125 1 246 2 248 1 202 2 
160 1 353 1 22 1 226 1 238 1 277 1 72 1 9 1 307 1 32 1 89 1 65 1 282 1 146 1 
313 1 336 1 0 1 35 1 353 1 160 1 22 1 94 2 238 1 287 1 186 1 346 1 72 1 73 1 31 1 307 1 282 1 362 1 
313 1 58 1 336 1 0 1 35 1 160 1 353 2 22 1 94 2 238 2 287 1 186 1 346 1 72 1 73 1 31 1 307 1 282 2 362 1 
313 1 336 1 0 1 35 1 353 1 160 1 94 2 238 1 287 1 186 1 346 1 72 1 31 1 307 1 282 1 362 1 112 1 
175 1 
354 1 185 1 154 1 63 1 317 1 290 1 123 1 210 1 311 1 181 1 
34 2 354 5 185 5 151 5 195 1 315 2 121 5 63 5 241 2 166 10 350 2 52 2 192 1 320 5 212 2 
354 1 224 1 144 1 85 1 317 1 218 1 
203 1 160 1 185 2 224 4 204 1 226 1 46 1 85 3 277 1 72 1 206 1 32 1 89 1 144 3 282 4 334 1 146 2 91 2 311 2 114 2 353 4 314 2 238 4 154 2 39 1 63 2 218 2 290 2 123 1 
185 1 354 1 210 1 19 1 317 1 63 1 181 1 
185 1 224 1 101 1 85 1 302 1 166 1 144 1 311 1 354 2 151 1 37 1 154 1 63 1 317 1 218 1 290 1 123 1 
185 9 224 5 226 2 85 5 277 8 47 2 87 1 88 1 139 2 144 5 52 2 282 3 11 2 146 1 192 2 91 1 58 1 151 6 238 3 154 4 195 2 63 8 241 2 290 4 67 2 99 3 160 2 72 3 166 12 306 1 350 2 208 2 351 2 210 1 212 2 311 4 114 2 34 2 353 3 354 8 314 1 39 1 121 6 315 2 122 2 317 2 218 3 78 1 357 1 123 4 363 2 126 1 320 6 181 1 
184 1 185 8 344 1 224 1 255 1 85 1 230 1 74 1 166 6 144 1 350 2 52 2 91 1 212 2 311 2 92 1 93 1 114 1 34 2 354 5 151 3 154 2 195 1 121 5 315 2 63 5 217 1 241 2 317 2 218 1 290 2 123 2 124 1 320 5 157 1 
1 1 185 2 4 1 271 1 225 1 85 1 133 1 105 1 30 1 8 1 107 1 308 1 144 1 310 1 55 1 212 2 311 1 154 1 195 1 315 2 63 2 241 1 290 1 123 1 265 1 246 1 82 1 84 1 
129 1 4 2 160 1 226 1 299 1 24 1 345 1 277 1 72 1 28 2 188 1 8 2 256 1 141 1 143 1 308 3 310 1 282 1 259 1 351 1 76 1 146 1 55 2 33 1 337 1 353 1 149 1 238 1 155 1 246 3 82 2 295 1 
114 1 185 1 354 4 151 2 154 1 121 2 63 2 317 2 290 1 166 4 123 1 156 1 320 2 91 1 311 1 
252 1 305 1 42 1 189 1 213 1 
305 1 42 1 250 1 
305 1 42 1 250 1 
305 1 42 1 250 1 
305 1 42 1 327 1 
305 1 42 1 327 1 
305 1 42 1 327 1 
305 1 42 1 
59 1 215 1 
129 1 172 3 271 1 299 5 132 2 133 2 315 2 155 10 28 2 105 2 241 2 256 1 107 1 177 5 143 1 259 1 262 1 296 5 
129 1 132 1 315 1 155 2 28 2 256 1 177 2 143 1 52 1 259 1 262 1 296 1 
129 1 172 1 34 1 299 2 132 1 315 1 155 4 28 2 241 1 256 1 177 2 350 1 143 1 52 1 259 1 262 1 296 2 
129 3 172 1 100 1 299 2 132 1 133 1 227 1 155 3 28 6 105 1 256 3 177 1 108 1 143 3 259 3 262 1 296 2 
129 5 100 2 299 18 132 5 133 3 227 1 6 1 28 10 105 3 74 4 107 2 256 5 108 1 143 5 350 3 52 3 259 5 145 1 262 1 92 3 34 3 172 7 36 1 315 5 155 34 355 1 241 5 219 1 356 1 177 16 156 1 157 1 296 12 364 1 
129 2 172 2 100 1 299 4 132 1 133 1 315 1 155 8 28 4 6 1 241 1 105 1 107 1 256 2 177 4 143 2 156 1 259 2 296 3 364 1 
107 1 177 3 172 2 299 3 156 1 133 1 315 1 155 6 6 1 19 1 241 1 296 2 105 1 364 1 
129 1 172 1 34 1 299 2 132 1 315 1 155 4 28 2 241 1 356 1 256 1 177 2 350 1 143 1 52 1 259 1 296 2 
172 1 34 1 299 4 132 1 315 1 155 7 241 1 74 2 355 1 177 3 350 1 52 1 157 1 296 2 92 1 
129 2 3 1 100 2 299 12 132 4 133 2 227 1 6 1 28 4 105 2 74 2 107 1 256 2 349 1 350 2 143 2 52 2 259 2 92 2 34 2 172 5 315 3 155 23 355 1 241 3 177 11 156 1 296 9 364 1 
299 1 155 1 74 1 
177 1 155 1 92 1 
129 1 34 1 172 2 299 3 132 1 315 1 155 6 28 2 241 1 256 1 356 1 177 3 143 1 350 1 52 1 259 1 192 1 296 3 
129 1 344 1 255 1 299 6 132 1 28 2 74 1 230 1 256 1 143 1 350 2 52 2 259 1 262 1 92 1 34 2 172 1 315 2 155 12 217 1 241 2 177 6 124 1 157 1 296 2 
172 1 299 3 132 1 133 1 315 1 155 6 241 1 105 1 107 1 177 3 296 2 
129 1 172 1 100 1 299 2 132 1 133 1 227 1 155 3 6 1 28 2 105 1 256 1 177 1 143 1 259 1 296 2 364 1 
129 1 255 1 299 4 133 1 28 2 6 1 74 1 105 1 256 1 107 1 143 1 259 1 262 1 92 1 172 2 315 1 155 8 241 1 177 4 156 1 157 1 296 2 364 1 
129 2 255 1 299 5 132 1 133 1 6 1 28 4 105 1 74 2 107 1 256 2 143 2 52 1 259 2 262 1 92 1 172 2 34 1 315 2 155 11 241 1 355 1 356 1 177 6 156 1 157 1 296 3 364 1 
129 3 344 1 255 1 100 1 299 10 132 1 133 1 6 1 28 6 105 1 74 1 230 1 107 1 256 3 143 3 350 2 52 2 259 3 262 1 92 1 34 2 172 3 315 3 155 19 217 1 241 3 356 1 177 9 124 1 156 1 157 1 296 4 364 1 
129 3 344 1 255 1 100 1 299 7 132 2 133 1 6 1 28 6 105 1 74 1 230 1 107 1 256 3 143 3 350 1 52 2 259 3 262 1 92 1 34 2 172 3 315 3 155 17 217 1 241 2 356 1 177 10 124 1 156 1 157 1 296 5 364 1 
129 1 255 1 299 4 133 1 28 2 6 1 74 1 105 1 256 1 107 1 143 1 259 1 262 1 92 1 172 2 315 1 155 8 241 1 177 4 156 1 157 1 296 2 364 1 
129 1 344 1 255 1 299 6 132 1 28 2 74 1 230 1 256 1 143 1 350 2 52 2 259 1 262 1 92 1 34 2 172 1 315 2 155 12 217 1 241 2 177 6 124 1 157 1 296 2 
129 4 344 1 255 1 100 2 299 8 132 2 133 1 6 1 28 8 105 1 230 1 74 1 107 1 256 4 143 4 350 1 52 2 259 4 262 1 92 1 34 2 172 3 315 3 155 18 217 1 241 2 356 1 177 10 124 1 156 1 157 1 296 5 364 1 
129 4 344 1 255 1 100 2 299 7 132 3 28 8 230 1 74 1 256 4 108 1 143 4 350 2 52 3 259 4 262 1 92 1 34 3 172 3 315 3 155 16 217 1 241 2 177 9 124 1 157 1 296 6 
172 3 299 4 132 3 133 3 315 1 155 7 6 2 241 1 105 3 107 1 177 3 296 6 364 1 
129 4 344 1 255 1 100 2 299 8 132 1 133 1 6 1 28 8 105 1 230 1 74 1 107 1 256 4 108 1 143 4 350 1 52 2 259 4 262 1 92 1 34 2 172 3 315 3 155 18 217 1 241 2 177 10 124 1 156 1 157 1 296 4 364 1 
337 1 4 1 2 1 308 1 220 1 168 1 246 1 
337 1 2 1 4 1 348 1 49 1 50 1 308 1 200 1 220 1 168 1 333 1 246 1 
57 1 58 1 353 4 160 1 238 4 226 1 277 1 72 1 197 1 32 1 89 1 282 4 146 1 
353 2 160 1 314 1 23 1 238 2 226 1 103 1 277 1 72 2 329 1 167 1 282 2 351 1 269 1 
160 1 353 1 94 1 238 1 287 1 186 1 282 1 346 1 72 1 146 1 
58 1 98 1 0 1 353 2 160 1 238 2 226 1 277 1 72 1 125 1 282 2 
58 1 353 5 160 2 314 1 238 4 226 2 277 3 16 1 72 2 197 1 89 1 32 1 125 1 282 5 146 1 171 1 
58 1 353 5 160 2 314 1 238 4 226 2 274 1 277 3 72 2 197 1 89 1 32 1 125 1 282 5 146 1 171 1 
160 1 353 1 89 1 32 1 226 1 238 1 282 1 277 1 72 1 146 1 19 1 
337 1 4 1 353 1 160 1 226 1 238 1 345 1 277 1 72 1 8 1 308 2 282 1 351 1 246 2 82 1 146 1 33 1 20 1 
298 1 160 1 4 2 225 1 226 2 345 1 277 3 72 1 8 2 306 1 308 2 282 1 351 2 33 1 337 1 353 1 314 1 238 1 78 1 246 2 82 1 158 1 20 1 
298 1 160 1 4 2 225 1 226 2 345 1 277 3 72 1 8 2 306 1 308 2 282 2 351 2 57 1 337 1 286 1 353 2 314 1 238 2 78 1 246 2 82 1 158 1 20 1 
57 1 99 1 354 1 353 3 160 1 324 1 224 1 314 1 226 1 238 3 85 2 277 4 72 1 317 1 78 1 139 1 306 1 144 2 282 3 208 1 351 1 146 1 312 1 
57 1 99 1 354 1 353 3 160 1 224 1 314 1 226 1 238 3 85 2 277 4 72 1 317 1 47 1 78 1 139 1 306 1 144 2 282 3 208 1 351 1 146 1 
160 1 353 1 238 1 70 1 282 1 72 1 
58 1 0 1 353 7 160 2 23 1 238 6 226 2 70 1 134 1 277 3 16 1 72 3 329 1 125 1 282 7 96 1 351 1 146 2 126 1 171 1 202 1 
129 2 4 1 271 1 225 1 5 1 226 1 132 1 133 2 277 1 188 2 6 1 8 1 233 1 141 2 143 2 282 1 58 1 149 1 337 3 238 1 153 1 155 14 241 3 156 1 246 2 295 1 296 5 20 1 159 1 68 1 160 1 299 7 345 1 72 1 28 4 105 2 256 2 107 2 308 2 259 2 351 1 209 1 33 1 172 4 353 1 315 3 177 7 79 1 82 1 364 1 
67 1 99 1 185 1 224 2 325 1 85 3 277 2 47 1 139 1 144 3 282 1 208 1 210 1 146 1 11 1 311 2 354 1 353 1 238 1 154 2 39 1 122 1 317 1 63 1 218 1 290 2 123 2 181 1 
58 1 353 2 160 1 238 2 226 1 70 1 277 2 72 2 357 1 208 1 282 2 351 1 126 1 
337 1 4 1 353 1 286 1 160 1 226 1 238 1 345 1 277 1 72 1 8 1 308 2 282 1 351 1 246 2 82 1 146 1 20 1 
353 1 160 1 23 1 314 1 238 1 226 1 134 1 277 1 72 2 329 1 282 1 351 1 126 1 
337 1 341 1 194 1 235 1 231 1 
21 1 44 1 144 1 325 1 85 1 260 1 341 1 194 1 170 1 235 1 303 1 231 1 
4 1 308 1 163 1 207 1 246 1 194 1 248 1 235 1 231 1 
44 1 235 1 303 1 
236 1 198 1 43 1 239 1 267 1 223 1 54 1 304 1 
236 4 43 4 239 2 304 1 64 1 17 1 198 3 66 1 331 1 267 2 223 1 127 1 128 2 251 1 
236 2 43 2 69 1 239 1 304 1 292 1 198 1 267 1 266 1 223 1 54 1 128 1 
236 3 43 3 239 1 304 1 164 1 64 2 17 1 198 1 267 1 223 1 54 1 127 2 
214 1 198 2 142 1 95 2 
236 1 43 1 222 1 223 1 54 1 304 1 
236 2 198 1 43 2 239 1 118 1 267 1 223 1 54 1 304 1 128 1 
358 1 
236 1 198 1 43 1 239 1 267 1 223 1 54 1 304 1 
198 1 239 1 267 1 19 1 
236 1 198 1 43 1 239 1 267 1 223 1 304 1 
136 1 236 1 289 1 
236 3 43 3 239 1 304 1 64 1 17 1 190 1 198 1 267 1 223 1 54 1 127 2 
236 2 198 1 43 2 239 1 267 1 223 1 26 1 304 1 128 1 
236 1 35 1 43 1 94 1 287 1 304 1 179 1 198 1 331 1 223 1 54 1 
236 1 198 1 43 1 267 1 223 1 54 1 304 1 
236 1 43 1 239 1 267 2 223 1 54 1 304 1 
236 2 43 2 240 1 304 2 198 1 294 1 267 1 332 1 223 2 54 1 
236 3 43 3 239 1 118 1 304 1 319 1 198 2 66 1 331 1 267 1 223 1 54 1 128 2 
313 1 236 2 35 1 94 2 43 2 239 1 287 1 346 1 304 1 293 1 198 1 267 1 223 1 54 1 128 1 
236 4 43 4 239 1 26 1 27 1 304 2 198 2 66 1 331 1 267 1 223 2 54 1 128 2 
236 3 198 1 43 3 118 1 239 1 267 1 223 1 54 1 127 1 304 1 128 1 
198 1 331 1 66 1 251 1 
198 1 267 1 

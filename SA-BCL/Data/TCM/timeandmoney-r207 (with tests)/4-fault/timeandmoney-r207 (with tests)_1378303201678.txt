#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 147 333 218 119 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 147 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 147 333 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 147 152 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 147 333 218 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 147 333 218 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 9 83 1 296 1 354 1 203 3 357 1 109 5 274 6 253 2 63 2 206 1 344 2 209 1 113 1 182 1 183 9 184 2 370 2 371 1 372 1 308 1 309 4 122 2 47 2 20 1 192 1 224 1 290 1 
174 9 83 1 296 1 354 1 203 3 357 1 109 5 274 6 253 2 63 2 206 1 209 1 344 2 113 1 182 1 183 9 184 2 370 2 371 1 372 1 308 1 309 4 122 2 47 2 20 1 192 1 224 1 290 1 
174 10 83 1 296 1 354 1 203 4 357 1 109 6 274 7 253 2 63 2 206 1 209 1 344 2 113 1 182 1 183 10 184 2 370 2 371 1 372 1 308 1 309 5 122 2 47 2 20 1 192 1 224 1 290 1 
174 7 83 1 296 1 354 1 203 2 357 1 109 4 274 4 253 2 63 2 206 1 209 1 344 1 113 1 182 1 183 7 184 2 370 2 371 1 372 1 308 1 309 3 122 2 47 2 20 1 192 1 290 1 
183 4 184 1 174 4 83 1 296 1 203 1 370 1 371 1 308 1 309 2 47 1 109 3 274 3 253 1 63 1 209 1 344 2 224 1 
183 2 35 1 184 1 174 2 296 1 371 1 308 1 357 1 109 1 122 1 47 1 253 1 364 1 63 1 111 1 290 1 
183 3 184 2 174 3 296 1 203 1 371 1 308 1 309 1 122 1 109 2 274 1 253 2 206 1 
183 9 184 2 174 9 261 1 83 1 296 1 203 3 370 1 371 1 308 1 309 4 47 1 20 1 109 5 122 1 274 7 253 2 311 1 63 1 206 1 344 2 209 1 224 1 182 1 
183 9 184 2 174 9 261 1 83 1 296 1 203 3 370 1 371 1 308 1 309 4 47 1 20 1 109 5 122 1 274 7 253 2 311 1 63 1 206 1 344 2 209 1 224 1 182 1 
245 1 10 1 136 1 
0 1 69 2 10 1 
14 1 43 1 243 2 85 2 273 2 91 2 148 2 21 2 
34 1 225 1 272 2 128 1 38 1 84 2 85 2 273 3 177 1 61 2 361 1 342 1 41 1 179 1 112 1 43 1 87 1 256 1 345 1 91 3 216 1 12 1 14 1 328 1 238 1 19 1 97 1 21 2 141 1 312 2 77 1 265 1 351 1 170 2 243 2 195 1 148 2 
254 1 14 1 375 1 243 1 85 1 273 1 91 1 148 1 21 1 334 1 
36 1 273 1 190 1 51 1 254 1 208 1 245 1 258 1 79 1 90 1 10 1 91 1 148 1 247 1 
85 1 273 1 21 1 190 1 51 1 254 1 243 1 245 1 258 1 79 1 90 2 10 1 91 1 247 2 148 1 
230 1 336 1 8 1 90 1 247 1 
230 1 336 1 227 1 72 1 245 1 90 2 10 1 247 2 
336 1 90 1 247 1 
14 1 85 1 273 1 21 1 334 1 230 1 254 1 375 1 255 1 243 1 90 1 91 1 247 1 148 1 
10 1 
230 1 336 1 58 1 72 1 245 1 90 2 10 1 247 2 
326 1 13 2 118 1 72 1 263 1 6 1 230 2 231 1 336 2 22 1 23 1 233 2 55 1 245 1 90 5 67 2 10 1 247 5 80 1 
43 1 136 1 
295 1 85 1 273 2 21 1 252 1 43 2 243 1 91 2 148 2 
156 1 151 1 348 1 
11 1 328 1 38 1 84 1 273 1 61 1 97 1 361 1 141 1 312 1 342 1 265 1 43 1 87 1 345 1 91 1 
226 1 328 1 38 1 84 1 151 1 273 2 61 1 97 1 21 1 141 1 361 1 342 1 312 1 265 1 87 1 243 1 345 1 210 1 91 2 148 1 
226 1 43 1 85 1 243 3 273 3 91 3 148 3 21 3 
254 1 375 1 243 1 273 1 91 1 148 1 21 1 
254 1 295 1 243 1 85 1 273 1 91 1 148 1 21 1 252 1 
225 1 226 1 272 1 128 1 38 1 84 1 85 2 273 4 177 1 61 1 361 1 252 1 342 1 41 1 254 1 179 1 43 1 87 1 256 1 345 1 258 1 210 1 90 1 91 4 12 1 328 1 14 1 19 1 97 1 21 3 141 1 190 1 312 1 51 1 265 1 351 1 170 2 24 1 195 1 243 3 79 1 148 3 247 1 291 1 
36 1 226 1 43 1 157 1 243 1 273 2 91 2 148 2 21 1 
226 2 85 1 273 3 21 3 75 1 252 1 190 1 254 1 51 1 24 1 243 3 90 1 210 1 258 1 79 1 10 1 91 3 247 1 148 3 
226 1 151 1 348 1 85 1 273 2 21 2 252 1 243 2 91 2 148 2 
328 1 38 1 84 1 273 1 61 1 97 1 361 1 141 1 312 1 342 1 265 1 43 1 87 1 345 1 91 1 
328 1 38 1 84 1 273 1 61 1 97 1 141 1 312 1 232 1 342 1 265 1 43 1 345 1 91 1 200 1 
225 1 128 1 272 4 297 1 151 2 204 1 177 1 341 1 62 1 276 1 156 2 158 1 256 1 214 1 215 1 327 1 12 1 238 2 348 2 19 2 189 1 191 1 351 1 170 2 
254 1 51 1 52 1 243 1 273 1 91 1 148 1 21 1 
36 1 103 1 226 2 85 1 273 5 21 4 252 1 207 1 43 1 157 1 243 4 210 1 91 5 148 5 
254 1 52 1 375 1 243 2 273 2 91 2 148 2 21 2 
275 1 125 1 
275 1 125 1 
139 1 160 1 
139 1 160 1 
139 1 160 1 
275 1 154 1 125 1 
275 1 154 1 125 1 
275 1 154 1 125 1 
275 1 125 1 257 1 
275 1 125 1 88 1 
362 1 275 2 280 1 125 2 139 1 160 1 
275 1 125 1 257 1 
275 1 125 1 257 1 
304 1 116 2 185 2 150 2 281 3 121 2 140 1 251 1 362 1 143 1 275 2 65 1 285 1 125 2 244 2 90 2 180 1 10 1 247 2 
293 1 273 2 229 1 275 1 155 1 43 1 88 1 90 1 91 2 116 1 185 1 281 1 330 1 121 1 21 2 140 1 241 1 125 1 243 2 244 1 247 1 148 2 246 1 56 1 
63 1 370 1 47 1 
63 1 111 1 47 1 
104 1 63 3 111 1 370 2 86 1 48 1 
63 2 111 1 370 1 86 1 48 1 101 1 
63 2 111 1 370 1 86 1 48 2 
0 1 293 1 297 1 204 1 359 2 229 1 230 4 62 1 42 1 64 1 233 1 278 1 67 1 90 5 10 2 69 3 260 1 327 1 13 1 118 1 72 1 263 2 310 1 336 1 266 1 194 2 26 1 245 1 55 3 56 1 247 5 269 2 
0 3 293 4 3 1 297 3 204 3 5 1 359 6 230 7 62 3 64 2 233 2 8 5 211 1 90 9 67 2 10 5 69 9 327 3 13 2 72 1 118 1 263 6 310 2 336 6 350 1 266 3 194 6 220 1 169 1 26 1 245 1 55 8 28 5 247 9 80 1 
0 2 293 1 297 1 204 1 359 2 230 2 62 1 42 1 64 1 233 1 278 1 67 1 90 3 10 3 69 4 327 1 13 1 310 1 263 2 266 1 194 2 245 1 55 3 247 3 80 1 269 1 
0 3 293 2 297 2 204 2 359 4 230 3 62 2 42 1 64 1 233 1 278 1 211 1 67 1 90 4 10 4 69 7 327 2 13 1 310 1 263 4 350 1 266 2 194 4 220 1 245 1 55 5 247 4 80 1 269 2 
268 1 136 1 97 1 
235 1 97 1 
305 1 
97 1 141 1 
342 1 368 1 268 2 107 1 97 3 141 1 
342 1 97 1 141 1 
97 1 40 1 
93 1 271 1 127 1 272 7 297 1 204 1 238 4 19 3 332 1 188 1 178 1 191 2 337 2 66 1 323 1 214 3 31 1 
93 1 271 1 127 1 272 7 297 1 204 1 238 4 19 3 332 1 188 1 178 1 191 2 337 2 66 1 323 1 214 3 31 1 
93 1 271 1 127 1 272 7 297 1 204 1 238 4 19 3 332 1 188 1 178 1 191 2 337 2 66 1 221 1 323 1 214 3 31 1 
1 1 271 2 127 2 272 31 248 1 297 4 204 4 177 1 62 3 178 1 301 1 66 2 256 1 115 1 323 5 214 10 44 4 45 1 93 1 367 3 327 3 12 1 238 16 19 15 239 1 332 2 188 1 337 3 191 5 266 3 168 1 351 1 170 2 31 1 
271 1 272 9 127 1 297 1 204 1 177 2 178 1 66 1 256 2 214 4 323 1 45 1 93 1 12 2 238 5 19 4 332 1 337 2 191 3 351 2 170 4 31 1 289 1 57 1 
294 1 174 2 104 1 353 1 296 1 130 1 38 1 84 1 61 1 109 1 274 1 253 1 205 1 63 2 111 1 345 1 213 1 183 2 184 1 46 1 370 1 17 1 371 1 308 1 120 1 47 1 122 1 312 1 222 1 201 1 
104 1 174 3 353 1 296 1 130 1 38 1 84 1 61 1 109 1 250 1 274 2 253 1 205 1 63 2 111 1 345 1 213 1 183 3 184 1 46 1 237 1 370 1 17 1 371 1 47 1 122 1 166 1 312 1 222 1 201 1 
174 2 104 1 353 1 296 1 130 1 38 1 84 1 61 1 109 1 250 1 274 2 205 1 63 2 111 1 345 1 213 1 183 2 46 1 370 1 371 1 122 1 47 1 166 1 312 1 222 1 
174 1 38 1 130 2 84 1 61 1 318 1 253 1 234 1 345 1 183 1 184 1 46 2 237 1 74 1 122 2 97 1 141 1 312 1 265 1 193 1 144 1 222 2 286 1 
174 1 104 1 353 1 130 1 38 1 84 1 61 1 253 1 205 1 63 2 111 1 345 1 213 1 183 1 184 1 46 1 370 1 17 1 308 1 120 1 47 1 122 1 166 1 312 1 222 1 201 1 
284 1 
36 1 149 1 2 1 38 1 84 2 273 1 358 1 61 2 318 1 110 1 254 1 64 1 233 1 208 1 258 1 345 1 67 1 90 3 91 1 259 1 347 1 164 1 13 1 118 1 72 1 263 2 373 1 97 1 141 1 335 2 336 2 190 1 312 2 51 1 265 2 197 1 79 1 55 2 286 1 29 1 148 1 247 3 32 1 
36 1 58 1 273 1 360 1 254 1 208 1 258 1 90 3 91 1 259 1 347 1 164 1 72 1 373 1 335 2 336 2 190 1 51 1 79 1 148 1 247 3 32 1 
36 1 58 1 273 1 254 1 208 1 258 1 90 3 212 1 91 1 10 1 259 1 347 1 164 1 72 1 373 1 335 3 336 1 190 1 51 1 79 1 245 1 148 1 247 3 32 1 
36 1 58 1 273 1 360 1 254 1 208 1 258 1 90 3 212 1 91 1 10 1 302 1 259 1 347 1 164 1 72 1 373 1 335 3 336 2 190 1 51 1 79 1 245 1 148 1 247 3 32 1 
36 1 58 1 273 1 358 1 360 2 254 1 233 1 208 1 67 1 90 3 258 1 91 1 303 1 302 2 259 1 13 1 218 1 347 1 164 1 118 1 72 1 119 1 263 1 373 1 333 1 335 2 336 3 190 1 51 1 197 1 55 1 79 1 147 1 148 1 247 3 32 1 
36 1 273 1 358 1 254 1 233 1 208 1 67 1 90 2 258 1 91 1 259 1 347 1 164 1 13 1 118 1 263 1 373 1 335 2 190 1 51 1 197 1 55 1 79 1 247 2 148 1 32 1 
36 1 273 1 358 1 254 1 233 1 208 1 67 1 258 1 90 2 91 1 303 1 259 1 347 1 164 1 13 1 118 1 263 1 373 1 333 1 335 2 190 1 51 1 197 1 55 1 79 1 147 1 148 1 247 2 32 1 
36 1 273 1 358 1 254 1 233 1 208 1 67 1 258 1 90 2 91 1 303 1 259 1 347 1 164 1 13 1 118 1 263 1 373 1 333 1 335 2 190 1 51 1 197 1 55 1 79 1 147 1 148 1 247 2 32 1 
36 1 273 1 358 1 152 1 254 1 233 1 208 1 67 1 258 1 90 2 91 1 259 1 347 1 164 1 13 1 118 1 263 1 373 1 335 2 190 1 51 1 314 1 55 1 79 1 147 1 148 1 247 2 199 1 32 1 
36 1 273 1 358 1 360 1 254 1 233 1 208 1 67 1 258 1 90 2 212 1 91 1 303 1 302 1 259 1 13 1 347 1 164 1 218 1 118 1 263 1 373 1 333 1 335 3 336 1 190 1 51 1 197 1 55 1 79 1 147 1 148 1 247 2 32 1 
36 1 273 1 358 1 360 1 254 1 233 1 208 1 67 1 258 1 90 2 212 1 91 1 303 1 302 1 259 1 13 1 347 1 164 1 218 1 118 1 263 1 373 1 333 1 335 3 336 1 190 1 51 1 197 1 55 1 79 1 147 1 148 1 247 2 32 1 
36 1 273 1 358 1 254 1 233 1 208 1 67 1 90 2 258 1 91 1 259 1 347 1 164 1 13 1 118 1 263 1 373 1 335 2 190 1 51 1 55 1 79 1 247 2 148 1 199 1 32 1 
225 1 128 1 127 1 272 6 151 1 297 1 204 1 177 1 178 1 276 1 43 2 156 1 256 1 136 1 214 2 93 1 12 1 348 1 238 3 19 3 332 1 191 2 337 1 351 1 170 2 31 1 
1 1 225 2 128 1 272 14 151 11 297 2 204 1 132 1 177 2 363 1 62 1 41 1 43 1 156 11 256 2 323 1 214 2 216 1 44 3 367 3 327 2 12 2 238 8 348 4 307 1 96 1 19 6 191 1 266 2 168 1 351 2 170 4 292 1 
225 1 226 1 128 1 272 2 38 1 84 1 273 2 61 1 177 1 361 1 319 1 342 1 41 1 43 1 87 1 256 1 345 1 210 1 91 2 68 1 216 1 11 1 12 1 328 1 348 1 238 1 331 1 19 1 97 1 21 1 141 1 312 1 265 1 351 1 170 2 243 1 148 1 292 1 
4 1 151 7 297 3 204 3 61 3 62 2 342 2 156 7 256 3 210 1 345 2 214 8 216 1 12 3 219 2 348 7 19 10 21 1 166 1 312 3 265 1 266 2 351 3 170 6 126 2 31 1 226 1 225 3 228 2 127 1 128 3 272 20 38 2 84 3 273 3 177 3 361 2 178 1 41 1 320 1 43 2 87 2 91 3 323 4 93 1 327 2 137 2 328 2 238 10 332 1 97 2 98 1 141 2 337 1 191 4 243 1 195 2 148 1 292 1 
34 2 294 1 226 1 225 2 317 1 128 2 272 2 38 2 84 8 273 1 61 8 177 2 318 1 276 1 41 1 256 2 345 2 91 1 324 1 216 1 12 2 138 1 238 1 262 1 19 1 21 1 97 3 141 2 166 1 312 7 265 2 351 2 170 4 146 1 243 1 171 1 286 1 148 1 173 1 
225 1 128 1 272 3 151 1 297 1 85 1 204 1 273 1 177 1 252 1 62 1 156 1 256 1 91 1 214 1 327 1 12 1 348 1 238 1 187 1 19 2 21 1 191 1 266 1 351 1 170 2 243 1 148 1 292 1 
225 1 327 1 12 1 272 2 128 1 151 1 297 1 348 1 238 2 177 1 189 1 276 1 156 1 351 1 170 2 256 1 214 1 323 1 
225 1 12 1 272 2 128 1 151 1 348 1 204 1 177 1 19 2 341 1 62 1 276 1 191 1 156 1 351 1 170 2 256 1 214 1 
225 1 128 1 272 4 297 1 151 2 204 1 177 1 62 1 276 1 156 2 256 1 323 1 214 2 327 1 12 1 238 2 348 2 19 2 191 1 266 1 351 1 170 2 
225 1 327 1 12 1 272 2 128 1 151 1 297 1 348 1 238 2 177 1 189 1 156 1 351 1 170 2 256 1 214 1 323 1 173 1 
225 1 12 1 272 2 128 1 151 1 348 1 204 1 177 1 19 2 341 1 62 1 191 1 156 1 351 1 170 2 256 1 214 1 173 1 
225 1 128 1 272 4 297 1 151 2 204 1 177 1 62 1 156 2 256 1 323 1 214 2 327 1 12 1 238 2 348 2 19 2 191 1 266 1 351 1 170 2 173 1 
225 1 272 4 128 1 297 1 151 2 204 1 177 1 62 1 156 2 256 1 323 1 214 2 327 1 12 1 238 2 348 2 19 2 191 1 266 1 351 1 170 2 
225 1 272 2 128 1 38 1 84 1 273 1 61 1 177 1 361 1 342 1 41 1 43 1 87 1 256 1 345 1 91 1 216 1 12 1 328 1 238 1 19 1 97 1 141 1 312 1 265 1 351 1 170 2 195 1 
82 1 225 1 272 2 128 1 38 1 84 1 273 1 61 1 177 1 342 1 232 1 41 1 43 1 256 1 345 1 91 1 216 1 12 1 328 1 238 1 19 1 97 1 141 1 312 1 265 1 351 1 170 2 200 1 
225 1 128 1 272 4 297 1 151 2 204 1 177 1 62 1 156 2 256 1 323 1 214 2 327 1 12 1 238 2 348 2 19 2 191 1 266 1 351 1 170 2 292 1 
294 1 225 1 272 4 128 1 38 1 84 1 151 2 297 1 204 1 273 1 61 1 177 1 361 1 62 1 342 1 156 2 87 1 256 1 345 1 91 1 214 2 323 1 327 1 12 1 328 1 219 1 348 2 238 2 19 2 97 1 141 1 191 1 312 1 266 1 351 1 170 2 195 1 
225 1 128 1 272 3 297 1 151 1 204 1 85 1 273 1 177 1 252 1 62 1 156 1 256 1 91 1 214 1 323 1 327 1 12 1 238 2 348 1 19 1 21 1 266 1 351 1 170 2 243 1 27 1 148 1 292 1 
1 1 272 19 249 1 297 3 204 3 177 2 62 3 277 1 9 1 256 2 135 2 323 3 214 6 181 1 44 2 367 1 327 3 12 2 238 9 19 10 264 1 124 2 191 3 313 1 266 3 168 1 351 2 170 4 223 1 57 1 
1 2 59 1 272 26 249 2 297 3 105 1 204 2 131 1 177 3 62 2 9 1 256 3 135 4 323 2 214 4 181 1 45 2 44 2 367 2 327 3 12 3 238 14 19 12 264 2 124 1 191 2 266 3 351 3 352 1 170 6 54 1 223 1 288 1 57 1 
1 3 59 1 249 2 297 5 204 5 105 1 62 4 9 1 256 3 214 8 12 3 19 21 264 1 124 1 266 4 168 1 351 3 170 6 352 1 223 1 31 1 272 41 127 1 131 1 177 3 178 1 277 1 135 4 323 4 181 1 44 4 45 1 93 1 367 3 94 1 327 4 238 20 332 1 191 4 337 1 54 1 288 1 57 1 
1 3 59 1 127 1 272 38 249 2 297 5 105 1 204 4 131 1 177 4 62 3 178 1 277 1 9 1 256 4 135 4 323 3 214 7 181 1 45 2 44 4 93 1 94 1 367 3 327 4 12 4 238 20 19 18 332 1 264 1 124 1 337 1 191 4 266 4 168 1 351 4 352 1 170 8 54 1 223 1 31 1 288 1 57 1 
1 2 59 1 127 1 272 52 249 1 297 8 105 1 204 8 131 1 177 2 62 7 178 1 9 1 256 2 135 4 323 7 214 14 181 1 45 1 44 4 93 1 367 4 327 7 12 2 238 27 96 2 19 25 332 1 264 1 124 1 337 1 191 7 266 7 168 2 351 2 352 1 170 4 54 1 223 1 31 1 288 1 57 1 
362 1 275 1 116 1 185 1 125 1 196 1 244 1 180 1 121 1 251 1 
88 1 330 1 
275 1 116 1 185 1 186 1 125 1 244 1 121 1 346 1 99 1 
304 1 116 1 185 1 150 1 281 2 121 1 140 1 251 1 362 1 275 1 65 1 285 1 125 1 244 1 90 1 180 1 10 1 247 1 
304 1 116 1 185 1 150 1 281 2 121 1 140 1 251 1 362 1 275 1 65 1 285 1 125 1 244 1 90 1 180 1 10 1 247 1 
304 1 116 1 185 1 150 1 281 2 121 1 140 1 251 1 362 1 275 1 65 1 285 1 125 1 244 1 90 1 180 1 10 1 247 1 
325 1 154 1 280 1 
325 1 154 1 280 1 
236 1 257 1 
236 1 280 1 257 1 
241 1 155 1 
293 1 150 1 273 2 39 1 230 1 229 1 275 1 155 1 43 1 88 1 90 1 91 2 304 1 116 1 185 1 281 1 330 1 121 1 21 2 241 1 125 1 243 2 244 1 247 1 246 1 56 1 148 2 
325 1 154 1 
236 1 280 1 257 1 
34 2 225 1 340 1 128 1 272 2 38 1 84 2 273 2 61 2 177 1 41 1 300 1 256 1 345 1 91 2 324 1 216 1 163 1 12 1 238 1 262 1 19 1 97 1 141 1 50 1 312 2 351 1 170 2 172 1 148 2 292 1 
294 1 104 1 217 1 46 1 353 1 38 1 84 2 370 1 349 1 61 2 47 1 166 1 63 2 312 2 111 1 321 1 345 1 213 1 201 1 
104 1 46 1 353 1 129 1 38 1 84 1 370 1 349 1 61 1 47 1 166 1 63 2 312 1 111 1 345 1 213 1 201 1 
217 1 46 1 38 1 84 1 61 1 97 1 318 1 141 1 312 1 265 1 144 1 315 1 345 1 286 1 
104 1 217 1 46 1 353 1 38 1 84 1 370 1 349 1 61 1 47 1 166 1 63 2 312 1 111 1 321 1 345 1 213 1 201 1 
33 1 
326 1 55 1 245 1 10 1 263 1 136 1 6 1 
0 1 202 1 233 1 67 1 90 1 10 2 69 1 13 1 118 1 72 1 18 1 263 1 336 1 197 1 55 1 245 1 247 1 
338 2 0 6 294 1 2 1 60 1 297 2 298 2 204 2 61 3 6 1 62 2 342 3 64 2 345 3 67 4 10 8 69 12 13 4 71 1 15 1 165 1 118 4 72 3 263 8 312 3 265 1 266 2 267 2 268 2 30 2 37 1 228 2 38 4 84 3 40 2 359 6 233 4 235 3 90 5 366 2 92 2 326 1 327 2 368 1 282 2 97 10 141 3 336 5 190 2 283 2 194 6 245 2 55 9 247 5 
1 1 0 3 297 2 105 1 204 2 131 1 359 5 62 2 233 1 90 1 67 1 10 4 44 1 69 6 367 1 70 1 327 2 13 1 72 1 118 1 263 4 336 1 266 2 194 5 267 1 352 1 54 1 55 7 245 1 247 1 288 1 
127 1 297 2 204 1 85 1 273 1 254 1 233 1 255 1 322 1 67 1 90 1 91 1 303 1 366 1 93 1 13 1 14 1 118 1 263 2 332 1 21 1 334 1 375 1 267 2 243 1 55 2 247 1 148 1 
326 1 13 1 118 1 263 1 6 1 233 1 67 1 245 1 55 1 10 1 
0 5 69 10 327 2 228 1 297 2 204 2 263 5 359 5 62 2 266 2 194 5 267 2 55 5 10 5 366 1 
336 1 72 1 245 1 90 1 10 1 247 1 
149 1 2 2 38 1 84 4 60 2 61 4 318 1 110 1 64 2 233 2 345 1 67 2 90 3 13 2 15 1 118 1 72 2 263 2 97 1 141 1 336 4 240 1 242 1 312 4 265 2 55 2 286 1 247 3 80 1 
225 1 272 1 128 1 38 1 84 1 85 2 273 3 177 1 61 1 361 1 342 1 41 1 179 1 43 1 87 1 256 1 345 1 91 3 12 1 14 1 328 1 19 1 21 2 97 1 141 1 312 1 265 1 351 1 170 2 243 2 195 1 148 2 
0 2 69 4 13 1 2 1 118 1 263 2 359 2 337 1 64 1 233 1 194 2 67 1 55 1 245 2 10 4 
185 1 89 1 244 1 
185 1 89 1 244 1 
185 1 89 1 244 1 
162 1 185 1 244 1 
241 1 185 1 244 1 316 1 180 1 
162 1 185 1 244 1 
162 1 185 1 244 1 
185 1 244 1 
275 1 125 1 
93 1 12 2 272 8 127 1 297 1 204 1 238 4 19 4 177 2 332 1 178 1 337 1 191 2 351 2 170 4 256 2 323 1 214 3 31 1 45 1 
93 1 127 1 272 6 297 1 238 3 204 1 19 3 332 1 178 1 337 1 191 2 136 1 31 1 214 2 
327 1 12 1 272 4 297 1 204 1 238 2 19 2 177 1 49 1 62 1 191 1 266 1 351 1 170 2 256 1 214 2 323 1 
1 1 367 1 327 1 272 7 297 1 204 1 238 3 19 4 62 1 191 1 266 1 168 1 323 1 214 2 44 2 
127 2 272 23 297 3 204 3 177 2 363 1 62 2 178 1 256 2 114 1 214 9 323 4 44 2 45 2 93 1 367 2 327 2 12 2 238 11 19 12 96 1 332 2 337 1 191 5 266 2 168 1 351 2 170 4 31 1 
272 1 19 1 44 1 
367 1 272 1 238 1 
327 1 12 1 228 1 272 6 297 1 238 3 204 1 177 1 19 3 49 1 62 1 191 2 266 1 351 1 170 2 256 1 323 1 214 3 
1 1 272 12 297 2 204 2 105 1 131 1 177 1 62 2 256 1 323 1 214 2 44 1 367 1 327 2 12 1 238 6 19 6 191 1 266 2 351 1 170 2 352 1 54 1 288 1 57 1 
93 1 272 6 127 1 297 1 238 3 204 1 19 3 332 1 191 1 214 2 323 1 
12 1 127 1 272 3 238 1 19 2 177 1 332 1 178 1 191 1 351 1 170 2 256 1 114 1 323 1 214 2 31 1 45 1 
93 1 12 1 127 2 272 10 297 2 238 5 204 2 177 1 19 5 332 2 191 3 351 1 170 2 322 1 256 1 214 5 323 2 57 1 
327 1 12 1 272 2 297 1 238 2 177 1 351 1 170 2 256 1 323 1 214 1 57 1 
327 1 12 1 272 4 297 1 204 1 238 2 19 2 177 1 62 1 191 1 266 1 351 1 170 2 256 1 214 2 323 1 57 1 
12 3 272 3 127 1 238 1 19 2 177 3 332 1 277 1 191 1 351 3 170 6 256 3 114 1 214 2 323 1 45 1 57 1 
1 1 127 3 248 1 272 34 297 5 204 5 177 5 62 3 178 1 277 1 256 5 114 1 115 1 323 5 214 12 45 2 44 4 93 2 367 3 327 3 12 5 238 16 239 1 19 18 332 3 49 1 337 1 191 7 266 3 168 1 351 5 170 10 31 1 57 1 
1 1 272 8 127 1 297 1 204 1 131 1 177 1 178 1 256 1 214 2 44 1 93 1 367 1 12 1 238 4 19 4 332 1 337 1 191 2 351 1 170 2 31 1 57 1 
1 1 127 1 272 11 297 2 204 1 131 1 177 2 178 1 256 2 323 1 214 3 44 2 93 1 367 1 327 1 12 2 238 6 19 5 332 1 49 1 337 1 191 2 266 1 168 1 351 2 170 4 31 1 57 1 
1 1 127 1 272 19 297 3 105 1 204 3 131 1 177 3 62 2 178 1 256 3 323 1 214 4 44 1 45 1 93 1 367 1 327 2 12 3 238 9 19 10 332 1 49 1 337 1 191 3 266 2 351 3 170 6 352 1 54 1 31 1 288 1 57 1 
1 1 127 1 272 17 297 3 204 2 105 1 131 1 177 3 62 1 178 1 256 3 323 2 214 5 45 1 44 1 93 1 367 1 327 2 12 3 238 10 19 7 332 1 49 1 337 1 191 3 266 2 351 3 170 6 352 1 54 1 31 1 288 1 57 1 
1 1 272 8 127 1 297 1 204 1 131 1 177 1 178 1 256 1 214 2 44 1 93 1 367 1 12 1 238 4 19 4 332 1 337 1 191 2 351 1 170 2 31 1 57 1 
1 1 272 12 297 2 204 2 105 1 131 1 177 1 62 2 256 1 323 1 214 2 44 1 367 1 327 2 12 1 238 6 19 6 191 1 266 2 351 1 170 2 352 1 54 1 288 1 57 1 
1 1 127 1 272 18 297 3 105 1 204 2 131 1 177 4 62 1 178 1 256 4 323 2 214 5 44 1 45 2 93 1 367 1 327 2 12 4 238 10 19 8 332 1 49 1 337 1 191 3 266 2 351 4 352 1 170 8 54 1 31 1 288 1 57 1 
1 1 272 16 297 3 105 1 204 2 131 1 177 4 62 2 277 1 256 4 323 3 214 6 44 1 45 2 367 1 327 3 12 4 238 9 19 7 191 3 266 3 351 4 352 1 170 8 54 1 288 1 57 1 
93 1 272 7 127 3 297 1 204 1 238 3 19 4 332 3 178 2 191 3 31 1 214 6 323 3 
1 1 127 1 272 18 297 3 105 1 204 2 131 1 177 4 62 1 178 1 277 1 256 4 323 1 214 4 44 1 45 2 93 1 367 1 327 2 12 4 238 10 19 8 332 1 337 1 191 3 266 2 351 4 352 1 170 8 54 1 31 1 288 1 57 1 
36 1 43 1 157 1 273 1 78 1 91 1 148 1 
36 1 279 1 356 1 73 1 273 1 108 1 43 1 157 1 78 1 91 1 148 1 100 1 
312 1 265 1 38 1 84 1 345 1 286 1 136 1 61 1 97 1 318 1 141 1 
226 1 328 1 38 1 84 1 273 2 61 1 97 1 21 1 141 1 342 1 312 1 265 1 43 1 87 1 243 1 345 1 91 2 148 1 
226 1 328 1 38 1 84 1 60 1 298 1 273 2 61 1 40 1 97 3 21 1 141 2 342 2 312 1 254 1 51 1 43 1 87 1 243 2 79 1 345 1 91 2 148 2 
226 1 328 1 38 1 84 2 60 1 298 1 273 2 61 2 40 1 97 3 21 1 141 2 342 2 312 2 254 1 51 1 7 1 43 1 243 2 79 1 345 1 91 2 148 2 200 1 
161 1 38 1 84 3 60 1 298 1 61 3 40 1 97 4 141 1 336 1 190 1 342 1 312 3 265 1 7 1 235 1 245 1 90 2 345 1 10 1 268 1 247 2 198 1 
38 1 84 3 60 1 298 1 282 1 61 3 40 1 97 4 141 1 336 1 190 1 342 1 312 3 265 1 7 1 235 1 245 1 90 2 345 1 10 1 268 1 247 2 
312 1 38 1 84 1 345 1 171 1 61 1 
34 1 339 1 294 1 368 1 317 1 138 1 38 3 84 7 61 7 97 3 141 2 166 1 123 1 153 1 312 6 342 1 265 2 146 1 171 1 345 2 324 1 
294 1 297 1 151 1 204 1 61 1 342 1 300 1 156 1 256 2 345 1 214 2 12 2 219 1 348 1 19 3 21 1 312 1 351 2 170 4 31 1 226 1 225 2 128 2 127 1 272 6 38 1 84 1 273 2 177 2 361 1 178 1 43 2 87 1 91 2 93 1 137 1 328 1 238 3 97 1 332 1 141 1 191 2 337 1 195 1 243 1 148 1 292 1 
84 1 61 1 6 1 230 1 233 2 235 1 67 2 90 3 10 1 92 1 326 1 13 2 15 1 118 2 282 1 72 1 263 1 97 2 336 2 312 1 190 1 283 1 265 1 55 1 245 1 268 1 247 3 30 1 
294 1 368 1 71 1 38 2 84 2 61 2 97 2 141 1 312 2 342 1 171 1 345 1 268 1 
294 1 38 1 84 4 61 4 318 1 97 1 141 1 167 1 312 4 265 1 7 1 286 1 345 1 
175 1 38 2 84 2 60 1 4 1 61 2 97 1 141 1 123 1 365 1 153 1 312 2 342 1 345 1 
63 1 312 1 111 1 265 1 38 1 84 1 345 1 61 1 47 1 213 1 
294 1 38 1 84 2 61 2 97 1 141 1 166 1 312 2 172 1 345 1 324 1 
294 1 317 1 38 2 84 5 60 1 61 5 318 1 97 3 141 2 167 1 312 4 265 1 146 1 286 1 345 2 324 1 
294 1 38 2 84 5 60 1 61 5 318 1 97 3 374 1 141 2 167 1 312 4 265 1 146 1 286 1 345 2 324 1 
226 1 328 1 38 1 84 1 273 2 61 1 97 1 21 1 141 1 342 1 312 1 265 1 43 1 243 1 345 1 91 2 148 1 200 1 
339 1 368 1 38 2 84 1 60 1 61 1 97 1 141 1 123 1 153 1 312 1 342 1 345 1 
142 1 95 1 43 1 355 1 306 1 
95 1 355 2 306 2 133 1 230 1 142 2 190 1 254 1 51 1 43 1 24 1 245 1 79 1 90 2 258 1 10 1 247 2 159 1 81 1 
163 1 340 1 95 1 355 1 306 1 273 1 50 1 91 1 148 1 
95 1 159 1 81 1 
296 1 371 1 136 1 109 1 
253 1 183 1 174 1 184 1 296 1 371 1 109 1 
174 1 222 1 122 1 
253 1 183 3 174 3 184 1 16 1 296 1 145 1 371 1 308 1 109 1 134 1 290 2 
253 1 183 2 174 2 184 1 296 1 344 1 371 1 109 1 274 1 
183 1 184 1 174 1 83 1 370 1 308 1 309 1 109 1 47 1 253 1 63 1 
253 1 183 1 174 1 184 1 371 1 308 1 109 1 
253 1 183 1 174 1 184 1 296 1 371 2 308 1 
183 2 102 1 184 2 174 2 369 1 371 1 308 1 109 1 253 2 25 1 
183 3 184 1 174 3 296 1 203 1 371 1 308 1 309 1 20 1 109 2 274 2 253 1 182 1 
183 2 184 1 174 2 104 1 296 1 370 1 371 1 299 1 308 1 109 1 47 1 274 1 253 1 63 2 111 1 
183 4 184 2 174 4 296 1 203 1 371 1 308 1 309 1 109 2 274 2 253 2 344 1 224 1 
253 1 183 1 174 1 184 1 296 1 371 1 308 1 109 1 
183 4 174 4 184 1 296 2 203 1 371 2 309 1 109 3 134 1 274 2 253 1 145 1 53 1 290 1 
253 1 311 1 183 2 270 1 174 2 184 1 343 1 296 1 371 1 308 1 109 1 274 1 
183 3 184 1 174 3 296 1 371 1 308 1 109 1 134 1 253 1 145 2 287 1 290 2 
117 1 176 2 106 1 109 2 
253 1 183 1 174 1 184 1 329 1 308 1 
253 1 183 2 174 2 184 1 296 1 371 1 308 1 109 1 274 1 182 1 
76 1 
253 1 183 1 174 1 184 1 296 1 371 1 308 1 109 1 
253 1 183 3 174 3 184 1 296 1 371 1 308 1 109 1 274 1 182 1 290 1 
53 1 203 1 309 1 109 1 
371 1 109 1 

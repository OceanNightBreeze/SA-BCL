#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (93,108) (93,108) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (93,108) (93,108) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (93,108) (93,108) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (93,108) (93,108) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 365 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 365 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 2 345 172 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 188 183 (103,278) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 188 183 (68,332) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
5 1 48 6 264 1 356 4 220 1 200 1 82 2 171 1 363 2 203 2 175 3 132 1 304 1 179 1 249 2 369 2 276 1 61 9 64 4 108 1 27 1 66 2 327 9 330 1 93 1 94 2 
5 1 48 6 264 1 356 4 220 1 200 1 82 2 171 1 363 2 203 2 175 3 132 1 304 1 179 1 249 2 369 2 276 1 61 9 64 4 108 1 27 1 66 2 327 9 330 1 93 1 94 2 
5 1 48 6 264 1 356 4 220 1 200 1 82 2 171 1 363 2 203 2 175 3 132 1 304 1 179 1 249 2 369 2 276 1 61 9 64 4 108 1 27 1 66 2 327 9 330 1 93 1 94 2 
5 1 48 4 356 3 220 1 200 1 82 2 171 1 363 2 203 1 175 2 132 1 304 1 179 1 249 2 369 2 276 1 61 7 64 3 108 1 27 1 66 2 327 7 330 1 93 1 94 2 
48 3 179 1 249 1 61 4 64 2 264 1 356 2 27 1 66 1 82 1 327 4 171 1 94 1 363 1 203 2 175 1 
46 1 234 1 304 1 249 1 61 2 276 1 369 1 356 1 27 1 66 1 82 1 327 2 85 1 94 1 288 1 354 1 
46 1 234 1 27 1 82 2 66 2 48 1 5 1 327 3 369 1 61 3 64 1 356 2 175 1 
365 1 179 1 48 7 5 1 249 1 61 9 369 1 64 4 306 1 264 1 356 4 220 1 200 1 27 1 66 2 82 2 327 9 171 1 94 1 363 1 203 2 175 3 
365 1 179 1 48 7 5 1 249 1 61 9 369 1 64 4 306 1 264 1 356 4 220 1 200 1 27 1 66 2 82 2 327 9 171 1 94 1 363 1 203 2 175 3 
221 1 30 1 230 1 
336 1 30 1 257 2 
215 1 372 1 246 2 361 2 318 2 185 2 254 2 274 2 
215 1 72 2 51 1 100 1 195 2 295 1 315 1 218 1 341 1 79 1 103 1 201 2 13 1 361 2 318 2 15 2 202 1 128 1 36 1 299 1 274 3 246 2 227 1 157 1 25 1 137 1 279 1 138 1 372 1 183 1 70 2 185 3 212 1 232 1 254 2 256 1 333 1 
372 1 246 1 99 1 322 1 269 1 361 1 318 1 185 1 254 1 274 1 
18 1 99 1 193 1 293 1 30 1 228 1 120 1 199 1 221 1 361 1 122 1 185 1 297 1 274 1 
18 1 246 1 99 1 193 2 293 1 30 1 199 2 221 1 318 1 361 1 122 1 185 1 297 1 254 1 274 1 
199 1 151 1 193 1 124 1 189 1 
199 2 221 1 151 1 207 1 193 2 124 1 106 1 30 1 
199 1 151 1 193 1 
246 1 99 1 322 1 4 1 193 1 199 1 372 1 269 1 318 1 361 1 185 1 124 1 254 1 274 1 
30 1 
199 2 221 1 151 1 193 2 124 1 106 1 127 1 30 1 
3 1 193 5 156 2 367 1 323 1 106 1 263 1 30 1 199 5 373 1 221 1 151 2 329 2 124 2 35 1 190 1 244 2 321 1 153 1 
215 1 230 1 
215 2 246 1 348 1 361 2 318 1 185 2 271 1 254 1 274 2 
115 1 158 1 239 1 
215 1 157 1 195 1 9 1 137 1 138 1 218 1 183 1 103 1 201 1 13 1 185 1 15 1 212 1 256 1 274 1 
215 1 177 1 246 4 347 1 228 1 361 5 318 1 185 5 159 1 129 1 254 4 271 1 274 5 86 2 
246 2 99 1 322 1 361 2 41 1 185 2 254 2 274 2 
177 1 246 1 157 1 195 1 239 1 137 1 138 1 218 1 183 1 103 1 201 1 13 1 361 1 185 2 15 1 212 1 254 1 256 1 274 2 86 1 
215 1 246 3 318 1 361 3 185 3 254 3 274 3 86 1 
246 1 99 1 322 1 361 1 185 1 254 1 274 1 
246 1 99 1 361 1 318 1 185 1 254 1 271 1 348 1 274 1 
215 1 99 1 72 1 193 1 100 1 293 1 195 1 315 1 218 1 341 1 199 1 79 1 103 1 13 1 201 1 318 2 361 3 122 1 15 1 128 1 297 1 271 1 299 1 274 4 86 1 177 1 18 1 20 1 246 3 157 1 227 1 25 1 137 1 279 1 138 1 183 1 372 1 284 1 70 2 185 4 212 1 254 3 256 1 333 1 
215 1 246 1 361 2 185 2 347 1 228 1 254 1 274 2 86 1 
177 1 18 1 246 3 20 1 99 1 193 1 293 1 30 1 199 1 318 1 122 1 361 3 28 1 185 3 297 1 271 1 254 3 274 3 86 2 
246 2 239 1 318 1 361 2 158 1 185 2 271 1 254 2 274 2 86 1 
215 1 157 1 195 1 137 1 218 1 138 1 183 1 103 1 201 1 13 1 185 1 15 1 212 1 256 1 274 1 
215 1 157 1 195 1 137 1 218 1 138 1 121 1 183 1 201 1 68 1 185 1 15 1 212 1 256 1 274 1 
115 2 98 1 47 1 72 4 295 2 239 2 315 1 198 1 341 1 79 1 342 1 83 1 53 1 125 1 128 1 299 1 19 1 38 1 25 2 209 1 158 2 70 2 186 1 333 1 
18 1 246 1 99 1 361 1 41 1 185 1 254 1 274 1 
89 1 204 1 
89 1 204 1 
371 1 308 1 
371 1 308 1 
371 1 308 1 
89 1 292 1 204 1 
89 1 292 1 204 1 
89 1 174 1 204 1 
89 2 116 1 109 1 371 1 204 2 308 1 
89 1 292 1 204 1 
89 1 34 1 204 1 
89 1 34 1 204 1 
89 1 34 1 204 1 
215 1 303 1 246 2 57 1 147 1 6 1 193 1 134 1 88 1 237 1 291 1 194 1 39 1 240 1 89 1 199 1 11 1 328 1 361 2 185 2 254 2 174 1 274 2 204 1 
116 1 6 2 193 2 88 3 277 1 237 1 291 2 307 1 30 1 294 1 136 2 266 1 240 2 89 2 199 2 11 2 144 1 204 2 44 1 
249 1 94 1 363 1 
249 1 85 1 94 1 
258 1 236 1 85 1 325 1 363 2 94 3 
258 1 85 1 325 1 363 1 94 2 43 1 
258 2 85 1 325 1 363 1 94 2 
98 1 47 1 336 1 193 5 194 1 30 2 340 1 199 5 241 1 221 1 317 2 151 1 342 1 243 2 124 4 170 1 35 2 244 1 321 1 275 1 205 1 303 1 57 1 225 1 224 1 156 1 324 2 367 3 38 1 106 1 329 1 257 3 
98 3 47 3 336 3 193 9 263 1 194 4 30 5 199 9 221 1 317 6 151 6 342 3 124 7 170 2 223 1 35 6 130 1 244 2 275 1 321 1 205 2 225 3 58 5 156 2 324 6 367 8 38 3 106 1 65 1 349 1 184 1 329 2 29 1 189 5 257 9 
98 1 47 1 336 2 193 3 263 1 194 1 30 3 340 1 199 3 221 1 317 2 342 1 243 1 124 2 170 1 35 2 244 1 205 1 224 1 156 1 225 1 367 3 324 2 38 1 329 1 257 4 
98 2 47 2 336 3 193 4 263 1 194 2 30 4 340 1 199 4 221 1 317 4 342 2 243 2 170 1 124 3 35 4 130 1 244 1 205 1 156 1 224 1 225 2 324 4 367 5 38 2 184 1 329 1 29 1 257 7 
211 1 230 1 138 1 
87 1 138 1 
344 1 
256 1 138 1 218 1 
378 1 138 1 
138 1 218 1 
32 1 359 1 211 2 256 1 138 3 218 1 
47 1 235 1 72 7 38 1 295 4 25 3 355 1 267 1 251 2 80 1 67 1 83 2 53 3 141 1 362 1 142 1 301 1 
47 1 235 1 72 7 38 1 295 4 25 3 355 1 267 1 251 2 80 1 67 1 83 2 53 3 141 1 362 1 142 1 301 1 
47 1 235 1 72 7 38 1 295 4 25 3 40 1 355 1 267 1 251 2 80 1 67 1 83 2 53 3 141 1 362 1 142 1 301 1 
214 1 98 3 47 4 235 2 72 31 192 1 295 16 355 1 267 2 341 1 79 1 80 2 342 3 83 5 53 10 296 1 362 1 299 1 301 1 154 1 105 1 302 1 366 3 225 3 38 4 25 15 181 1 251 3 67 5 139 4 70 2 141 2 142 1 333 1 
47 1 235 1 72 9 38 1 295 5 25 4 326 1 267 1 251 2 341 2 79 2 80 1 67 1 83 3 296 1 53 4 70 4 141 1 362 1 142 1 95 1 299 2 333 2 301 1 
46 1 234 1 48 1 236 1 238 1 195 1 8 1 356 1 201 1 82 1 15 1 169 1 85 1 363 1 247 1 249 1 59 1 61 2 369 1 157 1 137 1 281 1 27 1 66 1 327 2 112 1 285 1 94 2 377 1 42 1 
46 1 234 1 236 1 48 2 238 1 195 1 356 1 201 1 82 1 15 1 169 1 85 1 363 1 247 1 249 1 59 1 61 3 369 1 157 1 26 1 137 1 281 1 66 1 327 3 112 1 140 1 253 1 94 2 377 1 42 1 
46 1 234 1 236 1 247 1 48 2 249 1 59 1 157 1 61 2 369 1 238 1 195 1 137 1 356 1 201 1 327 2 15 1 85 1 140 1 112 1 253 1 363 1 94 2 377 1 42 1 
238 2 195 1 218 1 102 1 201 1 82 1 15 1 84 1 59 2 157 1 61 1 369 2 26 1 137 1 138 1 66 1 327 1 110 1 252 1 112 2 212 1 113 1 379 1 
236 1 238 1 195 1 201 1 82 1 15 1 169 1 85 1 363 1 247 1 249 1 59 1 61 1 369 1 157 1 137 1 281 1 27 1 66 1 327 1 112 1 253 1 285 1 94 2 377 1 42 1 
62 1 
2 1 146 1 99 1 336 2 193 5 195 2 293 1 196 2 339 1 197 1 199 5 102 1 151 6 201 2 15 2 297 1 244 1 17 2 18 1 305 1 156 1 157 1 106 3 107 1 212 2 352 1 257 2 312 1 71 2 30 2 120 1 218 1 168 2 221 1 361 1 122 1 84 1 170 1 35 2 273 2 321 1 274 1 37 1 226 1 367 2 228 1 137 1 138 1 90 2 329 1 185 1 187 1 286 2 96 4 287 1 
312 1 18 1 37 1 305 1 99 1 193 3 106 1 293 1 228 1 120 1 199 3 168 1 151 2 122 1 361 1 185 1 127 1 297 1 287 1 96 2 352 1 274 1 
17 1 312 1 18 1 37 1 305 1 99 1 193 3 106 1 293 1 30 1 228 1 120 1 199 3 221 1 151 1 122 1 361 1 185 1 127 1 297 1 287 1 96 3 352 1 274 1 
312 1 99 1 193 3 293 1 30 1 120 1 199 3 168 1 221 1 151 2 361 1 122 1 127 1 297 1 274 1 17 1 18 1 37 1 305 1 106 1 228 1 185 1 286 1 352 1 96 3 287 1 
233 1 2 1 99 1 336 2 193 5 293 1 196 2 199 5 151 7 297 1 244 1 17 4 18 1 305 1 345 1 156 1 106 3 352 1 312 1 313 1 71 2 165 1 262 1 30 5 120 1 168 4 221 5 122 1 361 1 127 1 35 1 273 2 274 1 321 1 37 1 367 1 228 1 90 2 185 1 329 1 187 1 286 4 287 1 96 6 
2 1 99 1 336 2 193 4 293 1 196 2 199 4 151 4 297 1 244 1 17 2 18 1 305 1 156 1 106 2 352 1 257 2 312 1 71 2 30 2 120 1 168 2 221 1 122 1 361 1 35 1 273 2 274 1 321 1 37 1 367 1 226 1 228 1 90 2 185 1 329 1 187 1 286 2 287 1 96 4 
312 1 233 1 2 1 71 2 99 1 313 1 336 2 193 4 293 1 30 1 196 2 120 1 199 4 168 2 221 1 151 4 361 1 122 1 35 1 297 1 273 2 244 1 274 1 321 1 17 2 18 1 37 1 305 1 345 1 156 1 367 1 106 2 228 1 90 2 185 1 329 1 187 1 286 2 352 1 96 4 287 1 
312 1 233 1 2 1 71 2 99 1 313 1 336 2 193 4 293 1 30 1 196 2 120 1 199 4 168 2 221 1 151 4 361 1 122 1 35 1 297 1 273 2 244 1 274 1 321 1 17 2 18 1 37 1 305 1 345 1 156 1 367 1 106 2 228 1 90 2 185 1 329 1 187 1 286 2 352 1 96 4 287 1 
312 1 2 1 99 1 193 2 52 1 293 1 196 1 120 1 199 2 361 1 122 1 14 1 35 1 297 1 172 1 244 1 274 1 321 1 18 1 37 1 305 1 345 1 156 1 367 1 228 1 90 1 185 1 329 1 143 1 352 1 96 2 287 1 
312 1 233 1 2 1 71 2 99 1 313 1 336 2 193 4 165 1 293 1 30 1 196 2 120 1 199 4 168 3 221 1 151 5 361 1 122 1 35 1 297 1 273 2 244 1 321 1 274 1 17 3 18 1 37 1 305 1 345 1 156 1 367 1 106 2 228 1 90 2 329 1 185 1 187 1 286 3 352 1 96 5 287 1 
312 1 233 1 2 1 71 2 99 1 313 1 336 2 193 4 165 1 293 1 30 1 196 2 120 1 199 4 168 3 221 1 151 5 361 1 122 1 35 1 297 1 273 2 244 1 321 1 274 1 17 3 18 1 37 1 305 1 345 1 156 1 367 1 106 2 228 1 90 2 329 1 185 1 187 1 286 3 352 1 96 5 287 1 
312 1 2 1 99 1 193 2 293 1 196 1 120 1 199 2 361 1 122 1 14 1 35 1 297 1 244 1 321 1 274 1 18 1 37 1 305 1 156 1 367 1 228 1 90 1 329 1 185 1 352 1 96 2 287 1 143 1 
215 2 115 1 47 1 235 1 72 6 295 3 239 1 315 1 198 1 341 1 79 1 83 2 53 2 362 1 128 1 299 1 301 1 38 1 25 3 230 1 251 1 158 1 70 2 141 1 142 1 333 1 
214 1 215 1 115 11 98 2 47 2 72 14 117 1 51 1 216 1 100 1 295 8 239 11 315 1 341 2 78 1 79 2 83 1 342 1 53 2 128 2 299 2 154 1 366 3 225 2 60 1 180 1 38 1 25 6 67 1 139 3 158 4 70 4 333 2 
215 1 72 2 338 1 51 1 195 1 100 1 295 1 9 1 217 1 218 1 315 1 78 1 341 1 79 1 103 1 13 1 201 1 361 1 15 1 128 1 272 1 299 1 274 2 86 1 177 1 246 1 157 1 25 1 137 1 138 1 183 1 158 1 185 2 70 2 212 1 254 1 256 1 333 1 
97 2 98 2 47 3 235 1 51 1 100 1 195 3 295 10 239 7 341 3 150 2 103 2 201 3 13 2 342 2 15 3 53 8 299 3 301 1 246 1 157 2 25 10 251 1 210 1 67 4 158 7 70 6 253 1 212 1 254 1 255 2 256 2 215 2 115 7 72 20 315 3 218 2 167 1 78 1 79 3 83 4 361 1 362 1 128 3 320 2 274 3 86 1 177 1 225 2 38 3 137 2 279 2 138 2 183 2 374 1 185 3 141 1 142 1 333 3 
72 2 261 1 51 1 195 8 100 1 295 1 8 1 198 1 315 2 218 2 341 2 79 2 102 1 201 7 361 1 15 8 84 1 16 1 343 1 128 2 274 1 299 2 86 1 178 1 246 1 206 1 157 2 63 1 25 1 137 2 138 3 309 1 185 1 70 4 253 1 212 2 254 1 232 2 333 2 
115 1 98 1 47 1 72 3 295 1 239 1 315 1 341 1 78 1 79 1 83 1 318 1 361 1 342 1 53 1 128 1 271 1 299 1 274 1 246 1 225 1 38 1 25 2 158 1 70 2 185 1 254 1 333 1 353 1 
115 1 98 1 47 1 72 2 295 2 239 1 198 1 315 1 341 1 79 1 67 1 158 1 53 1 70 2 125 1 128 1 299 1 333 1 
115 1 72 2 38 1 239 1 25 2 198 1 315 1 341 1 209 1 79 1 83 1 342 1 158 1 53 1 70 2 128 1 299 1 333 1 
115 2 98 1 47 1 72 4 295 2 239 2 315 1 198 1 341 1 79 1 342 1 83 1 53 2 128 1 299 1 225 1 38 1 25 2 67 1 158 2 70 2 333 1 
115 1 98 1 47 1 72 2 63 1 295 2 239 1 315 1 341 1 79 1 67 1 158 1 53 1 70 2 125 1 128 1 299 1 333 1 
115 1 72 2 63 1 38 1 239 1 25 2 315 1 341 1 209 1 79 1 83 1 342 1 158 1 53 1 70 2 128 1 299 1 333 1 
115 2 98 1 47 1 72 4 295 2 239 2 315 1 341 1 79 1 342 1 83 1 53 2 128 1 299 1 225 1 63 1 38 1 25 2 67 1 158 2 70 2 333 1 
115 2 98 1 47 1 72 4 295 2 239 2 315 1 341 1 79 1 342 1 83 1 53 2 128 1 299 1 225 1 38 1 25 2 67 1 158 2 70 2 333 1 
215 1 72 2 51 1 195 1 100 1 295 1 218 1 315 1 341 1 79 1 103 1 13 1 201 1 15 1 128 1 274 1 299 1 157 1 25 1 137 1 279 1 138 1 183 1 185 1 70 2 212 1 256 1 333 1 
215 1 72 2 51 1 195 1 100 1 295 1 218 1 315 1 121 1 341 1 79 1 201 1 15 1 128 1 274 1 299 1 157 1 25 1 137 1 138 1 183 1 68 1 111 1 185 1 70 2 212 1 256 1 333 1 
115 2 98 1 47 1 72 4 295 2 239 2 315 1 341 1 78 1 79 1 342 1 83 1 53 2 128 1 299 1 225 1 38 1 25 2 67 1 158 2 70 2 333 1 
115 2 98 1 47 1 72 4 195 1 295 2 239 2 8 1 218 1 315 1 341 1 79 1 103 1 13 1 201 1 83 1 342 1 53 2 15 1 128 1 320 1 274 1 299 1 225 1 157 1 38 1 25 2 137 1 279 1 138 1 183 1 67 1 158 2 185 1 70 2 256 1 333 1 
115 1 98 1 47 1 72 3 295 2 7 1 239 1 315 1 341 1 78 1 79 1 342 1 318 1 361 1 53 1 128 1 271 1 299 1 274 1 246 1 225 1 38 1 25 1 67 1 158 1 70 2 185 1 254 1 333 1 
145 1 98 4 47 5 49 1 235 1 337 1 295 20 101 1 341 3 12 1 342 4 53 8 296 1 54 1 299 3 154 1 301 1 346 1 24 1 25 21 251 1 67 4 70 6 214 3 72 41 260 1 265 4 79 3 83 4 362 1 173 2 366 3 225 4 135 1 38 5 229 1 139 4 141 1 142 1 95 1 333 3 45 1 191 1 
145 1 214 3 98 4 47 5 235 1 49 1 72 38 260 1 337 1 295 20 101 1 265 4 341 4 79 4 12 1 83 4 342 3 296 2 53 7 362 1 173 2 54 1 299 4 301 1 154 1 346 1 366 3 225 4 135 1 24 1 38 4 229 1 25 18 251 1 67 3 139 4 70 8 141 1 142 1 95 1 333 4 191 1 45 1 
214 2 98 7 47 8 235 1 49 1 72 52 260 1 216 2 295 27 101 1 265 4 341 2 79 2 12 1 83 7 342 7 296 1 53 14 362 1 173 1 54 1 299 2 301 1 154 2 346 1 366 4 225 7 135 1 24 1 38 8 229 1 25 25 251 1 67 7 139 4 70 4 141 1 142 1 95 1 333 2 191 1 45 1 
334 1 145 1 214 1 98 3 47 3 72 19 260 1 295 9 265 2 341 2 79 2 83 3 342 3 53 6 173 1 299 2 154 1 346 2 366 1 225 3 24 1 38 3 25 10 67 3 139 2 70 4 95 1 333 2 191 1 45 1 
214 2 98 3 47 3 72 26 49 1 260 2 295 14 101 1 265 4 341 3 79 3 12 1 83 2 342 2 296 2 53 4 173 2 54 1 299 3 346 1 366 2 225 3 135 1 38 2 24 1 229 1 25 12 67 2 139 2 70 6 95 1 333 3 191 1 45 1 
364 1 89 1 11 1 116 1 6 1 277 1 291 1 307 1 240 1 204 1 
147 1 174 1 
213 1 89 1 11 1 222 1 6 1 375 1 291 1 240 1 204 1 
33 1 292 1 
34 1 109 1 55 1 
116 1 6 1 193 1 88 2 277 1 237 1 291 1 307 1 30 1 294 1 136 1 240 1 89 1 199 1 11 1 144 1 204 1 44 1 
116 1 6 1 193 1 88 2 277 1 237 1 291 1 307 1 30 1 294 1 136 1 240 1 89 1 199 1 11 1 144 1 204 1 44 1 
116 1 6 1 193 1 88 2 277 1 237 1 291 1 307 1 30 1 294 1 136 1 240 1 89 1 199 1 11 1 144 1 204 1 44 1 
33 1 109 1 292 1 
33 1 109 1 292 1 
34 1 55 1 
34 1 109 1 55 1 
328 1 134 1 
215 1 6 1 147 1 193 1 291 1 194 1 294 1 240 1 199 1 11 1 361 2 124 1 274 2 204 1 174 1 245 1 303 1 246 2 57 1 88 1 134 1 136 1 39 1 89 1 328 1 185 2 254 2 
0 1 72 2 50 1 51 1 195 2 100 1 295 1 218 1 315 1 78 1 341 1 79 1 201 2 361 2 15 2 343 1 128 1 299 1 274 2 155 1 157 1 25 1 137 1 138 1 309 1 185 2 70 2 162 1 232 2 311 1 333 1 
1 1 236 1 247 1 249 1 157 1 22 1 195 2 8 1 137 1 268 1 201 2 15 2 169 1 85 1 112 1 253 1 363 1 94 2 377 1 
1 1 236 1 247 1 249 1 250 1 157 1 195 1 137 1 201 1 15 1 169 1 85 1 112 1 253 1 363 1 94 2 377 1 
73 1 157 1 195 1 137 1 138 1 218 1 102 1 268 1 201 1 110 1 15 1 84 1 112 1 212 1 
1 1 236 1 247 1 249 1 157 1 22 1 195 1 137 1 268 1 201 1 15 1 169 1 85 1 112 1 253 1 363 1 94 2 377 1 
270 1 
3 1 221 1 367 1 35 1 30 1 190 1 230 1 
71 1 336 1 193 1 156 1 367 1 106 1 30 2 199 1 221 1 151 1 329 1 187 1 35 1 273 1 244 1 321 1 257 1 
3 1 98 2 47 2 336 6 193 5 195 3 8 1 197 1 199 5 201 3 151 5 342 2 15 3 244 4 156 4 248 2 157 4 23 2 106 3 160 1 350 2 212 1 211 2 255 2 256 3 257 12 164 2 314 2 30 8 218 3 166 1 219 1 359 1 221 2 317 6 122 2 319 2 170 2 35 8 321 4 225 2 367 9 87 3 324 6 38 2 278 2 370 1 137 3 138 10 283 1 329 4 188 2 190 1 378 2 
214 1 98 2 47 2 336 3 49 1 193 1 30 5 101 1 197 1 199 1 12 1 221 2 151 1 317 5 342 2 319 2 170 1 35 5 298 1 54 1 244 2 321 2 366 1 156 2 225 2 135 1 324 5 367 8 23 1 106 1 38 2 139 1 329 2 114 1 257 6 
233 1 99 1 47 2 4 1 235 1 193 1 199 1 269 1 318 1 361 1 319 2 35 2 152 1 244 1 274 1 321 1 301 1 246 1 322 1 156 1 367 2 23 1 38 1 372 1 185 1 329 1 141 1 254 1 
3 1 156 1 367 1 30 1 221 1 329 1 35 1 190 1 244 1 321 1 
98 2 47 2 336 5 225 2 324 5 367 5 23 1 38 2 30 5 317 5 342 2 319 2 35 5 255 1 257 10 
199 1 221 1 151 1 193 1 106 1 30 1 
193 3 263 1 195 4 339 1 197 2 218 1 199 3 102 1 201 4 151 4 15 4 84 1 170 2 35 2 244 2 321 1 176 1 156 2 367 2 157 1 106 2 107 1 137 1 370 1 138 1 283 2 329 2 212 2 380 1 
215 1 72 1 100 1 195 1 218 1 315 1 341 1 79 1 103 1 201 1 13 1 361 2 318 2 15 1 128 1 274 3 299 1 246 2 227 1 157 1 25 1 137 1 279 1 138 1 372 1 183 1 70 2 185 3 212 1 254 2 256 1 333 1 
336 2 156 1 324 2 367 1 30 4 197 1 251 1 221 2 317 2 329 1 170 1 35 2 244 1 321 1 257 4 
118 1 291 1 240 1 
118 1 291 1 240 1 
134 1 277 1 291 1 76 1 240 1 
118 1 291 1 240 1 
149 1 291 1 240 1 
149 1 291 1 240 1 
149 1 291 1 240 1 
291 1 240 1 
89 1 204 1 
214 1 47 1 72 8 235 1 295 4 101 1 341 1 79 1 83 2 53 2 362 1 299 1 301 1 366 1 38 1 25 4 251 1 139 1 70 2 141 1 142 1 95 1 333 1 
214 1 98 1 47 2 235 1 72 11 295 6 31 1 101 1 341 2 79 2 83 2 53 3 362 1 299 2 301 1 154 1 366 1 225 1 38 1 25 5 251 1 67 1 139 2 70 4 141 1 142 1 95 1 333 2 
214 1 98 2 47 3 235 1 72 19 49 1 295 9 31 1 101 1 341 3 79 3 12 1 342 2 83 3 53 4 296 1 362 1 54 1 299 3 301 1 366 1 225 2 135 1 38 3 25 10 251 1 67 1 139 1 70 6 141 1 142 1 95 1 333 3 
214 1 98 2 47 3 235 1 72 17 49 1 295 10 31 1 101 1 341 3 79 3 12 1 342 1 83 3 296 1 53 5 362 1 54 1 299 3 301 1 366 1 225 2 135 1 38 2 25 7 251 1 67 2 139 1 70 6 141 1 142 1 95 1 333 3 
214 1 47 1 72 8 235 1 295 4 101 1 341 1 79 1 83 2 53 2 362 1 299 1 301 1 366 1 38 1 25 4 251 1 139 1 70 2 141 1 142 1 95 1 333 1 
214 1 98 2 47 2 72 12 49 1 295 6 101 1 341 1 79 1 12 1 342 2 83 1 53 2 54 1 299 1 366 1 225 2 135 1 38 2 25 6 67 1 139 1 70 2 95 1 333 1 
214 1 98 2 47 3 235 1 72 18 49 1 295 10 31 1 101 1 341 4 79 4 12 1 342 1 83 3 53 5 296 2 362 1 54 1 299 4 301 1 366 1 225 2 135 1 38 2 25 8 251 1 67 2 139 1 70 8 141 1 142 1 95 1 333 4 
214 1 145 1 98 3 47 3 72 16 49 1 295 9 101 1 341 4 79 4 12 1 342 2 83 3 53 6 296 2 54 1 299 4 366 1 225 3 135 1 38 2 25 7 67 3 139 1 70 8 95 1 333 4 
47 1 72 7 235 3 38 1 295 3 25 4 67 3 83 3 53 6 362 1 141 3 142 2 301 1 
214 1 145 1 98 2 47 3 235 1 72 18 49 1 295 10 101 1 341 4 79 4 12 1 342 1 83 3 53 4 296 2 362 1 54 1 299 4 301 1 366 1 225 2 135 1 38 2 25 8 251 1 67 1 139 1 70 8 141 1 142 1 95 1 333 4 
47 1 72 8 235 1 38 1 295 4 25 4 251 1 341 2 79 2 67 1 83 2 53 3 70 4 296 1 362 1 141 1 142 1 299 2 333 2 301 1 
47 1 235 1 72 6 38 1 295 3 25 3 230 1 251 1 83 2 53 2 362 1 141 1 142 1 301 1 
98 1 47 1 72 4 225 1 38 1 295 2 25 2 31 1 341 1 79 1 67 1 83 1 342 1 53 2 70 2 299 1 333 1 
214 1 98 1 47 1 72 7 366 1 225 1 38 1 295 3 25 4 67 1 83 1 342 1 139 2 53 2 154 1 
98 2 47 3 235 2 72 23 216 1 295 11 341 2 79 2 342 2 83 5 53 9 296 2 362 1 299 2 301 1 154 1 131 1 366 2 225 2 60 1 38 3 25 12 251 1 67 4 139 2 70 4 141 2 142 1 333 2 
72 1 139 1 25 1 
72 1 366 1 295 1 
98 1 47 1 72 6 225 1 38 1 295 3 31 1 25 3 341 1 79 1 67 1 342 1 83 2 70 2 53 3 255 1 333 1 299 1 
214 1 98 2 47 2 72 12 49 1 295 6 101 1 341 1 79 1 12 1 342 2 83 1 53 2 54 1 299 1 366 1 225 2 135 1 38 2 25 6 67 1 139 1 70 2 95 1 333 1 
47 1 72 6 235 1 38 1 295 3 25 3 67 1 83 1 53 2 141 1 301 1 
131 1 235 1 72 3 295 1 25 2 341 1 79 1 67 1 83 1 53 2 296 1 70 2 141 1 362 1 142 1 299 1 333 1 
47 2 235 2 72 10 38 2 295 5 25 5 341 1 79 1 67 2 83 3 70 2 53 5 141 2 95 1 152 1 333 1 299 1 301 1 
98 1 47 1 72 2 295 2 341 1 79 1 67 1 70 2 53 1 95 1 299 1 333 1 
98 1 47 1 72 4 225 1 38 1 295 2 25 2 341 1 79 1 67 1 83 1 342 1 53 2 70 2 95 1 299 1 333 1 
145 1 131 1 72 3 235 1 295 1 25 2 341 3 79 3 67 1 83 1 296 1 70 6 53 2 141 1 95 1 299 3 333 3 
214 1 145 1 98 3 47 5 235 3 192 1 72 34 295 16 31 1 341 5 79 5 342 3 83 7 296 2 53 12 362 1 299 5 301 2 154 1 131 1 302 1 366 3 225 3 38 5 25 18 181 1 251 1 67 5 139 4 70 10 141 3 142 1 95 1 333 5 
215 1 361 1 185 1 75 1 347 1 228 1 274 1 
215 1 335 1 133 1 75 1 347 1 228 1 361 1 185 1 92 1 126 1 351 1 274 1 
102 1 201 1 84 1 15 1 157 1 195 1 212 1 137 1 230 1 138 1 218 1 
215 1 246 1 157 1 195 1 137 1 138 1 218 1 183 1 103 1 201 1 361 1 185 2 15 1 212 1 254 1 256 1 274 2 86 1 
246 1 157 1 195 1 137 1 138 3 218 2 183 1 103 1 283 1 201 1 361 1 185 1 15 1 188 1 254 1 256 2 378 1 274 1 86 1 
246 1 157 1 195 1 137 1 138 3 218 2 183 1 283 1 201 1 361 1 68 1 185 1 15 1 188 1 254 1 256 2 378 1 274 1 86 1 
193 2 195 3 30 1 77 1 218 1 199 2 221 1 151 1 201 3 122 1 15 3 300 1 87 1 157 1 137 1 138 4 283 1 211 1 212 1 188 1 332 1 256 1 378 1 
193 2 87 1 157 1 195 3 30 1 278 1 137 1 218 1 138 4 199 2 221 1 283 1 201 3 151 1 122 1 15 3 212 1 211 1 188 1 256 1 300 1 378 1 
178 1 201 1 15 1 157 1 195 1 137 1 
178 1 206 1 261 1 157 3 195 7 8 1 137 2 218 2 138 3 359 1 201 6 123 1 15 7 253 1 16 1 343 1 212 2 232 1 331 1 256 1 289 1 
215 2 115 1 47 1 72 6 235 1 50 1 195 1 295 3 239 1 8 1 218 1 315 2 78 1 341 2 79 2 150 1 103 1 201 1 13 1 83 2 361 1 53 2 15 1 362 1 128 2 320 1 299 2 274 2 301 1 86 1 246 1 157 1 38 1 25 3 137 1 279 1 251 1 138 1 183 1 158 1 185 2 70 4 141 1 142 1 254 1 256 1 333 2 
3 1 164 1 193 3 314 1 195 1 30 1 199 3 221 1 201 1 151 2 122 1 15 1 124 1 35 1 244 2 321 2 156 2 367 1 248 1 87 1 106 1 278 1 370 1 138 2 329 2 212 1 211 1 190 1 
178 1 157 2 195 2 8 1 137 1 166 1 218 1 138 2 359 1 201 2 15 2 211 1 256 1 
157 1 195 4 8 1 137 1 218 1 138 1 102 1 81 1 201 4 15 4 84 1 212 1 300 1 
163 1 157 2 195 2 137 1 218 1 138 1 167 1 283 1 201 2 123 1 15 2 231 1 256 1 289 1 
201 1 247 1 249 1 15 1 85 1 157 1 94 1 195 1 212 1 137 1 
201 2 15 2 157 1 253 1 343 1 195 2 8 1 137 1 311 1 138 1 218 1 
261 1 157 2 195 5 8 1 137 2 218 2 138 3 102 1 81 1 283 1 201 4 84 1 15 5 16 1 212 1 343 1 
261 1 157 2 195 5 8 1 137 2 357 1 218 2 138 3 102 1 81 1 283 1 201 4 84 1 15 5 212 1 343 1 
215 1 246 1 157 1 195 1 137 1 138 1 218 1 183 1 201 1 361 1 68 1 185 2 15 1 212 1 254 1 256 1 274 2 86 1 
157 2 195 1 137 1 218 1 138 1 359 1 283 1 201 1 123 1 15 1 331 1 256 1 289 1 
215 1 242 1 368 1 21 1 161 1 
215 1 18 1 20 1 99 1 193 2 21 1 290 1 368 2 293 1 30 1 358 1 199 2 221 1 122 1 242 2 124 1 161 2 297 1 56 1 
0 1 155 1 21 1 242 1 361 1 185 1 161 1 162 1 274 1 
21 1 56 1 358 1 
46 1 234 1 230 1 356 1 
46 1 234 1 82 1 66 1 327 1 61 1 356 1 
327 1 369 1 238 1 
46 1 234 1 304 2 61 3 356 1 27 1 66 1 82 1 360 1 327 3 91 1 104 1 
46 1 234 1 82 1 66 1 48 1 327 2 61 2 356 1 203 1 
27 1 82 1 66 1 179 1 327 1 249 1 61 1 94 1 363 1 64 1 356 1 
234 1 27 1 82 1 66 1 327 1 61 1 356 1 
46 1 234 2 27 1 82 1 66 1 327 1 61 1 
234 1 148 1 61 2 119 1 356 1 282 1 27 1 66 2 82 2 327 2 
46 1 234 1 48 2 61 3 64 1 356 2 220 1 200 1 27 1 66 1 82 1 327 3 175 1 
46 1 234 1 27 1 82 1 66 1 48 1 236 1 327 2 249 1 61 2 85 1 363 1 208 1 94 2 356 1 
46 1 234 1 27 1 82 2 66 2 48 2 327 4 61 4 64 1 264 1 356 2 203 1 175 1 
46 1 234 1 27 1 82 1 66 1 327 1 61 1 356 1 
46 2 234 2 304 1 48 2 61 4 64 1 10 1 356 3 66 1 82 1 91 1 327 4 104 1 175 1 
46 1 234 1 27 1 82 1 66 1 48 1 327 2 74 1 61 2 306 1 310 1 356 1 
46 1 234 1 304 2 61 3 356 1 182 1 27 1 66 1 82 1 91 1 327 3 104 2 
376 2 356 2 316 1 280 1 
27 1 82 1 66 1 327 1 69 1 61 1 
46 1 234 1 200 1 27 1 82 1 66 1 48 1 327 2 61 2 356 1 
259 1 
46 1 234 1 27 1 82 1 66 1 327 1 61 1 356 1 
46 1 234 1 304 1 48 1 61 3 356 1 200 1 27 1 66 1 82 1 327 3 
64 1 10 1 356 1 175 1 
234 1 356 1 

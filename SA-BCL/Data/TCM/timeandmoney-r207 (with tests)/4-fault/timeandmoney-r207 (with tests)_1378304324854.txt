#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 70 132 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 221 338 141 81 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 221 338 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 221 338 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 221 289 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 221 338 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 221 338 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 70 (213,270) 156 238 (303,323) 362 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 70 (100,145) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 70 (213,270) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 70 (213,270) 156 238 (303,323) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 199 2 200 1 97 5 321 1 128 1 7 1 49 9 163 2 131 1 105 4 347 1 190 2 350 1 264 6 356 1 174 2 242 2 152 1 359 9 36 1 196 2 88 1 154 2 65 1 275 1 223 3 121 1 
199 2 0 1 200 1 97 5 321 1 128 1 7 1 49 9 163 2 131 1 105 4 347 1 190 2 350 1 264 6 356 1 174 2 242 2 152 1 359 9 36 1 196 2 88 1 154 2 65 1 275 1 223 3 121 1 
199 2 0 1 200 1 97 6 321 1 128 1 7 1 49 10 163 2 131 1 105 5 347 1 190 2 350 1 264 7 356 1 174 2 242 2 152 1 359 10 36 1 196 2 88 1 154 2 65 1 275 1 223 4 121 1 
199 2 0 1 200 1 97 4 321 1 128 1 7 1 49 7 163 2 131 1 105 3 347 1 190 2 350 1 264 4 356 1 174 2 242 2 152 1 359 7 36 1 196 1 88 1 154 2 65 1 275 1 223 2 
242 1 199 1 152 1 97 3 359 4 36 1 196 2 163 1 49 4 154 1 105 2 65 1 350 1 264 3 223 1 121 1 356 1 174 1 
242 1 152 1 200 1 97 1 45 1 359 2 36 1 49 2 7 1 163 1 154 1 312 1 190 1 350 1 352 1 174 1 
242 2 152 1 97 2 359 3 36 1 49 3 154 2 105 1 190 1 350 1 275 1 264 1 223 1 
199 1 97 5 128 1 49 9 163 1 105 4 190 1 301 1 350 1 264 7 356 1 174 1 242 2 152 1 359 9 36 1 360 1 196 2 88 1 154 2 65 1 275 1 223 3 121 1 
199 1 97 5 128 1 49 9 163 1 105 4 190 1 301 1 350 1 264 7 356 1 174 1 242 2 152 1 359 9 36 1 360 1 196 2 88 1 154 2 65 1 275 1 223 3 121 1 
183 1 125 1 353 1 
353 1 273 2 64 1 
346 1 201 2 243 2 84 2 290 2 177 2 165 2 267 1 
44 1 201 3 258 2 102 1 129 1 165 2 346 1 10 1 52 1 326 1 208 1 349 1 108 1 209 2 11 1 266 1 267 1 213 1 243 2 84 2 333 1 15 1 114 1 87 2 177 2 245 1 363 1 335 2 336 1 366 1 66 1 219 1 290 3 71 1 368 2 42 1 182 1 
229 1 201 1 243 1 84 1 99 1 290 1 177 1 278 1 165 1 267 1 
125 1 82 1 201 1 74 1 160 1 6 1 5 1 165 1 365 1 67 1 290 1 353 1 240 1 278 1 
125 1 201 1 74 2 84 1 243 1 160 1 177 1 6 1 5 2 165 1 67 1 290 1 353 1 240 1 278 1 
254 1 59 1 74 1 351 1 5 1 
125 1 59 1 74 2 351 1 353 1 180 1 21 1 5 2 
74 1 351 1 5 1 
229 1 113 1 201 1 59 1 74 1 84 1 243 1 99 1 177 1 5 1 165 1 290 1 278 1 267 1 
353 1 
125 1 357 1 59 1 74 2 351 1 353 1 180 1 5 2 
125 1 305 2 59 2 74 5 126 1 307 2 309 1 271 1 143 1 5 5 25 1 26 1 90 1 337 2 351 2 19 1 191 1 353 1 180 1 
183 1 346 1 
175 1 201 2 84 1 243 1 177 1 165 2 155 1 346 2 290 2 
291 1 31 1 55 1 
201 1 213 1 297 1 114 1 245 1 102 1 335 1 336 1 346 1 366 1 66 1 52 1 290 1 209 1 368 1 266 1 
332 1 213 1 201 2 243 1 114 1 216 1 177 1 245 1 102 1 165 1 335 1 336 1 366 1 66 1 52 1 290 2 209 1 368 1 266 1 31 1 
332 1 175 1 201 5 214 1 243 4 84 1 216 2 76 1 177 4 165 5 365 1 346 1 290 5 225 1 
201 2 243 2 98 1 99 1 290 2 177 2 278 1 165 2 
346 1 201 3 84 1 243 3 216 1 290 3 177 3 165 3 
201 1 243 1 99 1 290 1 177 1 278 1 165 1 
155 1 175 1 201 1 243 1 84 1 290 1 177 1 278 1 165 1 
44 1 201 4 74 1 160 1 258 2 6 1 5 1 102 1 129 1 165 3 345 1 346 1 52 1 326 1 349 1 108 1 209 1 11 1 240 1 266 1 267 1 332 1 175 1 213 1 84 2 243 3 15 1 114 1 287 1 216 1 87 1 177 3 245 1 363 1 335 1 336 1 366 1 67 1 66 1 290 4 368 1 42 1 278 1 182 1 
365 1 346 1 201 2 214 1 243 1 290 2 216 1 177 1 165 2 
332 1 175 1 201 3 84 1 74 1 243 3 160 1 216 2 177 3 5 1 6 1 165 3 104 1 345 1 67 1 290 3 353 1 240 1 278 1 
175 1 201 2 84 1 243 2 216 1 177 2 165 2 290 2 31 1 55 1 
201 1 213 1 114 1 245 1 102 1 335 1 336 1 346 1 366 1 66 1 52 1 290 1 209 1 368 1 266 1 
201 1 316 1 114 1 245 1 145 1 102 1 335 1 336 1 346 1 366 1 66 1 290 1 209 1 368 1 266 1 
315 1 44 1 159 1 4 1 258 2 129 1 9 1 167 1 208 2 207 1 349 2 108 1 150 1 173 1 31 2 192 1 55 2 15 1 87 4 17 1 291 2 69 1 42 1 182 1 
201 1 243 1 98 1 290 1 177 1 6 1 278 1 165 1 
235 1 83 1 
235 1 83 1 
92 1 24 1 
92 1 24 1 
92 1 24 1 
235 1 83 1 265 1 
235 1 83 1 265 1 
235 1 83 1 265 1 
236 1 235 1 83 1 
235 1 202 1 83 1 
235 2 341 1 83 2 92 1 48 1 24 1 
236 1 235 1 83 1 
236 1 235 1 83 1 
201 2 296 1 202 1 232 1 74 1 5 1 101 1 324 1 165 2 130 1 235 1 346 1 79 1 171 1 110 1 58 1 243 2 83 1 177 2 310 1 178 1 290 2 370 1 120 1 
341 1 112 1 232 2 83 2 74 2 342 1 203 2 5 2 178 3 115 1 324 2 188 1 235 2 79 2 68 1 171 1 353 1 120 2 227 1 
199 1 163 1 174 1 
45 1 163 1 174 1 
199 2 33 1 158 1 45 1 16 1 174 3 
199 1 33 1 45 1 137 1 16 1 174 2 
199 1 33 2 45 1 16 1 174 2 
184 1 125 1 159 1 74 5 4 1 143 1 5 5 101 1 26 2 25 3 130 1 164 1 167 1 263 1 106 1 207 1 351 1 149 1 283 2 353 2 331 1 241 2 305 1 59 4 269 1 307 1 310 1 273 3 64 1 337 1 197 2 180 1 
96 1 253 1 254 5 125 1 159 3 74 9 161 1 4 3 5 9 143 1 26 6 25 8 164 2 167 3 106 2 207 3 351 6 147 5 149 3 283 6 353 5 285 1 305 2 59 7 269 1 307 2 271 1 310 4 273 9 64 3 337 2 197 6 181 1 180 1 314 1 
125 1 159 1 74 3 4 1 5 3 25 3 26 2 164 1 167 1 263 1 106 1 207 1 149 1 353 3 283 2 331 1 241 1 305 1 59 2 307 1 271 1 310 1 273 4 64 2 337 1 197 2 
96 1 125 1 159 2 74 4 161 1 4 2 5 4 25 5 26 4 164 1 167 2 263 1 106 1 207 2 149 2 353 4 283 4 331 1 241 2 305 1 59 3 307 1 271 1 310 2 273 7 64 3 337 1 197 4 181 1 
183 1 70 1 
364 1 336 1 
27 1 
336 1 366 1 102 1 
336 1 371 1 
336 1 102 1 
336 1 366 1 70 1 276 1 132 1 102 1 
228 2 185 1 4 3 322 2 162 1 167 3 208 8 349 6 107 1 150 5 30 1 361 2 87 14 91 1 20 1 69 4 140 2 251 1 
228 2 185 1 4 3 322 2 162 1 167 3 208 8 349 6 107 1 150 7 30 1 361 2 87 14 91 1 20 1 69 4 140 2 251 3 
228 2 185 1 4 3 322 2 162 1 167 3 208 8 349 6 107 1 150 5 30 1 35 1 361 2 87 14 91 1 20 1 69 4 140 2 251 1 
228 3 44 1 159 3 185 2 4 6 322 2 258 2 162 1 260 1 129 1 167 6 78 1 208 21 207 3 349 19 80 1 107 1 108 1 149 3 150 14 30 1 29 4 284 1 328 1 57 1 215 1 361 3 87 40 218 3 91 2 20 1 69 7 140 3 251 7 182 1 
44 2 228 2 185 1 4 3 322 2 258 4 343 1 162 1 129 2 167 3 208 9 349 7 107 1 108 2 150 7 30 1 215 1 136 1 361 2 87 16 91 1 69 5 140 2 251 2 182 2 
199 1 97 1 158 1 45 1 187 1 256 1 259 1 163 1 49 2 237 1 77 1 168 1 239 1 190 1 350 1 264 1 209 1 174 2 242 1 152 1 60 1 359 2 36 1 114 1 245 1 311 1 154 1 335 1 179 1 368 1 
199 1 97 1 158 1 45 1 256 1 259 1 163 1 49 3 77 1 168 1 239 1 190 1 282 1 209 1 264 2 329 1 174 2 242 1 152 1 60 1 359 3 36 1 114 1 245 1 311 1 154 1 335 1 179 1 368 1 293 1 
199 1 97 1 158 1 45 1 256 1 259 1 49 2 163 1 239 1 190 1 209 1 264 2 329 1 174 2 152 1 60 1 359 2 36 1 114 1 245 1 311 1 335 1 179 1 368 1 293 1 
242 1 60 2 359 1 61 1 319 1 114 1 245 1 102 1 49 1 311 2 154 1 335 1 336 1 299 1 66 1 190 2 40 1 282 1 209 1 179 2 368 1 224 1 374 1 
199 1 158 1 45 1 256 1 259 1 163 1 49 1 237 1 77 1 168 1 239 1 190 1 350 1 209 1 329 1 174 2 242 1 60 1 359 1 114 1 245 1 311 1 154 1 335 1 179 1 368 1 
189 1 
46 1 186 1 5 3 143 1 6 1 102 1 240 1 54 1 286 2 114 1 194 1 245 1 153 1 335 2 336 1 337 1 66 2 67 1 290 1 294 1 201 1 74 3 160 1 298 1 26 2 25 2 164 1 165 1 299 1 206 1 351 2 209 2 305 1 82 1 307 1 37 1 365 1 40 1 94 1 368 2 369 1 180 1 278 1 
201 1 74 3 186 1 160 1 298 1 5 3 6 1 165 1 8 1 206 1 351 2 240 1 82 1 357 1 286 2 37 1 153 1 365 1 67 1 290 1 180 1 278 1 
125 1 201 1 74 3 186 1 160 1 298 1 5 3 6 1 165 1 206 1 351 1 240 1 53 1 353 1 82 1 357 1 286 3 37 1 153 1 365 1 67 1 290 1 180 1 278 1 
125 1 201 1 74 3 186 1 160 1 3 1 298 1 5 3 6 1 165 1 8 1 206 1 351 2 240 1 53 1 353 1 357 1 82 1 286 3 37 1 153 1 365 1 67 1 290 1 180 1 278 1 
141 1 201 1 74 3 186 1 160 1 3 2 298 1 143 1 5 3 6 1 26 1 25 1 165 1 8 2 206 1 351 3 240 1 330 1 81 1 305 1 82 1 357 1 286 2 307 1 194 1 37 1 153 1 365 1 337 1 67 1 338 1 221 1 290 1 369 1 180 1 278 1 
201 1 74 2 186 1 160 1 298 1 143 1 5 2 6 1 26 1 25 1 165 1 206 1 240 1 82 1 305 1 286 2 307 1 194 1 37 1 153 1 365 1 337 1 67 1 290 1 369 1 278 1 
201 1 74 2 186 1 160 1 298 1 5 2 6 1 143 1 26 1 25 1 165 1 206 1 240 1 330 1 82 1 305 1 286 2 307 1 194 1 37 1 153 1 365 1 337 1 67 1 338 1 221 1 290 1 369 1 278 1 
201 1 74 2 186 1 160 1 298 1 5 2 6 1 143 1 26 1 25 1 165 1 206 1 240 1 330 1 82 1 305 1 286 2 307 1 194 1 37 1 153 1 365 1 337 1 67 1 338 1 221 1 290 1 369 1 278 1 
201 1 74 2 186 1 160 1 298 1 5 2 6 1 143 1 25 1 26 1 279 1 165 1 206 1 169 1 240 1 82 1 305 1 286 2 307 1 37 1 153 1 365 1 337 1 67 1 289 1 221 1 290 1 369 1 278 1 
141 1 201 1 74 2 186 1 160 1 3 1 298 1 143 1 5 2 6 1 26 1 25 1 165 1 8 1 206 1 351 1 240 1 53 1 330 1 305 1 82 1 286 3 307 1 194 1 37 1 153 1 365 1 337 1 67 1 338 1 221 1 290 1 369 1 278 1 
141 1 201 1 74 2 186 1 160 1 3 1 298 1 143 1 5 2 6 1 26 1 25 1 165 1 8 1 206 1 351 1 240 1 53 1 330 1 305 1 82 1 286 3 307 1 194 1 37 1 153 1 365 1 337 1 67 1 338 1 221 1 290 1 369 1 278 1 
201 1 74 2 186 1 160 1 298 1 143 1 5 2 6 1 25 1 26 1 279 1 165 1 206 1 240 1 82 1 305 1 286 2 307 1 37 1 153 1 365 1 337 1 67 1 290 1 369 1 278 1 
315 1 183 1 228 1 44 1 15 1 4 1 361 1 87 5 322 1 258 2 162 1 129 1 167 1 346 2 208 3 349 2 108 1 150 2 69 2 42 1 30 1 140 1 182 1 
44 2 159 2 4 1 258 4 129 2 167 2 280 1 346 1 78 1 208 8 207 1 80 1 349 6 108 2 11 1 150 2 149 2 29 3 172 1 31 11 55 4 56 1 15 1 87 14 38 1 218 3 71 1 69 1 291 11 42 2 251 1 22 1 182 2 
124 1 44 1 201 2 297 1 258 2 102 1 129 1 165 1 346 1 52 1 208 1 349 1 209 1 108 1 11 1 266 1 55 1 56 1 332 1 213 1 243 1 135 1 15 1 114 1 216 1 177 1 87 2 245 1 335 1 274 1 336 1 366 1 66 1 290 2 368 1 71 1 42 1 182 1 
228 2 44 3 1 1 4 5 322 2 323 2 102 2 52 2 107 1 108 3 150 7 11 1 149 2 111 2 55 6 332 1 56 1 243 1 15 3 114 2 245 2 63 2 335 1 336 2 66 1 290 3 71 1 291 6 69 6 292 1 249 2 251 1 201 3 159 2 258 6 162 1 129 3 165 1 167 5 346 3 208 14 207 2 349 13 209 1 30 1 266 2 31 6 213 2 361 1 216 1 177 1 87 27 363 2 366 2 139 1 368 1 140 2 42 3 278 1 182 3 
315 1 44 2 230 1 201 1 317 1 187 1 258 4 102 2 129 2 165 1 166 1 51 1 299 1 208 1 349 1 209 8 108 2 11 1 329 1 243 1 15 2 216 1 114 2 177 1 87 2 245 2 335 7 39 1 336 3 138 1 66 2 40 1 219 2 290 1 368 8 71 1 42 2 372 1 182 2 
44 1 201 1 159 1 4 1 258 2 129 1 165 1 167 1 208 1 207 1 349 2 108 1 150 1 149 1 31 1 55 1 56 1 175 1 243 1 84 1 15 1 177 1 87 3 290 1 69 1 291 1 42 1 252 1 182 1 
315 1 44 1 159 1 15 1 87 2 258 2 17 1 129 1 167 1 208 2 108 1 150 1 291 1 42 1 251 1 31 1 55 1 182 1 
315 1 44 1 15 1 4 1 87 2 258 2 129 1 9 1 207 1 349 2 108 1 150 1 69 1 291 1 42 1 31 1 55 1 182 1 
315 1 44 1 159 1 4 1 258 2 129 1 167 1 208 2 207 1 349 2 108 1 149 1 150 2 31 2 55 2 15 1 87 4 291 2 69 1 42 1 251 1 182 1 
44 1 230 1 159 1 15 1 87 2 258 2 17 1 129 1 167 1 208 2 108 1 150 1 291 1 42 1 251 1 31 1 55 1 182 1 
44 1 230 1 15 1 4 1 87 2 258 2 129 1 9 1 207 1 349 2 108 1 150 1 69 1 291 1 42 1 31 1 55 1 182 1 
44 1 230 1 159 1 15 1 4 1 87 4 258 2 129 1 167 1 207 1 208 2 349 2 108 1 69 1 150 2 291 2 149 1 42 1 251 1 31 2 55 2 182 1 
44 1 159 1 15 1 4 1 87 4 258 2 129 1 167 1 207 1 208 2 349 2 108 1 69 1 150 2 291 2 149 1 42 1 251 1 31 2 55 2 182 1 
44 1 201 1 258 2 102 1 129 1 346 1 52 1 208 1 349 1 209 1 108 1 11 1 266 1 213 1 15 1 114 1 87 2 245 1 363 1 335 1 336 1 366 1 66 1 290 1 71 1 368 1 42 1 182 1 
157 1 44 1 201 1 316 1 258 2 102 1 145 1 129 1 346 1 208 1 349 1 209 1 108 1 11 1 266 1 15 1 114 1 87 2 245 1 335 1 336 1 366 1 66 1 290 1 71 1 368 1 42 1 182 1 
44 1 159 1 4 1 258 2 129 1 167 1 208 2 207 1 349 2 108 1 149 1 150 2 31 2 55 2 56 1 15 1 87 4 291 2 69 1 42 1 251 1 182 1 
44 1 201 1 159 1 187 1 4 1 258 2 102 1 129 1 167 1 52 1 207 1 208 2 349 2 209 1 108 1 150 2 149 1 266 1 31 2 55 2 213 1 15 1 114 1 87 4 245 1 363 1 335 1 336 1 366 1 290 1 69 1 291 2 368 1 249 1 42 1 251 1 182 1 
44 1 201 1 159 1 127 1 4 1 258 2 129 1 165 1 167 1 207 1 208 2 349 1 108 1 150 1 149 1 31 1 55 1 56 1 175 1 243 1 84 1 15 1 177 1 87 3 290 1 291 1 42 1 251 1 182 1 
44 2 231 1 159 3 75 1 4 3 258 4 343 1 129 2 146 2 233 1 167 3 78 1 208 9 207 3 80 1 349 10 108 2 109 2 149 3 150 6 29 2 176 1 62 1 87 19 218 1 69 3 251 3 43 1 122 1 182 2 
44 3 231 1 159 3 75 2 4 2 258 6 343 1 129 3 146 4 233 2 167 3 208 14 207 2 349 12 80 2 108 3 109 1 150 4 149 3 29 2 304 1 355 1 211 1 215 2 358 1 14 1 86 1 62 1 87 26 218 2 69 2 251 2 43 1 182 3 
228 1 44 3 231 1 159 4 75 2 4 5 322 1 258 6 343 1 162 1 129 3 146 4 233 1 167 5 78 1 300 1 208 20 207 4 80 3 349 21 108 3 109 1 149 4 150 8 30 1 29 4 304 1 355 1 211 1 215 1 358 1 14 1 361 1 86 1 62 1 87 41 218 3 69 4 140 1 251 4 43 1 122 1 182 3 
228 1 44 4 231 1 159 4 75 2 4 4 322 1 258 8 343 1 162 1 129 4 146 4 233 1 167 5 78 1 300 1 208 20 207 3 80 3 349 18 108 4 109 1 149 4 150 7 30 1 29 4 304 1 355 1 211 1 215 2 358 1 14 1 361 1 86 1 62 1 87 38 218 3 69 4 140 1 251 3 43 1 122 1 182 4 
228 1 44 2 231 1 159 7 75 1 4 8 322 1 258 4 343 1 162 1 129 2 146 4 233 1 167 8 280 2 78 2 208 27 207 7 80 2 349 25 108 2 109 1 149 7 150 14 30 1 29 4 304 1 355 1 211 1 215 1 358 1 14 1 361 1 86 1 62 1 87 52 218 4 69 7 140 1 251 7 43 1 182 2 
188 1 235 1 341 1 262 1 83 1 232 1 79 1 68 1 120 1 324 1 
296 1 202 1 
235 1 83 1 232 1 79 1 119 1 277 1 120 1 103 1 324 1 
265 1 73 1 
236 1 48 1 250 1 
341 1 112 1 74 1 232 1 83 1 342 1 203 1 5 1 178 2 324 1 188 1 235 1 79 1 68 1 171 1 353 1 120 1 227 1 
341 1 112 1 74 1 232 1 83 1 342 1 203 1 5 1 178 2 324 1 188 1 235 1 79 1 68 1 171 1 353 1 120 1 227 1 
341 1 112 1 74 1 232 1 83 1 342 1 203 1 5 1 178 2 324 1 188 1 235 1 79 1 68 1 171 1 353 1 120 1 227 1 
48 1 265 1 73 1 
48 1 265 1 73 1 
236 1 250 1 
236 1 48 1 250 1 
58 1 110 1 
201 2 296 1 202 1 74 1 232 1 203 1 5 1 101 1 324 1 130 1 165 2 235 1 346 1 79 1 110 1 133 1 112 1 58 1 59 1 83 1 243 2 177 2 310 1 178 1 290 2 370 1 120 1 
123 1 44 1 201 2 258 2 102 1 129 1 165 2 208 1 349 1 209 2 108 1 11 1 56 1 15 1 114 1 87 2 245 1 288 1 39 1 335 2 336 1 246 1 248 1 219 2 290 2 118 1 368 2 71 1 42 1 372 1 182 1 
199 1 158 1 45 1 60 1 142 1 187 1 114 1 245 1 259 1 163 1 335 2 77 1 239 1 209 2 368 2 210 1 329 1 226 1 174 2 
199 1 158 1 45 1 60 1 142 1 114 1 272 1 259 1 245 1 163 1 335 1 77 1 239 1 209 1 368 1 329 1 174 2 
60 1 47 1 319 1 114 1 245 1 102 1 335 1 336 1 299 1 66 1 40 1 209 1 368 1 226 1 
199 1 158 1 45 1 60 1 142 1 114 1 259 1 245 1 163 1 335 1 77 1 239 1 209 1 368 1 210 1 329 1 226 1 174 2 
212 1 
183 1 90 1 125 1 19 1 353 1 25 1 26 1 
125 1 74 1 143 1 5 1 26 1 25 1 351 1 353 2 32 1 305 1 307 1 194 1 273 1 64 1 337 1 367 1 180 1 
143 1 25 1 102 1 164 1 238 1 351 1 209 1 303 1 305 1 307 1 270 1 114 2 362 1 245 1 335 1 364 2 336 3 247 1 156 1 366 1 66 1 337 1 70 1 368 1 276 1 
125 2 159 2 46 1 74 1 4 2 257 1 5 1 143 2 204 1 25 8 26 5 164 1 167 2 207 2 351 1 80 1 149 2 283 5 29 1 353 5 355 1 211 1 305 2 268 1 358 1 14 1 307 2 86 1 273 6 64 3 218 1 337 2 197 5 180 1 222 2 
228 1 229 1 201 1 74 1 99 1 4 1 257 1 322 1 143 1 5 1 26 2 25 2 165 1 167 2 107 1 330 1 267 1 305 1 113 1 84 1 243 1 307 1 177 1 337 1 290 1 222 2 140 1 278 1 
125 1 305 1 307 1 143 1 26 1 25 1 90 1 337 1 19 1 353 1 
159 2 4 2 257 1 63 1 26 5 273 10 25 5 64 5 167 2 197 5 207 2 149 2 222 2 283 5 353 5 
125 1 74 1 351 1 353 1 5 1 180 1 
198 2 46 2 74 3 143 1 5 3 25 2 26 2 102 1 164 2 261 1 234 1 299 1 281 1 351 4 209 4 54 1 305 2 307 2 114 1 271 1 245 1 335 4 336 1 337 2 66 2 40 1 368 4 180 2 294 1 
44 1 201 3 258 2 102 1 129 1 165 2 346 1 52 1 326 1 349 1 209 1 108 1 11 1 266 1 267 1 213 1 243 2 84 2 15 1 114 1 87 1 177 2 245 1 363 1 335 1 336 1 366 1 66 1 290 3 368 1 42 1 182 1 
125 2 305 1 46 1 307 1 361 1 143 1 273 4 26 2 25 1 64 2 164 1 337 1 197 2 283 2 353 4 
116 1 79 1 120 1 
116 1 79 1 120 1 
116 1 79 1 120 1 
79 1 120 1 13 1 
58 1 79 1 68 1 72 1 120 1 
79 1 120 1 13 1 
79 1 120 1 13 1 
79 1 120 1 
235 1 83 1 
228 2 44 2 4 3 322 2 258 4 162 1 129 2 167 3 208 9 349 8 107 1 108 2 150 7 30 1 215 1 361 1 87 17 69 4 140 2 251 3 182 2 
183 1 228 1 4 1 361 1 322 1 87 5 162 1 167 1 208 3 349 2 69 2 150 2 30 1 140 1 
44 1 159 1 4 1 87 4 258 2 129 1 50 1 167 1 207 1 208 2 349 2 108 1 69 1 150 2 149 1 251 1 182 1 
159 1 4 1 87 7 218 1 167 1 78 1 207 1 208 3 80 1 349 4 69 1 149 1 150 2 29 2 251 1 
228 2 44 1 159 2 4 5 322 2 258 2 162 1 129 1 167 5 280 1 78 1 207 2 208 13 349 12 107 1 108 1 149 2 150 7 30 1 29 2 215 1 361 1 87 25 218 2 38 1 69 5 140 2 251 2 182 1 
349 1 87 1 29 1 
208 1 87 1 218 1 
44 1 159 1 4 1 87 6 258 2 63 1 129 1 50 1 167 1 208 3 207 1 349 3 108 1 149 1 150 3 69 2 251 1 182 1 
44 1 159 2 4 2 258 2 343 1 129 1 167 2 208 6 207 2 349 6 80 1 108 1 149 2 150 2 29 1 355 1 211 1 358 1 14 1 86 1 87 12 218 1 69 1 251 1 182 1 
228 1 4 1 322 1 87 6 167 1 208 3 349 3 69 1 150 2 140 1 251 1 
228 1 44 1 215 1 87 3 258 2 162 1 129 1 208 1 339 1 349 2 108 1 150 2 69 1 140 1 30 1 251 1 182 1 
44 1 228 2 4 2 87 10 322 1 258 2 343 1 129 1 167 2 208 5 349 5 108 1 107 1 69 3 150 5 140 2 251 2 182 1 
44 1 159 1 87 2 343 1 258 2 129 1 167 1 208 2 108 1 150 1 251 1 182 1 
44 1 159 1 4 1 87 4 343 1 258 2 129 1 167 1 207 1 208 2 349 2 108 1 69 1 150 2 149 1 251 1 182 1 
44 3 228 1 215 1 87 3 343 1 258 6 129 3 208 1 339 1 349 2 108 3 69 1 150 2 140 1 251 1 122 1 182 3 
228 2 44 4 159 2 4 5 322 2 258 8 343 1 162 1 260 1 129 4 50 1 167 5 208 16 207 2 349 15 80 1 107 1 108 4 149 2 150 9 30 1 29 3 328 1 57 1 215 1 361 1 87 31 218 3 69 5 140 2 251 4 122 1 182 4 
44 1 228 2 4 3 322 2 258 2 343 1 162 1 129 1 167 3 208 8 349 7 80 1 107 1 108 1 150 5 29 1 30 1 211 1 361 1 87 15 218 1 69 4 140 2 251 1 182 1 
228 2 44 2 159 1 4 3 322 2 343 1 258 4 162 1 129 2 50 1 167 4 78 1 208 10 349 8 80 1 107 1 108 2 149 1 150 6 30 1 29 2 211 1 361 1 87 18 218 1 69 4 140 2 251 2 182 2 
228 2 44 3 159 2 4 5 322 2 258 6 343 1 162 1 129 3 50 1 167 5 208 13 207 2 349 13 80 1 107 1 108 3 149 2 150 7 30 1 29 1 355 1 211 1 215 1 358 1 14 1 361 1 86 1 87 26 218 1 69 5 140 2 251 2 182 3 
228 2 44 3 159 2 4 4 322 2 258 6 343 1 162 1 129 3 50 1 167 5 208 14 207 1 349 10 80 1 107 1 108 3 149 2 150 9 30 1 29 1 355 1 211 1 215 1 358 1 14 1 361 1 86 1 87 24 218 1 69 5 140 2 251 4 182 3 
44 1 228 2 4 3 322 2 258 2 343 1 162 1 129 1 167 3 208 8 349 7 80 1 107 1 108 1 150 5 29 1 30 1 211 1 361 1 87 15 218 1 69 4 140 2 251 1 182 1 
44 1 159 2 4 2 258 2 343 1 129 1 167 2 208 6 207 2 349 6 80 1 108 1 149 2 150 2 29 1 355 1 211 1 358 1 14 1 86 1 87 12 218 1 69 1 251 1 182 1 
228 2 44 4 159 2 4 4 322 2 258 8 343 1 162 1 129 4 50 1 167 5 208 14 207 1 349 11 80 1 107 1 108 4 149 2 150 7 30 1 29 1 355 1 211 1 215 2 358 1 14 1 361 1 86 1 87 25 218 1 69 5 140 2 251 2 182 4 
44 4 159 3 4 2 343 1 258 8 129 4 167 3 208 9 207 2 349 7 80 1 108 4 149 3 150 6 29 1 355 1 211 1 215 2 358 1 14 1 86 1 87 16 218 1 69 3 251 3 182 4 122 1 
228 3 4 1 87 7 322 1 162 2 167 1 208 3 349 4 69 3 150 6 30 1 140 3 251 3 
228 2 44 4 159 2 4 4 322 2 343 1 258 8 162 1 129 4 167 5 208 14 207 1 349 11 80 1 107 1 108 4 149 2 150 7 30 1 29 1 355 1 211 1 215 2 358 1 14 1 361 1 86 1 87 25 218 1 69 5 140 2 251 2 182 4 122 1 
365 1 346 1 201 1 214 1 348 1 290 1 165 1 
201 1 214 1 318 1 308 1 344 1 89 1 165 1 365 1 346 1 348 1 290 1 151 1 
183 1 335 1 336 1 299 1 66 1 40 1 114 1 209 1 368 1 245 1 102 1 
201 2 213 1 243 1 114 1 216 1 177 1 245 1 102 1 165 1 335 1 336 1 346 1 366 1 66 1 290 2 209 1 368 1 266 1 
198 1 201 2 213 1 243 1 160 1 114 1 216 1 177 2 6 1 245 1 102 2 165 2 335 1 336 3 346 1 366 2 290 2 209 1 340 1 368 1 371 1 278 1 266 1 
198 1 201 2 160 1 320 1 6 1 145 1 102 2 165 2 346 1 209 2 266 1 243 1 216 1 114 1 177 2 245 1 335 2 336 3 366 2 290 2 368 2 340 1 278 1 371 1 
364 1 335 1 198 1 336 1 74 1 351 1 100 1 209 1 70 1 368 1 5 1 
364 1 335 1 198 1 336 1 74 1 351 1 270 1 209 1 70 1 368 1 5 1 
335 1 51 1 114 1 209 1 368 1 245 1 
34 1 317 1 187 1 114 3 245 2 102 2 166 1 335 6 51 1 336 3 138 1 366 1 66 2 219 1 209 7 148 1 368 7 276 1 372 1 354 1 329 1 
44 2 228 2 187 1 4 3 322 2 323 1 102 1 52 1 107 1 108 2 150 5 56 1 243 1 15 2 114 1 245 1 335 1 336 1 290 2 69 4 292 1 249 1 251 1 123 1 201 2 258 4 162 1 129 2 165 1 167 3 346 3 208 7 349 6 209 1 30 1 266 1 213 1 216 1 361 1 177 1 87 13 363 1 366 1 368 1 42 2 140 2 278 1 182 2 
305 1 59 1 74 1 307 1 270 1 5 1 143 1 364 1 335 1 336 1 238 1 156 1 337 1 66 1 281 1 351 1 209 1 70 1 303 1 368 1 
114 2 245 1 102 1 335 1 51 1 336 1 247 1 366 1 209 1 70 1 368 1 276 1 
187 1 320 1 114 1 245 1 217 1 102 1 335 4 336 1 299 1 66 1 40 1 209 4 368 4 
198 1 255 1 34 1 85 1 114 2 245 1 102 1 335 2 336 1 366 1 302 1 209 2 368 2 354 1 
335 1 239 1 45 1 66 1 114 1 209 1 368 1 245 1 163 1 174 1 
187 1 114 1 245 1 102 1 335 2 336 1 209 2 368 2 118 1 372 1 329 1 
198 1 187 1 317 1 114 2 245 2 217 1 102 2 335 4 166 1 336 3 299 1 66 1 40 1 209 5 368 5 372 1 
198 1 187 1 114 2 244 1 245 2 217 1 102 2 335 4 166 1 336 3 299 1 66 1 40 1 209 5 368 5 372 1 
201 2 243 1 114 1 216 1 177 1 245 1 102 1 145 1 165 1 335 1 336 1 346 1 366 1 66 1 290 2 209 1 368 1 266 1 
198 1 34 1 114 2 245 1 102 1 335 1 336 1 366 1 209 1 148 1 368 1 276 1 354 1 
23 1 346 1 220 1 170 1 205 1 
23 2 125 1 295 1 59 1 74 2 160 1 6 1 5 2 205 2 345 1 346 1 67 1 117 1 220 1 41 1 170 2 353 1 240 1 278 1 
23 1 246 1 201 1 248 1 290 1 220 1 288 1 205 1 165 1 
295 1 220 1 41 1 
183 1 152 1 97 1 36 1 
242 1 152 1 97 1 359 1 36 1 49 1 154 1 
190 1 179 1 49 1 
242 1 200 2 152 1 97 1 359 3 193 1 36 1 334 1 49 3 154 1 350 1 28 1 
242 1 152 1 97 1 359 2 36 1 264 1 196 1 49 2 154 1 
242 1 199 1 105 1 97 1 359 1 350 1 163 1 356 1 49 1 174 1 154 1 
242 1 97 1 359 1 36 1 350 1 49 1 154 1 
242 1 152 1 359 1 36 2 350 1 49 1 154 1 
242 2 97 1 2 1 134 1 359 2 36 1 49 2 154 2 350 1 95 1 
242 1 152 1 97 2 359 3 36 1 128 1 49 3 88 1 154 1 105 1 350 1 264 2 223 1 
242 1 199 1 152 1 97 1 158 1 45 1 359 2 36 1 49 2 163 1 154 1 350 1 264 1 12 1 174 2 
242 2 152 1 97 2 359 4 36 1 196 1 49 4 154 2 105 1 350 1 264 2 223 1 121 1 
242 1 152 1 97 1 359 1 36 1 350 1 49 1 154 1 
242 1 200 1 152 2 97 3 359 4 36 2 334 1 195 1 49 4 154 1 105 1 264 2 28 1 223 1 
242 1 152 1 97 1 306 1 359 2 36 1 360 1 49 2 154 1 350 1 264 1 313 1 
242 1 200 2 152 1 97 1 359 3 36 1 334 2 49 3 154 1 18 1 350 1 28 1 
325 1 97 2 327 1 373 2 
242 1 359 1 350 1 144 1 49 1 154 1 
242 1 152 1 97 1 359 2 36 1 350 1 264 1 88 1 49 2 154 1 
93 1 
242 1 152 1 97 1 359 1 36 1 350 1 49 1 154 1 
242 1 200 1 152 1 97 1 359 3 36 1 49 3 88 1 154 1 350 1 264 1 
105 1 97 1 195 1 223 1 
97 1 36 1 

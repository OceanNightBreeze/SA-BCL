#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 309 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 309 214 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 2 0 1 273 1 104 1 105 2 148 6 250 2 6 1 199 1 256 2 131 4 204 1 376 9 47 2 176 2 78 1 355 2 96 1 265 1 310 1 159 1 358 9 336 3 267 1 24 5 286 1 314 1 167 1 
62 2 0 1 273 1 104 1 105 2 148 6 250 2 6 1 199 1 256 2 131 4 204 1 376 9 47 2 176 2 78 1 355 2 96 1 265 1 310 1 159 1 358 9 336 3 267 1 24 5 286 1 314 1 167 1 
62 2 0 1 273 1 104 1 105 2 148 7 250 2 6 1 199 1 256 2 131 5 204 1 376 10 47 2 176 2 78 1 355 2 96 1 265 1 310 1 159 1 358 10 336 4 267 1 24 6 286 1 314 1 167 1 
62 2 0 1 104 1 105 2 148 4 250 1 6 1 199 1 256 2 131 3 204 1 376 7 47 2 176 2 78 1 355 2 96 1 265 1 310 1 159 1 358 7 336 2 267 1 24 4 286 1 314 1 167 1 
62 1 78 1 273 1 355 1 104 1 148 3 358 4 336 1 250 2 267 1 24 3 256 1 167 1 131 2 204 1 376 4 176 1 47 1 
0 1 194 1 355 1 104 1 105 1 81 1 358 2 24 1 267 1 253 1 314 1 256 1 204 1 376 2 176 1 47 1 
104 1 96 1 105 1 148 1 358 3 336 1 267 1 24 2 131 1 204 1 376 3 176 2 47 2 
62 1 273 1 104 1 105 1 148 7 250 2 199 1 256 1 131 4 204 1 376 9 47 2 176 2 78 1 355 1 96 1 358 9 336 3 267 1 24 5 286 1 167 1 59 1 288 1 
62 1 273 1 104 1 105 1 148 7 250 2 199 1 256 1 131 4 204 1 376 9 47 2 176 2 78 1 355 1 96 1 358 9 336 3 267 1 24 5 286 1 167 1 59 1 288 1 
368 1 39 1 162 1 
368 1 51 2 373 1 
252 1 112 2 35 2 3 1 234 2 328 2 82 2 89 2 
349 1 316 2 126 2 35 2 3 1 149 1 88 1 68 1 297 1 89 3 276 2 252 1 299 1 202 2 174 1 72 1 203 1 234 2 75 1 328 3 259 1 91 1 46 1 48 1 49 1 112 2 18 1 264 1 19 1 263 1 82 2 160 1 213 1 23 1 285 2 56 1 58 1 
252 1 101 1 112 1 50 1 35 1 234 1 328 1 82 1 21 1 89 1 
112 1 352 1 136 1 158 1 37 1 21 1 162 1 89 1 84 1 70 1 368 1 328 1 76 1 109 1 
112 1 35 1 136 2 352 1 37 2 82 1 21 1 162 1 89 1 84 1 70 1 368 1 234 1 328 1 76 1 
117 1 172 1 136 1 37 1 139 1 
117 1 368 1 172 1 209 1 136 2 37 2 162 1 83 1 
117 1 136 1 37 1 
307 1 50 1 112 1 35 1 136 1 37 1 82 1 21 1 89 1 252 1 101 1 172 1 234 1 328 1 
368 1 
117 1 368 1 172 1 209 1 136 2 67 1 37 2 162 1 
1 1 333 2 209 1 136 5 66 1 37 5 251 1 162 1 117 2 368 1 172 2 215 2 106 1 301 1 341 1 270 1 343 1 258 2 153 1 
347 1 49 1 112 1 35 1 263 1 82 1 88 1 213 1 359 1 285 1 297 1 89 2 276 1 130 1 202 1 174 1 72 1 58 1 328 2 259 1 
3 1 39 1 
112 2 35 1 3 2 223 1 196 1 82 1 89 2 234 1 328 2 
347 1 102 1 128 1 
49 1 3 1 263 1 88 1 213 1 285 1 297 1 89 1 276 1 202 1 174 1 144 1 72 1 58 1 328 1 259 1 
112 5 16 1 35 4 3 1 196 1 82 4 359 1 89 5 130 2 30 1 175 1 234 1 328 5 109 1 
101 1 112 2 35 2 328 2 82 2 21 1 22 1 89 2 
130 1 112 3 35 3 3 1 234 1 328 3 82 3 89 3 
101 1 112 1 35 1 328 1 82 1 21 1 89 1 
112 1 35 1 223 1 234 1 328 1 196 1 82 1 21 1 89 1 
349 1 316 2 126 1 35 3 3 1 65 1 352 1 196 1 37 1 149 1 88 1 297 1 89 4 276 1 70 1 252 1 299 1 130 1 202 1 277 1 174 1 72 1 203 1 234 2 328 4 259 1 76 1 91 1 49 1 112 3 18 1 264 1 19 1 263 1 136 1 82 3 160 1 21 1 213 1 359 1 285 1 84 1 56 1 58 1 
130 1 112 2 35 1 3 1 175 1 328 2 82 1 109 1 89 2 
112 3 35 3 136 1 65 1 352 1 196 1 37 1 82 3 21 1 359 1 84 1 89 3 70 1 368 1 130 2 234 1 328 3 76 1 329 1 
347 1 112 2 35 2 196 1 82 2 89 2 130 1 102 1 234 1 328 2 
49 1 3 1 263 1 88 1 213 1 285 1 297 1 89 1 276 1 202 1 174 1 72 1 58 1 328 1 259 1 
146 1 3 1 263 1 88 1 213 1 285 1 297 1 89 1 276 1 232 1 202 1 72 1 58 1 328 1 259 1 
348 1 349 1 347 2 169 1 316 2 126 4 320 1 149 1 68 2 129 1 128 2 369 1 327 1 132 1 203 1 91 1 262 1 18 1 19 1 264 2 338 1 102 2 342 1 120 1 
112 1 35 1 352 1 328 1 82 1 21 1 22 1 89 1 
107 1 321 1 
107 1 321 1 
15 1 374 1 
15 1 374 1 
15 1 374 1 
370 1 107 1 321 1 
370 1 107 1 321 1 
219 1 107 1 321 1 
15 1 351 1 107 2 374 1 321 2 140 1 
370 1 107 1 321 1 
208 1 107 1 321 1 
208 1 107 1 321 1 
208 1 107 1 321 1 
219 1 35 2 3 1 36 1 222 1 37 1 321 1 89 2 323 1 9 1 107 1 257 1 328 2 12 1 180 1 112 2 17 1 136 1 334 1 356 1 82 2 163 1 244 1 191 1 
179 1 237 1 180 1 351 1 136 2 317 2 36 2 356 2 37 2 212 1 321 2 368 1 85 1 268 1 9 3 107 2 12 2 190 1 191 2 
62 1 256 1 355 1 
256 1 355 1 81 1 
62 2 71 1 355 3 188 1 81 1 261 1 
62 1 355 2 188 1 81 1 261 1 14 1 
62 1 355 2 188 1 81 1 261 2 
1 1 169 1 320 1 38 1 37 5 323 1 324 1 368 2 172 4 106 2 73 1 327 1 373 1 258 1 303 1 93 2 154 1 333 1 51 3 209 1 136 5 182 2 183 1 162 1 117 1 215 1 163 1 164 1 342 1 270 3 244 1 217 2 
1 1 169 3 274 1 320 3 37 9 249 1 324 3 368 5 254 5 172 7 106 6 43 1 73 2 327 3 373 3 258 2 153 1 93 6 260 1 333 2 51 9 209 1 136 9 182 6 183 2 139 5 162 1 117 6 163 4 215 2 164 1 242 1 342 3 270 8 292 1 
169 1 320 1 38 1 37 3 324 1 368 3 172 2 106 2 73 1 327 1 373 2 258 1 153 1 93 2 154 1 333 1 51 4 136 3 183 1 182 2 162 1 215 1 163 1 342 1 270 3 217 1 
169 2 320 2 37 4 38 1 324 2 368 4 172 3 106 4 43 1 73 1 327 2 373 3 258 1 153 1 93 4 154 1 333 1 51 7 136 4 182 4 183 1 162 1 215 1 163 2 242 1 342 2 270 5 292 1 217 2 
363 1 39 1 297 1 
272 1 297 1 
326 1 
58 1 88 1 297 1 
4 1 297 1 
88 1 297 1 
363 2 58 1 88 1 45 1 297 3 379 1 
262 2 126 7 264 3 113 1 156 1 20 1 283 1 210 1 378 2 365 1 68 4 41 1 369 3 342 1 327 1 304 1 380 1 
262 2 126 7 264 3 113 1 156 1 20 1 283 1 210 1 378 2 365 1 68 4 41 1 369 3 342 1 327 1 304 1 380 1 
262 2 126 7 264 3 113 1 64 1 156 1 283 1 20 1 210 1 378 2 365 1 68 4 41 1 369 3 342 1 327 1 304 1 380 1 
350 3 169 3 316 2 126 31 320 3 149 1 365 2 68 16 41 1 366 4 324 3 7 1 369 10 327 4 203 1 304 5 110 1 262 5 95 1 18 1 113 2 19 1 264 15 156 2 283 1 20 1 210 2 378 3 161 1 54 1 269 1 342 4 380 1 291 1 
316 4 126 9 149 2 365 1 68 5 41 1 233 1 369 4 327 1 74 1 203 2 304 1 262 3 95 1 18 2 19 2 264 4 113 1 156 1 20 1 283 1 210 1 378 2 342 1 
62 1 32 1 34 1 104 1 318 1 105 1 197 1 148 1 276 1 71 1 202 1 256 1 259 1 204 1 134 1 376 2 47 1 176 1 355 2 263 1 81 1 358 2 285 1 24 1 267 1 185 1 189 1 243 1 344 1 103 1 
62 1 104 1 318 1 105 1 197 1 148 2 276 1 71 1 202 1 278 1 256 1 133 1 259 1 204 1 134 1 376 3 47 1 176 1 355 2 263 1 81 1 358 3 285 1 24 1 185 1 189 1 315 1 243 1 344 1 103 1 
62 1 104 1 318 1 105 1 197 1 148 2 276 1 71 1 202 1 256 1 133 1 259 1 204 1 376 2 355 2 263 1 81 1 358 2 285 1 24 1 185 1 189 1 315 1 344 1 103 1 
318 2 105 2 88 1 230 1 297 1 276 1 202 1 278 1 10 1 72 1 259 1 376 1 375 1 47 1 176 1 263 1 282 1 184 1 358 1 285 1 165 1 103 2 344 2 
62 1 32 1 318 1 105 1 197 1 276 1 71 1 202 1 256 1 259 1 134 1 376 1 47 1 176 1 355 2 263 1 81 1 358 1 285 1 267 1 185 1 189 1 315 1 243 1 344 1 103 1 
87 1 
294 1 1 1 352 1 297 1 70 1 151 2 202 2 106 2 73 1 72 2 258 1 259 1 76 1 109 1 354 1 112 1 209 3 263 1 157 2 158 1 357 1 21 1 162 1 84 1 116 2 117 6 360 2 215 1 361 1 270 2 123 1 218 2 86 1 37 5 227 1 88 1 276 2 89 1 367 4 368 2 373 2 328 1 375 1 331 2 333 1 51 2 282 1 136 5 97 1 53 1 285 2 142 1 287 1 289 2 60 1 
294 1 352 1 37 3 67 1 89 1 70 1 367 2 328 1 76 1 109 1 112 1 209 1 136 3 158 1 357 1 97 1 21 1 84 1 117 2 142 1 289 1 123 1 
294 1 352 1 37 3 67 1 89 1 70 1 367 3 368 1 328 1 76 1 109 1 112 1 209 1 136 3 158 1 157 1 357 1 97 1 21 1 162 1 84 1 117 1 142 1 123 1 
294 1 352 1 67 1 37 3 89 1 70 1 367 3 368 1 328 1 76 1 109 1 112 1 209 1 136 3 158 1 157 1 357 1 97 1 21 1 162 1 84 1 117 2 360 1 142 1 289 1 123 1 
294 1 1 1 352 1 67 1 70 1 252 1 106 1 108 1 258 1 76 1 109 1 13 1 307 1 112 2 209 1 158 1 357 1 82 1 21 2 162 1 84 1 117 3 360 2 215 1 270 1 123 1 86 1 35 1 170 1 37 3 89 2 367 2 368 1 234 1 328 2 330 1 333 1 50 1 136 3 97 1 101 1 142 1 289 2 
294 1 1 1 352 1 70 1 151 2 106 1 258 1 76 1 109 1 112 1 209 2 158 1 157 2 357 1 21 1 162 1 84 1 116 2 117 4 215 1 360 2 270 1 123 1 86 1 218 2 37 4 89 1 367 4 368 2 373 2 328 1 331 2 333 1 51 2 136 4 97 1 53 1 142 1 60 1 289 2 
294 1 86 1 1 1 35 1 352 1 37 2 89 2 252 1 70 1 367 2 368 1 106 1 234 1 258 1 328 2 76 1 109 1 13 1 330 1 307 1 333 1 50 1 112 2 136 2 158 1 357 1 82 1 97 1 21 2 162 1 84 1 101 1 215 1 142 1 270 1 123 1 
294 1 86 1 1 1 35 1 352 1 37 2 89 2 252 1 70 1 367 2 368 1 106 1 234 1 258 1 328 2 76 1 109 1 13 1 330 1 307 1 333 1 50 1 112 2 136 2 158 1 357 1 82 1 97 1 21 2 162 1 84 1 101 1 215 1 142 1 270 1 123 1 
294 1 192 1 1 1 352 1 37 4 298 2 89 1 70 1 367 4 368 1 151 2 8 1 106 1 255 2 258 1 328 1 76 1 109 1 177 1 333 1 112 1 209 2 51 2 136 4 157 2 158 1 357 1 97 1 21 1 162 1 84 1 117 4 116 2 25 1 360 2 215 1 142 1 270 1 289 2 60 1 123 1 
294 1 1 1 352 1 70 1 252 1 106 1 258 1 76 1 109 1 13 1 307 1 112 2 157 1 158 1 357 1 82 1 21 2 162 1 84 1 117 1 360 1 215 1 270 1 123 1 86 1 35 1 170 1 37 2 89 2 367 3 368 1 234 1 328 2 330 1 333 1 50 1 136 2 97 1 101 1 142 1 289 1 
294 1 1 1 352 1 70 1 252 1 106 1 258 1 76 1 109 1 13 1 307 1 112 2 157 1 158 1 357 1 82 1 21 2 162 1 84 1 117 1 360 1 215 1 270 1 123 1 86 1 35 1 170 1 37 2 89 2 367 3 368 1 234 1 328 2 330 1 333 1 50 1 136 2 97 1 101 1 142 1 289 1 
294 1 1 1 352 1 37 4 298 2 89 1 70 1 367 4 368 1 151 2 106 1 255 2 258 1 328 1 76 1 109 1 333 1 112 1 209 2 51 2 136 4 157 2 158 1 357 1 97 1 21 1 53 1 162 1 84 1 117 4 116 2 25 1 360 2 215 1 142 1 270 1 289 2 60 1 123 1 
347 1 349 1 316 2 126 6 3 2 149 1 39 1 129 1 68 3 128 1 41 1 369 2 327 1 203 1 91 1 262 2 18 1 19 1 113 1 264 3 156 1 283 1 20 1 378 1 102 1 342 1 
349 1 347 11 33 1 350 3 169 2 2 1 316 4 126 14 3 1 224 1 320 1 149 2 128 11 68 8 366 3 324 2 299 1 369 2 327 2 203 2 304 1 91 2 48 1 262 1 18 2 264 6 19 2 339 1 54 1 102 4 119 1 269 1 342 1 
349 1 33 1 316 2 35 1 126 2 3 1 88 1 149 1 68 1 297 1 276 1 89 2 171 1 130 1 299 1 202 1 174 1 72 1 203 1 328 2 259 1 91 1 155 1 48 1 49 1 112 1 18 1 263 1 19 1 264 1 82 1 213 1 285 1 340 1 359 1 102 1 144 1 58 1 
349 3 347 7 3 2 195 2 149 3 68 10 297 2 299 1 202 3 72 1 203 3 259 2 304 4 262 4 112 1 18 3 113 1 264 10 19 3 263 2 156 1 114 1 20 1 82 1 160 2 213 2 359 1 26 2 315 1 33 1 169 2 316 6 221 1 35 1 126 20 320 2 88 2 128 7 41 1 276 3 89 3 324 2 130 1 369 8 174 2 327 3 328 3 91 3 48 1 49 2 52 1 283 1 378 1 285 3 241 2 102 7 342 3 58 2 290 2 
349 2 34 1 316 4 35 1 126 2 296 1 149 2 88 2 129 1 68 1 297 3 231 1 89 1 276 7 130 1 299 1 202 8 72 2 203 2 328 1 75 2 259 2 91 2 375 1 48 1 280 1 112 1 18 2 263 2 19 2 264 1 282 1 238 1 82 1 266 1 285 8 118 1 57 1 315 1 
347 1 349 1 33 1 169 1 316 2 35 1 126 3 196 1 320 1 149 1 128 1 68 1 89 1 324 1 369 1 327 1 234 1 203 1 328 1 91 1 262 1 112 1 18 1 19 1 264 2 82 1 99 1 102 1 342 1 
347 1 349 1 169 1 316 2 18 1 126 2 19 1 149 1 128 1 129 1 68 2 102 1 369 1 132 1 327 1 203 1 304 1 91 1 
262 1 347 1 349 1 348 1 316 2 18 1 126 2 19 1 264 2 320 1 149 1 128 1 129 1 102 1 369 1 342 1 203 1 91 1 
262 1 347 2 349 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 149 1 128 2 129 1 68 2 324 1 102 2 369 2 342 1 327 1 203 1 304 1 91 1 
347 1 349 1 169 1 316 2 18 1 126 2 19 1 149 1 128 1 68 2 102 1 369 1 57 1 132 1 327 1 203 1 304 1 91 1 
262 1 347 1 349 1 348 1 316 2 18 1 126 2 19 1 264 2 320 1 149 1 128 1 102 1 369 1 57 1 342 1 203 1 91 1 
262 1 347 2 349 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 149 1 128 2 68 2 324 1 102 2 369 2 57 1 342 1 327 1 203 1 304 1 91 1 
262 1 347 2 349 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 149 1 128 2 68 2 324 1 102 2 369 2 342 1 327 1 203 1 304 1 91 1 
349 1 316 2 126 2 3 1 88 1 149 1 68 1 297 1 276 1 89 1 299 1 202 1 174 1 72 1 203 1 328 1 259 1 91 1 48 1 49 1 18 1 263 1 19 1 264 1 160 1 213 1 285 1 58 1 
349 1 146 1 316 2 126 2 3 1 275 1 88 1 149 1 68 1 297 1 276 1 89 1 232 1 299 1 202 1 72 1 203 1 328 1 259 1 91 1 48 1 18 1 263 1 19 1 264 1 213 1 285 1 58 1 
262 1 347 2 349 1 33 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 149 1 128 2 68 2 324 1 102 2 369 2 342 1 327 1 203 1 304 1 91 1 
347 2 349 1 169 1 34 1 316 2 126 4 195 1 320 1 88 1 149 1 128 2 68 2 297 1 276 1 89 1 324 1 202 1 369 2 174 1 327 1 203 1 328 1 259 1 304 1 91 1 262 1 49 1 18 1 264 2 263 1 19 1 160 1 213 1 285 1 102 2 342 1 58 1 
349 1 347 1 33 1 169 1 316 2 35 1 126 3 320 1 196 1 226 1 149 1 68 2 128 1 89 1 324 1 369 1 327 1 234 1 203 1 328 1 304 1 91 1 112 1 18 1 264 1 19 1 82 1 102 1 342 1 
295 1 350 1 169 3 316 4 126 19 320 3 149 2 68 9 366 2 233 1 324 3 369 6 327 3 203 2 304 3 207 2 94 1 262 3 281 1 18 2 19 2 264 10 335 1 115 1 337 2 28 1 54 1 27 1 269 1 342 3 
295 2 350 2 169 3 316 6 126 26 320 2 149 3 68 14 366 2 69 1 233 1 324 3 369 4 327 3 203 3 304 2 207 1 262 2 281 1 95 2 18 3 264 12 19 3 135 1 335 1 337 4 28 1 27 2 54 2 166 1 342 2 362 1 271 1 245 1 
145 1 350 3 295 2 149 3 68 20 69 1 203 3 304 4 207 1 262 4 18 3 264 21 19 3 113 1 156 1 20 1 27 1 28 1 269 1 166 1 362 1 271 1 169 4 316 6 126 41 320 4 366 4 41 1 324 4 233 1 369 8 327 5 94 1 281 1 95 1 135 1 335 1 283 1 378 1 337 4 54 3 342 5 245 1 
145 1 295 2 350 3 169 4 316 8 126 38 320 3 149 4 68 20 41 1 69 1 366 4 233 1 324 4 369 7 327 5 203 4 304 3 207 1 94 1 262 4 281 1 95 2 18 4 113 1 135 1 19 4 264 18 156 1 335 1 283 1 20 1 378 1 337 4 28 1 54 3 27 1 166 1 269 1 342 4 362 1 271 1 245 1 
295 1 350 4 169 7 2 2 316 4 126 52 320 7 149 2 68 27 41 1 69 1 366 4 233 1 324 7 369 14 327 8 203 2 304 7 207 1 262 7 281 1 95 1 18 2 113 1 135 1 19 2 264 25 156 1 335 1 283 1 20 1 378 1 337 4 28 1 54 2 27 1 166 1 269 2 342 8 362 1 271 1 245 1 
85 1 351 1 36 1 107 1 356 1 321 1 12 1 305 1 190 1 191 1 
219 1 334 1 
279 1 325 1 178 1 36 1 107 1 356 1 321 1 12 1 191 1 
370 1 229 1 
208 1 140 1 61 1 
179 1 237 1 180 1 351 1 136 1 317 1 36 1 356 1 37 1 321 1 368 1 85 1 268 1 9 2 107 1 12 1 190 1 191 1 
179 1 237 1 180 1 351 1 136 1 317 1 36 1 356 1 37 1 321 1 368 1 85 1 268 1 9 2 107 1 12 1 190 1 191 1 
179 1 237 1 180 1 351 1 136 1 317 1 36 1 356 1 37 1 321 1 368 1 85 1 268 1 9 2 107 1 12 1 190 1 191 1 
370 1 140 1 229 1 
370 1 140 1 229 1 
208 1 61 1 
208 1 140 1 61 1 
17 1 257 1 
219 1 193 1 35 2 3 1 317 1 36 1 222 1 37 1 321 1 89 2 323 1 172 1 9 1 107 1 257 1 328 2 12 1 17 1 112 2 136 1 334 1 356 1 82 2 268 1 163 1 244 1 191 1 
349 1 33 1 316 2 126 2 296 1 247 1 88 1 149 1 68 1 297 1 89 2 276 2 299 1 201 1 202 2 203 1 328 2 75 2 259 1 91 1 48 1 308 1 112 2 79 1 18 1 263 1 19 1 264 1 238 1 285 2 29 1 
62 1 34 1 355 2 263 1 197 1 81 1 285 2 276 2 71 1 55 1 202 2 256 1 189 1 315 1 344 1 259 1 152 1 346 1 134 1 
62 1 355 2 263 1 319 1 197 1 81 1 285 1 276 1 71 1 202 1 256 1 189 1 315 1 344 1 259 1 346 1 134 1 
263 1 282 1 88 1 285 1 297 1 276 1 240 1 55 1 202 1 165 1 72 1 344 1 259 1 375 1 
62 1 355 2 263 1 197 1 81 1 285 1 276 1 71 1 55 1 202 1 256 1 189 1 315 1 344 1 152 1 259 1 346 1 134 1 
181 1 
368 1 106 1 270 1 66 1 251 1 39 1 162 1 
86 1 1 1 218 1 37 1 368 2 106 1 373 1 258 1 331 1 333 1 51 1 209 1 136 1 162 1 117 1 215 1 270 1 
1 4 66 1 4 2 248 1 251 1 297 10 200 2 300 2 202 3 106 8 73 2 72 1 258 4 259 3 111 2 209 3 263 4 311 2 162 2 84 2 117 5 215 4 361 1 270 9 31 1 272 3 34 1 169 2 363 2 37 5 320 2 88 3 40 1 276 3 324 2 368 8 173 2 44 1 327 2 373 6 93 6 333 4 51 12 136 5 182 6 284 2 239 2 285 3 379 1 187 1 342 2 58 3 345 2 290 2 
1 2 350 1 169 2 37 1 320 2 322 1 366 1 69 1 324 2 300 1 200 2 368 5 106 5 73 1 327 2 258 2 373 3 93 5 333 2 209 1 51 6 136 1 135 1 182 5 162 2 117 1 100 1 54 1 215 2 361 1 166 1 342 2 270 8 362 1 245 1 
1 1 35 1 37 1 89 1 41 1 252 1 300 1 200 2 106 2 327 2 258 1 234 1 328 1 13 1 333 1 307 1 50 1 112 1 113 1 136 1 156 1 82 1 21 1 141 1 101 1 215 1 342 1 270 2 
1 1 333 1 66 1 251 1 162 1 368 1 215 1 106 1 270 1 258 1 
169 2 51 10 182 5 320 2 324 2 300 1 200 2 368 5 106 5 342 2 327 2 270 5 373 5 290 1 93 5 
117 1 368 1 209 1 136 1 37 1 162 1 
1 1 220 1 37 3 127 1 227 1 248 2 88 2 198 1 297 2 40 1 276 4 202 4 106 2 72 2 73 2 258 2 11 1 153 1 235 1 259 2 375 1 206 1 354 1 333 2 209 2 263 3 136 3 282 1 285 4 117 4 215 2 361 2 58 1 270 2 
349 1 316 2 126 1 35 2 3 1 88 1 149 1 297 1 276 1 89 3 252 1 299 1 202 1 174 1 72 1 203 1 234 2 328 3 259 1 91 1 49 1 112 2 18 1 264 1 19 1 263 1 82 2 160 1 213 1 285 1 56 1 58 1 
1 1 333 1 51 4 182 2 378 1 162 2 368 4 215 1 106 2 361 1 73 1 270 1 373 2 258 1 93 2 
36 1 137 1 356 1 
36 1 137 1 356 1 
85 1 364 1 257 1 36 1 356 1 
36 1 137 1 356 1 
36 1 356 1 77 1 
36 1 356 1 77 1 
36 1 356 1 77 1 
36 1 356 1 
107 1 321 1 
262 2 95 1 316 4 18 2 126 8 264 4 19 2 113 1 156 1 20 1 283 1 378 1 149 2 68 4 41 1 369 3 342 1 327 1 203 2 304 1 
262 2 126 6 264 3 113 1 156 1 20 1 283 1 378 1 39 1 68 3 41 1 369 2 342 1 327 1 
262 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 80 1 149 1 68 2 324 1 369 2 342 1 327 1 203 1 304 1 
262 1 350 1 169 1 126 7 264 4 320 1 68 3 366 2 324 1 54 1 369 2 269 1 342 1 327 1 304 1 
169 2 350 2 2 1 316 4 126 23 320 2 149 2 68 11 41 1 366 2 324 2 369 9 327 3 203 2 304 4 262 5 332 1 95 2 18 2 113 2 264 12 19 2 156 2 283 1 20 1 378 1 269 1 119 1 342 3 
126 1 264 1 366 1 
350 1 126 1 68 1 
262 2 169 1 18 1 316 2 126 6 19 1 264 3 320 1 80 1 149 1 68 3 324 1 369 3 342 1 327 1 203 1 290 1 304 1 
350 1 169 2 316 2 126 12 320 2 149 1 68 6 366 1 69 1 233 1 324 2 369 2 327 2 203 1 304 1 262 1 18 1 264 6 19 1 135 1 54 1 166 1 342 2 362 1 245 1 
262 1 126 6 264 3 113 1 156 1 68 3 41 1 369 2 342 1 327 1 304 1 
262 1 332 1 95 1 316 2 18 1 126 3 113 1 264 2 19 1 156 1 283 1 20 1 149 1 68 1 369 2 203 1 304 1 
262 3 18 1 316 2 126 10 19 1 113 2 264 5 156 2 149 1 141 1 68 5 41 1 233 1 369 5 342 2 327 2 203 1 304 2 
169 1 316 2 18 1 126 2 19 1 149 1 68 2 233 1 369 1 327 1 203 1 304 1 
262 1 169 1 316 2 18 1 126 4 264 2 19 1 320 1 149 1 68 2 233 1 324 1 369 2 342 1 327 1 203 1 304 1 
262 1 332 1 95 1 316 6 18 3 126 3 264 2 19 3 113 1 156 1 149 3 68 1 233 1 369 2 203 3 304 1 94 1 
350 3 169 3 316 10 126 34 320 3 149 5 68 16 41 2 366 4 233 1 324 3 7 1 369 12 327 5 203 5 304 5 110 1 94 1 262 7 332 1 95 2 18 5 113 3 264 18 19 5 156 3 283 1 20 1 80 1 378 1 54 1 269 1 342 5 291 1 
350 1 316 2 126 8 149 1 68 4 366 1 41 1 233 1 369 2 327 1 203 1 262 2 18 1 264 4 19 1 113 1 156 1 20 1 283 1 378 1 54 1 342 1 362 1 
350 1 169 1 316 4 126 11 149 2 68 6 41 1 366 2 233 1 324 1 369 3 327 2 203 2 304 1 262 2 18 2 113 1 264 5 19 2 156 1 283 1 20 1 80 1 378 1 54 1 269 1 342 1 362 1 
350 1 169 2 316 6 126 19 320 2 149 3 68 9 41 1 366 1 69 1 233 1 324 2 369 4 327 3 203 3 304 1 262 3 95 1 18 3 113 1 264 10 19 3 135 1 156 1 283 1 20 1 80 1 378 1 54 1 166 1 342 3 362 1 245 1 
350 1 169 2 316 6 126 17 320 1 149 3 68 10 41 1 366 1 69 1 233 1 324 2 369 5 327 3 203 3 304 2 262 3 95 1 18 3 113 1 264 7 19 3 135 1 156 1 283 1 20 1 80 1 378 1 54 1 166 1 342 2 362 1 245 1 
350 1 316 2 126 8 149 1 68 4 366 1 41 1 233 1 369 2 327 1 203 1 262 2 18 1 264 4 19 1 113 1 156 1 20 1 283 1 378 1 54 1 342 1 362 1 
350 1 169 2 316 2 126 12 320 2 149 1 68 6 366 1 69 1 233 1 324 2 369 2 327 2 203 1 304 1 262 1 18 1 264 6 19 1 135 1 54 1 166 1 342 2 362 1 245 1 
350 1 169 2 316 8 126 18 320 1 149 4 68 10 41 1 366 1 69 1 233 1 324 2 369 5 327 3 203 4 304 2 262 3 95 2 18 4 113 1 264 8 19 4 135 1 156 1 283 1 20 1 80 1 378 1 54 1 166 1 342 2 362 1 245 1 
350 1 169 3 316 8 126 16 320 2 149 4 68 9 366 1 69 1 233 1 324 3 369 6 327 3 203 4 304 3 94 1 262 3 95 2 18 4 264 7 19 4 135 1 54 1 166 1 342 2 362 1 245 1 
262 3 126 7 264 4 113 3 156 3 20 1 283 2 68 3 41 1 369 6 342 1 327 1 304 3 
350 1 169 2 316 8 126 18 320 1 149 4 68 10 41 1 366 1 69 1 233 1 324 2 369 4 327 3 203 4 304 1 94 1 262 3 95 2 18 4 113 1 264 8 19 4 135 1 156 1 283 1 20 1 378 1 54 1 166 1 342 2 362 1 245 1 
309 1 
313 1 372 1 225 1 309 1 138 1 214 1 
202 1 263 1 282 1 72 1 259 1 88 1 375 1 39 1 285 1 297 1 276 1 
112 1 35 1 3 1 263 1 82 1 88 1 213 1 285 1 297 1 89 2 276 1 130 1 202 1 174 1 72 1 58 1 328 2 259 1 
35 2 3 1 352 1 4 1 248 1 88 2 297 3 276 1 89 2 70 1 130 1 202 1 173 1 174 1 328 2 259 1 112 2 263 1 82 1 21 1 213 1 285 1 58 2 
146 1 35 2 3 1 352 1 4 1 248 1 88 2 297 3 276 2 89 2 70 1 130 1 202 2 173 1 328 2 259 1 112 2 263 1 82 1 21 1 213 1 285 2 216 1 58 2 
272 1 363 1 4 1 37 2 248 1 88 1 297 4 276 3 368 1 202 3 173 1 371 1 72 1 259 1 136 2 263 1 285 3 162 1 84 1 117 1 216 1 58 1 168 1 
272 1 363 1 263 1 136 2 4 1 37 2 88 1 248 1 239 1 162 1 285 3 297 4 84 1 276 3 117 1 368 1 216 1 173 1 202 3 72 1 58 1 259 1 
202 1 263 1 259 1 285 1 276 1 231 1 
280 1 34 1 263 3 296 1 147 1 127 1 88 2 266 1 285 7 297 3 231 1 276 6 379 1 118 1 202 7 72 2 58 1 315 1 75 1 259 2 206 1 
349 2 347 1 3 2 195 1 149 2 68 3 297 1 201 1 202 1 203 2 259 1 262 2 112 1 18 2 19 2 263 1 113 1 264 3 156 1 20 1 82 1 160 1 213 1 34 1 33 1 316 4 35 1 126 6 88 1 128 1 276 1 89 2 41 1 130 1 369 2 174 1 327 1 328 2 91 2 49 1 283 1 378 1 285 1 102 1 241 1 342 1 58 1 
1 2 272 1 363 1 66 1 37 3 251 1 297 2 276 1 40 1 368 1 202 1 172 1 106 1 72 1 258 2 111 1 333 2 209 1 136 3 311 1 284 1 239 1 162 1 285 1 84 1 117 2 215 2 270 1 
34 1 363 1 263 2 88 1 285 2 297 2 231 1 276 2 379 1 202 2 187 1 58 1 259 1 
34 1 263 1 282 1 88 1 285 4 297 1 276 4 216 1 202 4 72 1 122 1 259 1 375 1 
220 1 263 2 114 1 127 1 248 1 88 1 285 2 297 1 276 2 202 2 58 1 235 1 259 1 206 1 
202 1 256 1 355 1 263 1 72 1 197 1 81 1 259 1 285 1 276 1 
34 1 263 1 296 1 247 1 88 1 285 2 297 1 276 2 202 2 315 1 259 1 
34 1 282 1 263 2 296 1 248 1 88 2 285 5 266 1 297 3 276 4 118 1 202 5 72 1 122 1 259 2 375 1 
34 1 282 1 263 2 296 1 248 1 88 2 285 5 297 3 276 4 150 1 118 1 202 5 72 1 122 1 259 2 375 1 
112 1 146 1 35 1 3 1 263 1 82 1 88 1 213 1 285 1 297 1 89 2 276 1 130 1 202 1 72 1 58 1 328 2 259 1 
263 2 147 1 127 1 248 1 88 1 285 1 297 1 276 1 379 1 202 1 58 1 259 1 206 1 
293 1 306 1 3 1 121 1 5 1 
125 1 293 2 306 2 3 1 352 1 136 2 65 1 377 1 37 2 5 1 21 1 162 1 84 1 70 1 368 1 172 1 121 2 76 1 246 1 
293 1 306 1 308 1 112 1 29 1 79 1 328 1 5 1 89 1 
125 1 377 1 5 1 
104 1 204 1 39 1 24 1 
104 1 204 1 358 1 376 1 24 1 47 1 176 1 
318 1 105 1 376 1 
63 1 104 1 358 3 24 1 267 1 314 2 302 1 204 1 376 3 381 1 176 1 47 1 
104 1 148 1 204 1 358 2 250 1 376 2 24 1 47 1 176 1 
62 1 355 1 358 1 267 1 24 1 167 1 256 1 131 1 376 1 176 1 47 1 
104 1 358 1 376 1 24 1 47 1 176 1 267 1 
104 2 204 1 358 1 376 1 47 1 176 1 267 1 
104 1 312 1 358 2 98 1 24 1 267 1 376 2 205 1 176 2 47 2 
104 1 148 2 358 3 336 1 267 1 24 2 199 1 286 1 131 1 204 1 376 3 176 1 47 1 
62 1 355 2 104 1 81 1 148 1 358 2 228 1 24 1 267 1 71 1 256 1 204 1 376 2 176 1 47 1 
273 1 104 1 148 2 358 4 250 1 336 1 267 1 24 2 131 1 204 1 376 4 176 2 47 2 
104 1 204 1 358 1 376 1 24 1 47 1 176 1 267 1 
104 2 148 2 358 4 336 1 24 3 314 1 143 1 131 1 302 1 204 2 376 4 381 1 176 1 47 1 
236 1 104 1 211 1 148 1 358 2 24 1 267 1 59 1 204 1 376 2 176 1 47 1 
104 1 358 3 24 1 267 1 186 1 314 2 302 2 204 1 376 3 381 1 176 1 47 1 
353 1 90 1 24 2 124 2 
358 1 92 1 376 1 47 1 176 1 267 1 
286 1 104 1 148 1 204 1 358 2 376 2 24 1 47 1 176 1 267 1 
42 1 
104 1 204 1 358 1 376 1 24 1 47 1 176 1 267 1 
286 1 314 1 104 1 148 1 204 1 358 3 376 3 24 1 47 1 176 1 267 1 
143 1 131 1 336 1 24 1 
104 1 24 1 

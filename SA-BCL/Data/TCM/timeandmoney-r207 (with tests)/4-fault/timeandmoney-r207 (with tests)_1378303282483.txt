#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (72,145,174,186,372) (34,214) (34,214) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (72,145,174,186,372) (34,214) (34,214) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (72,145,174,186,372) (34,214) (34,214) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (72,145,174,186,372) (34,214) (34,214) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (72,145,174,186,372) (91,180) (91,180) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (321,341) 104 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (321,341) 104 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (20,134,223,292) (20,134,223,292) (35,93,355) (35,93,355) (35,93,355) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (20,134,223,292) (20,134,223,292) (35,93,355) (35,93,355) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (20,134,223,292) (20,134,223,292) (35,93,355) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (20,134,223,292) (20,134,223,292) (35,93,355) (35,93,355) (35,93,355) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (20,134,223,292) (20,134,223,292) 370 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 1 34 1 307 1 372 1 20 1 131 1 223 1 167 1 134 1 296 1 214 1 265 1 11 1 12 1 170 1 
321 1 34 1 307 1 372 1 20 1 131 1 223 1 167 1 134 1 296 1 214 1 265 1 11 1 12 1 170 1 
321 1 34 1 307 1 372 1 20 1 131 1 223 1 167 1 134 1 296 1 214 1 265 1 11 1 12 1 170 1 
321 1 34 1 307 1 372 1 20 1 131 1 223 1 167 1 134 1 296 1 214 1 265 1 11 1 12 1 170 1 
261 1 20 1 131 1 177 1 141 1 223 2 363 1 134 1 167 1 307 1 296 2 12 1 292 1 222 1 
180 1 372 1 20 1 131 1 223 1 167 1 134 1 64 1 296 1 11 1 12 1 170 1 91 1 
177 1 341 1 29 1 292 1 20 2 273 1 261 2 223 3 314 1 167 1 134 2 296 3 11 1 
20 1 104 1 223 1 341 1 134 1 167 1 296 1 337 1 
20 1 104 1 223 1 341 1 134 1 167 1 296 1 337 1 
86 1 
328 1 366 2 88 1 
219 2 249 2 89 2 283 2 304 2 182 1 137 2 374 1 
111 2 338 2 175 1 0 1 50 1 339 1 340 2 207 1 96 1 181 1 304 3 182 1 114 1 155 1 280 1 279 1 75 1 283 2 264 1 137 2 219 3 322 1 324 1 144 1 374 1 375 2 272 1 85 1 377 1 249 2 41 1 331 1 165 1 107 1 89 2 198 1 92 2 
219 1 243 1 249 1 89 1 283 1 304 1 182 1 192 1 208 1 137 1 
13 1 219 1 243 1 304 1 61 1 328 1 345 1 185 1 249 1 365 1 211 1 119 1 147 1 335 1 
13 1 219 1 243 1 304 1 328 1 345 1 185 1 249 1 365 1 283 1 89 1 119 2 147 2 335 1 137 1 
125 1 57 1 224 1 119 1 147 1 
328 1 125 1 224 1 119 2 147 2 299 1 335 1 199 1 
125 1 119 1 147 1 
219 1 243 1 182 1 304 1 192 1 208 1 249 1 156 1 224 1 283 1 89 1 119 1 147 1 137 1 
328 1 
328 1 125 1 224 1 119 2 147 2 299 1 335 1 68 1 
233 1 19 1 221 2 326 2 328 1 125 2 5 1 164 1 332 1 224 2 236 1 166 1 119 5 147 5 334 2 299 1 335 1 381 1 77 1 
86 1 
219 2 160 1 304 2 374 2 249 2 283 1 89 1 347 1 137 1 
14 1 58 1 316 1 
338 1 219 1 340 1 96 1 324 1 304 1 374 1 280 1 279 1 272 1 85 1 377 1 117 1 41 1 107 1 92 1 
219 3 249 3 89 3 283 3 304 3 137 1 373 1 374 1 
219 1 243 1 249 1 89 1 283 1 304 1 192 1 
219 1 243 1 160 1 249 1 89 1 283 1 304 1 347 1 137 1 
111 2 338 1 175 1 0 1 50 1 339 1 340 1 96 1 304 4 182 1 114 1 155 1 280 1 279 1 345 1 185 1 365 1 264 1 283 3 119 1 99 1 287 1 137 2 13 1 56 1 219 4 160 1 243 1 324 1 373 1 374 1 375 1 272 1 85 1 377 1 41 1 249 3 331 1 165 1 107 1 89 3 198 1 147 1 92 1 
61 1 219 2 249 2 275 1 89 1 283 1 304 2 373 1 374 1 
13 1 219 3 56 1 160 1 243 1 304 3 373 2 328 1 345 1 185 1 249 3 365 1 74 1 283 3 89 3 119 1 147 1 287 1 137 1 
219 2 14 1 160 1 58 1 304 2 373 1 249 2 283 2 89 2 137 1 
338 1 219 1 340 1 96 1 324 1 304 1 374 1 279 1 272 1 280 1 85 1 377 1 41 1 107 1 92 1 
338 1 204 1 219 1 340 1 96 1 324 1 304 1 374 1 272 1 280 1 85 1 41 1 126 1 107 1 92 1 
111 2 175 1 0 2 50 1 207 2 179 1 114 1 155 1 313 1 262 1 316 2 349 1 351 1 352 1 242 1 14 2 58 2 18 1 358 1 375 4 331 1 165 1 197 1 46 1 
185 1 219 1 243 1 249 1 250 1 89 1 283 1 304 1 
338 1 14 1 219 2 340 1 96 1 324 1 304 2 373 1 280 1 272 1 279 1 85 1 377 1 41 1 249 1 107 1 283 1 89 1 287 1 92 1 
219 5 160 1 143 1 16 1 304 5 373 2 374 1 61 1 249 5 275 1 283 4 89 4 287 1 137 1 
219 2 243 1 249 2 250 1 89 2 283 2 304 2 192 1 
194 1 317 1 
194 1 317 1 
278 1 169 1 
278 1 169 1 
278 1 169 1 
194 1 52 1 317 1 
194 1 52 1 317 1 
194 1 154 1 317 1 
235 1 194 2 278 1 169 1 66 1 317 2 
194 1 52 1 317 1 
194 1 44 1 317 1 
194 1 44 1 317 1 
194 1 44 1 317 1 
203 2 229 1 138 1 206 2 1 2 323 2 194 2 258 3 328 1 161 1 158 1 119 2 21 2 147 2 159 1 348 1 66 1 317 2 200 1 
203 1 219 2 138 1 102 1 142 1 1 1 323 1 304 2 154 1 374 1 194 1 258 1 116 1 210 1 249 2 283 2 89 2 76 1 65 1 119 1 147 1 21 1 267 1 317 1 
131 1 307 1 12 1 
131 1 64 1 12 1 
124 1 274 1 64 1 307 2 215 1 12 3 
139 1 124 1 64 1 307 1 215 1 12 2 
124 1 64 1 307 1 215 2 12 2 
112 2 360 1 233 3 257 1 210 1 366 3 262 1 133 1 236 1 284 1 119 5 10 1 267 1 349 1 351 1 59 1 18 1 19 2 326 1 221 1 82 2 40 2 328 2 125 1 105 1 224 4 88 1 65 1 334 1 147 5 299 1 335 1 
300 1 112 6 233 8 184 1 210 4 132 1 366 9 262 3 133 3 236 1 284 2 8 5 119 9 187 1 349 3 351 3 77 1 289 1 57 5 59 2 17 1 18 3 19 6 221 2 326 2 82 6 328 5 125 6 105 1 224 7 88 3 147 9 334 2 299 1 335 1 
112 2 233 3 257 1 210 1 366 4 262 1 133 1 284 1 119 3 10 1 349 1 351 1 77 1 59 1 18 1 326 1 221 1 19 2 82 2 328 3 40 1 224 2 88 2 334 1 147 3 335 1 
112 4 233 5 184 1 257 1 210 2 366 7 262 2 133 2 284 1 119 4 187 1 10 1 349 2 351 2 77 1 289 1 59 1 18 2 326 1 221 1 19 4 82 4 328 4 40 2 224 3 88 3 334 1 147 4 335 1 
86 1 
280 1 103 1 
311 1 
280 1 272 1 
280 3 272 1 268 1 96 1 171 1 101 2 
280 1 272 1 96 1 
280 1 53 1 
0 3 78 1 49 1 207 4 254 1 179 2 357 1 308 1 247 1 375 7 281 2 30 1 262 1 163 1 197 3 7 1 349 1 
0 3 78 1 49 1 207 4 254 1 179 2 357 1 308 1 247 1 375 7 281 2 30 1 262 1 163 1 197 3 7 1 349 1 
0 3 78 1 49 1 36 1 207 4 254 1 179 2 357 1 308 1 247 1 375 7 30 1 281 2 262 1 163 1 197 3 7 1 349 1 
111 2 175 1 0 15 50 1 49 2 254 1 207 16 179 5 305 1 2 4 308 5 129 1 155 1 259 1 30 1 281 3 262 4 7 2 133 3 118 1 136 3 351 3 349 4 78 2 357 1 270 1 18 3 247 2 375 31 122 1 163 1 197 10 165 1 297 1 
111 4 175 2 0 4 50 2 49 1 207 5 254 1 179 3 183 1 308 1 155 2 281 2 30 1 262 1 7 1 118 1 349 1 78 1 247 1 375 9 163 1 165 2 197 4 380 1 
338 1 340 1 93 1 307 1 4 1 131 1 263 1 134 1 11 1 12 2 35 1 140 1 269 1 355 1 292 1 20 1 85 1 162 1 223 2 41 1 274 1 167 1 64 1 45 1 296 1 67 1 92 1 
338 1 340 1 307 1 309 1 4 1 131 1 263 1 134 1 11 1 12 2 35 1 140 1 269 1 355 1 292 2 294 1 20 1 85 1 223 3 41 1 274 1 63 1 64 1 45 1 296 2 67 1 92 1 
338 1 340 1 140 1 355 1 269 1 307 1 292 2 309 1 294 1 85 1 4 1 131 1 41 1 223 2 274 1 263 1 64 1 296 1 45 1 11 1 12 2 92 1 
338 1 340 1 152 1 24 1 280 1 263 2 134 1 11 2 288 1 54 1 368 1 269 2 324 1 272 1 85 1 20 1 223 1 41 1 63 1 45 2 296 1 336 1 92 1 
338 1 340 1 93 1 307 1 309 1 4 1 131 1 263 1 134 1 11 1 12 2 35 1 140 1 269 1 355 1 292 1 20 1 85 1 223 2 41 1 274 1 167 1 64 1 45 1 296 1 67 1 92 1 
121 1 
338 2 340 2 231 1 233 2 343 1 280 1 345 1 185 1 284 1 236 1 13 1 55 1 241 1 243 1 245 1 19 2 61 1 62 1 249 1 108 2 147 5 299 3 69 2 151 1 362 2 152 1 304 1 24 1 256 1 260 1 366 2 365 1 211 1 119 5 216 2 120 4 320 1 219 1 324 2 271 2 221 1 326 1 84 1 328 2 272 1 85 1 125 6 87 2 41 1 88 2 334 1 335 1 277 2 48 1 92 2 
120 2 13 1 241 1 219 1 151 1 243 1 304 1 343 1 61 1 260 1 345 1 185 1 62 1 125 2 87 1 249 1 365 1 211 1 119 3 147 3 299 1 68 1 
120 3 13 1 241 1 219 1 151 1 243 1 304 1 343 1 61 1 328 1 260 1 345 1 185 1 62 1 125 1 249 1 365 1 211 1 119 3 108 1 147 3 299 1 335 1 68 1 
151 1 304 1 343 1 260 1 345 1 185 1 365 1 211 1 119 3 13 1 120 3 241 1 219 1 243 1 271 1 61 1 328 1 62 1 125 2 249 1 87 1 147 3 108 1 299 1 335 1 68 1 
231 1 233 1 343 1 345 1 185 1 236 1 135 1 189 1 13 1 241 1 243 1 19 1 61 1 62 1 249 1 147 5 108 4 299 3 68 1 69 2 151 1 361 1 362 2 304 1 260 1 365 1 211 1 119 5 120 6 216 2 320 1 219 1 271 4 221 1 326 1 328 5 125 7 87 4 88 2 334 1 335 5 277 2 228 1 172 1 
69 2 151 1 362 2 231 1 233 1 304 1 343 1 260 1 345 1 185 1 366 2 365 1 211 1 236 1 119 4 216 2 13 1 120 4 320 1 241 1 219 1 243 1 245 1 271 2 19 1 326 1 221 1 61 1 328 2 62 1 125 4 87 2 249 1 88 2 108 2 334 1 147 4 299 2 335 1 277 2 
69 2 151 1 362 2 361 1 231 1 233 1 304 1 343 1 260 1 345 1 185 1 365 1 211 1 236 1 119 4 135 1 189 1 216 2 13 1 120 4 320 1 241 1 219 1 243 1 271 2 19 1 221 1 326 1 61 1 328 1 62 1 125 4 87 2 249 1 88 2 108 2 334 1 147 4 299 2 335 1 277 2 
69 2 151 1 362 2 361 1 231 1 233 1 304 1 343 1 260 1 345 1 185 1 365 1 211 1 236 1 119 4 135 1 189 1 216 2 13 1 120 4 320 1 241 1 219 1 243 1 271 2 19 1 221 1 326 1 61 1 328 1 62 1 125 4 87 2 249 1 88 2 108 2 334 1 147 4 299 2 335 1 277 2 
69 2 151 1 362 2 233 1 304 1 343 1 260 1 345 1 185 1 366 2 365 1 211 1 6 1 236 1 119 4 188 2 135 1 240 1 13 1 120 4 320 1 241 1 219 1 243 1 354 1 271 2 19 1 221 1 326 1 61 1 328 1 62 1 125 4 87 2 249 1 108 2 334 1 147 4 299 2 335 1 22 2 
69 2 151 1 362 2 361 1 231 1 233 1 304 1 343 1 260 1 345 1 185 1 365 1 211 1 236 1 119 4 135 1 189 1 216 2 13 1 120 5 320 1 241 1 219 1 243 1 271 3 19 1 326 1 221 1 61 1 328 1 62 1 125 5 249 1 87 3 88 2 334 1 147 4 108 3 299 2 335 1 277 2 172 1 
69 2 151 1 362 2 361 1 231 1 233 1 304 1 343 1 260 1 345 1 185 1 365 1 211 1 236 1 119 4 135 1 189 1 216 2 13 1 120 5 320 1 241 1 219 1 243 1 271 3 19 1 326 1 221 1 61 1 328 1 62 1 125 5 249 1 87 3 88 2 334 1 147 4 108 3 299 2 335 1 277 2 172 1 
69 2 151 1 362 2 233 1 304 1 343 1 260 1 345 1 185 1 366 2 365 1 211 1 236 1 119 4 188 2 13 1 120 4 320 1 241 1 219 1 243 1 354 1 245 1 271 2 19 1 326 1 221 1 61 1 328 1 62 1 125 4 87 2 249 1 108 2 334 1 147 4 299 2 335 1 22 2 
111 2 352 1 155 1 175 1 50 1 86 1 331 1 165 1 114 1 
111 4 175 2 0 6 176 1 50 2 94 1 207 8 179 1 305 1 2 3 308 1 114 2 155 2 259 1 262 2 133 2 75 1 316 11 136 3 351 1 349 1 217 1 14 11 58 4 18 2 374 1 375 14 331 1 106 1 197 2 165 2 379 1 198 1 
338 1 111 2 175 1 0 1 50 1 340 1 205 1 96 1 207 1 304 2 28 1 114 1 280 1 279 1 155 1 117 1 283 1 75 1 287 1 219 2 58 1 324 1 373 1 374 1 272 1 375 2 85 1 377 1 41 1 249 1 195 1 331 1 106 1 107 1 165 1 89 1 198 1 92 1 
338 3 175 3 0 10 50 3 340 3 96 2 179 4 3 1 279 2 280 2 281 1 7 1 133 2 283 1 100 1 287 1 349 3 351 2 14 7 58 7 18 2 247 1 249 1 106 1 107 2 197 8 198 1 110 2 111 6 254 1 207 10 304 3 26 1 308 4 309 1 114 3 155 3 30 1 262 3 75 1 264 2 213 2 316 7 319 2 219 3 324 1 373 1 374 2 375 20 272 2 85 2 377 2 41 2 163 1 331 3 165 3 89 1 276 2 92 3 
338 7 111 4 175 2 0 1 50 2 23 1 340 8 232 1 207 1 181 2 306 1 304 1 152 1 24 1 309 1 114 2 280 3 155 2 73 1 31 1 283 1 75 1 352 1 219 1 81 1 324 2 373 1 375 2 272 2 85 2 162 1 249 1 41 2 331 2 165 2 89 1 146 1 198 1 92 8 
111 2 175 1 0 2 50 1 302 1 207 1 179 1 304 1 114 1 155 1 262 1 133 1 283 1 316 1 137 1 351 1 349 1 14 1 219 1 160 1 58 1 18 1 375 3 249 1 331 1 106 1 197 1 165 1 89 1 
352 1 111 2 175 1 14 1 50 1 58 1 207 2 308 1 18 1 114 1 358 1 375 2 155 1 331 1 262 1 197 1 165 1 316 1 
352 1 111 2 175 1 0 2 14 1 50 1 58 1 179 1 114 1 375 2 155 1 313 1 331 1 197 1 165 1 316 1 351 1 349 1 
111 2 175 1 0 2 50 1 207 2 179 1 308 1 114 1 155 1 262 1 133 1 316 2 351 1 349 1 352 1 14 2 58 2 18 1 375 4 331 1 165 1 197 2 
111 2 175 1 14 1 50 1 58 1 207 2 308 1 18 1 114 1 358 1 375 2 155 1 331 1 262 1 197 1 165 1 31 1 316 1 
111 2 175 1 0 2 14 1 50 1 58 1 179 1 114 1 375 2 155 1 313 1 331 1 197 1 165 1 31 1 316 1 351 1 349 1 
111 2 175 1 0 2 50 1 207 2 179 1 308 1 114 1 155 1 262 1 133 1 31 1 316 2 351 1 349 1 14 2 58 2 18 1 375 4 331 1 165 1 197 2 
111 2 175 1 0 2 14 2 50 1 58 2 207 2 179 1 308 1 18 1 114 1 155 1 375 4 331 1 262 1 197 2 165 1 133 1 316 2 349 1 351 1 
338 1 111 2 175 1 0 1 50 1 340 1 207 1 96 1 304 1 114 1 279 1 280 1 155 1 75 1 264 1 219 1 324 1 374 1 375 2 272 1 85 1 377 1 41 1 331 1 107 1 165 1 198 1 92 1 
338 1 111 2 175 1 204 1 0 1 50 1 340 1 207 1 96 1 303 1 304 1 114 1 280 1 155 1 75 1 219 1 324 1 374 1 375 2 272 1 85 1 41 1 126 1 331 1 107 1 165 1 198 1 92 1 
111 2 175 1 0 2 50 1 207 2 179 1 308 1 114 1 155 1 262 1 133 1 316 2 351 1 349 1 14 2 58 2 18 1 375 4 331 1 106 1 165 1 197 2 
338 1 111 2 175 1 0 2 50 1 340 1 207 2 96 1 179 1 304 1 308 1 114 1 279 1 280 1 155 1 262 1 133 1 264 1 316 2 349 1 351 1 14 2 219 1 58 2 18 1 375 4 272 1 85 1 377 1 162 1 41 1 331 1 197 2 107 1 165 1 110 1 92 1 
111 2 175 1 0 1 50 1 207 2 304 1 308 1 114 1 155 1 262 1 133 1 283 1 316 1 137 1 349 1 351 1 190 1 219 1 14 1 160 1 58 1 18 1 375 3 249 1 331 1 106 1 197 1 165 1 89 1 
111 4 175 2 0 10 50 2 230 1 207 9 179 3 364 1 305 1 2 2 183 1 308 3 155 2 259 1 262 3 133 3 136 1 266 1 351 3 349 3 218 2 244 1 37 1 18 3 375 19 196 2 333 1 165 2 197 6 43 1 
70 1 111 6 175 3 0 12 50 3 71 1 207 14 179 2 364 2 305 2 183 1 2 2 308 2 155 3 262 3 133 3 118 2 136 2 266 1 349 2 351 2 218 4 290 1 244 2 291 1 18 3 327 1 375 26 196 1 197 4 333 1 165 3 43 1 168 1 
175 3 0 21 50 3 179 4 183 1 2 4 281 1 133 4 7 1 136 3 349 5 351 4 244 2 290 1 291 1 18 4 247 1 197 8 196 1 109 1 111 6 70 1 71 1 207 20 254 1 364 1 305 3 308 4 259 1 155 3 30 1 262 5 118 1 266 1 218 4 37 1 327 1 375 41 163 1 165 3 333 1 43 1 168 1 
70 1 111 8 175 4 0 18 50 4 71 1 254 1 207 20 179 4 364 1 305 3 2 4 183 1 308 3 155 4 259 1 281 1 30 1 262 5 7 1 133 4 118 2 136 3 266 1 351 3 349 4 218 4 290 1 244 2 37 1 291 1 18 4 247 1 327 1 375 38 163 1 196 1 333 1 165 4 197 7 43 1 168 1 109 1 
70 1 111 4 175 2 0 25 50 2 71 1 254 1 207 27 179 7 364 1 305 2 2 4 183 1 308 7 155 2 259 2 281 1 30 1 262 8 7 1 133 7 118 1 136 4 266 1 351 7 349 8 218 4 290 1 244 1 291 1 18 7 247 1 327 1 375 52 163 1 196 1 333 1 165 2 197 14 43 1 379 2 168 1 
194 1 203 1 229 1 161 1 323 1 1 1 21 1 97 1 66 1 317 1 
102 1 154 1 
194 1 203 1 42 1 80 1 323 1 1 1 227 1 21 1 317 1 
203 1 229 1 138 1 206 1 1 1 323 1 194 1 258 2 328 1 161 1 158 1 119 1 147 1 21 1 159 1 66 1 317 1 200 1 
203 1 229 1 138 1 206 1 1 1 323 1 194 1 258 2 328 1 161 1 158 1 119 1 147 1 21 1 159 1 66 1 317 1 200 1 
203 1 229 1 138 1 206 1 1 1 323 1 194 1 258 2 328 1 161 1 158 1 119 1 147 1 21 1 159 1 66 1 317 1 200 1 
235 1 52 1 95 1 
235 1 52 1 95 1 
252 1 44 1 
235 1 252 1 44 1 
116 1 76 1 
202 1 203 1 219 2 102 1 142 1 206 1 1 1 323 1 304 2 154 1 374 1 258 1 194 1 116 1 210 1 249 2 224 1 89 2 283 2 76 1 65 1 119 1 21 1 147 1 159 1 267 1 317 1 
52 1 95 1 
235 1 252 1 44 1 
111 2 338 2 175 1 0 1 50 1 340 2 232 1 207 1 181 2 255 1 304 2 25 1 114 1 280 1 155 1 130 1 75 1 219 2 81 1 272 1 375 2 85 1 329 1 41 1 249 2 331 1 106 1 165 1 225 1 198 1 92 2 
338 2 340 2 140 1 307 1 309 1 83 1 85 1 4 1 131 1 162 1 41 1 274 1 263 1 315 1 64 1 148 1 12 2 67 1 92 2 
338 1 220 1 340 1 140 1 307 1 309 1 85 1 4 1 131 1 41 1 274 1 263 1 64 1 148 1 12 2 67 1 92 1 
338 1 340 1 324 1 152 1 24 1 83 1 280 1 272 1 85 1 378 1 41 1 263 1 54 1 92 1 
338 1 340 1 140 1 307 1 309 1 83 1 85 1 4 1 131 1 41 1 274 1 263 1 315 1 64 1 148 1 12 2 67 1 92 1 
282 1 
86 1 
216 1 231 1 233 1 221 1 326 1 19 1 328 2 125 1 366 1 236 1 88 1 119 1 147 1 334 1 299 1 335 1 277 1 
338 3 340 3 96 3 233 9 280 10 133 2 284 2 236 4 53 2 351 2 349 2 101 2 13 2 55 1 18 2 293 1 103 3 193 1 19 8 147 5 299 3 201 2 301 2 112 6 113 2 153 1 312 1 366 12 262 2 157 2 119 5 367 1 369 2 324 1 371 2 221 4 326 4 82 6 272 3 328 8 85 4 376 2 123 2 162 1 125 5 41 3 332 1 88 6 276 2 334 4 335 2 381 1 171 1 92 3 
112 5 71 1 233 8 305 1 2 1 366 6 262 2 133 2 284 1 236 2 119 1 136 1 351 2 349 2 55 1 290 1 291 1 18 2 326 2 221 2 19 5 327 1 82 5 328 5 376 1 123 2 125 1 226 1 88 3 168 1 147 1 334 2 299 1 47 1 335 2 
233 2 304 1 182 1 208 1 262 2 156 1 7 1 346 1 236 1 283 1 119 1 189 1 137 1 349 1 219 1 243 1 192 1 326 1 221 1 19 2 247 1 376 1 123 2 249 1 163 1 89 1 334 1 147 1 
233 1 221 1 326 1 19 1 328 1 332 1 236 1 334 1 335 1 381 1 
112 5 233 5 18 2 19 5 82 5 328 5 376 1 123 2 366 10 262 2 133 2 88 5 276 1 351 2 349 2 
328 1 125 1 119 1 147 1 299 1 335 1 
338 4 340 4 233 2 152 1 153 1 24 1 256 1 344 1 280 1 236 1 284 2 119 3 77 1 55 2 324 2 293 2 326 2 221 2 19 2 248 1 272 1 85 1 125 4 41 1 334 2 147 3 299 2 48 1 92 4 
111 2 338 1 175 1 0 1 50 1 339 1 340 1 96 1 304 3 182 1 114 1 155 1 279 1 280 1 283 2 264 1 137 2 219 3 324 1 374 1 375 1 272 1 85 1 377 1 249 2 41 1 331 1 107 1 165 1 89 2 198 1 92 1 
112 2 55 1 233 1 19 2 221 1 326 1 82 2 328 4 281 1 366 4 88 2 236 1 284 1 334 1 335 2 
203 1 98 1 323 1 
203 1 98 1 323 1 
203 1 229 1 353 1 116 1 323 1 
203 1 98 1 323 1 
203 1 323 1 310 1 
203 1 323 1 310 1 
203 1 323 1 310 1 
203 1 323 1 
194 1 317 1 
111 4 175 2 0 4 50 2 207 4 254 1 179 2 308 1 247 1 375 8 155 2 281 1 30 1 262 1 163 1 197 3 165 2 7 1 118 1 349 1 
86 1 
111 2 175 1 0 2 50 1 178 1 207 2 179 1 18 1 308 1 155 1 375 4 262 1 197 2 165 1 133 1 349 1 351 1 
0 4 207 3 179 1 305 1 2 2 18 1 308 1 375 7 259 1 262 1 197 2 133 1 136 1 349 1 351 1 
111 4 175 2 0 12 50 2 94 1 254 1 207 11 179 5 2 2 308 4 259 1 155 2 281 1 30 1 262 3 7 2 133 2 118 2 136 2 351 2 349 3 60 1 18 2 247 2 375 23 163 1 197 9 165 2 379 1 
375 1 0 1 2 1 
375 1 207 1 136 1 
111 2 175 1 0 3 50 1 178 1 207 3 179 2 18 1 308 1 155 1 375 6 262 1 165 1 197 3 133 1 276 1 351 1 349 1 
111 2 175 1 0 6 50 1 71 1 207 6 179 1 305 1 2 1 183 1 308 1 155 1 262 2 133 2 136 1 351 2 349 2 290 1 291 1 18 2 327 1 375 12 165 1 197 2 168 1 
0 3 207 3 179 1 308 1 247 1 375 6 163 1 262 1 197 2 7 1 349 1 
111 2 175 1 0 2 50 1 207 1 254 1 179 1 60 1 308 1 247 1 375 3 155 1 30 1 197 2 165 1 7 1 118 1 
111 2 175 1 0 5 50 1 207 5 179 3 183 1 308 2 247 2 155 1 375 10 163 1 262 2 165 1 197 5 7 2 346 1 349 2 
111 2 175 1 50 1 207 2 183 1 18 1 308 1 155 1 375 2 262 1 165 1 197 1 
111 2 175 1 0 2 50 1 207 2 179 1 183 1 18 1 308 1 155 1 375 4 262 1 197 2 165 1 133 1 349 1 351 1 
111 6 175 3 0 2 50 3 37 1 207 1 179 1 60 1 183 1 308 1 247 1 375 3 155 3 165 3 197 2 7 1 118 1 
111 10 175 5 0 18 50 5 178 1 254 1 207 16 179 7 305 1 2 4 183 1 129 1 308 5 155 5 259 1 281 1 30 1 262 5 7 3 133 3 118 2 136 3 351 3 349 5 37 1 60 1 270 1 18 3 247 3 375 34 122 1 163 2 165 5 197 12 
111 2 175 1 0 4 50 1 71 1 207 4 254 1 179 2 305 1 2 1 183 1 155 1 281 1 30 1 262 1 7 1 136 1 349 1 247 1 375 8 163 1 165 1 197 2 
111 4 175 2 0 5 50 2 178 1 71 1 254 1 207 6 179 2 305 1 2 2 183 1 308 1 155 2 259 1 281 1 30 1 262 2 7 1 133 1 136 1 349 1 18 1 247 1 375 11 163 1 165 2 197 3 
111 6 175 3 0 10 50 3 178 1 71 1 254 1 207 9 179 3 305 1 2 1 183 1 308 1 155 3 281 1 30 1 262 3 7 1 133 2 118 1 136 1 351 2 349 3 290 1 291 1 18 2 247 1 327 1 375 19 163 1 165 3 197 4 168 1 
111 6 175 3 0 7 50 3 178 1 71 1 254 1 207 10 179 3 305 1 2 1 183 1 308 2 155 3 281 1 30 1 262 3 7 1 133 2 118 1 136 1 351 1 349 2 290 1 291 1 18 2 247 1 327 1 375 17 163 1 165 3 197 5 168 1 
111 2 175 1 0 4 50 1 71 1 207 4 254 1 179 2 305 1 2 1 183 1 155 1 281 1 30 1 262 1 7 1 136 1 349 1 247 1 375 8 163 1 165 1 197 2 
111 2 175 1 0 6 50 1 71 1 207 6 179 1 305 1 2 1 183 1 308 1 155 1 262 2 133 2 136 1 351 2 349 2 290 1 291 1 18 2 327 1 375 12 165 1 197 2 168 1 
111 8 175 4 0 8 50 4 178 1 71 1 254 1 207 10 179 3 305 1 2 1 183 1 308 2 155 4 281 1 30 1 262 3 7 1 133 2 118 2 136 1 351 1 349 2 290 1 291 1 18 2 247 1 327 1 375 18 163 1 165 4 197 5 168 1 
111 8 175 4 0 7 50 4 71 1 207 9 179 3 305 1 2 1 183 1 308 3 155 4 262 3 133 3 118 2 136 1 351 2 349 2 290 1 37 1 291 1 18 3 327 1 375 16 165 4 197 6 168 1 
0 4 254 1 207 3 179 3 308 3 247 3 375 7 30 2 163 1 262 1 197 6 7 3 349 1 
111 8 175 4 0 8 50 4 71 1 254 1 207 10 179 3 305 1 2 1 183 1 308 1 155 4 281 1 30 1 262 3 7 1 133 2 118 2 136 1 351 1 349 2 290 1 37 1 291 1 18 2 247 1 327 1 375 18 163 1 165 4 197 4 168 1 
61 1 39 1 219 1 249 1 275 1 304 1 374 1 
79 1 219 1 304 1 374 1 38 1 61 1 39 1 330 1 249 1 275 1 149 1 298 1 
338 1 340 1 86 1 324 1 92 1 
338 1 219 2 340 1 96 1 324 1 304 2 373 1 374 1 280 1 272 1 279 1 85 1 249 1 41 1 107 1 283 1 89 1 92 1 
338 1 301 1 340 1 96 2 304 2 279 1 280 3 345 1 185 1 283 1 53 1 219 2 243 1 373 1 374 1 293 1 272 2 85 1 41 1 249 2 107 1 89 2 92 1 
338 2 204 1 301 1 340 2 96 2 304 2 280 3 345 1 185 1 283 1 53 1 219 2 243 1 373 1 374 1 293 1 272 2 85 1 41 1 249 2 107 1 127 1 89 2 92 2 
13 1 338 3 301 1 340 3 96 1 324 1 293 1 103 1 328 1 272 1 280 4 85 1 125 1 41 1 127 1 119 2 9 1 53 1 147 2 335 1 150 1 92 3 101 1 
13 1 338 3 301 1 340 3 96 1 324 1 113 1 293 1 103 1 328 1 272 1 280 4 85 1 125 1 41 1 127 1 119 2 53 1 147 2 335 1 92 3 101 1 
338 1 85 1 340 1 73 1 41 1 92 1 
338 6 33 1 23 1 340 7 232 1 96 1 324 2 181 1 306 1 309 1 272 2 280 3 85 3 73 1 162 1 41 2 212 1 146 1 286 1 171 1 92 7 
111 4 338 1 175 2 0 3 50 2 340 1 207 3 254 1 96 1 179 2 255 1 304 2 114 2 280 1 155 2 279 1 281 1 30 1 262 1 7 1 283 1 264 1 316 1 349 1 319 1 14 1 219 2 58 1 373 1 374 2 247 1 375 6 272 1 85 1 377 1 162 1 41 1 249 1 163 1 331 2 106 1 197 2 107 1 165 2 89 1 110 1 92 1 
338 1 340 1 233 1 113 1 153 1 280 2 157 1 236 2 119 3 101 1 13 1 324 1 371 1 19 1 326 2 221 2 103 1 328 1 125 2 332 1 224 1 334 2 147 3 299 1 335 1 381 1 92 1 201 1 
338 2 340 2 96 1 272 1 280 2 85 2 162 1 73 1 41 1 367 1 171 1 101 1 92 2 
338 4 340 4 324 1 152 1 24 1 272 1 280 1 85 1 162 1 41 1 127 1 350 1 92 4 
338 2 33 1 340 2 96 1 51 1 26 1 293 1 272 1 280 1 85 2 41 1 251 1 286 1 92 2 
338 1 340 1 324 1 85 1 4 1 131 1 41 1 64 1 12 1 92 1 
338 2 280 1 272 1 85 1 130 1 340 2 162 1 41 1 232 1 309 1 92 2 
338 4 340 5 232 1 324 1 152 1 306 1 24 1 293 1 272 2 280 3 85 2 162 1 41 2 146 1 350 1 92 5 
338 4 318 1 340 5 232 1 324 1 152 1 24 1 293 1 272 2 280 3 85 2 162 1 41 2 146 1 350 1 92 5 
338 1 204 1 219 2 340 1 96 1 324 1 304 2 373 1 374 1 280 1 272 1 85 1 249 1 41 1 107 1 283 1 89 1 92 1 
338 1 33 1 340 1 96 1 293 1 272 1 280 1 85 2 41 1 212 1 286 1 171 1 92 1 
219 1 304 1 25 1 342 1 329 1 295 1 249 1 225 1 173 1 
237 1 238 1 173 1 
209 1 295 1 374 1 342 1 173 1 
13 1 56 1 243 1 374 1 342 2 209 2 328 1 345 1 185 1 295 2 365 1 224 1 285 1 119 2 147 2 237 1 238 1 335 1 173 1 
86 1 
261 1 20 1 223 1 314 1 134 1 296 1 29 1 
269 1 296 1 11 1 
372 2 29 1 72 1 261 1 20 1 186 1 223 3 314 1 167 1 134 1 296 3 174 1 
261 1 20 1 223 2 314 1 363 1 134 1 296 2 29 1 292 1 
141 1 177 1 307 1 20 1 261 1 131 1 223 1 167 1 134 1 296 1 12 1 
261 1 20 1 223 1 314 1 134 1 167 1 296 1 
20 1 223 1 314 2 134 1 167 1 296 1 29 1 
15 1 234 1 27 1 261 1 20 2 223 2 314 1 167 1 134 2 296 2 
359 1 177 1 246 1 29 1 292 2 20 1 273 1 261 2 223 3 314 1 167 1 134 1 296 3 
370 1 20 1 131 1 223 2 274 1 134 1 167 1 64 1 307 1 296 1 12 2 292 1 
177 1 356 1 363 1 29 1 292 2 20 2 273 1 261 2 223 4 314 1 167 1 134 2 296 4 
261 1 20 1 223 1 314 1 134 1 167 1 296 1 29 1 
177 1 128 1 372 1 29 2 292 2 20 1 273 1 261 3 186 1 223 4 314 2 134 1 296 4 174 1 
128 1 325 1 29 1 20 1 223 1 314 1 167 1 134 1 296 1 32 1 337 1 
372 2 29 1 261 1 20 1 186 1 223 3 145 1 314 1 167 1 134 1 296 3 174 2 
261 2 115 1 253 2 90 1 
20 1 223 1 134 1 167 1 296 1 239 1 
261 1 20 1 223 2 314 1 134 1 167 1 246 1 296 2 29 1 292 1 
191 1 
261 1 20 1 223 1 314 1 134 1 167 1 296 1 29 1 
246 1 372 1 292 1 29 1 20 1 261 1 223 3 314 1 167 1 134 1 296 3 
261 1 273 1 177 1 128 1 
261 1 314 1 

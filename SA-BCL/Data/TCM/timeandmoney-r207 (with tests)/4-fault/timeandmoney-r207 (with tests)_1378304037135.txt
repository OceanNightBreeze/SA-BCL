#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (24,225) 264 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (145,200) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (93,173,212) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (145,200) (145,200) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 187 224 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (24,225) (24,225) (182,204) 127 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (24,225) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (24,225) (24,225) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (145,200) (145,200) 8 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (24,225) 264 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 279 (249,332) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 279 (249,332) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 279 (157,327) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 279 (157,327) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
241 1 171 1 260 9 215 1 196 1 199 1 27 2 134 2 283 4 201 3 219 1 66 1 184 1 334 5 356 1 116 6 310 2 293 2 121 9 360 2 254 1 48 1 232 2 234 1 235 1 170 2 146 1 344 1 
241 1 171 1 260 9 215 1 196 1 199 1 134 2 27 2 283 4 201 3 219 1 66 1 184 1 334 5 356 1 116 6 310 2 293 2 121 9 360 2 254 1 48 1 232 2 234 1 235 1 170 2 146 1 344 1 
241 1 171 1 260 10 215 1 196 1 199 1 134 2 27 2 283 5 201 4 219 1 66 1 184 1 334 6 356 1 116 7 310 2 293 2 121 10 360 2 254 1 48 1 232 2 234 1 235 1 170 2 146 1 344 1 
241 1 171 1 260 7 215 1 196 1 199 1 134 2 27 2 283 3 201 2 219 1 66 1 184 1 334 4 356 1 116 4 310 1 293 2 121 7 360 2 254 1 48 1 232 2 234 1 170 2 146 1 344 1 
241 1 334 3 260 4 356 1 116 3 196 1 310 2 199 1 27 1 134 1 283 2 121 4 201 1 360 1 232 1 235 1 170 1 66 1 
241 1 334 1 260 2 16 1 196 1 199 1 27 1 293 1 121 2 155 1 360 1 122 1 232 1 170 1 344 1 146 1 
241 1 334 2 260 3 116 1 196 1 199 1 27 2 283 1 293 1 121 3 201 1 360 2 48 1 
241 1 260 9 196 1 199 1 27 2 134 1 283 4 201 3 219 1 66 1 184 1 334 5 356 1 116 7 310 2 268 1 189 1 293 1 121 9 360 2 48 1 232 1 170 1 235 1 
241 1 260 9 196 1 199 1 27 2 134 1 283 4 201 3 219 1 66 1 184 1 334 5 356 1 116 7 310 2 268 1 189 1 293 1 121 9 360 2 48 1 232 1 170 1 235 1 
100 1 335 1 5 1 
209 1 11 2 5 1 
213 2 76 1 72 2 
319 1 213 1 72 1 24 1 197 1 190 1 76 1 264 1 265 2 352 2 211 1 97 2 
213 1 76 1 72 1 145 1 
212 1 100 1 111 1 104 1 5 1 56 1 173 1 93 1 275 1 137 1 276 1 364 1 318 1 238 1 
213 1 72 1 173 1 
212 1 120 1 19 1 228 1 276 1 
212 2 120 1 100 1 19 1 149 1 5 1 276 2 302 1 
212 1 120 1 276 1 
200 1 212 1 213 1 76 1 72 1 19 1 276 1 145 1 
5 1 
212 2 120 1 100 1 350 1 19 1 149 1 5 1 276 2 
212 5 100 1 52 1 205 1 149 1 106 2 5 1 117 1 292 1 198 1 175 2 262 2 340 1 120 2 272 1 19 2 276 5 91 1 96 1 
335 1 
259 1 213 1 347 1 72 1 56 1 57 1 284 1 275 1 137 1 364 1 
319 1 345 1 322 1 265 1 72 1 352 1 97 1 
213 1 322 1 72 3 
72 1 
284 1 213 1 72 1 57 1 
213 1 345 1 322 1 72 2 57 1 
259 1 322 1 72 1 56 1 339 1 275 1 137 1 364 1 238 1 
345 1 322 1 72 1 
213 1 72 1 57 1 
319 1 265 1 352 1 97 1 
319 1 265 1 352 1 97 1 
0 1 342 1 295 1 330 1 81 1 358 1 286 2 365 1 
72 1 82 1 
259 1 213 1 345 1 304 1 322 2 53 1 72 4 56 1 57 1 339 1 275 1 137 1 364 1 238 1 
72 1 
306 1 49 1 
306 1 49 1 
112 1 71 1 
112 1 71 1 
112 1 71 1 
306 1 49 1 222 1 
306 1 49 1 281 1 
328 1 306 2 112 1 71 1 49 2 64 1 
306 1 49 1 222 1 
306 1 49 1 222 1 
306 1 49 1 14 1 
306 1 49 1 14 1 
306 1 49 1 14 1 
257 2 212 2 147 2 348 1 206 1 73 2 226 3 5 1 314 2 328 1 306 2 296 1 47 1 297 2 79 1 351 1 20 1 49 2 276 2 
258 1 212 1 257 1 289 1 147 1 128 1 130 1 72 2 73 1 226 1 281 1 306 1 252 1 79 1 297 1 110 1 49 1 276 1 221 1 
232 1 170 1 134 1 
16 1 232 1 170 1 
294 1 16 1 181 1 232 3 133 1 134 2 
294 1 16 1 232 2 236 1 133 1 134 1 
294 2 16 1 232 2 133 1 134 1 
212 5 258 1 100 1 242 1 128 1 323 1 106 1 149 1 5 2 198 3 175 1 262 1 11 3 12 1 13 2 329 1 34 2 221 1 139 1 309 2 115 1 207 1 188 1 117 2 120 1 43 1 44 1 209 1 19 4 94 1 276 5 96 1 
258 4 212 9 100 1 242 3 129 1 149 1 106 2 5 5 198 8 177 5 175 2 262 2 29 1 90 1 11 9 12 3 13 6 329 2 247 1 333 1 139 1 309 6 207 3 188 2 117 6 228 5 120 6 43 3 44 3 272 1 209 3 18 1 19 7 276 9 96 1 
212 3 258 1 100 1 242 1 106 1 5 3 198 3 175 1 262 1 11 4 12 1 13 2 329 1 34 1 309 2 115 1 207 1 188 1 117 2 44 1 43 1 209 2 272 1 19 2 94 1 276 3 
212 4 258 2 100 1 242 2 106 1 5 4 198 5 175 1 262 1 11 7 12 2 13 4 329 1 34 2 247 1 333 1 309 4 115 1 207 2 188 1 117 4 44 2 43 2 209 3 272 1 18 1 19 3 94 1 276 4 
62 1 335 1 6 1 
17 1 6 1 
54 1 
6 1 174 1 
214 1 62 2 142 1 6 3 174 1 42 1 
6 1 174 1 42 1 
25 1 6 1 
101 4 242 1 346 7 2 1 70 1 141 1 105 1 207 1 312 2 132 2 270 3 250 1 180 3 109 1 253 1 136 1 37 1 
101 4 242 1 346 7 2 1 70 1 141 1 105 1 207 1 312 2 132 2 270 3 250 1 180 3 109 1 253 1 136 1 37 1 
239 1 101 4 242 1 346 7 2 1 70 1 141 1 105 1 207 1 312 2 132 2 270 3 250 1 180 3 109 1 253 1 136 1 37 1 
101 16 2 1 346 31 242 4 3 1 105 2 132 3 88 4 180 15 179 1 109 2 12 3 32 1 330 1 136 2 286 2 220 1 37 2 70 1 141 1 248 1 207 4 312 5 358 1 270 10 342 1 250 5 44 3 43 3 45 1 253 1 361 3 255 1 81 1 
101 5 242 1 346 9 105 1 132 2 180 4 307 1 109 1 32 1 330 2 136 1 286 4 37 1 70 1 141 1 207 1 312 3 358 2 270 4 342 2 250 1 253 1 362 1 81 2 
22 1 126 1 241 1 260 2 148 1 196 1 131 1 199 1 134 1 27 1 217 1 181 1 263 1 265 1 352 1 33 1 354 1 334 1 16 1 40 1 116 1 293 1 341 1 121 2 360 1 232 2 144 1 299 1 170 1 97 1 
22 1 99 1 126 1 241 1 260 3 148 1 244 1 131 1 199 1 134 1 27 1 217 1 181 1 265 1 352 1 65 1 354 1 334 1 16 1 40 1 116 2 293 1 341 1 121 3 360 1 232 2 144 1 299 1 170 1 97 1 
22 1 126 1 241 1 260 2 148 1 244 1 199 1 134 1 217 1 181 1 265 1 352 1 65 1 354 1 334 1 16 1 116 2 293 1 341 1 121 2 232 2 144 1 299 1 170 1 97 1 
319 1 22 1 99 1 126 2 260 1 148 2 4 1 6 1 174 1 27 1 31 1 265 1 352 1 354 1 353 1 288 1 38 1 293 2 160 1 341 2 121 1 360 1 97 1 
22 1 126 1 260 1 148 1 244 1 196 1 131 1 134 1 27 1 217 1 181 1 265 1 352 1 33 1 354 1 16 1 40 1 293 1 341 1 121 1 360 1 232 2 144 1 299 1 170 1 97 1 
273 1 
319 2 100 1 104 1 324 1 149 3 106 1 150 1 5 2 151 1 6 1 56 1 198 2 58 2 156 1 10 1 11 2 111 1 117 2 159 1 160 1 120 6 161 2 75 2 163 1 209 2 83 1 123 1 212 5 22 1 174 1 173 1 175 1 28 2 262 1 89 2 216 2 30 1 218 1 31 1 265 2 352 2 137 1 354 1 39 4 188 1 357 1 93 1 233 2 275 1 276 5 364 1 96 1 318 1 97 2 238 1 
212 3 104 1 150 1 149 1 151 1 56 1 173 1 350 1 10 1 137 1 111 1 39 2 93 1 120 2 161 1 163 1 275 1 276 3 364 1 123 1 318 1 238 1 
212 3 100 1 104 1 150 1 149 1 151 1 5 1 56 1 173 1 350 1 10 1 137 1 111 1 39 3 93 1 120 1 163 1 75 1 275 1 276 3 364 1 123 1 318 1 238 1 
212 3 100 1 104 1 149 1 150 1 151 1 5 1 56 1 173 1 58 1 350 1 10 1 137 1 111 1 39 3 93 1 120 2 161 1 163 1 75 1 275 1 276 3 364 1 123 1 318 1 238 1 
100 5 104 1 149 3 150 1 106 1 151 1 5 5 55 1 56 1 198 1 58 4 10 1 67 1 111 1 117 1 159 1 120 7 161 4 163 1 75 4 165 1 209 2 123 1 212 5 173 1 175 1 262 1 28 2 216 2 89 2 350 1 30 1 308 1 137 1 35 1 39 6 93 1 275 1 233 2 276 5 364 1 318 1 96 1 238 1 
100 1 104 1 324 1 106 1 150 1 149 2 151 1 5 2 56 1 198 1 58 2 10 1 11 2 111 1 117 1 159 1 120 4 161 2 163 1 75 2 209 2 123 1 212 4 173 1 175 1 262 1 28 2 216 2 89 2 30 1 137 1 39 4 93 1 275 1 233 2 276 4 364 1 318 1 96 1 238 1 
212 4 100 1 104 1 149 2 150 1 106 1 5 1 55 1 151 1 56 1 198 1 173 1 175 1 28 2 262 1 58 2 89 2 216 2 30 1 10 1 137 1 67 1 111 1 39 4 117 1 159 1 93 1 120 4 161 2 75 2 163 1 165 1 209 2 233 2 275 1 276 4 364 1 123 1 318 1 96 1 238 1 
212 4 100 1 104 1 149 2 150 1 106 1 5 1 55 1 151 1 56 1 198 1 173 1 175 1 28 2 262 1 58 2 89 2 216 2 30 1 10 1 137 1 67 1 111 1 39 4 117 1 159 1 93 1 120 4 161 2 75 2 163 1 165 1 209 2 233 2 275 1 276 4 364 1 123 1 318 1 96 1 238 1 
212 4 100 1 280 1 104 1 149 2 150 1 106 1 5 1 55 1 151 1 56 1 198 1 173 1 176 1 175 1 28 2 262 1 58 2 10 1 11 2 137 1 111 1 39 4 291 2 117 1 159 1 93 1 120 4 161 2 193 1 75 2 163 1 233 2 275 1 169 2 276 4 364 1 123 1 318 1 96 1 238 1 
212 4 100 1 104 1 149 2 106 1 150 1 5 1 55 1 151 1 56 1 198 1 173 1 175 1 28 2 262 1 89 2 216 2 58 3 30 1 10 1 137 1 35 1 67 1 111 1 39 5 117 1 159 1 93 1 120 5 161 3 163 1 75 3 165 1 209 2 233 2 275 1 276 4 364 1 123 1 96 1 318 1 238 1 
212 4 100 1 104 1 149 2 106 1 150 1 5 1 55 1 151 1 56 1 198 1 173 1 175 1 28 2 262 1 89 2 216 2 58 3 30 1 10 1 137 1 35 1 67 1 111 1 39 5 117 1 159 1 93 1 120 5 161 3 163 1 75 3 165 1 209 2 233 2 275 1 276 4 364 1 123 1 96 1 318 1 238 1 
100 1 280 1 104 1 324 1 106 1 150 1 149 2 151 1 5 1 56 1 198 1 58 2 10 1 11 2 111 1 291 2 117 1 159 1 120 4 161 2 163 1 75 2 169 2 123 1 212 4 173 1 175 1 262 1 28 2 137 1 39 4 93 1 275 1 233 2 276 4 364 1 318 1 96 1 238 1 
0 1 101 2 346 2 70 1 141 1 207 1 335 1 312 1 132 1 358 1 270 1 295 1 342 1 253 1 81 1 330 1 136 1 286 2 37 1 365 1 
0 1 101 1 346 2 224 1 187 1 208 1 358 1 88 1 295 1 342 1 180 1 361 1 81 1 330 1 286 2 
0 1 101 1 346 2 345 1 322 1 72 1 208 1 358 1 194 1 271 1 295 1 342 1 166 1 180 1 81 1 330 1 50 1 286 2 
319 1 0 1 346 1 345 1 127 1 322 1 72 1 225 1 24 1 208 1 358 1 194 1 295 1 342 1 180 1 182 1 265 1 352 1 81 1 330 1 286 2 97 1 
319 1 0 1 101 1 185 1 346 1 227 1 358 1 271 1 295 1 342 1 265 1 352 1 81 1 330 1 286 2 97 1 
0 1 213 1 101 1 242 1 346 2 207 1 72 1 208 1 358 1 57 1 295 1 342 1 43 1 44 1 195 1 180 1 12 1 81 1 330 1 286 2 
0 1 101 1 346 1 207 1 358 1 338 1 295 1 342 1 43 1 81 1 330 1 286 2 365 1 
0 1 346 1 242 1 267 1 358 1 295 1 342 1 180 1 12 1 81 1 330 1 286 2 365 1 
0 1 101 1 242 1 346 2 207 1 358 1 295 1 342 1 44 1 43 1 180 1 12 1 81 1 330 1 286 2 365 1 
0 1 101 1 185 1 346 1 207 1 358 1 338 1 295 1 342 1 43 1 81 1 330 1 286 2 
0 1 185 1 346 1 242 1 267 1 358 1 295 1 342 1 180 1 12 1 81 1 330 1 286 2 
0 1 101 1 185 1 242 1 346 2 207 1 358 1 295 1 342 1 44 1 43 1 180 1 12 1 81 1 330 1 286 2 
0 1 101 1 242 1 346 2 207 1 358 1 295 1 342 1 44 1 43 1 180 1 12 1 81 1 330 1 286 2 
319 1 265 1 352 1 24 1 97 1 
319 1 265 1 352 1 107 1 97 1 
0 1 101 1 242 1 346 2 207 1 208 1 358 1 295 1 342 1 44 1 43 1 180 1 12 1 81 1 330 1 286 2 
263 1 265 1 225 1 352 1 24 1 97 1 
0 1 213 1 101 1 242 1 346 2 207 1 72 1 208 1 358 1 57 1 153 1 295 1 342 1 43 1 44 1 180 1 12 1 81 1 330 1 286 2 
240 2 101 9 346 19 242 3 3 1 243 1 245 1 88 2 246 1 180 10 307 1 12 3 330 2 286 4 36 1 207 3 312 3 358 2 270 6 164 1 342 2 250 3 44 3 43 3 343 1 274 1 361 1 255 1 168 2 81 2 
240 4 101 14 242 2 346 26 3 2 243 1 245 1 26 1 88 2 180 12 307 1 12 2 32 2 330 3 15 1 286 6 207 3 312 2 358 3 270 4 119 1 164 2 342 3 250 2 44 3 43 3 343 1 274 2 361 2 168 1 81 3 316 1 237 1 256 1 
101 20 240 4 242 5 3 3 243 1 245 1 59 1 12 4 330 3 286 6 15 1 70 1 207 5 119 1 342 3 164 2 250 4 343 1 253 1 255 1 81 3 168 1 256 1 346 41 26 1 132 1 88 4 180 21 307 1 32 1 136 1 36 1 37 1 141 1 312 4 358 3 270 8 43 4 44 4 274 1 361 3 316 1 237 1 
240 4 101 20 346 38 242 4 3 3 243 1 245 1 132 1 26 1 88 4 59 1 180 18 307 1 12 3 32 2 330 4 136 1 15 1 286 8 36 1 37 1 70 1 141 1 207 5 312 4 358 4 119 1 270 7 164 2 342 4 250 3 44 4 43 4 343 1 253 1 274 1 361 3 255 1 168 1 81 4 316 1 237 1 256 1 
240 4 101 27 346 52 242 8 3 2 243 1 245 1 132 1 26 1 88 4 180 25 285 2 307 1 12 7 32 1 330 2 136 1 15 1 286 4 37 1 70 1 141 1 207 8 312 7 358 2 119 1 270 14 164 1 342 2 250 7 44 7 43 7 343 1 253 1 274 1 361 4 255 2 168 1 81 2 316 1 237 1 256 1 
257 1 328 1 306 1 147 1 47 1 297 1 348 1 73 1 313 1 49 1 
130 1 281 1 
257 1 98 1 306 1 147 1 297 1 41 1 73 1 49 1 108 1 
212 1 257 1 147 1 348 1 206 1 73 1 226 2 5 1 314 1 328 1 306 1 296 1 47 1 79 1 297 1 20 1 49 1 276 1 
212 1 257 1 147 1 348 1 206 1 73 1 226 2 5 1 314 1 328 1 306 1 296 1 47 1 79 1 297 1 20 1 49 1 276 1 
212 1 257 1 147 1 348 1 206 1 73 1 226 2 5 1 314 1 328 1 306 1 296 1 47 1 79 1 297 1 20 1 49 1 276 1 
95 1 64 1 222 1 
95 1 64 1 222 1 
140 1 14 1 
140 1 64 1 14 1 
289 1 252 1 
258 1 257 1 212 1 289 1 147 1 128 1 72 2 130 1 73 1 226 1 314 1 281 1 192 1 306 1 252 1 297 1 110 1 19 1 20 1 49 1 276 1 221 1 
95 1 222 1 
140 1 64 1 14 1 
22 1 0 1 101 1 346 2 305 1 6 1 56 2 174 1 282 1 154 1 180 1 265 2 352 2 330 1 137 2 286 2 354 1 183 1 227 1 208 1 337 1 358 1 190 2 191 1 194 1 295 1 342 1 271 1 81 1 364 2 97 2 
22 1 102 1 126 1 16 1 40 1 244 1 134 1 9 1 181 1 263 1 232 2 265 2 352 2 144 1 299 1 170 1 354 1 97 2 51 1 
22 1 126 1 16 1 40 1 244 1 134 1 9 1 181 1 232 2 265 1 352 1 144 1 299 1 170 1 301 1 354 1 97 1 
22 1 319 1 102 1 126 1 278 1 6 1 174 1 160 1 31 1 265 1 352 1 354 1 353 1 97 1 
22 1 102 1 126 1 16 1 40 1 244 1 134 1 9 1 181 1 232 2 265 1 352 1 144 1 299 1 170 1 354 1 97 1 51 1 
320 1 
100 1 205 1 335 1 5 1 117 1 91 1 198 1 
212 1 100 1 106 1 149 1 5 2 198 1 175 1 262 1 216 1 89 1 30 1 11 1 117 1 120 1 209 1 276 1 96 1 
319 1 100 2 1 1 242 2 106 4 149 3 5 8 6 10 198 9 60 2 62 2 11 12 12 2 13 6 204 2 332 2 68 2 205 1 113 1 17 3 207 2 336 2 117 8 120 5 209 6 298 2 21 2 22 3 212 5 25 2 174 3 175 4 262 4 218 1 263 1 135 1 265 3 352 3 91 1 354 4 186 1 309 6 92 2 142 1 311 1 188 2 42 3 229 2 44 2 43 2 276 5 96 4 318 2 97 3 
212 1 100 2 242 2 3 1 149 1 106 2 5 5 26 1 198 8 88 1 175 2 262 2 178 1 218 1 11 6 12 2 13 5 15 1 68 1 309 5 207 2 188 1 336 2 117 5 120 1 119 1 44 2 43 2 251 1 209 3 361 1 276 1 237 1 96 2 256 1 
212 1 213 1 242 1 70 1 72 1 207 1 106 1 336 2 117 1 198 2 175 1 200 1 262 1 8 1 76 1 165 1 276 1 136 1 145 1 96 1 37 1 
100 1 205 1 106 1 117 1 5 1 198 1 175 1 262 1 91 1 96 1 
68 1 242 2 309 5 207 2 336 2 117 5 5 5 198 5 60 1 44 2 43 2 11 10 209 5 12 2 13 5 
212 1 120 1 100 1 149 1 5 1 276 1 
22 1 319 2 212 3 86 1 106 2 149 2 6 1 174 1 198 2 175 2 262 2 218 2 31 1 135 1 265 4 352 4 354 1 311 2 357 1 188 2 117 2 118 1 120 4 160 1 272 1 276 3 83 1 96 1 97 4 
319 1 213 1 76 1 264 1 265 1 72 1 352 1 24 1 97 1 
100 2 309 2 106 1 188 1 117 2 5 4 132 1 198 1 175 1 262 1 218 1 209 2 11 4 13 2 96 1 
257 1 297 1 85 1 
257 1 138 1 47 1 252 1 297 1 
257 1 297 1 85 1 
257 1 297 1 85 1 
257 1 162 1 297 1 
257 1 162 1 297 1 
257 1 162 1 297 1 
257 1 297 1 
306 1 49 1 
101 4 242 1 346 8 70 1 141 1 207 1 312 2 132 1 358 2 270 3 342 2 250 1 180 4 253 1 32 1 81 2 330 2 136 1 286 4 37 1 
101 3 346 6 242 1 70 1 141 1 207 1 335 1 312 2 132 1 270 2 180 3 253 1 136 1 37 1 
101 2 242 1 346 4 261 1 207 1 312 1 358 1 270 2 342 1 250 1 44 1 43 1 180 2 12 1 81 1 330 1 286 2 
101 3 242 1 346 7 3 1 207 1 312 1 88 2 270 2 250 1 44 1 43 1 180 4 12 1 361 1 255 1 
101 7 242 2 346 15 88 1 8 1 180 8 32 1 330 1 136 2 286 2 37 2 70 1 141 1 114 1 187 1 207 2 312 3 358 1 270 6 342 1 250 3 253 1 361 1 81 1 
346 1 180 1 88 1 
101 1 346 1 361 1 
101 3 346 6 242 1 261 1 207 1 312 2 358 1 270 3 342 1 250 1 60 1 44 1 43 1 180 3 12 1 330 1 81 1 286 2 
101 6 346 12 242 2 3 1 26 1 88 1 180 6 307 1 12 2 330 1 286 2 15 1 207 2 312 1 358 1 119 1 270 2 342 1 250 1 44 2 43 2 361 1 81 1 256 1 237 1 
101 3 346 6 242 1 70 1 207 1 312 1 270 2 250 1 180 3 136 1 37 1 
101 1 346 3 141 1 114 1 312 1 358 1 270 2 342 1 250 1 180 2 253 1 32 1 81 1 330 1 136 1 286 2 37 1 
101 5 346 10 242 2 70 1 207 2 312 3 358 1 8 1 270 5 342 1 250 2 180 5 307 1 330 1 81 1 136 2 286 2 37 2 
101 2 346 2 207 1 358 1 270 1 342 1 250 1 43 1 307 1 81 1 330 1 286 2 
101 2 242 1 346 4 207 1 312 1 358 1 270 2 342 1 250 1 44 1 43 1 180 2 12 1 307 1 81 1 330 1 286 2 
101 1 346 3 114 1 312 1 358 3 270 2 342 3 250 1 180 2 307 1 32 1 81 3 330 3 136 1 286 6 36 1 37 1 
101 16 346 34 242 5 3 1 261 1 132 1 88 4 179 1 180 18 307 1 12 3 32 2 330 5 136 3 220 1 286 10 36 1 37 3 70 2 141 1 114 1 207 5 312 7 358 5 270 12 342 5 250 5 44 3 43 3 45 1 253 1 361 3 255 1 81 5 
101 4 242 1 346 8 3 1 132 1 88 1 180 4 307 1 330 1 136 1 286 2 37 1 70 1 141 1 207 1 312 2 358 1 119 1 270 2 342 1 253 1 361 1 81 1 
101 6 242 1 346 11 3 1 261 1 132 1 88 2 180 5 307 1 330 2 136 1 286 4 37 1 70 1 141 1 207 2 312 2 358 2 119 1 270 3 342 2 250 1 44 1 43 1 253 1 361 1 255 1 81 2 
101 9 346 19 242 3 3 1 261 1 132 1 26 1 88 1 180 10 307 1 12 2 32 1 330 3 136 1 15 1 286 6 37 1 70 1 141 1 207 3 312 3 358 3 119 1 270 4 342 3 250 1 44 2 43 2 253 1 361 1 81 3 256 1 237 1 
101 10 346 17 242 2 3 1 261 1 132 1 26 1 88 1 180 7 307 1 12 1 32 1 330 3 136 1 286 6 15 1 37 1 70 1 141 1 207 3 312 3 358 3 119 1 270 5 342 3 250 2 44 2 43 2 253 1 361 1 81 3 256 1 237 1 
101 4 242 1 346 8 3 1 132 1 88 1 180 4 307 1 330 1 136 1 286 2 37 1 70 1 141 1 207 1 312 2 358 1 119 1 270 2 342 1 253 1 361 1 81 1 
101 6 346 12 242 2 3 1 26 1 88 1 180 6 307 1 12 2 330 1 286 2 15 1 207 2 312 1 358 1 119 1 270 2 342 1 250 1 44 2 43 2 361 1 81 1 256 1 237 1 
101 10 346 18 242 2 3 1 261 1 132 1 26 1 88 1 180 8 307 1 12 1 32 2 330 4 136 1 15 1 286 8 37 1 70 1 141 1 207 3 312 3 358 4 119 1 270 5 342 4 250 2 44 2 43 2 253 1 361 1 81 4 237 1 256 1 
101 9 346 16 242 2 3 1 26 1 88 1 180 7 307 1 12 2 32 2 330 4 15 1 286 8 36 1 207 3 312 3 358 4 119 1 270 6 342 4 250 3 44 3 43 3 361 1 81 4 237 1 256 1 
101 3 242 1 346 7 70 1 141 2 207 1 312 3 270 6 250 3 180 4 253 1 136 3 37 3 
101 10 346 18 242 2 3 1 132 1 26 1 88 1 180 8 307 1 12 1 32 2 330 4 136 1 15 1 286 8 36 1 37 1 70 1 141 1 207 3 312 3 358 4 119 1 270 4 342 4 250 1 44 2 43 2 253 1 361 1 81 4 237 1 256 1 
339 1 347 1 103 1 137 1 364 1 56 1 238 1 
287 1 331 1 266 1 347 1 103 1 56 1 143 1 339 1 363 1 137 1 364 1 238 1 
22 1 319 1 160 1 31 1 265 1 335 1 352 1 6 1 354 1 174 1 97 1 
319 1 22 1 279 1 322 1 72 1 6 1 249 1 174 1 42 1 265 1 352 1 354 1 97 1 
22 1 279 1 322 1 72 1 311 1 6 1 249 1 174 1 42 1 265 1 352 1 354 1 97 1 
22 1 279 1 322 1 265 1 72 1 157 1 352 1 311 1 6 1 174 1 354 1 42 1 97 1 
22 1 212 2 319 1 100 1 25 1 5 1 6 4 174 1 327 1 62 1 265 3 352 3 203 1 354 1 223 1 17 1 311 1 229 1 42 1 120 1 276 2 318 1 97 3 
319 1 212 2 22 1 100 1 332 1 17 1 311 1 5 1 25 1 6 4 174 1 42 1 229 1 120 1 62 1 265 3 352 3 203 1 276 2 318 1 354 1 97 3 
22 1 61 1 265 1 352 1 354 1 97 1 
319 2 22 2 142 1 244 1 87 1 269 1 315 1 6 3 190 1 174 2 42 1 230 1 61 1 46 1 263 1 265 6 352 7 317 1 354 3 183 1 97 7 
322 1 72 1 
319 1 212 3 100 1 106 2 149 1 5 1 6 2 198 1 175 2 262 2 62 1 135 1 265 1 352 1 91 1 204 1 332 1 205 1 17 1 117 1 120 2 19 1 298 1 276 3 96 2 318 1 97 1 21 1 
22 1 113 1 142 1 6 2 174 1 42 1 61 1 62 1 263 1 265 2 352 2 354 2 97 2 
125 1 319 1 22 1 6 1 174 1 160 1 31 1 263 1 265 4 352 4 203 1 354 1 97 4 
22 1 321 1 69 1 290 1 311 1 269 1 315 1 6 1 174 1 42 1 265 2 352 2 354 2 97 2 
22 1 319 1 16 1 232 1 265 1 144 1 352 1 170 1 354 1 97 1 
22 1 263 1 244 1 265 2 352 2 6 1 354 1 174 1 183 1 282 1 97 2 
125 1 319 1 22 2 311 1 6 3 174 2 160 1 230 1 31 1 263 1 265 4 352 5 317 1 354 2 97 5 183 1 
125 1 319 1 22 2 311 1 6 3 174 2 160 1 31 1 263 1 265 4 352 5 202 1 317 1 354 2 97 5 183 1 
22 1 319 1 279 1 322 1 265 1 72 1 157 1 352 1 6 1 174 1 354 1 42 1 97 1 
22 1 142 1 311 1 269 1 315 1 6 1 174 1 42 1 46 1 265 1 352 1 354 2 97 1 
355 1 359 1 167 1 300 1 
212 1 355 1 277 1 78 1 359 1 167 1 19 1 300 1 276 1 7 1 
355 1 305 1 167 1 137 1 337 1 300 1 364 1 56 1 191 1 
277 1 167 1 7 1 
241 1 334 1 335 1 199 1 
121 1 241 1 334 1 260 1 360 1 199 1 27 1 
293 1 260 1 148 1 
241 1 334 1 303 1 260 3 196 1 325 1 27 1 199 1 121 3 231 1 360 1 344 2 
121 2 241 1 334 1 260 2 360 1 116 1 310 1 199 1 27 1 
334 1 260 1 196 1 27 1 134 1 283 1 121 1 360 1 232 1 170 1 66 1 
121 1 241 1 334 1 260 1 360 1 196 1 27 1 
121 1 241 2 260 1 360 1 196 1 199 1 27 1 
241 1 334 1 260 2 172 1 196 1 158 1 27 2 121 2 77 1 360 2 
184 1 241 1 334 2 260 3 116 2 196 1 199 1 27 1 283 1 121 3 201 1 360 1 219 1 
241 1 334 1 16 1 260 2 116 1 196 1 199 1 27 1 134 1 121 2 360 1 181 1 232 2 63 1 170 1 
241 1 334 2 260 4 116 2 196 1 310 1 199 1 27 2 283 1 121 4 201 1 360 2 235 1 
121 1 241 1 334 1 260 1 360 1 196 1 199 1 27 1 
241 2 303 1 334 3 260 4 116 2 325 1 199 2 27 1 283 1 349 1 121 4 201 1 360 1 344 1 
121 2 241 1 334 1 260 2 360 1 116 1 196 1 80 1 74 1 189 1 199 1 27 1 
241 1 334 1 303 2 260 3 196 1 325 1 27 1 199 1 121 3 360 1 124 1 344 2 
334 2 210 1 152 2 84 1 
121 1 260 1 360 1 196 1 326 1 27 1 
184 1 121 2 241 1 334 1 260 2 360 1 116 1 196 1 199 1 27 1 
23 1 
121 1 241 1 334 1 260 1 360 1 196 1 199 1 27 1 
184 1 121 3 241 1 334 1 260 3 360 1 116 1 196 1 344 1 199 1 27 1 
283 1 349 1 201 1 334 1 
241 1 334 1 

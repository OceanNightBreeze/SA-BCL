#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 244 1 245 2 186 1 224 1 24 9 188 1 26 1 332 1 295 9 31 2 135 4 276 2 298 1 115 1 171 1 86 6 61 2 232 1 214 1 90 2 197 2 347 1 95 3 120 5 265 2 96 1 240 1 
205 1 244 1 245 2 186 1 224 1 24 9 188 1 26 1 332 1 31 2 295 9 135 4 276 2 298 1 115 1 171 1 86 6 61 2 232 1 214 1 90 2 197 2 347 1 95 3 120 5 96 1 265 2 240 1 
205 1 244 1 245 2 186 1 224 1 24 10 188 1 26 1 332 1 31 2 295 10 135 5 276 2 298 1 115 1 171 1 86 7 61 2 232 1 214 1 90 2 197 2 347 1 95 4 120 6 96 1 265 2 240 1 
205 1 244 1 245 2 186 1 224 1 24 7 188 1 26 1 332 1 31 2 295 7 135 3 276 2 298 1 115 1 86 4 61 2 232 1 214 1 90 2 197 2 347 1 95 2 120 4 96 1 265 1 240 1 
276 1 245 1 115 1 171 1 86 3 61 1 90 1 224 1 24 4 347 1 26 1 95 1 120 3 265 2 240 1 295 4 31 1 135 2 
276 1 298 1 245 1 116 1 61 1 90 1 224 1 186 1 24 2 197 1 120 1 347 1 26 1 227 1 295 2 210 1 
86 1 61 2 214 1 90 2 224 1 24 3 197 1 347 1 26 1 95 1 120 2 295 3 135 1 
205 1 245 1 224 1 24 9 26 1 295 9 31 1 135 4 276 1 170 1 115 1 171 1 86 7 61 2 232 1 214 1 90 2 197 1 347 1 95 3 120 5 122 1 265 2 240 1 
205 1 245 1 224 1 24 9 26 1 295 9 31 1 135 4 276 1 170 1 115 1 171 1 86 7 61 2 232 1 214 1 90 2 197 1 347 1 95 3 120 5 122 1 265 2 240 1 
104 1 112 1 198 1 
112 1 249 2 15 1 
105 2 46 2 312 2 281 1 258 2 62 2 63 1 219 2 
46 3 156 2 354 1 356 1 309 1 157 1 271 2 76 1 105 2 312 2 275 1 6 1 191 1 364 1 7 1 367 1 337 1 229 2 317 1 258 2 299 2 193 1 259 1 141 1 234 1 233 1 62 3 63 1 377 1 91 1 144 1 378 2 147 1 281 1 218 1 219 2 18 1 
105 1 46 1 312 1 258 1 59 1 38 1 62 1 63 1 21 1 219 1 
277 1 112 1 285 1 46 1 207 1 62 1 38 1 322 1 1 1 198 1 312 1 362 1 30 1 314 1 
277 2 112 1 285 1 46 1 207 1 258 1 62 1 38 1 1 2 105 1 198 1 312 1 362 1 219 1 314 1 
277 1 293 1 176 1 108 1 1 1 
277 2 112 1 324 1 198 1 371 1 176 1 108 1 1 2 
277 1 108 1 1 1 
277 1 101 1 46 1 258 1 59 1 38 1 63 1 62 1 21 1 1 1 105 1 312 1 176 1 219 1 
112 1 
277 2 112 1 324 1 198 1 176 1 108 1 60 1 1 2 
277 5 112 1 243 1 113 1 48 1 342 1 194 1 235 1 1 5 324 1 248 2 198 1 41 2 176 2 349 1 178 1 239 2 108 2 111 1 
229 1 46 2 258 1 259 1 141 1 356 1 309 1 157 1 62 2 271 1 76 1 91 1 158 1 378 1 346 1 27 1 312 1 6 1 364 1 219 1 
104 1 281 1 
46 2 258 1 62 2 143 1 105 1 312 2 281 2 167 1 219 1 
100 1 158 1 370 1 
229 1 8 1 46 1 259 1 141 1 356 1 309 1 62 1 271 1 157 1 76 1 91 1 378 1 281 1 6 1 364 1 
105 1 27 1 46 3 312 3 281 1 258 3 62 3 219 3 
46 1 312 1 258 1 59 1 38 1 62 1 219 1 
105 1 46 1 312 1 258 1 38 1 62 1 167 1 219 1 143 1 
285 1 46 4 207 1 156 1 354 1 222 1 356 1 309 1 157 1 271 1 76 1 1 1 292 1 105 2 312 3 27 1 362 1 275 1 6 1 191 1 364 1 7 1 167 1 367 1 314 1 337 1 277 1 229 1 317 1 258 3 299 2 193 1 259 1 141 1 233 1 62 4 38 1 63 1 91 1 378 1 346 1 281 1 219 3 18 1 
46 2 312 2 27 1 281 1 4 1 258 1 30 1 62 2 219 1 
277 1 112 1 285 1 46 3 207 1 258 3 38 1 62 3 1 1 292 1 105 1 346 1 27 2 312 3 362 1 29 1 167 1 314 1 219 3 
100 1 46 2 258 2 62 2 158 1 105 1 27 1 312 2 167 1 219 2 
229 1 46 1 259 1 356 1 141 1 309 1 62 1 271 1 157 1 76 1 91 1 378 1 281 1 6 1 364 1 
229 1 46 1 71 1 341 1 259 1 356 1 141 1 309 1 62 1 271 1 157 1 378 1 281 1 6 1 364 1 
100 2 206 1 181 1 354 1 156 4 288 1 158 2 159 1 191 2 192 1 7 1 367 1 337 1 136 1 318 1 317 1 370 2 299 2 193 1 145 1 147 2 325 1 326 1 241 1 
285 1 46 1 312 1 258 1 73 1 38 1 62 1 219 1 
46 5 211 1 258 4 62 5 105 1 27 2 312 5 346 1 281 1 4 1 124 1 30 1 167 1 219 4 
46 2 312 2 258 2 73 1 59 1 38 1 62 2 219 2 
301 1 204 1 
301 1 204 1 
213 1 16 1 
213 1 16 1 
213 1 16 1 
301 1 173 1 204 1 
311 1 301 1 204 1 
279 1 301 2 319 1 213 1 16 1 204 2 
301 1 173 1 204 1 
301 1 173 1 204 1 
301 1 355 1 204 1 
301 1 355 1 204 1 
301 1 355 1 204 1 
242 1 57 2 277 2 112 1 152 2 74 1 185 1 174 1 236 1 1 2 279 1 301 2 106 2 302 2 202 3 381 1 327 1 220 2 204 2 
152 1 46 2 74 1 223 1 1 1 311 1 312 2 25 1 163 1 131 1 106 1 57 1 277 1 258 2 62 2 301 1 66 1 281 1 302 1 202 1 351 1 97 1 219 2 204 1 
276 1 245 1 31 1 
276 1 245 1 210 1 
9 1 245 3 310 1 172 1 31 2 210 1 
334 1 245 2 310 1 172 1 31 1 210 1 
245 2 172 1 310 2 31 1 210 1 
50 1 1 5 159 1 248 1 78 1 25 1 163 1 249 3 189 1 108 1 294 2 32 1 277 5 318 1 112 2 342 1 194 3 235 2 324 1 198 1 41 1 66 1 176 4 149 1 15 1 380 2 201 1 239 1 326 1 179 2 241 1 180 1 
48 1 1 9 159 3 293 5 248 2 78 2 249 9 189 2 56 1 108 6 294 6 277 9 318 3 112 5 212 1 85 5 342 1 194 8 344 1 300 1 235 6 345 1 324 1 198 1 66 4 41 2 176 7 149 1 15 3 380 6 201 3 239 2 326 3 241 3 151 1 
48 1 1 3 159 1 248 1 78 1 189 1 249 4 294 2 32 1 277 3 318 1 112 3 194 3 235 2 198 1 41 1 66 1 176 2 15 2 201 1 380 2 239 1 326 1 179 1 241 1 180 1 
48 1 1 4 159 2 248 1 78 1 249 7 189 1 294 4 277 4 32 1 318 2 112 4 194 5 344 1 300 1 235 4 198 1 41 1 66 2 176 3 15 3 380 4 201 2 239 1 326 2 179 2 241 2 180 1 151 1 
104 1 141 1 140 1 
119 1 141 1 
361 1 
141 1 309 1 
140 2 141 3 309 1 157 1 365 1 315 1 
141 1 309 1 157 1 
141 1 65 1 
206 2 318 1 36 1 306 1 156 6 372 1 331 1 330 1 147 3 325 1 217 1 200 1 191 3 241 1 228 1 296 1 284 1 
206 2 318 1 36 1 306 1 156 6 372 1 331 1 330 1 147 3 325 1 217 1 200 1 191 3 241 1 228 1 296 1 284 1 
206 2 318 1 36 1 306 1 156 6 372 1 53 1 331 1 330 1 147 3 325 1 217 1 200 1 191 3 241 1 228 1 296 1 284 1 
206 9 306 2 155 1 156 30 330 2 331 5 289 1 226 1 159 3 107 4 191 15 336 1 296 1 367 1 228 2 253 1 337 1 317 1 318 4 36 1 372 1 299 2 260 3 193 1 147 15 325 4 200 1 217 2 201 3 267 1 68 1 326 3 241 4 284 2 
206 3 306 1 156 8 331 1 330 1 289 1 191 4 366 1 367 2 228 1 296 1 337 2 318 1 317 2 36 1 372 1 299 4 193 2 39 1 147 4 325 2 217 1 241 1 284 1 
245 2 129 1 271 1 246 1 224 1 24 2 26 1 208 1 6 1 364 1 31 1 295 2 110 1 210 1 368 1 276 1 229 1 9 1 86 1 61 1 373 1 343 1 90 1 378 1 197 1 120 1 347 1 280 1 238 1 67 1 
245 2 129 1 271 1 24 3 26 1 3 1 208 1 6 1 364 1 31 1 295 3 110 1 210 1 368 1 276 1 229 1 9 1 86 2 61 1 373 1 343 1 90 1 378 1 197 1 120 1 347 1 280 1 67 1 266 1 352 1 
245 2 129 1 271 1 24 2 26 1 3 1 6 1 364 1 295 2 31 1 110 1 210 1 368 1 229 1 276 1 9 1 86 2 373 1 343 1 197 1 378 1 120 1 347 1 280 1 266 1 
229 1 47 1 153 1 61 1 259 1 141 1 129 2 309 1 343 2 374 1 271 1 90 1 24 1 197 2 378 1 280 2 28 1 165 1 6 1 364 1 295 1 168 1 352 1 
245 2 129 1 271 1 224 1 24 1 208 1 6 1 364 1 31 1 295 1 110 1 210 1 368 1 276 1 229 1 9 1 61 1 373 1 343 1 90 1 378 1 197 1 280 1 238 1 67 1 266 1 
182 1 
99 2 285 1 46 1 207 1 329 4 1 5 160 2 248 1 249 2 335 2 165 1 108 6 5 1 6 1 255 1 168 1 112 2 10 1 342 1 259 2 62 1 350 2 177 1 15 2 123 2 69 2 309 1 271 2 187 1 78 1 312 1 362 1 134 1 364 1 30 1 314 1 277 5 229 2 231 1 320 1 141 1 194 2 38 1 375 1 235 2 322 1 324 3 198 1 378 2 41 1 199 1 379 1 203 2 43 1 239 1 
277 3 285 1 207 1 46 1 60 1 320 1 329 2 38 1 62 1 375 1 1 3 322 1 324 1 160 1 312 1 199 1 362 1 379 1 177 1 108 2 30 1 314 1 
277 3 112 1 285 1 207 1 46 1 60 1 320 1 329 3 38 1 62 1 375 1 1 3 322 1 324 1 198 1 312 1 199 1 335 1 362 1 379 1 177 1 108 1 30 1 314 1 
99 1 285 1 46 1 207 1 329 3 1 3 160 1 312 1 362 1 335 1 108 2 30 1 314 1 277 3 112 1 60 1 320 1 62 1 38 1 375 1 322 1 324 1 198 1 199 1 177 1 379 1 
99 4 285 1 207 1 46 1 329 6 1 5 160 4 248 1 335 4 164 1 108 7 112 5 10 1 342 1 60 1 62 1 118 1 177 1 350 2 123 2 15 2 269 1 69 2 187 1 312 1 362 1 30 1 314 1 277 5 320 1 194 1 38 1 375 1 235 1 322 1 324 3 198 5 41 1 199 1 379 1 150 1 239 1 283 1 203 2 
99 2 69 2 285 1 46 1 207 1 329 4 1 4 187 1 160 2 248 1 249 2 312 1 335 2 362 1 108 4 30 1 314 1 255 1 277 4 112 2 10 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 350 2 177 1 379 1 15 2 123 2 203 2 239 1 
99 2 69 2 285 1 46 1 207 1 329 4 1 4 187 1 160 2 248 1 312 1 335 2 362 1 164 1 108 4 30 1 314 1 277 4 112 1 10 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 350 2 177 1 379 1 15 2 123 2 203 2 283 1 239 1 269 1 
99 2 69 2 285 1 46 1 207 1 329 4 1 4 187 1 160 2 248 1 312 1 335 2 362 1 164 1 108 4 30 1 314 1 277 4 112 1 10 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 350 2 177 1 379 1 15 2 123 2 203 2 283 1 239 1 269 1 
99 2 69 2 285 1 46 1 207 1 329 4 54 2 1 4 273 1 160 2 248 1 249 2 312 1 335 2 362 1 108 4 363 2 30 1 314 1 277 4 112 1 10 1 257 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 177 1 379 1 123 2 283 1 239 1 268 1 
99 3 69 2 285 1 46 1 207 1 329 5 1 4 187 1 248 1 160 3 312 1 164 1 362 1 335 3 108 5 30 1 314 1 277 4 112 1 10 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 350 2 177 1 379 1 150 1 15 2 123 2 203 2 283 1 239 1 269 1 
99 3 69 2 285 1 46 1 207 1 329 5 1 4 187 1 248 1 160 3 312 1 164 1 362 1 335 3 108 5 30 1 314 1 277 4 112 1 10 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 350 2 177 1 379 1 150 1 15 2 123 2 203 2 283 1 239 1 269 1 
99 2 69 2 285 1 46 1 207 1 329 4 54 2 1 4 160 2 248 1 249 2 312 1 335 2 362 1 108 4 363 2 30 1 314 1 255 1 277 4 112 1 10 1 257 1 342 1 320 1 194 1 62 1 38 1 375 1 235 1 322 1 324 2 198 1 41 1 199 1 177 1 379 1 123 2 239 1 
206 1 136 1 337 1 318 1 317 1 36 1 306 1 156 5 354 1 372 1 193 1 299 2 330 1 104 1 281 2 147 2 325 1 191 3 241 1 7 1 367 1 296 1 
206 2 100 3 354 1 156 10 331 1 272 1 158 8 159 2 107 2 191 4 109 1 7 1 367 1 337 1 317 1 318 1 370 8 11 1 299 2 193 1 261 1 260 2 121 1 147 6 325 1 201 2 267 1 326 1 241 2 
100 1 46 2 354 1 156 2 356 1 309 1 75 1 157 1 271 1 184 1 76 1 312 1 27 1 79 1 6 1 275 1 191 1 364 1 7 1 367 1 229 1 337 1 8 1 317 1 258 1 259 1 193 1 261 1 299 2 141 1 62 2 91 1 144 1 378 1 346 1 281 1 147 1 219 1 
100 6 206 7 46 3 156 19 157 2 330 1 331 4 291 2 158 6 159 2 6 2 7 3 296 1 337 3 339 1 258 1 259 1 299 6 261 1 62 3 64 1 346 1 266 1 219 1 18 2 306 1 354 3 307 2 356 2 309 2 271 3 76 2 27 1 312 1 275 1 191 10 364 2 313 2 367 3 229 3 318 3 317 3 370 6 36 1 372 1 193 3 87 2 321 1 141 2 91 2 144 1 378 3 281 2 147 9 325 3 201 2 326 2 241 3 
46 1 354 2 156 2 309 2 271 8 357 1 246 1 312 1 27 1 165 1 6 2 275 1 191 1 364 2 7 2 367 2 254 1 316 1 168 1 136 1 229 8 337 2 317 2 83 1 340 1 258 1 259 2 299 4 193 2 141 3 234 2 262 1 62 1 196 1 144 1 378 7 147 1 266 1 219 1 
206 1 100 1 46 1 354 1 156 3 158 1 159 1 105 1 312 1 191 2 167 1 7 1 367 1 337 1 317 1 338 1 318 1 370 1 258 1 299 2 193 1 261 1 62 1 147 1 325 1 201 1 326 1 241 1 219 1 
206 1 100 1 136 1 337 1 317 1 370 1 156 2 354 1 193 1 299 2 331 1 158 1 159 1 145 1 147 2 241 1 7 1 367 1 
206 1 100 1 136 1 337 1 317 1 318 1 370 1 156 2 354 1 193 1 299 2 158 1 325 1 326 1 191 2 7 1 192 1 367 1 
100 2 206 2 354 1 156 4 331 1 159 1 158 2 191 2 7 1 367 1 337 1 136 1 317 1 318 1 370 2 299 2 193 1 147 2 325 1 201 1 326 1 241 1 
206 1 100 1 337 1 317 1 83 1 370 1 156 2 354 1 193 1 299 2 331 1 158 1 159 1 145 1 147 2 241 1 7 1 367 1 
206 1 100 1 337 1 317 1 318 1 83 1 370 1 156 2 354 1 193 1 299 2 158 1 325 1 326 1 191 2 7 1 192 1 367 1 
100 2 206 2 354 1 156 4 331 1 159 1 158 2 191 2 7 1 367 1 337 1 317 1 318 1 83 1 370 2 299 2 193 1 147 2 325 1 201 1 326 1 241 1 
100 2 206 2 156 4 354 1 331 1 159 1 158 2 191 2 7 1 367 1 337 1 317 1 318 1 370 2 299 2 193 1 147 2 325 1 201 1 326 1 241 1 
46 1 156 2 354 1 356 1 309 1 157 1 271 1 76 1 6 1 275 1 191 1 364 1 7 1 367 1 229 1 337 1 317 1 259 1 193 1 299 2 141 1 62 1 91 1 144 1 378 1 147 1 281 1 18 1 
46 1 156 2 71 1 354 1 356 1 309 1 157 1 271 1 6 1 275 1 191 1 364 1 7 1 367 1 229 1 337 1 317 1 341 1 259 1 193 1 299 2 141 1 62 1 144 1 378 1 147 1 281 1 125 1 
100 2 206 2 354 1 156 4 331 1 159 1 158 2 191 2 7 1 367 1 337 1 317 1 318 1 370 2 299 2 193 1 261 1 147 2 325 1 201 1 326 1 241 1 
206 2 100 2 46 1 156 4 354 1 356 1 309 1 157 1 271 1 331 1 246 1 76 1 158 2 159 1 6 1 191 2 364 1 7 1 367 1 229 1 337 1 318 1 317 1 370 2 87 1 193 1 299 2 141 1 62 1 91 1 378 1 147 2 325 1 201 1 326 1 241 1 18 1 
206 1 100 1 46 1 354 1 156 3 331 1 159 1 158 1 105 1 312 1 191 1 167 1 7 1 367 1 256 1 337 1 318 1 317 1 370 1 258 1 299 2 193 1 261 1 62 1 147 2 201 1 326 1 241 1 219 1 
206 6 154 1 155 1 156 19 331 3 247 1 159 3 80 2 107 2 191 10 366 1 367 2 82 1 337 2 317 2 318 3 114 1 299 4 193 2 260 1 195 1 142 2 92 1 147 9 42 1 325 3 201 3 267 1 326 3 241 3 
206 4 127 1 154 1 308 1 156 26 155 2 51 1 331 2 289 2 247 1 130 1 159 3 80 4 107 2 191 12 366 1 367 3 82 2 337 3 318 2 317 3 114 2 299 6 193 3 260 2 195 1 142 1 376 1 147 14 325 2 201 3 326 2 241 3 17 1 
206 8 127 1 306 1 154 1 308 1 155 3 156 41 51 1 330 1 331 4 289 1 130 1 247 1 159 4 80 4 250 1 107 4 191 22 366 1 296 1 367 3 82 1 337 3 317 3 318 5 114 2 36 1 372 1 299 6 193 3 260 3 195 1 142 1 376 1 147 19 42 1 325 4 201 4 267 1 326 4 241 5 17 1 
206 7 127 1 306 1 154 1 308 1 155 3 156 38 51 1 330 1 331 3 289 2 130 1 247 1 159 4 80 4 250 1 107 4 191 19 366 1 296 1 367 4 82 1 337 4 317 4 318 4 114 2 36 1 372 1 299 8 193 4 260 3 195 1 142 1 376 1 147 19 42 1 325 4 201 4 267 1 326 3 241 5 17 1 
206 10 127 1 306 1 154 1 308 1 155 2 156 42 51 1 330 1 331 5 289 1 130 1 247 1 159 5 80 4 107 3 191 21 109 1 366 1 296 1 367 2 82 1 337 2 318 6 317 2 114 1 36 1 372 1 299 4 193 2 260 3 195 1 142 1 376 1 147 21 325 5 201 5 326 5 267 1 241 6 17 1 
279 1 301 1 57 1 216 1 152 1 106 1 302 1 381 1 174 1 204 1 
311 1 97 1 
301 1 57 1 45 1 152 1 106 1 302 1 278 1 98 1 204 1 
242 1 277 1 57 1 112 1 152 1 74 1 174 1 236 1 1 1 279 1 301 1 106 1 302 1 202 2 381 1 327 1 220 1 204 1 
242 1 277 1 57 1 112 1 152 1 74 1 174 1 236 1 1 1 279 1 301 1 106 1 302 1 202 2 381 1 327 1 220 1 204 1 
242 1 277 1 57 1 112 1 152 1 74 1 174 1 236 1 1 1 279 1 301 1 106 1 302 1 202 2 381 1 327 1 220 1 204 1 
319 1 19 1 173 1 
319 1 19 1 173 1 
49 1 355 1 
319 1 49 1 355 1 
131 1 351 1 
46 2 152 1 223 1 1 1 311 1 25 1 163 1 312 2 131 1 106 1 169 1 277 1 57 1 258 2 62 2 301 1 66 1 281 1 176 1 302 1 202 1 351 1 327 1 97 1 220 1 219 2 204 1 
19 1 173 1 
319 1 49 1 355 1 
46 2 354 1 72 1 156 2 309 1 271 2 357 1 359 1 312 2 6 1 275 1 81 1 191 1 364 1 7 1 367 1 229 2 337 1 317 1 35 1 340 1 138 1 193 1 261 1 299 2 141 1 234 2 62 2 144 1 378 2 147 1 
276 1 229 2 9 1 245 2 103 1 0 1 343 1 271 2 246 1 378 2 266 1 208 1 6 1 364 1 31 1 304 1 210 1 110 1 368 1 
276 1 229 1 297 1 9 1 245 2 0 1 343 1 271 1 378 1 266 1 208 1 6 1 364 1 31 1 210 1 110 1 368 1 
229 1 153 1 139 1 259 1 141 1 309 1 343 1 271 1 378 1 165 1 6 1 364 1 304 1 168 1 
276 1 229 1 9 1 245 2 103 1 0 1 343 1 271 1 378 1 266 1 208 1 6 1 364 1 31 1 304 1 210 1 110 1 368 1 
161 1 
104 1 112 1 243 1 198 1 194 1 235 1 111 1 
277 1 112 2 342 1 194 1 235 1 1 1 187 1 324 1 248 1 198 1 249 1 41 1 350 1 15 1 108 1 239 1 203 1 
243 1 157 3 246 1 1 5 55 2 159 2 248 4 249 12 251 2 108 5 6 3 294 6 111 1 112 8 58 2 342 4 259 1 13 2 65 2 119 3 15 6 303 2 70 1 309 3 271 3 77 2 225 2 78 2 274 1 134 1 364 4 365 1 313 2 314 2 229 3 277 5 33 1 318 2 34 1 89 2 141 10 140 2 194 9 235 8 324 3 198 2 378 3 41 4 282 1 380 6 201 2 239 4 326 2 241 2 
127 1 308 1 155 1 287 1 77 1 1 1 130 1 159 2 248 2 78 1 249 6 108 1 107 1 134 1 294 5 277 1 112 5 318 2 58 2 342 2 260 1 194 8 235 5 376 1 324 1 198 2 41 2 148 1 380 5 15 3 201 2 239 2 326 2 241 2 17 1 
46 1 101 1 306 1 330 1 21 1 77 1 1 1 248 1 105 1 312 1 164 1 277 1 318 1 36 1 258 1 59 1 58 2 342 1 194 2 38 1 62 1 63 1 235 2 117 1 41 1 239 1 241 2 219 1 
243 1 112 1 342 1 194 1 235 1 248 1 198 1 41 1 239 1 111 1 
112 5 318 2 58 2 194 5 235 5 77 1 159 2 249 10 201 2 380 5 15 5 326 2 241 2 294 5 313 1 
277 1 112 1 324 1 198 1 108 1 1 1 
44 1 48 1 70 2 309 1 271 4 1 3 2 1 248 2 78 2 274 1 165 1 5 1 108 4 6 1 364 1 134 2 168 1 229 4 277 3 342 1 259 2 141 1 194 2 235 2 324 2 378 4 41 2 43 1 239 2 
46 3 156 1 354 1 356 1 309 1 271 1 157 1 76 1 105 2 312 2 275 1 6 1 191 1 364 1 7 1 367 1 337 1 229 1 317 1 258 2 299 2 259 1 193 1 141 1 233 1 62 3 63 1 91 1 378 1 281 1 219 2 18 1 
112 4 342 1 194 1 235 2 248 1 78 1 198 2 249 4 41 1 15 2 380 2 239 1 294 2 134 1 284 1 
93 1 106 1 302 1 
106 1 302 1 351 1 381 1 22 1 
93 1 106 1 302 1 
93 1 106 1 302 1 
84 1 106 1 302 1 
84 1 106 1 302 1 
84 1 106 1 302 1 
106 1 302 1 
301 1 204 1 
206 2 337 2 318 1 317 2 36 1 306 1 156 7 372 1 193 2 299 4 331 1 330 1 289 1 147 3 325 1 191 4 241 1 367 2 296 1 
206 1 104 1 318 1 147 2 36 1 306 1 156 5 325 1 372 1 191 3 241 1 330 1 296 1 
206 2 337 1 318 1 317 1 156 4 193 1 299 2 331 1 159 1 14 1 147 2 325 1 201 1 326 1 191 2 241 1 367 1 
147 1 156 2 155 1 260 1 107 1 191 1 
206 7 306 2 156 25 330 2 331 4 272 1 289 1 159 2 107 2 191 13 109 1 367 1 296 1 337 1 318 5 317 1 36 2 372 1 260 2 193 1 299 2 117 1 147 12 325 3 201 2 326 2 267 1 241 5 
156 1 107 1 191 1 
147 1 156 1 260 1 
337 1 206 3 317 1 318 1 156 6 299 2 193 1 331 1 159 1 14 1 147 3 325 2 201 1 326 1 191 3 241 1 313 1 367 1 
206 2 127 1 156 12 155 1 308 1 331 1 130 1 159 2 107 1 191 6 366 1 367 1 337 1 317 1 318 2 260 1 299 2 193 1 376 1 147 6 325 1 201 2 326 2 241 2 17 1 
206 2 318 1 36 1 306 1 156 6 330 1 331 1 147 3 325 1 191 3 241 1 
206 2 337 1 317 1 306 1 156 3 372 1 193 1 299 2 331 1 330 1 12 1 289 1 147 1 325 1 191 2 367 1 296 1 
337 1 206 5 317 1 318 2 306 2 36 1 156 10 299 2 193 1 330 2 331 2 117 1 147 5 325 3 191 5 241 2 366 1 367 1 
337 1 206 1 317 1 156 2 193 1 299 2 331 1 159 1 147 2 241 1 366 1 367 1 
206 2 337 1 318 1 317 1 156 4 193 1 299 2 331 1 159 1 147 2 325 1 201 1 326 1 191 2 241 1 366 1 367 1 
337 3 206 2 317 3 306 1 156 3 193 3 299 6 330 1 331 1 289 1 12 1 147 1 42 1 325 1 191 2 366 1 367 3 
206 11 306 3 155 1 156 33 330 3 331 5 289 2 159 3 107 4 191 18 336 1 366 1 296 1 253 1 367 5 337 5 317 5 318 5 36 2 372 1 299 10 193 5 260 3 12 1 14 1 147 15 42 1 325 6 201 3 68 1 267 1 326 3 241 5 
206 1 306 1 156 7 155 1 330 1 107 1 191 4 366 1 367 1 296 1 337 1 318 1 317 1 36 1 372 1 260 1 299 2 193 1 147 3 325 1 241 1 17 1 
206 2 306 1 156 10 155 1 330 1 331 1 159 1 107 2 191 5 366 1 296 1 367 2 337 2 318 1 317 2 36 1 372 1 299 4 193 2 260 1 14 1 147 5 325 1 201 1 267 1 241 2 17 1 
206 3 127 1 306 1 156 18 155 1 308 1 330 1 331 1 289 1 130 1 159 2 107 1 191 10 366 1 296 1 367 3 337 3 317 3 318 3 36 1 372 1 260 1 299 6 193 3 376 1 14 1 147 8 325 2 201 2 326 2 241 3 17 1 
206 4 127 1 306 1 156 16 155 1 308 1 330 1 331 2 289 1 130 1 159 2 107 1 191 7 366 1 296 1 367 3 337 3 317 3 318 2 36 1 372 1 260 1 299 6 193 3 376 1 14 1 147 9 325 2 201 2 326 1 241 3 17 1 
206 1 306 1 156 7 155 1 330 1 107 1 191 4 366 1 367 1 296 1 337 1 318 1 317 1 36 1 372 1 260 1 299 2 193 1 147 3 325 1 241 1 17 1 
206 2 127 1 156 12 155 1 308 1 331 1 130 1 159 2 107 1 191 6 366 1 367 1 337 1 317 1 318 2 260 1 299 2 193 1 376 1 147 6 325 1 201 2 326 2 241 2 17 1 
206 4 127 1 306 1 308 1 156 17 155 1 330 1 331 2 289 2 130 1 159 2 107 1 191 8 366 1 296 1 367 4 337 4 317 4 318 2 36 1 372 1 299 8 193 4 260 1 376 1 14 1 147 9 325 2 201 2 326 1 241 3 17 1 
206 6 127 1 308 1 156 16 155 1 331 3 289 2 130 1 159 3 107 1 191 7 366 1 367 4 337 4 317 4 318 2 299 8 193 4 260 1 376 1 147 9 42 1 325 3 201 3 326 2 241 3 17 1 
206 9 318 2 306 4 36 2 156 10 372 1 330 4 331 4 117 1 147 5 325 5 191 5 241 2 296 1 284 1 
206 3 127 1 306 1 308 1 156 17 155 1 330 1 331 1 289 2 130 1 159 2 107 1 191 8 366 1 296 1 367 4 337 4 317 4 318 2 36 1 372 1 299 8 193 4 260 1 376 1 147 9 42 1 325 2 201 2 326 1 241 3 17 1 
40 1 46 1 312 1 281 1 4 1 62 1 30 1 
46 1 270 1 52 1 62 1 323 1 40 1 312 1 281 1 333 1 4 1 209 1 30 1 
104 1 229 1 378 1 165 1 259 1 6 1 141 1 309 1 364 1 271 1 168 1 
229 1 46 2 258 1 259 1 141 1 356 1 309 1 157 1 62 2 271 1 76 1 378 1 27 1 312 1 281 1 6 1 364 1 219 1 
229 1 285 1 207 1 46 2 70 1 258 1 141 3 356 1 309 2 38 1 157 2 62 2 271 1 76 1 65 1 378 1 27 1 312 2 281 1 303 1 6 1 364 1 219 2 
229 2 285 1 207 1 46 2 70 1 258 1 341 1 141 3 356 1 309 2 38 1 157 2 62 2 271 2 215 1 65 1 378 2 27 1 312 2 281 1 303 1 6 1 364 1 219 2 
70 1 309 1 271 3 157 1 1 2 360 1 108 1 6 1 190 1 364 1 314 1 229 3 277 2 112 1 259 1 140 1 141 4 215 1 65 1 119 1 378 3 198 1 303 1 
277 2 229 3 112 1 70 1 259 1 141 4 140 1 309 1 157 1 271 3 215 1 1 2 65 1 225 1 198 1 378 3 119 1 108 1 303 1 6 1 364 1 314 1 
229 1 378 1 6 1 364 1 271 1 316 1 
229 7 353 1 37 1 259 2 141 3 234 1 309 2 262 1 271 7 157 1 357 1 246 1 196 1 237 1 378 6 266 1 6 2 365 1 364 3 254 1 316 1 
206 1 46 2 306 1 156 5 354 2 72 1 356 1 309 1 157 1 271 1 330 1 246 1 76 1 291 1 312 1 27 1 6 1 191 3 364 1 7 2 296 1 367 2 337 2 229 1 318 1 317 2 36 1 258 1 372 1 193 2 261 1 299 4 87 1 141 1 62 2 91 1 378 1 281 2 147 2 325 1 241 1 219 1 18 1 
243 1 271 1 1 3 225 1 55 1 248 2 274 1 108 2 314 1 111 1 229 1 277 3 112 1 342 2 259 1 89 1 141 2 140 1 194 1 235 1 13 1 324 1 198 1 378 1 119 1 41 2 176 1 239 2 
229 2 33 1 140 1 141 2 309 1 271 2 157 1 246 1 378 2 6 1 365 1 364 2 316 1 
229 4 259 1 141 1 309 1 271 4 246 1 215 1 378 4 132 1 165 1 6 1 364 1 168 1 
229 2 353 1 70 1 128 1 321 1 141 1 309 1 271 2 157 1 237 1 378 2 6 1 364 2 126 1 
276 1 229 1 378 1 245 1 259 1 6 1 364 1 271 1 210 1 368 1 
229 2 378 2 35 1 266 1 6 1 141 1 309 1 364 1 271 2 357 1 246 1 
229 5 70 1 259 1 141 3 309 2 271 5 262 1 246 1 357 1 196 1 378 4 132 1 165 1 6 2 364 2 168 1 
229 5 70 1 259 1 141 3 309 2 271 5 246 1 357 1 196 1 378 4 348 1 132 1 165 1 6 2 364 2 168 1 
229 1 46 2 258 1 341 1 259 1 141 1 356 1 309 1 157 1 62 2 271 1 378 1 27 1 312 1 281 1 6 1 364 1 219 1 
229 1 353 1 70 1 37 1 141 1 309 1 271 1 157 1 237 1 378 1 6 1 365 1 364 2 
146 1 175 1 281 1 264 1 166 1 
277 2 112 1 285 1 286 1 207 1 230 1 88 1 38 1 1 2 292 1 198 1 146 2 175 2 281 1 176 1 264 1 362 1 166 2 314 1 
359 1 146 1 46 1 312 1 264 1 138 1 81 1 62 1 166 1 
230 1 264 1 88 1 
104 1 120 1 347 1 26 1 
24 1 120 1 347 1 26 1 61 1 295 1 90 1 
24 1 197 1 129 1 
328 1 298 2 61 1 20 1 90 1 224 1 290 1 24 3 120 1 26 1 347 1 295 3 
24 2 120 1 347 1 26 1 265 1 86 1 61 1 295 2 90 1 
276 1 24 1 120 1 245 1 115 1 61 1 31 1 295 1 90 1 224 1 135 1 
24 1 120 1 347 1 61 1 295 1 90 1 224 1 
24 1 347 2 26 1 61 1 295 1 90 1 224 1 
369 1 61 2 90 2 224 1 24 2 120 1 347 1 263 1 133 1 295 2 
205 1 86 2 61 1 232 1 90 1 224 1 24 3 347 1 26 1 95 1 120 2 295 3 135 1 
276 1 9 1 245 2 86 1 61 1 90 1 224 1 24 2 120 1 347 1 26 1 94 1 295 2 31 1 210 1 
171 1 86 2 61 2 90 2 224 1 24 4 347 1 26 1 95 1 120 2 265 1 295 4 135 1 
24 1 120 1 347 1 26 1 61 1 295 1 90 1 224 1 
298 1 221 1 86 2 61 1 20 1 90 1 290 1 24 4 347 2 26 2 95 1 120 3 295 4 135 1 
137 1 86 1 61 1 90 1 23 1 224 1 24 2 120 1 347 1 26 1 122 1 295 2 
298 2 61 1 20 2 90 1 358 1 290 1 224 1 24 3 120 1 26 1 347 1 295 3 
162 1 120 2 102 1 183 2 
24 1 61 1 252 1 295 1 90 1 224 1 
24 2 120 1 347 1 26 1 86 1 61 1 232 1 295 2 90 1 224 1 
305 1 
24 1 120 1 347 1 26 1 61 1 295 1 90 1 224 1 
24 3 120 1 347 1 26 1 298 1 86 1 61 1 232 1 295 3 90 1 224 1 
120 1 95 1 221 1 135 1 
120 1 347 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 226 281 258 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 226 281 258 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 226 281 258 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 226 281 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 345 1 196 2 317 1 177 1 126 2 64 3 273 5 319 1 39 1 203 9 180 1 299 2 159 2 257 1 133 1 209 2 357 1 336 9 139 1 57 1 59 1 193 1 362 2 73 4 266 2 315 1 269 6 
293 1 345 1 196 2 317 1 177 1 126 2 64 3 273 5 319 1 39 1 203 9 180 1 299 2 159 2 257 1 133 1 209 2 357 1 336 9 139 1 57 1 59 1 193 1 362 2 73 4 266 2 315 1 269 6 
293 1 345 1 196 2 317 1 177 1 126 2 64 4 273 6 319 1 39 1 203 10 180 1 299 2 159 2 257 1 133 1 209 2 357 1 336 10 139 1 57 1 59 1 193 1 362 2 73 5 266 2 315 1 269 7 
293 1 345 1 196 2 317 1 126 2 64 2 273 4 319 1 39 1 203 7 180 1 299 1 159 2 257 1 133 1 209 2 357 1 336 7 139 1 57 1 59 1 193 1 362 2 73 3 266 2 315 1 269 4 
357 1 196 1 177 1 126 1 64 1 273 3 39 1 203 4 180 1 336 4 139 1 299 2 159 1 362 1 133 1 73 2 266 1 269 3 
357 1 196 1 273 1 319 1 203 2 180 1 336 2 159 1 362 1 106 1 257 1 133 1 209 1 304 1 266 1 223 1 
357 1 64 1 273 2 203 3 180 1 336 3 159 2 59 1 362 2 133 1 73 1 209 1 269 1 
293 1 317 1 196 1 177 1 126 1 64 3 273 5 39 1 203 9 180 1 129 1 299 2 159 2 133 1 209 1 357 1 336 9 139 1 59 1 362 2 194 1 73 4 266 1 269 7 
293 1 317 1 196 1 177 1 126 1 64 3 273 5 39 1 203 9 180 1 129 1 299 2 159 2 133 1 209 1 357 1 336 9 139 1 59 1 362 2 194 1 73 4 266 1 269 7 
375 1 61 1 14 1 
272 1 38 2 61 1 
8 2 72 2 318 2 300 1 288 2 70 2 312 1 313 2 
294 1 74 1 149 1 271 2 175 2 318 3 153 1 249 1 128 1 320 2 296 1 79 1 68 1 297 1 157 1 8 2 351 1 105 1 300 1 108 1 259 2 283 1 162 1 371 1 84 1 18 1 50 1 288 2 22 2 70 3 312 1 313 2 314 1 190 1 72 2 144 1 30 1 
8 1 72 1 229 1 309 1 318 1 288 1 289 1 70 1 312 1 313 1 
309 1 101 1 63 1 318 1 349 1 70 1 138 1 352 1 72 1 375 1 28 1 173 1 110 1 61 1 
309 1 101 2 63 1 318 1 288 1 70 1 313 1 138 1 352 2 8 1 72 1 375 1 28 1 110 1 61 1 
352 1 101 1 9 1 311 1 365 1 
352 2 163 1 375 1 101 2 9 1 311 1 151 1 61 1 
352 1 101 1 9 1 
309 1 101 1 311 1 318 1 288 1 188 1 289 1 312 1 70 1 313 1 352 1 8 1 229 1 72 1 
61 1 
352 2 375 1 101 2 9 1 311 1 151 1 122 1 61 1 
287 1 101 5 358 1 311 2 151 1 4 1 103 1 66 1 290 2 321 1 352 5 338 2 375 1 326 2 9 2 43 1 222 1 61 1 379 1 
300 1 14 1 
318 2 288 1 85 1 70 2 313 1 8 1 72 2 300 2 292 1 
205 1 376 1 217 1 
74 1 271 1 175 1 318 1 153 1 70 1 320 1 297 1 190 1 351 1 10 1 144 1 105 1 300 1 108 1 283 1 
8 3 276 1 72 3 318 3 288 1 300 1 70 3 313 3 
8 1 72 1 309 1 318 1 289 1 70 1 313 1 
8 1 72 1 309 1 318 1 288 1 85 1 292 1 70 1 313 1 
294 1 74 1 149 1 101 1 271 1 175 1 63 1 318 4 153 1 296 1 320 1 79 1 68 1 297 1 157 1 351 1 8 3 352 1 276 1 105 1 300 1 108 1 259 2 110 1 283 1 309 1 371 1 18 1 50 1 49 1 288 2 85 1 22 1 70 4 312 1 360 1 313 3 190 1 138 1 72 3 144 1 27 1 28 1 30 1 
183 1 8 1 276 1 72 2 318 2 300 1 173 1 70 2 313 1 
101 1 309 1 63 1 318 3 288 1 85 1 70 3 313 3 360 1 138 1 352 1 8 3 276 2 72 3 27 1 28 1 110 1 31 1 61 1 
8 2 276 1 72 2 376 1 318 2 288 1 85 1 217 1 70 2 313 2 
74 1 271 1 175 1 318 1 153 1 70 1 320 1 297 1 190 1 351 1 144 1 105 1 300 1 108 1 283 1 
0 1 271 1 175 1 318 1 153 1 70 1 320 1 297 1 190 1 144 1 105 1 300 1 108 1 98 1 283 1 
316 1 294 1 197 1 149 1 128 2 79 1 68 1 157 1 205 2 327 1 259 2 134 1 161 1 371 2 18 1 21 1 216 1 217 2 22 4 376 2 170 1 339 1 145 1 245 1 
8 1 72 1 286 1 309 1 28 1 318 1 70 1 313 1 
74 1 271 1 175 1 318 2 153 1 217 1 70 2 313 1 320 1 297 1 190 1 351 1 8 1 276 1 72 1 105 1 144 1 27 1 108 1 283 1 
318 5 372 1 288 1 85 1 70 5 313 4 183 1 8 4 276 2 72 5 27 1 300 1 173 1 378 1 
8 2 72 2 286 1 309 1 318 2 289 1 70 2 313 2 
130 1 322 1 
130 1 322 1 
25 1 71 1 
25 1 71 1 
25 1 71 1 
130 1 3 1 322 1 
130 1 284 1 322 1 
130 2 277 1 25 1 88 1 71 1 322 2 
130 1 3 1 322 1 
130 1 3 1 322 1 
130 1 344 1 322 1 
130 1 344 1 322 1 
130 1 344 1 322 1 
270 1 101 2 114 2 35 2 65 1 104 3 168 1 322 2 366 2 324 2 352 2 130 2 277 1 233 2 45 1 195 1 60 1 244 1 61 1 
236 1 101 1 114 1 318 2 295 1 359 1 335 1 104 1 70 2 313 2 227 1 322 1 352 1 366 1 324 1 8 2 130 1 72 2 300 1 233 1 354 1 60 1 284 1 234 1 
196 1 126 1 266 1 
196 1 266 1 304 1 
347 1 126 2 37 1 266 3 304 1 268 1 
331 1 347 1 126 1 266 2 304 1 268 1 
347 2 126 1 266 2 304 1 268 1 
197 1 101 5 272 1 151 1 102 2 38 3 204 2 227 1 352 5 326 1 9 1 329 1 369 1 234 1 82 1 186 1 287 2 237 1 311 4 358 3 333 2 216 1 238 1 52 1 335 1 290 1 338 1 375 1 339 1 29 1 145 1 222 1 61 2 
101 2 318 1 365 1 40 1 352 2 8 1 254 1 229 1 9 1 370 1 309 1 311 2 288 1 188 1 289 1 312 1 70 1 313 1 72 1 375 1 61 1 
124 1 197 1 101 3 318 1 272 2 102 1 103 1 38 4 204 2 227 1 8 1 352 3 229 1 326 1 329 1 369 1 186 1 309 1 287 2 311 2 358 3 333 2 288 1 238 1 216 1 52 1 188 1 289 1 70 1 312 1 313 1 290 1 338 1 72 1 375 1 339 1 29 1 145 1 61 3 
197 2 101 4 102 2 103 1 6 1 204 4 352 4 8 1 308 1 309 1 311 3 358 5 216 2 70 1 312 1 313 1 117 1 72 1 29 1 124 1 318 1 272 3 38 7 227 2 229 1 326 1 329 2 369 1 186 2 287 4 333 4 288 1 238 1 52 1 188 1 289 1 290 1 338 1 375 1 339 2 145 2 61 4 
341 1 108 1 14 1 
108 1 100 1 
158 1 
105 1 108 1 
105 1 255 1 341 2 108 3 283 1 13 1 
105 1 108 1 283 1 
108 1 298 1 
213 1 371 3 152 1 21 2 216 1 201 1 334 1 22 7 128 4 251 1 26 2 142 1 339 1 367 1 353 1 265 1 161 3 
213 1 371 3 152 1 21 2 216 1 201 1 334 1 22 7 128 4 251 1 26 2 142 1 339 1 367 1 353 1 265 1 161 3 
213 1 371 3 152 1 21 2 216 1 201 1 334 1 22 7 128 4 251 1 119 1 26 2 142 1 339 1 367 1 353 1 265 1 161 3 
294 1 197 3 125 1 152 5 201 2 128 16 79 1 68 1 251 2 323 1 367 1 231 1 353 1 259 2 161 10 186 3 213 2 371 15 18 1 21 5 216 4 334 2 22 31 218 1 91 1 118 3 141 1 142 1 26 3 171 4 339 4 377 1 265 1 145 3 
294 2 152 1 202 1 201 1 128 5 79 2 68 2 251 1 353 1 259 4 161 4 213 1 371 4 18 2 21 3 216 1 334 1 22 9 218 1 26 2 142 1 93 1 339 1 265 1 
196 1 175 1 271 1 126 1 273 1 37 1 320 1 203 2 180 1 297 1 230 1 42 1 159 1 355 1 133 1 209 1 304 1 47 1 357 1 16 1 336 2 24 1 190 1 90 1 92 1 242 1 362 1 99 1 266 2 269 1 
196 1 175 1 271 1 126 1 273 1 37 1 320 1 203 3 180 1 297 1 42 1 159 1 330 1 209 1 304 1 47 1 357 1 235 1 16 1 336 3 24 1 190 1 90 1 92 1 55 1 242 1 362 1 99 1 266 2 269 2 
196 1 175 1 271 1 126 1 273 1 37 1 320 1 203 2 180 1 297 1 42 1 209 1 304 1 357 1 235 1 16 1 336 2 24 1 190 1 90 1 92 1 55 1 99 1 266 2 269 2 
62 1 2 1 175 1 271 1 176 1 153 1 320 1 203 1 297 1 42 2 159 1 105 1 44 1 303 1 108 1 330 1 209 2 165 1 336 1 190 1 92 2 362 1 99 2 
196 1 175 1 271 1 126 1 37 1 320 1 203 1 297 1 230 1 42 1 159 1 133 1 209 1 304 1 47 1 235 1 16 1 336 1 24 1 190 1 90 1 92 1 242 1 362 1 99 1 266 2 
156 1 
62 1 101 5 63 1 151 3 348 4 154 2 153 2 349 1 297 1 352 5 9 6 105 1 108 1 208 2 110 1 112 1 305 2 113 1 356 1 261 2 309 1 358 2 116 2 70 1 72 1 121 1 28 1 29 1 173 1 222 1 271 2 175 2 176 1 272 2 318 1 363 1 38 2 320 2 131 1 326 1 232 2 368 1 80 1 287 2 53 2 290 1 190 1 138 1 338 1 140 1 375 1 143 1 340 1 96 1 61 2 
101 3 63 1 318 1 151 1 348 2 349 1 352 3 9 2 368 1 110 1 113 1 305 1 309 1 70 1 138 1 140 1 72 1 121 1 28 1 340 1 173 1 122 1 
101 3 63 1 318 1 151 1 348 3 349 1 352 3 9 1 368 1 110 1 113 1 309 1 116 1 70 1 138 1 140 1 72 1 375 1 121 1 28 1 340 1 173 1 122 1 61 1 
101 3 63 1 151 1 318 1 348 3 154 1 349 1 352 3 9 2 368 1 110 1 113 1 305 1 309 1 116 1 70 1 138 1 140 1 72 1 375 1 121 1 28 1 340 1 173 1 122 1 61 1 
101 5 63 1 272 2 151 3 318 1 348 6 154 4 274 1 349 1 352 5 325 1 326 1 9 7 232 2 368 1 80 1 208 2 110 1 113 1 305 4 261 2 287 1 309 1 358 1 53 2 115 1 116 4 70 1 290 1 138 1 338 1 140 1 240 1 72 1 375 5 191 1 143 1 121 1 28 1 340 1 173 1 222 1 122 1 61 5 
101 4 63 1 151 2 348 4 154 2 349 1 352 4 9 4 110 1 208 2 113 1 305 2 261 2 309 1 358 1 116 2 70 1 72 1 28 1 121 1 173 1 222 1 318 1 272 2 38 2 326 1 131 1 368 1 232 2 80 1 287 1 53 2 290 1 138 1 140 1 338 1 375 1 143 1 340 1 61 2 
101 4 63 1 151 2 272 2 318 1 348 4 154 2 274 1 349 1 352 4 326 1 9 4 232 2 368 1 80 1 208 2 110 1 305 2 113 1 261 2 287 1 309 1 358 1 53 2 115 1 116 2 70 1 290 1 138 1 140 1 338 1 240 1 72 1 375 1 143 1 121 1 28 1 340 1 173 1 222 1 61 1 
101 4 63 1 151 2 272 2 318 1 348 4 154 2 274 1 349 1 352 4 326 1 9 4 232 2 368 1 80 1 208 2 110 1 305 2 113 1 261 2 287 1 309 1 358 1 53 2 115 1 116 2 70 1 290 1 138 1 140 1 338 1 240 1 72 1 375 1 143 1 121 1 28 1 340 1 173 1 222 1 61 1 
101 4 63 1 151 2 318 1 348 4 154 2 349 1 38 2 352 4 326 1 9 4 232 2 368 1 80 1 208 2 110 1 46 1 305 2 113 1 307 2 215 2 287 1 309 1 358 1 373 1 116 2 70 1 290 1 138 1 140 1 338 1 240 1 241 1 72 1 375 1 121 1 28 1 340 1 173 1 222 1 61 1 
101 4 63 1 151 2 272 2 318 1 348 5 154 3 274 1 349 1 352 4 325 1 326 1 9 5 232 2 368 1 80 1 208 2 110 1 113 1 305 3 261 2 287 1 309 1 358 1 53 2 115 1 116 3 70 1 290 1 138 1 338 1 140 1 240 1 72 1 375 1 143 1 121 1 28 1 340 1 173 1 222 1 61 1 
101 4 63 1 151 2 272 2 318 1 348 5 154 3 274 1 349 1 352 4 325 1 326 1 9 5 232 2 368 1 80 1 208 2 110 1 113 1 305 3 261 2 287 1 309 1 358 1 53 2 115 1 116 3 70 1 290 1 138 1 338 1 140 1 240 1 72 1 375 1 143 1 121 1 28 1 340 1 173 1 222 1 61 1 
101 4 63 1 151 2 318 1 348 4 154 2 349 1 38 2 352 4 131 1 326 1 9 4 232 2 368 1 80 1 208 2 110 1 305 2 113 1 307 2 215 2 287 1 309 1 358 1 116 2 70 1 290 1 138 1 338 1 140 1 72 1 241 1 375 1 121 1 28 1 340 1 173 1 222 1 61 1 
294 1 149 1 128 3 79 1 68 1 157 1 205 1 353 1 300 2 259 2 14 1 161 2 213 1 371 3 18 1 21 2 216 1 217 1 334 1 22 6 376 1 142 1 26 1 339 1 265 1 245 1 
294 2 75 1 197 2 149 2 125 1 152 1 128 8 79 2 68 2 157 1 252 1 205 11 231 1 300 1 160 1 259 4 161 2 186 2 371 6 84 1 19 1 18 2 50 1 21 1 216 2 217 11 22 14 23 1 118 3 376 4 171 3 339 1 145 1 
74 1 294 1 175 1 271 1 149 1 318 2 153 1 320 1 128 1 297 1 68 1 79 1 157 1 252 1 351 1 8 1 276 1 105 1 10 1 300 1 256 1 108 1 259 2 184 1 283 1 371 1 18 1 84 1 50 1 70 2 22 2 313 1 190 1 361 1 72 1 376 1 144 1 27 1 
294 3 197 2 149 3 152 4 153 1 296 2 68 3 297 2 252 1 157 3 8 1 351 2 205 7 105 2 300 2 353 1 108 2 259 6 161 8 213 1 18 3 20 1 21 4 216 3 217 7 70 3 22 20 313 1 72 1 26 1 27 1 265 1 74 2 175 3 271 3 318 3 320 3 128 10 79 3 276 1 132 2 279 1 283 2 186 2 235 1 48 2 371 10 84 1 50 1 86 1 334 1 190 2 89 2 142 1 376 7 58 2 339 3 144 2 145 2 
294 2 62 1 175 8 271 7 149 2 176 1 318 1 178 1 225 1 153 2 320 8 128 1 297 2 79 2 68 2 157 2 8 1 276 1 253 1 105 2 355 1 108 3 259 4 162 2 235 1 17 1 371 1 18 2 84 1 167 1 50 1 239 1 70 1 22 2 87 1 313 1 190 2 72 1 245 1 
294 1 197 1 149 1 318 1 128 1 79 1 68 1 157 1 252 1 205 1 8 1 259 2 161 1 186 1 371 2 18 1 21 1 288 1 85 1 216 1 217 1 70 1 22 3 313 1 72 1 376 1 339 1 145 1 246 1 
294 1 197 1 149 1 18 1 152 1 216 1 217 1 22 2 128 2 68 1 79 1 157 1 205 1 376 1 259 2 134 1 245 1 161 1 
294 1 316 1 149 1 371 2 18 1 21 1 217 1 22 2 68 1 79 1 157 1 205 1 376 1 339 1 259 2 245 1 145 1 161 1 
294 1 186 1 197 1 149 1 371 2 18 1 21 1 152 1 216 1 217 2 22 4 128 2 68 1 79 1 157 1 205 2 376 2 339 1 259 2 145 1 245 1 161 2 
294 1 197 1 149 1 17 1 18 1 152 1 216 1 217 1 22 2 128 2 68 1 79 1 157 1 205 1 376 1 259 2 134 1 161 1 
294 1 316 1 149 1 17 1 371 2 18 1 21 1 217 1 22 2 68 1 79 1 157 1 205 1 376 1 339 1 259 2 145 1 161 1 
294 1 186 1 197 1 149 1 371 2 17 1 18 1 21 1 152 1 216 1 217 2 22 4 128 2 68 1 79 1 157 1 205 2 376 2 339 1 259 2 145 1 161 2 
294 1 186 1 197 1 149 1 371 2 18 1 21 1 152 1 216 1 217 2 22 4 128 2 68 1 79 1 157 1 205 2 376 2 339 1 259 2 145 1 161 2 
74 1 294 1 175 1 271 1 149 1 318 1 153 1 128 1 296 1 320 1 297 1 68 1 79 1 157 1 351 1 105 1 300 1 108 1 259 2 283 1 371 1 84 1 18 1 50 1 22 2 70 1 190 1 144 1 
0 1 294 1 175 1 271 1 149 1 318 1 153 1 128 1 320 1 297 1 68 1 79 1 157 1 105 1 300 1 108 1 259 2 283 1 371 1 84 1 18 1 50 1 22 2 70 1 190 1 94 1 144 1 98 1 
294 1 186 1 197 1 149 1 371 2 18 1 21 1 152 1 216 1 217 2 22 4 128 2 68 1 79 1 252 1 157 1 205 2 376 2 339 1 259 2 145 1 161 2 
74 1 294 1 197 1 175 1 271 1 149 1 318 1 152 1 128 2 296 1 320 1 297 1 68 1 79 1 157 1 205 2 351 1 105 1 355 1 108 1 259 2 283 1 161 2 186 1 48 1 371 2 18 1 21 1 216 1 217 2 22 4 70 1 190 1 376 2 339 1 144 1 145 1 
294 1 197 1 149 1 318 1 152 1 128 2 79 1 68 1 157 1 252 1 8 1 205 1 259 2 161 1 186 1 371 1 18 1 288 1 85 1 216 1 217 1 264 1 70 1 22 3 313 1 72 1 376 1 339 1 145 1 
294 3 148 1 197 4 125 1 152 3 200 1 202 1 226 1 127 1 128 15 250 1 79 3 68 3 182 1 206 1 231 3 258 1 109 2 259 6 281 1 161 5 135 1 186 4 15 1 285 1 371 17 18 3 21 2 216 4 218 1 22 32 118 3 56 3 171 4 339 4 145 4 342 1 
294 4 148 1 197 4 125 1 152 3 200 1 202 1 226 1 127 1 128 16 250 1 79 4 68 4 182 1 206 1 231 3 258 1 109 2 259 8 281 1 161 6 135 1 186 4 15 1 285 1 371 15 18 4 21 3 216 4 218 2 22 31 118 3 56 3 171 4 339 3 145 3 342 1 
294 2 148 1 197 6 125 2 152 5 200 1 202 1 226 1 127 1 128 23 79 2 68 2 182 1 206 1 231 2 353 1 258 1 109 1 259 4 281 1 161 11 186 6 15 1 213 1 371 19 19 2 18 2 21 6 216 7 334 1 218 1 22 42 118 4 56 2 26 1 142 1 171 4 339 6 265 1 145 5 
294 2 197 3 125 1 152 3 202 1 128 9 79 2 68 2 231 1 258 1 109 1 259 4 281 1 161 6 135 2 186 3 15 1 285 1 371 10 18 2 21 3 216 3 54 1 22 19 118 1 56 2 171 2 339 3 145 3 342 1 
294 3 148 1 197 2 152 1 200 1 202 1 226 1 127 1 128 10 79 3 68 3 182 1 206 1 231 2 258 1 109 2 259 6 281 2 161 2 186 2 15 1 371 8 18 3 21 1 216 2 218 2 22 18 118 2 56 2 171 2 339 1 145 1 
324 1 366 1 130 1 277 1 374 1 114 1 233 1 65 1 45 1 322 1 
359 1 284 1 
324 1 366 1 130 1 214 1 114 1 233 1 67 1 174 1 322 1 
270 1 101 1 114 1 35 1 65 1 104 2 168 1 322 1 352 1 366 1 324 1 130 1 277 1 233 1 45 1 195 1 60 1 61 1 
270 1 101 1 114 1 35 1 65 1 104 2 168 1 322 1 352 1 366 1 324 1 130 1 277 1 233 1 45 1 195 1 60 1 61 1 
270 1 101 1 114 1 35 1 65 1 104 2 168 1 322 1 352 1 366 1 324 1 130 1 277 1 233 1 45 1 195 1 60 1 61 1 
147 1 3 1 88 1 
147 1 3 1 88 1 
344 1 111 1 
344 1 111 1 88 1 
236 1 295 1 
247 1 236 1 270 1 101 1 114 1 311 1 318 2 295 1 35 1 359 1 335 1 104 1 70 2 313 2 227 1 322 1 8 2 366 1 324 1 352 1 130 1 72 2 300 1 233 1 354 1 284 1 234 1 
147 1 3 1 
344 1 111 1 88 1 
294 1 1 1 34 1 175 2 149 1 271 2 318 2 178 1 179 1 320 2 128 1 297 1 68 1 79 1 157 1 252 1 105 1 108 1 259 2 162 2 371 1 18 1 84 1 167 1 50 1 70 2 22 2 219 1 190 1 72 2 169 1 
196 1 235 1 187 1 271 2 175 2 126 1 37 1 320 2 297 1 24 1 190 1 90 1 301 1 355 1 266 2 304 1 99 1 282 1 47 1 
196 1 235 1 187 1 271 1 175 1 126 1 37 1 320 1 24 1 297 1 190 1 90 1 12 1 266 2 304 1 99 1 47 1 
62 1 271 1 175 1 176 1 153 1 320 1 297 1 7 1 190 1 105 1 301 1 108 1 303 1 99 1 
196 1 235 1 187 1 271 1 175 1 126 1 37 1 320 1 297 1 24 1 190 1 90 1 301 1 266 2 304 1 99 1 282 1 47 1 
146 1 
375 1 287 1 358 1 43 1 61 1 379 1 14 1 
101 1 272 1 151 1 38 1 352 1 326 1 9 1 261 1 287 1 358 1 53 1 290 1 338 1 375 1 143 1 222 1 61 2 
197 1 101 2 151 1 153 1 204 3 297 2 352 2 9 2 105 1 108 4 13 1 310 1 358 4 216 1 69 1 29 1 222 2 271 1 175 1 272 3 38 6 320 1 326 2 328 1 329 2 280 1 283 1 332 1 186 1 287 3 333 3 51 1 290 2 190 1 138 1 89 1 338 2 339 1 243 1 341 1 145 1 61 3 100 2 
33 1 148 1 124 2 197 2 101 1 151 1 272 3 200 1 127 1 38 6 204 5 181 1 182 1 352 1 326 2 206 1 9 1 231 1 329 1 112 1 186 2 287 5 358 8 333 5 216 2 290 2 338 2 118 1 375 2 171 1 339 2 29 1 222 2 145 2 61 5 
124 2 101 1 318 1 275 1 352 1 8 1 229 1 326 1 329 1 353 1 213 1 309 1 287 2 358 2 288 1 216 2 334 1 115 1 188 1 289 1 70 1 312 1 290 1 313 1 338 1 72 1 339 1 222 1 
287 1 358 1 290 1 338 1 326 1 375 1 43 1 222 1 379 1 61 1 
186 1 124 1 197 1 287 2 358 2 333 2 272 2 216 1 38 4 204 2 339 1 329 1 145 1 61 2 
352 1 375 1 101 1 9 1 151 1 61 1 
62 1 198 2 175 4 271 4 101 3 176 1 151 2 363 1 153 2 103 1 320 4 297 1 228 1 352 3 326 2 278 1 9 4 105 1 108 1 112 2 356 1 287 2 358 2 263 1 290 2 190 1 338 2 29 2 222 1 
294 1 74 1 175 1 271 1 149 1 318 3 153 1 320 1 296 1 79 1 68 1 297 1 157 1 8 2 351 1 105 1 300 1 108 1 259 2 283 1 371 1 18 1 50 1 288 2 22 1 70 3 312 1 313 2 190 1 72 2 144 1 30 1 
287 1 358 1 272 1 38 2 204 1 290 1 338 1 326 1 375 1 29 1 222 1 112 1 61 2 
324 1 114 1 267 1 
324 1 236 1 114 1 302 1 45 1 
324 1 114 1 267 1 
324 1 114 1 267 1 
324 1 346 1 114 1 
324 1 346 1 114 1 
324 1 346 1 114 1 
324 1 114 1 
130 1 322 1 
294 1 148 1 202 1 128 4 79 1 68 1 231 1 353 1 259 2 161 2 213 1 371 4 18 1 21 2 216 1 334 1 22 8 118 1 26 1 142 1 171 1 339 1 265 1 
294 2 148 1 76 1 197 1 125 1 152 1 202 1 128 6 79 2 68 2 231 1 353 1 259 4 161 3 186 1 213 1 371 5 18 2 21 2 216 2 334 1 22 11 118 1 26 1 142 1 171 2 339 1 265 1 
294 3 76 1 148 1 197 2 152 1 202 1 200 1 127 1 128 9 79 3 68 3 182 1 206 1 231 1 353 1 259 6 161 4 186 2 213 1 371 10 18 3 21 3 216 3 334 1 22 19 218 1 118 1 26 1 142 1 171 1 339 3 265 1 145 2 
294 3 76 1 148 1 197 2 152 2 202 1 200 1 127 1 128 10 79 3 68 3 182 1 206 1 231 1 353 1 259 6 161 5 186 2 213 1 371 7 18 3 21 3 216 3 334 1 218 1 22 17 118 1 26 1 142 1 171 1 339 2 265 1 145 1 
294 1 148 1 202 1 128 4 79 1 68 1 231 1 353 1 259 2 161 2 213 1 371 4 18 1 21 2 216 1 334 1 22 8 118 1 26 1 142 1 171 1 339 1 265 1 
294 1 148 1 197 2 152 1 202 1 200 1 127 1 128 6 79 1 68 1 182 1 206 1 231 1 259 2 161 2 186 2 371 6 18 1 21 1 216 2 22 12 118 1 171 1 339 2 145 2 
294 4 148 1 76 1 197 2 152 2 200 1 202 1 127 1 128 10 79 4 68 4 182 1 206 1 231 1 353 1 259 8 161 5 186 2 213 1 371 8 18 4 21 3 216 3 334 1 22 18 218 2 118 1 26 1 142 1 171 1 339 2 265 1 145 1 
294 4 148 1 197 3 152 3 200 1 202 1 127 1 128 9 79 4 68 4 182 1 206 1 231 1 259 8 161 6 186 3 371 7 18 4 21 3 216 3 22 16 218 2 118 1 171 1 339 2 145 2 342 1 
213 3 371 4 21 3 152 3 216 1 334 3 22 7 128 3 142 1 339 1 353 1 265 2 161 6 
294 4 148 1 197 2 152 1 200 1 202 1 127 1 128 10 79 4 68 4 182 1 206 1 231 1 353 1 259 8 161 4 186 2 213 1 371 8 18 4 21 3 216 3 334 1 22 18 218 2 118 1 26 1 142 1 171 1 339 2 265 1 145 1 342 1 
294 2 213 1 371 4 18 2 152 1 21 2 216 1 334 1 22 8 218 1 128 4 68 2 79 2 26 1 142 1 339 1 353 1 259 4 265 1 161 3 
213 1 371 3 21 2 216 1 334 1 22 6 128 3 26 1 142 1 339 1 353 1 265 1 14 1 161 2 
294 1 186 1 76 1 197 1 371 2 18 1 21 1 152 1 216 1 22 4 128 2 68 1 79 1 339 1 259 2 145 1 161 2 
186 1 197 1 371 4 125 1 21 1 152 1 216 1 22 7 128 3 118 1 171 2 339 1 231 1 145 1 161 2 
294 2 75 1 197 2 125 1 152 4 128 11 68 2 79 2 353 1 259 4 161 9 186 2 213 2 371 12 19 1 18 2 21 5 216 3 334 2 22 23 218 2 118 2 26 1 142 1 171 2 339 3 95 1 265 1 145 2 
171 1 371 1 22 1 
118 1 22 1 128 1 
294 1 186 1 76 1 197 1 371 3 18 1 152 1 21 2 216 1 22 6 128 3 79 1 68 1 89 1 339 1 259 2 145 1 161 3 
294 1 148 1 197 2 152 1 202 1 200 1 127 1 128 6 79 1 68 1 182 1 206 1 231 1 259 2 161 2 186 2 371 6 18 1 21 1 216 2 22 12 118 1 171 1 339 2 145 2 
213 1 371 3 21 1 152 1 216 1 334 1 22 6 128 3 339 1 353 1 161 2 
294 1 213 1 371 2 18 1 152 1 21 1 334 1 22 3 218 1 128 1 68 1 79 1 142 1 95 1 265 1 259 2 161 2 
294 1 213 2 371 5 18 1 21 3 152 2 202 1 216 2 334 2 22 10 128 5 79 1 68 1 275 1 339 2 353 1 259 2 161 5 
294 1 197 1 18 1 152 1 202 1 216 1 22 2 128 2 68 1 79 1 259 2 161 1 
294 1 186 1 197 1 371 2 18 1 21 1 152 1 202 1 216 1 22 4 128 2 68 1 79 1 339 1 259 2 145 1 161 2 
294 3 213 1 371 2 18 3 21 1 152 1 202 1 334 1 218 1 22 3 128 1 68 3 79 3 95 1 259 6 342 1 161 2 
294 5 76 1 197 3 125 1 152 5 202 1 128 16 79 5 68 5 231 1 353 2 259 10 161 12 186 3 213 3 371 18 18 5 21 7 216 5 334 3 218 2 22 34 91 1 118 3 141 1 26 1 142 1 171 4 95 1 339 5 377 1 265 1 145 3 342 1 
183 1 224 1 72 1 318 1 300 1 173 1 70 1 
224 1 343 1 318 1 77 1 155 1 70 1 183 1 72 1 300 1 173 1 260 1 210 1 
62 1 175 1 271 1 176 1 105 1 153 1 108 1 320 1 297 1 190 1 14 1 
271 1 175 1 318 2 153 1 70 2 313 1 320 1 297 1 190 1 8 1 351 1 276 1 72 1 105 1 144 1 300 1 108 1 283 1 
309 1 198 1 271 1 175 1 63 1 318 2 36 1 70 2 313 2 320 1 297 1 298 1 190 1 8 1 351 1 276 1 72 2 28 1 105 2 144 1 300 1 108 3 283 2 
0 1 309 1 198 1 271 2 175 2 63 1 318 2 5 1 36 1 70 2 313 2 320 2 297 1 298 1 190 1 8 1 276 1 72 2 28 1 105 2 144 1 300 1 108 3 283 2 
175 3 271 3 198 1 101 2 5 1 153 1 36 1 320 3 297 1 298 1 352 2 9 1 105 1 108 4 283 1 211 1 189 1 190 1 138 1 375 1 341 1 61 1 100 1 
101 2 198 1 271 3 175 3 5 1 153 1 36 1 320 3 297 1 138 1 298 1 190 1 352 2 375 1 9 1 105 1 243 1 341 1 108 4 61 1 283 1 100 1 
253 1 175 1 271 1 320 1 297 1 190 1 
235 1 123 1 271 6 175 7 167 1 225 1 153 2 239 1 262 1 87 1 320 7 297 3 337 1 190 2 253 1 105 2 355 1 108 3 13 1 283 1 162 1 
294 2 149 2 296 1 68 2 297 1 252 1 157 2 351 1 8 1 205 1 105 1 353 1 300 2 355 1 108 1 259 4 161 2 213 1 18 2 21 2 216 1 217 1 70 2 22 6 313 1 219 1 72 1 26 1 265 1 74 1 175 1 271 1 318 2 320 1 128 3 79 2 276 1 132 1 283 1 48 1 371 3 334 1 190 1 376 1 142 1 144 1 339 1 
271 1 101 3 175 1 151 1 153 1 320 1 352 3 326 2 9 2 43 1 108 2 280 1 332 1 287 1 358 1 311 1 51 1 263 1 290 2 138 1 338 2 375 1 243 1 341 1 222 2 61 1 379 1 100 1 
271 2 175 2 310 1 320 2 297 2 190 1 253 1 105 1 341 1 355 1 108 2 13 1 283 1 
62 1 271 4 175 4 176 1 137 1 5 1 153 1 320 4 297 1 190 1 105 1 355 1 108 1 
123 1 198 1 271 2 175 2 86 1 320 2 297 2 337 1 190 1 192 1 105 1 108 1 11 1 283 1 
196 1 175 1 271 1 153 1 266 1 304 1 320 1 297 1 24 1 190 1 
235 1 175 2 271 2 105 1 167 1 108 1 355 1 179 1 320 2 297 1 190 1 
62 1 198 1 271 4 175 5 176 1 137 1 167 1 153 1 239 1 320 5 87 1 297 2 190 2 105 2 355 1 108 3 
62 1 198 1 271 4 175 5 176 1 137 1 167 1 153 1 320 5 87 1 297 2 190 2 105 2 221 1 355 1 108 3 
0 1 271 1 175 1 318 2 153 1 70 2 313 1 320 1 297 1 190 1 8 1 276 1 72 1 105 1 144 1 300 1 108 1 283 1 
123 1 175 1 271 1 198 1 105 1 108 1 262 1 320 1 297 2 283 1 13 1 190 1 337 1 
248 1 41 1 166 1 300 1 291 1 
248 2 309 1 101 2 166 2 63 1 311 1 199 1 360 1 138 1 220 1 352 2 41 2 375 1 28 1 300 1 291 1 110 1 61 1 32 1 
1 1 72 1 169 1 41 1 34 1 166 1 318 1 291 1 70 1 
199 1 291 1 220 1 
357 1 273 1 180 1 14 1 
357 1 159 1 273 1 362 1 203 1 180 1 336 1 
42 1 209 1 336 1 
357 1 273 1 319 2 78 1 203 3 336 3 180 1 159 1 207 1 362 1 97 1 133 1 
299 1 357 1 159 1 273 1 362 1 203 2 180 1 336 2 269 1 
139 1 196 1 159 1 126 1 273 1 362 1 73 1 133 1 266 1 203 1 336 1 
159 1 273 1 362 1 133 1 203 1 180 1 336 1 
357 1 159 1 362 1 133 1 203 1 180 2 336 1 
136 1 273 1 203 2 180 1 336 2 159 2 362 2 107 1 133 1 306 1 
293 1 357 1 317 1 64 1 273 2 203 3 180 1 336 3 159 1 362 1 133 1 73 1 269 2 
357 1 196 1 150 1 126 1 273 1 37 1 203 2 180 1 336 2 159 1 362 1 133 1 304 1 266 2 269 1 
357 1 177 1 64 1 273 2 203 4 180 1 336 4 299 1 159 2 362 2 133 1 73 1 269 2 
357 1 159 1 273 1 362 1 133 1 203 1 180 1 336 1 
357 2 212 1 64 1 273 3 319 1 203 4 180 2 336 4 159 1 207 1 362 1 97 1 73 1 269 2 
357 1 273 1 203 2 180 1 336 2 129 1 159 1 172 1 362 1 133 1 81 1 269 1 
357 1 273 1 319 2 350 1 203 3 336 3 180 1 159 1 207 2 362 1 97 1 133 1 
120 1 364 1 273 2 185 2 
164 1 159 1 362 1 133 1 203 1 336 1 
357 1 317 1 159 1 273 1 362 1 133 1 203 2 180 1 336 2 269 1 
83 1 
357 1 159 1 273 1 362 1 133 1 203 1 180 1 336 1 
317 1 357 1 159 1 273 1 362 1 319 1 133 1 203 3 180 1 336 3 269 1 
212 1 273 1 64 1 73 1 
273 1 180 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 2 123 1 124 9 167 1 21 1 1 1 357 1 170 2 24 6 359 2 26 1 130 1 28 2 151 3 332 1 82 2 367 1 9 5 338 9 246 1 305 1 63 1 40 1 136 2 311 1 378 2 348 4 121 1 
211 2 123 1 124 9 167 1 21 1 1 1 357 1 170 2 24 6 26 1 359 2 130 1 28 2 151 3 332 1 82 2 367 1 9 5 338 9 246 1 305 1 63 1 40 1 136 2 311 1 378 2 348 4 121 1 
211 2 123 1 124 10 167 1 21 1 1 1 357 1 170 2 24 7 26 1 359 2 130 1 28 2 151 4 332 1 82 2 367 1 9 6 338 10 246 1 305 1 63 1 40 1 136 2 311 1 378 2 348 5 121 1 
211 2 123 1 124 7 167 1 21 1 1 1 357 1 170 2 24 4 26 1 359 1 130 1 28 2 151 2 332 1 82 2 367 1 9 4 338 7 246 1 305 1 40 1 136 2 311 1 378 2 348 3 121 1 
211 1 367 1 9 3 123 1 124 4 338 4 246 1 63 1 357 1 170 1 136 1 24 3 359 2 311 1 28 1 151 1 348 2 82 1 
9 1 211 1 123 1 124 2 245 1 338 2 266 1 167 1 246 1 323 1 136 1 311 1 28 1 378 1 332 1 82 1 
211 2 9 2 123 1 124 3 338 3 246 1 136 2 24 1 26 1 311 1 378 1 151 1 348 1 
367 1 9 5 211 2 123 1 124 9 338 9 246 1 63 1 357 1 1 1 170 1 136 2 24 7 359 2 26 1 185 1 311 1 227 1 130 1 28 1 378 1 151 3 348 4 82 1 
367 1 9 5 211 2 123 1 124 9 338 9 246 1 63 1 357 1 1 1 170 1 136 2 24 7 359 2 26 1 185 1 311 1 227 1 130 1 28 1 378 1 151 3 348 4 82 1 
60 1 313 1 164 1 
111 2 60 1 283 1 
93 1 4 2 280 2 103 2 15 1 371 2 52 2 163 2 
122 1 189 2 351 1 93 1 272 1 319 1 52 2 127 1 169 1 149 1 277 1 102 1 4 2 196 1 280 3 103 2 240 1 29 2 153 2 368 1 33 1 35 1 112 1 267 1 371 2 221 1 12 1 184 2 374 1 159 2 41 1 42 1 229 1 15 1 46 1 187 1 163 3 
4 1 280 1 103 1 15 1 371 1 52 1 173 1 275 1 269 1 163 1 
34 1 231 1 60 1 354 1 10 1 71 1 371 1 275 1 205 1 280 1 313 1 57 1 163 1 217 1 
231 1 60 1 10 2 354 1 71 1 52 1 371 1 275 1 4 1 103 1 280 1 313 1 57 2 163 1 217 1 
241 1 309 1 10 1 57 1 50 1 
100 1 89 1 309 1 60 1 10 2 313 1 57 2 50 1 
309 1 10 1 57 1 
10 1 52 1 371 1 275 1 269 1 222 1 4 1 103 1 280 1 15 1 173 1 57 1 163 1 50 1 
60 1 
100 1 309 1 60 1 10 2 313 1 57 2 157 1 50 1 
60 1 273 1 95 2 10 5 37 2 247 1 22 1 38 2 215 1 100 1 310 1 309 2 313 1 6 1 57 5 69 1 48 1 293 1 50 2 
93 1 164 1 
93 2 4 1 103 1 280 2 52 1 371 2 108 1 163 2 176 1 
292 1 256 1 8 1 
368 1 189 1 33 1 93 1 272 1 319 1 12 1 159 1 41 1 277 1 196 1 280 1 187 1 29 1 163 1 154 1 
368 1 189 1 33 1 272 1 319 1 52 1 371 1 12 1 159 1 41 1 277 1 196 1 115 1 4 1 280 2 342 1 187 1 292 1 29 1 163 2 
93 1 4 3 103 1 280 3 342 1 371 3 52 3 163 3 
4 1 280 1 371 1 52 1 275 1 269 1 163 1 
4 1 280 1 103 1 371 1 52 1 275 1 163 1 108 1 176 1 
122 1 189 1 351 1 93 1 272 1 231 1 354 1 319 1 71 1 52 3 127 1 275 1 169 1 23 1 149 1 277 1 102 1 196 1 4 3 103 2 280 4 57 1 29 1 108 1 153 2 217 1 368 1 33 1 10 1 371 3 221 1 12 1 184 1 374 1 159 1 41 1 42 1 115 1 229 1 342 1 15 1 187 1 207 1 163 4 
205 1 93 1 116 1 4 1 280 2 342 1 371 2 52 1 163 2 
231 1 60 1 10 1 354 1 71 1 52 3 371 3 275 1 23 1 115 1 4 3 101 1 103 1 280 3 342 2 57 1 108 1 163 3 217 1 
4 2 280 2 103 1 342 1 371 2 52 2 292 1 256 1 163 2 108 1 
189 1 368 1 33 1 93 1 272 1 319 1 12 1 159 1 41 1 277 1 196 1 280 1 187 1 29 1 163 1 
32 1 189 1 368 1 93 1 272 1 319 1 12 1 307 1 159 1 41 1 277 1 280 1 187 1 29 1 163 1 
122 1 351 1 147 1 213 1 256 2 169 1 237 1 238 1 102 1 240 2 152 1 131 1 81 1 153 2 8 2 220 1 287 1 221 1 88 1 374 1 184 4 206 1 229 2 292 2 
4 1 280 1 71 1 371 1 52 1 275 1 163 1 316 1 
349 1 93 1 52 4 371 5 205 1 116 1 4 4 115 1 280 5 103 1 342 2 163 5 108 1 315 1 
4 2 280 2 371 2 52 2 275 1 269 1 163 2 316 1 
284 1 175 1 
284 1 175 1 
73 1 230 1 
73 1 230 1 
284 1 73 1 175 1 230 1 
284 1 333 1 175 1 
284 1 333 1 175 1 
284 1 333 1 175 1 
284 1 219 1 175 1 
284 2 298 1 156 1 73 1 230 1 175 2 
284 1 224 1 175 1 
284 1 224 1 175 1 
284 1 224 1 175 1 
284 2 18 2 353 2 60 1 336 2 337 1 10 2 51 1 134 2 298 1 325 1 74 1 66 1 376 1 27 2 331 1 107 3 57 2 175 2 
93 1 353 1 52 2 236 1 56 1 4 2 280 2 5 1 27 1 107 1 57 1 366 1 175 1 284 1 336 1 10 1 219 1 134 1 371 2 181 1 66 1 43 1 117 1 163 2 
170 1 28 1 82 1 
266 1 28 1 82 1 
170 2 77 1 266 1 72 1 192 1 82 3 
170 1 77 1 266 1 322 1 72 1 82 2 
170 1 77 1 266 1 72 2 82 2 
191 1 95 1 297 2 100 1 56 1 104 2 258 1 79 1 131 1 57 5 366 1 283 1 303 1 111 3 60 2 220 1 287 1 10 5 37 1 181 1 247 2 183 1 38 1 306 1 88 1 309 1 65 1 90 2 313 1 48 1 69 3 50 4 
191 2 95 2 19 1 297 6 22 1 100 1 56 4 105 1 131 3 57 9 262 1 283 3 303 2 241 5 111 9 60 5 220 3 287 3 10 9 37 2 247 6 183 3 306 1 38 2 88 3 139 1 309 6 90 6 341 5 118 1 313 1 48 1 69 8 253 1 50 7 
191 1 95 1 297 2 22 1 56 1 104 1 258 1 79 1 57 3 131 1 283 2 303 1 111 4 60 3 220 1 287 1 10 3 37 1 247 2 183 1 38 1 88 1 90 2 313 1 69 3 50 2 
191 1 95 1 19 1 297 4 22 1 56 2 104 2 258 1 79 1 57 4 131 2 262 1 283 3 303 1 111 7 60 4 220 2 287 2 10 4 37 1 247 4 183 2 38 1 88 2 90 4 313 1 69 5 253 1 50 3 
368 1 174 1 164 1 
368 1 327 1 
119 1 
368 1 277 1 
368 3 277 1 272 1 228 1 174 2 84 1 
368 1 277 1 272 1 
368 1 20 1 
352 1 110 1 220 1 233 1 53 1 289 2 257 1 340 1 184 7 25 1 238 3 206 2 76 1 229 3 379 1 240 4 131 1 
352 1 110 1 220 1 233 1 53 1 289 2 257 1 340 1 184 7 25 1 238 3 206 2 76 1 229 3 379 1 240 4 131 1 
352 1 110 1 220 1 233 1 53 1 289 2 257 1 340 1 184 7 25 1 238 3 206 2 76 1 229 3 379 1 140 1 240 4 131 1 
122 1 351 1 352 1 94 4 165 1 233 2 320 1 53 5 169 1 257 2 25 1 238 10 76 1 240 16 282 1 131 4 153 2 110 2 287 3 220 4 372 1 183 3 289 3 340 1 88 3 374 1 184 31 250 3 375 1 225 1 206 5 229 15 379 2 141 1 
122 2 350 1 351 2 110 1 220 1 233 1 53 1 326 1 289 2 169 2 340 1 257 1 184 9 374 2 25 1 238 4 206 3 76 1 229 4 379 1 282 1 240 5 131 1 153 4 
211 1 123 1 189 1 294 1 124 2 318 1 296 1 192 1 170 1 24 1 75 1 28 1 260 1 365 1 29 1 30 1 82 2 9 1 338 2 266 1 246 1 159 1 136 1 41 1 186 1 311 1 45 1 378 1 187 1 162 1 
211 1 123 1 189 1 294 1 124 3 318 1 296 1 192 1 128 1 170 1 328 1 24 2 75 1 28 1 260 1 365 1 29 1 30 1 82 2 9 1 338 3 266 1 246 1 268 1 159 1 136 1 41 1 186 1 378 1 187 1 
123 1 189 1 294 1 124 2 318 1 192 1 328 1 170 1 24 2 28 1 260 1 365 1 29 1 30 1 82 2 9 1 338 2 266 1 246 1 268 1 159 1 41 1 186 1 378 1 187 1 
211 1 189 1 124 1 318 2 128 1 277 1 106 1 260 2 365 2 29 1 368 1 218 1 202 1 338 1 12 1 291 1 158 1 159 1 136 1 41 1 13 1 378 2 187 1 
211 1 189 1 294 1 124 1 318 1 296 1 192 1 170 1 328 1 75 1 28 1 260 1 365 1 29 1 30 1 82 2 338 1 266 1 159 1 136 1 41 1 186 1 311 1 45 1 378 1 187 1 
44 1 
144 1 189 2 145 1 231 1 95 1 232 1 234 1 146 1 275 1 100 3 277 1 280 1 57 5 283 2 201 2 111 2 60 2 10 5 247 2 12 2 158 1 159 2 205 1 64 1 13 1 251 2 345 1 16 2 69 2 208 1 163 1 354 1 71 1 214 1 300 1 362 1 78 2 29 2 217 1 303 1 368 1 34 1 36 2 37 1 371 1 182 2 270 4 38 1 41 1 309 6 91 1 312 2 313 1 187 1 48 1 
231 1 354 1 146 1 71 1 275 1 100 1 300 1 362 1 280 1 57 3 217 1 34 1 10 3 371 1 270 2 182 1 157 1 205 1 309 2 91 1 208 1 163 1 
231 1 354 1 146 1 71 1 275 1 100 1 300 1 362 1 280 1 57 3 217 1 34 1 201 1 60 1 10 3 371 1 270 3 157 1 309 1 205 1 91 1 313 1 208 1 163 1 
231 1 354 1 146 1 71 1 275 1 100 1 300 1 362 1 280 1 57 3 217 1 34 1 201 1 60 1 10 3 371 1 270 3 182 1 157 1 205 1 309 2 91 1 251 1 313 1 208 1 163 1 
144 1 231 1 95 1 146 1 52 1 275 2 100 3 276 1 4 1 103 1 280 2 57 5 283 2 201 2 59 1 60 1 10 5 155 1 247 1 157 1 113 1 205 1 251 4 15 1 208 1 69 1 16 2 163 2 354 1 71 1 214 1 300 1 362 1 171 1 78 2 173 1 217 1 34 1 36 2 37 1 371 2 269 1 182 4 270 4 38 1 222 1 309 7 91 1 312 2 313 1 48 1 
144 1 231 1 95 1 146 1 275 1 100 2 280 1 57 4 283 2 201 2 111 2 60 2 10 4 247 1 205 1 64 1 251 2 208 1 69 1 16 2 163 1 354 1 71 1 214 1 300 1 362 1 78 2 217 1 34 1 36 2 37 1 371 1 270 4 182 2 38 1 309 4 91 1 312 2 313 1 48 1 
144 1 231 1 95 1 354 1 146 1 71 1 214 1 275 1 100 2 276 1 300 1 362 1 280 1 171 1 78 2 57 4 283 2 217 1 201 2 34 1 60 1 36 2 155 1 10 4 37 1 371 1 247 1 182 2 270 4 38 1 309 4 205 1 91 1 251 2 312 2 313 1 16 2 69 1 208 1 48 1 163 1 
144 1 231 1 95 1 354 1 146 1 71 1 214 1 275 1 100 2 276 1 300 1 362 1 280 1 171 1 78 2 57 4 283 2 217 1 201 2 34 1 60 1 36 2 155 1 10 4 37 1 371 1 247 1 182 2 270 4 38 1 309 4 205 1 91 1 251 2 312 2 313 1 16 2 69 1 208 1 48 1 163 1 
231 1 95 1 354 1 146 1 71 1 214 1 275 1 100 2 300 1 329 1 362 1 280 1 78 2 199 2 57 4 217 1 31 1 201 2 34 1 111 2 60 1 155 1 10 4 37 1 371 1 247 1 182 2 270 4 38 1 309 4 205 1 91 1 251 2 312 2 14 2 313 1 188 1 69 1 208 1 48 1 163 1 
144 1 231 1 95 1 146 1 52 1 275 2 276 1 100 2 4 1 103 1 280 2 57 4 283 2 201 3 60 1 10 4 155 1 247 1 113 1 205 1 251 3 15 1 208 1 69 1 16 2 163 2 354 1 71 1 214 1 300 1 362 1 171 1 78 2 173 1 217 1 34 1 36 2 37 1 371 2 269 1 182 3 270 5 38 1 222 1 309 5 91 1 312 2 313 1 48 1 
144 1 231 1 95 1 146 1 52 1 275 2 276 1 100 2 4 1 103 1 280 2 57 4 283 2 201 3 60 1 10 4 155 1 247 1 113 1 205 1 251 3 15 1 208 1 69 1 16 2 163 2 354 1 71 1 214 1 300 1 362 1 171 1 78 2 173 1 217 1 34 1 36 2 37 1 371 2 269 1 182 3 270 5 38 1 222 1 309 5 91 1 312 2 313 1 48 1 
231 1 95 1 146 1 275 1 100 2 329 1 280 1 199 2 57 4 201 2 111 2 60 1 10 4 247 1 205 1 64 1 251 2 14 2 208 1 69 1 163 1 354 1 71 1 214 1 300 1 362 1 78 2 217 1 34 1 37 1 371 1 270 4 182 2 38 1 309 4 91 1 312 2 313 1 48 1 
122 1 351 1 93 2 233 1 213 1 256 1 169 1 25 1 238 2 102 1 76 1 240 3 131 1 153 2 8 1 220 1 221 1 289 1 340 1 374 1 184 6 206 2 229 3 379 1 292 1 164 1 
122 2 351 2 93 1 94 3 53 1 127 1 193 1 256 4 169 2 361 1 238 2 102 2 363 1 240 8 131 2 153 4 8 11 286 1 287 1 220 1 112 1 221 1 183 2 88 2 374 2 184 14 375 1 223 1 250 3 206 1 229 6 141 1 292 11 
122 1 189 1 351 1 93 1 272 1 319 1 52 1 54 1 193 1 127 1 256 1 169 1 277 1 196 1 102 1 4 1 280 2 240 1 29 1 153 2 154 1 368 1 33 1 371 1 112 1 221 1 12 1 339 1 159 1 374 1 184 2 41 1 115 1 342 1 229 1 187 1 163 2 49 1 
189 3 93 2 272 2 233 1 319 2 52 1 53 4 193 1 328 1 149 2 55 2 277 2 238 8 4 1 102 3 196 2 280 3 240 10 153 6 8 7 242 1 285 1 287 2 112 1 12 1 289 1 340 1 159 3 115 1 206 4 342 1 292 7 163 3 210 2 122 3 351 3 126 2 127 1 256 7 169 3 25 1 76 1 29 3 131 3 368 2 264 1 33 2 220 3 371 1 221 3 183 2 87 2 88 2 374 3 184 20 41 2 229 10 379 1 187 2 
122 2 189 7 351 2 166 1 52 1 213 1 127 1 169 2 328 1 299 1 277 2 4 1 102 2 279 1 280 1 301 1 240 1 29 8 153 4 368 3 178 1 371 1 112 1 267 2 221 2 12 2 158 1 159 8 374 2 184 2 41 2 226 1 13 1 342 1 229 1 187 2 314 1 162 1 163 1 
122 1 351 1 52 1 193 1 256 1 169 1 238 1 102 1 4 1 103 1 280 1 240 1 131 1 108 1 153 2 8 1 133 1 287 1 220 1 371 1 221 1 183 1 88 1 374 1 184 3 206 1 229 2 292 1 163 1 
122 1 351 1 53 1 213 1 221 1 256 1 169 1 88 1 184 2 374 1 238 1 102 1 152 1 240 2 292 1 131 1 153 2 8 1 
122 1 351 1 287 1 220 1 213 1 221 1 256 1 169 1 184 2 374 1 237 1 238 1 102 1 206 1 229 2 292 1 153 2 8 1 
122 1 351 1 53 1 213 1 256 2 169 1 238 2 102 1 240 2 131 1 153 2 8 2 287 1 220 1 221 1 183 1 88 1 374 1 184 4 206 1 229 2 292 2 
122 1 351 1 178 1 53 1 221 1 256 1 169 1 88 1 184 2 374 1 238 1 102 1 152 1 240 2 292 1 131 1 153 2 8 1 
122 1 351 1 178 1 287 1 220 1 221 1 256 1 169 1 184 2 374 1 237 1 238 1 102 1 206 1 229 2 292 1 153 2 8 1 
122 1 351 1 53 1 256 2 169 1 238 2 102 1 240 2 131 1 153 2 8 2 178 1 287 1 220 1 221 1 183 1 88 1 374 1 184 4 206 1 229 2 292 2 
122 1 351 1 53 1 256 2 169 1 238 2 102 1 240 2 131 1 153 2 8 2 287 1 220 1 221 1 183 1 88 1 184 4 374 1 206 1 229 2 292 2 
122 1 189 1 351 1 93 1 272 1 319 1 127 1 169 1 149 1 277 1 196 1 102 1 280 1 240 1 29 1 153 2 368 1 33 1 112 1 221 1 12 1 184 2 159 1 374 1 41 1 229 1 187 1 163 1 
122 1 189 1 351 1 93 1 272 1 319 1 127 1 169 1 277 1 102 1 280 1 240 1 29 1 153 2 32 1 368 1 112 1 221 1 12 1 307 1 135 1 184 2 159 1 374 1 41 1 229 1 187 1 163 1 
122 1 351 1 53 1 193 1 256 2 169 1 238 2 102 1 240 2 131 1 153 2 8 2 287 1 220 1 221 1 183 1 88 1 374 1 184 4 206 1 229 2 292 2 
122 1 189 1 351 1 272 1 319 1 53 1 256 2 169 1 149 1 238 2 277 1 196 1 102 1 280 1 240 2 131 1 29 1 153 2 8 2 368 1 33 1 220 1 287 1 221 1 183 1 88 1 87 1 184 4 159 1 374 1 41 1 206 1 229 2 187 1 292 2 162 1 163 1 
122 1 351 1 53 1 52 1 193 1 256 1 169 1 238 1 102 1 4 1 103 1 280 1 240 2 131 1 108 1 153 2 8 1 220 1 287 1 371 1 221 1 183 1 88 1 374 1 184 3 229 1 161 1 292 1 163 1 
317 1 122 2 350 1 351 2 94 2 255 1 97 2 53 3 169 2 360 1 238 6 364 2 240 9 131 3 153 4 58 1 287 3 220 3 183 3 88 3 374 2 184 19 375 1 250 1 138 1 206 3 229 10 141 1 47 1 17 1 
317 1 122 3 350 1 351 3 295 1 94 2 97 4 53 2 169 3 238 4 364 1 282 2 240 14 131 3 153 6 263 1 58 1 243 1 220 2 287 2 183 3 373 1 88 3 374 3 184 26 375 2 250 2 138 1 206 2 343 1 229 12 47 2 209 1 17 2 
317 1 94 4 233 1 97 4 53 4 238 8 240 20 282 1 153 6 58 1 243 1 287 4 289 1 340 1 250 3 206 4 343 1 209 1 17 1 122 3 350 1 351 3 295 1 169 3 25 1 360 1 172 1 76 1 364 1 131 5 263 1 220 5 183 4 373 1 88 4 184 41 374 3 375 3 138 1 229 21 141 1 379 1 47 2 
317 1 122 4 350 1 351 4 295 1 94 4 233 1 97 4 53 3 169 4 360 1 25 1 238 7 172 1 76 1 364 1 282 2 240 20 131 5 153 8 263 1 243 1 58 1 287 3 220 4 183 4 289 1 340 1 373 1 88 4 374 4 184 38 375 3 250 3 138 1 206 4 343 1 229 18 379 1 141 1 47 2 209 1 17 1 
317 1 122 2 350 1 351 2 295 1 94 4 233 1 97 4 53 7 169 2 25 1 238 14 76 1 364 1 282 1 240 27 131 8 153 4 263 1 243 1 58 1 286 2 287 7 220 8 183 7 289 1 340 1 373 1 88 7 374 2 184 52 375 2 250 4 138 1 206 7 343 1 229 25 379 1 141 2 47 1 209 1 17 1 
249 1 284 1 353 1 336 1 337 1 27 1 134 1 298 1 325 1 175 1 
43 1 219 1 
358 1 284 1 137 1 197 1 353 1 336 1 27 1 134 1 175 1 
284 1 18 1 353 1 60 1 336 1 337 1 10 1 51 1 134 1 298 1 325 1 74 1 66 1 376 1 27 1 107 2 57 1 175 1 
284 1 18 1 353 1 60 1 336 1 337 1 10 1 51 1 134 1 298 1 325 1 74 1 66 1 376 1 27 1 107 2 57 1 175 1 
284 1 18 1 353 1 60 1 336 1 337 1 10 1 51 1 134 1 298 1 325 1 74 1 66 1 376 1 27 1 107 2 57 1 175 1 
129 1 156 1 333 1 
129 1 156 1 333 1 
224 1 0 1 
224 1 0 1 156 1 
117 1 236 1 
18 1 93 1 353 1 52 2 168 1 236 1 74 1 56 1 4 2 280 2 5 1 27 1 107 1 57 1 366 1 175 1 284 1 336 1 10 1 219 1 134 1 371 2 181 1 43 1 117 1 163 2 50 1 
129 1 333 1 
224 1 0 1 156 1 
122 1 189 2 351 1 193 1 127 1 169 1 299 1 277 1 102 1 280 2 281 1 259 1 239 1 240 1 29 2 153 2 368 1 371 2 112 1 267 2 221 1 204 1 159 2 374 1 184 2 41 1 229 1 187 1 68 1 314 1 163 2 
189 2 335 1 212 1 203 1 266 1 192 1 170 1 328 1 159 2 41 1 186 1 75 1 28 1 187 1 365 1 29 2 162 1 30 1 82 2 
189 1 212 1 266 1 192 1 170 1 328 1 159 1 195 1 41 1 186 1 75 1 28 1 365 1 187 1 29 1 30 1 82 2 
368 1 189 1 203 1 12 1 99 1 158 1 159 1 41 1 277 1 13 1 106 1 187 1 365 1 29 1 
189 1 335 1 212 1 203 1 266 1 192 1 170 1 328 1 159 1 41 1 186 1 75 1 28 1 187 1 365 1 29 1 30 1 82 2 
346 1 
60 1 273 1 313 1 247 1 69 1 164 1 215 1 
144 1 111 1 60 2 95 1 10 1 36 1 37 1 247 1 38 1 100 1 309 1 313 1 57 1 16 1 48 1 69 1 283 1 
189 1 272 1 95 2 274 1 297 3 327 2 100 1 55 1 277 1 131 1 57 1 29 1 283 3 302 1 303 1 368 3 177 1 111 6 60 3 220 1 287 1 10 1 265 1 37 2 247 3 183 1 62 1 12 1 85 1 86 1 38 2 88 1 159 1 41 1 309 1 90 3 228 1 187 2 48 2 69 4 92 1 
295 1 94 1 95 2 232 1 324 1 297 5 100 1 57 1 131 2 283 3 303 1 263 1 243 1 111 6 60 5 10 1 287 2 220 2 37 2 247 5 183 2 85 2 38 2 88 2 375 1 250 1 309 1 114 1 90 5 67 1 343 1 313 2 69 8 48 2 209 1 
95 1 233 1 52 1 324 1 275 1 25 1 4 1 280 1 171 1 103 1 173 1 57 1 131 2 334 1 10 1 220 1 37 1 371 1 247 2 269 1 85 2 38 1 222 1 15 1 379 1 48 1 69 2 163 1 
95 1 273 1 60 1 37 1 247 1 38 1 215 1 313 1 48 1 69 1 
111 10 60 5 287 2 220 2 324 1 247 5 297 5 183 2 85 2 88 2 55 1 90 5 131 2 69 5 283 5 
100 1 309 1 60 1 10 1 313 1 57 1 
189 4 145 1 95 2 232 2 234 1 22 1 100 2 277 1 29 4 57 3 109 2 303 2 368 1 10 3 37 2 180 1 247 2 12 2 38 2 39 1 158 1 159 4 41 1 309 4 13 1 187 1 48 1 69 2 254 1 
122 1 189 1 351 1 93 1 272 1 319 1 52 2 127 1 169 1 149 1 277 1 4 2 196 1 102 1 280 3 103 2 29 1 153 2 368 1 33 1 371 2 221 1 12 1 184 1 374 1 159 1 41 1 42 1 229 1 15 1 187 1 163 3 
303 1 111 4 95 1 60 4 232 1 37 1 297 2 247 2 289 1 38 1 90 2 313 2 48 1 69 1 283 2 
244 1 336 1 134 1 
244 1 336 1 134 1 
244 1 336 1 134 1 
117 1 336 1 337 1 134 1 120 1 
336 1 261 1 134 1 
336 1 261 1 134 1 
336 1 261 1 134 1 
336 1 134 1 
284 1 175 1 
122 2 351 2 220 1 233 1 53 1 289 1 169 2 340 1 184 8 374 2 25 1 238 3 206 2 76 1 229 4 240 4 282 1 379 1 131 1 153 4 
220 1 233 1 289 1 340 1 184 6 25 1 238 2 206 2 76 1 229 3 379 1 240 3 131 1 164 1 
122 1 351 1 220 1 287 1 53 1 183 1 169 1 88 1 374 1 184 4 238 2 206 1 229 2 240 2 131 1 143 1 153 2 
94 2 220 1 287 1 53 1 183 1 88 1 184 7 375 1 250 1 238 2 206 1 229 4 240 3 141 1 131 1 
122 2 351 2 94 2 233 2 53 4 169 2 25 1 361 1 238 9 76 1 240 11 282 2 131 3 153 4 286 1 287 2 220 3 83 1 183 2 289 1 340 1 88 2 184 23 374 2 250 2 206 5 229 12 379 2 141 1 
184 1 94 1 229 1 
184 1 250 1 240 1 
122 1 351 1 287 1 220 1 53 1 183 1 169 1 88 1 374 1 55 1 184 6 238 3 206 2 229 3 240 3 131 1 153 2 143 1 
122 1 263 1 350 1 243 1 351 1 295 1 94 1 220 2 287 2 53 1 183 2 169 1 88 2 374 1 184 12 375 1 250 1 238 2 206 1 343 1 229 6 240 6 131 2 209 1 153 2 
220 1 233 1 53 1 184 6 25 1 238 2 206 1 229 3 240 3 379 1 131 1 
122 1 351 1 233 1 83 1 53 1 169 1 340 1 184 3 374 1 238 2 206 1 76 1 229 2 240 1 379 1 282 1 153 2 
122 1 350 1 351 1 334 1 220 2 233 2 53 2 169 1 374 1 184 10 25 1 238 5 206 3 229 5 379 2 240 5 131 2 153 2 
122 1 350 1 351 1 53 1 169 1 88 1 374 1 184 2 238 1 240 2 131 1 153 2 
122 1 350 1 351 1 220 1 287 1 53 1 183 1 169 1 88 1 374 1 184 4 238 2 206 1 229 2 240 2 131 1 153 2 
122 3 350 1 351 3 233 1 83 1 53 1 169 3 184 3 374 3 360 1 238 2 206 1 229 2 282 1 379 1 240 1 153 6 
122 5 350 1 351 5 94 4 165 1 233 3 320 1 53 5 169 5 25 2 360 1 238 12 76 1 282 2 240 16 131 5 153 10 287 3 220 5 83 1 183 3 289 1 340 1 88 3 374 5 184 34 375 1 250 3 225 1 206 7 229 18 379 3 141 1 143 1 
122 1 350 1 351 1 94 1 233 1 169 1 25 1 238 2 76 1 240 4 131 1 153 2 263 1 220 1 289 1 340 1 184 8 374 1 250 1 375 1 206 2 229 4 379 1 
122 2 350 1 351 2 94 2 233 1 53 1 169 2 25 1 238 3 76 1 240 6 131 2 153 4 263 1 220 1 183 1 289 1 340 1 88 1 184 11 374 2 375 1 250 1 206 2 229 5 379 1 141 1 143 1 
122 3 350 1 351 3 295 1 94 1 233 1 53 1 169 3 25 1 238 4 76 1 240 9 282 1 131 3 153 6 263 1 243 1 287 2 220 3 183 2 289 1 340 1 88 2 184 19 374 3 250 1 375 1 206 3 229 10 343 1 379 1 209 1 143 1 
122 3 350 1 351 3 295 1 94 1 233 1 53 2 169 3 25 1 238 5 76 1 282 1 240 10 131 3 153 6 263 1 243 1 287 1 220 2 183 2 289 1 340 1 88 2 184 17 374 3 250 1 375 1 206 3 229 7 343 1 379 1 209 1 143 1 
122 1 350 1 351 1 94 1 233 1 169 1 25 1 238 2 76 1 240 4 131 1 153 2 263 1 220 1 289 1 340 1 184 8 374 1 250 1 375 1 206 2 229 4 379 1 
122 1 263 1 350 1 243 1 351 1 295 1 94 1 220 2 287 2 53 1 183 2 169 1 88 2 374 1 184 12 375 1 250 1 238 2 206 1 343 1 229 6 240 6 131 2 209 1 153 2 
122 4 350 1 351 4 295 1 94 1 233 1 53 2 169 4 25 1 238 5 76 1 240 10 282 2 131 3 153 8 263 1 243 1 287 1 220 2 183 2 289 1 340 1 88 2 184 18 374 4 375 1 250 1 206 3 343 1 229 8 379 1 209 1 143 1 
122 4 350 1 351 4 295 1 94 1 53 3 169 4 360 1 238 6 240 9 282 2 131 3 153 8 263 1 243 1 287 2 220 2 183 3 88 3 184 16 374 4 375 1 250 1 206 3 343 1 229 7 209 1 
220 1 233 3 53 3 340 1 184 7 25 1 238 6 206 3 76 2 229 4 379 3 240 3 131 1 
122 4 350 1 351 4 295 1 94 1 233 1 53 1 169 4 25 1 360 1 238 4 76 1 240 10 282 2 131 3 153 8 263 1 243 1 287 1 220 2 183 2 289 1 340 1 88 2 184 18 374 4 375 1 250 1 206 3 343 1 229 8 379 1 209 1 
205 1 93 1 116 1 280 1 330 1 371 1 163 1 
93 1 321 1 371 1 11 1 98 1 205 1 116 1 280 1 330 1 347 1 142 1 163 1 
158 1 368 1 159 1 189 1 41 1 277 1 13 1 187 1 29 1 12 1 164 1 
368 1 189 1 93 1 272 1 319 1 52 1 371 1 12 1 159 1 41 1 277 1 4 1 196 1 280 2 342 1 187 1 29 1 163 2 
189 1 93 1 272 2 319 1 71 1 52 1 20 1 275 1 277 2 196 1 4 2 280 2 198 1 29 1 109 1 217 1 368 3 371 2 159 1 41 1 342 1 187 1 163 2 
189 2 93 1 272 2 319 1 71 1 52 1 20 1 275 1 2 1 277 2 4 2 280 2 198 1 29 2 109 1 217 1 368 3 371 2 307 1 159 2 41 1 342 1 187 1 163 2 
189 1 52 1 275 1 327 1 4 1 103 1 280 1 173 1 29 1 57 1 109 1 368 1 132 1 60 1 10 1 371 1 269 1 159 1 222 1 313 1 15 1 163 1 
189 1 52 1 275 1 327 1 4 1 103 1 280 1 173 1 29 1 57 1 109 1 368 1 60 1 10 1 371 1 269 1 86 1 159 1 222 1 313 1 15 1 163 1 
159 1 189 1 41 1 301 1 187 1 29 1 
189 6 368 3 272 1 166 1 267 1 288 1 148 1 12 2 328 1 159 7 41 2 226 1 277 2 160 1 279 1 228 1 301 1 187 3 314 1 162 1 29 7 
122 2 189 1 351 2 93 2 272 1 233 1 319 1 126 1 52 1 193 1 256 1 169 2 149 1 25 1 238 2 277 1 102 2 4 1 196 1 280 2 76 1 259 1 240 3 131 1 29 1 153 4 8 1 368 1 33 1 220 1 371 1 221 2 289 1 340 1 87 1 184 6 374 2 159 1 41 1 206 2 229 3 342 1 379 1 187 1 292 1 162 1 163 2 
189 1 95 2 273 1 233 1 52 1 274 1 324 1 275 1 327 1 100 1 4 1 103 1 280 1 57 2 334 1 60 2 10 2 247 5 12 1 159 1 15 1 69 4 163 1 215 1 25 1 173 1 29 1 131 2 368 1 177 1 220 2 37 2 371 1 269 1 86 1 39 1 38 2 85 2 222 1 309 1 313 2 379 1 48 2 92 1 50 1 
189 2 368 2 272 1 265 1 159 2 41 1 277 1 228 1 301 1 187 2 162 1 174 1 29 2 
189 4 368 1 12 1 2 1 158 1 159 4 41 1 150 1 277 1 13 1 187 1 29 4 162 1 
189 2 368 1 285 1 370 1 272 1 148 1 159 2 41 1 277 1 160 1 187 2 29 2 109 1 200 1 
159 1 189 1 41 1 266 1 28 1 187 1 29 1 30 1 12 1 82 1 
328 1 368 1 159 2 189 2 41 1 277 1 187 1 68 1 314 1 29 2 162 1 
189 4 368 3 166 1 12 1 158 1 159 5 41 2 150 1 277 2 13 1 279 1 187 2 29 5 162 1 314 1 109 1 
189 4 368 3 190 1 12 1 158 1 159 5 41 2 150 1 277 2 13 1 279 1 187 2 29 5 162 1 314 1 109 1 
368 1 189 1 93 1 272 1 319 1 52 1 371 1 12 1 307 1 159 1 41 1 277 1 4 1 280 2 342 1 187 1 29 1 163 2 
189 1 368 1 272 1 288 1 148 1 159 1 41 1 277 1 160 1 228 1 187 2 29 1 109 1 
369 1 3 1 93 1 96 1 344 1 
369 2 93 1 231 1 60 1 96 1 10 2 354 1 71 1 355 1 275 1 23 1 278 1 3 2 313 1 271 1 344 2 57 2 217 1 50 1 
369 1 3 1 280 1 281 1 96 1 239 1 371 1 204 1 163 1 
278 1 96 1 271 1 
9 1 123 1 246 1 164 1 
9 1 211 1 123 1 136 1 124 1 338 1 246 1 
124 1 318 1 378 1 
9 1 211 1 123 1 124 3 338 3 304 1 246 1 136 1 311 1 252 1 332 2 80 1 
9 1 211 1 123 1 24 1 136 1 359 1 124 2 338 2 246 1 
170 1 9 1 367 1 211 1 136 1 124 1 311 1 338 1 28 1 348 1 82 1 
9 1 211 1 136 1 124 1 311 1 338 1 246 1 
211 1 123 1 136 1 124 1 311 1 338 1 246 2 
9 1 211 2 124 2 70 1 338 2 246 1 136 2 311 1 377 1 7 1 
211 1 9 2 123 1 124 3 338 3 246 1 1 1 136 1 24 2 311 1 130 1 151 1 348 1 
9 1 211 1 123 1 124 2 266 1 338 2 246 1 192 1 170 1 136 1 24 1 311 1 28 1 82 2 216 1 
211 2 9 2 123 1 124 4 338 4 246 1 63 1 136 2 24 2 359 1 311 1 151 1 348 1 
9 1 211 1 123 1 136 1 124 1 311 1 338 1 246 1 
211 1 9 3 123 2 124 4 304 1 338 4 246 2 356 1 24 2 136 1 151 1 332 1 80 1 348 1 
9 1 211 1 123 1 124 2 338 2 246 1 61 1 194 1 136 1 24 1 311 1 227 1 
9 1 211 1 123 1 124 3 338 3 304 2 246 1 235 1 136 1 311 1 332 2 80 1 
9 2 179 2 248 1 290 1 
211 1 136 1 124 1 311 1 125 1 338 1 
9 1 211 1 123 1 24 1 136 1 124 2 311 1 130 1 338 2 246 1 
308 1 
9 1 211 1 123 1 136 1 124 1 311 1 338 1 246 1 
211 1 9 1 123 1 124 3 338 3 246 1 24 1 136 1 311 1 130 1 332 1 
9 1 151 1 356 1 348 1 
9 1 246 1 

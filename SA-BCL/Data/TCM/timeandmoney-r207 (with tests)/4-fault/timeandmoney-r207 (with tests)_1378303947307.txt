#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (28,33) 321 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (28,33) 321 334 263 (28,33) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 199 (47,60,103) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (28,33) 321 48 290 214 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (28,33) 321 235 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (28,33) 321 334 134 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (28,33) 321 172 91 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (28,33) 321 334 263 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (28,33) 321 172 91 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (28,33) 321 334 263 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (28,33) 321 172 134 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (28,33) 321 286 (89,289) (89,289) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 1 90 2 44 1 236 6 160 9 186 2 5 1 362 1 268 2 336 1 77 3 295 1 131 1 220 2 148 2 223 4 339 1 318 5 136 9 319 2 226 1 345 1 111 1 201 1 113 1 325 2 23 1 139 1 
255 1 90 2 44 1 236 6 160 9 186 2 5 1 362 1 268 2 336 1 77 3 295 1 131 1 220 2 148 2 223 4 339 1 318 5 136 9 319 2 226 1 345 1 111 1 201 1 113 1 325 2 23 1 139 1 
255 1 90 2 44 1 236 7 160 10 186 2 5 1 362 1 268 2 336 1 77 4 295 1 131 1 220 2 148 2 223 5 339 1 318 6 136 10 319 2 226 1 345 1 111 1 201 1 113 1 325 2 23 1 139 1 
255 1 90 2 44 1 236 4 160 7 186 1 5 1 362 1 268 2 336 1 77 2 131 1 220 2 148 2 223 3 339 1 318 4 136 7 319 2 226 1 345 1 111 1 201 1 113 1 325 2 23 1 139 1 
255 1 77 1 90 1 295 1 148 1 223 2 236 3 160 4 318 3 136 4 319 1 186 2 111 1 201 1 268 1 113 1 325 1 139 1 
255 1 90 1 220 1 148 1 281 1 116 1 160 2 318 1 248 1 136 2 319 1 111 1 362 1 268 1 23 1 139 1 
255 1 77 1 44 1 220 1 148 2 223 1 236 1 160 3 318 2 136 3 319 2 111 1 139 1 
255 1 90 1 44 1 284 1 236 7 160 9 186 2 268 1 77 3 295 1 220 1 148 2 223 4 318 5 136 9 319 2 226 1 61 1 345 1 111 1 201 1 113 1 325 1 139 1 
255 1 90 1 44 1 284 1 236 7 160 9 186 2 268 1 77 3 295 1 220 1 148 2 223 4 318 5 136 9 319 2 226 1 61 1 345 1 111 1 201 1 113 1 325 1 139 1 
63 1 314 1 128 1 
3 1 315 2 63 1 
65 2 279 2 159 1 32 2 37 1 51 2 106 2 52 2 
233 1 65 3 279 2 257 1 159 1 283 2 93 2 2 1 181 1 216 1 95 1 27 1 119 2 49 2 165 1 30 1 32 2 124 2 34 1 147 1 51 3 269 1 191 1 244 1 52 2 245 1 79 1 132 1 368 1 37 1 225 1 106 2 135 1 18 1 277 1 346 1 62 1 
331 1 65 1 279 1 32 1 37 1 306 1 51 1 106 1 35 1 52 1 
65 1 280 1 25 1 120 1 249 1 320 1 331 1 166 1 189 1 99 1 63 1 51 1 314 1 52 1 
65 1 279 1 280 1 25 2 106 1 120 1 249 1 331 1 166 2 99 1 32 1 63 1 51 1 314 1 52 1 
166 1 25 1 9 1 307 1 232 1 
207 1 166 2 25 2 9 1 125 1 63 1 232 1 314 1 
166 1 25 1 9 1 
65 1 279 1 25 1 37 1 306 1 106 1 331 1 166 1 167 1 32 1 232 1 51 1 35 1 52 1 
63 1 
166 2 7 1 25 2 9 1 125 1 63 1 232 1 314 1 
129 1 11 2 25 5 298 1 287 1 117 1 359 1 38 1 98 1 71 2 20 1 166 5 8 1 125 1 9 2 63 1 302 2 232 2 314 1 
159 1 128 1 
65 2 279 1 159 2 247 1 106 1 163 1 32 1 51 2 52 2 
321 1 33 1 
233 1 65 1 257 1 159 1 328 1 93 1 2 1 216 1 27 1 119 1 18 1 124 1 346 1 51 1 269 1 191 1 
24 1 65 5 279 4 159 1 247 1 106 1 340 1 239 2 122 1 189 1 323 1 32 4 51 5 52 5 
331 1 65 2 279 2 316 1 32 2 51 2 35 1 52 2 
233 1 65 2 257 1 279 1 93 1 2 1 216 1 27 1 119 1 18 1 239 1 122 1 346 1 32 1 124 1 33 1 191 1 51 2 269 1 52 1 
65 3 239 1 279 3 159 1 32 3 106 1 51 3 52 3 
331 1 65 1 279 1 32 1 51 1 35 1 52 1 
331 1 65 1 279 1 247 1 32 1 51 1 106 1 163 1 52 1 
233 1 65 4 257 1 279 3 280 1 159 1 283 2 93 1 2 1 25 1 216 1 181 1 95 1 27 1 120 1 119 1 69 1 331 1 239 1 49 1 122 1 165 1 166 1 99 1 32 3 124 1 147 1 191 1 51 4 269 1 52 3 245 1 79 1 132 1 247 1 368 1 37 1 106 2 135 1 18 1 249 1 277 1 346 1 87 1 
65 2 239 1 279 1 159 1 189 1 32 1 51 2 340 1 52 2 
65 3 279 3 280 1 247 1 25 1 106 1 120 1 249 1 331 1 239 2 122 1 166 1 99 1 32 3 87 1 63 1 51 3 22 1 52 3 
65 2 279 2 247 1 55 1 106 1 239 1 32 2 33 1 51 2 52 2 
233 1 65 1 257 1 159 1 93 1 2 1 216 1 27 1 119 1 18 1 124 1 346 1 51 1 269 1 191 1 
43 1 233 1 65 1 257 1 159 1 93 1 216 1 27 1 119 1 18 1 151 1 124 1 346 1 51 1 269 1 
245 1 79 2 132 1 337 1 283 2 368 1 28 1 263 1 321 1 49 2 165 1 277 1 33 1 147 1 334 1 88 1 
331 1 65 1 279 1 316 1 32 1 51 1 120 1 52 1 
60 1 313 1 
60 1 313 1 
199 1 47 1 
199 1 47 1 
199 1 47 1 
60 1 213 1 313 1 
60 1 213 1 313 1 
60 1 103 1 313 1 
60 1 199 1 313 1 47 1 
60 1 213 1 313 1 
60 1 313 1 206 1 
60 1 313 1 206 1 
60 1 313 1 206 1 
65 2 114 1 279 2 140 1 159 1 25 1 217 1 144 1 185 1 166 1 32 2 50 1 127 1 313 1 51 2 193 1 52 2 76 1 103 1 107 1 150 1 174 1 175 1 60 1 
78 1 140 2 329 1 25 2 217 2 107 1 150 2 144 2 360 1 60 2 97 2 166 2 229 1 112 1 63 1 127 3 313 2 375 1 204 1 
90 1 268 1 325 1 
90 1 281 1 268 1 
90 3 281 1 357 1 15 1 325 2 46 1 
90 2 281 1 85 1 15 1 325 1 46 1 
90 2 281 1 15 1 325 1 46 2 
114 1 354 1 282 1 259 2 25 5 142 2 117 2 183 1 3 1 361 1 71 1 166 5 50 1 9 1 125 1 219 1 334 1 314 1 194 2 11 1 129 3 337 1 315 3 13 1 134 1 172 1 38 1 250 1 175 1 302 1 63 2 232 4 
66 1 25 9 142 6 117 6 307 5 183 2 3 3 70 5 71 2 72 1 187 1 166 9 9 6 125 1 219 2 334 3 314 1 194 6 11 2 129 8 337 3 315 9 13 3 102 1 222 1 134 3 275 1 172 3 38 1 175 4 250 1 20 1 63 5 302 2 232 7 
282 1 259 1 25 3 117 2 142 2 183 1 3 2 361 1 71 1 166 3 219 1 334 1 314 1 11 1 129 3 194 2 337 1 315 4 13 1 134 1 172 1 175 1 20 1 63 3 302 1 232 2 
66 1 282 1 259 2 25 4 142 4 117 4 183 1 3 3 71 1 361 1 166 4 219 1 334 2 314 1 194 4 11 1 129 5 337 2 315 7 13 2 102 1 134 2 275 1 172 2 175 2 20 1 63 4 302 1 232 3 
18 1 40 1 128 1 
18 1 184 1 
164 1 
18 1 233 1 27 1 
18 1 353 1 
18 1 233 1 
18 3 233 1 40 2 84 1 19 1 27 1 
79 3 337 1 12 1 13 1 1 1 366 1 149 1 286 2 261 3 342 2 49 7 289 1 218 1 62 4 168 1 304 1 89 1 
79 3 337 1 12 1 13 1 1 1 366 1 149 1 286 2 261 3 342 2 49 7 289 1 218 1 62 4 168 1 304 1 89 1 
79 3 337 1 12 1 13 1 1 1 366 1 179 1 149 1 286 2 261 3 342 2 49 7 289 1 218 1 62 4 168 1 304 1 89 1 
157 1 256 1 1 5 92 1 283 2 286 3 261 10 264 3 48 4 49 31 289 1 218 1 147 1 168 2 334 3 245 1 271 1 12 1 79 15 337 4 13 4 366 2 105 1 134 3 368 1 149 2 172 3 370 1 342 5 83 1 277 1 62 16 89 1 304 2 
157 1 1 1 283 4 286 2 261 4 49 9 289 1 147 2 168 1 245 2 337 1 79 4 12 1 13 1 246 1 338 1 366 1 368 2 149 1 342 3 277 2 62 5 89 1 304 1 
255 1 90 2 212 1 257 1 281 1 93 1 357 1 236 1 160 2 119 1 6 1 240 1 124 1 268 1 335 1 169 1 220 1 148 1 16 1 317 1 318 1 136 2 319 1 227 1 111 1 202 1 346 1 325 1 64 1 139 1 
255 1 90 2 212 1 257 1 281 1 93 1 357 1 236 2 160 3 119 1 240 1 124 1 292 1 268 1 169 1 220 1 148 1 16 1 317 1 274 1 318 1 136 3 319 1 227 1 202 1 346 1 325 1 64 1 349 1 139 1 
255 1 90 2 257 1 281 1 93 1 357 1 236 2 160 2 119 1 240 1 124 1 292 1 268 1 169 1 220 1 16 1 317 1 274 1 318 1 136 2 227 1 346 1 64 1 325 1 139 1 
233 1 257 1 93 1 160 1 119 1 265 1 241 1 124 1 269 1 220 2 36 1 54 1 148 1 272 1 317 2 16 2 136 1 18 1 319 1 227 2 346 1 231 1 349 1 
90 2 212 1 257 1 281 1 93 1 357 1 160 1 119 1 6 1 240 1 124 1 268 1 169 1 220 1 148 1 16 1 317 1 274 1 136 1 319 1 227 1 111 1 202 1 346 1 325 1 64 1 
210 1 
233 1 280 1 93 2 3 2 331 1 189 1 99 1 9 6 51 1 294 2 52 1 11 1 54 1 14 1 56 4 18 1 249 1 343 1 109 1 252 2 346 1 21 2 63 2 348 2 302 1 65 1 208 1 115 1 257 1 211 1 67 1 258 1 25 5 117 2 161 1 308 2 119 2 120 1 71 1 166 5 124 2 125 3 219 1 363 1 269 2 314 1 364 2 129 2 365 1 315 2 36 1 273 2 38 1 320 1 41 1 
65 1 115 1 280 1 67 1 258 1 25 3 161 1 120 1 331 1 166 3 7 1 99 1 189 1 9 2 125 1 51 1 52 1 294 1 56 2 249 1 320 1 343 1 
65 1 115 1 280 1 67 1 258 1 25 3 161 1 120 1 308 1 331 1 166 3 7 1 99 1 189 1 9 1 125 1 51 1 314 1 52 1 56 3 249 1 320 1 343 1 63 1 
65 1 115 1 280 1 67 1 258 1 25 3 161 1 120 1 308 1 331 1 166 3 7 1 99 1 189 1 125 1 9 2 51 1 314 1 52 1 294 1 56 3 249 1 320 1 343 1 348 1 63 1 
280 1 327 1 331 1 3 2 4 1 7 1 99 1 189 1 243 1 9 7 51 1 294 4 52 1 11 1 296 1 56 6 249 1 343 1 252 2 21 2 348 4 63 5 302 1 65 1 115 1 211 1 67 1 258 1 25 5 117 1 161 1 118 1 120 1 308 4 71 1 166 5 125 3 314 5 364 2 129 1 273 2 38 1 320 1 41 1 
280 1 331 1 3 2 99 1 189 1 9 4 51 1 52 1 294 2 11 1 56 4 249 1 343 1 252 2 21 2 302 1 348 2 63 2 65 1 115 1 211 1 67 1 258 1 25 4 117 1 161 1 120 1 308 2 71 1 166 4 125 2 363 1 314 1 364 2 129 1 315 2 273 2 38 1 320 1 41 1 
65 1 115 1 211 1 280 1 67 1 258 1 25 4 117 1 118 1 161 1 308 2 120 1 3 2 331 1 71 1 4 1 166 4 99 1 189 1 9 4 125 2 51 1 314 1 294 2 364 2 52 1 129 1 11 1 296 1 273 2 56 4 38 1 249 1 320 1 343 1 252 2 41 1 21 2 63 1 348 2 302 1 
65 1 115 1 211 1 280 1 67 1 258 1 25 4 117 1 118 1 161 1 308 2 120 1 3 2 331 1 71 1 4 1 166 4 99 1 189 1 9 4 125 2 51 1 314 1 294 2 364 2 52 1 129 1 11 1 296 1 273 2 56 4 38 1 249 1 320 1 343 1 252 2 41 1 21 2 63 1 348 2 302 1 
65 1 115 1 280 1 67 1 258 1 25 4 117 1 118 1 161 1 308 2 120 1 331 1 71 1 73 1 166 4 99 1 189 1 9 4 125 2 51 1 314 1 294 2 52 1 129 1 11 1 130 2 315 2 133 1 273 2 56 4 17 2 38 1 249 1 320 1 343 1 344 1 252 2 41 1 63 1 348 2 302 1 
65 1 115 1 211 1 280 1 67 1 327 1 258 1 25 4 117 1 118 1 161 1 120 1 308 3 3 2 331 1 71 1 4 1 166 4 99 1 189 1 125 2 9 5 51 1 314 1 364 2 52 1 294 3 129 1 11 1 296 1 273 2 56 5 38 1 249 1 320 1 343 1 252 2 41 1 21 2 63 1 302 1 348 3 
65 1 115 1 211 1 280 1 67 1 327 1 258 1 25 4 117 1 118 1 161 1 120 1 308 3 3 2 331 1 71 1 4 1 166 4 99 1 189 1 125 2 9 5 51 1 314 1 364 2 52 1 294 3 129 1 11 1 296 1 273 2 56 5 38 1 249 1 320 1 343 1 252 2 41 1 21 2 63 1 302 1 348 3 
280 1 331 1 99 1 189 1 9 4 51 1 52 1 294 2 11 1 56 4 17 2 249 1 343 1 252 2 302 1 348 2 63 1 65 1 115 1 67 1 258 1 25 4 117 1 161 1 120 1 308 2 71 1 73 1 166 4 125 2 363 1 314 1 129 1 130 2 315 2 273 2 38 1 320 1 41 1 
159 2 283 2 286 1 261 2 49 6 289 1 165 1 33 1 147 1 128 1 245 1 132 1 12 1 337 1 79 3 13 1 368 1 149 1 342 2 321 1 277 1 62 3 89 1 88 1 304 1 
245 1 132 1 79 1 283 2 214 1 368 1 332 1 48 1 321 1 49 1 165 1 290 1 277 1 33 1 147 1 
233 1 65 2 257 1 279 1 159 1 328 1 93 1 283 2 356 1 2 1 216 1 95 1 27 1 119 1 332 1 239 1 49 2 122 1 165 1 267 1 124 1 32 1 147 1 34 1 191 1 269 1 51 2 52 1 245 1 132 1 79 1 55 1 368 1 18 1 277 1 346 1 62 1 138 1 
233 1 65 2 257 1 279 1 178 1 283 4 93 1 2 1 235 1 216 1 95 1 27 1 162 1 119 1 332 1 239 1 49 2 122 1 165 2 32 1 124 1 33 1 147 2 191 1 51 2 269 1 75 1 52 1 245 2 132 2 79 2 368 2 135 1 18 1 321 1 277 2 137 1 346 1 
233 2 65 1 279 1 257 2 93 7 283 4 95 1 119 8 310 1 239 1 49 2 165 2 32 1 124 8 147 2 34 1 51 1 269 2 270 1 335 1 52 1 244 2 245 2 170 1 195 1 132 2 79 1 36 1 54 1 368 2 171 1 274 1 18 3 152 1 277 2 346 2 62 1 350 1 88 1 
65 1 279 1 283 2 332 1 49 3 165 1 32 1 33 1 147 1 51 1 334 1 52 1 245 1 132 1 337 1 79 2 13 1 247 1 368 1 224 1 134 1 106 1 172 1 321 1 277 1 62 1 
245 1 91 1 132 1 13 1 283 2 368 1 172 1 321 1 49 2 165 1 277 1 62 2 33 1 147 1 88 1 
245 1 132 1 337 1 79 2 283 2 368 1 263 1 321 1 49 2 165 1 277 1 33 1 147 1 334 1 88 1 
245 1 132 1 13 1 283 2 368 1 134 1 172 1 321 1 49 2 165 1 277 1 62 2 33 1 147 1 88 1 
245 1 91 1 132 1 13 1 283 2 368 1 172 1 321 1 49 2 152 1 165 1 277 1 62 2 33 1 147 1 
245 1 132 1 337 1 79 2 283 2 368 1 263 1 321 1 49 2 152 1 165 1 277 1 33 1 147 1 334 1 
245 1 132 1 13 1 283 2 368 1 134 1 172 1 321 1 49 2 152 1 165 1 277 1 62 2 33 1 147 1 
245 1 132 1 13 1 283 2 368 1 134 1 172 1 321 1 49 2 165 1 277 1 62 2 33 1 147 1 
233 1 65 1 257 1 159 1 93 1 283 2 2 1 216 1 95 1 27 1 119 1 49 2 165 1 124 1 34 1 147 1 191 1 269 1 51 1 245 1 132 1 79 1 368 1 135 1 18 1 277 1 346 1 62 1 
233 1 43 1 65 1 257 1 159 1 93 1 283 2 216 1 95 1 27 1 119 1 49 2 165 1 124 1 34 1 147 1 269 1 51 1 245 1 132 1 79 1 368 1 173 1 18 1 151 1 277 1 346 1 62 1 
245 1 132 1 13 1 283 2 368 1 134 1 172 1 332 1 321 1 49 2 165 1 277 1 62 2 33 1 147 1 
233 1 65 1 257 1 93 1 283 2 2 1 216 1 27 1 119 1 49 2 165 1 124 1 33 1 147 1 191 1 51 1 75 1 335 1 245 1 132 1 13 1 368 1 134 1 172 1 135 1 18 1 321 1 277 1 346 1 62 2 
245 1 65 1 132 1 279 1 13 1 247 1 283 2 134 1 368 1 300 1 106 1 172 1 332 1 321 1 49 2 165 1 277 1 32 1 62 2 33 1 147 1 51 1 52 1 
156 1 352 1 1 3 92 1 283 4 261 6 121 1 48 2 264 1 309 2 49 19 242 2 74 1 100 1 147 2 334 3 245 2 271 1 79 10 337 3 13 3 338 1 368 2 134 3 172 3 342 3 82 1 277 2 324 1 62 9 
157 2 1 2 352 2 283 6 285 1 94 1 261 4 121 1 48 2 264 2 309 4 49 26 311 1 242 1 74 1 147 3 334 2 293 1 245 3 271 2 337 2 79 12 13 3 338 1 368 3 134 3 172 3 342 2 82 1 251 1 277 3 153 1 324 2 62 14 
1 4 92 1 283 6 285 1 286 1 94 1 48 4 49 41 289 1 242 1 100 1 147 3 334 4 293 1 245 3 337 5 12 1 13 5 338 1 149 1 342 4 251 1 153 1 62 20 303 1 304 1 157 1 352 1 261 8 121 1 264 3 309 4 311 1 74 1 271 3 79 21 134 4 368 3 172 4 82 1 277 3 324 2 89 1 
157 2 352 1 1 3 92 1 283 8 285 1 286 1 94 1 261 7 121 1 48 4 264 3 309 4 49 38 289 1 311 1 242 1 74 1 100 1 147 4 334 3 293 1 245 4 271 3 12 1 79 18 337 4 13 5 338 1 368 4 134 4 149 1 172 4 342 4 82 1 251 1 277 4 153 1 324 2 62 20 303 1 304 1 89 1 
157 1 352 1 1 7 92 2 283 4 285 1 286 1 94 1 237 2 261 14 121 1 48 4 264 4 309 4 49 52 289 1 311 1 242 1 74 1 147 2 334 7 293 1 245 2 271 2 12 1 79 25 337 8 13 8 338 1 368 2 134 7 149 1 172 7 342 7 82 1 251 1 277 2 153 1 324 1 62 27 304 1 89 1 
60 1 140 1 329 1 112 1 217 1 313 1 204 1 278 1 150 1 144 1 
185 1 103 1 
60 1 140 1 322 1 182 1 217 1 313 1 10 1 150 1 144 1 
213 1 155 1 
198 1 196 1 206 1 
78 1 140 1 329 1 25 1 217 1 107 1 150 1 144 1 360 1 60 1 97 1 166 1 229 1 112 1 63 1 127 2 313 1 204 1 
78 1 140 1 329 1 25 1 217 1 107 1 150 1 144 1 360 1 60 1 97 1 166 1 229 1 112 1 63 1 127 2 313 1 204 1 
78 1 140 1 329 1 25 1 217 1 107 1 150 1 144 1 360 1 60 1 97 1 166 1 229 1 112 1 63 1 127 2 313 1 204 1 
198 1 213 1 155 1 
198 1 213 1 155 1 
196 1 206 1 
198 1 196 1 206 1 
76 1 193 1 
65 2 114 1 140 1 279 2 159 1 25 1 217 1 144 1 185 1 360 1 97 1 166 1 50 1 32 2 127 1 51 2 313 1 193 1 52 2 76 1 103 1 104 1 150 1 174 1 175 1 60 1 232 1 
233 1 65 2 257 1 283 2 93 2 355 1 215 1 95 1 119 2 332 1 310 1 49 2 165 1 124 2 147 1 34 1 51 2 52 2 244 2 245 1 101 1 132 1 79 1 368 1 171 1 18 1 59 1 277 1 346 1 374 1 62 1 
90 2 257 1 281 1 93 2 357 1 16 1 274 1 57 1 119 2 39 1 240 1 346 1 124 2 202 1 42 1 268 1 325 1 335 1 169 1 
90 2 209 1 257 1 281 1 93 1 357 1 16 1 274 1 57 1 119 1 240 1 124 1 202 1 346 1 268 1 325 1 169 1 
233 1 257 1 36 1 54 1 93 1 16 1 119 1 18 1 39 1 346 1 124 1 231 1 269 1 326 1 
90 2 257 1 281 1 93 1 357 1 16 1 274 1 57 1 119 1 39 1 240 1 346 1 124 1 202 1 42 1 268 1 325 1 169 1 
145 1 
129 1 98 1 298 1 117 1 63 1 314 1 128 1 
11 1 129 1 315 1 211 1 25 1 117 1 38 1 3 1 71 1 166 1 9 1 125 1 21 1 63 2 302 1 314 1 364 1 
233 1 257 1 93 1 141 1 235 1 27 1 119 1 184 1 71 1 124 1 219 1 269 1 11 1 129 2 369 1 58 1 38 1 18 2 276 1 84 1 346 2 254 1 302 1 
285 1 25 1 142 5 117 5 94 1 262 1 29 2 48 1 3 3 264 1 71 2 166 1 311 1 31 1 219 1 9 1 125 1 334 2 314 2 293 1 194 5 129 8 11 2 365 1 271 1 315 6 337 2 13 2 134 2 172 2 38 2 251 1 347 1 302 2 63 5 
65 1 279 1 25 1 117 2 306 1 262 1 331 1 29 2 71 1 166 1 167 1 32 1 51 1 35 1 52 1 11 1 129 2 296 1 12 1 337 1 13 2 149 1 37 1 106 1 38 1 81 1 302 1 304 1 
11 1 129 1 298 1 117 1 38 1 98 1 71 1 302 1 63 1 314 1 
194 5 129 5 315 10 337 2 13 2 134 2 235 1 117 5 142 5 172 2 262 1 29 2 3 5 63 5 334 2 
166 1 25 1 9 1 125 1 63 1 314 1 
233 1 208 1 257 1 93 4 25 3 117 2 119 4 71 2 266 1 166 3 124 4 219 2 9 4 125 2 269 2 11 2 129 2 365 2 36 1 54 1 367 1 14 1 38 1 108 2 18 1 20 1 228 1 346 1 302 2 
233 1 65 3 279 2 257 1 159 1 283 2 93 1 2 1 181 1 216 1 95 1 27 1 119 1 49 1 165 1 124 1 32 2 147 1 269 1 51 3 191 1 52 2 245 1 79 1 132 1 368 1 37 1 106 2 135 1 18 1 277 1 346 1 
194 2 11 1 129 1 365 1 315 4 286 1 142 2 117 2 38 1 3 2 71 1 219 1 302 1 63 4 314 2 
234 1 150 1 144 1 
234 1 150 1 144 1 
351 1 112 1 193 1 150 1 144 1 
234 1 150 1 144 1 
123 1 150 1 144 1 
123 1 150 1 144 1 
123 1 150 1 144 1 
150 1 144 1 
60 1 313 1 
245 2 157 1 337 1 12 1 79 4 13 1 1 1 283 4 368 2 286 1 149 1 261 3 342 2 49 8 289 1 277 2 62 4 147 2 89 1 304 1 
79 3 12 1 337 1 13 1 286 1 149 1 261 2 342 2 49 6 289 1 62 3 128 1 89 1 304 1 
245 1 79 2 337 1 0 1 13 1 1 1 283 2 368 1 134 1 261 2 172 1 342 1 49 4 277 1 62 2 147 1 334 1 
271 1 337 1 79 4 13 1 1 1 92 1 134 1 261 2 172 1 342 1 48 2 264 1 49 7 62 3 334 1 
157 2 1 4 92 1 283 4 68 1 286 1 237 1 261 9 264 2 48 2 49 23 289 1 290 1 147 2 334 2 245 2 12 1 79 12 337 3 13 3 134 2 368 2 149 2 172 2 342 5 277 2 62 11 304 2 89 1 
48 1 49 1 79 1 
264 1 49 1 62 1 
245 1 0 1 79 3 337 1 13 1 1 1 283 2 368 1 134 1 235 1 261 3 172 1 342 2 49 6 277 1 62 3 147 1 334 1 
1 1 283 2 285 1 94 1 261 2 264 1 48 1 49 12 311 1 147 1 334 2 293 1 245 1 271 1 79 6 337 2 13 2 338 1 368 1 134 2 172 2 342 1 251 1 277 1 62 6 
12 1 337 1 79 3 13 1 1 1 149 1 261 2 342 1 49 6 62 3 304 1 
245 1 157 1 79 2 1 1 283 2 68 1 368 1 149 1 261 2 342 1 49 3 289 1 277 1 62 1 147 1 304 1 89 1 
245 1 79 5 12 1 337 2 1 2 13 2 283 2 338 1 368 1 149 2 261 5 81 1 342 3 49 10 277 1 62 5 147 1 304 2 
245 1 13 1 1 1 338 1 283 2 368 1 261 1 172 1 49 2 277 1 62 2 147 1 
245 1 79 2 337 1 13 1 1 1 338 1 283 2 368 1 134 1 261 2 172 1 342 1 49 4 277 1 62 2 147 1 334 1 
245 3 157 1 79 2 1 1 338 1 283 6 68 1 368 3 149 1 261 2 342 1 49 3 277 3 100 1 62 1 147 3 304 1 
157 2 256 1 0 1 1 5 92 1 283 10 68 1 286 1 261 12 48 4 264 3 49 34 289 1 100 1 147 5 334 3 245 5 271 1 12 2 79 18 337 5 13 5 338 1 105 1 368 5 134 3 149 3 172 3 370 1 342 7 277 5 62 16 304 3 89 1 
283 2 286 1 261 2 264 1 48 1 49 8 289 1 147 1 245 1 271 1 337 1 79 4 12 1 13 1 338 1 368 1 149 1 342 2 251 1 277 1 62 4 89 1 304 1 
0 1 1 1 92 1 283 4 286 1 261 3 48 2 264 1 49 11 289 1 147 2 245 2 271 1 337 1 12 1 79 5 13 2 338 1 368 2 134 1 149 1 172 1 342 2 251 1 277 2 62 6 304 1 89 1 
157 1 0 1 1 1 283 6 285 1 286 1 94 1 261 4 264 1 48 1 49 19 289 1 311 1 147 3 334 2 293 1 245 3 271 1 12 1 79 10 337 3 13 3 338 1 368 3 134 2 149 1 172 2 342 3 251 1 277 3 62 9 304 1 89 1 
157 1 0 1 1 2 283 6 285 1 286 1 94 1 261 5 264 1 48 1 49 17 289 1 311 1 147 3 334 1 293 1 245 3 271 1 12 1 79 7 337 2 13 3 338 1 368 3 134 2 149 1 172 2 342 3 251 1 277 3 62 10 304 1 89 1 
283 2 286 1 261 2 264 1 48 1 49 8 289 1 147 1 245 1 271 1 337 1 79 4 12 1 13 1 338 1 368 1 149 1 342 2 251 1 277 1 62 4 89 1 304 1 
1 1 283 2 285 1 94 1 261 2 264 1 48 1 49 12 311 1 147 1 334 2 293 1 245 1 271 1 79 6 337 2 13 2 338 1 368 1 134 2 172 2 342 1 251 1 277 1 62 6 
157 2 0 1 1 2 283 8 285 1 286 1 94 1 261 5 48 1 264 1 49 18 289 1 311 1 147 4 334 1 293 1 245 4 271 1 12 1 79 8 337 2 13 3 338 1 368 4 134 2 149 1 172 2 342 3 251 1 277 4 62 10 304 1 89 1 
157 2 1 3 283 8 285 1 94 1 261 6 48 1 264 1 49 16 311 1 100 1 147 4 334 2 293 1 245 4 271 1 79 7 337 2 13 3 338 1 368 4 134 3 172 3 342 3 251 1 277 4 62 9 
79 4 337 1 12 1 1 3 13 1 149 3 261 6 342 3 49 7 289 2 62 3 89 1 304 3 
157 2 1 1 283 8 285 1 286 1 94 1 261 4 48 1 264 1 49 18 289 1 311 1 100 1 147 4 334 1 293 1 245 4 271 1 12 1 79 8 337 2 13 3 338 1 368 4 134 2 149 1 172 2 342 3 251 1 277 4 62 10 304 1 89 1 
65 1 96 1 159 1 189 1 51 1 52 1 340 1 
65 1 96 1 53 1 158 1 159 1 189 1 253 1 51 1 192 1 52 1 340 1 238 1 
18 1 233 1 257 1 36 1 54 1 93 1 346 1 124 1 269 1 128 1 119 1 
233 1 65 2 279 1 257 1 159 1 93 1 216 1 27 1 119 1 18 1 239 1 346 1 32 1 124 1 51 2 269 1 191 1 52 1 
233 2 65 2 280 1 279 1 257 1 159 1 353 1 93 1 216 1 27 2 120 1 119 1 18 3 108 1 331 1 239 1 230 1 346 1 32 2 124 1 51 2 191 1 52 2 
233 2 43 1 65 2 280 1 279 1 257 1 159 1 353 1 93 2 216 1 27 2 120 1 119 2 18 3 108 1 331 1 239 1 230 1 346 1 32 2 124 2 190 1 51 2 52 2 
65 1 279 1 93 1 25 1 306 1 119 1 184 1 331 1 166 1 124 1 167 1 32 1 333 1 51 1 314 1 35 1 52 1 37 1 106 1 18 1 108 1 63 1 
65 1 279 1 93 1 25 1 306 1 119 1 184 1 331 1 166 1 124 1 167 1 32 1 126 1 51 1 314 1 35 1 52 1 37 1 106 1 18 1 108 1 63 1 
257 1 93 1 346 1 124 1 350 1 119 1 
233 2 170 1 177 1 195 1 257 2 93 6 274 1 27 1 119 7 18 3 310 1 84 1 291 1 124 7 346 3 146 1 269 2 350 1 244 1 270 1 335 1 
233 1 65 2 257 1 279 1 159 2 283 4 93 1 2 1 286 1 216 1 261 2 27 1 162 1 119 1 332 1 239 1 49 6 289 1 165 2 32 1 124 1 33 1 147 2 51 2 191 1 75 1 52 1 335 1 245 2 79 3 337 1 12 1 132 2 13 1 368 2 149 1 135 1 18 1 342 2 321 1 277 2 346 1 62 3 374 1 304 1 89 1 
65 1 279 1 93 1 25 1 117 4 306 1 262 1 119 1 331 1 29 2 71 1 266 1 98 1 166 1 32 1 167 1 124 1 51 1 269 1 314 1 35 1 52 1 129 4 11 1 337 2 12 1 13 2 37 1 298 1 149 1 106 1 38 1 276 1 81 1 254 1 63 1 302 1 232 1 304 1 
233 1 257 1 93 2 27 1 119 2 58 1 18 2 40 1 84 1 124 2 346 2 350 1 335 1 
233 1 36 1 257 1 54 1 93 4 180 1 119 4 18 1 346 1 124 4 190 1 269 1 335 1 
233 1 177 1 257 1 93 2 27 1 119 2 108 1 18 1 371 1 200 1 124 2 346 2 146 1 176 1 
90 1 257 1 281 1 93 1 346 1 124 1 268 1 269 1 169 1 119 1 
18 1 233 1 310 1 257 1 93 2 346 1 215 1 124 2 274 1 119 2 335 1 
233 2 195 1 36 1 257 2 54 1 93 4 180 1 119 5 108 1 18 3 310 1 124 5 346 2 269 1 335 1 270 1 
233 2 36 1 257 2 54 1 93 4 180 1 358 1 119 5 108 1 18 3 310 1 124 5 346 2 269 1 335 1 270 1 
233 1 43 1 65 2 279 1 257 1 159 1 93 1 216 1 27 1 119 1 18 1 239 1 346 1 32 1 124 1 51 2 269 1 52 1 
233 1 177 1 257 1 93 1 27 1 119 1 108 1 18 1 84 1 291 1 124 1 346 2 146 1 
80 1 159 1 45 1 86 1 197 1 
280 1 159 1 45 2 25 2 305 1 197 1 120 1 341 1 249 1 80 2 331 1 288 1 166 2 99 1 86 2 87 1 63 1 232 1 314 1 
80 1 65 1 101 1 59 1 355 1 86 1 51 1 197 1 52 1 
288 1 305 1 197 1 
255 1 318 1 128 1 139 1 
255 1 319 1 148 1 160 1 318 1 139 1 136 1 
220 1 317 1 136 1 
255 1 148 1 260 1 160 3 318 1 136 3 319 1 301 1 188 1 111 1 23 2 139 1 
255 1 319 1 186 1 148 1 236 1 160 2 318 1 139 1 136 2 
90 1 319 1 148 1 111 1 223 1 268 1 325 1 113 1 160 1 318 1 136 1 
255 1 319 1 148 1 111 1 160 1 318 1 136 1 
255 2 319 1 148 1 111 1 160 1 139 1 136 1 
255 1 148 2 160 2 318 1 136 2 319 2 110 1 111 1 203 1 154 1 
255 1 77 1 148 1 223 1 236 2 160 3 318 2 136 3 319 1 226 1 345 1 111 1 139 1 
255 1 90 2 281 1 148 1 357 1 26 1 236 1 160 2 318 1 136 2 319 1 111 1 325 1 268 1 139 1 
255 1 77 1 295 1 148 2 223 1 236 2 160 4 318 2 136 4 319 2 186 1 111 1 139 1 
255 1 319 1 148 1 111 1 160 1 318 1 139 1 136 1 
255 2 77 1 148 1 223 1 236 2 160 4 318 3 143 1 136 4 319 1 301 1 188 1 23 1 139 2 
255 1 148 1 284 1 236 1 160 2 318 1 136 2 319 1 372 1 111 1 205 1 139 1 
255 1 148 1 160 3 318 1 136 3 319 1 301 1 188 2 111 1 373 1 23 2 139 1 
330 2 312 1 318 2 299 1 
319 1 297 1 148 1 111 1 160 1 136 1 
255 1 319 1 148 1 345 1 111 1 236 1 160 2 318 1 139 1 136 2 
221 1 
255 1 319 1 148 1 111 1 160 1 318 1 139 1 136 1 
255 1 148 1 236 1 160 3 318 1 136 3 319 1 345 1 111 1 23 1 139 1 
77 1 223 1 318 1 143 1 
255 1 318 1 

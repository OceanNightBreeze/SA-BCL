#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 63 334 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 9 150 3 83 1 304 6 306 9 285 1 22 2 85 1 159 1 89 2 161 2 5 1 314 1 187 1 237 1 50 2 106 4 318 1 239 1 214 1 27 1 138 5 78 2 175 1 120 1 377 2 255 2 147 1 
226 9 150 3 83 1 304 6 306 9 285 1 22 2 85 1 159 1 89 2 161 2 5 1 314 1 187 1 237 1 50 2 106 4 318 1 239 1 214 1 27 1 138 5 78 2 175 1 120 1 377 2 255 2 147 1 
226 10 150 4 83 1 304 7 306 10 285 1 22 2 85 1 159 1 89 2 161 2 5 1 314 1 187 1 237 1 50 2 106 5 318 1 239 1 214 1 27 1 138 6 78 2 175 1 120 1 377 2 255 2 147 1 
226 7 150 2 304 4 306 7 285 1 22 2 85 1 159 1 89 1 161 2 5 1 314 1 187 1 237 1 50 2 106 3 318 1 239 1 214 1 27 1 138 4 78 2 175 1 120 1 377 2 255 2 147 1 
214 1 150 1 226 4 83 1 304 3 138 3 306 4 285 1 22 1 78 1 159 1 89 2 161 1 5 1 50 1 106 2 255 1 147 1 
214 1 226 2 138 1 306 2 355 1 130 1 22 1 336 1 161 1 5 1 314 1 175 1 50 1 377 1 255 1 147 1 
214 1 226 3 150 1 138 2 304 1 306 3 22 2 85 1 161 2 5 1 106 1 377 1 147 1 
239 1 214 1 27 1 226 9 150 3 83 1 138 5 304 7 306 9 285 1 22 2 85 1 78 1 159 1 133 1 89 2 161 2 5 1 299 1 50 1 106 4 255 1 377 1 147 1 
239 1 214 1 27 1 226 9 150 3 83 1 138 5 304 7 306 9 285 1 22 2 85 1 78 1 159 1 133 1 89 2 161 2 5 1 299 1 50 1 106 4 255 1 377 1 147 1 
172 1 261 1 309 1 
116 1 172 1 102 2 
149 2 249 2 234 1 72 2 122 2 262 2 123 2 357 1 
62 1 42 1 127 1 149 3 129 1 259 2 101 1 155 1 262 2 357 1 207 1 313 2 46 2 234 1 72 3 134 1 75 1 289 1 212 1 137 1 112 1 245 2 33 1 12 1 13 1 35 1 275 1 143 1 249 2 38 1 324 1 59 2 122 2 123 2 376 1 124 1 41 1 
149 1 249 1 72 1 140 1 122 1 262 1 340 1 123 1 357 1 34 1 
330 1 149 1 333 1 154 1 261 1 172 1 95 1 249 1 96 1 72 1 346 1 340 1 350 1 238 1 
149 1 333 1 154 2 261 1 262 1 172 1 95 1 249 1 96 2 72 1 346 1 122 1 123 1 340 1 238 1 
88 1 312 1 118 1 96 1 154 1 
126 1 312 1 172 1 118 1 374 1 96 2 154 2 261 1 
118 1 96 1 154 1 
149 1 140 1 154 1 262 1 357 1 34 1 312 1 230 1 249 1 96 1 72 1 122 1 340 1 123 1 
172 1 
126 1 312 1 170 1 172 1 118 1 96 2 154 2 261 1 
126 1 18 1 30 2 154 5 261 1 308 1 115 1 312 2 172 1 15 1 361 1 118 2 96 5 362 1 162 1 48 1 236 2 125 1 178 2 
234 1 309 1 
149 2 262 1 296 1 249 2 209 1 234 2 72 2 122 1 123 1 
360 1 151 1 349 1 
42 1 149 1 137 1 112 1 155 1 245 1 13 1 313 1 38 1 173 1 234 1 59 1 72 1 134 1 75 1 376 1 
42 1 149 2 151 1 137 1 112 1 155 1 194 1 245 1 13 1 313 1 231 1 38 1 249 1 59 1 72 2 134 1 122 1 376 1 123 1 75 1 
330 1 149 5 194 2 262 1 228 1 183 1 231 1 296 1 249 5 234 1 72 5 122 4 363 1 123 4 
149 2 249 2 186 1 72 2 122 2 340 1 123 2 34 1 
149 3 249 3 234 1 72 3 194 1 262 1 122 3 123 3 
149 1 249 1 72 1 122 1 340 1 123 1 34 1 
149 1 296 1 249 1 209 1 72 1 122 1 262 1 340 1 123 1 
42 1 127 1 149 4 129 1 333 1 259 2 101 1 155 1 154 1 65 1 262 2 357 1 207 1 313 1 231 1 46 1 234 1 72 4 134 1 340 1 75 1 238 1 289 1 137 1 112 1 194 1 245 1 13 1 12 1 35 1 275 1 37 1 296 1 95 1 143 1 38 1 249 3 96 1 59 1 346 1 122 3 376 1 123 3 41 1 
330 1 183 1 149 2 249 2 234 1 72 2 194 1 122 1 123 1 
149 3 341 1 333 1 154 1 194 2 262 1 231 1 37 1 296 1 172 1 95 1 249 3 96 1 72 3 346 1 122 3 340 1 123 3 238 1 
149 1 296 1 151 1 249 1 72 1 122 1 262 1 123 1 
42 1 149 1 137 1 112 1 155 1 245 1 13 1 313 1 38 1 234 1 59 1 72 1 134 1 75 1 376 1 
53 1 42 1 149 1 112 1 305 1 155 1 245 1 13 1 313 1 38 1 234 1 59 1 72 1 134 1 75 1 
127 1 151 1 101 1 259 2 29 1 77 1 287 1 35 1 275 1 360 1 337 1 143 1 46 2 41 1 91 1 289 2 
149 1 249 1 333 1 186 1 72 1 122 1 340 1 123 1 
174 1 176 1 
174 1 176 1 
201 1 217 1 
201 1 217 1 
201 1 217 1 
164 1 174 1 176 1 
164 1 174 1 176 1 
174 1 176 1 199 1 
191 1 201 1 345 1 174 2 217 1 176 2 
164 1 174 1 176 1 
235 1 174 1 176 1 
235 1 174 1 176 1 
235 1 174 1 176 1 
331 1 149 2 64 1 154 1 208 1 233 1 234 1 47 1 72 2 190 1 316 1 110 1 216 1 369 1 167 1 249 2 174 1 96 1 176 1 301 1 145 1 122 2 199 1 123 2 
110 2 332 1 45 1 11 1 154 2 64 3 157 1 167 1 131 2 23 1 172 1 208 2 345 1 119 1 174 2 96 2 47 2 176 2 190 2 
78 1 50 1 255 1 
336 1 50 1 255 1 
78 2 336 1 293 1 295 1 254 1 50 3 
78 1 336 1 293 1 180 1 254 1 50 2 
78 1 336 1 293 1 254 2 50 2 
126 1 284 1 154 5 261 1 308 3 102 3 68 1 104 1 312 4 3 1 337 1 90 1 236 1 48 1 317 2 290 2 7 1 29 1 30 1 272 1 369 1 244 1 32 1 116 1 172 2 118 1 96 5 58 2 301 1 145 1 125 2 178 1 
126 1 154 9 261 1 308 8 102 9 206 1 68 3 104 3 88 5 312 7 337 3 90 1 48 1 236 2 365 1 317 6 290 6 29 3 139 1 30 2 272 2 244 3 273 1 32 2 115 1 116 3 142 1 172 5 118 6 96 9 17 5 145 4 125 6 178 2 224 1 
284 1 154 3 261 1 308 3 102 4 68 1 312 2 104 1 337 1 236 1 317 2 290 2 7 1 29 1 30 1 272 1 244 1 32 1 115 1 116 2 172 3 96 3 58 1 145 1 178 1 125 2 
284 1 154 4 261 1 308 5 102 7 206 1 68 2 312 3 104 2 337 2 236 1 317 4 290 4 7 1 29 2 30 1 272 1 244 2 273 1 32 1 115 1 116 3 172 4 96 4 58 2 145 2 178 1 125 4 224 1 
241 1 155 1 309 1 
63 1 155 1 
364 1 
42 1 155 1 134 1 
351 1 155 1 
42 1 155 1 
42 1 241 2 277 1 155 3 134 1 163 1 
52 1 181 2 343 1 215 1 29 1 282 1 244 1 195 1 168 3 105 1 46 7 251 2 61 1 300 1 124 4 329 1 289 3 
52 1 181 2 343 1 215 1 29 1 282 1 244 1 195 1 168 3 105 1 46 7 251 2 61 1 300 1 124 4 329 1 289 3 
52 1 181 2 343 1 215 1 29 1 282 1 244 1 195 1 168 3 105 1 46 7 251 2 61 1 300 1 329 1 124 4 289 3 179 1 
181 5 282 1 259 2 101 1 353 1 84 1 68 3 70 3 104 3 337 3 105 2 46 31 289 15 52 2 343 1 215 2 9 1 368 1 10 1 29 4 244 4 195 1 168 10 196 1 35 1 275 1 143 1 250 1 251 3 300 2 61 5 222 4 329 1 124 16 
181 3 259 4 101 2 105 1 46 9 289 4 266 1 52 1 215 1 343 1 368 1 29 1 244 1 195 1 168 4 35 2 275 2 143 2 251 2 61 1 300 1 253 1 124 5 329 1 
82 1 226 2 304 1 306 2 21 1 260 1 156 1 22 1 229 1 336 1 313 1 161 1 5 1 184 1 50 2 214 1 295 1 138 1 112 1 218 1 245 1 78 1 274 1 276 1 38 1 59 1 39 1 255 1 377 1 147 1 
82 1 98 1 226 3 202 1 304 2 306 3 21 1 260 1 204 1 22 1 229 1 336 1 313 1 161 1 5 1 184 1 50 2 214 1 295 1 138 1 112 1 218 1 245 1 78 1 274 1 276 1 38 1 59 1 255 1 377 1 
82 1 98 1 226 2 304 2 306 2 204 1 229 1 336 1 313 1 5 1 184 1 50 2 214 1 295 1 138 1 112 1 218 1 245 1 78 1 274 1 276 1 38 1 59 1 377 1 255 1 
42 1 226 1 202 1 306 1 155 1 22 1 313 1 4 1 161 1 75 1 240 1 367 1 112 1 55 1 218 2 245 1 344 1 169 1 274 2 276 2 38 1 59 1 377 2 
82 1 226 1 306 1 21 1 260 1 156 1 204 1 22 1 229 1 336 1 313 1 161 1 184 1 50 2 295 1 112 1 218 1 245 1 78 1 274 1 276 1 38 1 59 1 255 1 377 1 147 1 
153 1 
126 3 42 1 330 1 225 1 333 1 86 1 232 1 185 2 48 1 236 1 340 1 238 1 291 2 54 2 55 1 245 2 344 1 56 1 95 1 249 1 96 5 59 2 346 1 350 1 303 1 19 1 149 1 258 1 354 1 154 5 155 1 261 1 308 2 102 2 311 1 69 4 158 2 359 2 313 2 315 2 72 1 75 2 213 2 112 1 272 1 30 1 76 1 116 2 373 1 172 2 38 1 220 1 118 6 125 2 178 1 
126 1 330 1 303 1 149 1 258 1 333 1 154 3 86 1 69 2 158 1 72 1 340 1 238 1 76 1 170 1 95 1 249 1 220 1 118 2 96 3 346 1 350 1 
126 1 330 1 303 1 149 1 258 1 333 1 154 3 261 1 86 1 69 3 72 1 340 1 238 1 291 1 76 1 170 1 95 1 172 1 249 1 220 1 118 1 96 3 346 1 350 1 
126 1 330 1 303 1 149 1 258 1 333 1 154 3 261 1 86 1 69 3 158 1 72 1 340 1 238 1 291 1 213 1 76 1 170 1 95 1 172 1 249 1 220 1 118 2 96 3 346 1 350 1 
126 3 330 1 225 1 333 1 86 1 185 2 48 1 236 1 340 1 238 1 291 4 54 2 95 1 249 1 144 1 96 5 346 1 348 1 97 1 350 1 303 1 149 1 258 1 154 5 354 1 261 5 308 1 69 6 158 4 359 2 315 2 72 1 213 4 30 1 76 1 31 1 219 1 116 2 170 1 172 5 220 1 118 7 178 1 125 1 
126 2 330 1 303 1 225 1 149 1 258 1 333 1 354 1 154 4 261 1 308 1 102 2 86 1 69 4 158 2 359 2 185 2 315 2 72 1 236 1 48 1 340 1 238 1 291 2 213 2 54 2 30 1 76 1 116 2 56 1 172 2 95 1 220 1 249 1 118 4 96 4 346 1 125 1 350 1 178 1 
126 2 330 1 303 1 225 1 149 1 258 1 333 1 354 1 154 4 261 1 308 1 86 1 69 4 158 2 359 2 185 2 315 2 72 1 48 1 236 1 340 1 238 1 291 2 213 2 54 2 30 1 76 1 31 1 116 2 172 1 95 1 249 1 220 1 144 1 118 4 96 4 346 1 97 1 125 1 350 1 178 1 
126 2 330 1 303 1 225 1 149 1 258 1 333 1 354 1 154 4 261 1 308 1 86 1 69 4 158 2 359 2 185 2 315 2 72 1 48 1 236 1 340 1 238 1 291 2 213 2 54 2 30 1 76 1 31 1 116 2 172 1 95 1 249 1 220 1 144 1 118 4 96 4 346 1 97 1 125 1 350 1 178 1 
126 2 330 1 303 1 20 1 149 1 258 1 333 1 1 2 44 1 354 1 154 4 261 1 308 1 102 2 86 1 69 4 158 2 160 2 359 2 185 2 72 1 48 1 236 1 340 1 238 1 291 2 213 2 30 1 76 1 172 1 95 1 249 1 220 1 118 4 96 4 346 1 81 1 97 1 125 1 350 1 178 1 
126 2 330 1 303 1 225 1 149 1 258 1 333 1 354 1 154 4 261 1 308 1 86 1 69 5 158 3 359 2 185 2 315 2 72 1 236 1 48 1 340 1 238 1 291 3 213 3 54 2 30 1 76 1 31 1 219 1 116 2 172 1 95 1 144 1 249 1 220 1 118 5 96 4 346 1 97 1 125 1 178 1 350 1 
126 2 330 1 303 1 225 1 149 1 258 1 333 1 354 1 154 4 261 1 308 1 86 1 69 5 158 3 359 2 185 2 315 2 72 1 236 1 48 1 340 1 238 1 291 3 213 3 54 2 30 1 76 1 31 1 219 1 116 2 172 1 95 1 144 1 249 1 220 1 118 5 96 4 346 1 97 1 125 1 178 1 350 1 
126 2 330 1 303 1 20 1 149 1 258 1 333 1 1 2 354 1 154 4 261 1 308 1 102 2 86 1 69 4 158 2 160 2 359 2 185 2 72 1 236 1 48 1 340 1 238 1 291 2 213 2 30 1 76 1 56 1 172 1 95 1 220 1 249 1 118 4 96 4 346 1 125 1 350 1 178 1 
127 1 181 2 151 1 259 2 101 1 309 1 360 1 105 1 46 6 234 2 289 3 343 1 29 1 77 1 244 1 195 1 168 2 35 1 275 1 143 1 251 1 300 1 349 1 329 1 41 1 124 3 
127 1 151 3 152 1 259 4 101 2 67 1 70 1 207 1 360 3 46 4 338 1 234 1 340 1 289 3 135 1 136 1 35 2 275 2 143 2 177 1 349 3 222 1 41 2 124 1 
26 1 127 1 149 1 243 1 259 2 101 1 194 1 35 1 275 1 231 1 143 1 249 1 46 1 324 1 72 1 349 1 177 1 122 1 123 1 124 1 41 1 
42 1 127 2 2 1 231 1 46 5 134 1 289 2 137 1 193 1 194 1 244 1 245 1 12 1 13 1 143 2 249 1 59 1 349 1 149 2 151 2 259 4 101 2 155 1 68 1 207 1 104 1 313 1 360 2 72 2 75 1 111 1 112 1 370 1 35 2 275 2 38 1 278 1 177 1 122 1 123 1 376 1 41 2 124 3 
256 1 62 2 42 2 127 2 149 1 259 4 101 2 155 3 204 1 207 1 313 8 24 1 46 2 72 1 210 1 75 2 289 1 108 1 112 2 55 1 77 1 194 1 245 7 35 2 322 1 344 1 94 1 275 2 143 2 249 1 38 2 39 1 59 8 324 1 122 1 123 1 146 1 41 2 124 1 
127 1 149 1 151 1 259 2 101 1 335 1 262 1 68 1 104 1 360 1 337 1 46 3 72 1 289 2 29 1 244 1 35 1 275 1 296 1 143 1 249 1 349 1 177 1 122 1 123 1 41 1 124 1 
127 1 151 1 101 1 259 2 77 1 244 1 35 1 104 1 275 1 360 1 143 1 46 2 73 1 41 1 124 2 
127 1 151 1 101 1 259 2 29 1 77 1 35 1 275 1 360 1 337 1 143 1 46 2 41 1 91 1 289 2 
127 1 151 1 101 1 259 2 77 1 244 1 68 1 35 1 104 1 275 1 360 1 143 1 46 2 41 1 124 2 
127 1 151 1 101 1 259 2 244 1 322 1 35 1 104 1 275 1 360 1 143 1 46 2 73 1 41 1 124 2 
127 1 151 1 101 1 259 2 29 1 322 1 35 1 275 1 360 1 337 1 143 1 46 2 41 1 91 1 289 2 
127 1 151 1 101 1 259 2 244 1 68 1 322 1 35 1 104 1 275 1 360 1 143 1 46 2 41 1 124 2 
127 1 151 1 101 1 259 2 244 1 68 1 35 1 104 1 275 1 360 1 143 1 46 2 41 1 124 2 
42 1 127 1 149 1 101 1 259 2 155 1 207 1 313 1 46 2 234 1 72 1 134 1 75 1 289 1 137 1 112 1 245 1 13 1 12 1 35 1 275 1 143 1 38 1 324 1 59 1 376 1 124 1 41 1 
42 1 127 1 149 1 305 1 101 1 259 2 155 1 207 1 313 1 46 2 234 1 72 1 134 1 75 1 289 1 53 1 267 1 112 1 245 1 13 1 35 1 275 1 143 1 38 1 324 1 59 1 124 1 41 1 
127 1 151 1 101 1 259 2 244 1 68 1 35 1 104 1 275 1 360 1 143 1 46 2 177 1 41 1 124 2 
42 1 127 1 149 1 151 1 101 1 259 2 155 1 68 1 104 1 313 1 360 1 46 2 72 1 134 1 111 1 137 1 112 1 244 1 245 1 13 1 12 1 35 1 275 1 143 1 38 1 59 1 39 1 376 1 124 2 41 1 
127 1 352 1 149 1 151 1 259 2 101 1 262 1 68 1 104 1 337 1 360 1 46 3 72 1 289 1 29 1 244 1 35 1 275 1 296 1 143 1 249 1 177 1 349 1 122 1 123 1 41 1 124 2 
128 2 43 1 181 3 259 4 101 2 307 1 84 1 310 1 68 3 70 1 104 3 337 3 46 19 49 1 289 10 266 1 269 2 29 3 244 3 168 6 196 1 35 2 275 2 143 2 298 1 325 1 221 1 61 3 222 2 124 9 
128 4 181 2 259 6 101 3 307 2 310 2 286 1 68 3 70 2 104 3 263 1 337 2 46 26 49 1 289 12 266 1 269 1 368 2 92 1 29 2 114 1 244 3 168 4 196 2 35 3 93 1 275 3 143 3 298 1 325 1 198 1 61 2 222 2 124 14 
128 4 181 4 43 1 84 1 286 1 337 4 46 41 49 1 289 21 343 1 92 1 244 5 195 1 196 3 93 1 143 3 251 1 298 1 198 1 61 4 300 1 101 3 259 6 307 1 310 2 68 4 104 4 70 3 263 1 105 1 266 1 269 1 368 1 29 5 114 1 168 8 35 3 275 3 325 1 222 4 327 1 124 20 329 1 
128 4 43 1 181 4 259 8 101 4 307 1 84 1 286 1 310 2 68 4 70 3 104 4 263 1 337 3 105 1 46 38 49 1 289 18 266 1 269 1 343 1 368 2 92 1 29 4 114 1 244 5 195 1 168 7 196 3 35 4 93 1 275 4 143 4 298 1 251 1 325 1 198 1 300 1 61 3 222 4 327 1 329 1 124 20 
128 4 181 7 283 2 259 4 101 2 307 1 84 2 286 1 310 1 68 7 70 4 104 7 263 1 337 7 105 1 46 52 49 1 289 25 266 1 269 1 343 1 368 1 92 1 29 8 114 1 244 8 195 1 168 14 196 2 35 2 93 1 275 2 143 2 298 1 251 1 325 1 198 1 300 1 61 7 222 4 329 1 124 27 
23 1 110 1 208 1 345 1 174 1 47 1 11 1 176 1 121 1 190 1 
216 1 199 1 
148 1 268 1 110 1 208 1 174 1 47 1 176 1 141 1 190 1 
57 1 164 1 
191 1 100 1 235 1 
110 1 332 1 45 1 11 1 154 1 64 2 157 1 167 1 131 1 23 1 172 1 208 1 345 1 96 1 174 1 47 1 176 1 190 1 
110 1 332 1 45 1 11 1 154 1 64 2 157 1 167 1 131 1 23 1 172 1 208 1 345 1 96 1 174 1 47 1 176 1 190 1 
110 1 332 1 45 1 11 1 154 1 64 2 157 1 167 1 131 1 23 1 172 1 208 1 345 1 96 1 174 1 47 1 176 1 190 1 
191 1 57 1 164 1 
191 1 57 1 164 1 
100 1 235 1 
191 1 100 1 235 1 
331 1 316 1 
331 1 149 2 154 1 64 1 157 1 131 1 312 1 208 1 233 1 234 1 72 2 47 1 190 1 316 1 110 1 216 1 321 1 369 1 249 2 96 1 174 1 176 1 301 1 145 1 199 1 122 2 123 2 
62 2 42 1 127 1 257 1 149 2 101 1 259 2 155 1 356 1 207 1 313 2 46 2 72 2 25 1 289 1 112 1 320 1 245 2 35 1 94 1 275 1 143 1 38 1 249 2 59 2 324 1 252 1 177 1 146 1 41 1 124 1 
82 1 295 1 112 1 28 1 260 1 245 2 204 1 87 1 78 1 229 1 336 1 313 2 274 1 38 1 59 2 39 1 50 2 40 1 255 1 
82 1 295 1 112 1 260 1 245 1 204 1 78 1 229 1 336 1 313 1 247 1 274 1 38 1 59 1 50 2 40 1 255 1 
240 1 42 1 112 1 55 1 155 1 245 1 87 1 344 1 313 1 274 1 197 1 38 1 59 1 75 1 
82 1 295 1 112 1 28 1 260 1 245 1 204 1 87 1 78 1 229 1 336 1 313 1 274 1 38 1 59 1 50 2 40 1 255 1 
246 1 
172 1 361 1 362 1 261 1 308 1 309 1 125 1 
126 1 225 1 54 1 30 1 154 1 261 1 308 1 102 1 116 1 172 2 118 1 96 1 315 1 48 1 236 1 178 1 125 1 
42 1 63 1 112 1 30 1 155 1 334 1 245 1 313 1 38 1 59 1 277 1 48 1 236 1 134 1 74 1 75 1 178 1 
126 1 203 1 154 1 261 2 308 8 182 2 102 6 286 1 68 2 70 1 104 2 263 1 337 2 232 1 236 2 48 2 317 5 290 5 8 1 192 1 92 1 272 1 30 2 29 2 114 1 244 2 196 1 116 3 172 5 118 1 96 1 198 1 222 1 178 2 125 5 
149 1 203 1 154 1 66 1 308 2 262 1 182 2 357 1 230 1 105 1 72 1 236 1 48 1 340 1 343 1 30 1 29 1 140 1 244 2 34 1 144 1 249 1 96 1 300 1 122 1 123 1 178 1 125 2 
30 1 261 1 308 1 172 1 361 1 362 1 48 1 236 1 178 1 125 1 
290 5 29 2 203 1 2 1 244 2 308 5 182 2 102 10 68 2 104 2 116 5 172 5 337 2 125 5 317 5 
126 1 172 1 118 1 96 1 154 1 261 1 
126 2 42 1 155 1 154 3 308 2 311 1 313 4 232 2 236 2 48 1 75 2 211 1 112 1 55 1 113 1 30 2 272 2 166 2 245 4 115 1 344 1 373 1 171 1 38 1 118 4 59 4 96 3 178 2 125 2 
42 1 127 1 149 3 129 1 259 2 101 1 155 1 262 2 357 1 207 1 313 1 46 1 234 1 72 3 134 1 75 1 289 1 137 1 112 1 245 1 12 1 13 1 35 1 275 1 143 1 249 2 38 1 59 1 122 2 123 2 376 1 41 1 
290 2 30 1 272 1 261 2 308 1 102 4 116 2 172 4 232 1 251 1 48 1 236 1 125 2 178 1 317 2 
208 1 47 1 302 1 
208 1 47 1 302 1 
281 1 208 1 47 1 11 1 316 1 
208 1 47 1 302 1 
208 1 47 1 189 1 
208 1 47 1 189 1 
208 1 47 1 189 1 
208 1 47 1 
174 1 176 1 
181 2 343 1 368 1 29 1 101 2 259 4 244 1 195 1 168 3 35 2 275 2 143 2 105 1 46 8 251 1 61 1 300 1 124 4 329 1 289 4 
181 2 105 1 46 6 343 1 251 1 29 1 300 1 244 1 195 1 309 1 168 2 124 3 329 1 289 3 
181 1 29 1 101 1 259 2 244 1 168 2 68 1 35 1 104 1 372 1 275 1 337 1 143 1 46 4 61 1 124 2 289 2 
104 1 70 1 337 1 181 1 46 7 29 1 61 1 84 1 244 1 222 2 168 2 68 1 124 3 289 4 196 1 
181 5 152 1 283 1 101 2 259 4 84 1 68 2 104 2 70 2 337 2 105 2 46 23 338 1 289 12 343 1 368 2 29 3 244 3 195 1 168 9 35 2 275 2 143 2 251 1 300 2 61 4 222 2 329 1 124 11 
46 1 222 1 289 1 
70 1 46 1 124 1 
181 2 259 2 101 1 29 1 2 1 244 1 168 3 68 1 35 1 104 1 372 1 275 1 337 1 143 1 46 6 61 1 124 3 289 3 
181 1 259 2 101 1 286 1 68 2 70 1 104 2 337 2 263 1 46 12 289 6 266 1 92 1 29 2 114 1 244 2 168 2 196 1 35 1 275 1 143 1 198 1 61 1 222 1 124 6 
181 1 343 1 29 1 244 1 168 2 105 1 46 6 300 1 61 1 124 3 289 3 
181 1 368 1 101 1 259 2 195 1 168 2 35 1 275 1 143 1 105 1 338 1 46 3 61 1 300 1 124 1 329 1 289 2 
266 1 181 3 343 1 259 2 101 1 29 2 66 1 244 2 168 5 35 1 275 1 143 1 105 2 46 10 300 2 61 2 124 5 289 5 
266 1 101 1 259 2 244 1 168 1 35 1 104 1 275 1 143 1 46 2 61 1 124 2 
266 1 181 1 29 1 101 1 259 2 244 1 168 2 68 1 35 1 104 1 275 1 337 1 143 1 46 4 61 1 124 2 289 2 
266 1 43 1 181 1 368 1 101 3 259 6 168 2 35 3 275 3 143 3 105 1 338 1 46 3 300 1 61 1 124 1 289 2 
43 1 181 7 353 1 259 10 101 5 84 1 68 3 70 3 104 3 337 3 105 3 338 1 46 34 289 18 266 1 343 2 368 2 9 1 29 5 244 5 195 1 168 12 196 1 35 5 372 1 275 5 143 5 250 1 251 1 300 3 61 5 222 4 329 1 124 16 
181 2 259 2 101 1 70 1 105 1 46 8 289 4 266 1 343 1 92 1 29 1 244 1 195 1 168 2 196 1 35 1 275 1 143 1 251 1 300 1 222 1 124 4 329 1 
181 2 259 4 101 2 84 1 68 1 70 1 104 1 105 1 46 11 289 5 266 1 343 1 92 1 29 1 244 2 195 1 168 3 196 1 35 2 372 1 275 2 143 2 251 1 300 1 61 1 222 2 329 1 124 6 
181 3 259 6 101 3 286 1 68 2 70 1 104 2 337 2 263 1 105 1 46 19 289 10 266 1 343 1 92 1 368 1 29 3 114 1 244 3 195 1 168 4 196 1 35 3 372 1 275 3 143 3 251 1 198 1 300 1 61 1 222 1 329 1 124 9 
181 3 259 6 101 3 286 1 68 2 70 1 104 2 337 1 263 1 105 1 46 17 289 7 266 1 343 1 368 1 92 1 29 2 114 1 244 3 195 1 168 5 196 1 35 3 372 1 275 3 143 3 251 1 198 1 300 1 61 2 222 1 329 1 124 10 
181 2 259 2 101 1 70 1 105 1 46 8 289 4 266 1 343 1 92 1 29 1 244 1 195 1 168 2 196 1 35 1 275 1 143 1 251 1 300 1 222 1 124 4 329 1 
181 1 259 2 101 1 286 1 68 2 70 1 104 2 337 2 263 1 46 12 289 6 266 1 92 1 29 2 114 1 244 2 168 2 196 1 35 1 275 1 143 1 198 1 61 1 222 1 124 6 
181 3 259 8 101 4 286 1 68 2 70 1 104 2 263 1 337 1 105 1 46 18 289 8 266 1 343 1 92 1 368 2 29 2 114 1 244 3 195 1 168 5 196 1 35 4 372 1 275 4 143 4 251 1 198 1 300 1 61 2 222 1 329 1 124 10 
43 1 181 3 259 8 101 4 286 1 68 3 70 1 104 3 263 1 337 2 46 16 289 7 266 1 92 1 368 2 29 2 114 1 244 3 168 6 196 1 35 4 275 4 143 4 198 1 61 3 222 1 124 9 
181 3 343 1 29 1 244 1 195 1 168 6 105 3 46 7 300 3 61 3 329 2 124 3 289 4 
43 1 181 3 259 8 101 4 286 1 68 2 70 1 104 2 263 1 337 1 105 1 46 18 289 8 266 1 343 1 92 1 368 2 29 2 114 1 244 3 195 1 168 4 196 1 35 4 275 4 143 4 251 1 198 1 300 1 61 1 222 1 329 1 124 10 
330 1 183 1 149 1 249 1 234 1 72 1 205 1 
330 1 149 1 99 1 242 1 205 1 14 1 183 1 248 1 249 1 234 1 72 1 326 1 
344 1 42 1 313 1 38 1 112 1 55 1 59 1 155 1 309 1 245 1 75 1 
42 1 149 2 112 1 155 1 194 1 245 1 13 1 313 1 249 1 38 1 234 1 59 1 72 2 134 1 122 1 123 1 75 1 376 1 
42 2 351 1 149 2 333 1 155 3 313 1 234 1 72 2 134 2 340 1 112 1 166 1 194 1 245 1 13 1 80 1 38 1 249 2 59 1 346 1 122 2 376 1 123 1 
42 2 351 1 149 2 333 1 305 1 155 3 313 2 234 1 72 2 134 2 340 1 292 1 112 1 166 1 194 1 245 2 13 1 80 1 38 1 249 2 59 2 346 1 122 2 123 1 
42 1 351 1 63 1 155 4 154 2 261 1 313 3 134 1 75 1 292 1 241 1 366 1 112 1 166 1 245 3 95 1 172 1 80 1 38 1 118 1 59 3 96 2 223 1 
292 1 42 1 351 1 241 1 63 1 112 1 154 2 166 1 155 4 261 1 245 3 313 3 172 1 95 1 323 1 80 1 38 1 118 1 96 2 59 3 134 1 75 1 
313 1 38 1 112 1 59 1 245 1 210 1 
62 1 256 1 42 2 108 1 0 1 112 3 155 3 245 6 204 1 313 7 94 1 24 1 38 2 39 1 59 7 277 1 347 1 210 1 134 1 75 2 279 1 
42 1 127 2 181 4 46 14 234 3 134 1 340 1 289 7 136 1 137 1 343 2 194 1 244 3 245 1 195 1 12 1 13 1 143 2 249 1 59 1 251 1 61 1 300 2 349 1 149 2 151 1 259 4 101 2 155 1 66 1 313 1 360 1 105 2 72 2 25 1 111 1 112 1 29 3 168 5 370 1 35 2 275 2 38 1 39 1 177 1 122 1 376 1 123 1 41 2 329 1 124 7 
126 1 63 1 154 3 155 2 261 1 308 1 312 1 358 1 313 1 361 1 339 1 362 1 236 2 48 2 75 1 211 1 241 1 319 1 30 2 245 1 172 1 323 1 95 1 118 2 59 1 96 3 125 1 178 2 
42 1 241 1 112 1 155 1 245 1 313 1 38 1 59 1 277 1 210 1 74 1 134 1 364 1 
292 1 42 1 112 1 55 1 155 1 245 4 344 1 313 4 38 1 59 4 39 1 75 1 107 1 
42 1 109 1 0 1 294 1 270 1 112 2 166 1 155 1 245 2 313 2 38 1 59 2 134 1 279 1 
229 1 336 1 313 1 38 1 112 1 59 1 245 1 50 1 75 1 255 1 
42 1 112 1 320 1 155 1 245 2 204 1 313 2 94 1 38 1 39 1 59 2 
42 2 108 1 55 1 112 2 166 1 155 3 245 4 344 1 313 5 94 1 24 1 38 2 59 5 39 1 75 1 107 1 
42 2 55 1 112 2 227 1 166 1 155 3 245 4 344 1 313 5 94 1 24 1 38 2 59 5 39 1 75 1 107 1 
42 1 149 2 112 1 305 1 155 1 194 1 245 1 13 1 313 1 249 1 38 1 234 1 59 1 72 2 134 1 122 1 123 1 75 1 
42 1 0 1 112 2 166 1 155 1 245 1 313 1 38 1 59 1 277 1 347 1 134 1 279 1 
6 1 371 1 297 1 234 1 132 1 
6 2 342 1 333 1 154 2 261 1 132 2 312 1 371 2 79 1 37 1 172 1 95 1 297 1 234 1 96 2 346 1 340 1 51 1 238 1 
371 1 257 1 149 1 249 1 297 1 72 1 252 1 356 1 132 1 
342 1 297 1 51 1 
214 1 5 1 138 1 309 1 
214 1 226 1 161 1 5 1 138 1 306 1 22 1 
276 1 226 1 377 1 
214 1 226 3 138 1 306 3 22 1 264 1 161 1 314 2 5 1 16 1 375 1 147 1 
214 1 89 1 226 2 161 1 5 1 138 1 304 1 306 2 22 1 
226 1 138 1 306 1 285 1 22 1 78 1 161 1 106 1 50 1 255 1 147 1 
214 1 226 1 161 1 138 1 306 1 22 1 147 1 
214 2 226 1 161 1 5 1 306 1 22 1 147 1 
214 1 226 2 138 1 306 2 22 2 36 1 103 1 161 2 288 1 147 1 
239 1 214 1 226 3 27 1 150 1 304 2 138 2 306 3 22 1 161 1 5 1 106 1 147 1 
214 1 226 2 295 1 138 1 304 1 306 2 22 1 78 1 336 1 161 1 5 1 50 2 328 1 255 1 147 1 
214 1 226 4 150 1 83 1 304 2 138 2 306 4 22 2 89 1 161 2 5 1 106 1 147 1 
214 1 226 1 161 1 5 1 138 1 306 1 22 1 147 1 
214 2 226 4 150 1 304 2 138 3 306 4 22 1 71 1 161 1 314 1 5 2 16 1 375 1 106 1 
214 1 226 2 138 1 271 1 304 1 306 2 22 1 133 1 161 1 5 1 117 1 147 1 
214 1 226 3 138 1 306 3 22 1 161 1 314 2 5 1 265 1 16 1 375 2 147 1 
200 1 138 2 165 1 188 2 
280 1 226 1 161 1 306 1 22 1 147 1 
239 1 214 1 226 2 161 1 5 1 138 1 304 1 306 2 22 1 147 1 
60 1 
214 1 226 1 161 1 5 1 138 1 306 1 22 1 147 1 
239 1 214 1 226 3 304 1 138 1 306 3 22 1 161 1 314 1 5 1 147 1 
71 1 150 1 138 1 106 1 
214 1 138 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 380 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 243 1 359 1 78 9 320 9 252 2 286 2 136 1 301 1 108 1 109 1 44 2 86 1 46 1 347 2 48 1 51 4 213 1 143 6 263 1 373 5 265 2 376 1 304 3 67 2 172 1 378 1 121 2 
3 1 243 1 359 1 78 9 320 9 252 2 286 2 136 1 301 1 108 1 109 1 44 2 86 1 46 1 347 2 48 1 51 4 213 1 143 6 263 1 373 5 265 2 376 1 304 3 67 2 172 1 121 2 378 1 
3 1 243 1 359 1 78 10 320 10 252 2 286 2 136 1 301 1 108 1 109 1 44 2 86 1 46 1 347 2 48 1 51 5 213 1 143 7 263 1 373 6 265 2 376 1 304 4 67 2 172 1 121 2 378 1 
3 1 243 1 359 1 78 7 320 7 252 2 286 2 136 1 301 1 108 1 44 2 86 1 46 1 347 1 48 1 51 3 213 1 143 4 263 1 373 4 265 2 376 1 304 2 67 2 172 1 121 2 378 1 
301 1 109 1 46 1 347 2 359 1 78 4 48 1 51 2 143 3 373 3 265 1 304 1 376 1 67 1 320 4 121 1 252 1 286 1 
301 1 44 1 46 1 78 2 213 1 373 1 263 1 115 1 265 1 376 1 67 1 320 2 135 1 252 1 308 1 286 1 
3 1 359 1 78 9 320 9 299 1 252 1 136 1 286 2 301 1 108 1 44 1 109 1 46 1 347 2 48 1 51 4 143 7 326 1 373 5 265 1 304 3 376 1 67 2 121 1 
3 1 359 1 78 9 320 9 299 1 252 1 136 1 286 2 301 1 108 1 44 1 109 1 46 1 347 2 48 1 51 4 143 7 326 1 373 5 265 1 304 3 376 1 67 2 121 1 
143 1 373 2 301 1 304 1 376 1 44 1 320 3 67 2 46 1 78 3 51 1 136 1 286 2 
64 1 10 1 380 1 
64 1 104 2 52 1 
266 2 235 2 331 1 294 2 17 2 197 2 348 2 11 1 
217 1 55 1 337 1 298 1 244 1 202 1 98 2 11 1 318 1 157 1 158 1 159 1 222 1 183 1 160 1 82 1 17 2 84 1 107 2 365 2 43 1 289 1 140 1 47 1 168 1 348 2 190 1 144 1 291 1 266 2 235 3 120 2 331 1 294 2 197 3 200 2 334 1 
261 1 266 1 235 1 294 1 358 1 17 1 40 1 197 1 348 1 11 1 
354 1 185 1 64 1 96 1 256 1 210 1 358 1 10 1 266 1 235 1 38 1 197 1 310 1 91 1 
354 2 64 1 96 1 256 1 358 1 10 1 348 1 266 1 235 1 38 2 294 1 17 1 197 1 310 1 91 1 
354 1 65 1 38 1 99 1 317 1 
354 2 1 1 64 1 65 1 38 2 99 1 10 1 142 1 
354 1 38 1 99 1 
354 1 65 1 21 1 358 1 11 1 348 1 261 1 266 1 235 1 38 1 294 1 40 1 17 1 197 1 
64 1 
327 1 354 2 64 1 65 1 38 2 99 1 10 1 142 1 
335 1 364 1 31 2 354 5 186 2 64 1 65 2 180 1 99 2 303 1 23 1 10 1 24 2 142 1 279 1 130 1 133 1 38 5 72 1 
365 1 217 1 298 1 289 1 202 1 98 1 168 1 113 1 348 1 318 1 291 1 193 1 266 1 222 1 235 2 294 1 240 1 197 2 200 1 334 1 
331 1 380 1 
348 1 266 2 235 2 223 1 171 1 294 1 331 2 17 1 197 2 
56 1 177 1 240 1 
365 1 217 1 298 1 289 1 98 1 202 1 168 1 318 1 291 1 349 1 235 1 222 1 331 1 197 1 200 1 334 1 
228 1 210 1 113 1 348 4 191 1 193 2 266 5 235 5 171 1 28 1 294 4 331 1 17 1 197 5 
101 1 261 1 266 2 235 2 294 2 358 1 197 2 348 2 
193 1 266 3 235 3 331 1 294 3 17 1 197 3 348 3 
261 1 266 1 235 1 294 1 358 1 197 1 348 1 
266 1 235 1 223 1 171 1 294 1 358 1 17 1 197 1 348 1 
354 1 217 1 96 1 337 1 298 1 202 1 98 1 358 1 11 1 318 1 159 1 222 1 38 1 183 1 160 1 17 2 84 1 137 1 107 2 365 1 43 1 187 1 289 1 140 1 256 1 47 1 168 1 113 1 348 3 190 1 144 1 291 1 266 3 193 1 235 4 120 1 171 1 331 1 294 3 197 4 200 1 334 1 310 1 91 1 
191 1 266 2 193 1 235 2 331 1 294 1 210 1 197 2 348 1 
137 1 354 1 64 1 96 1 256 1 358 1 113 1 348 3 66 1 193 2 266 3 235 3 38 1 171 1 294 3 17 1 197 3 91 1 310 1 
56 1 348 2 193 1 266 2 235 2 171 1 294 2 17 1 240 1 197 2 
365 1 217 1 289 1 298 1 98 1 202 1 168 1 318 1 291 1 235 1 222 1 331 1 197 1 200 1 334 1 
365 1 217 1 5 1 298 1 98 1 202 1 290 1 168 1 318 1 291 1 235 1 222 1 331 1 197 1 200 1 
56 2 177 2 58 1 219 1 157 2 362 1 363 1 182 1 183 1 160 1 84 1 342 1 207 1 107 2 227 1 366 1 43 1 47 2 190 1 144 1 238 1 120 4 240 2 241 1 
101 1 266 1 96 1 235 1 294 1 358 1 197 1 348 1 
178 1 357 1 
178 1 357 1 
119 1 370 1 
119 1 370 1 
119 1 370 1 
92 1 178 1 357 1 
116 1 178 1 357 1 
0 1 178 2 357 2 119 1 167 1 370 1 
92 1 178 1 357 1 
92 1 178 1 357 1 
328 1 178 1 357 1 
328 1 178 1 357 1 
328 1 178 1 357 1 
354 1 2 1 178 1 357 1 155 1 60 1 12 1 340 1 38 1 87 1 231 1 348 2 259 1 88 1 266 2 235 2 148 1 116 1 68 1 331 1 294 2 198 1 197 2 295 1 
0 1 54 1 354 2 2 1 139 1 64 1 357 2 178 2 231 3 220 1 204 1 259 2 68 2 38 2 16 1 61 1 198 2 295 2 333 2 
265 1 121 1 252 1 
265 1 135 1 252 1 
126 1 265 3 121 2 135 1 225 1 203 1 
265 2 121 1 135 1 225 1 203 1 100 1 
265 2 121 1 135 1 203 1 225 2 
125 1 31 1 354 5 76 1 99 1 10 1 128 1 340 1 104 3 363 1 280 1 133 3 38 5 207 1 364 2 253 1 343 2 366 1 186 1 64 2 87 1 65 4 24 1 169 1 142 1 88 1 52 1 330 2 89 1 271 2 72 1 241 1 
31 2 354 9 76 2 99 6 32 1 10 1 317 5 181 5 104 9 363 3 133 8 38 9 285 1 62 1 207 3 364 6 253 2 366 3 164 1 186 2 64 5 87 4 65 7 23 1 24 2 169 3 142 1 114 1 52 3 330 6 89 1 199 1 271 6 72 1 241 3 
31 1 354 3 76 1 10 1 128 1 280 1 363 1 104 4 133 3 38 3 207 1 253 1 364 2 343 1 366 1 186 1 64 3 87 1 65 2 23 1 24 1 169 1 52 2 330 2 271 2 241 1 
31 1 354 4 76 1 10 1 128 1 104 7 280 1 363 2 133 5 38 4 62 1 207 2 253 1 364 4 343 2 366 2 164 1 186 1 64 4 87 2 65 3 23 1 24 1 169 2 52 3 330 4 199 1 271 4 241 2 
319 1 380 1 
221 1 298 1 
233 1 
291 1 298 1 202 1 
298 1 49 1 
291 1 298 1 
319 2 291 1 298 3 202 1 300 1 325 1 
296 1 74 1 227 3 366 1 313 1 19 1 45 1 110 1 58 2 47 3 249 2 157 4 363 1 307 1 268 1 36 1 120 7 
296 1 74 1 227 3 366 1 313 1 19 1 45 1 110 1 58 2 47 3 249 2 157 4 363 1 307 1 268 1 36 1 120 7 
296 1 74 1 227 3 366 1 313 1 19 1 45 1 110 1 58 2 47 3 249 2 157 4 34 1 363 1 307 1 268 1 36 1 120 7 
74 1 296 4 355 3 179 4 58 2 246 1 249 1 157 11 363 3 36 1 183 2 160 2 105 2 107 4 207 3 227 6 366 3 344 1 110 2 22 1 47 12 169 3 190 2 144 2 150 1 307 1 268 1 118 1 120 23 29 1 272 1 241 3 
296 1 74 1 313 1 176 1 58 3 249 2 157 5 363 1 14 1 183 2 160 2 105 1 107 4 227 4 366 1 19 1 110 1 45 1 47 4 190 2 144 2 307 1 268 1 120 9 
242 1 274 1 75 1 126 1 297 1 98 1 78 2 318 1 222 1 320 2 135 1 252 1 83 1 286 1 365 1 301 1 63 1 44 1 46 1 211 1 212 1 258 1 143 1 373 1 375 1 265 2 376 1 67 1 121 1 200 1 
242 1 126 1 274 1 75 1 297 1 98 1 78 3 318 1 222 1 320 3 39 1 135 1 252 1 83 1 286 1 365 1 301 1 63 1 44 1 46 1 112 1 211 1 258 1 371 1 143 2 373 1 265 2 67 1 121 1 200 1 
242 1 274 1 126 1 98 1 78 2 318 1 222 1 320 2 39 1 135 1 83 1 252 1 365 1 301 1 63 1 44 1 46 1 112 1 211 1 258 1 143 2 373 1 265 2 121 1 200 1 
312 1 365 1 217 1 274 2 44 2 298 1 98 1 211 2 371 1 78 1 258 2 318 1 291 1 374 1 250 1 222 1 281 1 67 1 320 1 15 1 80 1 200 1 286 1 
242 1 274 1 75 1 126 1 297 1 98 1 78 1 318 1 222 1 320 1 39 1 135 1 252 1 83 1 286 1 365 1 63 1 44 1 211 1 258 1 375 1 265 2 376 1 67 1 121 1 200 1 
94 1 
153 1 96 1 57 2 298 1 154 1 7 1 99 6 98 2 9 1 10 1 247 2 250 1 104 2 253 1 64 2 20 1 255 1 256 1 210 1 24 1 264 1 266 1 215 1 72 1 173 1 310 1 31 1 354 5 217 2 358 1 318 1 131 2 222 1 133 2 38 5 283 1 284 1 80 1 364 2 365 2 184 2 186 1 185 1 323 4 368 2 142 3 291 1 192 2 235 1 52 2 293 1 239 2 197 1 200 2 91 1 
354 3 96 1 154 1 99 2 358 1 38 3 185 1 255 1 323 2 368 1 256 1 210 1 142 1 327 1 264 1 266 1 235 1 293 1 197 1 173 1 310 1 91 1 
354 3 96 1 154 1 99 1 358 1 10 1 131 1 38 3 185 1 64 1 255 1 323 3 256 1 210 1 142 1 327 1 264 1 266 1 235 1 293 1 197 1 173 1 310 1 91 1 
354 3 96 1 154 1 99 2 358 1 10 1 131 1 38 3 185 1 64 1 255 1 323 3 368 1 256 1 210 1 142 1 327 1 264 1 266 1 192 1 235 1 293 1 197 1 173 1 310 1 91 1 
31 1 354 5 96 1 57 2 154 1 175 1 99 7 358 1 247 2 10 5 131 4 133 1 38 5 284 1 42 1 364 1 184 2 186 1 185 1 64 5 255 1 323 6 368 4 256 1 210 1 24 1 188 1 142 3 327 1 264 1 266 1 192 4 235 1 52 2 293 1 215 1 239 2 123 1 197 1 174 1 72 1 173 1 310 1 91 1 
96 1 154 1 57 2 99 4 9 1 247 2 10 1 104 2 64 2 255 1 256 1 210 1 24 1 264 1 266 1 215 1 72 1 173 1 310 1 31 1 354 4 358 1 131 2 133 1 38 4 284 1 364 1 186 1 185 1 184 2 323 4 368 2 142 2 192 2 235 1 52 2 293 1 239 2 197 1 91 1 
31 1 354 4 96 1 57 2 154 1 99 4 358 1 10 1 247 2 131 2 133 1 38 4 284 1 42 1 364 1 184 2 185 1 186 1 64 1 255 1 323 4 368 2 256 1 210 1 188 1 24 1 142 2 264 1 192 2 266 1 235 1 52 2 293 1 215 1 239 2 197 1 174 1 173 1 72 1 310 1 91 1 
31 1 354 4 96 1 57 2 154 1 99 4 358 1 10 1 247 2 131 2 133 1 38 4 284 1 42 1 364 1 184 2 185 1 186 1 64 1 255 1 323 4 368 2 256 1 210 1 188 1 24 1 142 2 264 1 192 2 266 1 235 1 52 2 293 1 215 1 239 2 197 1 174 1 173 1 72 1 310 1 91 1 
31 1 354 4 96 1 57 2 154 1 99 4 358 1 10 1 131 2 104 2 133 1 38 4 364 1 138 1 184 2 185 1 186 1 64 1 255 1 323 4 368 2 256 1 346 1 210 1 324 2 24 1 142 2 264 1 192 2 266 1 235 1 293 1 215 1 71 1 122 2 197 1 174 1 173 1 72 1 310 1 91 1 
31 1 354 4 96 1 57 2 154 1 99 5 358 1 10 1 247 2 131 3 133 1 38 4 284 1 42 1 364 1 184 2 186 1 185 1 64 1 255 1 323 5 368 3 256 1 210 1 24 1 188 1 142 2 264 1 266 1 192 3 235 1 52 2 293 1 215 1 239 2 197 1 123 1 174 1 72 1 173 1 310 1 91 1 
31 1 354 4 96 1 57 2 154 1 99 5 358 1 10 1 247 2 131 3 133 1 38 4 284 1 42 1 364 1 184 2 186 1 185 1 64 1 255 1 323 5 368 3 256 1 210 1 24 1 188 1 142 2 264 1 266 1 192 3 235 1 52 2 293 1 215 1 239 2 197 1 123 1 174 1 72 1 173 1 310 1 91 1 
96 1 154 1 57 2 99 4 9 1 10 1 104 2 64 1 255 1 256 1 210 1 24 1 264 1 266 1 215 1 71 1 122 2 72 1 173 1 310 1 31 1 354 4 358 1 131 2 133 1 38 4 364 1 186 1 185 1 184 2 323 4 368 2 324 2 142 2 192 2 235 1 293 1 197 1 91 1 
190 1 107 2 144 1 313 1 43 1 19 1 183 1 160 1 238 1 84 1 380 1 
296 2 355 4 56 6 177 16 244 1 179 4 58 2 315 1 361 1 157 13 363 4 183 2 160 2 84 1 107 4 207 2 227 4 162 1 43 2 366 2 165 2 140 1 141 1 47 9 169 4 190 2 144 2 118 2 120 22 331 1 240 16 272 1 241 4 
217 1 56 1 298 1 244 1 202 1 98 1 315 1 318 1 157 1 222 1 160 1 183 1 84 1 161 1 107 2 365 1 43 1 345 1 289 1 140 1 168 1 113 1 47 1 348 1 190 1 291 1 144 1 349 1 266 1 193 1 235 2 170 1 120 2 331 1 294 1 197 2 200 1 334 1 
296 4 56 7 337 2 298 2 244 1 98 3 202 2 58 4 249 1 102 1 157 10 160 3 107 6 207 2 254 1 19 1 113 1 168 2 348 1 169 2 266 1 27 2 117 1 268 1 120 20 74 1 313 1 217 1 177 7 315 1 360 2 318 2 222 2 363 3 39 1 37 2 183 3 84 3 365 3 227 8 366 3 43 3 367 2 45 1 289 2 140 1 47 10 190 3 144 3 291 2 193 1 235 3 331 2 294 1 240 7 197 3 200 3 334 2 241 2 
217 2 55 2 298 3 244 1 98 7 314 1 318 2 157 1 250 1 222 2 39 1 183 2 160 2 80 1 226 1 84 2 107 4 365 8 43 2 322 1 140 1 212 1 47 1 348 1 50 1 262 1 190 2 260 1 144 2 291 2 266 1 193 1 235 1 377 1 238 1 120 2 294 1 197 1 200 8 
56 1 177 1 58 1 315 1 157 1 341 1 363 1 183 1 160 1 17 1 84 1 107 2 207 1 227 1 43 1 366 1 47 2 348 1 169 1 190 1 144 1 266 1 235 1 171 1 120 3 294 1 240 1 197 1 241 1 
296 1 107 2 227 1 43 1 56 1 177 1 190 1 144 1 362 1 157 2 363 1 120 2 238 1 160 1 183 1 240 1 84 1 241 1 
107 2 207 1 227 1 43 1 366 1 56 1 177 1 58 1 47 2 190 1 144 1 120 2 238 1 160 1 183 1 240 1 84 1 342 1 
296 1 56 2 177 2 58 1 157 2 363 1 183 1 160 1 84 1 107 2 207 1 227 2 43 1 366 1 47 2 169 1 190 1 144 1 238 1 120 4 240 2 241 1 
296 1 107 2 227 1 43 1 56 1 177 1 260 1 190 1 144 1 362 1 157 2 363 1 120 2 160 1 183 1 240 1 84 1 241 1 
107 2 207 1 227 1 43 1 366 1 56 1 177 1 58 1 47 2 260 1 190 1 144 1 120 2 160 1 183 1 240 1 84 1 342 1 
296 1 56 2 177 2 58 1 157 2 363 1 183 1 160 1 84 1 107 2 207 1 227 2 43 1 366 1 47 2 169 1 190 1 260 1 144 1 120 4 240 2 241 1 
296 1 56 2 177 2 58 1 157 2 363 1 183 1 160 1 84 1 107 2 207 1 227 2 43 1 366 1 47 2 169 1 190 1 144 1 120 4 240 2 241 1 
217 1 337 1 298 1 244 1 202 1 98 1 318 1 157 1 222 1 160 1 183 1 84 1 107 2 365 1 43 1 289 1 140 1 168 1 47 1 190 1 291 1 144 1 235 1 120 2 331 1 197 1 200 1 334 1 
217 1 5 1 298 1 244 1 202 1 98 1 8 1 318 1 157 1 222 1 160 1 183 1 84 1 107 2 365 1 43 1 140 1 290 1 168 1 47 1 190 1 291 1 144 1 235 1 120 2 331 1 197 1 200 1 
296 1 56 2 177 2 58 1 315 1 157 2 363 1 183 1 160 1 84 1 107 2 207 1 227 2 43 1 366 1 47 2 169 1 190 1 144 1 120 4 240 2 241 1 
296 1 56 2 337 1 177 2 298 1 202 1 98 1 58 1 318 1 157 2 363 1 222 1 37 1 160 1 183 1 84 1 207 1 107 2 227 2 365 1 366 1 43 1 289 1 47 2 168 1 212 1 169 1 190 1 291 1 144 1 235 1 120 4 240 2 197 1 200 1 241 1 334 1 
296 1 56 1 177 1 315 1 157 2 363 1 183 1 160 1 17 1 84 1 207 1 107 2 227 1 366 1 43 1 47 1 348 1 169 1 190 1 144 1 266 1 235 1 171 1 120 3 294 1 240 1 197 1 311 1 241 1 
296 6 152 1 355 5 95 1 179 5 58 4 33 2 157 25 206 1 14 1 363 7 183 4 160 4 105 2 321 1 107 8 207 5 227 10 366 5 165 2 166 1 47 21 372 1 169 7 190 4 144 4 145 1 292 4 267 1 306 1 195 1 118 2 120 46 69 1 269 1 353 1 272 3 241 7 
296 3 355 2 95 1 179 3 58 2 33 1 157 16 206 1 14 1 363 4 183 4 160 4 105 2 321 1 107 8 207 4 227 5 366 4 166 1 47 17 372 1 169 4 190 4 144 4 145 1 292 4 267 1 306 1 195 1 118 1 120 33 69 1 269 1 353 1 272 2 241 4 
74 1 296 6 313 1 355 4 95 1 179 4 58 8 33 1 249 1 157 27 206 1 14 1 363 8 183 3 160 3 105 2 321 1 107 6 207 7 227 14 366 8 165 2 19 1 45 1 166 1 47 27 372 1 169 7 190 3 144 3 145 1 292 4 267 1 306 1 268 1 195 1 118 2 120 54 69 1 269 1 272 2 241 7 
296 3 355 2 95 1 179 3 58 3 33 1 248 1 157 15 206 1 14 1 363 4 183 4 160 4 105 2 321 1 107 8 207 4 227 6 366 4 166 1 47 16 169 4 190 4 144 4 145 1 292 3 267 1 306 1 195 1 118 1 120 31 69 1 269 1 353 1 272 2 241 4 
296 4 355 4 95 2 179 4 58 4 33 2 157 24 206 1 14 1 363 7 183 3 160 3 105 2 321 1 107 6 207 6 227 8 366 6 165 2 166 1 47 22 372 1 169 7 190 3 144 3 145 1 292 4 267 1 306 1 195 1 118 2 120 46 69 1 269 1 272 2 241 7 
0 1 201 1 139 1 68 1 178 1 357 1 198 1 204 1 295 1 259 1 
116 1 148 1 
282 1 68 1 178 1 357 1 77 1 332 1 198 1 295 1 259 1 
92 1 25 1 
328 1 167 1 352 1 
0 1 54 1 354 1 2 1 139 1 64 1 357 1 178 1 231 2 204 1 259 1 68 1 38 1 16 1 61 1 198 1 295 1 333 1 
0 1 54 1 354 1 2 1 139 1 64 1 357 1 178 1 231 2 204 1 259 1 68 1 38 1 16 1 61 1 198 1 295 1 333 1 
0 1 54 1 354 1 2 1 139 1 64 1 357 1 178 1 231 2 204 1 259 1 68 1 38 1 16 1 61 1 198 1 295 1 333 1 
92 1 25 1 167 1 
92 1 25 1 167 1 
328 1 352 1 
328 1 167 1 352 1 
60 1 12 1 
354 1 178 1 357 1 155 1 60 1 12 1 340 1 38 1 61 1 87 1 65 1 369 1 231 1 348 2 259 1 88 1 266 2 235 2 148 1 116 1 68 1 331 1 294 2 197 2 198 1 333 1 295 1 
55 2 298 1 244 1 98 2 315 1 318 1 157 1 222 1 13 1 160 1 183 1 81 1 84 1 107 2 365 2 43 1 229 1 140 1 47 1 50 1 190 1 291 1 144 1 266 2 235 2 377 1 196 1 120 2 197 2 200 2 90 1 
365 2 126 1 75 1 63 1 98 2 218 1 211 1 212 1 318 1 265 2 350 1 222 1 39 1 237 1 121 1 135 1 252 1 83 1 200 2 
365 1 126 1 75 1 63 1 98 1 218 1 211 1 318 1 234 1 265 2 222 1 39 1 121 1 135 1 252 1 83 1 200 1 
365 1 217 1 298 1 98 1 211 1 318 1 291 1 350 1 250 1 222 1 134 1 15 1 80 1 200 1 
365 1 126 1 75 1 63 1 98 1 218 1 211 1 318 1 265 2 350 1 222 1 39 1 237 1 121 1 135 1 252 1 83 1 200 1 
329 1 
180 1 303 1 380 1 
31 1 354 1 99 1 247 1 10 1 104 1 133 1 38 1 284 1 364 1 186 1 64 2 24 1 142 1 52 1 239 1 72 1 
31 2 336 1 354 1 217 1 4 1 275 1 298 3 99 1 98 1 202 1 59 1 245 1 360 1 339 1 318 2 363 1 104 6 222 1 221 2 133 4 38 1 207 1 364 3 253 1 365 1 288 1 366 1 186 2 64 3 232 1 24 2 169 1 142 1 325 1 291 1 52 3 330 3 271 3 200 1 72 2 241 1 
31 2 354 1 355 2 153 1 4 3 97 1 179 2 99 1 10 2 206 1 104 10 363 4 133 13 35 1 38 1 253 1 364 8 207 4 366 4 186 2 165 1 64 7 166 1 24 2 169 4 142 1 145 1 306 1 52 5 195 1 118 1 330 8 351 1 271 8 72 2 272 1 241 4 
74 1 31 1 354 1 4 2 97 1 358 1 11 1 363 2 133 2 38 1 40 1 17 1 42 1 364 2 366 1 186 1 45 1 21 1 24 1 348 1 189 1 261 1 266 1 235 1 268 1 294 1 197 1 72 1 
217 1 337 1 298 1 98 1 202 1 11 1 318 1 159 1 222 1 183 1 160 1 17 2 84 1 107 2 365 1 43 1 289 1 140 1 47 1 168 1 348 2 190 1 291 1 144 1 266 2 235 3 120 1 331 1 294 2 197 3 200 1 334 1 
364 2 31 1 253 1 186 1 64 4 153 1 24 1 10 2 249 1 104 4 52 2 133 1 330 2 271 2 72 1 
31 1 364 1 186 1 64 1 180 1 303 1 24 1 10 1 133 1 72 1 
364 5 207 2 366 2 4 2 64 5 97 1 360 1 169 2 363 2 104 10 52 5 133 5 330 5 271 5 241 2 
354 1 64 1 38 1 99 1 10 1 142 1 
31 2 354 3 217 2 153 2 356 2 298 1 98 4 99 4 318 1 132 1 250 1 222 1 133 2 38 3 283 1 80 1 253 2 364 2 365 4 186 2 20 1 23 1 24 2 257 1 142 2 214 1 291 1 72 1 200 4 
68 1 41 1 198 1 
53 1 68 1 60 1 198 1 204 1 
68 1 41 1 198 1 
68 1 41 1 198 1 
68 1 277 1 198 1 
68 1 277 1 198 1 
68 1 277 1 198 1 
68 1 198 1 
178 1 357 1 
296 1 107 4 74 1 227 3 366 1 313 1 19 1 45 1 58 2 47 4 249 1 190 2 157 4 144 2 363 1 268 1 120 8 160 2 183 2 105 1 
313 1 19 1 380 1 
207 1 107 2 296 1 227 2 366 1 58 1 47 2 169 1 190 1 144 1 157 2 363 1 305 1 160 1 183 1 120 4 241 1 
296 1 207 2 227 2 355 2 366 2 165 1 179 2 58 1 47 6 169 2 157 6 363 2 118 1 120 12 272 1 241 2 
74 2 296 4 313 1 355 2 179 2 58 5 246 1 249 1 157 11 363 3 160 2 183 2 105 2 207 2 107 4 227 9 162 1 366 3 165 1 19 1 45 1 47 12 169 2 190 2 144 2 268 2 118 1 120 23 241 2 
179 1 120 1 47 1 
157 1 355 1 120 1 
107 2 296 1 207 1 227 3 366 1 58 2 47 3 360 1 169 1 190 1 144 1 157 3 363 1 305 1 183 1 160 1 120 6 241 1 
296 2 355 2 179 2 58 2 157 11 14 1 363 4 206 1 183 1 160 1 107 2 207 4 227 4 366 4 165 1 166 1 47 11 169 4 190 1 144 1 145 1 306 1 195 1 118 1 120 22 272 1 241 4 
74 1 296 1 227 2 366 1 45 1 58 1 47 3 157 3 363 1 268 1 120 6 
296 1 74 1 107 2 227 2 313 1 19 1 58 1 246 1 47 2 190 1 157 1 144 1 268 1 120 3 160 1 183 1 105 1 
74 2 296 4 313 1 355 1 179 1 58 5 249 1 157 14 14 1 206 1 363 5 183 2 160 2 105 1 107 4 207 1 227 9 366 4 19 1 45 2 166 1 47 10 189 1 169 2 190 2 144 2 145 1 306 1 268 2 195 1 120 24 272 1 241 2 
74 1 296 1 313 1 355 1 179 2 58 2 249 1 157 6 14 1 363 2 183 2 160 2 107 4 227 3 366 1 19 1 45 1 47 5 169 1 190 2 144 2 145 1 305 1 268 1 118 1 120 11 272 1 241 1 
74 1 296 2 313 1 355 2 179 2 58 4 249 1 157 14 14 1 363 5 206 1 183 3 160 3 105 1 107 6 207 4 227 6 366 5 165 1 19 1 45 1 166 1 47 15 169 4 190 3 144 3 145 1 305 1 306 1 268 1 195 1 118 1 120 29 272 1 241 4 
74 1 296 3 313 1 355 2 179 2 58 4 249 1 157 15 14 1 363 5 206 1 183 3 160 3 105 1 107 6 207 3 227 7 366 4 165 1 19 1 45 1 166 1 47 12 169 4 190 3 144 3 145 1 305 1 306 1 268 1 195 1 118 1 120 27 272 1 241 4 
74 2 296 4 313 1 355 1 179 1 58 5 249 1 157 14 14 1 206 1 363 5 183 2 160 2 105 1 107 4 207 1 227 9 366 4 19 1 45 2 166 1 47 10 189 1 169 2 190 2 144 2 145 1 306 1 268 2 195 1 120 24 272 1 241 2 
296 2 355 2 179 2 58 2 157 11 14 1 363 4 206 1 183 1 160 1 107 2 207 4 227 4 366 4 165 1 166 1 47 11 169 4 190 1 144 1 145 1 306 1 195 1 118 1 120 22 272 1 241 4 
74 1 296 3 313 1 355 2 179 2 58 4 249 1 157 15 206 1 14 1 363 5 183 4 160 4 105 2 107 8 207 3 227 7 366 4 165 1 19 1 45 1 166 1 47 13 169 4 190 4 144 4 145 1 306 1 305 1 268 1 195 1 118 1 120 28 272 1 241 4 
355 1 179 2 58 1 157 3 14 1 363 1 183 2 160 2 107 4 207 1 227 1 366 1 47 4 169 1 190 2 144 2 145 1 118 1 120 7 272 1 353 1 241 1 
74 3 296 3 227 6 366 1 313 2 19 1 45 1 58 3 47 4 157 3 363 1 268 3 120 7 
355 1 179 2 58 1 157 3 14 1 363 1 183 2 160 2 107 4 207 1 227 1 366 1 47 4 169 1 190 2 144 2 145 1 118 1 120 7 272 1 353 1 241 1 
107 2 74 2 296 2 227 5 366 2 45 1 58 3 47 5 189 1 190 1 144 1 157 5 14 1 363 2 268 2 183 1 160 1 120 10 
107 2 296 1 227 1 190 1 144 1 157 2 14 1 363 1 160 1 183 1 120 2 241 1 
207 1 107 2 296 1 227 2 366 1 58 1 47 2 169 1 190 1 144 1 157 2 14 1 363 1 160 1 183 1 120 4 241 1 
107 6 74 1 296 1 227 2 58 1 246 1 47 2 190 3 144 3 157 1 14 1 268 1 120 3 160 3 183 3 105 1 353 1 
296 3 74 2 355 1 313 1 179 1 58 3 246 1 157 7 363 2 14 1 183 4 160 4 105 1 107 8 227 6 366 2 19 1 45 1 47 8 189 1 190 4 144 4 305 1 268 2 120 15 29 1 272 1 353 1 
191 1 266 1 235 1 6 1 331 1 210 1 197 1 
106 1 93 1 127 1 6 1 210 1 191 1 266 1 26 1 235 1 331 1 216 1 197 1 
365 1 217 1 98 1 80 1 200 1 380 1 
365 1 217 1 298 1 289 1 202 1 98 1 168 1 348 1 318 1 291 1 193 1 266 1 235 2 222 1 331 1 294 1 197 2 200 1 
30 1 96 1 356 1 298 3 98 1 202 2 358 1 318 1 222 1 365 1 289 1 256 1 168 1 348 2 49 1 291 2 266 2 193 1 235 2 331 1 294 1 197 2 200 1 
30 1 151 1 96 1 356 1 298 3 98 2 202 2 358 1 318 1 222 1 365 2 256 1 290 1 168 1 348 2 49 1 291 2 266 2 193 1 235 2 331 1 294 1 197 2 200 2 
30 1 151 1 354 2 365 3 217 1 85 1 64 1 356 1 298 4 202 1 98 3 99 1 10 1 49 1 318 1 319 1 291 1 221 1 222 1 38 2 200 3 91 1 309 1 
354 1 298 1 356 1 98 1 358 1 10 1 11 1 339 1 221 1 38 1 40 1 17 1 365 1 64 1 21 1 348 1 261 1 266 1 235 1 294 1 197 1 200 1 
318 1 365 1 222 1 98 1 226 1 200 1 
365 7 217 2 55 1 322 1 298 3 98 6 202 1 314 1 212 1 325 1 262 1 318 3 291 2 147 1 222 2 39 1 79 1 377 1 226 1 200 7 124 1 
74 1 313 1 56 1 337 1 177 1 298 1 202 1 98 1 58 2 315 1 249 1 318 1 157 3 363 1 222 1 37 1 160 2 183 2 81 1 84 2 107 4 227 2 365 1 366 1 43 2 19 1 45 1 289 1 47 3 168 1 212 1 348 1 190 2 291 1 144 2 266 1 193 1 235 2 27 1 268 1 120 6 331 2 294 1 240 1 197 2 200 1 334 1 
4 2 97 1 298 1 99 1 98 1 59 1 10 2 11 1 339 1 17 1 64 2 65 1 21 1 303 1 257 1 24 2 348 1 261 1 266 1 268 1 72 2 31 2 74 1 354 2 217 1 275 1 180 1 358 1 221 1 363 2 133 4 38 2 40 1 364 5 288 1 365 1 366 2 186 2 45 1 189 1 142 1 235 1 294 1 197 1 200 1 
365 2 298 2 98 2 202 1 232 1 212 1 325 1 319 1 318 2 291 1 222 1 226 1 200 2 
151 1 365 4 217 1 298 1 111 1 98 4 212 1 318 1 291 1 250 1 222 1 80 1 200 4 
365 2 356 1 298 1 98 2 209 1 202 1 318 2 291 1 147 1 222 1 117 1 236 1 200 2 124 1 
318 1 365 1 265 1 217 1 222 1 98 1 135 1 252 1 83 1 200 1 
365 2 298 1 98 2 212 1 318 1 291 1 13 1 222 1 39 1 377 1 200 2 
365 5 217 1 356 1 298 3 111 1 98 4 212 1 314 1 262 1 318 2 291 2 250 1 222 2 377 1 80 1 200 5 
365 5 217 1 356 1 298 3 111 1 98 4 212 1 314 1 318 2 291 2 250 1 222 2 377 1 80 1 200 5 18 1 
365 1 217 1 298 1 202 1 98 1 290 1 168 1 348 1 318 1 291 1 193 1 266 1 235 2 222 1 331 1 294 1 197 2 200 1 
365 1 356 1 298 1 98 1 202 1 325 1 318 2 291 1 147 1 222 1 79 1 200 1 124 1 
149 1 194 1 331 1 205 1 129 1 
137 1 73 1 354 2 64 1 96 1 65 1 256 1 358 1 10 1 316 1 129 1 205 2 103 1 149 2 38 2 194 2 331 1 91 1 310 1 
266 1 229 1 235 1 149 1 194 1 196 1 197 1 90 1 129 1 
103 1 316 1 129 1 
301 1 46 1 380 1 
373 1 301 1 320 1 67 1 46 1 78 1 286 1 
44 1 258 1 78 1 
301 1 46 1 302 1 78 3 213 2 373 1 376 1 251 1 67 1 320 3 224 1 286 1 
143 1 373 1 301 1 320 2 67 1 46 1 347 1 78 2 286 1 
373 1 265 1 376 1 320 1 67 1 121 1 252 1 48 1 78 1 51 1 286 1 
373 1 376 1 320 1 67 1 46 1 78 1 286 1 
301 1 376 1 320 1 67 1 46 2 78 1 286 1 
373 1 376 1 320 2 67 2 208 1 46 1 276 1 78 2 379 1 286 2 
301 1 108 1 3 1 46 1 78 3 51 1 143 2 373 2 376 1 304 1 67 1 320 3 286 1 
301 1 126 1 46 1 156 1 78 2 143 1 373 1 265 2 376 1 67 1 320 2 135 1 121 1 252 1 286 1 
301 1 109 1 46 1 347 1 78 4 51 1 143 2 373 2 376 1 304 1 67 2 320 4 286 2 
301 1 108 1 46 1 78 3 143 1 213 1 373 1 376 1 67 1 320 3 286 1 
373 1 146 1 304 1 51 1 
373 1 46 1 
373 1 301 1 376 1 320 1 67 1 46 1 78 1 286 1 
301 2 46 2 302 1 78 4 51 1 213 1 143 2 373 3 146 1 251 1 304 1 320 4 67 1 286 1 
143 1 326 1 373 1 273 1 301 1 163 1 376 1 320 2 67 1 46 1 78 2 286 1 
301 1 46 1 302 2 78 3 213 2 373 1 251 1 376 1 67 1 320 3 270 1 286 1 
373 2 230 2 338 1 278 1 
287 1 376 1 320 1 67 1 78 1 286 1 
143 1 373 1 301 1 108 1 376 1 320 2 67 1 46 1 78 2 286 1 
70 1 
373 1 301 1 376 1 320 1 67 1 46 1 78 1 286 1 

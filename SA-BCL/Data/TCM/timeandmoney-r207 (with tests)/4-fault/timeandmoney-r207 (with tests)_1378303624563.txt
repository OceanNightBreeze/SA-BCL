#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 265 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (65,223) (65,223) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 254 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 254 289 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 187 175 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 91 50 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 150 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 150 241 30 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 150 241 30 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 150 241 73 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 91 50 87 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 91 50 87 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 150 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (65,223) (65,223) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (65,223) (65,223) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (65,223) (65,223) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 222 53 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 85 (68,237) 334 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 124 306 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (129,296) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (137,263) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 99 (66,189) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 2 41 1 6 4 220 9 130 2 89 1 305 1 180 5 275 1 277 1 316 1 236 1 193 1 20 2 194 1 58 3 324 1 110 1 113 1 282 1 147 9 148 1 246 2 210 1 33 2 36 2 337 2 38 6 
126 2 41 1 6 4 220 9 130 2 89 1 305 1 180 5 275 1 277 1 316 1 236 1 193 1 20 2 194 1 58 3 324 1 110 1 113 1 282 1 147 9 148 1 246 2 210 1 33 2 36 2 337 2 38 6 
126 2 41 1 6 5 220 10 130 2 89 1 305 1 180 6 275 1 277 1 316 1 236 1 193 1 20 2 194 1 58 4 324 1 110 1 113 1 282 1 147 10 148 1 246 2 210 1 33 2 36 2 337 2 38 7 
126 2 41 1 6 3 220 7 130 2 89 1 305 1 180 4 275 1 277 1 316 1 236 1 193 1 20 2 194 1 58 2 324 1 110 1 282 1 147 7 148 1 246 2 210 1 33 1 36 2 337 2 38 4 
275 1 126 1 236 1 20 1 6 2 58 1 220 4 110 1 130 1 113 1 147 4 89 1 246 1 210 1 33 2 180 3 337 1 38 3 
275 1 236 1 126 1 20 1 259 1 220 2 110 1 130 1 282 1 147 2 331 1 148 1 14 1 246 1 180 1 36 1 
275 1 147 3 316 1 236 1 246 2 6 1 20 2 58 1 180 2 220 3 36 1 110 1 38 1 
126 1 6 4 220 9 130 1 89 1 305 1 180 5 275 1 56 1 316 1 236 1 20 2 194 1 58 3 196 1 110 1 113 1 147 9 246 2 210 1 33 2 36 1 337 1 38 7 
126 1 6 4 220 9 130 1 89 1 305 1 180 5 275 1 56 1 316 1 236 1 20 2 194 1 58 3 196 1 110 1 113 1 147 9 246 2 210 1 33 2 36 1 337 1 38 7 
256 1 
224 1 242 1 134 1 88 1 293 1 79 1 320 1 17 1 208 1 54 1 37 1 
224 2 134 1 88 1 12 1 79 1 320 1 90 1 17 1 208 1 230 1 54 1 37 1 
224 1 321 1 
224 1 321 1 
224 1 
224 1 321 1 
224 1 321 1 
184 1 224 2 13 1 321 1 145 1 77 1 
256 1 278 1 
185 1 320 2 79 2 278 2 300 1 88 2 12 1 90 1 230 1 
213 1 227 1 245 1 
160 1 55 2 214 1 215 1 79 1 320 1 278 1 42 1 165 1 166 1 298 1 170 2 66 1 15 1 152 1 178 1 153 1 51 2 138 1 
160 1 55 1 213 1 320 2 79 2 42 1 192 1 297 1 166 1 298 1 170 1 66 1 88 1 12 1 15 1 178 1 230 1 153 1 138 1 51 1 
88 3 12 3 90 1 79 3 320 3 278 1 192 1 230 3 
88 1 12 1 135 1 79 1 320 1 230 1 54 1 
185 1 88 1 12 1 79 1 320 1 90 1 230 1 300 1 54 1 
320 2 79 2 192 1 297 1 217 1 300 1 326 1 224 1 134 1 88 2 12 2 90 1 17 1 208 1 230 2 54 1 37 1 
123 1 293 1 88 2 12 1 79 2 320 2 278 1 192 1 230 1 
320 1 79 1 192 1 297 1 326 1 224 1 134 1 88 1 12 1 265 1 17 1 230 1 208 1 54 1 37 1 
213 1 320 2 79 2 192 1 300 1 88 2 12 2 245 1 90 1 230 2 
55 1 160 1 79 1 320 1 278 1 42 1 166 1 298 1 170 1 66 1 15 1 178 1 153 1 138 1 51 1 
55 1 160 1 79 1 320 1 318 1 278 1 42 1 166 1 298 1 170 1 178 1 137 1 153 1 138 1 51 1 
213 2 162 2 163 2 164 1 167 1 82 1 261 1 227 2 92 4 139 1 95 1 181 1 98 1 190 1 143 1 57 1 197 1 61 2 27 1 330 1 116 1 243 1 245 2 154 1 
88 1 12 1 79 1 320 1 208 1 230 1 209 1 54 1 
123 1 212 1 293 1 320 5 79 5 192 2 278 1 297 1 300 1 88 5 12 4 90 1 230 4 233 1 
88 2 12 2 135 1 79 2 320 2 209 1 230 2 54 1 
226 1 240 1 
226 1 240 1 
22 1 172 1 
22 1 172 1 
22 1 172 1 
226 1 207 1 240 1 
226 1 207 1 240 1 
294 1 226 1 240 1 
284 1 226 2 258 1 22 1 240 2 172 1 
226 1 207 1 240 1 
226 1 322 1 240 1 
226 1 322 1 240 1 
226 1 322 1 240 1 
314 2 161 1 240 2 65 1 223 1 224 2 173 2 283 1 226 2 151 2 74 2 288 1 272 2 
314 1 79 1 320 1 240 1 222 1 224 1 173 1 226 1 88 1 12 1 151 1 230 1 74 1 288 1 272 1 
126 1 130 1 337 1 
126 1 259 1 130 1 
259 1 169 1 232 1 59 1 337 2 130 3 
323 1 259 1 169 1 232 1 337 1 130 2 
259 1 169 1 232 2 337 1 130 2 
224 1 321 1 198 1 
224 2 201 1 28 1 321 2 144 1 
184 1 224 2 315 1 254 1 13 1 321 1 205 1 145 1 119 1 301 1 77 1 
184 1 315 1 254 1 145 1 301 1 224 1 13 1 205 1 119 1 289 1 77 1 
160 1 115 1 256 1 
160 1 286 1 
239 1 
160 1 166 1 
39 1 160 3 211 1 115 2 166 1 178 1 
160 1 166 1 178 1 
160 1 44 1 
40 1 163 4 190 2 61 3 60 1 63 1 199 1 45 2 27 1 330 3 174 1 116 1 48 1 31 1 92 7 229 1 267 1 
40 1 163 4 190 2 61 3 60 1 63 1 199 1 45 2 27 1 330 3 174 1 116 1 48 1 31 1 92 7 229 1 267 1 
40 1 317 1 163 4 190 2 61 3 60 1 63 1 199 1 45 2 27 1 330 3 174 1 116 1 48 1 31 1 92 7 229 1 267 1 
40 1 162 2 124 1 163 16 8 1 82 1 45 3 174 1 48 2 229 1 49 1 92 31 267 2 139 3 95 3 181 1 312 4 190 5 57 1 107 1 61 15 60 5 199 1 63 2 112 1 27 4 330 10 116 4 29 3 31 2 70 1 154 1 120 1 76 3 
40 1 0 1 162 4 163 5 168 1 82 2 45 2 48 1 92 9 229 1 267 1 181 2 190 3 57 2 61 4 60 1 199 1 63 1 27 1 330 4 116 1 31 1 70 1 154 2 
126 1 42 1 259 1 298 1 170 1 220 2 171 1 84 1 130 2 302 1 176 1 180 1 51 1 273 1 275 1 55 1 236 1 20 1 102 1 59 1 110 1 147 2 202 1 246 1 117 1 247 1 34 1 36 1 337 1 38 1 
126 1 42 1 259 1 298 1 170 1 220 3 171 1 84 1 130 2 302 1 180 1 51 1 275 1 55 1 186 1 20 1 102 1 105 1 59 1 110 1 147 3 202 1 246 1 117 1 247 1 34 1 36 1 337 1 122 1 38 2 
126 1 42 1 259 1 298 1 170 1 220 2 84 1 130 2 180 1 51 1 275 1 55 1 186 1 102 1 59 1 110 1 147 2 202 1 117 1 247 1 34 1 36 1 337 1 122 1 38 2 
160 1 255 1 42 1 166 1 298 1 170 1 220 1 11 1 51 1 138 1 309 1 55 1 20 1 105 1 102 2 26 1 147 1 149 1 246 1 117 2 247 2 157 1 36 2 
126 1 42 1 259 1 298 1 170 1 220 1 171 1 84 1 130 2 302 1 51 1 273 1 55 1 236 1 20 1 102 1 59 1 147 1 202 1 246 1 117 1 247 1 34 1 36 1 337 1 122 1 
81 1 
184 1 224 1 187 1 55 1 315 1 175 1 13 1 21 1 170 1 51 1 138 1 119 1 77 1 
158 1 253 1 293 1 320 1 79 1 195 1 83 1 224 2 10 1 242 1 134 1 88 1 91 1 17 1 208 1 54 1 37 1 
158 1 253 1 293 1 320 1 79 1 195 1 83 1 224 2 10 1 242 1 134 1 88 1 17 1 208 1 54 1 37 1 290 1 
158 1 253 1 293 1 320 1 79 1 195 1 83 1 224 2 10 1 242 1 134 1 88 1 91 1 50 1 17 1 208 1 54 1 37 1 
224 1 
158 1 253 1 293 1 79 1 83 1 10 1 224 2 134 1 88 1 13 1 228 1 136 1 17 1 54 1 184 1 315 1 320 1 21 1 195 1 242 1 285 1 150 1 32 1 208 1 121 1 37 1 77 1 
158 1 253 1 293 1 79 1 83 1 10 1 224 2 134 1 88 1 13 1 228 1 136 1 17 1 54 1 184 1 315 1 320 1 21 1 195 1 241 1 242 1 285 1 150 1 30 1 32 1 208 1 250 1 121 1 37 1 77 1 
158 1 253 1 293 1 79 1 83 1 10 1 224 2 134 1 88 1 13 1 228 1 136 1 17 1 54 1 184 1 315 1 320 1 21 1 195 1 241 1 242 1 285 1 150 1 30 1 32 1 208 1 250 1 121 1 37 1 77 1 
158 1 253 1 293 1 79 1 83 1 10 1 224 2 134 1 88 1 13 1 228 1 308 1 17 1 231 1 54 1 184 1 315 1 141 1 320 1 21 1 195 1 241 1 242 1 285 1 150 1 32 1 208 1 73 1 37 1 77 1 
158 1 253 1 293 1 320 1 79 1 195 1 83 1 224 2 10 1 242 1 87 1 134 1 88 1 91 1 50 1 17 1 208 1 54 1 37 1 
158 1 253 1 293 1 320 1 79 1 195 1 83 1 224 2 10 1 242 1 87 1 134 1 88 1 91 1 50 1 17 1 208 1 54 1 37 1 
158 1 253 1 293 1 79 1 83 1 10 1 224 2 134 1 88 1 13 1 228 1 308 1 17 1 54 1 184 1 315 1 141 1 320 1 21 1 195 1 242 1 285 1 150 1 32 1 208 1 37 1 77 1 
40 1 213 1 162 2 163 3 256 1 190 2 278 2 57 1 167 1 61 3 197 1 82 1 199 1 63 1 45 1 27 1 330 2 261 1 227 1 116 1 245 1 31 1 92 6 229 1 154 1 181 1 
213 11 162 4 124 1 163 8 167 2 82 2 221 1 261 1 262 1 227 11 92 14 139 2 181 2 95 1 312 3 142 1 190 1 278 1 57 2 281 1 146 1 107 1 60 1 61 6 328 1 330 2 27 2 116 1 29 3 245 4 155 1 154 2 76 2 
160 1 162 2 79 2 163 1 2 1 42 1 165 1 297 1 166 1 298 1 167 1 170 1 82 1 221 1 261 1 88 1 12 1 15 1 92 2 178 1 230 1 51 1 138 1 181 1 55 1 320 2 278 1 192 1 57 1 146 1 61 1 66 1 67 1 245 1 206 1 153 1 154 1 155 1 
160 2 78 1 162 6 79 3 163 10 166 2 167 3 170 3 82 3 261 3 88 1 12 1 15 2 92 20 178 2 93 2 181 3 95 2 190 4 278 2 192 1 191 2 280 1 199 1 27 3 116 3 31 1 122 1 40 1 213 7 42 2 297 1 298 2 221 1 45 1 227 7 229 1 230 1 307 2 51 3 138 1 139 2 55 3 320 3 57 3 237 2 146 1 61 10 60 4 63 1 62 2 330 8 66 2 245 7 153 2 155 1 154 3 336 1 76 2 
160 3 162 4 214 2 79 1 163 1 1 1 43 1 42 2 166 2 298 2 167 2 170 8 82 2 219 1 221 1 261 2 88 1 12 1 176 1 92 2 230 1 51 7 138 2 309 1 181 2 55 8 276 1 320 1 192 1 57 2 197 1 61 1 25 1 332 1 72 1 154 2 155 1 157 1 122 1 
213 1 162 2 79 1 163 1 167 1 300 1 82 1 261 1 88 1 227 1 12 1 90 1 92 3 230 1 139 1 181 1 95 1 235 1 320 1 190 1 57 1 146 1 61 2 330 1 27 1 116 1 245 1 154 1 76 1 
98 1 213 1 162 2 163 2 57 1 167 1 60 1 197 1 82 1 330 1 27 1 261 1 227 1 245 1 92 2 154 1 139 1 181 1 
213 1 162 2 190 1 57 1 164 1 167 1 197 1 82 1 61 2 330 1 261 1 227 1 116 1 245 1 92 2 154 1 181 1 95 1 
213 2 162 2 163 2 167 1 82 1 261 1 227 2 92 4 139 1 181 1 95 1 190 1 57 1 197 1 60 1 61 2 27 1 330 2 116 1 245 2 154 1 76 1 
98 1 213 1 162 2 163 2 57 1 167 1 60 1 219 1 82 1 330 1 27 1 261 1 227 1 245 1 92 2 154 1 139 1 181 1 
213 1 162 2 190 1 57 1 164 1 167 1 219 1 82 1 61 2 330 1 261 1 227 1 116 1 245 1 92 2 154 1 181 1 95 1 
213 2 162 2 163 2 167 1 82 1 219 1 261 1 227 2 92 4 139 1 181 1 95 1 190 1 57 1 60 1 61 2 27 1 330 2 116 1 245 2 154 1 76 1 
213 2 162 2 163 2 190 1 57 1 167 1 61 2 60 1 82 1 330 2 27 1 261 1 116 1 227 2 245 2 92 4 154 1 139 1 95 1 181 1 76 1 
160 1 162 2 163 1 79 1 42 1 166 1 298 1 167 1 170 1 82 1 221 1 261 1 15 1 92 2 178 1 307 1 51 1 138 1 181 1 55 1 320 1 278 1 57 1 61 1 66 1 153 1 154 1 155 1 
160 1 162 2 163 1 79 1 42 1 166 1 298 1 167 1 170 1 82 1 221 1 261 1 92 2 178 1 137 1 51 1 138 1 181 1 18 1 55 1 318 1 320 1 278 1 57 1 61 1 153 1 154 1 155 1 
213 2 162 2 163 2 167 1 82 1 261 1 227 2 92 4 139 1 181 1 95 1 190 1 57 1 146 1 60 1 61 2 27 1 330 2 116 1 245 2 154 1 76 1 
160 1 213 2 162 2 163 2 79 1 42 1 166 1 298 1 167 1 170 1 82 1 261 1 227 2 15 1 176 1 92 4 178 1 307 1 51 1 139 1 95 1 181 1 55 1 320 1 190 1 57 1 61 2 60 1 62 1 330 2 27 1 66 1 116 1 245 2 153 1 154 1 76 1 
213 1 162 2 79 1 163 2 167 1 300 1 82 1 261 1 88 1 12 1 227 1 90 1 92 3 230 1 139 1 95 1 181 1 97 1 320 1 57 1 146 1 61 1 60 1 330 1 27 1 116 1 245 1 154 1 76 1 
162 4 124 1 163 9 168 1 82 2 92 19 268 1 139 3 269 1 310 1 181 2 95 3 312 2 140 1 100 1 190 3 57 2 107 1 61 10 60 3 109 2 111 1 27 3 330 6 116 3 29 1 156 1 154 2 35 2 76 3 
162 6 163 14 124 2 168 1 82 3 47 1 92 26 306 1 139 3 269 2 310 1 181 3 95 2 312 2 140 1 190 2 57 3 60 2 61 12 109 1 108 1 111 1 330 4 27 3 116 2 29 2 70 2 287 1 249 1 156 2 154 3 35 4 75 1 76 3 
40 1 162 6 124 3 163 20 168 1 82 3 45 1 47 1 229 1 92 41 306 1 268 1 139 4 269 2 310 1 181 3 95 4 312 4 140 1 190 4 57 3 107 1 61 21 60 4 109 1 108 1 63 1 199 1 111 1 27 5 330 8 116 5 244 1 29 3 31 1 70 1 287 1 249 1 156 1 154 3 35 4 75 1 76 4 
40 1 162 8 124 3 163 20 168 1 82 4 45 1 47 1 229 1 92 38 306 1 268 1 139 4 269 2 310 1 181 4 95 3 312 4 140 1 190 4 57 4 107 1 61 18 60 3 109 1 108 1 63 1 199 1 111 1 27 5 330 7 116 4 244 1 29 3 31 1 70 2 287 1 249 1 156 1 154 4 35 4 75 1 76 4 
40 1 162 4 124 2 163 27 168 1 82 2 45 1 47 1 229 1 92 52 306 1 139 7 269 1 310 1 181 2 95 7 312 4 140 1 142 2 190 7 57 2 107 2 61 25 60 7 109 1 108 1 63 1 199 1 111 1 27 8 330 14 116 8 29 4 31 1 70 1 287 1 249 1 156 1 154 2 35 4 75 1 76 7 
314 1 225 1 173 1 226 1 151 1 258 1 238 1 74 1 327 1 240 1 
294 1 270 1 
314 1 173 1 226 1 80 1 151 1 218 1 74 1 240 1 182 1 
314 1 161 1 240 1 65 1 223 1 224 1 173 1 283 1 226 1 151 1 74 1 288 1 272 2 
314 1 161 1 240 1 65 1 223 1 224 1 173 1 283 1 226 1 151 1 74 1 288 1 272 2 
314 1 161 1 240 1 65 1 223 1 224 1 173 1 283 1 226 1 151 1 74 1 288 1 272 2 
96 1 284 1 207 1 
96 1 284 1 207 1 
216 1 322 1 
284 1 216 1 322 1 
106 1 271 1 
224 1 314 1 283 1 173 1 161 1 226 1 321 1 151 1 74 1 53 1 240 1 222 1 272 1 
96 1 207 1 
284 1 216 1 322 1 
160 1 295 1 162 2 214 2 79 2 163 1 1 1 42 1 166 1 298 1 167 1 170 2 82 1 221 1 261 1 88 2 92 2 51 2 181 1 55 2 320 2 57 1 146 1 61 1 114 1 333 1 204 1 248 1 72 1 154 1 155 1 
55 2 126 1 42 1 259 1 102 1 298 1 59 1 170 2 128 1 130 2 171 1 84 1 329 1 176 1 51 2 34 1 234 1 337 1 122 1 
55 1 126 1 42 1 259 1 102 1 298 1 59 1 170 1 130 2 171 1 84 1 329 1 51 1 118 1 34 1 337 1 122 1 
160 1 55 1 101 1 255 1 42 1 166 1 102 1 298 1 170 1 138 1 51 1 234 1 157 1 309 1 
55 1 126 1 42 1 259 1 102 1 298 1 59 1 170 1 128 1 130 2 171 1 84 1 329 1 51 1 34 1 234 1 337 1 122 1 
103 1 
285 1 296 1 256 1 129 1 
184 1 315 1 285 1 13 1 136 1 21 1 121 1 77 1 
184 1 160 2 55 1 211 1 315 1 42 1 21 1 166 1 298 2 170 1 200 1 85 1 68 1 13 1 334 1 286 1 178 1 138 1 51 1 119 1 77 1 
184 1 315 1 285 1 29 1 124 1 13 1 21 1 306 1 312 1 77 1 
184 1 40 1 315 1 4 1 21 1 127 1 63 1 224 1 27 2 116 1 285 2 13 1 31 1 250 1 77 1 291 2 
184 1 285 1 296 1 13 1 21 1 77 1 
27 1 315 1 116 1 285 1 139 1 95 1 76 1 
55 1 170 1 51 1 138 1 
183 1 184 1 315 1 285 1 13 1 21 1 119 1 77 1 
314 1 257 1 151 1 
314 1 257 1 151 1 
314 1 86 1 151 1 106 1 327 1 
314 1 257 1 151 1 
314 1 151 1 104 1 
314 1 151 1 104 1 
314 1 151 1 104 1 
314 1 151 1 
226 1 240 1 
40 1 162 4 163 4 190 2 57 2 61 4 60 1 82 2 199 1 63 1 45 1 27 1 330 3 116 1 31 1 70 1 92 8 229 1 154 2 181 2 
27 1 40 1 330 2 116 1 163 3 256 1 190 2 31 1 92 6 229 1 61 3 63 1 199 1 45 1 
162 2 163 2 190 1 57 1 61 2 82 1 60 1 24 1 330 2 27 1 116 1 92 4 154 1 139 1 95 1 181 1 76 1 
124 1 163 3 190 1 107 1 61 4 60 1 27 1 330 2 116 1 29 1 92 7 139 1 95 1 76 1 312 2 
40 1 162 4 163 11 82 2 45 1 262 1 229 1 92 23 139 2 95 2 181 2 312 2 142 1 190 5 57 2 279 1 107 1 60 4 61 12 63 2 199 1 330 9 27 3 116 3 29 2 31 2 70 2 154 2 76 2 
92 1 61 1 312 1 
163 1 29 1 92 1 
162 2 163 3 190 2 57 1 82 1 61 3 60 1 24 1 27 1 330 3 116 1 92 6 93 1 154 1 139 1 181 1 95 1 76 1 
162 2 124 1 163 6 168 1 82 1 47 1 92 12 306 1 139 2 181 1 95 2 312 1 190 1 57 1 60 1 61 6 108 1 27 2 330 2 116 2 29 1 287 1 154 1 75 1 76 2 
40 1 163 3 190 1 61 3 60 1 63 1 27 1 330 2 116 1 31 1 92 6 
162 2 163 1 190 1 57 1 279 1 60 1 61 2 82 1 63 1 199 1 330 2 31 1 70 1 92 3 229 1 154 1 181 1 
40 1 162 2 163 5 190 3 57 1 168 1 127 1 82 1 60 2 61 5 63 2 330 5 27 2 116 2 31 2 92 10 154 1 181 1 
162 2 163 2 57 1 168 1 82 1 60 1 27 1 330 1 92 2 154 1 139 1 181 1 
162 2 163 2 190 1 57 1 168 1 61 2 82 1 60 1 330 2 27 1 116 1 92 4 154 1 139 1 95 1 181 1 76 1 
162 6 163 1 190 1 57 3 279 1 168 1 61 2 82 3 60 1 63 1 330 2 31 1 70 1 92 3 154 3 268 1 181 3 
40 2 162 10 124 1 163 16 168 1 82 5 45 1 229 1 49 1 92 34 268 1 139 3 181 5 95 3 312 4 190 7 57 5 279 1 107 1 61 18 60 5 63 3 199 1 24 1 112 1 27 5 330 12 116 5 29 3 31 3 70 2 154 5 120 1 76 3 
40 1 162 2 124 1 163 4 168 1 82 1 45 1 92 8 229 1 306 1 181 1 312 1 190 2 57 1 61 4 199 1 63 1 27 1 330 2 116 1 29 1 31 1 154 1 
40 1 162 4 124 1 163 6 168 1 82 2 45 1 229 1 92 11 306 1 139 1 181 2 312 2 190 2 57 2 107 1 61 5 60 1 63 1 199 1 24 1 27 2 330 3 116 1 29 1 31 1 154 2 76 1 
40 1 162 6 124 1 163 9 168 1 82 3 45 1 47 1 229 1 92 19 306 1 139 2 181 3 95 2 312 1 190 3 57 3 60 1 61 10 108 1 63 1 199 1 24 1 27 3 330 4 116 3 29 1 31 1 70 1 287 1 154 3 75 1 76 2 
40 1 162 6 124 1 163 10 168 1 82 3 45 1 47 1 229 1 92 17 306 1 139 2 181 3 95 1 312 1 190 3 57 3 60 2 61 7 108 1 63 1 199 1 24 1 27 3 330 5 116 2 29 1 31 1 70 1 287 1 154 3 75 1 76 2 
40 1 162 2 124 1 163 4 168 1 82 1 45 1 92 8 229 1 306 1 181 1 312 1 190 2 57 1 61 4 199 1 63 1 27 1 330 2 116 1 29 1 31 1 154 1 
162 2 124 1 163 6 168 1 82 1 47 1 92 12 306 1 139 2 181 1 95 2 312 1 190 1 57 1 60 1 61 6 108 1 27 2 330 2 116 2 29 1 287 1 154 1 75 1 76 2 
40 1 162 8 124 1 163 10 168 1 82 4 45 1 47 1 229 1 92 18 306 1 139 2 181 4 95 1 312 1 190 3 57 4 60 2 61 8 108 1 63 1 199 1 24 1 27 3 330 5 116 2 29 1 31 1 70 2 287 1 154 4 75 1 76 2 
162 8 124 1 163 9 168 1 82 4 47 1 92 16 306 1 268 1 139 3 181 4 95 2 312 1 190 3 57 4 60 3 61 7 108 1 27 3 330 6 116 2 29 1 70 2 287 1 154 4 75 1 76 3 
40 1 163 3 190 3 61 4 60 3 199 2 63 3 330 6 27 1 116 1 31 3 92 7 229 1 
40 1 162 8 124 1 163 10 168 1 82 4 45 1 47 1 229 1 92 18 306 1 268 1 139 2 181 4 95 1 312 1 190 3 57 4 60 1 61 8 108 1 63 1 199 1 27 3 330 4 116 2 29 1 31 1 70 2 287 1 154 4 75 1 76 2 
132 1 123 1 88 1 293 1 79 1 320 1 278 1 
159 1 123 1 293 1 320 1 79 1 278 1 131 1 132 1 133 1 88 1 335 1 69 1 
160 1 55 1 256 1 42 1 166 1 298 1 170 1 51 1 138 1 309 1 157 1 
160 1 55 1 320 2 79 2 278 1 192 1 42 1 166 1 298 1 170 1 66 1 88 1 12 1 178 1 230 1 153 1 138 1 51 1 
160 3 79 2 42 1 166 2 298 1 44 1 170 1 134 1 88 2 12 1 230 2 178 2 51 1 54 1 55 1 99 1 320 2 278 1 192 1 66 1 208 1 153 1 251 1 
160 3 125 1 79 2 42 1 166 2 298 1 44 1 170 2 134 1 88 2 12 1 230 2 178 2 137 1 51 2 54 1 55 2 99 1 320 2 278 1 192 1 208 1 153 1 251 1 
224 1 160 1 55 1 263 1 286 1 170 1 51 1 251 1 
55 1 160 4 99 1 189 1 42 1 166 1 44 1 298 1 170 1 224 1 115 1 286 1 178 1 51 1 251 1 
55 1 42 1 43 1 298 1 170 1 51 1 
55 7 211 1 160 3 276 1 214 1 43 1 42 2 166 2 298 3 170 7 9 1 46 1 25 1 332 1 176 1 177 1 178 1 72 1 138 2 51 6 122 1 
40 1 160 1 213 1 295 1 162 4 163 3 79 2 42 1 166 1 298 1 167 2 170 1 82 2 45 1 261 2 88 1 227 1 12 1 15 1 176 1 92 6 229 1 178 1 230 1 307 1 51 1 181 2 55 1 320 2 190 2 278 2 192 1 57 2 237 1 146 1 61 3 63 1 199 1 62 1 27 1 330 2 66 1 116 1 245 1 31 1 153 1 154 2 
224 1 321 1 
55 2 211 1 160 2 43 1 42 1 166 1 298 2 170 2 200 1 115 1 176 1 178 1 51 2 
55 4 160 1 125 1 42 1 166 1 299 1 298 1 170 4 176 1 138 1 51 4 157 1 309 1 
55 2 160 1 78 1 188 1 319 1 42 1 166 1 298 2 170 2 46 1 177 1 178 1 51 2 251 1 
55 1 126 1 42 1 259 1 298 1 170 1 51 1 138 1 130 1 84 1 
160 1 55 2 42 1 204 1 176 1 166 1 298 1 72 1 170 2 51 2 122 1 
55 5 160 3 276 1 42 2 166 2 299 1 298 2 170 5 332 1 176 1 72 1 138 1 51 4 309 1 157 1 251 1 
55 5 160 3 276 1 42 2 166 2 299 1 298 2 170 5 303 1 176 1 72 1 138 1 51 4 309 1 157 1 251 1 
160 1 55 1 320 2 79 2 278 1 192 1 42 1 166 1 298 1 170 1 88 1 12 1 178 1 230 1 153 1 137 1 138 1 51 1 
55 1 211 1 160 1 42 1 166 1 298 2 170 1 9 1 46 1 177 1 178 1 51 1 251 1 
313 1 278 1 71 1 325 1 311 1 
313 2 321 1 278 1 5 1 325 2 326 1 224 2 203 1 134 1 71 1 17 1 208 1 94 1 311 2 54 1 37 1 
88 1 114 1 79 1 320 1 333 1 71 1 248 1 325 1 311 1 
203 1 71 1 94 1 
275 1 256 1 180 1 110 1 
275 1 147 1 246 1 20 1 180 1 220 1 110 1 
147 1 117 1 36 1 
275 1 236 1 3 1 20 1 220 3 110 1 64 1 282 2 147 3 246 1 266 1 180 1 
275 1 147 2 246 1 20 1 33 1 180 1 220 2 110 1 38 1 
147 1 89 1 126 1 236 1 246 1 6 1 20 1 180 1 220 1 130 1 337 1 
147 1 236 1 246 1 20 1 180 1 220 1 110 1 
275 1 147 1 236 1 246 1 20 1 220 1 110 2 
292 1 274 1 147 1 236 1 246 1 20 1 220 1 
275 1 147 3 305 1 236 1 246 1 6 1 194 1 20 1 58 1 180 2 220 3 110 1 38 2 
275 1 236 1 126 1 20 1 259 1 59 1 220 2 110 1 130 2 147 2 264 1 246 1 180 1 337 1 38 1 
275 1 236 1 20 2 6 1 58 1 220 4 110 1 113 1 147 4 246 2 33 1 180 2 38 2 
275 1 147 1 236 1 246 1 20 1 180 1 220 1 110 1 
275 2 20 1 6 1 58 1 220 4 110 2 64 1 23 1 282 1 147 4 246 1 266 1 180 3 38 2 
275 1 56 1 236 1 20 1 220 2 110 1 260 1 147 2 246 1 180 1 179 1 38 1 
275 1 236 1 20 1 220 3 110 1 64 2 282 2 147 3 304 1 246 1 266 1 180 1 
7 2 180 2 52 1 252 1 
147 1 236 1 16 1 246 1 20 1 220 1 
275 1 147 2 236 1 246 1 194 1 20 1 180 1 220 2 110 1 38 1 
19 1 
275 1 147 1 236 1 246 1 20 1 180 1 220 1 110 1 
282 1 275 1 147 3 236 1 246 1 194 1 20 1 180 1 220 3 110 1 38 1 
6 1 58 1 180 1 23 1 
180 1 110 1 

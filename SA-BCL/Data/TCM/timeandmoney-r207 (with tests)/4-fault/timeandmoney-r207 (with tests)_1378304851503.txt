#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 25 (148,165) 230 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 25 242 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 25 (148,165) 230 216 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 247 2 71 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 247 2 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (1,188) (15,268) (15,268) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (10,135,313) (77,181,190) (77,181,190) (77,181,190) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (10,135,313) (77,181,190) (77,181,190) (77,181,190) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (10,135,313) (77,181,190) (77,181,190) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (10,135,313) (77,181,190) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 25 242 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 25 (148,165) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 94 166 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 25 (148,165) (148,165) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (1,188) (1,188) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (10,135,313) (10,135,313) (10,135,313) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (10,135,313) (10,135,313) (10,135,313) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (10,135,313) (10,135,313) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 25 (148,165) 230 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 249 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 247 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 36 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 177 6 180 1 259 2 16 2 184 9 20 2 64 1 271 1 28 3 147 1 149 1 201 1 33 1 109 5 155 2 110 9 278 1 156 1 280 2 117 4 285 1 243 1 122 1 245 1 82 1 292 2 44 2 
218 1 177 6 180 1 259 2 16 2 184 9 20 2 64 1 271 1 28 3 147 1 149 1 201 1 33 1 109 5 155 2 110 9 278 1 156 1 280 2 117 4 285 1 243 1 122 1 245 1 82 1 292 2 44 2 
218 1 177 7 180 1 259 2 16 2 184 10 20 2 64 1 271 1 28 4 147 1 149 1 201 1 33 1 109 6 155 2 110 10 278 1 156 1 280 2 117 5 285 1 243 1 122 1 245 1 82 1 292 2 44 2 
218 1 177 4 180 1 259 2 16 2 184 7 20 2 64 1 271 1 28 2 147 1 149 1 33 1 109 4 155 2 110 7 278 1 156 1 280 2 117 3 285 1 243 1 122 1 245 1 82 1 292 2 44 1 
218 1 147 1 149 1 201 1 109 3 155 1 110 4 177 3 278 1 259 1 117 2 285 1 16 1 184 4 20 1 292 1 44 2 28 1 
218 1 147 1 4 1 33 1 109 1 155 1 110 2 156 1 280 1 259 1 285 1 16 1 184 2 17 1 263 1 292 1 
218 1 147 1 109 2 110 3 177 1 280 1 259 2 117 1 285 1 16 2 184 3 82 1 28 1 
218 1 177 7 259 2 16 2 184 9 20 1 271 1 28 3 147 1 149 1 201 1 109 5 155 1 110 9 278 1 280 1 117 4 285 1 321 1 290 1 245 1 82 1 292 1 44 2 
218 1 177 7 259 2 16 2 184 9 20 1 271 1 28 3 147 1 149 1 201 1 109 5 155 1 110 9 278 1 280 1 117 4 285 1 321 1 290 1 245 1 82 1 292 1 44 2 
61 1 282 1 209 2 
199 2 18 2 90 2 276 1 189 2 266 2 238 2 24 1 
199 1 49 1 90 1 238 1 113 1 116 1 261 1 18 1 163 1 189 1 325 1 266 1 24 1 132 1 
61 1 
116 2 233 1 61 1 163 2 111 1 113 1 318 1 194 1 
297 1 233 2 6 1 301 1 136 1 237 1 113 2 318 1 11 1 283 1 179 1 116 5 320 2 61 1 163 5 63 2 270 2 86 1 194 1 
61 1 36 1 318 1 
69 1 199 1 133 1 90 1 238 1 18 1 162 2 227 1 165 1 230 1 189 1 266 1 25 1 24 1 232 1 
199 1 261 1 49 1 18 1 90 1 189 1 266 1 238 1 24 1 132 1 
199 1 49 1 203 1 137 1 318 1 116 1 61 1 18 1 308 1 143 1 163 1 266 1 100 1 326 1 
199 1 90 1 49 1 203 1 137 1 238 1 318 1 116 2 61 1 18 1 308 1 163 2 189 1 266 1 100 1 
116 1 233 1 288 1 163 1 113 1 
116 2 233 1 61 1 163 2 240 1 113 1 318 1 194 1 
116 1 233 1 163 1 
199 2 90 1 202 1 276 2 222 1 238 1 18 2 189 1 266 2 
257 1 14 1 221 1 
69 1 242 1 162 1 25 1 
36 1 276 1 
69 1 199 1 18 1 89 1 162 1 228 1 189 1 266 1 238 1 25 1 
199 3 90 1 89 1 18 3 276 1 189 3 266 3 238 3 
199 1 261 1 49 1 18 1 189 1 266 1 238 1 
199 1 49 1 18 1 90 1 202 1 222 1 189 1 266 1 238 1 
69 1 199 3 49 1 89 1 90 2 203 1 202 1 137 1 38 1 238 3 116 1 18 3 308 1 162 1 228 1 163 1 165 1 230 1 189 3 100 1 266 3 25 1 24 1 216 1 
199 2 32 1 18 2 89 1 143 1 276 1 189 1 266 2 238 1 
30 1 199 3 90 1 49 1 89 2 202 1 203 1 137 1 38 1 238 3 116 1 61 1 18 3 308 1 228 1 163 1 189 3 100 1 266 3 
199 2 89 1 221 1 90 1 202 1 238 2 14 1 18 2 189 2 266 2 
69 1 162 1 25 1 
69 1 162 1 94 1 
170 1 221 2 174 1 8 1 56 1 257 2 14 2 59 1 307 1 145 1 144 4 231 1 314 1 193 1 198 1 236 1 316 1 73 1 205 1 158 2 289 1 127 1 85 2 45 2 
199 1 60 1 49 1 18 1 203 1 189 1 266 1 238 1 
199 5 32 1 89 2 90 1 5 1 202 1 51 1 276 1 238 4 18 5 228 1 143 1 189 4 266 5 
60 1 199 2 261 1 49 1 18 2 189 2 266 2 238 2 
286 1 153 1 154 1 
153 2 154 2 81 1 302 1 323 1 223 1 
153 1 154 1 
153 1 154 1 
323 1 223 1 
323 1 223 1 
323 1 223 1 
220 1 153 1 154 1 
220 1 153 1 154 1 
220 1 153 1 154 1 
153 1 154 1 101 1 
153 1 154 1 101 1 
153 1 154 1 101 1 
116 1 2 1 71 1 153 1 154 1 163 1 146 1 247 1 217 1 
2 1 153 1 154 1 146 1 247 1 217 1 
17 1 20 1 23 2 292 2 76 1 
20 1 155 1 292 1 
17 1 155 1 292 1 
17 1 20 2 23 1 292 3 269 1 76 1 
17 1 20 1 187 1 23 1 292 2 76 1 
170 1 298 2 297 1 301 3 61 2 142 1 63 1 145 1 270 1 314 1 193 1 194 1 233 1 34 2 274 1 275 1 74 1 282 1 209 3 113 4 318 1 157 1 116 5 78 1 320 1 80 1 42 1 163 5 123 2 324 1 86 2 294 1 
170 3 298 6 297 1 134 1 301 8 52 1 11 1 140 1 61 5 62 1 142 4 63 2 145 3 191 5 270 2 314 3 193 3 194 1 233 6 273 1 34 6 274 2 275 3 282 3 209 9 113 7 318 1 116 9 320 2 288 5 42 2 163 9 168 1 86 6 294 1 
170 1 298 2 301 3 11 1 61 3 142 1 63 1 145 1 270 1 193 1 314 1 34 2 274 1 275 1 74 1 282 2 113 2 209 4 318 1 116 3 78 1 320 1 42 1 163 3 123 1 86 2 
170 2 298 4 134 1 301 5 52 1 11 1 61 4 142 2 63 1 145 2 270 1 193 2 314 2 34 4 274 1 275 2 74 1 282 3 209 7 113 3 318 1 116 4 78 1 320 1 42 1 163 4 123 2 168 1 86 4 
41 1 250 1 
70 1 
250 1 36 1 311 1 
315 1 250 1 
315 1 250 3 91 1 311 2 84 1 241 1 
315 1 250 1 91 1 
250 1 235 1 
0 1 31 2 200 1 172 1 174 3 92 1 178 1 158 3 59 2 98 1 214 1 145 1 144 7 22 1 85 4 314 1 27 1 65 1 
0 1 87 1 3 3 170 3 172 1 174 10 92 1 56 1 12 1 57 1 182 1 59 5 98 2 144 31 145 4 22 2 231 1 102 1 27 2 193 3 314 4 65 5 68 1 31 3 200 2 236 1 275 3 158 15 284 1 289 1 214 1 291 4 45 2 85 16 
0 1 172 1 174 4 92 1 253 1 56 2 57 1 59 3 98 1 145 1 144 9 22 1 231 2 314 1 27 1 65 1 31 2 200 1 236 2 158 4 213 1 289 2 45 4 85 5 
0 1 31 2 200 1 172 1 174 3 92 1 158 3 59 2 98 1 214 1 145 1 144 7 22 1 85 4 314 1 27 1 65 1 
0 1 31 2 200 1 172 1 174 3 92 1 158 3 59 2 98 1 214 1 145 1 144 7 22 1 85 4 314 1 27 1 65 1 
295 1 69 1 47 2 110 1 280 2 55 1 15 1 259 1 16 1 184 1 162 1 188 1 248 2 268 1 169 2 
47 1 147 1 135 1 204 1 110 1 254 1 280 1 77 1 181 1 259 1 16 1 184 1 162 1 190 1 248 1 169 1 
47 1 147 1 135 1 204 1 110 1 96 1 280 1 77 1 181 1 259 1 16 1 184 1 162 1 190 1 248 1 169 1 
47 1 135 1 204 1 110 2 177 1 254 1 280 1 55 1 181 1 259 1 16 1 184 2 162 1 19 1 190 1 248 1 169 1 
47 1 184 1 135 1 162 1 19 1 110 1 177 1 190 1 254 1 280 1 248 1 169 1 
164 1 
176 2 93 2 260 1 18 1 266 1 100 1 270 1 26 2 272 1 194 3 199 1 107 1 35 2 203 1 277 4 279 1 282 2 209 2 211 2 116 5 120 2 42 1 128 1 215 1 296 1 297 1 49 1 301 2 50 2 137 1 141 1 61 2 308 1 143 1 229 1 63 1 69 2 233 6 151 1 234 1 318 1 319 1 320 1 162 2 163 5 86 2 326 1 
296 1 199 1 233 2 49 1 151 1 176 1 203 1 137 1 277 2 279 1 111 1 116 3 141 1 18 1 308 1 143 1 163 3 100 1 128 1 266 1 194 1 326 1 
296 1 199 1 233 1 49 1 151 1 203 1 137 1 277 3 279 1 111 1 318 1 211 1 116 3 141 1 61 1 18 1 308 1 143 1 163 3 100 1 128 1 266 1 194 1 326 1 
296 1 49 1 176 1 137 1 141 1 308 1 18 1 61 1 143 1 266 1 100 1 194 1 199 1 233 2 151 1 203 1 277 3 279 1 111 1 318 1 116 3 211 1 120 1 163 3 128 1 326 1 
296 1 90 1 49 2 176 1 137 1 97 1 261 1 141 1 61 1 18 2 308 1 143 1 189 1 266 2 100 1 24 1 194 1 199 2 233 2 151 1 203 1 277 2 238 1 279 1 111 1 318 1 116 3 120 1 163 3 325 1 128 1 132 1 326 1 
176 2 93 2 18 1 100 1 266 1 270 1 26 2 194 2 199 1 35 2 203 1 277 4 279 1 282 2 209 2 116 4 211 2 120 2 128 1 215 1 296 1 297 1 49 1 301 1 50 2 137 1 141 1 308 1 61 2 143 1 63 1 229 1 233 4 151 1 318 1 319 1 320 1 163 4 326 1 86 1 
296 1 297 1 49 1 176 2 50 2 301 1 137 1 93 2 138 1 141 1 61 1 308 1 18 1 143 1 63 1 266 1 100 1 26 2 270 1 194 2 199 1 233 4 151 1 35 2 203 1 277 4 279 1 282 2 239 1 318 1 319 1 211 2 116 4 320 1 120 2 163 4 128 1 215 1 130 1 86 1 326 1 
296 1 297 1 49 1 176 2 50 2 301 1 137 1 93 2 138 1 141 1 61 1 308 1 18 1 143 1 63 1 266 1 100 1 26 2 270 1 194 2 199 1 233 4 151 1 35 2 203 1 277 4 279 1 282 2 239 1 318 1 319 1 211 2 116 4 320 1 120 2 163 4 128 1 215 1 130 1 86 1 326 1 
46 1 296 1 297 1 49 1 176 2 50 2 301 1 137 1 251 2 93 2 303 2 13 1 141 1 61 1 308 1 18 1 143 1 63 1 266 1 100 1 270 1 194 2 199 1 233 4 151 1 203 1 277 4 279 1 209 2 318 1 211 2 116 4 320 1 120 2 124 1 163 4 128 1 215 1 130 1 86 1 326 1 
296 1 297 1 49 1 50 2 301 1 176 3 137 1 93 2 252 1 138 1 141 1 61 1 308 1 18 1 143 1 63 1 266 1 100 1 26 2 270 1 194 2 199 1 233 5 151 1 35 2 203 1 277 5 279 1 282 2 239 1 318 1 319 1 116 4 211 3 320 1 120 3 163 4 128 1 215 1 130 1 86 1 326 1 
296 1 297 1 49 1 50 2 301 1 176 3 137 1 93 2 252 1 138 1 141 1 61 1 308 1 18 1 143 1 63 1 266 1 100 1 26 2 270 1 194 2 199 1 233 5 151 1 35 2 203 1 277 5 279 1 282 2 239 1 318 1 319 1 116 4 211 3 320 1 120 3 163 4 128 1 215 1 130 1 86 1 326 1 
296 1 297 1 49 1 176 2 50 2 301 1 137 1 251 2 93 2 303 2 141 1 61 1 18 1 308 1 143 1 229 1 63 1 266 1 100 1 270 1 194 2 199 1 233 4 151 1 203 1 277 4 279 1 209 2 318 1 211 2 116 4 320 1 120 2 163 4 124 1 128 1 215 1 86 1 326 1 
89 1 96 1 56 2 183 1 18 1 262 1 21 1 144 2 189 1 266 1 231 2 232 1 69 2 198 2 199 1 106 1 236 2 316 2 205 1 238 1 158 1 162 4 289 2 246 1 45 4 85 1 
170 1 221 1 90 1 174 1 56 1 257 1 14 1 59 1 18 1 189 1 144 3 145 1 266 1 231 1 193 1 314 1 198 1 199 1 152 1 202 1 236 1 316 1 275 1 238 1 158 2 289 1 167 1 45 2 85 1 
0 1 221 1 172 1 174 2 92 1 56 1 257 1 14 1 59 2 144 6 145 1 22 1 231 1 314 1 198 1 31 1 200 1 36 1 236 1 316 1 205 1 276 2 158 3 289 1 45 2 85 3 
3 3 170 1 221 4 174 2 56 2 257 11 12 1 14 11 224 1 59 1 21 1 144 14 145 1 231 2 193 2 314 2 65 1 68 1 198 1 106 1 108 1 236 2 316 2 275 2 276 1 158 6 287 1 121 1 289 2 291 3 167 1 45 4 85 8 
171 1 221 1 89 1 54 1 56 1 18 1 228 1 21 1 189 1 144 2 266 1 231 1 267 1 25 1 69 1 198 1 199 1 106 1 236 1 316 1 238 1 158 1 242 1 162 1 289 1 167 1 45 2 85 1 
69 1 198 1 199 1 89 1 316 1 236 1 238 1 317 1 56 1 158 1 18 1 162 1 228 1 289 1 21 1 144 1 189 1 266 1 167 1 231 1 45 2 
198 1 221 1 174 1 316 1 236 1 73 1 205 1 56 1 257 1 14 1 289 1 144 2 231 1 45 2 85 2 193 1 314 1 65 1 
198 1 170 1 221 1 174 1 316 1 236 1 205 1 56 1 158 2 257 1 14 1 59 1 289 1 144 2 145 1 127 1 231 1 45 2 
170 1 221 2 174 2 56 1 257 2 14 2 59 1 144 4 145 1 231 1 314 1 193 1 65 1 198 1 236 1 316 1 275 1 205 1 158 2 289 1 85 2 45 2 
198 1 221 1 174 1 316 1 236 1 73 1 56 1 257 1 14 1 289 1 144 2 246 1 231 1 45 2 85 2 193 1 314 1 65 1 
198 1 170 1 221 1 174 1 316 1 236 1 56 1 158 2 257 1 14 1 59 1 289 1 144 2 145 1 127 1 246 1 231 1 45 2 
170 1 221 2 174 2 56 1 257 2 14 2 59 1 144 4 145 1 231 1 314 1 193 1 65 1 198 1 236 1 316 1 275 1 158 2 289 1 246 1 85 2 45 2 
170 1 221 2 174 2 56 1 257 2 14 2 59 1 144 4 145 1 231 1 314 1 193 1 65 1 198 1 236 1 316 1 275 1 158 2 289 1 85 2 45 2 
69 1 162 1 165 1 25 1 
69 1 162 1 94 1 166 1 
170 1 221 2 174 2 56 1 257 2 14 2 59 1 144 4 145 1 231 1 314 1 193 1 65 1 198 1 236 1 316 1 275 1 158 2 289 1 167 1 85 2 45 2 
148 1 162 1 165 1 96 1 25 1 
170 1 90 1 221 1 174 1 56 1 257 1 14 1 18 1 145 1 189 1 144 3 266 1 231 1 193 1 314 1 65 1 67 1 198 1 199 1 202 1 236 1 316 1 275 1 238 1 158 1 289 1 167 1 45 2 85 2 
0 1 170 4 3 3 172 1 174 8 173 2 92 1 253 1 12 1 185 1 264 1 22 1 193 4 31 1 200 1 275 4 207 1 208 1 39 1 210 1 289 3 291 4 45 6 299 1 56 3 57 1 305 1 306 1 59 4 145 5 144 41 231 3 314 5 65 4 66 1 68 3 236 3 158 21 159 1 79 1 244 4 322 1 85 20 
0 1 3 3 170 3 172 1 299 1 173 2 174 7 92 1 253 1 56 4 57 2 12 1 305 1 59 4 306 1 185 1 144 38 145 4 22 1 264 1 231 4 193 4 314 5 66 1 65 3 68 3 31 1 200 1 236 4 275 4 208 1 207 1 39 1 158 18 210 1 159 1 79 1 322 1 244 4 289 4 291 4 45 8 85 20 
0 1 3 4 170 7 172 1 299 1 173 1 174 14 92 1 253 1 56 2 57 1 12 2 305 1 59 7 306 1 185 1 144 52 145 8 22 1 264 1 231 2 193 7 314 8 65 7 68 2 31 1 200 1 108 2 236 2 275 7 208 1 207 1 39 1 158 25 159 1 79 1 322 1 244 4 289 2 291 4 45 4 85 27 
3 1 170 3 299 1 173 1 174 6 253 1 255 1 56 2 12 1 59 3 306 1 144 19 145 3 231 2 193 3 314 3 66 1 65 3 68 1 236 2 275 3 208 1 207 1 158 10 159 2 244 2 289 2 291 2 45 4 85 9 
3 2 170 2 299 2 174 4 173 2 253 1 56 3 57 2 305 1 59 2 306 1 185 1 145 2 144 26 264 1 231 3 193 3 314 3 65 2 68 2 236 3 275 3 208 1 207 1 39 1 158 12 159 1 79 1 244 4 322 1 289 3 291 2 45 6 85 14 
198 1 199 2 106 1 316 1 236 1 112 1 56 1 158 1 119 1 18 2 162 2 262 1 289 1 21 1 144 2 99 1 266 2 167 1 231 1 85 1 45 2 293 1 232 2 
1 1 69 1 162 1 37 1 188 1 169 1 
135 1 162 1 204 1 37 1 254 1 10 1 313 1 169 1 
135 1 162 2 204 1 37 1 254 1 10 1 96 1 313 1 169 1 
135 1 162 1 204 1 254 1 83 1 313 1 169 1 
212 1 
297 1 136 1 301 1 237 1 318 1 320 1 61 1 63 1 270 1 86 1 
196 1 170 2 298 5 34 5 301 5 275 2 206 1 209 10 282 5 61 5 145 2 129 2 193 2 314 2 86 5 
116 1 233 1 61 1 163 1 318 1 194 1 
69 2 233 4 297 1 234 2 301 2 281 1 11 1 116 3 118 1 260 1 320 2 162 4 42 2 163 3 63 2 125 1 270 2 272 1 131 2 194 2 86 2 
69 1 199 1 18 1 90 1 162 1 165 1 189 1 230 1 266 1 238 1 25 1 24 1 
31 1 298 2 297 1 234 1 34 2 301 1 282 2 209 4 318 2 320 1 61 4 42 1 63 1 270 1 86 2 
61 1 36 1 301 1 136 1 237 1 318 1 86 1 
297 1 301 1 61 2 63 1 270 1 26 1 194 1 233 1 35 1 282 1 209 1 318 1 319 1 116 1 320 1 163 1 86 1 
249 1 69 1 320 1 297 1 162 1 63 1 270 1 
3 1 170 2 298 5 297 2 301 8 305 1 61 5 226 1 185 1 63 2 145 2 270 2 193 2 314 2 194 1 68 1 233 1 234 1 34 5 275 2 206 1 39 1 209 6 282 3 318 2 114 1 116 1 79 1 320 2 322 1 42 1 163 1 291 1 129 2 86 5 
0 1 297 1 49 1 90 1 301 2 138 1 261 1 18 1 63 1 145 1 189 1 266 1 22 1 192 1 270 1 24 1 314 2 199 1 200 1 206 1 238 1 116 1 320 1 163 1 325 1 129 2 86 2 132 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
247 1 217 1 
153 1 154 1 
0 1 3 1 172 1 174 2 92 1 253 1 56 1 59 2 185 1 145 1 144 8 22 1 231 1 314 1 68 1 31 1 200 1 236 1 158 4 289 1 291 1 45 2 85 4 
0 1 3 1 172 1 174 3 92 1 253 1 56 2 12 1 59 2 185 1 145 1 144 11 22 1 231 2 193 1 314 2 65 1 68 1 31 1 200 1 236 2 275 1 158 5 289 2 291 2 126 1 45 4 85 6 
0 1 3 1 170 2 172 1 174 4 92 1 253 1 56 3 57 1 305 1 59 3 185 1 144 19 145 3 22 1 231 3 193 2 314 3 65 1 68 1 31 1 200 1 236 3 275 2 39 1 158 10 79 1 322 1 289 3 291 1 126 1 45 6 85 9 
0 1 3 1 170 1 172 1 174 5 92 1 253 1 56 3 57 1 305 1 59 3 185 1 144 17 145 2 22 1 231 3 193 2 314 3 65 2 68 1 31 1 200 1 236 3 275 2 39 1 158 7 79 1 322 1 289 3 291 1 126 1 45 6 85 10 
0 1 3 1 172 1 174 2 92 1 253 1 56 1 59 2 185 1 145 1 144 8 22 1 231 1 314 1 68 1 31 1 200 1 236 1 158 4 289 1 291 1 45 2 85 4 
68 1 170 2 3 1 174 2 236 1 275 2 253 1 39 1 56 1 158 6 305 1 59 1 79 1 322 1 289 1 185 1 291 1 145 2 144 12 231 1 85 6 45 2 314 2 193 2 65 1 
0 1 3 1 170 1 172 1 174 5 92 1 253 1 56 4 57 2 305 1 59 3 185 1 144 18 145 2 22 1 231 4 193 2 314 3 65 2 68 1 31 1 200 1 236 4 275 2 39 1 158 8 79 1 322 1 289 4 291 1 126 1 45 8 85 10 
3 1 170 2 174 6 253 1 56 4 57 2 305 1 59 3 185 1 144 16 145 2 231 4 193 3 314 3 65 3 66 1 68 1 236 4 275 3 39 1 158 7 79 1 322 1 289 4 291 1 45 8 85 9 
0 1 172 2 200 3 174 6 92 1 158 4 59 3 145 1 144 7 22 3 85 3 314 1 65 3 
0 1 3 1 170 1 172 1 174 4 92 1 253 1 56 4 57 2 305 1 59 3 185 1 144 18 145 2 22 1 231 4 193 2 314 3 65 1 66 1 68 1 31 1 200 1 236 4 275 2 39 1 158 8 79 1 322 1 289 4 291 1 45 8 85 10 
0 1 200 2 174 5 236 1 253 1 56 1 158 5 59 3 289 1 144 10 145 2 22 2 231 1 45 2 192 1 85 5 314 2 65 2 
174 1 236 1 253 1 56 1 289 1 144 2 231 1 45 2 85 2 193 1 314 1 65 1 
170 1 174 2 236 1 275 1 253 1 56 1 158 2 59 1 289 1 145 1 144 4 231 1 45 2 85 2 193 1 314 1 65 1 
200 1 174 2 236 3 253 1 56 3 158 2 57 1 59 1 160 1 289 3 144 3 22 1 231 3 45 6 85 1 66 1 65 1 
0 2 87 1 3 3 170 3 172 1 174 12 92 1 253 1 56 5 57 2 12 1 59 7 144 34 145 5 22 3 231 5 102 1 193 3 314 5 66 1 65 5 68 1 31 1 200 3 236 5 275 3 158 18 284 1 160 1 289 5 291 4 126 1 45 10 85 16 
0 1 31 1 172 1 200 1 174 3 236 2 92 1 56 2 158 4 57 1 59 2 289 2 145 1 144 8 22 1 231 2 85 4 45 4 314 1 65 1 
0 1 31 1 59 2 200 1 172 1 174 2 36 1 92 1 145 1 144 6 22 1 85 3 314 1 158 3 
170 1 174 2 236 1 275 1 56 1 158 2 59 1 289 1 145 1 126 1 144 4 231 1 45 2 85 2 193 1 314 1 65 1 
68 1 170 1 3 1 174 2 275 1 158 4 12 1 59 1 291 2 145 1 144 7 85 3 193 1 314 1 65 1 
0 1 3 2 170 2 172 1 174 9 92 1 56 2 12 1 57 2 59 5 144 23 145 3 22 2 231 2 314 3 193 2 65 4 31 1 200 2 108 1 236 2 275 2 158 12 160 1 121 1 289 2 291 2 85 11 45 4 
291 1 144 1 158 1 
3 1 144 1 85 1 
196 1 170 1 174 3 236 1 275 1 56 1 158 3 59 2 289 1 126 1 144 6 145 1 231 1 45 2 85 3 193 1 314 1 65 1 
68 1 170 2 3 1 174 2 236 1 275 2 253 1 39 1 56 1 158 6 305 1 59 1 79 1 322 1 289 1 185 1 291 1 145 2 144 12 231 1 85 6 45 2 314 2 193 2 65 1 
0 1 200 1 174 2 158 3 59 1 144 6 145 1 22 1 85 3 314 1 65 1 
200 1 172 1 174 2 236 1 92 1 56 1 158 2 57 1 59 1 160 1 289 1 144 3 22 1 231 1 85 1 45 2 65 1 
195 1 199 1 32 1 276 1 95 1 304 1 18 1 143 1 186 1 312 1 310 1 266 1 
199 1 32 1 18 1 143 1 276 1 310 1 266 1 
103 1 69 1 162 4 96 1 40 1 
29 1 162 1 
69 1 162 1 
162 2 254 1 96 1 
69 1 162 2 96 1 
69 1 162 2 96 1 
69 1 162 1 36 1 
69 1 199 1 18 1 89 1 162 1 189 1 266 1 238 1 
162 1 131 1 
69 1 199 1 18 1 89 1 162 1 189 1 266 1 238 1 
199 1 18 1 89 1 162 1 189 1 266 1 238 1 131 1 
199 1 18 1 89 1 162 1 189 1 266 1 238 1 131 1 
116 1 162 1 163 1 131 1 
116 1 162 1 163 1 131 1 
300 1 162 1 
69 1 162 1 
198 1 199 1 89 1 316 1 236 1 96 1 238 1 112 1 56 1 18 1 162 1 289 1 189 1 266 1 167 1 231 1 45 2 
116 1 69 1 320 1 297 1 162 1 63 1 163 1 125 1 270 1 113 1 
300 1 162 1 
197 1 48 1 150 1 276 1 265 1 
197 2 48 2 49 1 150 2 72 1 203 1 137 1 276 1 38 1 113 1 139 1 318 1 256 1 116 2 61 1 308 1 163 2 100 1 265 1 
197 1 199 1 119 1 48 1 18 1 99 1 266 1 265 1 293 1 
265 1 139 1 256 1 
218 1 259 1 285 1 16 1 147 1 184 1 109 1 110 1 
218 2 88 1 33 1 109 3 110 4 177 2 258 1 259 1 117 1 285 2 16 1 184 4 309 1 28 1 
218 1 147 1 109 1 110 2 177 1 9 1 259 1 285 1 16 1 184 2 161 1 290 1 
218 1 88 1 147 1 33 2 109 1 7 1 110 3 259 1 16 1 285 1 184 3 309 2 
225 2 219 1 175 1 109 2 
259 1 16 1 147 1 184 1 110 1 75 1 
218 1 259 1 285 1 16 1 147 1 184 2 109 1 110 2 177 1 271 1 
115 1 
218 1 259 1 285 1 16 1 147 1 184 1 109 1 110 1 
218 1 259 1 285 1 16 1 147 1 184 3 33 1 109 1 110 3 177 1 271 1 
258 1 117 1 109 1 28 1 
285 1 109 1 
218 1 285 1 109 1 36 1 
218 1 259 1 285 1 16 1 184 1 109 1 110 1 
47 1 110 1 280 1 
218 1 147 1 88 1 105 1 33 2 109 1 110 3 259 1 16 1 285 1 184 3 309 1 
218 1 259 1 285 1 16 1 184 2 109 1 110 2 177 1 44 1 
147 1 109 1 155 1 110 1 278 1 259 1 117 1 16 1 184 1 20 1 292 1 
259 1 285 1 16 1 147 1 184 1 109 1 110 1 
218 1 259 1 285 2 16 1 147 1 184 1 110 1 
147 1 109 1 110 2 53 1 58 1 259 2 285 1 16 2 184 2 43 1 
218 1 147 1 109 2 110 3 177 2 259 1 117 1 285 1 16 1 184 3 245 1 271 1 28 1 
218 1 104 1 147 1 109 1 155 1 110 2 177 1 259 1 285 1 16 1 184 2 17 1 20 1 292 2 269 1 
218 1 147 1 201 1 109 2 110 4 177 2 259 2 117 1 285 1 16 2 184 4 44 1 28 1 

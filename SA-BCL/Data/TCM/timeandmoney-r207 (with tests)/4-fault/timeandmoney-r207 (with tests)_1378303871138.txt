#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 67 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 268 59 331 106 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 268 59 331 106 98 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 268 59 331 106 98 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 268 59 331 106 98 143 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 308 331 106 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 67 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 268 59 331 106 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
314 2 134 1 47 2 291 1 212 6 10 2 336 1 264 1 337 1 367 3 320 4 94 1 267 5 141 1 341 2 343 1 322 1 300 2 123 1 270 1 97 9 274 1 372 2 227 9 306 1 229 1 185 1 45 2 
314 2 134 1 47 2 291 1 212 6 10 2 336 1 264 1 337 1 367 3 320 4 94 1 267 5 141 1 341 2 343 1 322 1 300 2 123 1 270 1 97 9 274 1 372 2 227 9 306 1 229 1 185 1 45 2 
314 2 134 1 47 2 291 1 212 7 10 2 336 1 264 1 337 1 367 4 320 5 94 1 267 6 141 1 341 2 343 1 322 1 300 2 123 1 270 1 97 10 274 1 372 2 227 10 306 1 229 1 185 1 45 2 
314 2 134 1 47 2 291 1 212 4 10 2 336 1 264 1 337 1 367 2 320 3 94 1 267 4 141 1 341 2 343 1 300 2 123 1 270 1 97 7 274 1 372 1 227 7 306 1 229 1 185 1 45 2 
341 1 314 1 322 1 300 1 47 1 291 1 97 4 212 3 372 2 227 4 10 1 336 1 229 1 185 1 367 1 320 2 94 1 267 3 
231 1 314 1 341 1 300 1 47 1 291 1 270 1 97 2 236 1 39 1 227 2 229 1 185 1 337 1 45 1 267 1 
300 2 47 2 291 1 97 3 212 1 227 3 306 1 229 1 185 1 45 1 367 1 320 1 267 2 
314 1 134 1 47 2 291 1 212 7 10 1 336 1 264 1 320 4 367 3 94 1 267 5 341 1 300 2 322 1 97 9 206 1 372 2 227 9 306 1 229 1 185 1 45 1 311 1 
314 1 134 1 47 2 291 1 212 7 10 1 336 1 264 1 320 4 367 3 94 1 267 5 341 1 300 2 322 1 97 9 206 1 372 2 227 9 306 1 229 1 185 1 45 1 311 1 
84 1 80 1 67 1 
80 1 22 1 118 2 
349 2 342 2 295 2 319 1 121 2 258 2 184 2 294 1 
258 2 1 1 85 1 49 2 87 1 52 1 213 1 172 1 195 1 294 1 56 1 295 2 319 1 318 1 216 1 175 1 338 2 245 1 342 3 13 1 121 3 369 2 35 2 370 1 303 2 37 1 126 1 71 1 349 2 327 1 129 1 41 1 184 2 281 1 153 1 328 1 21 1 
349 1 342 1 295 1 121 1 258 1 224 1 184 1 379 1 50 1 294 1 
84 1 286 1 342 1 121 1 224 1 207 1 28 1 335 1 197 1 184 1 80 1 93 1 104 1 43 1 
84 1 286 2 342 1 258 1 121 1 224 1 28 1 349 1 335 1 197 2 295 1 184 1 80 1 104 1 43 1 
286 1 197 1 20 1 181 1 361 1 
84 1 286 2 197 2 20 1 80 1 265 1 181 1 324 1 
286 1 197 1 181 1 
286 1 192 1 342 1 258 1 121 1 224 1 50 1 294 1 349 1 197 1 295 1 184 1 20 1 379 1 
80 1 
84 1 89 1 286 2 197 2 20 1 80 1 265 1 181 1 
84 1 286 5 95 1 4 1 124 1 181 2 127 1 197 5 307 1 198 1 20 2 209 2 80 1 296 2 265 1 282 1 139 1 210 2 255 1 
319 1 67 1 
342 2 121 2 258 1 347 1 349 1 295 1 319 2 184 2 82 1 
0 1 101 1 226 1 
342 1 121 1 154 1 369 1 370 1 303 1 52 1 213 1 172 1 195 1 126 1 319 1 327 1 216 1 153 1 338 1 
342 2 258 1 121 2 369 1 370 1 303 1 52 1 213 1 172 1 195 1 126 1 349 1 327 1 101 1 216 1 184 1 153 1 152 1 338 1 23 1 
342 5 289 1 258 4 121 5 357 1 323 1 207 1 349 4 295 1 319 1 184 5 152 2 82 1 23 1 
349 2 342 2 121 2 258 2 224 1 184 2 379 1 358 1 
349 3 342 3 295 1 319 1 121 3 258 3 184 3 152 1 
349 1 342 1 121 1 258 1 224 1 184 1 379 1 
349 1 342 1 295 1 121 1 258 1 224 1 347 1 184 1 82 1 
286 1 258 3 1 1 85 1 49 1 213 1 52 1 172 1 195 1 28 1 294 1 335 1 56 1 295 2 197 1 319 1 318 1 216 1 158 1 338 1 245 1 342 4 13 1 121 4 224 1 369 1 247 1 35 2 370 1 303 1 37 1 126 1 71 1 349 3 327 1 129 1 41 1 184 3 153 1 152 1 104 1 43 1 82 1 23 1 
349 1 342 2 319 1 289 1 121 2 258 1 184 2 152 1 207 1 
286 1 342 3 258 3 121 3 224 1 164 1 28 1 349 3 335 1 295 1 197 1 184 3 152 2 158 1 80 1 104 1 43 1 82 1 23 1 
349 2 342 2 295 1 121 2 258 2 101 1 184 2 152 1 226 1 82 1 
342 1 121 1 369 1 370 1 303 1 52 1 213 1 195 1 172 1 126 1 319 1 327 1 216 1 153 1 338 1 
342 1 121 1 369 1 303 1 52 1 125 1 195 1 172 1 126 1 319 1 327 1 216 1 153 1 338 1 244 1 
353 1 0 2 315 1 85 1 24 1 49 4 155 1 56 1 318 1 57 1 240 1 268 1 245 1 223 1 35 2 304 1 226 2 71 1 74 1 129 2 41 1 101 2 281 2 44 1 
349 1 342 1 121 1 258 1 224 1 184 1 358 1 28 1 
112 1 63 1 
112 1 63 1 
364 1 275 1 
364 1 275 1 
364 1 275 1 
112 1 63 1 297 1 
112 1 63 1 297 1 
112 1 278 1 63 1 
112 2 205 1 238 1 63 2 364 1 275 1 
112 1 63 1 297 1 
112 1 63 1 42 1 
112 1 63 1 42 1 
112 1 63 1 42 1 
349 1 342 1 121 1 258 1 269 1 184 1 
286 1 192 1 258 1 260 1 50 1 7 1 8 1 294 1 112 1 197 1 295 1 200 1 162 1 342 1 120 1 121 1 63 1 224 1 269 1 249 1 349 1 184 1 78 1 79 1 379 1 230 1 312 1 
341 1 314 1 10 1 
341 1 314 1 236 1 
352 1 314 3 10 2 317 1 236 1 165 1 
314 2 10 1 317 1 272 1 236 1 165 1 
314 2 10 1 317 2 236 1 165 1 
286 5 84 1 354 1 197 5 91 1 57 1 115 1 59 1 296 1 239 2 265 1 219 1 139 3 240 1 118 3 177 2 268 1 204 2 344 1 124 2 304 1 181 1 16 1 149 1 127 1 277 1 209 1 20 4 80 2 210 1 22 1 313 1 
286 9 84 1 290 1 361 5 197 9 215 5 57 3 59 3 296 2 239 6 265 1 139 8 240 3 321 1 118 9 177 6 268 3 344 2 124 6 15 1 304 3 181 6 16 2 277 4 127 1 40 1 151 1 20 7 209 2 80 5 282 1 210 2 22 3 313 1 380 1 
84 1 286 3 354 1 197 3 115 1 57 1 296 1 59 1 239 2 139 3 240 1 177 2 118 4 268 1 204 1 344 1 124 2 304 1 16 1 277 1 20 2 209 1 80 3 282 1 210 1 22 2 
84 1 286 4 354 1 197 4 115 1 57 2 296 1 59 2 239 4 139 5 240 2 118 7 177 4 268 2 204 2 344 1 124 4 15 1 304 2 16 1 277 2 40 1 209 1 20 3 80 4 282 1 210 1 22 3 380 1 
67 1 172 1 32 1 
250 1 172 1 
159 1 
153 1 172 1 195 1 
19 1 172 1 
172 1 195 1 
376 1 153 1 254 1 172 3 195 1 32 2 
257 1 49 9 25 1 114 1 57 2 138 1 298 1 299 2 223 4 65 1 304 2 325 1 375 1 129 4 279 1 77 2 281 5 44 3 
257 1 49 9 25 1 114 1 57 2 138 1 298 1 299 2 223 6 65 1 304 2 325 3 375 1 129 4 279 1 77 2 281 5 44 3 
257 1 49 9 25 1 114 1 57 2 138 1 92 1 298 1 299 2 223 4 65 1 304 2 325 1 375 1 129 4 279 1 77 2 281 5 44 3 
257 1 193 1 85 1 49 35 292 1 88 1 136 1 25 2 54 1 56 1 137 1 114 2 57 5 138 2 59 3 160 4 298 1 240 3 268 3 245 1 299 3 223 13 65 1 35 2 68 3 304 5 325 7 375 1 129 17 279 1 77 3 41 1 281 18 44 6 330 1 
257 1 194 1 85 2 49 11 25 1 54 1 56 2 114 1 57 2 138 1 298 1 245 2 299 2 223 6 35 4 144 1 65 1 304 2 325 2 375 1 129 5 77 2 41 2 281 6 44 4 
314 2 352 1 133 1 47 1 291 1 212 1 236 1 173 1 10 1 30 1 216 1 338 1 267 1 341 1 300 1 369 1 301 1 36 1 97 2 303 1 251 1 17 1 252 1 227 2 327 1 229 1 185 1 45 1 284 1 83 1 
352 1 314 2 133 1 47 1 212 2 236 1 173 1 237 1 10 1 30 1 216 1 338 1 267 1 341 1 300 1 369 1 346 1 301 1 36 1 97 3 303 1 251 1 252 1 227 3 327 1 229 1 185 1 45 1 83 1 190 1 
314 2 352 1 133 1 212 2 236 1 237 1 10 1 216 1 338 1 267 1 341 1 369 1 346 1 301 1 36 1 97 2 303 1 251 1 252 1 227 2 327 1 229 1 185 1 45 1 83 1 
133 2 300 1 369 1 47 1 36 2 145 1 97 1 6 1 303 1 52 1 70 1 172 1 195 1 251 2 227 1 363 1 327 1 216 1 102 1 45 2 60 1 338 1 190 1 
314 2 352 1 133 1 47 1 291 1 236 1 173 1 10 1 30 1 216 1 338 1 341 1 300 1 369 1 346 1 301 1 36 1 97 1 303 1 251 1 17 1 252 1 227 1 327 1 45 1 83 1 
176 1 
286 5 235 1 110 1 48 1 52 2 195 1 335 1 197 5 296 1 338 2 203 1 118 2 342 1 121 1 344 1 14 2 124 2 302 1 303 2 207 1 127 1 128 2 166 2 209 1 80 2 210 1 81 2 22 2 84 1 169 1 172 1 27 1 28 1 261 2 216 1 93 1 265 3 31 1 139 2 140 1 142 2 369 2 224 1 145 1 181 6 182 1 373 4 327 1 100 2 184 1 102 1 104 1 188 1 43 1 107 1 
286 3 169 1 27 1 28 1 89 1 335 1 197 3 93 1 265 1 203 1 342 1 121 1 224 1 181 2 207 1 373 2 184 1 166 1 104 1 188 1 43 1 107 1 
286 3 84 1 169 1 27 1 28 1 89 1 335 1 197 3 93 1 265 1 203 1 342 1 121 1 224 1 181 1 207 1 373 3 100 1 184 1 104 1 188 1 80 1 43 1 107 1 
286 3 84 1 169 1 27 1 28 1 89 1 335 1 197 3 93 1 265 1 203 1 342 1 121 1 224 1 181 2 207 1 373 3 100 1 184 1 166 1 104 1 188 1 80 1 43 1 107 1 81 1 
84 5 286 5 169 1 332 1 235 1 27 1 28 1 261 2 89 1 335 1 197 5 174 1 116 1 296 1 93 1 265 3 31 1 139 1 203 1 342 1 142 2 121 1 14 2 224 1 124 1 181 7 207 1 148 1 373 6 127 1 326 1 128 2 100 4 184 1 209 1 166 4 80 5 104 1 188 1 43 1 210 1 107 1 22 2 81 4 
286 4 235 1 335 1 197 4 296 1 203 1 118 2 342 1 121 1 14 2 124 1 207 1 127 1 128 2 209 1 166 2 80 2 210 1 22 2 81 2 84 1 169 1 27 1 28 1 261 2 93 1 265 2 139 1 31 1 140 1 142 2 224 1 181 4 373 4 100 2 184 1 188 1 104 1 43 1 107 1 
84 1 286 4 169 1 332 1 235 1 27 1 28 1 261 2 335 1 197 4 174 1 93 1 296 1 265 2 31 1 139 1 203 1 342 1 142 2 121 1 14 2 224 1 124 1 181 4 207 1 148 1 373 4 127 1 128 2 100 2 184 1 166 2 209 1 80 1 104 1 188 1 43 1 107 1 210 1 81 2 22 2 
84 1 286 4 169 1 332 1 235 1 27 1 28 1 261 2 335 1 197 4 174 1 93 1 296 1 265 2 31 1 139 1 203 1 342 1 142 2 121 1 14 2 224 1 124 1 181 4 207 1 148 1 373 4 127 1 128 2 100 2 184 1 166 2 209 1 80 1 104 1 188 1 43 1 107 1 210 1 81 2 22 2 
84 1 286 4 169 1 356 2 27 1 28 1 261 2 335 1 197 4 93 1 217 1 296 1 265 2 31 1 139 1 203 1 118 2 342 1 142 2 121 1 224 1 34 1 124 1 181 4 38 2 207 1 148 1 373 4 127 1 100 2 184 1 166 2 209 1 80 1 104 1 188 1 43 1 310 1 107 1 210 1 81 2 
84 1 286 4 169 1 332 1 235 1 27 1 28 1 261 2 335 1 197 4 174 1 296 1 93 1 265 2 31 1 139 1 203 1 342 1 142 2 121 1 14 2 224 1 124 1 181 5 207 1 148 1 373 5 127 1 326 1 128 2 100 3 184 1 209 1 166 3 80 1 104 1 188 1 43 1 210 1 107 1 22 2 81 3 
84 1 286 4 169 1 332 1 235 1 27 1 28 1 261 2 335 1 197 4 174 1 296 1 93 1 265 2 31 1 139 1 203 1 342 1 142 2 121 1 14 2 224 1 124 1 181 5 207 1 148 1 373 5 127 1 326 1 128 2 100 3 184 1 209 1 166 3 80 1 104 1 188 1 43 1 210 1 107 1 22 2 81 3 
286 4 335 1 197 4 296 1 203 1 118 2 342 1 121 1 124 1 207 1 127 1 209 1 166 2 80 1 310 1 210 1 81 2 84 1 169 1 356 2 27 1 28 1 261 2 93 1 265 2 139 1 31 1 140 1 142 2 224 1 181 4 38 2 373 4 100 2 184 1 188 1 104 1 43 1 107 1 
245 1 299 1 223 1 315 1 85 1 35 2 65 1 67 1 71 1 56 1 318 1 77 1 41 1 44 1 298 1 
0 11 85 2 49 14 292 1 88 1 214 1 56 2 319 1 318 1 57 2 59 2 218 1 160 3 240 1 268 2 245 2 13 1 223 2 225 1 35 4 68 3 304 1 226 4 325 1 71 2 129 6 41 2 101 11 281 8 189 1 44 1 21 1 105 1 
288 1 258 1 154 1 85 1 49 2 213 1 52 1 172 1 195 1 56 1 319 1 318 1 216 1 338 1 245 1 342 2 121 2 13 1 369 1 225 1 35 2 370 1 303 1 226 1 126 1 71 1 349 1 327 1 129 1 280 1 184 1 41 1 153 1 152 1 281 1 21 1 167 1 23 1 
0 6 49 22 52 1 195 2 56 3 57 4 11 1 59 2 338 1 298 1 240 2 245 3 342 3 299 2 13 1 121 3 65 1 303 1 304 4 126 2 71 3 349 1 253 2 130 1 129 11 77 2 309 1 21 1 23 1 257 1 258 1 259 2 85 3 213 2 172 2 319 1 318 3 216 2 268 2 223 6 224 1 369 1 225 1 35 6 370 2 37 2 276 2 226 6 325 1 375 1 327 2 41 3 184 1 101 6 152 1 153 2 103 2 281 11 44 5 
108 1 258 1 315 1 234 1 85 2 49 2 52 2 172 3 195 2 360 1 56 2 318 2 216 2 175 2 338 8 62 1 245 2 342 1 121 1 13 1 346 1 345 1 369 8 35 4 145 1 303 7 71 2 349 1 327 2 129 1 184 1 41 2 152 1 281 1 102 1 21 1 284 1 211 1 132 1 
0 1 258 1 85 1 49 3 295 1 56 1 318 1 57 1 59 1 240 1 268 1 245 1 342 1 121 1 223 1 225 1 96 1 35 2 304 1 226 1 71 1 349 1 129 2 101 1 41 1 184 1 281 1 44 1 82 1 
0 1 245 1 223 1 315 1 85 1 35 2 49 2 155 1 226 1 325 1 71 1 56 1 318 1 57 1 101 1 41 1 281 2 268 1 
0 1 245 1 353 1 223 1 315 1 85 1 35 2 49 2 304 1 226 1 71 1 56 1 318 1 129 2 101 1 41 1 44 1 240 1 
0 2 315 1 85 1 49 4 56 1 318 1 57 1 59 1 240 1 268 1 245 1 223 2 35 2 304 1 226 2 71 1 325 1 129 2 41 1 101 2 281 2 44 1 
0 1 245 1 223 1 85 1 35 2 49 2 155 1 226 1 325 1 360 1 71 1 56 1 318 1 57 1 101 1 41 1 281 2 268 1 
0 1 245 1 353 1 223 1 85 1 35 2 49 2 304 1 226 1 360 1 71 1 56 1 318 1 129 2 101 1 41 1 44 1 240 1 
0 2 85 1 49 4 360 1 56 1 318 1 57 1 59 1 240 1 268 1 245 1 223 2 35 2 304 1 226 2 71 1 325 1 129 2 41 1 101 2 281 2 44 1 
0 2 245 1 223 2 85 1 35 2 49 4 304 1 226 2 325 1 71 1 56 1 318 1 129 2 57 1 101 2 41 1 281 2 59 1 44 1 240 1 268 1 
85 1 49 2 213 1 52 1 195 1 172 1 56 1 319 1 318 1 216 1 338 1 245 1 342 1 121 1 13 1 369 1 35 2 370 1 303 1 37 1 126 1 71 1 327 1 129 1 41 1 281 1 153 1 21 1 
85 1 49 2 52 1 195 1 172 1 56 1 319 1 318 1 216 1 338 1 244 1 245 1 342 1 121 1 13 1 369 1 35 2 303 1 125 1 126 1 71 1 327 1 129 1 41 1 281 1 153 1 21 1 285 1 
0 2 85 1 49 4 56 1 318 1 57 1 59 1 240 1 268 1 245 1 223 2 225 1 35 2 304 1 226 2 71 1 325 1 129 2 41 1 101 2 281 2 44 1 
0 2 85 1 49 4 213 1 195 1 172 1 56 1 318 1 57 1 216 1 59 1 338 1 240 1 268 1 245 1 342 1 121 1 223 2 369 1 35 2 370 1 303 1 304 1 37 1 226 2 126 1 325 1 71 1 253 1 327 1 129 2 101 2 41 1 281 2 153 1 44 1 284 1 
0 1 258 1 85 1 49 3 295 1 56 1 318 1 57 1 59 1 240 1 268 1 245 1 342 1 121 1 223 1 225 1 35 2 304 1 226 1 325 1 71 1 349 1 150 1 129 1 41 1 184 1 101 1 281 2 82 1 
287 1 85 2 49 19 292 1 88 1 55 1 56 2 57 3 59 3 61 1 160 2 12 2 161 1 240 3 268 3 245 2 223 6 143 1 35 4 144 1 68 1 304 3 98 1 371 1 325 3 129 10 41 2 281 9 44 3 191 2 
331 1 287 2 85 2 49 17 292 2 54 1 56 2 57 2 262 1 59 2 160 2 240 1 268 2 245 2 223 1 143 1 35 4 144 1 304 1 68 2 98 2 371 1 72 1 308 1 129 8 41 2 281 9 44 1 106 1 191 2 
331 1 287 2 85 3 49 30 292 3 88 1 54 1 55 1 56 3 57 4 262 1 59 4 160 4 12 1 161 1 240 3 268 4 245 3 33 1 223 4 143 1 35 6 144 1 68 3 304 3 98 1 371 1 325 2 72 1 308 1 129 15 41 3 281 15 44 2 106 1 191 3 
331 1 287 2 85 3 49 30 292 3 88 1 54 1 55 1 56 3 57 4 262 1 59 4 160 4 12 1 161 1 240 3 268 4 245 3 33 1 223 5 143 1 35 6 144 1 68 3 304 3 98 1 371 1 325 2 72 1 308 1 129 15 41 3 281 15 44 3 106 1 191 3 
331 1 287 1 85 1 49 36 292 2 88 2 56 1 57 6 262 1 59 6 160 4 298 1 240 5 268 6 245 1 299 1 223 10 143 1 65 1 35 2 144 1 68 4 304 5 98 1 371 1 325 4 72 1 308 1 129 17 77 1 41 1 281 19 44 6 105 2 106 1 191 2 
112 1 120 1 205 1 46 1 63 1 333 1 78 1 200 1 79 1 329 1 
278 1 66 1 
305 1 112 1 120 1 73 1 63 1 64 1 78 1 200 1 79 1 
297 1 359 1 
238 1 199 1 42 1 
192 1 258 1 260 1 50 1 7 1 8 1 294 1 295 1 342 1 162 1 121 1 269 1 224 1 249 1 349 1 184 1 230 1 379 1 312 1 
192 1 258 1 260 1 50 1 7 1 8 1 294 1 295 1 342 1 162 1 121 1 269 1 224 1 249 1 349 1 184 1 230 1 379 1 312 1 
192 1 258 1 260 1 50 1 7 1 8 1 294 1 295 1 342 1 162 1 121 1 269 1 224 1 249 1 349 1 184 1 230 1 379 1 312 1 
238 1 297 1 359 1 
238 1 297 1 359 1 
199 1 42 1 
238 1 199 1 42 1 
146 1 368 1 
286 1 258 2 7 1 8 1 112 1 156 1 197 1 319 1 91 1 200 1 368 1 342 2 120 1 222 1 121 2 63 1 66 1 249 1 146 1 149 1 277 1 349 2 278 1 184 2 20 1 78 1 79 1 
234 1 85 1 49 2 172 1 195 1 362 1 56 1 318 1 216 1 175 2 338 2 119 1 245 1 342 2 121 2 13 1 369 2 225 1 35 2 303 2 69 1 71 1 327 1 18 1 129 1 184 2 41 1 281 1 21 1 211 1 381 1 
341 1 352 1 314 2 346 1 369 2 301 1 236 1 303 2 293 1 251 1 10 1 327 1 350 1 216 1 30 1 131 1 338 2 284 1 83 1 
341 1 352 1 314 2 346 1 369 1 301 1 236 1 303 1 251 1 10 1 327 1 30 1 216 1 131 1 338 1 83 1 168 1 
369 1 145 1 303 1 52 1 172 1 195 1 251 1 29 1 363 1 327 1 350 1 216 1 102 1 338 1 
341 1 352 1 314 2 346 1 369 1 301 1 236 1 303 1 293 1 251 1 10 1 327 1 350 1 30 1 216 1 131 1 338 1 83 1 
228 1 
84 1 198 1 80 1 124 1 139 1 67 1 255 1 
286 1 84 1 235 1 197 1 296 1 265 1 139 1 118 1 14 1 124 1 181 1 127 1 128 1 209 1 80 2 210 1 22 1 
286 5 110 1 52 1 195 3 9 1 197 5 198 1 157 2 57 2 296 4 59 2 239 6 338 3 201 2 240 2 242 2 118 12 344 2 248 1 124 8 348 1 303 3 304 2 250 3 127 4 19 2 209 4 254 1 80 8 351 2 210 4 22 6 255 1 84 2 259 2 316 2 86 1 172 10 216 3 265 3 139 9 266 2 220 1 178 2 177 6 32 2 268 2 369 3 181 5 183 2 327 4 153 3 43 2 284 1 
286 1 84 1 331 1 292 1 197 1 90 1 57 1 262 1 296 2 59 1 265 1 239 4 139 5 266 1 160 1 240 1 118 6 177 4 268 1 124 3 68 1 304 1 181 1 127 2 72 1 308 1 209 2 80 4 106 1 210 2 22 3 
286 1 192 1 257 1 332 1 258 1 316 1 50 1 294 1 197 1 295 1 57 2 296 1 139 2 266 2 342 1 121 1 299 1 224 1 124 2 304 1 127 1 349 1 375 1 77 1 184 1 209 1 379 1 210 1 
84 1 124 1 127 1 198 1 209 1 296 1 80 1 139 1 210 1 255 1 
316 1 259 1 124 5 304 2 57 2 59 2 80 5 239 5 139 5 266 2 240 2 22 5 177 5 118 10 268 2 
84 1 286 1 197 1 80 1 265 1 181 1 
286 3 110 2 48 1 86 1 52 2 172 1 195 1 197 3 216 1 296 2 265 2 338 4 139 2 344 2 369 4 124 2 348 2 145 1 303 4 181 4 182 1 127 1 327 1 76 1 209 2 102 1 283 1 282 1 210 2 
258 2 1 1 85 1 49 1 52 1 213 1 195 1 172 1 294 1 56 1 295 2 319 1 318 1 216 1 338 1 245 1 342 3 13 1 121 3 369 1 35 2 370 1 303 1 37 1 126 1 71 1 349 2 327 1 129 1 41 1 184 2 153 1 
84 2 344 1 110 1 124 2 25 1 127 1 209 1 296 1 80 4 239 2 139 1 210 1 22 2 118 4 177 2 
78 1 200 1 366 1 
78 1 200 1 366 1 
46 1 78 1 200 1 146 1 365 1 
78 1 200 1 366 1 
78 1 200 1 271 1 
78 1 200 1 271 1 
78 1 200 1 271 1 
78 1 200 1 
112 1 63 1 
257 1 85 2 49 12 54 1 56 2 57 2 298 1 245 2 299 2 223 6 65 1 35 4 304 2 325 3 375 1 129 6 77 2 41 2 281 6 44 3 
299 1 223 1 77 1 65 1 44 1 67 1 298 1 
245 1 223 2 85 1 35 2 49 4 304 1 325 1 374 1 56 1 129 2 57 1 41 1 281 2 59 1 44 1 240 1 268 1 
223 2 49 7 292 1 304 1 68 1 88 1 325 1 129 4 57 1 281 3 59 1 44 1 160 2 240 1 268 1 
257 1 85 1 49 20 88 1 54 1 56 1 57 4 59 2 160 2 298 1 240 2 268 2 245 1 299 2 223 6 65 1 35 2 304 4 68 2 325 2 375 1 129 10 77 2 41 1 281 10 189 1 44 4 105 1 
129 1 49 1 160 1 
281 1 49 1 68 1 
245 1 259 1 223 3 35 2 85 1 49 6 304 1 325 1 374 1 56 1 129 3 57 1 41 1 281 3 59 1 44 2 240 1 268 1 
245 1 331 1 223 1 144 1 85 1 35 2 49 10 292 1 304 1 68 1 72 1 56 1 308 1 57 2 129 4 262 1 41 1 281 6 59 2 44 1 160 1 240 1 106 1 268 2 
299 1 223 2 49 6 304 1 325 1 375 1 57 1 129 3 77 1 281 3 44 1 
245 1 299 1 223 2 85 1 35 2 65 1 49 3 196 1 325 1 54 1 56 1 129 2 77 1 41 1 281 1 44 1 298 1 
245 1 257 1 299 2 223 5 35 2 85 1 144 1 49 10 304 2 325 2 375 1 56 1 129 5 57 2 77 2 41 1 281 5 44 3 
245 1 56 1 223 1 57 1 41 1 281 2 35 2 85 1 144 1 49 2 325 1 268 1 
245 1 223 2 144 1 85 1 35 2 49 4 304 1 325 1 56 1 129 2 57 1 41 1 281 2 59 1 44 1 240 1 268 1 
245 3 299 1 223 2 144 1 85 3 35 6 49 3 196 1 325 1 54 1 56 3 129 2 77 1 41 3 281 1 44 1 161 1 
257 1 193 1 85 4 49 26 292 1 54 1 137 1 56 4 57 4 59 2 160 3 298 1 161 1 240 2 268 2 245 4 299 2 223 8 65 1 35 8 144 1 68 3 304 4 325 4 374 1 375 1 129 13 77 2 41 4 281 13 44 4 330 1 
257 1 85 1 49 10 292 1 56 1 57 2 160 1 298 1 245 1 299 2 223 4 35 2 144 1 65 1 304 2 68 1 325 1 375 1 129 5 77 2 41 1 281 5 44 3 106 1 
257 1 85 2 49 13 292 1 88 1 56 2 57 3 59 1 160 2 298 1 268 1 245 2 299 2 223 5 65 1 144 1 35 4 304 2 68 1 325 2 374 1 375 1 129 6 77 2 41 2 281 7 44 3 106 1 
331 1 85 2 49 11 292 1 54 1 56 2 57 2 262 1 59 2 160 1 240 1 268 2 245 2 223 1 35 4 144 1 68 1 304 1 72 1 308 1 129 5 41 2 281 6 44 1 106 1 
245 1 331 1 223 1 144 1 85 1 35 2 49 10 292 1 304 1 68 1 72 1 56 1 308 1 57 2 129 4 262 1 41 1 281 6 59 2 44 1 160 1 240 1 106 1 268 2 
257 1 85 1 49 10 292 1 56 1 57 2 160 1 298 1 245 1 299 2 223 4 35 2 144 1 65 1 304 2 68 1 325 1 375 1 129 5 77 2 41 1 281 5 44 3 106 1 
245 1 331 1 223 1 144 1 85 1 35 2 49 10 292 1 304 1 68 1 72 1 56 1 308 1 57 2 129 4 262 1 41 1 281 6 59 2 44 1 160 1 240 1 106 1 268 2 
331 1 85 3 49 11 292 1 54 1 56 3 57 2 262 1 59 2 160 1 240 1 268 2 245 3 223 1 35 6 144 1 68 1 304 1 374 1 72 1 308 1 129 5 41 3 281 6 44 1 106 1 
331 1 85 3 49 11 292 1 54 1 56 3 57 2 262 1 59 2 160 1 161 1 240 1 268 2 245 3 223 2 144 1 35 6 68 1 304 1 72 1 308 1 129 5 41 3 281 6 44 2 106 1 
257 1 299 3 223 6 65 1 49 5 304 1 325 3 375 1 129 3 57 1 77 3 281 2 44 3 298 1 
331 1 85 3 49 11 292 1 54 1 56 3 57 2 262 1 59 2 160 1 161 1 240 1 268 2 245 3 223 1 144 1 35 6 68 1 304 1 72 1 308 1 129 5 41 3 281 6 44 1 106 1 
342 1 319 1 121 1 289 1 184 1 135 1 207 1 
232 1 342 1 289 1 121 1 51 1 135 1 99 1 207 1 319 1 377 1 184 1 186 1 
327 1 369 1 216 1 102 1 145 1 338 1 303 1 67 1 52 1 172 1 195 1 
342 2 258 1 121 2 369 1 370 1 303 1 52 1 172 1 195 1 126 1 349 1 319 1 327 1 184 1 216 1 153 1 152 1 338 1 
258 2 195 2 172 3 28 1 335 1 319 1 216 1 338 1 201 1 342 2 121 2 369 1 224 1 370 1 348 1 303 1 126 1 349 1 327 1 184 2 19 1 152 1 153 2 
258 2 2 1 195 2 172 3 28 1 335 1 319 1 216 1 338 2 201 1 244 1 342 2 121 2 369 2 224 1 348 1 303 2 126 1 349 1 327 1 184 2 19 1 152 1 153 2 
84 1 286 2 2 1 369 3 348 1 303 3 52 1 250 1 195 1 172 4 181 1 197 2 113 1 327 1 19 1 216 1 153 1 80 1 43 1 201 1 338 3 241 1 32 1 
84 1 286 2 2 1 369 3 348 1 303 3 52 1 250 1 195 1 172 4 181 1 197 2 327 1 157 1 19 1 216 1 153 1 80 1 43 1 201 1 338 3 32 1 
327 1 369 1 216 1 338 1 303 1 132 1 
108 1 346 1 345 1 369 7 170 1 303 6 52 2 195 2 172 3 147 1 327 3 216 2 187 1 153 1 175 1 254 1 338 7 284 1 211 1 62 1 132 1 
49 8 195 1 56 2 57 2 11 1 338 1 298 1 245 2 342 2 121 2 299 2 65 1 303 1 304 2 126 1 71 2 253 1 349 1 129 4 77 2 257 1 258 1 85 2 213 1 172 1 318 2 319 1 216 1 223 4 224 1 369 1 225 1 35 4 370 1 37 1 276 1 325 1 375 1 327 1 41 2 184 1 152 1 153 1 281 4 44 3 284 1 381 1 
84 1 286 3 86 1 52 1 172 2 197 3 198 1 157 1 296 2 265 1 139 1 338 1 242 1 32 1 369 1 124 1 303 1 250 1 181 2 127 2 183 1 209 2 20 1 80 1 351 1 43 1 210 2 255 1 
369 2 303 2 195 1 172 2 327 2 216 1 153 1 254 1 338 2 284 1 220 1 132 1 32 1 
2 1 369 4 145 1 303 4 52 1 195 1 172 1 327 1 216 1 263 1 102 1 338 4 284 1 
246 1 163 1 369 2 170 1 348 1 303 2 195 1 172 1 327 2 216 1 187 1 153 1 338 2 202 1 
341 1 314 1 327 1 301 1 369 1 216 1 236 1 338 1 303 1 52 1 
327 1 18 1 346 1 369 2 216 1 338 2 303 2 284 1 211 1 172 1 195 1 
108 1 369 5 348 1 145 1 303 4 52 1 195 2 172 3 327 2 216 2 263 1 102 1 338 5 284 1 211 1 62 1 
108 1 369 5 111 1 348 1 145 1 303 4 52 1 195 2 172 3 327 2 216 2 263 1 102 1 338 5 284 1 211 1 
342 2 258 1 121 2 369 1 303 1 52 1 172 1 195 1 126 1 349 1 319 1 327 1 184 1 216 1 153 1 152 1 338 1 244 1 
369 1 170 1 348 1 303 1 195 1 172 1 147 1 327 2 216 1 187 1 153 1 254 1 338 1 
256 1 319 1 233 1 5 1 355 1 
84 1 286 2 256 2 3 1 233 2 224 1 122 1 355 1 5 2 28 1 335 1 197 2 319 1 20 1 158 1 80 1 104 1 43 1 339 1 
119 1 256 1 342 1 362 1 121 1 233 1 184 1 355 1 69 1 
3 1 122 1 355 1 
229 1 185 1 67 1 267 1 
227 1 300 1 229 1 185 1 47 1 97 1 267 1 
227 1 133 1 45 1 
208 1 227 3 109 1 300 1 229 1 185 1 47 1 291 1 337 2 97 3 180 1 267 1 
227 2 300 1 229 1 185 1 47 1 97 2 212 1 267 1 372 1 
341 1 314 1 10 1 227 1 336 1 300 1 47 1 291 1 97 1 320 1 267 1 
227 1 300 1 229 1 47 1 291 1 97 1 267 1 
227 1 300 1 229 2 185 1 47 1 291 1 97 1 
179 1 300 2 47 2 291 1 97 2 26 1 227 2 229 1 117 1 267 1 
134 1 300 1 47 1 291 1 97 3 212 2 227 3 229 1 185 1 264 1 367 1 320 1 267 2 
314 2 352 1 341 1 300 1 47 1 291 1 97 2 236 1 212 1 171 1 227 2 10 1 229 1 185 1 267 1 
300 2 322 1 47 2 291 1 97 4 212 2 372 1 227 4 229 1 185 1 367 1 320 1 267 2 
227 1 300 1 229 1 185 1 47 1 291 1 97 1 267 1 
109 1 300 1 47 1 97 4 212 2 53 1 208 1 227 4 229 2 185 2 337 1 367 1 320 1 267 3 
300 1 47 1 291 1 97 2 212 1 206 1 227 2 75 1 229 1 185 1 378 1 267 1 
340 1 109 2 300 1 47 1 291 1 97 3 208 1 227 3 185 1 229 1 337 2 267 1 
58 1 273 1 334 2 267 2 
227 1 300 1 47 1 291 1 97 1 221 1 
227 2 300 1 229 1 185 1 264 1 47 1 291 1 97 2 212 1 267 1 
243 1 
227 1 300 1 229 1 185 1 47 1 291 1 97 1 267 1 
227 3 300 1 264 1 229 1 185 1 47 1 291 1 337 1 97 3 212 1 267 1 
320 1 367 1 53 1 267 1 
229 1 267 1 

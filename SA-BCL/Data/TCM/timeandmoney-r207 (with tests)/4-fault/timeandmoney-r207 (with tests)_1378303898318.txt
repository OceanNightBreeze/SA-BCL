#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (136,237) 87 108 (188,288) (188,288) 262 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 2 197 2 151 3 297 1 298 2 361 1 8 3 135 1 85 1 194 1 251 1 53 1 189 1 
322 1 283 1 323 2 160 1 100 1 58 2 8 9 165 2 258 1 85 2 236 2 171 1 194 1 64 1 357 1 195 1 265 2 197 2 151 9 297 4 298 5 361 3 135 1 78 1 251 6 53 1 26 1 189 1 
322 1 283 1 323 2 160 1 100 1 58 2 8 9 165 2 258 1 85 2 236 2 171 1 194 1 64 1 357 1 195 1 265 2 197 2 151 9 297 4 298 5 361 3 135 1 78 1 251 6 53 1 26 1 189 1 
322 1 283 1 323 2 160 1 100 1 58 2 8 10 165 2 258 1 85 2 236 2 171 1 194 1 64 1 357 1 195 1 265 2 197 2 151 10 297 5 298 6 361 4 135 1 78 1 251 7 53 1 26 1 189 1 
283 1 323 2 160 1 100 1 58 2 8 7 165 2 258 1 85 2 236 1 171 1 194 1 64 1 357 1 195 1 265 2 197 2 151 7 297 3 298 4 361 2 135 1 78 1 251 4 53 1 26 1 189 1 
322 1 265 1 197 1 151 4 323 1 297 2 298 3 58 1 361 1 8 4 165 1 135 1 236 2 194 1 64 1 78 1 251 3 53 1 
265 1 197 1 151 2 160 1 323 1 100 1 298 1 42 1 32 1 8 2 165 1 135 1 202 1 85 1 194 1 53 1 
322 1 323 1 126 1 58 1 8 9 165 1 258 1 85 1 236 2 171 1 194 1 64 1 86 1 265 2 197 2 151 9 297 4 298 5 361 3 135 1 78 1 251 7 53 1 189 1 
322 1 323 1 126 1 58 1 8 9 165 1 258 1 85 1 236 2 171 1 194 1 64 1 86 1 265 2 197 2 151 9 297 4 298 5 361 3 135 1 78 1 251 7 53 1 189 1 
288 1 237 1 15 1 108 1 256 1 200 1 87 1 188 1 
364 1 
201 1 122 1 15 1 256 2 348 1 200 2 46 1 364 1 
89 1 335 1 141 1 15 2 256 5 200 5 211 1 350 1 362 1 46 1 364 1 104 2 75 1 201 1 36 1 148 2 122 2 80 2 12 1 
279 1 201 1 364 1 
205 1 
224 2 237 2 273 2 149 2 108 1 102 2 87 2 374 1 
252 1 159 1 281 1 192 1 7 1 102 2 351 2 143 1 35 1 105 1 237 2 149 2 108 1 240 1 110 1 87 2 113 1 39 1 333 2 244 1 224 3 225 1 152 1 17 1 337 1 342 2 47 1 301 1 96 2 156 1 250 2 273 3 371 1 305 1 276 1 374 1 375 1 
288 1 237 1 108 1 87 1 
224 1 128 1 256 1 210 1 200 1 364 1 73 1 233 1 201 1 170 1 23 1 149 1 273 1 186 1 
224 1 128 1 256 2 200 2 102 1 364 1 73 1 201 1 170 1 237 1 23 1 149 1 273 1 186 1 87 1 
290 1 122 1 15 1 256 1 200 1 
201 1 122 1 15 1 256 2 200 2 46 1 364 1 264 1 
122 1 256 1 200 1 
224 2 83 1 102 1 50 1 237 1 149 2 273 2 87 1 374 2 
341 1 208 1 261 1 
39 1 224 1 192 1 152 1 351 1 143 1 342 1 47 1 289 1 96 1 156 1 273 1 371 1 110 1 374 1 113 1 
279 1 374 1 
39 1 224 2 192 1 152 1 176 1 16 1 102 1 351 1 143 1 341 1 342 1 47 1 96 1 237 1 156 1 371 1 149 1 273 2 110 1 113 1 
224 3 176 1 237 3 273 3 149 3 102 3 87 1 374 1 
224 1 170 1 237 1 273 1 149 1 102 1 317 1 
224 1 50 1 170 1 237 1 83 1 273 1 149 1 102 1 87 1 
252 1 159 1 192 1 127 1 128 1 256 1 102 3 351 1 143 1 234 1 35 1 170 1 237 3 149 3 108 1 240 1 110 1 87 2 113 1 39 1 333 2 244 1 224 4 225 1 152 1 176 1 17 1 16 1 200 1 73 1 342 1 47 1 50 1 301 1 96 1 156 1 23 1 250 1 371 1 273 4 186 1 276 1 374 1 375 1 
233 1 347 1 224 2 237 1 176 1 273 2 149 2 102 1 374 1 
224 3 176 2 16 1 256 1 128 1 200 1 102 3 364 1 73 1 234 1 50 1 170 1 370 1 237 3 23 1 149 3 273 3 186 1 87 1 
224 2 176 1 102 2 341 1 50 1 237 2 149 2 273 2 261 1 87 1 
39 1 224 1 192 1 152 1 351 1 143 1 342 1 47 1 96 1 156 1 273 1 371 1 110 1 374 1 113 1 
224 1 192 1 152 1 351 1 62 1 342 1 365 1 47 1 96 1 156 1 273 1 371 1 110 1 374 1 113 1 
252 1 208 2 159 1 284 1 7 2 352 1 311 1 261 2 11 1 65 1 331 1 66 1 68 1 333 2 244 1 225 1 17 2 341 2 366 1 301 1 51 1 250 4 25 1 276 1 
224 1 170 1 237 1 273 1 149 1 102 1 136 1 73 1 
347 1 224 5 176 2 16 1 316 1 102 4 233 1 50 1 237 4 149 5 273 5 79 1 87 1 374 1 
224 2 170 1 237 2 273 2 149 2 102 2 136 1 317 1 
101 1 24 1 223 1 
243 1 145 1 198 1 101 2 38 1 24 2 
101 1 24 1 
101 1 24 1 
145 1 38 1 
145 1 38 1 
145 1 38 1 
101 1 24 1 150 1 
101 1 24 1 150 1 
101 1 24 1 150 1 
101 1 24 1 231 1 
101 1 24 1 231 1 
101 1 24 1 231 1 
346 2 198 1 69 2 31 1 101 2 230 2 256 2 91 1 200 2 363 1 19 1 364 1 270 2 130 2 106 1 372 1 24 2 277 3 173 1 
282 1 101 1 230 1 256 1 102 2 130 1 237 2 149 2 354 1 356 1 223 1 224 2 69 1 116 1 199 1 200 1 363 1 270 1 182 1 97 1 273 2 24 1 374 1 277 1 
58 1 42 1 300 1 263 2 165 2 
323 1 58 1 165 1 
323 1 42 1 165 1 
81 1 58 2 42 1 300 1 263 1 165 3 
167 1 58 1 42 1 300 1 263 1 165 2 
141 1 256 5 352 1 104 1 288 1 9 1 36 1 237 1 148 1 329 1 108 1 355 1 87 1 112 1 89 2 313 1 15 4 299 1 200 5 46 1 134 2 364 1 179 1 340 1 201 1 182 1 51 1 122 1 205 1 80 1 188 1 
141 1 256 5 287 1 352 1 104 1 288 1 9 1 290 2 219 1 36 1 148 1 237 1 108 1 355 1 87 1 112 1 89 2 313 1 15 4 299 1 200 5 46 1 364 1 179 1 201 1 182 1 51 1 122 3 205 1 80 1 188 1 278 2 
141 3 256 3 211 1 104 1 352 1 288 1 237 1 329 1 148 1 108 1 355 1 11 1 87 1 112 1 68 1 89 2 117 1 313 1 15 2 299 2 200 3 134 1 364 2 179 2 340 1 201 1 182 1 51 1 80 1 205 3 188 1 
82 1 141 5 256 4 211 1 104 1 352 2 288 1 237 1 148 1 329 1 108 1 355 1 11 2 87 1 112 1 68 2 89 4 117 2 313 2 15 3 299 4 200 4 72 1 134 2 364 3 179 4 340 1 201 1 182 2 51 2 185 1 205 6 80 1 188 1 
315 1 
279 1 368 1 156 1 
156 1 373 1 
156 1 110 1 
368 2 192 1 216 1 156 3 274 1 110 1 
192 1 156 1 110 1 
156 1 157 1 
68 1 321 1 29 1 280 1 13 1 17 3 71 1 7 4 352 1 129 1 344 1 95 1 218 2 260 1 291 1 250 7 25 2 65 3 
321 1 159 1 280 2 29 5 254 1 7 16 352 4 129 2 257 1 63 1 218 3 260 1 291 2 11 3 65 10 358 4 292 1 68 4 333 2 225 1 153 1 296 1 313 3 17 15 71 1 344 2 95 1 76 3 301 1 51 3 250 31 25 5 275 1 276 1 
321 1 159 2 280 1 29 1 7 5 33 1 352 1 129 1 257 1 218 2 291 1 260 1 65 4 68 1 196 1 333 4 225 2 17 4 71 1 344 1 301 2 250 9 25 3 276 2 
68 1 321 1 29 1 280 1 17 3 7 4 71 1 352 1 129 1 344 1 95 1 218 2 260 1 291 1 250 7 25 2 65 3 
68 1 321 1 29 1 280 1 17 3 7 4 71 1 352 1 129 1 344 1 95 1 218 2 260 1 291 1 250 7 25 2 65 3 
265 1 40 2 197 1 115 2 151 1 152 1 90 1 338 1 177 1 269 1 142 1 351 1 8 1 178 2 342 1 47 1 249 1 96 1 85 2 156 1 371 1 330 1 110 1 
81 1 323 1 326 1 58 1 351 1 8 1 165 2 215 1 85 1 194 1 111 1 265 1 40 1 115 1 197 1 151 1 174 1 41 1 42 1 118 1 178 1 342 1 120 1 47 1 96 1 371 1 
81 1 323 1 326 1 58 1 351 1 8 2 165 2 215 1 85 1 194 1 111 1 265 1 40 1 115 1 197 1 151 2 174 1 41 1 298 1 42 1 178 1 342 1 120 1 47 1 96 1 135 1 371 1 251 1 53 1 187 1 
81 1 56 1 323 1 326 1 58 1 351 1 8 3 165 2 215 1 85 1 111 1 265 1 40 1 115 1 197 1 151 3 174 1 90 1 41 1 298 1 42 1 118 1 178 1 342 1 47 1 96 1 135 1 371 1 251 2 53 1 
56 1 81 1 323 1 326 1 58 1 351 1 8 2 165 2 85 1 111 1 40 1 115 1 151 2 41 1 298 1 42 1 118 1 178 1 342 1 47 1 96 1 135 1 371 1 251 2 53 1 
266 1 
324 2 141 2 285 1 104 1 327 2 232 1 233 1 147 1 148 1 10 1 330 1 149 1 110 1 332 2 293 1 245 1 117 2 152 2 334 4 18 2 200 5 247 2 73 1 342 2 201 1 122 6 156 1 23 1 203 1 205 2 80 1 30 1 256 5 128 1 210 1 349 1 164 2 351 2 163 1 170 1 36 1 355 1 222 1 224 1 267 1 89 2 269 1 46 3 364 2 47 1 96 2 319 2 371 1 273 1 186 1 
285 1 256 3 128 1 210 1 348 1 164 1 233 1 147 1 170 1 10 1 149 1 293 1 224 1 334 2 200 3 46 1 73 1 122 2 23 1 273 1 203 1 186 1 
285 1 256 3 128 1 210 1 348 1 327 1 233 1 147 1 170 1 10 1 149 1 293 1 224 1 334 3 200 3 46 1 364 1 73 1 201 1 122 1 23 1 273 1 203 1 186 1 
285 1 256 3 128 1 348 1 210 1 164 1 327 1 233 1 147 1 170 1 10 1 149 1 332 1 293 1 224 1 334 3 200 3 46 1 364 1 73 1 201 1 122 2 23 1 273 1 203 1 186 1 
324 2 285 1 141 1 286 1 61 1 104 1 327 4 233 1 147 1 10 1 148 1 149 1 332 4 293 1 334 6 14 1 117 2 18 2 200 5 247 2 73 1 201 5 122 7 23 1 203 1 80 1 128 1 256 5 348 1 210 1 164 4 163 1 170 1 36 1 222 1 224 1 89 1 360 1 46 3 364 5 319 2 273 1 186 1 137 1 
324 2 285 1 141 1 104 1 327 2 233 1 147 1 10 1 148 1 149 1 332 2 293 1 245 1 334 4 117 2 18 2 200 4 247 2 73 1 201 1 122 4 23 1 203 1 80 1 205 2 128 1 256 4 210 1 163 1 164 2 170 1 36 1 222 1 224 1 89 1 46 2 364 1 319 2 273 1 186 1 
324 2 141 1 285 1 286 1 256 4 128 1 210 1 164 2 163 1 61 1 104 1 327 2 233 1 147 1 170 1 36 1 10 1 148 1 149 1 222 1 332 2 293 1 224 1 89 1 117 2 334 4 360 1 18 2 200 4 247 2 46 2 364 1 73 1 201 1 319 2 122 4 23 1 273 1 203 1 186 1 80 1 
324 2 141 1 285 1 286 1 256 4 128 1 210 1 164 2 163 1 61 1 104 1 327 2 233 1 147 1 170 1 36 1 10 1 148 1 149 1 222 1 332 2 293 1 224 1 89 1 117 2 334 4 360 1 18 2 200 4 247 2 46 2 364 1 73 1 201 1 319 2 122 4 23 1 273 1 203 1 186 1 80 1 
4 1 141 1 285 1 286 1 256 4 128 1 210 1 162 1 164 2 104 1 327 2 233 1 147 1 170 1 36 1 10 1 148 1 149 1 222 1 332 2 293 1 224 1 89 1 334 4 314 2 18 2 200 4 46 2 364 1 73 1 201 1 319 2 302 2 122 4 23 1 273 1 203 1 186 1 204 1 205 2 80 1 
324 2 141 1 285 1 286 1 256 4 128 1 210 1 163 1 61 1 164 3 104 1 327 3 233 1 147 1 170 1 36 1 148 1 10 1 149 1 222 1 332 3 293 1 224 1 89 1 117 2 334 5 14 1 360 1 18 2 200 4 247 2 46 2 364 1 73 1 201 1 319 2 122 5 23 1 273 1 203 1 186 1 80 1 
324 2 141 1 285 1 286 1 256 4 128 1 210 1 163 1 61 1 164 3 104 1 327 3 233 1 147 1 170 1 36 1 148 1 10 1 149 1 222 1 332 3 293 1 224 1 89 1 117 2 334 5 14 1 360 1 18 2 200 4 247 2 46 2 364 1 73 1 201 1 319 2 122 5 23 1 273 1 203 1 186 1 80 1 
4 1 141 1 285 1 256 2 128 1 210 1 104 1 233 1 147 1 170 1 36 1 148 1 10 1 149 1 222 1 293 1 245 1 224 1 89 1 334 2 314 1 18 1 200 2 73 1 319 1 23 1 203 1 273 1 186 1 205 1 80 1 
252 2 159 2 7 1 102 1 351 8 328 1 237 1 149 1 330 1 240 1 110 2 66 1 67 1 333 4 244 2 224 1 225 2 152 2 176 1 336 1 17 1 118 1 337 1 269 1 342 8 47 2 21 1 49 1 22 1 96 7 301 2 156 3 273 1 371 2 250 2 187 1 98 1 305 2 276 2 
252 1 208 1 159 1 7 1 102 1 352 1 237 1 149 1 261 1 11 1 65 1 87 1 68 1 333 2 244 1 224 1 225 1 313 1 17 2 341 1 50 1 301 1 367 1 51 1 273 1 250 3 25 1 276 1 320 1 
68 1 252 1 279 1 321 1 208 1 244 1 159 1 333 2 225 1 17 3 7 3 71 1 352 1 341 1 129 1 344 1 301 1 218 1 260 1 250 6 25 2 261 1 65 2 276 1 374 2 66 1 
252 1 228 1 208 11 29 1 159 2 140 1 7 8 352 2 169 1 63 1 261 4 240 1 11 1 65 2 358 3 68 1 333 4 244 2 225 2 153 1 313 2 17 6 337 1 341 11 76 3 301 2 51 2 345 1 250 14 25 1 276 2 374 1 320 1 
252 1 99 1 159 1 192 1 161 1 7 1 351 1 102 1 143 1 289 1 235 1 237 1 149 1 261 1 110 1 240 1 113 1 39 1 244 1 333 2 224 2 225 1 152 1 176 1 16 1 17 1 337 1 342 1 47 1 96 1 301 1 156 1 371 1 273 2 250 2 276 1 374 1 320 1 
321 1 192 2 7 10 102 1 143 2 237 1 149 1 240 1 110 2 11 2 65 10 113 2 68 3 333 6 244 3 152 1 17 10 16 1 118 1 337 1 71 1 119 2 339 2 342 3 341 7 344 1 301 3 156 2 250 20 25 6 252 3 206 1 208 7 159 3 29 4 351 3 352 3 129 1 218 1 260 1 261 7 39 2 224 3 225 3 226 1 176 1 313 2 268 1 47 2 96 3 183 2 51 2 273 3 371 2 276 3 374 2 320 1 55 2 375 2 
252 1 208 1 29 1 244 1 159 1 333 2 225 1 7 2 352 1 341 1 301 1 311 1 51 1 250 2 261 1 65 1 276 1 66 1 
252 1 68 1 208 1 244 1 159 1 333 2 225 1 284 1 17 2 341 1 301 1 250 2 25 1 261 1 11 1 65 1 276 1 66 1 
252 1 208 2 159 1 29 1 7 2 352 1 261 2 11 1 65 2 66 1 68 1 333 2 244 1 225 1 313 1 17 2 341 2 301 1 51 1 250 4 25 1 276 1 
252 1 208 1 29 1 244 1 159 1 333 2 225 1 7 2 352 1 341 1 49 1 301 1 311 1 51 1 250 2 261 1 65 1 276 1 
252 1 68 1 208 1 244 1 159 1 333 2 225 1 284 1 17 2 341 1 49 1 301 1 250 2 25 1 261 1 11 1 65 1 276 1 
252 1 208 2 159 1 29 1 7 2 352 1 261 2 11 1 65 2 68 1 333 2 244 1 225 1 313 1 17 2 341 2 49 1 301 1 51 1 250 4 25 1 276 1 
68 1 252 1 208 2 29 1 244 1 159 1 333 2 225 1 313 1 17 2 7 2 352 1 341 2 301 1 51 1 250 4 25 1 261 2 11 1 65 2 276 1 
252 1 159 1 192 1 7 1 351 1 143 1 110 1 240 1 113 1 39 1 244 1 333 2 224 1 225 1 152 1 17 1 337 1 342 1 47 1 96 1 301 1 156 1 250 2 371 1 273 1 276 1 374 1 375 1 
252 1 159 1 192 1 7 1 62 1 351 1 84 1 110 1 240 1 113 1 244 1 333 2 224 1 225 1 152 1 17 1 337 1 365 1 342 1 47 1 96 1 301 1 156 1 250 2 371 1 273 1 276 1 374 1 
252 1 208 2 159 1 29 1 7 2 352 1 261 2 11 1 65 2 68 1 333 2 244 1 225 1 313 1 17 2 341 2 301 1 51 1 250 4 25 1 276 1 320 1 
252 1 208 2 29 1 159 1 192 1 7 2 351 1 143 1 352 1 261 2 11 1 110 1 65 2 113 1 68 1 39 1 244 1 333 2 224 1 225 1 313 1 17 2 341 2 342 1 47 1 96 1 301 1 51 1 156 1 250 4 371 1 273 1 25 1 187 1 276 1 375 1 55 1 
252 1 208 1 29 1 159 1 7 2 102 1 352 1 217 1 237 1 149 1 261 1 11 1 65 1 87 1 68 1 333 2 244 1 224 1 225 1 313 1 17 1 341 1 50 1 301 1 51 1 273 1 250 3 276 1 320 1 
321 1 124 1 159 3 29 4 325 1 7 20 214 1 310 4 352 5 144 1 129 1 257 1 168 1 63 1 218 1 260 1 11 4 65 8 358 4 114 1 359 2 68 5 196 1 333 6 225 3 175 1 153 3 313 4 17 21 44 1 71 1 74 1 344 1 76 3 181 1 301 3 369 1 51 4 184 1 52 1 250 41 25 4 276 3 
321 1 124 1 159 4 29 3 325 1 7 20 214 1 310 4 352 5 144 1 129 1 257 2 168 1 63 1 218 1 260 1 11 3 65 7 358 4 114 1 359 2 68 4 196 1 333 8 225 4 175 1 153 3 313 4 17 18 44 1 71 1 74 1 344 1 76 3 181 1 301 4 369 1 51 4 184 1 52 1 250 38 25 4 276 4 
321 1 124 1 159 2 29 7 325 1 7 27 214 1 310 4 352 8 129 1 257 1 168 1 63 2 218 1 260 1 11 7 65 14 358 4 114 1 359 1 68 8 196 1 333 4 225 2 175 1 153 2 313 7 17 25 71 1 74 1 344 1 76 4 181 1 301 2 369 1 51 7 184 1 52 1 345 2 250 52 25 7 276 2 
124 1 159 2 29 3 325 2 7 9 310 2 352 3 168 1 63 1 238 1 11 3 65 6 358 2 359 1 68 3 196 1 333 4 225 2 153 1 313 3 17 10 44 1 74 1 76 1 181 1 301 2 51 3 250 19 25 3 276 2 
124 1 29 2 159 3 325 1 7 14 310 4 214 1 352 3 257 2 168 1 11 2 65 4 358 2 114 1 68 2 359 2 196 1 333 6 225 3 175 1 153 2 313 3 17 12 74 2 76 2 181 1 301 3 369 1 51 3 52 1 184 1 250 26 25 2 276 3 
130 1 198 1 69 1 106 1 101 1 309 1 230 1 24 1 19 1 270 1 
354 1 223 1 
34 1 121 1 130 1 69 1 101 1 230 1 24 1 103 1 270 1 
346 1 198 1 69 1 31 1 101 1 256 1 230 1 91 1 200 1 363 1 19 1 364 1 270 1 130 1 106 1 24 1 277 2 173 1 
346 1 198 1 69 1 31 1 101 1 256 1 230 1 91 1 200 1 363 1 19 1 364 1 270 1 130 1 106 1 24 1 277 2 173 1 
346 1 198 1 69 1 31 1 101 1 256 1 230 1 91 1 200 1 363 1 19 1 364 1 270 1 130 1 106 1 24 1 277 2 173 1 
20 1 243 1 150 1 
20 1 243 1 150 1 
231 1 45 1 
243 1 231 1 45 1 
282 1 116 1 
346 1 282 1 101 1 256 1 230 1 102 2 130 1 237 2 354 1 149 2 356 1 173 1 223 1 224 2 69 1 116 1 15 1 199 1 200 1 270 1 182 1 97 1 77 1 273 2 24 1 374 1 277 1 
20 1 150 1 
243 1 231 1 45 1 
252 1 1 1 306 1 159 1 57 1 7 1 351 2 107 1 149 2 110 1 240 1 244 1 333 2 224 2 225 1 336 1 17 1 337 1 342 2 47 1 21 1 94 1 301 1 96 2 156 1 371 1 273 2 250 2 305 2 276 1 320 1 
40 1 152 1 308 1 177 1 351 1 248 1 269 1 342 1 47 1 96 1 156 1 371 1 330 1 110 1 
0 1 40 1 81 1 174 1 323 1 308 1 41 1 58 1 42 1 118 1 351 1 165 2 342 1 180 1 47 1 96 1 371 1 111 1 
0 1 40 1 81 1 174 1 323 1 308 1 41 1 58 1 42 1 118 1 351 2 165 2 342 2 180 1 47 1 96 2 371 1 187 1 111 1 
0 1 40 1 81 1 174 1 323 1 41 1 58 1 42 1 118 1 351 1 165 2 342 1 47 1 353 1 96 1 371 1 111 1 
255 1 
89 1 141 1 362 1 364 1 104 1 75 1 201 1 36 1 148 1 80 1 
89 2 51 1 313 1 299 1 205 1 179 1 352 1 
201 1 122 1 256 1 200 1 46 1 364 1 
191 1 30 1 141 2 256 3 211 1 60 1 351 4 104 2 232 1 36 1 148 2 330 1 355 2 110 1 267 2 295 2 89 2 152 2 200 3 46 2 269 1 342 4 47 1 96 4 122 4 156 1 371 1 54 1 80 2 
279 1 75 1 201 1 89 1 141 1 362 1 364 1 
324 1 141 1 256 1 163 1 104 1 36 1 148 1 89 1 117 1 200 1 247 1 46 1 364 1 201 1 122 1 80 1 205 1 
253 1 190 1 192 1 139 1 141 2 229 1 256 2 128 1 351 1 212 1 213 1 352 1 104 2 36 2 148 2 355 1 110 1 242 1 89 3 152 1 313 1 299 2 200 2 46 1 93 1 179 2 342 1 47 2 96 1 368 1 51 1 183 1 122 2 156 4 371 1 274 1 205 2 80 2 373 2 
141 6 214 1 104 1 352 2 36 1 148 1 11 2 358 1 68 2 89 4 175 1 153 1 313 2 299 5 179 5 76 1 369 1 51 2 52 1 184 1 205 3 80 1 
68 1 89 1 141 2 256 1 200 1 61 1 93 2 352 1 104 1 288 1 129 1 344 1 36 1 237 1 148 1 260 1 108 1 262 1 80 1 87 1 188 1 
252 1 159 1 192 1 351 1 102 2 143 1 35 1 237 2 149 2 108 1 240 1 110 1 87 2 113 1 39 1 333 2 244 1 224 3 225 1 152 1 17 1 342 1 47 1 96 1 301 1 156 1 250 1 273 3 371 1 276 1 374 1 375 1 
267 1 89 1 141 1 299 1 364 1 104 1 201 1 36 1 148 1 355 1 205 1 80 1 
130 1 282 1 106 1 92 1 270 1 
130 1 239 1 270 1 
130 1 239 1 270 1 
130 1 239 1 270 1 
130 1 146 1 270 1 
130 1 146 1 270 1 
130 1 146 1 270 1 
130 1 270 1 
101 1 24 1 
321 1 159 1 7 4 352 1 214 1 129 1 218 1 260 1 65 2 358 1 68 1 196 1 333 2 225 1 153 1 17 4 71 1 344 1 76 1 301 1 250 8 25 2 276 1 
321 1 159 2 29 1 5 1 7 6 214 1 352 2 129 1 63 1 218 1 260 1 65 3 358 2 68 1 196 1 333 4 225 2 153 1 313 1 17 5 71 1 344 1 76 1 301 2 51 1 250 11 25 2 276 2 
321 1 29 1 159 3 5 1 7 9 214 1 352 3 129 1 257 1 218 1 260 1 11 2 65 4 358 1 68 3 196 1 333 6 225 3 175 1 153 1 313 2 17 10 71 1 344 1 76 1 301 3 369 1 51 2 52 1 184 1 250 19 25 3 276 3 
321 1 29 2 159 3 5 1 7 10 214 1 352 3 129 1 257 1 218 1 260 1 11 1 65 5 358 1 68 2 196 1 333 6 225 3 175 1 153 1 313 2 17 7 71 1 344 1 76 1 301 3 369 1 51 2 52 1 184 1 250 17 25 3 276 3 
321 1 159 1 7 4 352 1 214 1 129 1 218 1 260 1 65 2 358 1 68 1 196 1 333 2 225 1 153 1 17 4 71 1 344 1 76 1 301 1 250 8 25 2 276 1 
29 1 159 1 7 6 214 1 352 2 11 2 65 2 358 1 68 2 196 1 333 2 225 1 175 1 153 1 313 2 17 6 76 1 301 1 369 1 51 2 52 1 184 1 250 12 25 1 276 1 
321 1 29 2 159 4 5 1 7 10 214 1 352 3 129 1 257 2 218 1 260 1 11 1 65 5 358 1 68 2 196 1 333 8 225 4 175 1 153 1 313 2 17 8 71 1 344 1 76 1 301 4 369 1 51 2 52 1 184 1 250 18 25 3 276 4 
29 3 159 4 7 9 214 1 352 3 257 2 11 2 65 6 358 1 68 2 196 1 333 8 225 4 175 1 153 1 313 3 17 7 44 1 76 1 301 4 369 1 51 3 52 1 184 1 250 16 25 3 276 4 
68 1 321 1 29 3 17 4 71 2 7 3 352 1 129 3 344 3 260 1 250 7 25 3 65 6 
321 1 29 1 159 4 7 10 214 1 352 3 129 1 257 2 218 1 260 1 11 1 65 4 358 1 68 2 196 1 333 8 225 4 175 1 153 1 313 2 17 8 71 1 44 1 344 1 76 1 301 4 369 1 51 2 52 1 184 1 250 18 25 3 276 4 
68 2 196 1 333 2 159 1 29 2 225 1 17 5 7 5 352 2 129 2 344 2 301 1 260 1 250 10 25 3 262 1 276 1 65 5 
196 1 159 1 333 2 29 1 225 1 7 2 352 1 301 1 51 1 250 2 276 1 65 1 
68 1 196 1 159 1 333 2 29 1 225 1 313 1 17 2 7 2 352 1 301 1 51 1 250 4 25 1 11 1 65 2 276 1 
196 1 159 3 333 6 29 1 225 3 17 2 44 1 7 1 227 1 129 1 257 1 344 1 301 3 250 3 25 1 276 3 65 2 
321 1 159 5 29 5 254 1 5 1 7 16 352 5 129 3 257 2 63 1 218 1 260 2 11 3 65 12 358 4 68 5 196 1 333 10 225 5 296 1 153 1 313 3 17 18 71 1 44 1 227 1 344 3 76 3 301 5 51 3 250 34 25 7 275 1 276 5 
68 1 321 1 29 1 159 2 333 4 225 2 17 4 7 4 71 1 352 1 129 1 257 1 344 1 301 2 218 1 260 1 250 8 25 2 65 3 276 2 
279 1 321 1 68 1 17 3 71 1 7 3 352 1 129 1 344 1 218 1 260 1 250 6 25 2 65 2 
68 1 159 1 333 2 29 1 5 1 225 1 313 1 17 2 7 2 352 1 301 1 51 1 250 4 25 1 11 1 65 2 276 1 
68 1 29 1 153 1 313 1 17 4 7 3 352 1 76 1 63 1 51 1 250 7 25 1 11 1 65 2 358 2 
321 1 29 4 159 2 140 1 7 11 352 3 129 2 257 2 63 1 218 1 260 1 11 2 65 9 358 2 68 3 333 4 225 2 313 2 17 12 71 1 227 1 344 2 76 2 301 2 51 2 250 23 345 1 25 5 276 2 
17 1 250 1 358 1 
76 1 250 1 7 1 
68 1 333 2 159 1 29 1 5 1 225 1 313 1 17 3 7 3 352 1 301 1 183 1 51 1 250 6 25 1 11 1 276 1 65 2 
29 1 159 1 7 6 214 1 352 2 11 2 65 2 358 1 68 2 196 1 333 2 225 1 175 1 153 1 313 2 17 6 76 1 301 1 369 1 51 2 52 1 184 1 250 12 25 1 276 1 
68 1 29 1 17 3 7 3 352 1 129 1 344 1 260 1 250 6 25 1 65 2 
321 1 29 1 159 1 333 2 225 1 17 2 7 1 71 1 227 1 129 1 344 1 257 1 301 1 250 3 25 1 65 2 276 1 
233 1 347 1 224 1 273 1 149 1 109 1 374 1 
138 1 347 1 224 1 125 1 43 1 59 1 271 1 233 1 149 1 273 1 109 1 374 1 
152 1 351 4 269 1 342 4 47 1 272 1 96 4 156 1 330 1 371 1 187 1 110 1 28 1 
123 1 295 1 192 1 307 1 226 1 351 2 342 2 318 1 47 2 96 2 156 1 371 1 132 1 110 1 
342 1 47 1 96 1 323 1 152 1 41 1 42 1 371 1 351 1 165 1 
57 1 336 1 118 1 351 2 342 2 47 1 96 2 156 1 371 1 187 1 110 1 
67 1 295 1 152 1 336 1 269 1 351 5 342 5 47 2 328 1 272 1 96 4 156 3 330 1 371 2 187 1 110 2 
241 1 295 1 152 1 336 1 269 1 351 5 342 5 47 2 328 1 272 1 96 4 156 3 330 1 371 2 187 1 110 2 
279 1 342 1 47 1 96 1 152 1 156 1 371 1 330 1 110 1 269 1 351 1 
224 2 192 1 152 1 176 1 102 1 351 1 143 1 342 1 47 1 96 1 237 1 156 1 149 1 273 2 371 1 110 1 374 1 113 1 
192 2 351 1 102 2 143 1 170 1 237 1 149 2 110 2 113 1 224 2 294 1 295 1 176 1 73 1 342 1 47 1 96 1 156 3 23 1 371 1 273 2 157 1 374 1 
192 2 351 2 102 2 170 1 237 1 149 2 110 2 113 1 224 2 294 1 295 1 176 1 73 1 365 1 342 2 47 1 96 2 156 3 23 1 371 1 273 2 157 1 28 1 374 1 
207 1 294 1 192 1 295 1 152 1 128 1 256 2 200 2 351 3 364 1 342 3 47 1 201 1 96 3 368 1 220 1 122 1 156 4 157 1 371 1 110 1 373 1 28 1 
294 1 192 1 295 1 152 1 139 1 128 1 256 2 200 2 351 3 364 1 342 3 47 1 201 1 96 3 368 1 122 1 156 4 157 1 371 1 110 1 373 1 28 1 
342 1 47 1 22 1 96 1 371 1 351 1 
67 1 2 1 192 1 307 1 152 2 336 1 118 1 351 7 342 7 318 1 47 3 328 1 22 1 96 6 156 3 371 2 274 1 187 1 98 1 305 1 110 2 
321 1 252 2 1 1 208 1 159 2 192 1 7 3 102 1 351 1 143 1 352 1 129 1 218 1 237 1 260 1 149 1 261 1 110 1 65 2 113 1 68 1 39 1 244 2 333 4 224 2 225 2 176 1 17 3 71 1 119 1 341 1 342 1 47 1 344 1 301 2 96 1 156 1 250 6 371 1 273 2 25 2 187 1 276 2 374 2 320 1 55 1 375 1 
190 1 253 1 141 1 139 1 256 3 128 1 351 1 60 1 213 1 104 2 36 2 148 2 89 1 152 1 15 1 200 3 362 1 46 1 364 1 342 1 75 1 201 1 96 1 368 1 122 2 156 2 80 2 373 1 
242 1 192 1 351 2 342 2 47 2 22 1 96 2 368 1 156 2 371 1 274 1 187 1 110 1 
224 2 192 1 152 1 176 1 102 1 351 1 342 1 365 1 47 1 96 1 237 1 156 1 149 1 273 2 371 1 110 1 374 1 113 1 
2 1 295 1 192 1 307 1 351 1 342 1 318 1 47 2 96 1 156 1 371 1 274 1 110 1 
158 1 154 1 304 1 193 1 374 1 
158 1 312 1 15 1 128 1 256 2 200 2 193 2 364 1 73 1 131 1 234 1 201 1 154 2 170 1 23 1 303 1 186 1 304 2 374 1 
158 1 306 1 224 1 193 1 94 1 107 1 149 1 273 1 304 1 
158 1 131 1 303 1 
265 1 197 1 151 1 135 1 298 1 194 1 53 1 8 1 
265 1 197 1 151 4 160 1 6 1 133 1 297 1 298 3 361 1 8 4 135 2 37 1 251 2 53 2 
265 1 166 1 197 1 151 2 135 1 298 1 194 1 251 1 53 1 86 1 172 1 8 2 
265 1 197 1 151 3 6 1 160 2 298 1 8 3 343 1 135 1 37 2 194 1 53 1 
48 2 3 1 298 2 209 1 
265 1 197 1 151 1 194 1 27 1 8 1 
265 1 197 1 151 2 135 1 298 1 171 1 194 1 251 1 53 1 8 2 
221 1 
265 1 197 1 151 1 135 1 298 1 194 1 53 1 8 1 
279 1 135 1 298 1 53 1 
265 1 197 1 151 1 135 1 298 1 53 1 8 1 
115 1 151 1 85 1 
265 1 197 1 151 3 135 1 160 2 6 1 37 1 298 1 194 1 246 1 53 1 8 3 
265 1 197 1 151 2 135 1 236 1 298 1 251 1 53 1 8 2 
265 1 197 1 151 1 323 1 297 1 298 1 58 1 8 1 165 1 194 1 78 1 
265 1 197 1 151 1 135 1 298 1 194 1 8 1 
265 1 197 1 151 1 135 2 194 1 53 1 8 1 
265 2 197 2 88 1 151 2 70 1 298 1 8 2 135 1 155 1 194 1 
265 1 197 1 151 3 297 1 298 2 361 1 8 3 258 1 135 1 171 1 194 1 251 2 53 1 
265 1 197 1 81 1 151 2 323 1 298 1 42 1 58 1 8 2 165 2 135 1 259 1 194 1 251 1 53 1 
322 1 265 2 197 2 151 4 297 1 298 2 361 1 8 4 135 1 236 1 194 1 251 2 53 1 
265 1 197 1 151 3 135 1 160 1 171 1 298 1 194 1 251 1 53 1 8 3 
133 1 297 1 298 1 361 1 
135 1 298 1 

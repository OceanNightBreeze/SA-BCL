#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (11,215) 167 277 (224,282) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (13,111,242) (13,111,242) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (13,111,242) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (11,215) 167 277 (224,282) (224,282) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (13,111,242) 124 41 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (13,111,242) 124 136 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (11,215) 167 277 (224,282) (224,282) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (11,215) 167 277 (224,282) (224,282) 19 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 196 274 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (13,111,242) 124 334 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 364 1 86 1 54 6 89 2 118 1 117 1 296 2 346 1 280 3 347 1 163 1 227 9 94 1 189 2 247 4 350 5 306 1 100 2 326 1 101 2 171 1 308 9 327 1 378 1 238 1 360 2 109 1 
51 2 364 1 86 1 54 6 89 2 118 1 117 1 296 2 346 1 280 3 347 1 163 1 227 9 94 1 189 2 247 4 350 5 306 1 100 2 326 1 101 2 171 1 308 9 327 1 378 1 238 1 109 1 360 2 
51 2 364 1 86 1 54 7 89 2 118 1 117 1 296 2 346 1 280 4 347 1 163 1 227 10 94 1 189 2 247 5 350 6 306 1 100 2 326 1 101 2 171 1 308 10 327 1 378 1 238 1 109 1 360 2 
51 2 364 1 86 1 54 4 89 2 118 1 296 2 346 1 280 2 347 1 163 1 227 7 94 1 189 2 247 3 350 4 306 1 100 2 326 1 101 2 171 1 308 7 327 1 378 1 238 1 109 1 360 1 
247 2 51 1 364 1 86 1 54 3 350 3 89 1 100 1 118 1 117 1 296 1 308 4 280 1 360 2 238 1 163 1 227 4 189 1 
86 1 350 1 197 1 306 1 89 1 100 1 118 1 101 1 296 1 308 2 109 1 163 1 227 2 9 1 187 1 189 1 
247 1 86 1 350 2 54 1 100 2 118 1 101 1 296 2 308 3 280 1 163 1 227 3 94 1 
51 1 364 1 86 1 54 7 89 1 367 1 118 1 117 1 296 2 280 3 347 1 163 1 227 9 94 1 189 1 247 4 350 5 100 2 101 1 308 9 378 1 329 1 360 2 238 1 
51 1 364 1 86 1 54 7 89 1 367 1 118 1 117 1 296 2 280 3 347 1 163 1 227 9 94 1 189 1 247 4 350 5 100 2 101 1 308 9 378 1 329 1 360 2 238 1 
114 1 149 1 211 1 
345 1 114 1 131 2 
38 2 249 2 164 2 235 1 167 2 4 2 11 2 277 1 
290 1 135 1 113 1 112 2 275 1 139 1 138 1 4 2 180 1 318 1 277 1 6 1 370 1 61 1 186 1 122 1 8 1 11 2 38 3 303 1 249 2 69 1 164 3 167 2 230 1 285 2 255 1 103 2 129 1 42 2 106 1 235 1 379 1 331 2 330 1 49 1 380 1 
224 1 167 1 11 1 277 1 
38 1 111 1 249 1 13 1 164 1 221 1 
38 1 111 1 249 1 164 1 167 1 4 1 11 1 
242 1 145 1 177 1 40 1 174 1 
242 2 114 1 105 1 145 2 91 1 177 1 211 1 174 1 
242 1 145 1 174 1 
242 1 224 1 145 1 167 1 282 1 177 1 11 1 277 1 
114 1 
242 2 114 1 145 2 91 1 177 1 148 1 211 1 174 1 
271 2 242 5 114 1 250 1 177 2 317 1 181 1 297 1 211 1 130 1 145 5 205 1 34 1 91 1 152 2 267 1 335 1 174 2 270 2 
303 1 38 2 304 1 249 1 112 1 164 2 275 1 138 1 4 1 180 1 103 1 298 1 30 1 42 1 6 1 330 1 186 1 8 1 380 1 11 1 
235 1 149 1 
38 2 249 2 164 2 167 1 4 1 213 1 356 1 235 2 11 1 
304 1 325 1 332 1 
38 1 303 1 112 1 164 1 275 1 138 1 180 1 103 1 42 1 6 1 90 1 235 1 186 1 330 1 380 1 8 1 
30 1 38 3 249 3 164 3 235 1 167 1 4 3 11 3 
38 1 218 1 249 1 164 1 316 1 4 1 11 1 
38 1 218 1 249 1 213 1 164 1 356 1 167 1 4 1 11 1 
38 2 30 1 298 1 111 1 249 2 356 1 164 2 167 1 4 2 124 1 41 1 11 2 
38 2 30 1 249 2 164 2 235 1 4 1 221 1 217 1 11 1 
38 1 30 1 298 1 111 1 249 1 136 1 164 1 4 1 124 1 11 1 
38 2 249 2 304 1 164 2 167 1 4 2 30 1 356 1 332 1 11 2 
38 1 303 1 112 1 164 1 275 1 138 1 180 1 103 1 42 1 6 1 235 1 186 1 330 1 380 1 8 1 
38 1 112 1 164 1 275 1 169 1 138 1 180 1 103 1 29 1 42 1 6 1 235 1 186 1 330 1 8 1 
362 1 133 1 113 2 139 1 28 1 318 1 61 1 304 2 69 1 165 1 325 2 190 1 284 1 230 2 285 2 255 1 307 1 353 1 379 1 82 1 331 4 332 2 336 1 241 1 
38 1 218 1 249 1 107 1 164 1 4 1 215 1 11 1 
38 5 249 5 164 5 375 1 167 1 4 4 27 1 221 1 30 2 298 1 356 1 235 1 217 1 11 4 
38 2 218 1 249 2 164 2 316 1 4 2 215 1 11 2 
279 1 71 1 
279 1 71 1 
134 1 246 1 
134 1 246 1 
134 1 246 1 
223 1 279 1 71 1 
223 1 279 1 71 1 
279 1 71 1 323 1 
354 1 134 1 279 2 71 2 160 1 246 1 
223 1 279 1 71 1 
279 1 71 1 236 1 
279 1 71 1 236 1 
279 1 71 1 236 1 
95 2 242 2 114 1 71 2 324 1 160 1 376 1 199 1 173 1 59 3 286 1 203 1 31 2 319 1 279 2 7 2 145 2 281 2 333 2 
242 1 4 2 59 1 319 1 279 1 7 1 145 1 281 1 11 2 95 1 38 2 67 1 249 2 71 1 164 2 373 1 323 1 251 1 193 1 258 1 81 1 235 1 333 1 110 1 
51 1 89 1 189 1 
89 1 187 1 189 1 
51 2 337 1 339 1 89 3 187 1 188 1 
51 1 14 1 339 1 89 2 187 1 188 1 
51 1 339 2 89 2 187 1 188 1 
362 1 271 1 242 5 114 2 3 1 87 1 177 4 315 1 297 3 345 1 344 2 145 5 91 1 125 1 67 1 373 1 165 1 284 1 17 1 211 1 193 1 353 1 257 2 131 3 152 1 153 2 359 1 267 2 335 1 174 1 270 1 175 1 
338 1 362 3 271 2 242 9 114 5 3 3 177 7 315 2 201 1 297 8 345 3 344 6 145 9 91 1 125 1 67 4 209 1 165 3 284 3 17 2 75 1 40 5 211 1 353 3 257 6 77 5 130 1 131 9 152 2 84 1 267 6 335 1 174 6 155 1 270 2 
362 1 271 1 242 3 114 3 3 1 177 2 87 1 315 1 297 3 345 2 344 2 145 3 67 1 165 1 17 1 284 1 211 1 353 1 257 2 130 1 131 4 152 1 153 1 267 2 175 1 270 1 
338 1 362 2 271 1 242 4 114 4 3 2 87 1 177 3 315 1 297 5 345 3 344 4 145 4 67 2 165 2 17 1 284 2 75 1 211 1 353 2 257 4 130 1 131 7 152 1 153 2 84 1 267 4 270 1 175 1 
314 1 180 1 149 1 
0 1 180 1 
146 1 
6 1 180 1 
156 1 314 2 6 1 340 1 330 1 180 3 
6 1 330 1 180 1 
73 1 180 1 
113 4 165 1 230 3 58 1 307 3 353 1 76 1 141 1 142 1 20 1 82 2 371 2 331 7 66 1 288 1 207 1 269 1 
113 4 165 1 230 3 58 1 307 3 353 1 76 1 141 1 142 1 20 1 82 2 371 2 331 7 66 1 288 1 207 1 269 1 
113 4 165 1 55 1 230 3 58 1 307 3 353 1 76 1 142 1 141 1 20 1 82 2 371 2 331 7 66 1 288 1 207 1 269 1 
362 3 291 1 113 16 2 1 115 1 3 3 56 4 139 1 58 2 142 1 141 1 61 1 371 3 348 1 66 2 207 5 98 1 69 1 165 4 252 1 284 3 230 15 285 2 128 3 307 10 353 4 76 2 20 2 379 1 82 5 331 31 262 1 288 1 269 1 
219 1 113 5 69 2 165 1 230 4 139 2 285 4 58 1 307 4 353 1 76 1 142 1 141 1 20 1 61 2 82 3 379 2 371 2 331 9 262 1 66 1 65 1 207 1 269 1 
51 1 337 1 112 1 86 1 54 1 365 1 275 1 89 2 138 1 118 1 296 1 222 1 343 1 225 1 163 1 227 2 187 1 189 1 349 1 350 1 351 1 100 1 101 1 231 1 103 1 42 1 308 2 355 1 289 1 381 1 
51 1 337 1 112 1 52 1 365 1 54 2 275 1 89 2 138 1 118 1 296 1 222 1 343 1 225 1 163 1 227 3 187 1 189 1 350 1 351 1 100 1 127 1 101 1 103 1 42 1 308 3 355 1 289 1 239 1 381 1 
337 1 51 1 112 1 52 1 365 1 54 2 275 1 89 2 138 1 118 1 343 1 225 1 163 1 227 2 187 1 189 1 350 1 351 1 101 1 103 1 42 1 308 2 355 1 289 1 239 1 
112 1 365 2 275 1 88 1 138 1 180 1 296 1 202 1 60 1 6 1 186 1 225 2 227 1 15 1 229 1 100 1 127 1 101 2 103 1 42 1 308 1 151 1 289 2 
51 1 337 1 112 1 52 1 86 1 365 1 275 1 89 2 138 1 296 1 222 1 343 1 225 1 227 1 187 1 189 1 349 1 351 1 100 1 101 1 103 1 42 1 308 1 355 1 289 1 381 1 
233 1 
242 4 114 1 112 2 116 2 243 2 159 1 198 1 200 2 295 1 297 2 5 1 60 1 345 2 6 1 15 1 210 1 78 1 131 2 80 1 214 1 267 2 174 6 270 1 176 2 271 1 275 1 137 1 315 1 138 1 178 2 140 1 180 1 145 4 91 3 186 2 39 1 102 1 103 2 42 2 46 2 47 2 152 1 108 2 335 1 
242 2 198 1 210 1 39 1 102 1 145 2 91 1 108 1 214 1 148 1 174 2 
242 1 46 1 47 1 145 1 210 1 198 1 39 1 214 1 102 1 
242 2 243 1 198 1 210 1 39 1 102 1 145 2 47 1 46 1 91 1 108 1 148 1 214 1 174 2 
271 1 242 4 114 2 158 1 116 2 243 4 159 1 198 1 200 2 178 2 297 1 277 1 345 2 224 1 145 4 91 3 282 1 64 1 148 1 11 1 283 1 210 1 167 1 39 1 211 2 102 1 47 3 46 3 80 1 357 1 152 1 108 4 83 1 214 1 267 1 335 1 174 7 176 2 270 1 
271 1 242 3 114 2 243 2 116 2 159 1 198 1 137 1 200 2 178 2 297 1 345 2 145 3 91 2 210 1 39 1 211 1 102 1 131 2 46 2 47 2 80 1 152 1 108 2 214 1 335 1 267 1 174 4 270 1 176 2 
271 1 242 3 114 1 243 2 116 2 159 1 198 1 200 2 178 2 297 1 345 2 145 3 91 2 64 1 283 1 210 1 39 1 211 1 102 1 46 2 47 2 80 1 357 1 152 1 108 2 214 1 335 1 267 1 174 4 176 2 270 1 
271 1 242 3 114 1 243 2 116 2 159 1 198 1 200 2 178 2 297 1 345 2 145 3 91 2 64 1 283 1 210 1 39 1 211 1 102 1 46 2 47 2 80 1 357 1 152 1 108 2 214 1 335 1 267 1 174 4 176 2 270 1 
271 1 195 2 242 3 114 1 243 2 116 2 159 1 198 1 178 2 297 1 120 1 184 1 145 3 185 1 91 2 283 1 210 1 39 1 211 1 102 1 131 2 46 2 47 2 152 1 108 2 264 2 214 1 335 1 267 1 174 4 270 1 
271 1 242 3 114 1 158 1 116 2 243 3 159 1 198 1 200 2 178 2 297 1 345 2 145 3 91 2 64 1 283 1 210 1 39 1 211 1 102 1 47 3 46 3 80 1 357 1 152 1 108 3 214 1 335 1 267 1 174 5 176 2 270 1 
271 1 242 3 114 1 158 1 116 2 243 3 159 1 198 1 200 2 178 2 297 1 345 2 145 3 91 2 64 1 283 1 210 1 39 1 211 1 102 1 47 3 46 3 80 1 357 1 152 1 108 3 214 1 335 1 267 1 174 5 176 2 270 1 
271 1 242 3 195 2 114 1 243 2 116 2 159 1 198 1 137 1 178 2 297 1 145 3 185 1 91 2 210 1 39 1 211 1 102 1 131 2 46 2 47 2 152 1 108 2 214 1 264 2 335 1 267 1 174 4 270 1 
304 1 113 3 69 1 165 1 325 1 230 3 139 1 285 2 149 1 58 1 28 1 307 2 255 1 353 1 318 1 76 1 141 1 142 1 61 1 235 2 82 2 379 1 371 1 331 6 332 1 269 1 
362 1 113 8 2 1 3 2 366 1 56 3 139 2 318 2 61 2 226 1 206 1 207 1 304 11 98 1 69 2 165 1 325 11 284 2 352 1 170 1 230 6 285 4 307 2 255 1 128 3 353 2 129 1 106 1 235 1 82 1 379 2 331 14 332 4 
112 1 113 1 275 1 138 1 139 1 4 1 180 1 318 1 30 1 298 1 6 1 90 1 61 1 186 1 226 1 8 1 208 1 11 1 303 1 38 2 249 1 69 1 164 2 72 1 230 1 285 2 255 1 103 1 42 1 129 1 106 1 235 1 379 1 330 1 331 2 332 1 380 1 361 1 
112 3 113 10 52 1 3 2 4 1 58 1 298 1 6 2 61 3 245 2 122 2 8 2 207 4 11 1 303 2 249 1 304 7 69 3 164 3 165 3 255 3 307 8 353 3 76 1 129 1 82 4 265 1 269 1 362 2 24 1 275 2 139 3 138 2 180 2 318 3 30 1 142 1 141 1 369 2 144 1 371 1 186 1 226 1 38 3 325 7 284 2 230 10 285 6 103 3 42 3 328 2 44 2 106 1 235 2 379 3 331 20 330 2 332 7 380 2 
135 2 112 7 113 1 52 1 275 2 293 1 138 2 139 2 4 1 180 3 28 1 182 1 318 2 30 1 60 1 6 2 61 2 162 1 186 2 147 1 11 1 38 1 249 1 12 1 15 1 69 2 164 1 253 1 18 1 230 1 285 4 231 1 255 2 103 8 42 8 129 1 106 1 379 2 331 2 
85 1 362 1 113 1 3 1 139 1 4 1 318 1 61 1 226 1 11 1 38 1 304 1 249 1 69 1 164 1 165 1 325 1 167 1 284 1 230 2 285 2 307 1 255 1 353 1 356 1 82 1 379 1 331 3 332 1 
133 1 304 1 113 2 69 1 325 1 284 1 139 1 285 2 28 1 307 1 255 1 318 1 353 1 61 1 379 1 331 2 332 1 207 1 
362 1 304 1 69 1 165 1 325 1 139 1 230 2 285 2 28 1 307 1 255 1 318 1 61 1 82 1 379 1 331 2 332 1 241 1 
362 1 304 2 113 2 69 1 165 1 3 1 325 2 284 1 230 2 139 1 285 2 28 1 307 2 255 1 318 1 353 1 61 1 82 1 379 1 331 4 332 2 207 1 
133 1 304 1 113 2 69 1 325 1 284 1 293 1 139 1 285 2 307 1 255 1 318 1 353 1 61 1 379 1 331 2 332 1 207 1 
362 1 304 1 69 1 165 1 325 1 293 1 139 1 230 2 285 2 307 1 255 1 318 1 61 1 82 1 379 1 331 2 332 1 241 1 
362 1 304 2 113 2 69 1 165 1 3 1 325 2 284 1 293 1 230 2 139 1 285 2 307 2 255 1 318 1 353 1 61 1 82 1 379 1 331 4 332 2 207 1 
362 1 304 2 113 2 69 1 165 1 3 1 325 2 284 1 230 2 139 1 285 2 307 2 255 1 318 1 353 1 61 1 82 1 379 1 331 4 332 2 207 1 
113 1 112 1 275 1 138 1 139 1 180 1 318 1 6 1 61 1 186 1 122 1 8 1 303 1 38 1 69 1 164 1 230 1 285 2 255 1 103 1 42 1 129 1 106 1 235 1 379 1 331 2 330 1 380 1 
113 1 112 1 275 1 138 1 139 1 180 1 29 1 318 1 6 1 61 1 186 1 8 1 38 1 372 1 69 1 164 1 169 1 230 1 285 2 255 1 103 1 42 1 129 1 106 1 235 1 379 1 331 2 330 1 
362 1 113 2 3 1 139 1 318 1 61 1 226 1 207 1 304 2 69 1 165 1 325 2 284 1 230 2 285 2 255 1 307 2 353 1 379 1 82 1 331 4 332 2 
362 1 113 2 112 1 3 1 275 1 138 1 139 1 180 1 318 1 6 1 61 1 122 1 8 1 207 1 303 1 38 1 304 2 69 1 164 1 165 1 325 2 284 1 230 2 285 2 231 1 307 2 255 1 353 1 103 1 42 1 328 1 82 1 379 1 331 4 330 1 332 2 380 1 
362 1 113 2 341 1 3 1 139 1 4 1 318 1 61 1 226 1 207 1 11 1 38 1 249 1 304 1 69 1 164 1 165 1 325 1 167 1 284 1 230 1 285 2 307 1 255 1 353 1 356 1 379 1 331 3 332 1 
113 20 1 1 2 3 3 4 56 4 57 1 58 1 61 3 63 1 207 4 69 3 70 1 165 5 126 1 254 2 307 8 128 3 353 5 76 1 132 1 82 4 262 1 263 1 269 1 362 4 219 1 273 4 139 3 26 1 141 1 142 1 32 1 33 1 371 1 98 1 99 1 284 4 230 21 285 6 150 1 234 1 379 3 331 41 
362 3 219 1 1 1 113 20 2 3 273 4 3 4 56 4 26 1 57 1 139 4 58 1 142 1 141 1 32 1 33 1 61 4 63 1 371 1 207 3 98 1 69 4 99 1 70 1 165 4 126 1 284 4 254 2 230 18 285 8 128 3 307 7 353 5 76 1 150 1 132 1 234 1 82 4 379 4 331 38 262 2 263 1 269 1 
362 7 219 1 1 1 113 27 2 2 273 4 3 7 56 4 57 1 139 2 58 1 142 1 141 1 32 1 61 2 63 1 371 1 207 7 98 2 69 2 99 1 70 1 165 8 126 1 284 7 254 1 170 2 230 25 285 4 128 4 307 14 353 8 76 1 150 1 132 1 234 1 82 7 379 2 331 52 262 1 263 1 269 1 
362 3 219 1 1 2 113 9 2 1 273 2 3 3 56 2 26 1 139 2 32 1 61 2 207 3 98 1 69 2 165 3 126 1 284 3 254 1 230 10 285 4 172 1 128 1 307 6 353 3 132 1 82 3 379 2 331 19 263 1 
362 2 219 1 1 1 113 14 2 2 273 4 3 3 56 2 139 3 57 1 32 1 61 3 63 1 207 2 69 3 99 1 70 1 165 2 126 1 284 3 254 2 230 12 285 6 307 4 128 2 353 3 150 1 132 2 234 1 82 2 379 3 331 26 262 2 263 1 
286 1 95 1 279 1 7 1 71 1 160 1 281 1 376 1 333 1 74 1 
323 1 110 1 
95 1 279 1 7 1 71 1 281 1 220 1 333 1 276 1 119 1 
95 1 242 1 114 1 71 1 160 1 376 1 199 1 173 1 59 2 286 1 203 1 31 1 319 1 279 1 145 1 7 1 281 1 333 1 
95 1 242 1 114 1 71 1 160 1 376 1 199 1 173 1 59 2 286 1 203 1 31 1 319 1 279 1 145 1 7 1 281 1 333 1 
95 1 242 1 114 1 71 1 160 1 376 1 199 1 173 1 59 2 286 1 203 1 31 1 319 1 279 1 145 1 7 1 281 1 333 1 
354 1 223 1 23 1 
354 1 223 1 23 1 
236 1 10 1 
354 1 236 1 10 1 
258 1 81 1 
242 1 177 1 4 2 59 1 31 1 279 1 145 1 7 1 281 1 11 2 38 2 95 1 67 1 249 2 164 2 71 1 373 1 323 1 251 1 173 1 193 1 258 1 81 1 235 1 261 1 333 1 110 1 
223 1 23 1 
354 1 236 1 10 1 
135 2 113 1 112 2 275 1 138 1 294 1 139 1 180 1 182 1 318 1 278 1 6 1 61 1 226 1 123 1 92 1 147 1 38 2 249 2 305 1 69 1 164 2 230 1 285 2 255 1 103 2 42 2 129 1 106 1 379 1 331 2 
51 1 337 1 112 2 52 1 16 1 275 1 89 2 244 1 351 1 138 1 231 1 103 2 42 2 343 1 225 1 187 1 381 1 312 1 189 1 
51 1 337 1 112 1 52 1 16 1 275 1 89 2 351 1 138 1 103 1 42 1 343 1 225 1 187 1 266 1 381 1 189 1 
112 1 15 1 53 1 275 1 138 1 180 1 103 1 42 1 202 1 60 1 6 1 186 1 225 1 312 1 
51 1 337 1 112 1 52 1 16 1 275 1 89 2 244 1 351 1 138 1 103 1 42 1 343 1 225 1 187 1 381 1 312 1 189 1 
256 1 
114 1 34 1 149 1 267 1 181 1 297 1 211 1 
271 1 242 1 114 2 200 1 297 1 345 1 145 1 91 1 211 1 131 1 80 1 152 1 267 1 335 1 174 1 176 1 270 1 
0 3 242 5 112 3 114 8 340 1 3 2 295 1 342 2 297 9 344 6 345 6 6 3 121 2 299 1 301 2 165 2 168 2 73 2 211 2 353 2 257 6 310 2 131 12 311 1 268 1 267 8 174 5 270 4 271 4 362 2 313 1 314 2 275 3 315 2 138 4 180 10 181 1 320 1 145 5 34 1 91 3 186 1 96 2 284 2 231 1 103 3 42 3 232 2 104 2 44 2 152 4 330 3 237 2 335 4 
271 2 362 2 242 1 114 5 2 1 3 2 56 1 315 1 57 1 295 1 297 8 344 5 345 3 121 1 145 1 63 1 91 1 99 1 70 1 165 2 374 1 284 2 128 1 211 2 353 2 257 5 150 1 131 6 152 2 237 2 154 1 335 2 267 5 174 1 270 2 
271 1 242 1 165 1 167 1 19 1 58 1 297 2 277 1 353 1 76 1 224 1 145 1 357 1 152 1 282 1 237 2 267 1 335 1 269 1 11 1 270 1 
271 1 114 1 181 1 211 1 297 1 34 1 152 1 335 1 267 1 270 1 
362 2 114 5 3 2 165 2 284 2 297 5 353 2 257 5 344 5 345 5 44 1 131 10 121 1 237 2 267 5 
242 1 114 1 145 1 91 1 211 1 174 1 
271 2 242 3 112 4 313 1 275 1 315 2 138 1 180 1 140 1 295 2 297 2 60 1 6 1 299 2 145 3 91 2 186 2 248 1 15 1 103 4 42 4 130 1 78 1 152 2 50 1 335 1 267 2 174 4 270 2 
112 1 275 1 138 1 139 1 4 2 180 1 277 1 318 1 6 1 61 1 186 1 122 1 8 1 11 2 38 3 303 1 249 2 69 1 164 3 167 2 230 1 285 2 255 1 103 1 129 1 42 1 235 1 379 1 331 1 330 1 49 1 380 1 
271 1 114 4 315 1 295 1 297 1 211 2 257 2 344 2 345 2 131 4 152 1 371 1 267 2 335 1 270 1 
7 1 281 1 240 1 
7 1 281 1 240 1 
286 1 309 1 81 1 7 1 281 1 
7 1 281 1 240 1 
368 1 7 1 281 1 
368 1 7 1 281 1 
368 1 7 1 281 1 
7 1 281 1 
279 1 71 1 
219 1 113 4 2 1 56 1 139 1 58 1 141 1 142 1 61 1 371 1 69 1 165 1 230 4 285 2 128 1 307 2 353 1 76 1 150 1 379 1 82 2 331 8 269 1 
219 1 113 6 2 1 3 1 56 2 139 2 58 1 142 1 141 1 61 2 371 1 207 1 98 1 69 2 165 1 284 1 230 5 285 4 128 1 307 3 353 2 76 1 150 1 82 2 379 2 331 11 22 1 269 1 
362 2 219 1 113 9 2 1 3 2 56 1 139 3 57 1 58 1 142 1 141 1 61 3 63 1 371 1 207 1 69 3 99 1 70 1 165 3 284 2 230 10 285 6 128 1 307 4 353 3 76 1 150 1 379 3 82 3 331 19 262 1 22 1 269 1 
362 1 219 1 113 10 2 1 3 2 56 1 139 3 57 1 58 1 142 1 141 1 61 3 63 1 371 1 207 2 69 3 70 1 99 1 165 2 284 2 230 7 285 6 128 1 307 5 353 3 76 1 150 1 379 3 82 3 331 17 262 1 22 1 269 1 
219 1 113 4 2 1 56 1 139 1 58 1 141 1 142 1 61 1 371 1 69 1 165 1 230 4 285 2 128 1 307 2 353 1 76 1 150 1 379 1 82 2 331 8 269 1 
362 2 219 1 113 6 2 1 3 2 56 1 139 1 57 1 61 1 63 1 207 1 69 1 70 1 99 1 165 2 284 2 230 6 285 2 128 1 307 2 353 2 150 1 379 1 82 1 331 12 
362 1 219 1 113 10 2 1 3 2 56 1 139 4 57 1 58 1 142 1 141 1 61 4 63 1 371 1 207 2 69 4 99 1 70 1 165 2 284 2 230 8 285 8 128 1 307 5 353 3 76 1 150 1 379 4 82 3 331 18 262 2 22 1 269 1 
362 2 219 1 113 9 2 1 3 3 56 1 139 4 26 1 57 1 61 4 63 1 207 3 69 4 99 1 70 1 165 2 284 3 230 7 285 8 128 1 307 6 353 3 150 1 379 4 82 3 331 16 262 2 
113 3 165 1 230 4 58 3 307 6 353 1 76 3 141 1 142 2 82 3 331 7 207 3 269 1 
362 1 219 1 113 10 2 1 3 2 56 1 139 4 26 1 57 1 58 1 142 1 141 1 61 4 63 1 371 1 207 1 69 4 99 1 70 1 165 2 284 2 230 8 285 8 128 1 307 4 353 3 76 1 150 1 379 4 82 3 331 18 262 2 269 1 
113 4 69 2 165 1 230 4 139 2 285 4 58 1 307 3 353 1 76 1 141 1 142 1 61 2 82 2 379 2 371 1 331 8 262 1 207 1 269 1 
113 3 165 1 230 3 149 1 58 1 307 2 353 1 76 1 141 1 142 1 82 2 371 1 331 6 269 1 
362 1 113 2 69 1 165 1 3 1 284 1 230 2 139 1 285 2 307 2 353 1 61 1 82 1 379 1 331 4 22 1 207 1 
362 1 113 3 98 1 2 1 165 1 3 1 56 2 284 1 230 4 128 1 307 2 353 1 82 1 331 7 207 1 
362 2 113 11 3 2 56 2 139 2 58 2 142 1 141 1 61 2 371 1 206 1 207 4 98 1 69 2 165 3 284 2 230 12 170 1 285 4 307 9 128 2 353 3 76 2 260 1 82 5 379 2 331 23 262 2 269 1 
331 1 56 1 230 1 
113 1 331 1 128 1 
362 1 113 3 69 1 3 1 165 1 284 1 139 1 230 3 285 2 307 3 353 1 44 1 61 1 379 1 82 2 331 6 22 1 207 1 
362 2 219 1 113 6 2 1 3 2 56 1 139 1 57 1 61 1 63 1 207 1 69 1 70 1 99 1 165 2 284 2 230 6 285 2 128 1 307 2 353 2 150 1 379 1 82 1 331 12 
113 3 165 1 230 3 58 1 307 2 353 1 76 1 82 1 331 6 207 1 269 1 
113 1 69 1 230 2 139 1 285 2 58 1 307 2 76 1 142 1 141 1 260 1 61 1 82 1 379 1 331 3 262 1 207 1 
219 1 113 5 69 1 165 2 139 1 230 5 285 2 19 1 58 2 307 5 353 2 76 2 61 1 379 1 82 3 331 10 207 2 269 1 
219 1 113 2 69 1 284 1 139 1 285 2 307 1 353 1 61 1 379 1 331 2 207 1 
362 1 219 1 113 2 69 1 165 1 3 1 284 1 230 2 139 1 285 2 307 2 353 1 61 1 82 1 379 1 331 4 207 1 
219 1 113 1 69 3 26 1 230 2 139 3 285 6 58 1 307 2 76 1 260 1 61 3 379 3 82 1 331 3 262 1 207 1 
362 3 291 1 219 1 113 16 2 1 115 1 3 3 56 4 26 1 139 5 58 3 142 1 141 1 61 5 371 1 207 5 98 1 69 5 165 5 252 1 284 3 230 18 285 10 128 3 307 12 353 5 76 3 260 1 379 5 82 7 331 34 262 2 22 1 269 2 
38 1 249 1 196 1 164 1 235 1 221 1 217 1 
287 1 322 1 196 1 274 1 292 1 302 1 
42 1 60 1 15 1 112 1 6 1 275 1 186 1 138 1 180 1 149 1 103 1 
38 2 303 1 249 1 112 1 164 2 275 1 138 1 4 1 180 1 103 1 30 1 42 1 6 1 235 1 330 1 186 1 8 1 11 1 
38 2 303 1 218 1 249 2 157 1 112 1 164 2 275 1 73 1 138 1 4 2 180 3 103 1 30 1 42 1 104 1 6 2 107 1 299 1 235 1 330 2 8 1 11 1 
218 1 112 2 157 1 275 1 138 1 4 2 180 3 29 1 30 1 6 2 299 1 300 1 8 1 11 1 38 2 249 2 164 2 73 1 103 2 42 2 104 1 107 1 235 1 330 2 
0 1 242 2 114 1 112 3 314 1 275 1 73 1 138 1 180 4 342 1 211 1 212 1 103 3 42 3 104 1 6 1 145 2 299 1 300 1 186 1 330 1 35 1 174 1 
0 1 242 2 114 1 112 3 314 1 275 1 73 1 138 1 180 4 342 1 211 1 103 3 42 3 232 1 104 1 6 1 145 2 299 1 300 1 186 1 330 1 174 1 
42 1 112 1 275 1 18 1 138 1 103 1 
135 1 12 1 112 6 52 1 340 1 253 1 275 2 18 1 138 3 180 3 231 1 103 7 42 7 6 2 183 1 162 1 186 2 330 1 358 1 147 1 228 1 
113 3 112 1 275 1 138 1 139 2 4 1 58 1 180 1 318 2 30 1 142 1 141 1 369 1 6 1 61 2 371 1 122 1 226 1 123 1 8 1 11 1 38 2 303 1 304 1 249 1 69 2 164 2 165 1 325 1 230 3 285 4 231 1 307 2 255 2 353 1 103 1 76 1 42 1 328 1 235 2 82 2 379 2 331 6 330 1 332 1 380 1 269 1 
271 2 0 1 242 3 114 1 112 1 313 1 314 1 177 1 180 2 181 1 342 1 297 1 145 3 34 1 91 1 186 1 301 1 96 1 168 1 211 1 103 1 42 1 232 1 152 2 267 1 335 2 174 2 270 2 
112 2 314 1 340 1 275 1 18 1 138 2 180 2 231 1 103 2 42 2 320 1 6 1 330 1 
112 4 15 1 275 1 138 1 180 1 231 1 103 4 42 4 60 1 6 1 300 1 186 1 321 1 
112 2 275 1 138 2 179 1 180 1 103 2 42 2 204 1 144 1 6 1 299 1 183 1 330 1 358 1 
343 1 42 1 112 1 275 1 186 1 89 1 138 1 187 1 189 1 103 1 
112 2 52 1 275 1 294 1 138 1 180 1 231 1 103 2 42 2 6 1 147 1 
12 1 15 1 112 4 275 2 253 1 138 2 180 3 231 1 103 5 42 5 60 1 6 2 299 1 186 1 321 1 147 1 
15 1 112 4 166 1 275 2 253 1 138 2 180 3 231 1 103 5 42 5 60 1 6 2 299 1 186 1 321 1 147 1 
38 2 249 1 112 1 164 2 275 1 138 1 4 1 180 1 103 1 29 1 30 1 42 1 6 1 235 1 330 1 186 1 8 1 11 1 
112 1 340 1 275 1 138 2 180 1 103 1 42 1 6 1 299 1 183 1 330 1 358 1 228 1 
97 1 48 1 161 1 235 1 62 1 
111 1 97 1 242 1 45 1 143 1 145 1 48 1 161 1 62 1 177 1 334 1 124 1 
38 1 249 1 305 1 164 1 278 1 48 1 161 1 62 1 92 1 
45 1 161 1 334 1 
350 1 163 1 118 1 149 1 
308 1 350 1 163 1 100 1 118 1 227 1 296 1 
101 1 289 1 227 1 
308 3 68 1 86 1 350 1 109 2 163 1 100 1 36 1 118 1 227 3 216 1 296 1 
308 2 350 1 54 1 360 1 163 1 100 1 118 1 227 2 296 1 
247 1 51 1 86 1 350 1 89 1 100 1 296 1 308 1 238 1 227 1 189 1 
308 1 86 1 350 1 100 1 118 1 227 1 296 1 
308 1 86 1 163 1 100 1 118 2 227 1 296 1 
86 1 350 1 100 2 192 1 191 1 118 1 296 2 308 2 21 1 227 2 
247 1 86 1 54 2 350 2 100 1 118 1 296 1 308 3 378 1 280 1 347 1 163 1 227 3 
337 1 51 1 86 1 350 1 54 1 89 2 100 1 118 1 296 1 308 2 259 1 163 1 187 1 227 2 189 1 
247 1 86 1 54 2 350 2 100 2 118 1 117 1 296 2 308 4 280 1 360 1 163 1 227 4 
308 1 86 1 350 1 163 1 100 1 118 1 227 1 296 1 
247 1 68 1 54 2 350 3 100 1 118 2 296 1 308 4 280 1 109 1 163 2 93 1 227 4 216 1 
86 1 350 1 54 1 100 1 377 1 367 1 118 1 296 1 308 2 43 1 163 1 227 2 
194 1 68 2 86 1 350 1 100 1 118 1 296 1 308 3 109 2 163 1 227 3 216 1 
79 1 25 1 350 2 37 2 
308 1 86 1 272 1 100 1 227 1 296 1 
308 2 378 1 86 1 350 1 54 1 163 1 100 1 118 1 227 2 296 1 
363 1 
308 1 86 1 350 1 163 1 100 1 118 1 227 1 296 1 
86 1 54 1 350 1 100 1 118 1 296 1 308 3 378 1 109 1 163 1 227 3 
247 1 350 1 280 1 93 1 
350 1 118 1 

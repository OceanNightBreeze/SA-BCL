#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (165,318) 238 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (61,190) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (15,208,304) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (61,190) (61,190) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 236 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (15,208,304) (15,208,304) 108 217 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 236 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 283 143 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (165,318) (165,318) (25,87) 1 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (165,318) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (165,318) (165,318) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (61,190) (61,190) 3 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (165,318) 238 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 19 (8,113) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 19 (8,113) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 19 (75,245) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 19 (75,245) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 141 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
246 2 249 1 200 1 203 1 251 2 253 9 255 5 172 1 14 1 264 1 53 2 267 3 99 1 18 1 274 1 225 6 226 1 185 9 106 1 187 1 64 2 235 1 151 2 111 1 67 2 332 4 300 2 198 1 
246 2 249 1 200 1 203 1 251 2 253 9 255 5 172 1 14 1 264 1 53 2 267 3 99 1 18 1 274 1 225 6 226 1 185 9 106 1 187 1 64 2 235 1 151 2 111 1 67 2 332 4 300 2 198 1 
246 2 249 1 200 1 203 1 251 2 253 10 255 6 172 1 14 1 264 1 53 2 267 4 99 1 18 1 274 1 225 7 226 1 185 10 106 1 187 1 64 2 235 1 151 2 111 1 67 2 332 5 300 2 198 1 
246 2 249 1 200 1 203 1 251 2 253 7 255 4 172 1 14 1 53 2 267 2 99 1 18 1 274 1 225 4 226 1 185 7 106 1 187 1 64 2 235 1 151 2 111 1 67 1 332 3 300 2 198 1 
246 1 225 3 185 4 251 1 253 4 255 3 172 1 64 1 235 1 151 1 111 1 67 2 264 1 332 2 53 1 267 1 18 1 198 1 
246 1 223 1 185 2 203 1 251 1 253 2 287 1 255 1 288 1 64 1 235 1 151 1 14 1 111 1 300 1 18 1 
246 2 225 1 200 1 185 3 253 3 255 2 235 1 151 2 111 1 332 1 267 1 300 1 18 1 
246 2 225 7 200 1 185 9 251 1 106 1 253 9 187 1 255 5 172 1 109 1 64 1 291 1 235 1 151 2 111 1 67 2 264 1 53 1 332 4 267 3 300 1 18 1 198 1 
246 2 225 7 200 1 185 9 251 1 106 1 253 9 187 1 255 5 172 1 109 1 64 1 291 1 235 1 151 2 111 1 67 2 264 1 53 1 332 4 267 3 300 1 18 1 198 1 
279 1 236 1 330 1 
154 1 330 1 210 2 
131 2 45 2 231 1 207 2 329 2 168 2 173 2 
248 1 165 1 45 1 231 1 207 1 168 1 329 1 173 1 131 1 238 1 97 2 218 2 240 1 82 2 338 1 138 1 
131 1 45 1 231 1 207 1 329 1 168 1 173 1 190 1 
213 1 15 1 45 1 207 1 329 1 208 1 
131 1 45 1 207 1 329 1 168 1 208 1 173 1 
317 1 70 1 27 1 76 1 304 1 
279 1 317 1 2 1 297 1 27 2 76 1 330 1 304 2 
317 1 27 1 304 1 
131 1 45 1 231 1 61 1 207 1 27 1 76 1 329 1 168 1 173 1 190 1 304 1 
330 1 
279 1 317 1 297 1 74 1 27 2 76 1 330 1 304 2 
104 1 276 1 279 1 84 2 306 1 228 1 27 5 330 1 91 1 93 1 317 2 34 1 294 1 195 2 297 1 76 2 156 2 243 1 304 5 
236 1 
259 1 131 1 45 2 207 2 168 1 107 1 329 2 173 1 
131 1 97 1 45 1 218 1 298 1 207 1 329 1 82 1 138 1 173 1 182 1 
131 3 45 3 207 3 168 1 329 3 182 1 173 3 
131 1 45 1 207 1 329 1 173 1 
259 1 131 1 45 1 207 1 329 1 168 1 107 1 173 1 
131 2 45 2 298 1 207 2 168 1 107 1 329 2 173 2 182 1 
213 1 131 1 45 2 207 2 329 2 137 1 173 1 182 1 
131 1 45 1 298 1 207 1 329 1 173 1 182 1 
131 1 45 1 207 1 329 1 168 1 107 1 173 1 
97 1 218 1 82 1 138 1 
97 1 218 1 82 1 138 1 
85 1 68 1 216 1 296 1 105 2 37 1 158 1 289 1 
131 1 45 1 335 1 207 1 329 1 173 1 
213 1 131 4 124 1 45 5 298 1 207 5 312 1 168 1 107 1 329 5 137 1 173 4 182 2 
131 1 45 1 207 1 329 1 173 1 
194 1 285 1 
194 1 285 1 
171 1 303 1 
171 1 303 1 
171 1 303 1 
194 1 229 1 285 1 
194 1 229 1 285 1 
224 1 194 1 285 1 
194 2 261 1 186 1 285 2 171 1 303 1 
194 1 229 1 285 1 
194 1 285 1 110 1 
194 1 285 1 110 1 
194 1 285 1 110 1 
247 1 161 1 227 1 285 2 327 2 308 1 27 2 145 1 330 1 191 1 211 2 194 2 214 2 261 1 115 2 36 2 271 3 181 1 304 2 
224 1 227 1 42 1 45 2 285 1 327 1 167 1 207 2 27 1 329 2 173 2 211 1 194 1 316 1 214 1 131 2 196 1 58 1 77 1 36 1 78 1 271 1 304 1 
251 1 53 1 64 1 
223 1 251 1 64 1 
223 1 175 1 53 2 251 3 54 1 38 1 
223 1 175 1 53 1 251 2 57 1 38 1 
223 1 175 2 53 1 251 2 38 1 
201 2 84 1 42 1 164 2 310 1 46 1 90 2 91 3 210 3 258 1 316 1 317 1 221 1 277 1 276 1 279 1 284 1 286 1 27 5 328 1 330 2 63 1 149 1 195 1 154 1 297 1 156 1 76 4 77 1 243 2 81 1 304 5 
201 6 84 2 306 1 164 6 4 1 46 2 313 5 91 8 210 9 212 1 258 3 317 6 215 1 52 1 221 3 219 1 276 1 279 1 284 3 286 3 27 9 330 5 63 2 149 1 192 1 70 5 195 2 154 3 297 1 77 4 76 7 156 2 243 6 81 3 304 9 
201 2 84 1 306 1 164 2 310 1 46 1 91 3 90 1 210 4 258 1 221 1 279 1 284 1 328 1 27 3 286 1 330 3 63 1 195 1 154 2 76 2 156 1 77 1 243 2 81 1 304 3 
201 4 84 1 306 1 164 4 310 1 46 1 91 5 90 2 210 7 258 2 212 1 215 1 52 1 221 2 279 1 284 2 27 4 328 1 286 2 330 4 63 1 195 1 154 3 156 1 77 2 76 3 243 4 81 2 304 4 
23 1 236 1 155 1 
155 1 270 1 
244 1 
177 1 155 1 
23 2 281 1 250 1 177 1 155 3 242 1 
281 1 177 1 155 1 
155 1 30 1 
162 1 199 1 326 2 43 1 305 1 307 4 204 7 284 1 169 3 234 3 174 1 132 1 239 2 221 1 299 1 118 1 340 1 
162 1 199 1 326 2 43 1 305 1 307 4 204 7 284 1 169 3 234 3 174 1 132 1 239 2 221 1 299 1 118 1 340 1 
162 1 199 1 326 2 43 1 305 1 307 4 204 7 284 1 169 3 234 3 174 1 16 1 132 1 239 2 221 1 299 1 118 1 340 1 
199 2 162 5 305 1 43 2 163 3 204 31 307 16 88 1 169 10 174 1 258 3 132 1 216 1 96 1 265 4 221 4 24 1 326 5 284 4 105 2 286 3 146 1 234 15 33 1 112 1 239 3 296 1 299 2 118 2 37 1 79 1 81 3 158 1 340 1 
199 1 162 1 43 1 204 9 307 5 126 1 169 4 174 1 216 2 96 1 132 1 98 1 221 1 326 3 284 1 105 4 234 4 239 2 296 2 299 1 118 1 37 2 158 2 340 1 
160 1 246 1 83 1 251 2 253 2 205 1 309 1 255 1 129 1 257 1 53 1 97 1 218 1 54 1 18 1 59 1 22 1 223 1 225 1 185 2 64 1 235 1 331 1 151 1 111 1 66 1 72 1 300 1 301 1 82 1 
246 1 83 1 251 2 253 3 205 1 309 1 255 1 49 1 48 1 129 1 257 1 176 1 53 1 97 1 54 1 218 1 18 1 59 1 223 1 225 2 185 3 64 1 331 1 151 1 111 1 66 1 72 1 300 1 301 1 82 1 
223 1 225 2 83 1 185 2 251 2 253 2 309 1 255 1 48 1 129 1 64 1 331 1 257 1 111 1 176 1 53 1 97 1 72 1 54 1 218 1 301 1 300 1 18 1 59 1 82 1 
246 1 275 1 185 1 253 1 309 1 49 1 129 2 331 1 257 2 12 1 151 1 177 1 319 1 97 1 72 2 155 1 218 1 56 1 17 1 300 2 60 1 82 1 138 1 
223 1 22 1 246 1 83 1 185 1 251 2 205 1 253 1 309 1 129 1 64 1 331 1 235 1 257 1 151 1 66 1 176 1 53 1 97 1 72 1 54 1 218 1 301 1 300 1 59 1 82 1 
139 1 
84 1 202 1 45 1 309 1 207 1 208 1 91 1 213 1 317 2 15 1 94 1 177 1 217 1 97 2 133 1 218 2 134 1 56 1 138 2 325 1 276 1 275 1 27 2 329 1 108 1 63 1 331 1 195 1 297 1 155 1 156 1 243 1 82 2 304 2 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 202 1 45 1 207 1 27 2 329 1 208 1 108 1 317 1 213 1 15 1 297 1 217 1 74 1 304 2 
276 1 325 1 84 1 202 1 45 1 207 1 27 1 329 1 208 1 108 1 213 1 15 1 195 1 217 1 156 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
325 1 213 1 15 1 202 1 45 1 217 1 207 1 27 1 329 1 208 1 108 1 304 1 
276 1 325 1 84 1 202 1 45 1 207 1 27 1 329 1 208 1 108 1 213 1 15 1 195 1 217 1 156 1 304 1 
85 1 326 1 43 1 204 2 307 2 105 2 169 1 289 1 174 1 68 1 216 1 236 1 132 1 239 1 296 1 221 1 299 1 37 1 158 1 340 1 
85 1 307 1 163 1 204 2 283 1 105 2 143 1 234 1 68 1 216 1 265 1 296 1 37 1 269 1 158 1 
85 1 307 1 204 2 105 2 45 1 207 1 329 1 234 1 173 1 13 1 131 1 68 1 216 1 296 1 298 1 222 1 37 1 136 1 269 1 272 1 158 1 182 1 
85 1 204 1 165 1 1 1 45 1 87 1 207 1 173 1 131 1 318 1 216 1 97 1 218 1 222 1 269 1 182 1 138 1 105 2 329 1 234 1 68 1 296 1 298 1 37 1 158 1 82 1 
85 1 204 1 307 1 230 1 105 2 68 1 216 1 296 1 97 1 116 1 218 1 37 1 136 1 158 1 82 1 138 1 
85 1 307 1 204 2 45 1 127 1 207 1 168 1 173 1 258 1 131 1 216 1 221 1 269 1 284 1 105 2 286 1 107 1 329 1 234 1 68 1 296 1 37 1 158 1 81 1 
85 1 204 1 307 1 105 2 289 1 68 1 216 1 296 1 221 1 37 1 158 1 41 1 81 1 
85 1 204 1 284 1 105 2 289 1 234 1 258 1 68 1 216 1 296 1 178 1 37 1 158 1 
85 1 204 2 307 1 284 1 105 2 286 1 289 1 234 1 258 1 68 1 216 1 296 1 221 1 37 1 158 1 81 1 
85 1 204 1 307 1 230 1 105 2 68 1 216 1 296 1 221 1 37 1 158 1 41 1 81 1 
85 1 204 1 230 1 284 1 105 2 234 1 258 1 68 1 216 1 296 1 178 1 37 1 158 1 
85 1 204 2 307 1 284 1 230 1 105 2 286 1 234 1 258 1 68 1 216 1 296 1 221 1 37 1 158 1 81 1 
85 1 307 1 204 2 284 1 105 2 286 1 234 1 258 1 68 1 216 1 296 1 221 1 37 1 158 1 81 1 
165 1 97 1 218 1 82 1 138 1 
97 1 218 1 6 1 82 1 138 1 
85 1 204 2 307 1 284 1 105 2 286 1 234 1 258 1 68 1 216 1 296 1 221 1 37 1 269 1 158 1 81 1 
160 1 318 1 165 1 97 1 218 1 82 1 
85 1 307 1 204 2 45 1 207 1 168 1 173 1 258 1 131 1 216 1 221 1 269 1 284 1 105 2 286 1 107 1 329 1 234 1 68 1 296 1 117 1 37 1 158 1 81 1 
162 3 204 19 163 1 307 9 252 2 166 1 126 1 88 1 169 6 258 3 216 2 265 2 221 3 103 1 21 1 24 1 326 3 282 2 284 3 105 4 286 3 234 10 148 1 153 1 237 1 296 2 37 2 80 1 158 2 81 3 
162 2 204 26 307 14 163 2 252 1 166 1 126 1 88 2 169 4 258 2 96 2 216 3 266 1 265 2 221 3 135 1 103 2 21 1 326 2 282 4 142 1 284 2 105 6 286 3 188 1 62 1 189 1 234 12 148 2 237 1 296 3 37 3 158 3 81 3 
162 4 163 3 252 1 166 1 88 3 169 8 258 4 174 1 96 1 265 5 266 1 21 1 103 1 24 2 282 4 284 5 105 6 286 5 188 1 189 1 296 3 299 1 37 3 43 1 307 22 204 44 126 1 206 1 216 3 132 1 221 6 135 1 326 4 142 1 62 1 234 22 148 2 237 1 239 1 153 1 81 5 158 3 340 1 
162 3 43 1 204 43 163 3 307 22 252 1 166 1 126 1 206 1 88 3 169 8 174 1 258 4 132 1 96 2 216 4 266 1 265 5 221 6 135 1 103 1 21 1 24 2 326 5 142 1 282 4 284 5 105 8 286 5 188 1 62 1 189 1 234 21 148 2 153 1 239 1 237 1 296 4 299 1 37 4 158 4 81 5 340 1 
162 7 43 1 204 52 163 4 307 27 252 1 166 1 126 1 88 2 169 14 174 1 258 7 132 1 96 1 216 2 266 1 265 4 221 8 135 1 101 2 103 1 21 1 24 2 326 7 142 1 282 4 284 8 105 4 286 7 188 1 62 1 189 1 234 25 148 1 239 1 237 1 296 2 299 1 37 2 158 2 81 7 340 1 
211 1 161 1 194 1 214 1 261 1 285 1 327 1 36 1 145 1 336 1 
224 1 58 1 
211 1 194 1 214 1 152 1 295 1 285 1 327 1 36 1 5 1 
161 1 227 1 285 1 327 1 308 1 27 1 145 1 330 1 191 1 211 1 194 1 214 1 261 1 115 1 36 1 271 2 181 1 304 1 
161 1 227 1 285 1 327 1 308 1 27 1 145 1 330 1 191 1 211 1 194 1 214 1 261 1 115 1 36 1 271 2 181 1 304 1 
161 1 227 1 285 1 327 1 308 1 27 1 145 1 330 1 191 1 211 1 194 1 214 1 261 1 115 1 36 1 271 2 181 1 304 1 
324 1 229 1 186 1 
324 1 229 1 186 1 
334 1 110 1 
186 1 334 1 110 1 
196 1 78 1 
42 1 45 2 308 1 207 2 167 1 173 2 211 1 214 1 316 1 131 2 58 1 271 1 273 1 224 1 285 1 327 1 27 1 329 2 194 1 115 1 76 1 36 1 77 1 196 1 78 1 304 1 
324 1 229 1 
186 1 334 1 110 1 
45 2 333 1 207 2 329 2 147 1 102 1 
223 1 160 1 251 2 205 1 309 1 7 1 64 1 290 1 51 1 331 1 257 1 176 1 53 1 97 2 54 1 218 2 301 1 59 1 82 2 
223 1 280 1 251 2 205 1 309 1 64 1 51 1 257 1 331 1 176 1 53 1 97 1 54 1 218 1 301 1 59 1 82 1 
275 1 125 1 309 1 7 1 331 1 257 1 12 1 177 1 97 1 155 1 218 1 56 1 82 1 138 1 
223 1 251 2 205 1 309 1 7 1 64 1 290 1 51 1 257 1 331 1 176 1 53 1 97 1 54 1 218 1 301 1 59 1 82 1 
337 1 
279 1 34 1 228 1 236 1 330 1 243 1 91 1 
84 1 91 1 210 1 314 1 317 1 276 1 279 1 27 1 330 2 32 1 195 1 154 1 297 1 156 1 243 1 120 1 304 1 
84 2 309 2 91 1 8 1 11 1 317 2 95 1 177 1 97 1 218 1 270 2 138 1 23 1 276 2 281 1 140 1 25 1 27 2 232 1 233 1 63 1 31 1 331 1 195 2 297 1 155 4 242 1 156 2 82 1 304 2 
201 5 84 2 163 1 164 5 88 1 91 8 210 6 258 2 317 1 94 1 266 1 265 1 179 2 320 1 221 2 135 1 321 1 276 2 279 2 142 1 284 2 27 1 286 2 188 1 330 5 63 1 189 1 195 2 297 1 114 1 154 3 156 2 243 5 81 2 304 1 
84 1 43 1 3 1 45 1 207 1 168 1 91 2 173 1 174 1 131 1 179 2 221 1 276 1 184 1 284 1 61 1 231 1 27 1 329 1 190 1 195 1 299 1 156 1 243 1 304 1 
276 1 279 1 84 1 228 1 330 1 91 1 34 1 195 1 156 1 243 1 
201 5 164 5 284 2 286 2 330 5 91 5 210 10 193 1 258 2 154 5 179 2 221 2 321 1 243 5 81 2 
279 1 317 1 297 1 27 1 330 1 304 1 
84 2 306 1 309 1 128 2 91 2 317 4 94 2 177 1 97 4 133 1 218 4 134 1 56 1 268 1 138 2 276 1 183 1 275 1 27 3 63 2 331 1 195 2 297 2 155 1 156 2 243 2 159 1 82 4 304 3 
165 1 45 1 231 1 207 1 168 1 329 1 173 1 131 1 238 1 97 1 218 1 82 1 138 1 
276 1 201 2 279 2 84 1 164 2 330 4 91 1 63 1 210 4 94 1 195 1 239 1 154 2 156 1 243 2 
214 1 123 1 327 1 
214 1 123 1 327 1 
214 1 327 1 145 1 78 1 209 1 
214 1 123 1 327 1 
214 1 327 1 220 1 
214 1 327 1 220 1 
214 1 327 1 220 1 
214 1 327 1 
194 1 285 1 
162 1 326 2 43 1 204 8 307 4 284 1 105 4 169 3 234 4 174 1 216 2 96 1 132 1 239 1 296 2 221 1 299 1 37 2 158 2 340 1 
43 1 326 2 307 3 204 6 284 1 169 2 234 3 174 1 236 1 132 1 239 1 299 1 221 1 340 1 
162 1 326 1 307 2 204 4 284 1 105 2 286 1 169 2 234 2 258 1 216 1 296 1 221 1 37 1 158 1 81 1 121 1 
162 1 24 1 326 1 204 7 163 1 307 3 284 1 88 1 286 1 169 2 234 4 258 1 265 2 221 1 81 1 
162 4 43 2 307 11 163 2 204 23 169 9 174 1 258 2 132 1 96 2 216 2 265 2 221 3 101 1 24 1 326 5 283 1 284 3 105 4 286 2 234 12 239 1 296 2 299 2 37 2 157 1 81 2 158 2 340 1 
204 1 265 1 234 1 
204 1 307 1 163 1 
162 1 326 2 204 6 307 3 284 1 105 2 286 1 169 3 234 3 193 1 258 1 216 1 296 1 221 1 37 1 158 1 81 1 121 1 
162 1 326 1 142 1 307 6 204 12 163 1 284 2 105 2 126 1 286 2 88 1 169 2 188 1 189 1 234 6 258 2 216 1 266 1 265 1 296 1 221 2 135 1 37 1 81 2 158 1 
162 1 43 1 326 1 307 3 204 6 284 1 169 2 234 3 174 1 221 1 299 1 
162 1 326 1 43 1 307 1 204 3 105 2 169 2 234 2 96 1 216 1 132 1 296 1 299 1 157 1 37 1 158 1 340 1 
162 2 43 2 326 3 307 5 204 10 3 1 284 2 105 2 126 1 169 5 234 5 174 1 216 1 296 1 299 2 221 2 37 1 158 1 
162 1 307 2 204 2 105 2 126 1 169 1 216 1 296 1 221 1 37 1 158 1 81 1 
162 1 326 1 307 2 204 4 284 1 105 2 126 1 286 1 169 2 234 2 258 1 216 1 296 1 221 1 37 1 158 1 81 1 
162 1 43 1 326 1 204 3 307 1 105 6 126 1 169 2 234 2 96 1 216 3 153 1 296 3 299 1 157 1 37 3 158 3 
162 5 43 3 204 34 163 3 307 16 126 1 88 1 169 12 174 2 258 3 132 1 96 2 216 5 265 4 221 5 24 1 326 7 284 5 105 10 286 3 146 1 234 18 33 1 112 1 239 1 153 1 296 5 299 3 157 1 37 5 158 5 81 3 340 1 121 1 
43 1 163 1 204 11 307 6 126 1 88 1 169 2 174 1 216 1 132 1 265 2 221 2 24 1 326 2 284 1 105 2 286 1 188 1 234 5 239 1 296 1 299 1 37 1 158 1 81 1 340 1 
162 1 43 1 204 11 163 1 307 6 126 1 88 1 169 3 174 1 132 1 216 2 265 2 221 2 24 1 326 2 284 1 105 4 286 1 188 1 234 5 239 1 296 2 299 1 37 2 158 2 81 1 340 1 121 1 
162 1 43 1 163 1 204 19 307 9 126 1 88 1 169 4 174 1 258 2 132 1 216 3 96 1 265 1 266 1 221 3 135 1 326 3 142 1 284 3 105 6 286 2 188 1 189 1 234 10 239 1 296 3 299 1 37 3 158 3 81 2 340 1 121 1 
162 2 43 1 163 1 204 17 307 10 126 1 88 1 169 5 174 1 258 1 132 1 96 1 216 3 265 1 266 1 221 3 135 1 326 3 142 1 284 2 105 6 286 2 188 1 189 1 234 7 239 1 296 3 299 1 37 3 158 3 81 2 340 1 121 1 
43 1 163 1 204 11 307 6 126 1 88 1 169 2 174 1 216 1 132 1 265 2 221 2 24 1 326 2 284 1 105 2 286 1 188 1 234 5 239 1 296 1 299 1 37 1 158 1 81 1 340 1 
162 1 326 1 142 1 307 6 204 12 163 1 284 2 105 2 126 1 286 2 88 1 169 2 188 1 189 1 234 6 258 2 216 1 266 1 265 1 296 1 221 2 135 1 37 1 81 2 158 1 
162 2 43 1 204 18 163 1 307 10 126 1 88 1 169 5 174 1 258 1 132 1 216 4 96 2 266 1 265 1 221 3 135 1 326 3 142 1 284 2 105 8 286 2 188 1 189 1 234 8 239 1 296 4 299 1 37 4 158 4 81 2 340 1 121 1 
162 3 204 16 163 1 307 9 126 1 88 1 169 6 258 2 216 4 96 2 266 1 265 1 221 3 135 1 326 3 142 1 284 2 105 8 286 3 188 1 189 1 234 7 153 1 296 4 37 4 158 4 81 3 
162 3 43 3 326 3 204 7 307 3 284 1 169 6 234 4 174 1 132 1 299 3 221 1 340 2 
162 1 43 1 204 18 163 1 307 10 126 1 88 1 169 4 174 1 258 1 132 1 216 4 96 2 266 1 265 1 221 3 135 1 326 3 142 1 284 2 105 8 286 2 188 1 189 1 234 8 239 1 153 1 296 4 299 1 37 4 158 4 81 2 340 1 
213 1 45 1 207 1 329 1 40 1 137 1 
213 1 45 1 144 1 207 1 329 1 47 1 40 1 119 1 29 1 137 1 50 1 
331 1 275 1 236 1 177 1 97 1 155 1 218 1 309 1 56 1 82 1 138 1 
281 1 45 1 309 1 207 1 329 1 173 1 331 1 131 1 177 1 113 1 97 1 155 1 218 1 19 1 82 1 182 1 138 1 
281 1 45 1 309 1 207 1 329 1 128 1 173 1 331 1 131 1 177 1 113 1 97 1 155 1 218 1 19 1 82 1 182 1 
281 1 45 1 309 1 207 1 329 1 128 1 173 1 331 1 131 1 177 1 97 1 155 1 218 1 75 1 19 1 82 1 182 1 
245 1 23 1 279 1 281 1 309 1 27 2 128 1 330 1 233 1 30 1 331 1 130 1 317 1 177 1 97 3 218 3 155 4 55 1 241 1 270 1 82 3 138 1 304 2 
23 1 279 1 281 1 309 1 27 2 128 1 330 1 233 1 30 1 8 1 331 1 130 1 317 1 177 1 97 3 218 3 155 4 241 1 270 1 82 3 138 1 304 2 
331 1 97 1 218 1 309 1 311 1 82 1 
160 1 281 1 86 1 309 3 311 1 26 1 28 1 170 1 331 2 262 1 176 1 263 1 177 2 97 7 218 6 155 3 240 1 242 1 82 7 322 1 138 2 
131 1 45 1 207 1 329 1 173 1 182 1 
84 2 91 1 8 1 11 1 317 2 95 1 97 1 218 1 270 1 138 1 276 2 183 1 23 1 279 1 228 1 25 1 27 3 330 1 233 1 34 1 195 2 297 1 155 2 156 2 76 1 243 1 82 1 304 3 
160 1 23 1 281 1 309 2 311 1 232 1 331 1 177 1 97 2 218 2 155 2 242 1 82 2 
0 1 160 1 275 1 309 1 331 1 177 1 97 4 218 4 155 1 56 1 241 1 82 4 138 1 
281 1 309 2 128 1 331 1 260 1 263 1 177 1 97 2 218 2 155 1 100 1 82 2 322 1 20 1 
223 1 331 1 251 1 97 1 218 1 309 1 59 1 82 1 64 1 138 1 
331 1 323 1 160 1 176 1 177 1 97 2 155 1 86 1 218 2 309 1 82 2 
0 1 160 1 275 1 86 1 309 2 26 1 128 1 331 2 262 1 177 2 97 5 218 4 155 3 56 1 82 5 138 1 
0 1 160 1 275 1 122 1 86 1 309 2 128 1 331 2 262 1 177 2 97 5 218 4 155 3 56 1 82 5 138 1 
281 1 45 1 309 1 207 1 329 1 173 1 331 1 131 1 177 1 97 1 155 1 218 1 75 1 19 1 82 1 182 1 138 1 
281 1 309 2 128 1 170 1 331 1 263 1 177 1 97 1 218 1 155 1 242 1 82 1 322 1 
150 1 292 1 89 1 92 1 
150 1 292 1 141 1 27 1 76 1 254 1 89 1 197 1 92 1 304 1 
45 1 207 1 329 1 89 1 147 1 92 1 150 1 333 1 102 1 
141 1 197 1 92 1 
111 1 236 1 255 1 18 1 
246 1 151 1 111 1 185 1 253 1 255 1 18 1 
253 1 300 1 129 1 
246 1 185 3 203 2 253 3 255 1 235 1 315 1 151 1 293 1 111 1 69 1 18 1 
246 1 225 1 151 1 111 1 185 2 67 1 253 2 255 1 18 1 
246 1 185 1 251 1 253 1 255 1 172 1 64 1 235 1 151 1 332 1 53 1 
246 1 235 1 151 1 111 1 185 1 253 1 255 1 
246 1 235 1 151 1 111 2 185 1 253 1 18 1 
246 2 185 2 253 2 255 1 256 1 235 1 151 2 111 1 73 1 302 1 
246 1 225 2 185 3 253 3 106 1 187 1 255 2 235 1 151 1 111 1 332 1 267 1 18 1 
223 1 246 1 225 1 185 2 251 2 253 2 255 1 64 1 235 1 151 1 111 1 35 1 53 1 54 1 18 1 
246 2 225 2 185 4 253 4 255 2 235 1 151 2 111 1 67 1 264 1 332 1 267 1 18 1 
246 1 235 1 151 1 111 1 185 1 253 1 255 1 18 1 
246 1 225 2 278 1 185 4 203 1 253 4 255 3 315 1 151 1 111 2 69 1 332 1 267 1 18 2 
246 1 225 1 185 2 44 1 253 2 255 1 109 1 235 1 10 1 151 1 111 1 18 1 
246 1 185 3 203 2 253 3 255 1 315 1 235 1 151 1 111 1 69 2 18 1 39 1 
9 1 180 2 255 2 339 1 
246 1 235 1 65 1 151 1 185 1 253 1 
246 1 235 1 225 1 151 1 111 1 185 2 106 1 253 2 255 1 18 1 
71 1 
246 1 235 1 151 1 111 1 185 1 253 1 255 1 18 1 
246 1 235 1 225 1 151 1 111 1 185 3 203 1 106 1 253 3 255 1 18 1 
278 1 332 1 267 1 255 1 
111 1 255 1 

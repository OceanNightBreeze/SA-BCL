#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) (82,261) (82,261) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) (82,261) (82,261) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) (82,261) (82,261) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) (82,261) (82,261) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) 37 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (29,359) 37 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 252 160 279 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 1 183 1 300 1 365 1 213 1 261 1 82 1 94 1 233 1 152 2 138 1 33 1 358 2 115 1 359 1 29 1 
154 1 183 1 300 1 365 1 213 1 261 1 82 1 94 1 233 1 152 2 138 1 33 1 358 2 115 1 359 1 29 1 
154 1 183 1 300 1 365 1 213 1 261 1 82 1 94 1 233 1 152 2 138 1 33 1 358 2 115 1 359 1 29 1 
154 1 183 1 300 1 365 1 213 1 261 1 82 1 94 1 233 1 152 2 138 1 33 1 358 2 115 1 359 1 29 1 
325 1 254 2 183 1 38 1 300 1 365 1 122 2 371 1 94 1 95 1 233 1 113 1 152 4 286 1 189 3 138 1 358 4 28 3 
154 1 183 1 365 1 213 1 31 1 371 1 94 1 95 1 273 1 233 1 152 2 138 1 358 2 277 1 115 1 28 1 
183 1 94 1 152 1 138 1 358 1 29 1 
37 1 183 1 94 1 189 1 152 2 138 1 358 2 348 1 29 1 
37 1 183 1 94 1 189 1 152 2 138 1 358 2 348 1 29 1 
15 1 52 1 202 1 
21 1 145 2 202 1 
312 1 336 2 55 2 294 2 126 2 186 2 165 1 85 2 
298 1 130 1 350 1 323 1 55 2 326 1 56 2 258 2 193 1 195 2 240 1 241 1 263 1 357 1 114 1 85 2 179 1 361 1 311 1 36 1 312 1 336 2 63 1 120 1 186 3 65 1 165 1 227 1 271 1 228 1 45 1 294 3 96 1 126 2 69 2 377 1 379 2 
312 1 336 1 55 1 125 1 294 1 126 1 2 1 186 1 85 1 289 1 
210 1 76 1 280 1 186 1 202 1 304 1 291 1 125 1 197 1 294 1 126 1 52 1 308 1 26 1 
210 1 336 1 55 1 280 1 186 1 202 1 304 2 291 1 125 1 197 2 294 1 126 1 52 1 308 1 85 1 
49 1 197 1 234 1 266 1 304 1 
49 1 255 1 197 2 52 1 266 1 116 1 202 1 304 2 
197 1 266 1 304 1 
312 1 171 1 336 1 55 1 2 1 186 1 304 1 49 1 125 1 197 1 294 1 126 1 289 1 85 1 
202 1 
49 1 255 1 197 2 42 1 52 1 266 1 202 1 304 2 
181 1 255 1 30 1 237 1 342 1 370 1 57 2 202 1 304 5 49 2 215 2 109 1 285 1 197 5 8 2 50 1 52 1 86 1 266 2 
336 1 323 1 55 1 269 1 56 1 120 1 258 1 186 2 65 1 271 1 227 1 240 1 241 1 110 1 231 1 294 2 96 1 126 1 311 1 379 1 
15 1 165 1 
53 1 336 1 55 1 328 1 186 2 165 2 294 2 126 2 85 1 
293 1 110 1 4 1 
323 1 56 1 120 1 258 1 186 1 65 1 165 1 227 1 271 1 240 1 203 1 241 1 294 1 96 1 311 1 379 1 
336 3 55 3 231 1 294 3 126 3 186 3 85 1 165 1 
336 1 55 1 125 1 294 1 126 1 2 1 186 1 
53 1 336 1 55 1 125 1 328 1 294 1 126 1 186 1 85 1 
210 1 298 1 53 1 323 1 55 3 326 1 56 1 280 1 258 1 193 1 195 2 240 1 304 1 241 1 197 1 357 1 114 1 308 1 85 2 309 1 361 1 311 1 36 1 312 1 336 3 269 1 63 1 120 1 186 4 65 1 165 1 271 1 227 1 228 1 291 1 231 1 125 1 346 1 294 4 96 1 126 3 69 1 377 1 379 1 
336 1 55 1 231 1 294 2 126 2 186 2 128 1 165 1 26 1 
210 1 53 1 336 3 55 3 269 1 280 1 186 3 202 1 304 1 291 1 125 1 231 2 197 1 294 3 112 1 346 1 126 3 308 1 85 1 
53 1 336 2 55 2 186 2 4 1 231 1 110 1 294 2 126 2 85 1 
323 1 56 1 120 1 258 1 186 1 65 1 165 1 227 1 271 1 240 1 241 1 294 1 96 1 379 1 311 1 
100 1 56 1 224 1 120 1 258 1 186 1 165 1 227 1 271 1 240 1 241 1 294 1 96 1 379 1 311 1 
298 1 326 1 193 2 4 2 195 2 78 1 302 1 137 1 110 2 114 1 179 2 361 1 310 1 220 1 341 1 369 1 228 1 123 1 293 2 295 1 347 1 69 4 377 1 378 1 
336 1 55 1 125 1 339 1 294 1 126 1 186 1 308 1 
53 1 336 4 55 4 269 1 41 1 186 5 165 1 231 2 294 5 126 5 128 1 140 1 85 1 26 1 
336 2 55 2 125 1 339 1 294 2 126 2 2 1 186 2 
84 1 60 1 
84 1 60 1 
259 1 238 1 
259 1 238 1 
259 1 238 1 
84 1 244 1 60 1 
84 1 244 1 60 1 
84 1 44 1 60 1 
313 1 84 2 259 1 93 1 238 1 60 2 
84 1 244 1 60 1 
84 1 317 1 60 1 
84 1 317 1 60 1 
84 1 317 1 60 1 
131 2 184 2 39 1 329 3 247 1 256 2 17 2 93 1 202 1 304 2 284 1 232 2 111 1 84 2 197 2 243 1 127 1 60 2 87 1 
89 1 131 1 336 2 118 1 55 2 329 1 256 1 186 2 17 1 165 1 44 1 167 1 304 1 47 1 216 1 284 1 232 1 197 1 84 1 294 2 126 2 307 1 60 1 164 1 
233 1 300 1 365 1 
233 1 273 1 365 1 
221 1 233 3 273 1 300 2 366 1 106 1 
221 1 233 2 273 1 300 1 366 1 14 1 
221 2 233 2 273 1 300 1 366 1 
255 1 30 3 302 1 78 1 57 1 304 5 332 2 215 1 8 1 197 5 307 1 200 1 86 1 266 1 164 1 180 1 181 2 118 1 220 1 145 3 369 1 202 2 204 1 21 1 49 4 345 2 23 1 274 1 51 1 52 1 206 2 321 1 
255 1 30 8 302 3 78 3 57 2 81 1 304 9 332 6 215 2 285 1 197 9 83 1 8 2 307 4 199 1 86 1 266 6 181 6 245 1 220 3 145 9 146 1 369 3 202 5 204 2 230 1 21 3 49 7 151 5 274 2 234 5 51 1 52 1 206 6 321 3 
30 3 302 1 78 1 57 1 304 3 215 1 332 2 285 1 8 1 197 3 307 1 200 1 180 1 181 2 220 1 145 4 369 1 202 3 204 1 21 2 49 2 345 1 274 1 52 1 321 1 206 2 
30 5 302 2 78 2 57 1 81 1 304 4 332 4 215 1 285 1 8 1 197 4 307 2 200 1 180 1 181 4 220 2 145 7 146 1 369 2 202 4 204 1 21 3 230 1 49 3 345 2 274 1 52 1 206 4 321 2 
15 1 157 1 311 1 
214 1 311 1 
334 1 
96 1 311 1 
101 1 241 1 96 1 174 1 157 2 311 3 
241 1 96 1 311 1 
368 1 311 1 
75 2 341 3 193 3 367 1 369 1 105 1 78 1 134 1 229 1 123 2 108 1 344 1 177 1 219 1 69 7 161 1 179 4 
75 2 341 3 193 3 367 1 369 1 105 1 78 1 134 1 229 1 123 2 108 1 344 1 177 1 219 1 69 7 161 1 179 4 
75 2 341 3 193 3 367 1 369 1 105 1 78 1 134 1 229 1 123 2 108 1 344 1 177 1 219 1 69 7 161 1 141 1 179 4 
298 1 299 4 103 1 75 1 77 1 193 11 195 2 105 4 78 3 302 3 108 2 217 1 287 1 34 1 161 1 114 1 361 1 61 1 179 11 220 3 62 1 187 3 341 7 367 1 369 3 229 1 228 1 123 3 344 1 69 22 321 3 
298 2 73 1 172 1 75 2 193 4 195 4 105 1 78 1 134 1 108 1 177 1 219 1 34 1 114 2 361 2 179 5 341 4 367 1 369 1 228 2 229 1 123 3 344 1 69 9 
0 1 56 1 300 1 258 1 213 1 106 1 240 1 354 1 333 1 305 1 138 1 11 1 12 1 358 2 335 1 183 1 90 1 225 1 365 1 68 1 227 1 371 1 94 1 95 1 273 1 233 2 189 1 152 2 28 1 379 1 
0 1 56 1 300 1 258 1 213 1 106 1 175 1 240 1 354 1 242 1 333 1 305 1 138 1 358 3 335 1 223 1 90 1 225 1 365 1 68 1 227 1 371 1 94 1 95 1 273 1 233 2 152 3 189 2 28 1 379 1 
0 1 56 1 300 1 258 1 213 1 175 1 106 1 240 1 354 1 242 1 333 1 305 1 358 2 335 1 365 1 68 1 227 1 371 1 95 1 273 1 233 2 152 2 189 2 28 1 379 1 
54 1 0 2 56 1 223 1 257 1 120 1 258 1 213 2 227 1 240 1 283 1 94 1 7 1 333 2 152 1 96 1 138 1 358 1 59 1 335 2 209 1 311 1 379 1 
0 1 56 1 300 1 258 1 213 1 106 1 240 1 354 1 242 1 333 1 305 1 138 1 11 1 358 1 335 1 183 1 90 1 225 1 365 1 68 1 227 1 94 1 273 1 233 2 152 1 379 1 
248 1 
327 2 155 2 56 2 280 1 3 2 57 1 240 1 197 5 8 1 58 2 59 1 201 2 246 1 340 2 120 2 121 1 202 2 21 2 291 1 125 1 294 1 126 1 252 1 208 1 26 1 349 2 71 1 210 1 132 1 255 3 76 1 257 1 258 2 30 2 260 1 135 1 304 5 215 1 306 1 308 1 265 4 86 1 266 6 311 1 178 1 181 2 364 1 145 2 186 1 227 1 148 1 96 1 274 1 52 1 379 2 
210 1 255 1 327 1 246 1 42 1 280 1 76 1 186 1 260 1 304 3 148 1 291 1 125 1 197 3 294 1 126 1 265 2 308 1 266 2 26 1 178 1 71 1 
210 1 255 1 76 1 280 1 3 1 260 1 304 3 197 3 308 1 265 3 266 1 178 1 246 1 42 1 186 1 202 1 148 1 291 1 125 1 294 1 126 1 52 1 26 1 71 1 
210 1 255 1 327 1 76 1 280 1 3 1 260 1 304 3 197 3 308 1 265 3 266 2 178 1 201 1 246 1 42 1 186 1 202 1 148 1 291 1 125 1 294 1 126 1 52 1 26 1 71 1 
327 4 155 2 280 1 3 4 57 1 197 5 8 1 160 1 58 2 201 4 246 1 340 2 202 5 291 1 21 2 125 1 294 1 126 1 251 1 252 1 26 1 71 1 72 1 349 2 210 1 255 3 76 1 30 1 260 1 135 1 304 5 215 1 265 6 308 1 86 1 266 7 178 1 181 1 314 1 42 1 186 1 148 1 319 1 52 5 
327 2 155 2 280 1 3 2 57 1 197 4 8 1 58 2 201 2 246 1 340 2 202 2 291 1 21 2 125 1 294 1 126 1 252 1 26 1 71 1 349 2 210 1 132 1 255 2 76 1 30 1 135 1 260 1 304 4 215 1 265 4 308 1 86 1 266 4 178 1 181 1 145 2 186 1 148 1 52 1 
210 1 255 2 327 2 155 2 76 1 280 1 3 2 30 1 135 1 260 1 57 1 304 4 215 1 197 4 8 1 58 2 160 1 308 1 265 4 86 1 266 4 178 1 181 1 201 2 246 1 314 1 340 2 186 1 202 1 148 1 21 2 291 1 125 1 294 1 126 1 52 1 252 1 26 1 349 2 71 1 72 1 
210 1 255 2 327 2 155 2 76 1 280 1 3 2 30 1 135 1 260 1 57 1 304 4 215 1 197 4 8 1 58 2 160 1 308 1 265 4 86 1 266 4 178 1 181 1 201 2 246 1 314 1 340 2 186 1 202 1 148 1 21 2 291 1 125 1 294 1 126 1 52 1 252 1 26 1 349 2 71 1 72 1 
210 1 155 1 279 1 76 1 280 1 260 1 304 2 197 2 160 1 308 1 265 2 178 1 246 1 186 1 148 1 291 1 125 1 294 1 126 1 252 1 26 1 71 1 349 1 
210 1 255 2 327 3 155 2 76 1 280 1 30 1 3 3 135 1 260 1 57 1 304 4 215 1 8 1 197 4 58 2 160 1 308 1 265 5 86 1 266 5 178 1 181 1 201 3 246 1 314 1 340 2 186 1 202 1 148 1 21 2 291 1 125 1 294 1 126 1 52 1 251 1 252 1 26 1 349 2 72 1 71 1 
210 1 255 2 327 3 155 2 76 1 280 1 30 1 3 3 135 1 260 1 57 1 304 4 215 1 8 1 197 4 58 2 160 1 308 1 265 5 86 1 266 5 178 1 181 1 201 3 246 1 314 1 340 2 186 1 202 1 148 1 21 2 291 1 125 1 294 1 126 1 52 1 251 1 252 1 26 1 349 2 72 1 71 1 
327 2 155 2 280 1 3 2 57 1 197 4 8 1 201 2 246 1 202 1 168 1 291 1 125 1 294 1 126 1 252 1 26 1 71 1 349 2 210 1 132 1 255 2 76 1 30 1 260 1 304 4 215 1 265 4 308 1 86 1 266 4 178 1 181 1 144 2 145 2 186 1 148 1 188 2 52 1 
298 1 326 1 75 1 4 1 193 3 195 2 134 1 78 1 137 1 110 1 177 1 219 1 114 1 361 1 179 3 15 1 341 2 367 1 369 1 165 2 228 1 123 2 344 1 293 1 69 6 377 1 
298 2 350 1 133 1 103 1 299 3 326 2 193 6 4 4 105 1 195 4 79 1 78 2 302 1 217 1 110 11 357 1 356 1 114 2 361 2 179 8 220 2 341 2 187 3 67 1 316 1 165 1 369 1 228 2 123 1 293 11 69 14 321 2 377 1 
298 1 323 1 350 1 55 1 326 1 56 1 258 1 281 1 1 1 4 1 193 1 195 2 240 1 241 1 356 1 357 1 114 1 311 1 361 1 179 1 336 1 269 1 120 1 186 2 65 1 165 1 271 1 227 1 228 1 203 1 231 1 294 2 96 1 126 1 69 2 377 1 297 1 379 1 
323 2 55 1 326 3 56 3 193 10 4 7 195 6 105 4 240 2 6 1 242 1 241 2 110 7 10 1 114 3 336 1 337 2 63 2 120 1 341 8 65 2 165 2 123 4 344 1 293 7 294 3 126 1 70 1 69 20 298 3 350 1 74 2 75 1 258 3 134 1 78 3 302 2 177 1 219 1 357 1 356 1 361 3 311 2 179 10 220 2 269 1 186 3 367 1 43 2 369 3 227 2 271 2 228 3 231 1 96 2 320 2 321 2 377 3 379 3 
298 2 350 1 55 1 326 2 56 8 351 1 258 7 257 1 193 1 195 4 240 2 242 1 137 1 263 2 12 1 357 1 114 2 59 1 311 3 361 2 179 1 336 1 185 1 120 2 186 1 227 2 228 2 149 1 124 1 231 1 294 1 126 1 170 1 96 2 69 2 377 2 153 1 27 1 379 8 
53 1 298 1 55 1 326 1 4 1 193 2 195 2 78 1 302 1 110 1 356 1 114 1 85 1 361 1 179 1 336 1 220 1 341 1 186 1 369 1 228 1 123 1 293 1 22 1 294 1 126 1 321 1 69 3 377 1 
298 1 220 1 326 1 341 1 4 1 105 1 195 2 228 1 78 1 293 1 137 1 110 1 347 1 69 2 114 1 377 1 361 1 179 2 
298 1 326 1 341 1 4 1 193 2 195 2 369 1 228 1 302 1 123 1 293 1 137 1 110 1 295 1 69 2 114 1 377 1 361 1 
298 1 326 1 4 2 193 2 195 2 105 1 78 1 302 1 137 1 110 2 114 1 179 2 361 1 220 1 341 2 369 1 228 1 123 1 293 2 321 1 69 4 377 1 
298 1 220 1 326 1 341 1 4 1 105 1 195 2 228 1 78 1 293 1 110 1 170 1 347 1 69 2 114 1 377 1 361 1 179 2 
298 1 326 1 341 1 4 1 193 2 195 2 369 1 228 1 302 1 123 1 293 1 110 1 170 1 295 1 69 2 114 1 377 1 361 1 
298 1 326 1 4 2 193 2 195 2 105 1 78 1 302 1 110 2 114 1 179 2 361 1 220 1 341 2 369 1 228 1 123 1 293 2 170 1 321 1 69 4 377 1 
298 1 220 1 326 1 341 2 193 2 4 2 369 1 105 1 195 2 302 1 228 1 78 1 123 1 293 2 110 2 114 1 321 1 69 4 377 1 361 1 179 2 
298 1 350 1 323 1 326 1 56 1 258 1 193 1 195 2 240 1 241 1 357 1 114 1 179 1 311 1 361 1 63 1 120 1 186 1 65 1 165 1 271 1 227 1 228 1 294 1 96 1 69 2 377 1 379 1 
100 1 298 1 350 1 326 1 56 1 258 1 193 1 195 2 240 1 241 1 357 1 114 1 179 1 311 1 361 1 224 1 120 1 186 1 165 1 271 1 227 1 228 1 294 1 96 1 69 2 253 1 377 1 379 1 
298 1 326 1 4 2 193 2 195 2 105 1 78 1 302 1 110 2 356 1 114 1 179 2 361 1 220 1 341 2 369 1 228 1 123 1 293 2 321 1 69 4 377 1 
298 1 323 1 326 1 56 1 258 1 193 2 4 2 105 1 195 2 302 1 78 1 240 1 241 1 110 2 12 1 114 1 179 2 311 1 361 1 220 1 337 1 63 1 341 2 186 1 65 1 369 1 271 1 227 1 228 1 123 1 293 2 294 1 96 1 69 4 321 1 377 1 379 1 
53 1 298 1 55 1 326 1 193 1 4 1 105 1 195 2 302 1 78 1 110 1 355 1 356 1 114 1 85 1 361 1 179 2 336 1 220 1 341 1 186 1 369 1 228 1 293 1 294 1 126 1 321 1 69 3 377 1 
298 2 73 1 211 1 299 2 103 1 330 1 236 1 193 10 194 2 195 4 105 3 80 1 78 3 302 3 353 1 282 2 217 1 9 1 114 2 163 1 361 2 179 9 220 3 187 1 341 6 369 3 228 2 123 3 69 19 321 3 
298 3 73 1 211 2 103 2 299 2 236 2 193 12 192 1 194 1 105 2 195 6 80 1 78 3 302 2 353 1 196 1 282 4 9 1 139 1 34 2 114 3 13 1 361 3 179 14 220 3 341 4 187 2 290 1 369 2 228 3 19 1 123 2 69 26 321 3 
298 3 73 1 211 1 75 1 299 4 103 3 330 1 236 2 192 1 193 21 194 1 195 6 105 4 80 1 134 1 78 5 302 4 196 1 353 1 282 4 217 1 9 1 177 1 139 1 219 1 34 1 114 3 13 1 361 3 179 20 220 4 187 3 341 8 367 1 290 1 369 5 228 3 20 1 19 1 123 4 344 1 69 41 321 4 
298 4 73 1 211 1 75 1 299 4 103 3 330 1 236 2 192 1 193 18 194 1 195 8 105 3 80 1 134 1 78 5 302 3 196 1 353 1 282 4 217 1 9 1 177 1 139 1 219 1 34 2 114 4 13 1 361 4 179 20 220 4 187 3 341 7 367 1 290 1 369 4 228 4 20 1 19 1 123 4 344 1 69 38 321 4 
298 2 73 1 211 1 75 1 299 4 103 2 236 1 192 1 193 25 194 1 195 4 105 7 80 1 134 1 78 8 302 7 196 1 353 1 282 4 217 2 9 1 177 1 139 1 219 1 34 1 114 2 13 1 361 2 179 27 220 7 187 4 341 14 67 2 367 1 290 1 369 8 228 2 19 1 123 7 344 1 69 52 321 7 
131 1 232 1 111 1 84 1 119 1 256 1 243 1 17 1 93 1 60 1 
47 1 44 1 
292 1 131 1 232 1 84 1 256 1 35 1 17 1 166 1 60 1 
131 1 184 1 329 2 247 1 256 1 17 1 93 1 202 1 304 1 284 1 232 1 111 1 197 1 84 1 243 1 127 1 60 1 87 1 
131 1 184 1 329 2 247 1 256 1 17 1 93 1 202 1 304 1 284 1 232 1 111 1 197 1 84 1 243 1 127 1 60 1 87 1 
131 1 184 1 329 2 247 1 256 1 17 1 93 1 202 1 304 1 284 1 232 1 111 1 197 1 84 1 243 1 127 1 60 1 87 1 
313 1 143 1 244 1 
313 1 143 1 244 1 
315 1 317 1 
313 1 315 1 317 1 
216 1 167 1 
362 1 336 2 89 1 131 1 55 2 118 1 184 1 329 1 256 1 186 2 17 1 165 1 44 1 167 1 304 1 47 1 216 1 49 1 232 1 84 1 197 1 294 2 126 2 307 1 60 1 87 1 164 1 
143 1 244 1 
313 1 315 1 317 1 
298 1 350 1 326 1 56 2 258 2 212 1 193 1 195 2 240 1 218 1 263 2 356 1 357 1 114 1 117 1 311 1 361 1 179 1 185 1 186 2 227 1 228 1 343 1 124 1 294 2 96 1 24 1 126 2 69 2 377 1 379 2 
56 2 300 1 225 1 365 1 258 2 226 1 301 1 106 1 227 1 240 1 354 1 242 1 233 2 273 1 333 1 305 1 12 1 99 1 379 2 
56 1 300 1 225 1 365 1 258 1 106 1 227 1 46 1 240 1 354 1 242 1 233 2 273 1 333 1 305 1 99 1 379 1 
54 1 56 1 120 1 258 1 257 1 226 1 227 1 18 1 240 1 333 1 96 1 59 1 311 1 379 1 
56 1 300 1 225 1 365 1 258 1 226 1 301 1 106 1 227 1 240 1 354 1 242 1 233 2 273 1 333 1 305 1 99 1 379 1 
102 1 
181 1 15 1 109 1 50 1 30 1 52 1 202 1 
255 1 30 1 135 1 57 1 304 1 215 1 8 1 197 1 58 1 86 1 266 1 181 1 145 1 340 1 202 2 21 1 52 1 
101 1 56 3 157 2 107 1 57 4 240 4 332 6 241 3 109 1 8 4 197 5 198 2 12 1 162 1 120 1 202 8 291 2 21 6 205 1 296 1 206 6 25 2 74 2 255 3 258 3 30 9 214 3 352 2 78 2 302 2 304 5 215 4 262 1 264 2 306 1 86 4 266 5 142 2 311 10 181 8 220 2 40 2 145 12 270 2 227 3 368 2 369 2 50 1 274 2 96 3 374 2 52 2 321 2 379 3 
255 1 299 1 103 1 156 1 30 8 192 1 78 2 302 2 57 2 304 1 196 1 332 5 215 2 32 1 197 1 8 2 306 1 139 1 13 1 86 2 266 1 142 2 181 5 220 2 145 6 187 1 369 2 19 1 202 5 21 3 274 1 52 2 206 5 321 2 25 1 
171 1 55 1 2 1 30 2 134 1 78 2 57 1 304 1 215 1 8 1 197 1 86 1 289 1 85 1 142 2 181 2 312 1 336 1 186 1 367 1 369 1 344 1 125 1 294 1 126 1 322 1 25 1 72 1 
181 1 30 1 57 1 202 1 215 1 109 1 8 1 50 1 52 1 86 1 
181 5 74 1 220 2 145 10 30 5 369 2 78 2 302 2 202 5 332 5 21 5 321 2 206 5 25 1 142 2 
255 1 197 1 52 1 266 1 202 1 304 1 
173 1 255 2 56 4 258 4 257 1 30 2 57 2 107 1 240 1 304 3 215 2 285 1 8 2 197 3 306 2 59 1 86 1 266 4 311 1 181 2 92 1 364 1 120 2 227 1 205 2 96 1 274 2 208 1 379 4 
298 1 323 1 55 2 326 1 56 1 258 1 193 1 195 2 240 1 241 1 357 1 114 1 85 2 361 1 311 1 36 1 312 1 336 2 63 1 120 1 186 3 65 1 165 1 227 1 271 1 228 1 294 3 126 2 96 1 69 1 377 1 379 1 
181 2 75 1 145 4 30 1 57 1 202 4 332 2 21 2 215 1 8 1 274 1 306 1 52 2 206 2 86 1 
250 1 256 1 17 1 
250 1 256 1 17 1 
216 1 169 1 256 1 243 1 17 1 
250 1 256 1 17 1 
256 1 104 1 17 1 
256 1 104 1 17 1 
256 1 104 1 17 1 
256 1 17 1 
84 1 60 1 
298 2 75 1 341 3 193 4 367 1 369 1 105 1 195 4 78 1 134 1 228 2 123 2 344 1 177 1 219 1 34 1 69 8 114 2 179 4 361 2 
15 1 75 1 341 2 193 3 367 1 369 1 134 1 78 1 123 2 344 1 177 1 219 1 69 6 179 3 
298 1 220 1 341 2 193 2 369 1 195 2 105 1 302 1 228 1 78 1 123 1 373 1 114 1 321 1 69 4 361 1 179 2 
220 1 103 1 299 2 187 1 341 2 193 4 369 1 105 1 302 1 78 1 123 1 217 1 69 7 321 1 179 3 
298 2 75 1 299 2 193 12 105 4 195 4 134 1 78 3 302 2 217 1 177 1 219 1 34 2 114 2 360 1 179 11 361 2 220 2 341 9 187 2 316 1 67 1 367 2 369 3 228 2 123 5 344 2 321 2 69 23 
299 1 69 1 193 1 
187 1 69 1 179 1 
298 1 74 1 220 1 341 3 193 3 195 2 105 1 369 1 228 1 78 1 302 1 123 2 373 1 114 1 69 6 321 1 361 1 179 3 
298 1 73 1 299 1 103 1 193 6 192 1 105 1 195 2 78 2 302 2 196 1 139 1 114 1 13 1 361 1 179 6 220 2 187 1 341 2 369 2 228 1 123 1 19 1 69 12 321 2 
341 2 193 3 367 1 369 1 105 1 134 1 78 1 123 1 344 1 69 6 179 3 
298 1 341 2 193 2 367 1 105 1 195 2 228 1 123 1 344 1 177 1 219 1 34 1 69 3 114 1 360 1 179 1 361 1 
298 1 73 1 341 5 193 5 367 2 195 2 105 2 369 2 228 1 134 1 78 2 123 3 344 2 114 1 69 10 322 1 361 1 179 5 
73 1 298 1 220 1 341 1 195 2 105 1 228 1 78 1 114 1 69 2 361 1 179 2 
73 1 298 1 220 1 341 2 193 2 369 1 195 2 105 1 302 1 228 1 78 1 123 1 114 1 321 1 69 4 361 1 179 2 
73 1 298 3 330 1 341 2 193 2 367 1 195 6 105 1 228 3 123 1 344 1 34 1 69 3 114 3 360 1 361 3 179 1 
298 5 73 1 75 1 299 4 103 1 330 1 77 1 193 18 195 10 105 5 134 2 78 5 302 3 217 1 287 1 177 1 219 1 34 2 114 5 360 1 361 5 179 16 62 1 220 3 187 3 341 12 367 3 369 5 228 5 123 7 373 1 344 3 69 34 321 3 
298 1 73 1 75 1 299 1 103 1 193 4 195 2 78 1 134 1 177 1 219 1 114 1 13 1 361 1 179 4 187 1 341 2 367 1 369 1 228 1 123 2 344 1 69 8 
73 1 298 2 75 1 299 2 103 1 193 5 195 4 105 1 134 1 78 2 217 1 177 1 219 1 114 2 13 1 361 2 179 6 220 1 187 1 341 3 367 1 369 1 228 2 123 2 373 1 344 1 69 11 321 1 
298 3 73 1 75 1 299 1 103 1 193 10 192 1 105 1 195 6 134 1 78 3 302 2 196 1 177 1 139 1 219 1 34 1 114 3 13 1 361 3 179 9 220 2 187 1 341 4 367 1 369 3 228 3 19 1 123 3 373 1 344 1 69 19 321 2 
298 3 73 1 75 1 299 1 103 1 193 7 192 1 105 2 195 6 134 1 78 3 302 1 196 1 177 1 139 1 219 1 34 1 114 3 13 1 361 3 179 10 220 2 187 1 341 5 367 1 369 2 228 3 123 3 19 1 373 1 344 1 69 17 321 2 
298 1 73 1 75 1 299 1 103 1 193 4 195 2 78 1 134 1 177 1 219 1 114 1 13 1 361 1 179 4 187 1 341 2 367 1 369 1 228 1 123 2 344 1 69 8 
298 1 73 1 299 1 103 1 193 6 192 1 105 1 195 2 78 2 302 2 196 1 139 1 114 1 13 1 361 1 179 6 220 2 187 1 341 2 369 2 228 1 123 1 19 1 69 12 321 2 
298 4 73 1 75 1 299 1 103 1 193 8 192 1 105 2 195 8 134 1 78 3 302 1 196 1 177 1 139 1 219 1 34 2 114 4 13 1 361 4 179 10 220 2 187 1 341 5 367 1 369 2 228 4 19 1 123 3 373 1 344 1 69 18 321 2 
73 1 298 4 299 1 103 1 330 1 193 7 192 1 105 3 195 8 78 3 302 2 196 1 139 1 34 2 114 4 13 1 361 4 179 9 220 3 187 1 341 6 369 2 228 4 19 1 123 3 69 16 321 3 
341 6 193 4 367 3 369 1 105 3 134 1 78 1 123 3 344 3 177 1 219 2 69 7 179 3 
73 1 298 4 75 1 299 1 103 1 330 1 193 8 192 1 105 1 195 8 134 1 78 3 302 1 196 1 177 1 139 1 219 1 34 2 114 4 13 1 361 4 179 10 220 2 187 1 341 4 367 1 369 2 228 4 19 1 123 3 344 1 69 18 321 2 
294 1 126 1 275 1 186 1 128 1 165 1 26 1 
324 1 16 1 186 1 165 1 5 1 372 1 136 1 294 1 126 1 275 1 128 1 26 1 
15 1 56 1 96 1 257 1 258 1 120 1 59 1 227 1 240 1 311 1 379 1 
336 1 55 1 56 1 120 1 258 1 186 2 65 1 165 1 271 1 227 1 240 1 241 1 231 1 294 2 96 1 126 1 311 1 379 1 
55 2 56 1 280 1 258 1 240 1 241 2 308 1 311 3 336 1 186 2 65 1 270 1 165 1 227 1 271 1 368 1 205 1 231 1 125 1 294 2 126 2 96 2 379 1 
100 1 55 2 56 2 280 1 258 2 240 1 241 2 308 1 311 3 336 1 338 1 186 2 270 1 165 1 227 1 271 1 368 1 205 1 231 1 125 1 294 2 126 2 96 2 379 2 
171 1 55 1 56 1 2 1 258 1 214 1 157 1 303 1 304 2 197 2 289 1 85 1 266 1 311 2 312 1 336 1 186 1 202 1 291 1 205 1 125 1 294 1 126 1 52 1 379 1 
338 1 56 3 120 1 258 3 270 1 368 1 214 1 227 1 157 1 202 1 240 1 304 2 291 1 241 1 205 1 197 2 96 1 374 1 52 1 266 1 379 3 311 4 
56 1 258 1 227 1 153 1 240 1 379 1 
101 1 56 7 351 1 91 1 120 2 258 6 227 2 240 3 242 1 149 1 241 1 124 1 263 1 96 2 12 1 97 1 153 1 27 1 379 7 129 1 311 3 
323 1 55 1 326 2 56 1 4 1 193 3 195 4 240 1 241 1 110 1 12 1 114 2 336 1 337 1 63 1 341 2 65 1 165 2 123 2 344 1 293 1 294 2 126 1 69 6 298 2 75 1 258 1 212 1 134 1 78 1 177 1 356 1 219 1 361 2 311 1 179 3 186 2 367 1 227 1 271 1 369 1 228 2 231 1 96 1 320 1 377 2 379 1 
255 1 56 1 258 1 30 1 214 1 352 1 157 1 57 2 107 1 304 3 215 2 109 1 8 2 197 3 264 1 198 1 86 2 266 2 311 2 181 1 120 1 202 1 49 1 291 1 50 1 374 1 52 1 379 1 
101 1 56 2 258 2 227 1 157 1 240 2 241 1 262 1 96 1 12 1 153 1 379 2 311 2 
338 1 56 4 120 1 258 4 257 1 227 1 240 1 96 1 12 1 59 1 98 1 379 4 311 1 
56 2 91 1 258 2 227 1 240 2 48 1 241 1 205 1 96 1 97 1 375 1 70 1 379 2 311 1 
354 1 233 1 273 1 56 1 365 1 258 1 120 1 227 1 240 1 379 1 
56 2 258 2 227 1 240 1 242 1 124 1 24 1 96 1 12 1 379 2 311 1 
56 5 351 1 257 1 120 1 258 4 227 2 240 2 205 1 124 1 96 2 12 1 59 1 98 1 27 1 379 5 311 3 
190 1 56 5 257 1 120 1 258 4 227 2 240 2 205 1 124 1 96 2 12 1 59 1 98 1 27 1 379 5 311 3 
100 1 336 1 55 1 56 1 120 1 258 1 186 2 165 1 271 1 227 1 240 1 241 1 231 1 294 2 96 1 126 1 311 1 379 1 
101 1 56 1 91 1 258 1 227 1 240 2 241 1 205 1 96 1 97 1 379 1 129 1 311 1 
343 1 182 1 218 1 363 1 294 1 126 1 186 1 249 1 117 1 
88 1 182 1 239 1 
182 1 363 1 235 1 165 1 249 1 
210 1 182 1 88 1 363 2 235 2 280 1 165 1 331 1 239 1 249 2 202 1 304 2 291 1 49 1 125 1 197 2 346 1 52 1 308 1 
15 1 95 1 28 1 371 1 
94 1 95 1 152 1 138 1 358 1 28 1 371 1 
358 1 213 1 335 1 
183 1 154 2 278 1 191 1 371 1 94 1 95 1 152 3 138 1 288 1 358 3 28 1 
94 1 95 1 189 1 152 2 138 1 358 2 122 1 28 1 371 1 
325 1 254 1 183 1 300 1 365 1 94 1 233 1 152 1 138 1 358 1 28 1 
183 1 94 1 152 1 138 1 358 1 28 1 371 1 
183 1 94 1 95 1 152 1 138 1 358 1 371 2 
183 1 222 1 66 1 371 1 94 2 150 1 152 2 138 2 358 2 28 1 
254 1 183 1 64 1 176 1 371 1 94 1 95 1 152 3 189 2 113 1 138 1 358 3 28 2 
183 1 300 1 365 1 106 1 371 1 94 1 95 1 273 1 233 2 152 2 189 1 138 1 358 2 207 1 28 1 
254 1 183 1 38 1 122 1 371 1 94 2 95 1 152 4 189 2 113 1 138 2 358 4 28 2 
183 1 94 1 95 1 152 1 138 1 358 1 28 1 371 1 
254 1 154 1 191 1 371 2 94 1 95 2 189 2 152 4 113 1 288 1 159 1 138 1 358 4 28 3 
183 1 147 1 371 1 94 1 95 1 152 2 189 1 138 1 358 2 348 1 276 1 28 1 
183 1 154 2 191 2 371 1 272 1 94 1 95 1 152 3 288 1 138 1 358 3 28 1 
268 1 158 2 376 1 28 2 
318 1 183 1 94 1 152 1 138 1 358 1 
183 1 94 1 95 1 189 1 152 2 138 1 358 2 176 1 28 1 371 1 
267 1 
183 1 94 1 95 1 152 1 138 1 358 1 28 1 371 1 
183 1 154 1 176 1 371 1 94 1 95 1 189 1 152 3 138 1 358 3 28 1 
254 1 113 1 159 1 28 1 
28 1 371 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 6 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 278 226 44 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 278 226 44 109 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
276 1 223 2 129 1 341 1 4 1 227 1 252 2 284 1 254 1 232 2 324 1 10 2 88 1 289 6 186 2 140 2 330 1 42 9 40 2 116 1 121 1 21 1 333 5 69 1 53 9 335 1 171 4 173 3 
276 1 223 2 129 1 341 1 4 1 227 1 252 2 284 1 254 1 232 2 324 1 10 2 88 1 289 6 186 2 140 2 330 1 42 9 40 2 116 1 121 1 21 1 333 5 69 1 53 9 335 1 171 4 173 3 
276 1 223 2 129 1 341 1 4 1 227 1 252 2 284 1 254 1 232 2 324 1 10 2 88 1 289 7 186 2 140 2 330 1 42 10 40 2 116 1 121 1 21 1 333 6 69 1 53 10 335 1 171 5 173 4 
276 1 223 2 129 1 341 1 4 1 227 1 252 2 284 1 254 1 232 2 324 1 10 2 88 1 289 4 186 1 140 2 330 1 42 7 40 2 116 1 121 1 21 1 333 4 53 7 335 1 171 3 173 2 
289 3 186 2 140 1 223 1 40 1 42 4 129 1 252 1 333 3 69 1 53 4 335 1 254 1 171 2 232 1 324 1 88 1 173 1 
140 1 223 1 91 1 330 1 116 1 40 1 42 2 129 1 145 1 252 1 333 1 306 1 53 2 324 1 10 1 88 1 
289 1 223 2 40 2 42 3 129 1 341 1 333 2 53 3 171 1 324 1 10 1 88 1 173 1 
276 1 223 2 129 1 341 1 252 1 254 1 232 1 324 1 10 1 88 1 289 7 186 2 372 1 140 1 42 9 40 2 121 1 333 5 69 1 53 9 335 1 171 4 244 1 173 3 
276 1 223 2 129 1 341 1 252 1 254 1 232 1 324 1 10 1 88 1 289 7 186 2 372 1 140 1 42 9 40 2 121 1 333 5 69 1 53 9 335 1 171 4 244 1 173 3 
339 1 117 1 78 1 
128 2 78 1 260 1 
137 1 50 2 282 2 327 2 64 2 249 1 286 2 238 2 
199 1 76 1 102 1 249 1 225 1 58 1 106 1 366 2 5 1 204 1 282 2 132 1 184 1 110 1 85 1 230 1 286 3 325 1 62 1 87 1 137 1 63 1 327 2 64 2 375 1 313 1 238 3 190 1 50 2 352 2 298 2 351 2 71 1 73 2 74 1 54 1 197 1 
50 1 282 1 327 1 64 1 141 1 345 1 249 1 35 1 286 1 238 1 
90 1 278 1 374 1 361 1 339 1 238 1 340 1 78 1 167 1 50 1 24 1 35 1 286 1 86 1 
64 1 327 1 90 2 374 1 339 1 238 1 340 1 78 1 167 1 50 1 282 1 24 2 35 1 286 1 86 1 
359 1 90 1 24 1 280 1 156 1 
359 1 90 2 23 1 24 2 339 1 280 1 57 1 78 1 
359 1 90 1 24 1 
64 1 327 1 90 1 141 1 249 1 280 1 238 1 50 1 315 1 282 1 345 1 24 1 35 1 286 1 
78 1 
359 1 90 2 23 1 217 1 24 2 339 1 280 1 78 1 
1 2 359 2 90 5 339 1 280 2 200 1 78 1 320 1 3 1 49 1 343 1 377 1 23 1 24 5 317 2 243 1 269 2 270 1 135 1 
137 1 117 1 
137 2 64 1 327 1 143 1 238 2 120 1 50 2 282 1 286 2 
371 1 212 1 207 1 
137 1 27 1 199 1 76 1 238 1 366 1 204 1 298 1 351 1 110 1 85 1 286 1 74 1 54 1 325 1 87 1 
199 1 371 1 327 1 76 1 238 2 250 1 240 1 50 1 366 1 204 1 282 1 298 1 351 1 85 1 110 1 286 2 74 1 54 1 325 1 87 1 
137 1 309 1 327 4 64 1 329 1 278 1 143 1 238 5 226 1 250 1 240 2 50 5 282 4 286 5 
50 2 282 2 327 2 248 1 141 1 35 1 286 2 238 2 
137 1 50 3 64 1 282 3 327 3 286 3 238 3 240 1 
50 1 282 1 327 1 141 1 35 1 286 1 238 1 
50 1 282 1 327 1 64 1 35 1 286 1 143 1 238 1 120 1 
199 1 76 1 249 1 340 1 225 1 58 1 250 1 366 1 5 1 204 1 282 3 184 1 85 1 110 1 35 1 286 4 86 1 325 1 87 1 137 1 63 1 64 2 327 3 90 1 13 1 374 1 375 1 143 1 313 1 238 4 190 1 167 1 240 1 50 3 352 2 298 1 351 1 52 1 71 1 24 1 73 1 74 1 54 1 197 1 
137 1 50 2 282 1 327 1 278 1 286 2 238 2 226 1 240 1 
64 1 327 3 90 1 374 1 41 1 143 1 340 1 238 3 78 1 167 1 250 1 240 2 50 3 282 3 52 1 24 1 35 1 286 3 86 1 
371 1 64 1 327 2 212 1 143 1 238 2 240 1 50 2 282 2 286 2 
137 1 199 1 76 1 238 1 366 1 204 1 298 1 351 1 110 1 85 1 286 1 74 1 54 1 325 1 87 1 
137 1 234 1 199 1 76 1 238 1 366 1 204 1 298 1 351 1 108 1 110 1 85 1 286 1 54 1 325 1 
362 1 225 1 58 1 5 1 132 2 207 2 184 1 259 1 210 1 63 2 371 2 265 1 212 2 14 1 163 1 313 1 166 1 18 1 146 1 20 1 352 2 71 1 73 4 196 1 
50 1 282 1 327 1 248 1 35 1 286 1 238 1 167 1 
228 1 316 1 
228 1 316 1 
93 1 213 1 
93 1 213 1 
93 1 213 1 
228 1 316 1 151 1 
228 1 316 1 151 1 
228 1 316 1 119 1 
228 2 316 2 209 1 258 1 93 1 213 1 
228 1 316 1 151 1 
305 1 228 1 316 1 
305 1 228 1 316 1 
305 1 228 1 316 1 
137 1 337 1 327 2 90 1 115 1 224 1 331 1 104 1 237 1 238 2 119 1 293 1 50 2 322 1 148 1 316 1 228 1 282 2 283 1 242 1 24 1 286 2 208 1 221 1 
337 3 161 1 90 2 104 1 78 1 293 2 322 2 148 2 316 2 228 2 98 1 285 2 24 2 208 2 134 1 287 1 209 1 56 1 288 1 
252 1 140 1 232 1 
252 1 306 1 140 1 
149 1 304 1 306 1 140 3 101 1 232 2 
149 1 304 1 216 1 306 1 140 2 232 1 
304 1 149 2 306 1 140 2 232 1 
128 3 1 1 359 1 303 1 280 4 339 1 364 1 78 2 59 1 107 2 256 1 84 2 135 3 260 1 90 5 115 1 14 1 43 1 331 1 164 2 163 1 92 1 189 1 49 2 18 1 377 1 23 1 24 5 317 1 269 1 196 1 221 1 
128 9 1 2 359 6 303 1 280 7 339 1 3 1 364 3 78 5 156 5 182 1 131 5 367 1 256 2 84 6 111 1 36 1 8 1 135 8 260 3 90 9 14 3 164 6 163 3 92 2 49 6 18 3 349 1 377 1 23 1 24 9 317 2 269 2 196 3 221 4 
1 1 128 4 339 1 280 2 78 3 3 1 364 1 59 1 107 1 256 1 84 2 135 3 260 2 90 3 14 1 92 1 163 1 164 2 189 1 49 2 18 1 24 3 317 1 269 1 196 1 221 1 
128 7 1 1 339 1 280 3 78 4 3 1 364 2 59 1 107 2 182 1 256 1 84 4 111 1 36 1 135 5 260 3 90 4 14 2 164 4 92 1 163 2 189 1 49 4 18 2 24 4 317 1 269 1 196 2 221 2 
204 1 117 1 165 1 
204 1 381 1 
192 1 
204 1 76 1 54 1 
204 1 169 1 
204 1 76 1 
204 3 76 1 165 2 54 1 114 1 273 1 
63 3 160 1 279 1 16 1 163 1 348 1 166 3 18 1 239 1 350 1 32 1 82 1 132 4 73 7 9 1 259 2 369 2 
63 3 160 1 279 1 16 1 163 1 348 1 166 3 18 1 239 1 350 1 32 1 82 1 132 4 73 7 9 1 259 2 369 2 
63 3 160 1 279 1 16 1 163 1 348 1 267 1 166 3 18 1 239 1 350 1 32 1 82 1 132 4 73 7 9 1 259 2 369 2 
222 3 279 1 364 3 225 1 32 2 5 1 82 1 132 16 34 4 9 2 259 5 346 1 369 3 63 15 160 2 14 3 16 1 348 2 162 1 163 4 313 1 166 10 18 4 239 1 350 5 214 1 352 2 150 1 71 1 73 31 271 1 355 1 196 3 198 1 
5 1 352 2 6 1 132 1 160 1 71 1 73 1 313 1 9 1 225 1 25 1 369 1 
223 1 101 1 129 1 366 1 252 1 306 1 110 1 85 1 232 1 324 1 10 1 88 1 289 1 38 1 290 1 328 1 140 2 42 2 40 1 67 1 47 1 333 1 351 1 298 1 53 2 97 1 172 1 245 1 195 1 356 1 
223 1 101 1 366 1 252 1 306 1 110 1 85 1 232 1 324 1 10 1 88 1 289 2 38 1 290 1 328 1 140 2 266 1 42 3 40 1 67 1 47 1 191 1 333 1 351 1 298 1 53 3 97 1 245 1 300 1 356 1 
101 1 366 1 252 1 306 1 110 1 85 1 232 1 324 1 10 1 88 1 289 2 290 1 328 1 140 2 266 1 42 2 47 1 191 1 333 1 351 1 298 1 53 2 97 1 245 1 356 1 
318 1 174 1 223 1 76 1 366 1 281 1 204 1 85 1 110 1 325 1 10 2 263 1 290 2 42 1 40 1 47 2 351 1 298 1 53 1 245 2 194 1 300 1 220 1 
223 1 101 1 129 1 366 1 252 1 306 1 110 1 85 1 232 1 10 1 38 1 290 1 328 1 140 2 266 1 42 1 40 1 67 1 47 1 351 1 298 1 53 1 97 1 245 1 195 1 356 1 
347 1 
1 1 339 1 153 2 340 1 342 1 204 1 256 1 110 1 260 2 311 1 167 1 170 2 215 1 351 2 353 2 23 3 125 2 24 5 317 1 269 1 272 1 220 1 26 1 128 2 359 6 278 1 28 2 76 1 361 1 77 1 177 1 78 2 366 2 281 1 85 1 35 1 286 1 231 1 135 2 86 1 325 2 185 1 90 5 142 2 374 1 188 4 238 1 49 2 377 1 241 2 50 1 298 2 51 1 95 1 380 1 
359 2 90 3 278 1 374 1 361 1 188 2 311 1 340 1 238 1 167 1 342 1 50 1 215 1 95 1 353 1 23 1 217 1 24 3 35 1 286 1 380 1 86 1 
359 1 90 3 278 1 374 1 361 1 339 1 188 3 311 1 340 1 238 1 78 1 167 1 342 1 170 1 50 1 215 1 95 1 23 1 217 1 24 3 35 1 286 1 380 1 86 1 
359 2 278 1 361 1 339 1 340 1 78 1 342 1 35 1 286 1 86 1 90 3 142 1 374 1 311 1 188 3 238 1 167 1 50 1 170 1 215 1 95 1 353 1 23 1 217 1 24 3 380 1 
1 1 339 5 153 2 340 1 342 1 308 1 260 2 261 1 311 1 167 1 170 4 215 1 353 4 217 1 23 3 24 5 125 2 317 1 269 1 272 1 359 7 360 1 278 1 28 2 361 1 177 1 78 5 180 1 35 1 286 1 135 1 86 1 90 5 142 4 374 1 188 6 238 1 49 1 377 1 50 1 378 1 241 2 95 1 380 1 
1 1 153 2 339 1 340 1 342 1 260 2 311 1 167 1 170 2 215 1 353 2 23 2 24 4 125 2 317 1 269 1 272 1 26 1 128 2 359 4 278 1 28 2 361 1 177 1 78 2 35 1 286 1 135 1 86 1 90 4 142 2 374 1 188 4 238 1 49 1 377 1 50 1 241 2 95 1 380 1 
1 1 359 4 360 1 278 1 28 2 361 1 339 1 153 2 177 1 340 1 78 1 342 1 180 1 35 1 286 1 135 1 86 1 260 2 261 1 90 4 142 2 374 1 311 1 188 4 238 1 49 1 167 1 377 1 170 2 241 2 50 1 215 1 95 1 353 2 23 2 125 2 24 4 317 1 269 1 380 1 272 1 
1 1 359 4 360 1 278 1 28 2 361 1 339 1 153 2 177 1 340 1 78 1 342 1 180 1 35 1 286 1 135 1 86 1 260 2 261 1 90 4 142 2 374 1 311 1 188 4 238 1 49 1 167 1 377 1 170 2 241 2 50 1 215 1 95 1 353 2 23 2 125 2 24 4 317 1 269 1 380 1 272 1 
75 2 128 2 1 1 359 4 278 1 28 2 361 1 339 1 340 1 78 1 342 1 180 1 35 1 286 1 135 1 136 1 86 1 90 4 142 2 374 1 187 2 311 1 188 4 238 1 49 1 167 1 268 1 377 1 170 2 241 2 50 1 215 1 95 1 353 2 23 2 72 1 24 4 317 1 269 1 380 1 272 1 
1 1 359 5 360 1 278 1 28 2 361 1 339 1 153 2 177 1 340 1 78 1 342 1 180 1 35 1 286 1 135 1 86 1 260 2 261 1 90 4 142 3 374 1 311 1 188 5 238 1 49 1 167 1 377 1 241 2 50 1 378 1 170 3 215 1 95 1 353 3 23 2 125 2 24 4 317 1 269 1 380 1 272 1 
1 1 359 5 360 1 278 1 28 2 361 1 339 1 153 2 177 1 340 1 78 1 342 1 180 1 35 1 286 1 135 1 86 1 260 2 261 1 90 4 142 3 374 1 311 1 188 5 238 1 49 1 167 1 377 1 241 2 50 1 378 1 170 3 215 1 95 1 353 3 23 2 125 2 24 4 317 1 269 1 380 1 272 1 
1 1 339 1 340 1 342 1 311 1 167 1 170 2 215 1 353 2 23 2 72 1 24 4 317 1 269 1 272 1 26 1 128 2 75 2 359 4 278 1 28 2 361 1 78 1 35 1 286 1 135 1 86 1 90 4 142 2 374 1 187 2 188 4 238 1 49 1 377 1 50 1 241 2 95 1 380 1 
137 2 63 3 371 1 265 1 212 1 279 1 117 1 16 1 163 1 348 1 313 1 166 2 58 1 225 1 18 1 239 1 32 1 5 1 352 2 132 3 207 1 71 1 73 6 184 1 259 2 369 1 
222 3 102 1 364 2 225 2 58 1 80 1 81 1 5 2 132 8 207 11 34 3 184 2 112 1 259 1 137 1 63 6 371 11 212 4 14 1 118 1 163 2 313 2 190 1 48 1 166 2 18 1 350 1 352 4 150 1 71 2 73 14 196 2 198 1 
27 1 199 1 76 1 102 1 58 1 225 1 250 1 366 1 5 1 204 1 282 1 132 1 85 1 110 1 184 1 286 2 325 1 87 1 137 1 63 1 327 1 212 1 313 1 238 2 48 1 190 1 240 1 50 1 22 1 351 1 298 1 352 2 71 1 299 1 73 2 74 1 54 1 126 1 
152 1 199 2 102 1 58 3 250 1 5 3 204 2 7 2 207 7 110 2 157 1 259 4 63 10 158 2 266 1 212 7 14 2 16 1 348 1 163 3 313 3 166 8 18 3 350 4 351 3 352 6 71 3 73 20 74 2 219 2 274 2 76 2 279 1 364 2 225 3 32 1 79 1 366 3 282 1 132 10 184 3 85 2 286 3 325 1 369 1 87 2 137 2 371 7 327 1 375 2 238 3 190 1 48 1 239 1 240 1 50 1 298 3 54 2 196 2 
127 1 275 1 76 2 102 1 225 2 58 2 105 1 366 8 5 2 204 3 281 1 282 1 132 1 255 1 85 2 110 2 184 2 286 1 230 2 325 2 63 1 327 1 265 1 266 1 238 1 313 2 314 1 190 1 294 1 240 1 50 1 379 1 351 8 298 7 352 4 71 2 172 1 73 2 220 1 
364 1 225 1 58 1 5 1 282 1 132 1 207 1 184 1 286 1 259 1 63 2 371 1 327 1 64 1 212 1 14 1 143 1 163 1 313 1 238 1 48 1 166 1 18 1 50 1 352 2 124 1 71 1 73 3 196 1 
371 1 265 1 212 1 163 1 313 1 166 1 58 1 225 1 350 1 5 1 352 2 132 2 207 1 71 1 73 2 184 1 196 1 210 1 
63 2 371 1 265 1 212 1 14 1 313 1 166 1 58 1 225 1 146 1 18 1 5 1 352 2 207 1 71 1 73 2 184 1 259 1 
364 1 225 1 58 1 5 1 132 2 207 2 184 1 259 1 63 2 371 2 265 1 212 2 14 1 163 1 313 1 166 2 18 1 350 1 352 2 71 1 73 4 196 1 
127 1 371 1 212 1 163 1 313 1 166 1 58 1 225 1 350 1 5 1 352 2 132 2 207 1 71 1 73 2 184 1 196 1 210 1 
127 1 63 2 371 1 212 1 14 1 313 1 166 1 58 1 225 1 146 1 18 1 5 1 352 2 207 1 71 1 73 2 184 1 259 1 
127 1 364 1 225 1 58 1 5 1 132 2 207 2 184 1 259 1 63 2 371 2 212 2 14 1 163 1 313 1 166 2 18 1 350 1 352 2 71 1 73 4 196 1 
364 1 225 1 58 1 5 1 132 2 207 2 184 1 259 1 63 2 371 2 212 2 14 1 163 1 313 1 166 2 18 1 350 1 352 2 71 1 73 4 196 1 
199 1 76 1 102 1 58 1 225 1 366 1 5 1 204 1 132 1 85 1 110 1 184 1 286 1 325 1 87 1 137 1 63 1 375 1 238 1 313 1 190 1 351 1 298 1 352 2 71 1 73 2 74 1 54 1 
199 1 76 1 102 1 58 1 225 1 366 1 5 1 204 1 108 1 132 1 85 1 110 1 184 1 286 1 368 1 325 1 137 1 234 1 63 1 238 1 313 1 190 1 351 1 298 1 352 2 71 1 73 2 54 1 
364 1 225 1 58 1 5 1 132 2 207 2 184 1 259 1 63 2 371 2 212 2 14 1 163 1 313 1 48 1 166 2 18 1 350 1 352 2 71 1 73 4 196 1 
199 1 76 1 364 1 58 1 225 1 366 1 5 1 204 1 132 2 207 2 85 1 110 1 184 1 286 1 259 1 87 1 63 2 371 2 212 2 14 1 375 1 163 1 238 1 313 1 166 2 18 1 350 1 351 1 298 1 352 2 71 1 73 4 172 1 74 1 54 1 196 1 274 1 
364 1 225 1 58 1 5 1 282 1 132 2 207 1 184 1 286 1 63 1 371 1 327 1 64 1 212 1 14 1 66 1 143 1 163 1 313 1 238 1 48 1 166 1 18 1 350 1 50 1 352 2 71 1 73 3 196 1 
247 1 222 1 364 3 225 2 30 2 29 1 5 2 132 9 206 2 257 1 34 2 259 3 11 1 63 10 159 1 14 3 163 3 313 2 166 6 18 3 94 1 350 3 352 4 150 1 123 1 71 2 73 19 25 1 196 3 198 1 
247 1 222 2 155 1 364 3 225 3 365 1 30 1 29 1 5 3 132 14 206 4 83 1 257 1 34 2 259 2 11 2 63 12 159 2 14 2 312 1 163 3 313 3 166 4 18 2 295 1 296 1 350 2 352 6 71 3 73 26 355 2 25 1 196 3 198 2 
247 1 222 3 279 1 155 1 364 4 225 3 365 1 30 1 29 1 32 1 5 3 132 20 83 1 206 4 257 1 34 4 323 1 259 4 369 1 11 2 63 21 159 1 14 4 16 1 312 1 348 1 163 5 313 3 166 8 18 5 239 1 295 1 296 1 94 1 350 4 352 6 150 1 71 3 73 41 355 1 25 1 196 4 198 3 
247 1 222 3 279 1 155 1 364 4 225 4 365 1 30 1 29 1 32 1 5 4 132 20 83 1 206 4 257 1 34 4 323 1 259 4 369 1 11 2 63 18 159 1 14 3 16 1 312 1 348 1 163 5 313 4 166 7 18 4 239 1 295 1 296 1 94 1 350 3 352 8 150 1 71 4 73 38 355 2 25 1 196 4 198 3 
247 1 222 4 279 1 155 1 364 7 225 2 365 1 30 1 29 1 32 1 5 2 132 27 83 1 206 4 257 1 34 4 259 7 369 1 11 1 63 25 159 1 14 7 16 1 312 1 118 2 348 1 163 8 313 2 166 14 18 8 239 1 295 1 296 1 350 7 352 4 150 2 71 2 73 52 355 1 25 1 196 7 198 2 
148 1 322 1 228 1 316 1 98 1 201 1 208 1 209 1 56 1 293 1 
283 1 119 1 
148 1 322 1 228 1 316 1 373 1 45 1 208 1 293 1 246 1 
297 1 151 1 
305 1 61 1 258 1 
337 2 161 1 90 1 104 1 78 1 293 1 322 1 148 1 316 1 228 1 98 1 285 1 24 1 208 1 134 1 287 1 209 1 56 1 
337 2 161 1 90 1 104 1 78 1 293 1 322 1 148 1 316 1 228 1 98 1 285 1 24 1 208 1 134 1 287 1 209 1 56 1 
337 2 161 1 90 1 104 1 78 1 293 1 322 1 148 1 316 1 228 1 98 1 285 1 24 1 208 1 134 1 287 1 209 1 56 1 
297 1 151 1 258 1 
297 1 151 1 258 1 
305 1 61 1 
305 1 61 1 258 1 
224 1 237 1 
337 1 280 1 224 1 322 1 228 1 282 2 283 1 285 1 286 2 134 1 208 1 137 1 327 2 90 1 115 1 310 1 331 1 237 1 238 2 119 1 293 1 50 2 148 1 316 1 242 1 24 1 221 1 
76 1 102 1 58 1 225 1 105 1 366 2 5 1 204 1 132 1 255 1 85 1 110 1 184 1 286 2 230 2 113 1 63 1 39 1 238 2 313 1 48 1 190 1 332 1 50 2 351 2 352 2 298 2 71 1 73 2 301 1 357 1 
358 1 140 2 328 1 266 1 101 1 67 1 47 1 321 1 366 2 252 1 306 1 298 2 351 2 97 1 85 1 110 1 172 1 218 1 232 1 
358 1 140 2 328 1 266 1 101 1 67 1 47 1 366 1 252 1 306 1 298 1 351 1 97 1 307 1 110 1 85 1 232 1 
174 1 76 1 376 1 47 1 321 1 366 1 204 1 281 1 298 1 351 1 85 1 110 1 220 1 325 1 
358 1 140 2 328 1 266 1 101 1 67 1 47 1 321 1 366 1 252 1 306 1 298 1 351 1 97 1 85 1 110 1 218 1 232 1 
31 1 
339 1 117 1 270 1 135 1 78 1 320 1 49 1 
1 1 128 1 359 1 153 1 177 1 339 1 78 2 135 1 260 1 90 1 49 1 377 1 23 1 125 1 24 1 317 1 269 1 
0 1 1 4 100 2 2 2 339 2 340 2 202 1 251 2 204 10 7 2 256 2 110 3 114 1 260 6 12 2 14 2 164 6 163 2 165 2 18 2 169 2 122 2 351 3 23 3 24 5 172 1 354 2 317 4 269 4 270 1 128 12 359 5 76 3 320 1 78 8 364 2 366 3 130 1 33 2 85 4 84 6 135 9 325 1 90 5 291 1 46 2 49 8 377 4 298 3 51 1 99 1 54 3 196 2 381 3 
128 10 1 2 100 1 359 1 222 2 339 2 155 1 78 7 364 4 365 1 181 1 256 1 83 1 84 8 34 2 135 13 260 5 90 1 14 4 118 1 164 8 163 4 49 8 18 4 295 1 296 1 377 2 122 5 150 1 51 1 23 1 193 1 24 1 317 2 269 2 196 4 198 1 
1 1 100 1 279 1 249 1 32 1 282 1 345 1 35 1 286 1 135 2 261 1 64 1 327 1 90 1 141 1 236 1 348 1 163 2 238 1 49 2 18 1 377 1 122 2 50 1 315 1 24 1 317 1 269 1 
1 1 339 1 320 1 78 1 49 1 377 1 317 1 269 1 270 1 135 1 
128 10 100 1 14 2 163 2 164 5 364 2 78 5 49 5 18 2 122 2 7 1 84 5 135 5 196 2 260 5 
359 1 90 1 23 1 24 1 339 1 78 1 
1 2 359 4 76 1 176 1 3 1 366 4 204 1 281 1 256 2 85 1 110 1 231 1 135 2 233 1 325 2 185 1 90 3 291 2 49 2 377 1 351 4 298 4 51 2 23 2 24 3 317 2 269 2 99 1 220 1 
199 1 76 1 249 1 225 1 58 1 366 1 5 1 204 1 282 2 110 1 85 1 184 1 286 3 325 1 87 1 137 1 63 1 327 2 64 2 375 1 313 1 238 3 190 1 50 2 352 2 351 1 298 1 71 1 73 1 74 1 54 1 197 1 
128 4 1 1 339 2 164 2 78 4 49 2 377 1 51 1 256 1 84 2 317 1 269 1 135 1 260 2 369 1 
277 1 208 1 293 1 
277 1 208 1 293 1 
65 1 224 1 208 1 56 1 293 1 
277 1 208 1 293 1 
208 1 55 1 293 1 
208 1 55 1 293 1 
208 1 55 1 293 1 
208 1 293 1 
228 1 316 1 
63 4 279 1 16 1 163 1 348 1 313 2 166 3 225 2 18 1 239 1 350 1 32 1 5 2 352 4 132 4 71 2 73 8 355 1 259 2 369 1 
63 3 279 1 117 1 16 1 348 1 163 1 166 2 18 1 239 1 32 1 132 3 73 6 259 2 369 1 
63 2 14 1 163 1 313 1 364 1 166 2 225 1 18 1 168 1 350 1 5 1 352 2 132 2 71 1 73 4 196 1 259 1 
63 4 222 1 14 1 163 1 364 1 166 2 18 1 350 1 150 1 132 3 34 2 73 7 196 1 259 1 198 1 
222 2 279 1 364 2 225 2 32 2 81 1 5 2 132 11 34 2 259 5 369 1 63 12 264 1 14 2 16 1 118 1 348 2 163 3 313 2 166 9 18 3 239 1 350 4 150 1 352 4 71 2 73 23 355 2 196 2 
63 1 73 1 34 1 
132 1 222 1 73 1 
63 3 14 1 163 1 313 1 364 1 225 1 166 3 18 1 168 1 350 1 5 1 352 2 132 3 7 1 71 1 73 6 196 1 259 2 
222 1 155 1 364 2 225 1 365 1 5 1 132 6 83 1 34 1 259 1 63 6 14 2 163 2 313 1 166 2 18 2 296 1 295 1 350 1 352 2 71 1 73 12 25 1 196 2 198 1 
63 3 279 1 163 1 348 1 166 2 18 1 32 1 350 1 132 3 73 6 259 1 
63 2 264 1 16 1 348 1 313 1 166 2 225 1 239 1 350 1 32 1 5 1 352 2 132 1 71 1 73 3 355 1 259 1 
63 5 236 1 279 1 348 2 163 2 313 1 225 1 166 5 18 2 32 2 350 2 5 1 352 2 132 5 71 1 73 10 25 1 259 3 
163 1 313 1 225 1 166 1 350 1 5 1 352 2 132 2 71 1 73 2 25 1 196 1 
63 2 14 1 163 1 313 1 364 1 166 2 225 1 18 1 350 1 5 1 352 2 132 2 71 1 73 4 25 1 196 1 259 1 
63 2 264 1 348 1 313 3 225 3 166 2 94 1 32 1 350 1 5 3 352 6 132 1 71 3 73 3 355 1 25 1 259 1 
222 3 279 2 364 3 225 5 32 3 5 5 132 16 34 4 259 7 369 1 63 18 264 1 14 3 16 1 348 3 162 1 163 5 313 5 166 12 18 5 239 1 168 1 94 1 350 5 214 1 352 10 150 1 71 5 73 34 355 2 271 1 25 1 196 3 198 1 
222 1 279 1 225 1 32 1 5 1 132 4 34 1 259 2 369 1 63 4 16 1 163 1 348 1 313 1 166 2 18 1 296 1 239 1 352 2 71 1 73 8 25 1 198 1 
222 1 279 1 364 1 225 2 32 1 5 2 132 6 34 2 259 2 369 1 63 5 16 1 348 1 163 2 313 2 166 3 18 1 239 1 296 1 168 1 350 1 352 4 150 1 71 2 73 11 25 1 196 1 198 1 
222 1 279 1 155 1 364 2 225 3 365 1 32 1 5 3 132 9 83 1 34 1 259 3 369 1 63 10 14 2 16 1 348 1 163 3 313 3 166 4 18 3 239 1 168 1 296 1 295 1 350 1 352 6 71 3 73 19 355 1 25 1 196 2 198 1 
222 1 279 1 155 1 364 2 225 3 365 1 32 1 5 3 132 10 83 1 34 1 259 3 369 1 63 7 14 1 16 1 348 1 163 3 313 3 166 5 18 2 239 1 168 1 296 1 295 1 350 2 352 6 71 3 73 17 355 1 25 1 196 2 198 1 
222 1 279 1 225 1 32 1 5 1 132 4 34 1 259 2 369 1 63 4 16 1 163 1 348 1 313 1 166 2 18 1 296 1 239 1 352 2 71 1 73 8 25 1 198 1 
222 1 155 1 364 2 225 1 365 1 5 1 132 6 83 1 34 1 259 1 63 6 14 2 163 2 313 1 166 2 18 2 296 1 295 1 350 1 352 2 71 1 73 12 25 1 196 2 198 1 
222 1 279 1 155 1 364 2 225 4 365 1 32 1 5 4 132 10 83 1 34 1 259 3 369 1 63 8 14 1 16 1 348 1 163 3 313 4 166 5 18 2 239 1 295 1 296 1 168 1 350 2 352 8 71 4 73 18 355 2 25 1 196 2 198 1 
222 1 155 1 364 3 225 4 365 1 5 4 132 9 83 1 34 1 259 3 63 7 14 2 163 3 313 4 166 6 18 2 295 1 296 1 350 3 94 1 352 8 71 4 73 16 355 2 25 1 196 3 198 1 
63 4 279 1 16 1 348 3 163 1 166 6 18 1 239 2 32 3 350 3 132 3 73 7 259 3 
222 1 279 1 155 1 364 2 225 4 365 1 32 1 5 4 132 10 83 1 34 1 259 3 369 1 63 8 14 1 16 1 348 1 163 3 313 4 166 4 18 2 239 1 295 1 296 1 350 1 94 1 352 8 71 4 73 18 355 2 25 1 196 2 198 1 
278 1 44 1 226 1 
139 1 278 1 109 1 70 1 44 1 363 1 154 1 226 1 
366 1 204 1 281 1 351 1 298 1 76 1 85 1 110 1 117 1 220 1 325 1 
137 1 199 1 327 1 76 1 238 2 240 1 50 1 366 1 204 1 282 1 298 1 351 1 85 1 110 1 286 2 54 1 325 1 87 1 
137 1 199 1 327 1 291 1 76 2 238 2 167 1 169 1 240 1 50 2 366 1 204 3 282 2 298 1 351 1 33 1 35 1 85 1 110 1 286 2 54 2 86 1 87 1 
199 1 76 2 366 2 253 1 204 3 108 1 282 2 33 1 110 1 85 1 35 1 286 2 86 1 137 1 327 1 291 1 238 2 167 1 240 1 169 1 50 2 351 2 298 2 54 2 
359 1 76 1 339 1 340 1 78 1 366 3 253 1 204 4 344 1 33 1 110 1 85 1 325 1 89 1 90 2 291 1 165 1 169 1 351 3 298 3 24 2 54 1 381 1 
359 1 90 2 291 1 76 1 339 1 46 1 340 1 78 1 165 1 169 1 366 3 253 1 204 4 298 3 351 3 33 1 24 2 85 1 110 1 54 1 325 1 381 1 
366 1 351 1 298 1 85 1 110 1 314 1 
275 1 266 1 76 2 15 1 144 1 314 1 294 1 366 7 379 1 204 3 298 6 351 7 96 1 255 1 172 1 110 2 85 3 230 1 54 1 114 1 325 2 
199 1 58 2 5 2 204 1 207 1 110 1 259 2 158 1 63 3 212 1 16 1 348 1 163 1 313 2 166 2 18 1 351 1 352 4 71 2 172 1 73 6 74 1 274 1 76 1 279 1 225 2 366 1 32 1 282 1 132 3 184 2 85 1 286 2 87 1 369 1 137 2 371 1 327 1 39 1 375 1 238 2 48 1 240 1 239 1 50 1 298 1 54 1 
1 2 359 2 339 1 280 1 340 1 78 1 320 1 251 1 366 1 204 2 135 1 325 1 90 3 12 1 46 1 165 1 49 1 377 2 351 1 298 1 23 1 24 3 317 2 354 1 269 2 270 1 99 1 381 1 
76 1 165 1 314 1 202 1 366 2 204 2 298 2 351 2 172 1 110 1 85 2 54 1 114 1 
76 1 366 4 253 1 281 1 204 1 298 4 351 4 133 1 85 1 172 1 110 1 220 1 325 1 
152 1 291 1 76 1 103 1 292 1 144 1 366 2 204 1 298 2 351 2 96 1 110 1 85 2 54 1 
366 1 252 1 306 1 351 1 298 1 140 1 97 1 85 1 110 1 325 1 
366 2 204 1 351 2 298 2 266 1 76 1 255 1 85 1 110 1 172 1 332 1 
275 1 291 1 76 2 366 5 281 1 204 3 379 1 298 4 351 5 133 1 255 1 172 1 110 2 85 2 220 1 325 1 
291 1 338 1 76 2 366 5 281 1 204 3 379 1 298 4 351 5 133 1 255 1 172 1 110 2 85 2 220 1 325 1 
137 1 199 1 327 1 76 1 238 2 240 1 50 1 366 1 204 1 282 1 298 1 351 1 108 1 85 1 110 1 286 2 54 1 325 1 
291 1 76 1 15 1 144 1 366 1 204 1 298 1 351 1 96 1 110 1 85 2 54 1 114 1 
137 1 262 1 334 1 183 1 179 1 
137 1 262 2 90 2 374 1 339 1 280 1 340 1 78 1 167 1 179 2 68 1 147 1 203 1 334 2 183 1 52 1 24 2 35 1 86 1 
50 1 334 1 183 1 286 1 238 1 301 1 113 1 179 1 357 1 
183 1 147 1 68 1 
333 1 117 1 324 1 88 1 
333 1 53 1 223 1 42 1 40 1 324 1 88 1 
53 1 245 1 10 1 
138 1 211 1 223 1 40 1 42 3 116 2 129 1 333 1 53 3 60 1 324 1 88 1 
289 1 186 1 333 1 53 2 223 1 42 2 40 1 324 1 88 1 
252 1 333 1 140 1 254 1 53 1 223 1 171 1 42 1 40 1 129 1 232 1 
333 1 53 1 223 1 42 1 40 1 129 1 324 1 
53 1 223 1 42 1 40 1 129 1 324 2 88 1 
223 2 40 2 42 2 129 1 17 1 19 1 333 1 53 2 324 1 37 1 
289 2 276 1 223 1 40 1 42 3 129 1 121 1 333 2 53 3 171 1 324 1 88 1 173 1 
289 1 140 2 223 1 101 1 40 1 42 2 129 1 252 1 333 1 306 1 229 1 53 2 232 1 324 1 88 1 
289 2 186 1 223 2 40 2 42 4 129 1 333 2 69 1 53 4 171 1 324 1 88 1 173 1 
333 1 53 1 223 1 42 1 40 1 129 1 324 1 88 1 
289 2 211 1 223 1 116 1 42 4 40 1 205 1 333 3 60 1 53 4 171 1 324 2 88 2 173 1 
289 1 333 1 372 1 319 1 175 1 53 2 223 1 42 2 40 1 129 1 324 1 88 1 
336 1 211 2 223 1 40 1 42 3 116 2 129 1 333 1 60 1 53 3 324 1 88 1 
333 2 326 2 302 1 178 1 
370 1 53 1 223 1 42 1 40 1 129 1 
289 1 333 1 276 1 53 2 223 1 42 2 40 1 129 1 324 1 88 1 
235 1 
333 1 53 1 223 1 42 1 40 1 129 1 324 1 88 1 
289 1 276 1 333 1 53 3 223 1 116 1 42 3 40 1 129 1 324 1 88 1 
205 1 333 1 171 1 173 1 
333 1 324 1 

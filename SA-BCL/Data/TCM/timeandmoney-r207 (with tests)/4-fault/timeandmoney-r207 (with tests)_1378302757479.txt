#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (100,303,359) (100,303,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (100,303,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (100,303,359) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (52,149) (52,149) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (100,303,359) (100,303,359) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (87,193) 26 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (87,193) 26 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (87,193) 38 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (87,193) 38 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 2 106 2 297 1 62 2 229 1 251 1 92 1 30 1 277 6 33 5 371 3 301 1 257 1 346 2 118 1 212 1 97 1 121 1 46 4 261 2 17 2 81 2 290 9 380 1 23 1 154 1 86 9 363 1 
2 2 106 2 297 1 62 2 229 1 251 1 92 1 30 1 277 6 33 5 371 3 301 1 257 1 346 2 118 1 212 1 97 1 121 1 46 4 261 2 17 2 81 2 290 9 380 1 23 1 154 1 86 9 363 1 
2 2 106 2 297 1 62 2 229 1 251 1 92 1 30 1 277 7 33 6 371 4 301 1 257 1 346 2 118 1 212 1 97 1 121 1 46 5 261 2 17 2 81 2 290 10 380 1 23 1 154 1 86 10 363 1 
2 2 106 2 297 1 62 2 229 1 251 1 92 1 30 1 277 4 33 4 371 2 301 1 257 1 346 1 118 1 212 1 97 1 121 1 46 3 261 2 17 2 81 2 290 7 380 1 154 1 86 7 363 1 
106 1 62 1 229 1 251 1 46 2 261 1 17 1 81 1 277 3 290 4 33 3 371 1 301 1 380 1 23 1 346 2 212 1 86 4 
227 1 90 1 2 1 106 1 62 1 229 1 92 1 17 1 81 1 239 1 33 1 290 2 301 1 257 1 380 1 86 2 
297 1 2 1 62 2 229 1 46 1 81 2 277 1 290 3 33 2 371 1 301 1 380 1 86 3 
2 1 297 1 106 1 62 2 229 1 251 1 277 7 33 5 371 3 301 1 205 1 346 2 188 1 212 1 121 1 46 4 261 1 17 1 81 2 290 9 380 1 23 1 154 1 86 9 
2 1 297 1 106 1 62 2 229 1 251 1 277 7 33 5 371 3 301 1 205 1 346 2 188 1 212 1 121 1 46 4 261 1 17 1 81 2 290 9 380 1 23 1 154 1 86 9 
162 1 356 1 350 1 
356 1 6 1 214 2 
355 1 132 2 178 2 68 2 361 1 32 2 112 2 183 2 
58 2 273 1 28 1 0 1 132 3 134 1 228 1 3 2 178 2 317 2 91 1 93 1 32 3 112 2 183 2 300 1 114 1 68 2 37 1 372 1 211 1 282 1 281 2 283 1 329 1 74 2 168 1 238 1 195 1 355 1 198 1 378 1 294 1 361 1 242 1 129 1 271 1 
132 1 104 1 178 1 68 1 368 1 361 1 334 1 32 1 112 1 183 1 
132 1 99 1 369 1 230 1 350 1 32 1 334 1 113 1 183 1 21 1 356 1 127 1 224 1 324 1 
132 1 178 1 99 1 369 1 350 1 32 1 334 1 113 2 112 1 183 1 356 1 68 1 127 1 224 1 324 2 
71 1 266 1 312 1 324 1 113 1 
71 1 356 1 350 1 122 1 312 1 147 1 324 2 113 2 
71 1 324 1 113 1 
132 1 178 1 368 1 334 1 32 1 113 1 112 1 51 1 183 1 104 1 68 1 361 1 312 1 324 1 
356 1 
71 1 356 1 350 1 312 1 147 1 94 1 324 2 113 2 
176 2 71 2 73 2 332 1 77 1 276 1 350 1 253 1 147 1 113 5 265 2 291 1 356 1 312 2 243 1 156 1 324 5 213 1 88 1 
355 1 162 1 
132 2 72 1 178 1 32 2 112 1 183 2 355 2 84 1 68 1 
197 1 232 1 42 1 
28 1 132 1 74 1 134 1 317 1 91 1 32 1 195 1 355 1 125 1 114 1 372 1 242 1 129 1 281 1 283 1 
28 1 132 2 74 1 134 1 135 1 178 1 317 1 91 1 32 2 195 1 335 1 183 1 114 1 68 1 372 1 242 1 129 1 281 1 283 1 42 1 
355 1 132 3 135 1 178 3 68 3 32 3 112 1 183 3 
132 1 178 1 68 1 368 1 334 1 32 1 183 1 
132 1 72 1 178 1 84 1 68 1 334 1 32 1 112 1 183 1 
58 1 273 1 28 1 0 1 132 4 134 1 3 2 178 3 135 1 317 1 91 1 369 1 93 1 32 4 112 2 113 1 183 3 114 1 68 3 372 1 211 1 324 1 281 1 283 1 70 1 329 1 74 1 99 1 168 1 238 1 334 1 123 1 195 1 335 1 355 1 198 1 84 1 294 1 127 1 361 1 242 1 129 1 271 1 224 1 
355 1 21 1 132 2 178 1 135 1 68 1 128 1 32 2 183 2 
132 3 135 2 178 3 331 1 99 1 369 1 334 1 32 3 123 1 112 1 113 1 335 1 183 3 356 1 84 1 68 3 127 1 324 1 224 1 
132 2 135 1 178 2 32 2 112 1 183 2 197 1 84 1 68 2 42 1 
28 1 132 1 74 1 134 1 317 1 91 1 32 1 195 1 355 1 114 1 372 1 129 1 242 1 281 1 283 1 
132 1 74 1 317 1 91 1 32 1 195 1 355 1 66 1 114 1 187 1 372 1 129 1 242 1 281 1 283 1 
273 1 58 4 226 1 0 2 365 1 228 2 3 2 370 1 232 2 39 1 189 1 211 1 141 1 42 2 191 1 329 1 44 1 238 1 306 1 20 1 102 1 197 2 294 1 271 1 
132 1 178 1 68 1 369 1 47 1 334 1 32 1 183 1 
132 5 135 2 178 4 32 5 196 1 112 1 335 1 183 5 21 1 355 1 84 1 68 4 22 1 128 1 
132 2 178 2 68 2 368 1 47 1 334 1 32 2 183 2 
360 1 342 1 
360 1 342 1 
98 1 41 1 
98 1 41 1 
98 1 41 1 
279 1 360 1 342 1 
279 1 360 1 342 1 
98 1 193 1 360 2 41 1 87 1 342 2 
360 1 24 1 342 1 
279 1 360 1 342 1 
360 1 56 1 342 1 
360 1 56 1 342 1 
360 1 56 1 342 1 
1 2 330 2 249 1 299 2 377 1 193 1 341 3 333 1 167 1 289 2 113 2 342 2 278 2 356 1 360 2 173 1 157 1 324 2 374 1 
1 1 132 2 109 1 246 1 178 2 299 1 341 1 32 2 181 1 113 1 342 1 183 2 139 1 278 1 256 1 68 2 163 1 324 1 377 1 289 1 355 1 360 1 269 1 24 1 
106 1 261 1 17 1 
106 1 17 1 239 1 
59 1 316 1 53 1 261 2 17 3 239 1 
59 1 248 1 316 1 261 1 17 2 239 1 
59 2 316 1 261 1 17 2 239 1 
176 1 276 1 181 1 204 2 113 5 139 1 184 2 344 1 6 1 186 1 233 1 320 1 39 1 189 1 324 5 326 2 11 1 191 1 71 1 73 1 214 3 15 1 77 2 350 1 147 1 102 1 265 1 356 2 269 1 311 1 312 4 243 3 
176 2 275 5 276 1 204 6 113 9 139 4 344 3 208 1 6 3 320 2 39 3 347 1 189 3 324 9 326 6 11 1 328 1 191 3 71 6 73 2 215 1 214 9 166 1 15 2 77 6 350 1 147 1 102 3 265 2 291 1 266 5 356 5 312 7 243 8 57 1 
176 1 204 2 113 3 139 1 184 1 344 1 6 2 186 1 320 1 39 1 189 1 324 3 326 2 191 1 73 1 214 4 15 1 77 2 350 1 102 1 265 1 291 1 356 3 311 1 312 2 243 3 
176 1 204 4 113 4 139 2 184 2 344 2 208 1 6 3 186 1 320 1 39 2 189 2 324 4 326 4 191 2 328 1 73 1 214 7 166 1 15 1 77 4 350 1 102 2 265 1 291 1 356 4 311 1 312 3 243 5 
162 1 242 1 95 1 
242 1 304 1 
16 1 
372 1 242 1 
34 1 114 1 14 1 372 1 242 3 95 2 
114 1 372 1 242 1 
242 1 124 1 
226 3 58 7 0 3 365 2 191 1 177 2 228 4 137 1 263 1 353 1 231 1 354 1 241 1 268 1 140 1 153 1 189 1 
226 3 58 7 0 3 365 2 191 1 177 2 228 4 137 1 263 1 353 1 231 1 354 1 241 1 268 1 140 1 153 1 189 1 
226 3 58 7 0 3 365 2 191 1 177 2 228 4 137 1 263 1 353 1 231 1 354 1 241 1 171 1 268 1 140 1 153 1 189 1 
58 31 226 10 0 15 365 5 177 3 3 2 228 16 137 2 319 1 231 5 344 3 140 1 8 3 39 3 211 1 189 4 323 1 284 1 191 4 376 1 237 1 238 1 263 1 353 1 102 3 354 2 240 1 241 2 379 1 358 4 268 1 294 1 153 2 271 1 
58 9 226 4 0 4 365 3 177 2 3 4 228 5 137 1 231 1 140 1 189 1 211 2 191 1 238 2 146 1 263 1 354 1 240 1 241 1 268 1 294 2 105 1 153 1 271 2 
35 1 2 1 301 1 74 1 317 1 62 1 359 1 100 1 86 1 254 1 281 1 81 1 290 1 
2 1 74 1 62 1 317 1 305 1 100 1 252 1 277 1 81 1 290 2 35 1 336 1 86 2 281 1 
35 1 336 1 2 1 74 1 317 1 252 1 303 1 86 1 281 1 277 1 290 1 
2 2 74 1 62 1 317 1 349 1 305 1 81 1 52 1 290 1 35 2 149 1 129 1 86 1 281 1 
35 1 2 1 301 1 74 1 317 1 62 1 359 1 100 1 252 1 86 1 281 1 81 1 290 1 
295 1 
203 2 113 5 115 1 6 2 258 2 117 2 348 1 259 1 71 6 73 1 74 2 76 4 214 2 15 1 77 2 79 1 350 1 18 1 307 1 21 1 265 1 356 2 222 1 126 1 127 1 129 2 224 1 174 1 132 1 176 1 317 2 91 1 366 1 179 1 276 1 369 1 230 1 32 1 183 1 138 2 185 2 372 1 324 5 281 2 145 2 192 1 99 1 286 2 147 3 334 1 195 1 242 1 202 1 243 2 381 1 
132 1 179 1 369 1 230 1 32 1 94 1 113 3 183 1 324 3 71 2 76 2 145 1 99 1 334 1 147 1 18 1 307 1 21 1 222 1 126 1 127 1 224 1 
132 1 179 1 369 1 230 1 32 1 94 1 113 3 183 1 117 1 324 3 71 1 76 3 99 1 350 1 334 1 147 1 18 1 307 1 21 1 356 1 222 1 126 1 127 1 224 1 
132 1 179 1 369 1 230 1 94 1 32 1 113 3 183 1 138 1 117 1 324 3 71 2 76 3 145 1 99 1 350 1 147 1 334 1 18 1 307 1 21 1 356 1 222 1 126 1 127 1 224 1 
203 2 113 5 302 1 258 2 6 2 117 4 259 1 71 7 73 1 76 6 216 1 77 1 351 1 350 5 18 1 307 1 21 1 265 1 356 5 222 1 310 1 127 1 126 1 224 1 132 1 176 1 179 1 369 1 276 1 230 1 32 1 94 1 183 1 138 4 185 2 324 5 375 1 145 4 192 1 99 1 286 2 334 1 147 3 243 1 
203 2 113 4 258 2 6 2 117 2 259 1 71 4 73 1 76 4 214 2 77 1 350 1 18 1 307 1 21 1 265 1 356 2 222 1 127 1 126 1 224 1 174 1 132 1 176 1 179 1 369 1 276 1 230 1 32 1 183 1 138 2 185 2 324 4 192 1 145 2 99 1 286 2 334 1 147 2 243 1 
132 1 176 1 203 2 179 1 369 1 276 1 230 1 32 1 113 4 183 1 138 2 185 2 302 1 6 2 258 2 117 2 324 4 259 1 71 4 375 1 73 1 76 4 145 2 192 1 216 1 77 1 99 1 286 2 350 1 147 2 334 1 18 1 307 1 21 1 265 1 356 1 222 1 126 1 127 1 243 1 224 1 
132 1 176 1 203 2 179 1 369 1 276 1 230 1 32 1 113 4 183 1 138 2 185 2 302 1 6 2 258 2 117 2 324 4 259 1 71 4 375 1 73 1 76 4 145 2 192 1 216 1 77 1 99 1 286 2 350 1 147 2 334 1 18 1 307 1 21 1 265 1 356 1 222 1 126 1 127 1 243 1 224 1 
27 1 132 1 176 1 179 1 369 1 276 1 230 1 32 1 159 1 113 4 183 1 138 2 302 1 258 2 345 2 117 2 324 4 71 4 73 1 76 4 214 2 145 2 192 1 77 1 99 1 286 2 350 1 147 2 334 1 18 1 307 1 21 1 265 1 151 2 356 1 222 1 126 1 127 1 152 1 243 1 224 1 
132 1 176 1 203 2 179 1 276 1 369 1 230 1 32 1 113 4 183 1 138 3 185 2 302 1 6 2 258 2 117 3 324 4 259 1 71 5 73 1 375 1 76 5 192 1 216 1 145 3 77 1 99 1 286 2 350 1 147 2 334 1 18 1 307 1 21 1 265 1 356 1 222 1 310 1 126 1 127 1 243 1 224 1 
132 1 176 1 203 2 179 1 276 1 369 1 230 1 32 1 113 4 183 1 138 3 185 2 302 1 6 2 258 2 117 3 324 4 259 1 71 5 73 1 375 1 76 5 192 1 216 1 145 3 77 1 99 1 286 2 350 1 147 2 334 1 18 1 307 1 21 1 265 1 356 1 222 1 310 1 126 1 127 1 243 1 224 1 
159 1 113 4 258 2 345 2 117 2 71 4 73 1 76 4 214 2 77 1 350 1 18 1 307 1 21 1 265 1 356 1 222 1 127 1 126 1 224 1 174 1 132 1 176 1 179 1 369 1 276 1 230 1 32 1 183 1 138 2 324 4 192 1 145 2 99 1 286 2 334 1 147 2 151 2 243 1 
273 1 226 2 58 6 365 2 0 3 177 1 3 2 228 3 162 1 232 1 140 1 211 1 189 1 42 1 191 1 329 1 238 1 306 1 263 1 354 1 197 1 355 2 268 1 294 1 153 1 271 1 
226 2 273 1 58 14 365 1 0 6 3 4 228 8 93 1 231 1 160 1 232 11 344 2 5 1 37 1 8 3 39 1 211 2 189 2 9 1 42 11 191 1 329 2 376 1 217 1 238 2 262 1 102 2 355 1 197 4 358 3 379 1 294 2 271 2 
28 1 273 1 58 2 132 2 0 1 134 1 317 1 178 1 135 1 3 2 228 1 91 1 93 1 32 2 183 1 114 1 68 1 372 1 37 1 211 1 281 1 283 1 9 1 143 1 74 1 329 1 238 1 169 1 48 1 195 1 335 1 355 1 125 1 197 1 294 1 242 1 129 1 271 1 
58 20 0 10 60 1 3 6 252 1 114 2 344 2 68 1 211 3 9 1 10 2 74 3 168 2 263 1 354 1 355 2 268 1 129 1 271 3 273 3 28 2 226 8 365 4 132 3 177 1 134 2 317 3 135 1 178 1 228 10 91 2 93 1 32 3 231 4 183 1 232 7 36 2 140 1 37 1 372 2 321 2 39 2 189 3 281 3 283 2 42 7 327 1 191 3 329 3 238 3 335 1 195 2 102 2 197 7 199 2 294 3 153 1 242 2 382 1 
58 2 0 1 3 4 252 1 64 1 65 1 114 1 206 1 68 1 211 2 165 1 74 7 306 1 267 1 129 2 271 2 274 1 273 2 132 1 364 1 228 1 317 6 135 1 178 1 91 3 366 1 93 1 32 1 183 1 372 3 37 1 40 1 282 2 281 7 43 1 329 2 238 2 195 4 49 1 50 1 294 2 242 4 202 1 
226 1 273 1 58 3 365 1 132 1 0 2 178 1 3 2 228 1 32 1 112 1 183 1 232 1 344 1 68 1 39 1 211 1 189 1 9 1 42 1 191 1 329 1 238 1 102 1 197 1 84 1 294 1 337 1 271 1 
226 1 58 2 273 1 329 1 3 2 228 2 306 1 238 1 231 1 20 1 102 1 197 1 232 1 294 1 211 1 189 1 271 1 42 1 
226 1 58 2 273 1 365 1 0 2 191 1 329 1 3 2 44 1 306 1 238 1 197 1 232 1 294 1 39 1 211 1 271 1 42 1 
273 1 58 4 226 2 0 2 365 1 228 2 3 2 231 1 232 2 344 1 39 1 189 1 211 1 42 2 191 1 329 1 238 1 306 1 102 1 197 2 294 1 271 1 
226 1 58 2 273 1 329 1 3 2 228 2 238 1 231 1 20 1 102 1 197 1 232 1 267 1 294 1 211 1 189 1 271 1 42 1 
226 1 58 2 273 1 365 1 0 2 191 1 329 1 3 2 44 1 238 1 197 1 232 1 267 1 294 1 39 1 211 1 271 1 42 1 
273 1 58 4 226 2 0 2 365 1 228 2 3 2 231 1 232 2 344 1 39 1 189 1 211 1 42 2 191 1 329 1 238 1 102 1 197 2 267 1 294 1 271 1 
58 4 273 1 226 2 0 2 365 1 228 2 3 2 231 1 232 2 344 1 39 1 189 1 211 1 42 2 191 1 329 1 238 1 102 1 197 2 294 1 271 1 
58 2 28 1 273 1 132 1 0 1 134 1 228 1 317 1 3 2 91 1 93 1 32 1 114 1 37 1 372 1 211 1 281 1 283 1 74 1 329 1 168 1 238 1 195 1 355 1 294 1 129 1 242 1 271 1 
58 2 273 1 132 1 0 1 61 1 228 1 317 1 3 2 91 1 93 1 32 1 114 1 66 1 187 1 37 1 372 1 211 1 281 1 283 1 74 1 329 1 238 1 195 1 355 1 294 1 129 1 242 1 271 1 
273 1 58 4 226 2 0 2 365 1 228 2 3 2 231 1 232 2 344 1 39 1 189 1 211 1 9 1 42 2 191 1 329 1 238 1 102 1 197 2 294 1 271 1 
226 2 58 4 28 1 273 1 365 1 0 2 132 1 134 1 228 2 317 1 3 2 91 1 254 1 32 1 231 1 232 2 114 1 344 1 36 1 39 1 372 1 189 1 211 1 281 1 283 1 42 2 191 1 74 1 329 1 168 1 238 1 102 1 195 1 197 2 294 1 242 1 271 1 
226 1 273 1 58 3 0 1 132 1 178 1 3 2 228 2 32 1 231 1 112 1 183 1 232 1 344 1 68 1 39 1 211 1 189 1 9 1 42 1 191 1 329 1 75 1 238 1 102 1 197 1 84 1 294 1 271 1 
58 19 226 6 314 1 365 3 0 10 133 2 3 4 228 9 231 3 344 3 207 1 8 1 39 3 211 2 189 3 120 1 191 3 376 1 238 2 146 1 102 3 309 1 357 2 358 2 379 1 221 1 294 2 271 2 313 1 131 1 
226 4 58 26 365 2 0 12 133 1 3 6 228 14 136 1 231 2 344 3 207 2 210 1 8 2 39 2 211 3 189 3 164 1 120 1 191 2 376 2 238 3 146 1 19 1 102 3 170 1 240 2 357 4 358 2 221 1 294 3 271 3 313 2 225 1 131 1 
58 41 0 21 3 6 344 4 207 1 210 1 8 3 211 3 164 1 120 1 263 1 19 1 170 1 354 1 358 4 357 4 221 1 268 1 271 3 313 2 131 1 225 1 226 8 365 4 314 1 133 1 177 1 228 20 136 1 231 4 140 1 39 4 189 5 142 1 191 5 376 3 238 3 146 1 102 4 240 1 379 1 294 3 153 1 
58 38 226 7 314 1 365 4 0 18 133 1 177 1 3 8 228 20 136 1 231 3 344 4 207 1 210 1 140 1 8 3 39 3 211 4 189 5 164 1 142 1 120 1 191 4 376 3 238 4 146 1 263 1 19 1 102 4 354 1 170 1 240 2 357 4 358 4 379 1 268 1 221 1 294 4 153 1 271 4 313 2 225 1 131 1 
58 52 226 14 365 7 0 25 133 1 177 1 3 4 228 27 136 1 231 7 344 7 207 1 210 1 140 1 8 4 39 7 211 2 189 8 164 1 120 1 191 8 376 2 217 2 238 2 146 1 263 1 19 1 102 7 354 1 170 1 240 1 357 4 358 4 379 2 268 1 221 1 294 2 153 1 271 2 313 1 225 1 131 1 
1 1 278 1 249 1 299 1 193 1 360 1 167 1 325 1 289 1 342 1 
256 1 24 1 
1 1 108 1 278 1 250 1 299 1 45 1 360 1 289 1 342 1 
1 1 330 1 249 1 377 1 299 1 193 1 341 2 167 1 113 1 289 1 342 1 278 1 356 1 360 1 173 1 157 1 324 1 374 1 
1 1 330 1 249 1 377 1 299 1 193 1 341 2 167 1 113 1 289 1 342 1 278 1 356 1 360 1 173 1 157 1 324 1 374 1 
1 1 330 1 249 1 377 1 299 1 193 1 341 2 167 1 113 1 289 1 342 1 278 1 356 1 360 1 173 1 157 1 324 1 374 1 
279 1 87 1 26 1 
279 1 87 1 26 1 
38 1 56 1 
38 1 87 1 56 1 
246 1 163 1 
132 2 1 1 109 1 246 1 178 2 299 1 341 1 32 2 181 1 113 1 342 1 183 2 139 1 278 1 256 1 68 2 163 1 324 1 374 1 330 1 289 1 103 1 355 1 360 1 269 1 312 1 24 1 
279 1 26 1 
38 1 87 1 56 1 
273 1 58 2 132 2 0 1 340 1 3 2 228 1 317 2 91 1 180 1 93 1 32 2 183 2 372 1 37 1 211 1 281 2 282 2 9 1 165 1 43 1 74 2 329 1 285 1 287 1 194 1 238 1 195 1 294 1 242 1 271 1 
106 1 74 2 317 2 91 1 236 1 260 1 261 1 252 1 31 1 254 1 17 2 239 1 195 1 264 1 53 1 7 1 96 1 281 2 235 1 
106 1 74 1 317 1 236 1 91 1 78 1 260 1 261 1 252 1 31 1 17 2 239 1 195 1 264 1 53 1 7 1 281 1 
74 1 317 1 91 1 366 1 195 1 7 1 372 1 242 1 129 1 223 1 202 1 25 1 281 1 235 1 
106 1 74 1 317 1 236 1 91 1 260 1 261 1 252 1 31 1 17 2 239 1 195 1 264 1 53 1 7 1 96 1 281 1 235 1 
29 1 
162 1 356 1 332 1 77 1 350 1 243 1 156 1 
176 1 203 1 276 1 113 1 185 1 6 1 324 1 259 1 71 1 73 1 214 1 77 1 350 1 147 1 265 1 356 2 243 1 
298 2 254 1 255 1 204 6 111 2 113 5 114 3 344 2 116 1 6 6 348 1 304 3 71 5 73 4 74 3 214 12 15 2 77 8 350 2 124 2 265 4 356 8 127 2 129 1 130 2 85 2 172 2 176 4 317 3 91 3 276 4 95 2 34 1 372 3 39 2 322 1 189 2 324 5 281 3 326 6 191 2 332 1 147 3 288 1 195 4 102 2 199 2 54 2 242 10 156 1 155 2 243 9 296 1 339 2 
176 2 276 2 136 1 111 1 204 5 113 1 344 2 6 3 210 1 8 1 39 2 189 2 164 1 324 1 348 1 326 5 71 1 191 2 73 2 376 1 214 6 15 1 77 5 350 2 147 1 19 1 102 2 170 1 83 1 265 2 356 5 358 1 54 2 270 1 243 8 
132 1 176 1 178 1 368 1 276 1 32 1 111 1 113 1 112 1 183 1 68 1 189 2 324 1 191 1 73 1 216 1 77 2 334 1 263 1 354 1 51 1 265 1 104 1 293 1 54 2 153 1 361 1 243 2 
176 1 73 1 332 1 276 1 77 1 350 1 265 1 356 1 156 1 243 1 
326 5 191 2 214 10 77 5 111 1 204 5 102 2 199 1 344 2 356 5 6 5 54 2 39 2 189 2 243 5 
71 1 356 1 350 1 324 1 147 1 113 1 
89 1 176 2 317 4 91 1 366 1 276 1 255 2 113 3 372 1 324 3 281 4 348 2 71 4 73 2 74 4 15 2 77 2 79 1 147 2 148 1 195 1 288 1 265 2 291 1 242 1 129 2 202 1 243 2 381 1 
58 1 28 1 273 1 0 1 132 3 134 1 3 2 317 1 178 2 91 1 93 1 32 3 112 2 183 2 114 1 68 2 372 1 211 1 281 1 283 1 74 1 329 1 168 1 238 1 195 1 355 1 198 1 294 1 361 1 129 1 242 1 271 1 
326 2 177 1 176 1 73 1 214 4 15 1 77 2 276 1 350 2 204 2 265 1 356 4 6 2 243 1 348 1 
299 1 110 1 289 1 
299 1 110 1 289 1 
246 1 299 1 167 1 69 1 289 1 
299 1 110 1 289 1 
299 1 182 1 289 1 
299 1 182 1 289 1 
299 1 182 1 289 1 
299 1 289 1 
360 1 342 1 
58 8 226 3 0 4 365 2 177 1 191 1 228 4 3 4 238 2 263 1 231 1 354 1 240 1 268 1 294 2 140 1 153 1 189 1 211 2 271 2 
226 2 58 6 0 3 365 2 177 1 191 1 228 3 263 1 354 1 162 1 268 1 140 1 153 1 189 1 
226 2 58 4 365 1 0 2 191 1 3 2 228 2 238 1 102 1 231 1 344 1 294 1 39 1 211 1 189 1 271 1 244 1 
58 7 226 2 365 1 0 4 191 1 376 1 228 3 102 1 231 1 344 1 358 2 379 1 39 1 8 1 189 1 
226 9 58 23 0 12 365 5 177 1 228 11 3 4 231 4 160 1 344 2 140 1 8 2 39 2 189 3 211 2 119 1 191 3 217 1 238 2 263 1 102 2 354 2 240 2 379 1 358 2 268 1 294 2 153 2 271 2 
58 1 0 1 358 1 
58 1 228 1 8 1 
58 6 226 3 0 3 365 2 191 1 3 2 228 3 238 1 102 1 231 1 199 1 344 1 294 1 39 1 211 1 189 1 271 1 244 1 
58 12 226 2 0 6 365 1 3 2 228 6 136 1 231 1 344 2 210 1 8 1 39 2 211 1 189 2 164 1 191 2 376 1 238 1 146 1 102 2 19 1 170 1 358 1 294 1 271 1 
58 6 226 2 0 3 365 1 191 1 228 3 263 1 231 1 354 1 153 1 189 1 
226 2 58 3 365 1 0 2 228 1 3 2 238 1 231 1 354 1 240 1 268 1 140 1 294 1 153 1 211 1 119 1 271 1 
226 5 58 10 365 3 0 5 191 2 3 2 228 5 238 1 146 1 263 1 231 2 354 2 293 1 294 1 153 2 211 1 189 2 271 1 
58 2 226 1 3 2 228 2 238 1 146 1 102 1 231 1 294 1 211 1 189 1 271 1 
226 2 58 4 365 1 0 2 191 1 3 2 228 2 238 1 146 1 102 1 231 1 344 1 294 1 39 1 211 1 189 1 271 1 
58 3 226 2 314 1 0 2 365 1 3 6 228 1 238 3 146 1 231 1 354 1 240 1 294 3 153 1 211 3 119 1 271 3 
58 34 226 12 0 18 314 1 365 7 177 1 3 10 228 16 231 5 344 3 140 1 8 3 39 3 211 5 189 5 323 1 119 1 284 1 191 5 376 1 237 1 238 5 146 1 263 2 102 3 354 3 240 2 358 4 379 1 268 1 294 5 153 3 271 5 244 1 
58 8 226 2 0 4 365 2 177 1 3 2 228 4 140 1 8 1 189 1 211 1 191 1 376 1 238 1 146 1 263 1 170 1 354 1 358 1 268 1 294 1 153 1 271 1 
58 11 226 3 365 2 0 5 177 1 3 4 228 6 231 1 344 1 140 1 8 1 211 2 189 2 191 1 376 1 238 2 146 1 263 1 102 1 354 1 170 1 358 2 379 1 268 1 294 2 153 1 271 2 244 1 
58 19 226 4 0 10 365 3 177 1 3 6 228 9 136 1 231 1 344 2 210 1 140 1 8 1 39 2 211 3 189 3 164 1 191 3 376 1 238 3 146 1 263 1 19 1 102 2 354 1 170 1 240 1 358 1 268 1 294 3 153 1 271 3 244 1 
58 17 226 5 0 7 365 3 177 1 3 6 228 10 136 1 231 2 344 2 210 1 140 1 8 1 39 1 211 3 189 3 164 1 191 2 376 1 238 3 146 1 263 1 102 2 19 1 354 1 170 1 240 1 358 1 268 1 294 3 153 1 271 3 244 1 
58 8 226 2 0 4 365 2 177 1 3 2 228 4 140 1 8 1 189 1 211 1 191 1 376 1 238 1 146 1 263 1 170 1 354 1 358 1 268 1 294 1 153 1 271 1 
58 12 226 2 0 6 365 1 3 2 228 6 136 1 231 1 344 2 210 1 8 1 39 2 211 1 189 2 164 1 191 2 376 1 238 1 146 1 102 2 19 1 170 1 358 1 294 1 271 1 
58 18 226 5 0 8 365 3 177 1 3 8 228 10 136 1 231 2 344 2 210 1 140 1 8 1 39 1 211 4 189 3 164 1 191 2 376 1 238 4 146 1 263 1 19 1 102 2 354 1 170 1 240 2 358 1 268 1 294 4 153 1 271 4 244 1 
58 16 226 6 0 7 314 1 365 3 3 8 228 9 136 1 231 3 344 3 210 1 8 1 39 2 211 4 189 3 164 1 191 2 376 1 238 4 146 1 19 1 102 3 170 1 240 2 358 1 294 4 271 4 
58 7 226 6 0 4 365 3 191 1 228 3 263 1 231 3 354 3 268 1 140 2 153 3 189 1 
58 18 226 4 0 8 314 1 365 3 177 1 3 8 228 10 136 1 231 1 344 2 210 1 140 1 8 1 39 1 211 4 189 3 164 1 191 2 376 1 238 4 146 1 263 1 19 1 102 2 354 1 170 1 240 2 358 1 268 1 294 4 153 1 271 4 
355 1 21 1 132 1 63 1 128 1 32 1 183 1 
132 1 12 1 63 1 219 1 32 1 183 1 355 1 21 1 161 1 128 1 234 1 272 1 
162 1 74 1 317 1 91 1 366 1 372 1 242 1 129 1 202 1 281 1 195 1 
28 1 132 2 74 1 135 1 178 1 317 1 91 1 32 2 195 1 183 1 355 1 114 1 68 1 372 1 242 1 129 1 281 1 283 1 
28 1 132 1 317 1 178 1 135 1 91 1 369 1 32 1 255 1 183 1 114 2 68 1 372 2 281 1 283 1 74 1 99 1 334 2 195 1 124 1 355 1 242 3 85 1 245 1 
132 1 317 1 178 1 135 1 91 1 369 1 32 1 255 1 183 1 66 1 114 2 68 1 372 2 281 1 283 1 74 1 99 1 334 2 195 1 124 1 355 1 242 3 85 1 245 1 
71 1 74 3 317 3 91 1 367 1 350 1 101 1 255 1 95 1 124 1 195 1 113 2 114 1 356 1 127 1 372 1 129 1 242 4 85 1 373 1 324 2 281 3 304 1 
71 1 74 3 317 3 91 1 367 1 350 1 255 1 95 1 124 1 195 1 113 2 114 1 356 1 127 1 372 1 129 1 242 4 85 1 130 1 324 2 281 3 304 1 
74 1 317 1 91 1 64 1 281 1 195 1 
274 1 364 1 317 5 91 2 252 1 64 1 65 1 34 1 114 1 206 1 372 2 40 1 282 1 281 6 165 1 74 6 195 3 338 1 242 3 129 2 
58 6 0 3 3 4 254 1 114 1 68 1 211 2 9 1 10 1 74 1 168 1 263 1 354 1 355 2 268 1 271 2 28 1 273 2 226 2 132 2 365 2 177 1 134 1 317 1 135 1 178 1 228 3 91 1 180 1 32 2 183 1 232 1 36 1 140 1 372 1 189 1 281 1 283 1 42 1 191 1 329 2 238 2 195 1 197 1 294 2 153 1 242 1 
176 2 317 1 298 1 276 2 95 1 113 3 324 3 281 1 304 1 71 2 74 1 73 2 332 1 77 1 350 1 147 1 288 1 265 2 356 1 127 1 129 1 242 2 130 1 312 1 172 1 243 1 156 1 155 1 
74 2 317 2 91 1 254 1 64 1 95 1 195 2 34 1 114 1 372 1 242 2 281 2 296 1 
144 1 74 4 317 4 91 1 367 1 366 1 254 1 195 1 372 1 129 1 242 1 202 1 281 4 
327 1 74 2 317 2 91 1 255 1 49 1 50 1 65 1 195 2 114 1 206 1 372 1 242 1 281 2 
106 1 74 1 317 1 91 1 129 1 31 1 17 1 281 1 239 1 195 1 
165 1 340 1 74 2 317 2 91 1 252 1 254 1 195 1 372 1 242 1 281 2 
274 1 364 1 165 1 144 1 74 5 317 4 91 2 366 1 254 1 255 1 195 2 372 2 129 1 242 3 202 1 281 5 
274 1 165 1 144 1 74 5 317 4 91 2 366 1 254 1 255 1 195 2 150 1 372 2 129 1 242 3 202 1 281 5 
132 2 74 1 135 1 178 1 317 1 91 1 32 2 195 1 183 1 355 1 114 1 66 1 68 1 372 1 242 1 129 1 281 1 283 1 
74 1 317 1 91 1 255 1 65 1 195 2 34 1 114 1 206 1 338 1 372 1 242 1 281 1 
355 1 343 1 190 1 280 1 55 1 
190 2 369 1 99 1 350 1 352 1 334 1 80 1 123 1 113 2 82 1 355 1 343 1 356 1 127 1 280 2 312 1 324 2 224 1 55 2 
132 1 343 1 190 1 285 1 280 1 287 1 194 1 32 1 183 1 
343 1 80 1 82 1 
162 1 229 1 380 1 33 1 
62 1 229 1 380 1 86 1 81 1 33 1 290 1 
2 1 318 1 86 1 
62 1 13 1 229 1 4 1 81 1 33 1 290 3 301 1 209 1 257 2 380 1 86 3 
62 1 229 1 380 1 346 1 86 2 277 1 81 1 33 1 290 2 
106 1 301 1 62 1 46 1 251 1 261 1 86 1 17 1 81 1 33 1 290 1 
301 1 62 1 229 1 86 1 81 1 33 1 290 1 
301 1 62 1 229 2 380 1 86 1 81 1 290 1 
62 2 229 1 220 1 81 2 33 1 290 2 301 1 86 2 362 1 175 1 
62 1 121 1 229 1 46 1 81 1 277 2 290 3 33 2 371 1 301 1 380 1 154 1 86 3 
106 1 62 1 229 1 261 1 17 2 239 1 81 1 277 1 33 1 290 2 301 1 67 1 53 1 380 1 86 2 
62 2 229 1 46 1 81 2 277 2 290 4 33 2 371 1 301 1 380 1 23 1 346 1 86 4 
301 1 62 1 229 1 380 1 86 1 81 1 33 1 290 1 
13 1 62 1 229 2 46 1 4 1 277 2 81 1 290 4 33 3 371 1 257 1 292 1 380 2 86 4 
62 1 229 1 158 1 81 1 308 1 277 1 33 1 290 2 301 1 205 1 380 1 86 2 
62 1 13 2 229 1 4 1 81 1 33 1 290 3 301 1 257 2 201 1 380 1 86 3 
200 1 315 1 218 2 33 2 
301 1 107 1 62 1 86 1 81 1 290 1 
301 1 121 1 62 1 229 1 380 1 86 2 277 1 81 1 33 1 290 2 
247 1 
301 1 62 1 229 1 380 1 86 1 81 1 33 1 290 1 
62 1 121 1 229 1 277 1 81 1 290 3 33 1 301 1 257 1 380 1 86 3 
371 1 292 1 46 1 33 1 
229 1 33 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (41,219) 335 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (41,219) 335 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 362 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 5 41 1 3 2 4 1 356 1 161 1 141 1 47 1 305 6 208 2 73 1 9 9 211 1 147 1 54 2 286 2 337 2 102 1 315 2 172 1 344 4 238 2 260 1 244 1 219 1 320 3 300 9 323 1 
326 5 41 1 3 2 4 1 356 1 161 1 141 1 47 1 305 6 208 2 73 1 9 9 211 1 147 1 286 2 337 2 54 2 102 1 315 2 172 1 344 4 238 2 260 1 244 1 219 1 320 3 300 9 323 1 
326 6 41 1 3 2 4 1 356 1 161 1 141 1 47 1 305 7 208 2 73 1 9 10 211 1 147 1 286 2 337 2 54 2 102 1 315 2 172 1 344 5 238 2 260 1 244 1 219 1 320 4 300 10 323 1 
326 4 41 1 3 2 4 1 356 1 161 1 141 1 47 1 305 4 208 2 9 7 211 1 147 1 286 2 337 2 54 1 102 1 315 2 172 1 344 3 238 2 260 1 244 1 219 1 320 2 300 7 323 1 
337 1 286 1 54 2 326 3 315 1 4 1 344 2 238 1 47 1 305 3 208 1 73 1 9 4 320 1 211 1 300 4 323 1 147 1 
326 1 337 1 286 1 3 1 356 1 238 1 160 1 141 1 47 1 208 1 9 2 38 1 218 1 300 2 323 1 147 1 
337 2 286 2 326 2 41 1 3 1 344 1 47 1 305 1 9 3 320 1 300 3 323 1 147 1 
286 1 337 1 41 1 9 1 335 1 89 1 300 1 47 1 
286 1 337 1 41 1 9 1 335 1 89 1 300 1 47 1 
307 1 279 1 180 1 
279 1 94 2 257 1 
1 1 249 2 164 2 266 2 196 1 216 2 376 2 155 2 
19 2 1 1 270 1 249 3 2 1 64 1 23 1 68 1 25 1 332 1 97 1 207 2 145 1 163 1 189 1 229 1 164 2 310 1 213 2 53 2 121 1 285 1 106 1 195 1 196 1 216 2 317 1 155 2 263 1 174 1 266 3 178 1 117 1 157 1 376 2 136 1 92 2 
49 1 249 1 355 1 164 1 52 1 266 1 196 1 216 1 376 1 155 1 
137 1 249 1 55 1 316 1 216 1 45 1 334 1 279 1 280 1 49 1 210 1 266 1 134 1 180 1 
137 1 249 1 316 2 55 1 216 1 45 1 155 1 279 1 49 1 210 1 164 1 266 1 134 2 376 1 180 1 
353 1 222 1 316 1 134 1 284 1 
279 1 222 1 12 1 316 2 134 2 179 1 180 1 284 1 
222 1 316 1 134 1 
249 1 316 1 355 1 340 1 196 1 216 1 155 1 49 1 164 1 52 1 134 1 266 1 376 1 284 1 
279 1 
279 1 222 1 316 2 134 2 179 1 180 1 77 1 284 1 
101 1 148 1 42 1 301 1 316 5 222 2 128 2 259 2 95 1 46 2 13 1 279 1 27 1 85 1 134 5 169 1 179 1 180 1 284 2 
307 1 1 1 
125 1 249 2 1 2 216 2 155 1 164 1 266 2 376 1 31 1 
182 1 44 1 118 1 
285 1 19 1 1 1 249 1 233 1 195 1 68 1 145 1 163 1 189 1 229 1 174 1 53 1 266 1 157 1 92 1 
1 1 249 3 164 1 266 3 216 3 376 3 378 1 155 3 
49 1 249 1 355 1 266 1 216 1 376 1 155 1 
125 1 49 1 249 1 164 1 266 1 216 1 376 1 31 1 155 1 
137 1 19 1 1 1 270 1 249 4 2 1 68 1 45 1 25 1 97 1 207 2 145 1 189 1 163 1 49 1 229 1 210 1 164 2 165 1 50 1 310 1 213 1 53 1 121 1 285 1 125 1 55 1 316 1 195 1 196 1 216 3 155 3 263 1 174 1 266 4 134 1 178 1 117 1 157 1 158 1 376 3 378 1 136 1 92 1 
334 1 1 1 249 2 294 1 266 2 216 2 376 1 378 1 155 1 
125 1 137 1 249 3 316 1 55 1 22 1 216 3 45 1 155 3 279 1 49 1 210 1 164 1 50 1 165 1 134 1 266 3 376 3 378 2 
125 1 249 2 44 1 216 2 118 1 155 2 164 1 266 2 376 2 378 1 
285 1 19 1 1 1 249 1 195 1 68 1 145 1 163 1 189 1 174 1 229 1 53 1 266 1 157 1 92 1 
19 1 1 1 249 1 195 1 68 1 145 1 189 1 174 1 229 1 53 1 214 1 266 1 157 1 324 1 92 1 
182 2 270 2 2 1 302 1 44 2 67 1 25 1 118 2 69 1 48 1 97 1 359 1 207 2 72 1 213 4 106 2 290 1 151 1 154 1 263 1 176 1 117 1 136 1 202 1 
137 1 49 1 249 1 58 1 266 1 216 1 376 1 155 1 
285 1 19 1 249 2 195 1 68 1 216 1 118 1 155 1 145 1 189 1 163 1 229 1 174 1 50 1 53 1 266 2 157 1 376 1 378 1 92 1 
125 1 312 1 249 5 1 1 294 1 216 5 129 1 155 4 334 1 164 1 50 1 266 5 376 4 378 2 
49 1 249 2 58 1 355 1 266 2 216 2 376 2 155 2 
234 1 299 1 
234 1 299 1 
193 1 330 1 
193 1 330 1 
193 1 330 1 
234 1 299 1 246 1 
234 1 299 1 246 1 
234 1 28 1 299 1 
200 1 193 1 234 2 330 1 194 1 299 2 
234 1 299 1 246 1 
234 1 299 1 177 1 
234 1 299 1 177 1 
234 1 299 1 177 1 
80 2 126 2 234 2 316 2 159 1 152 1 186 3 370 1 70 1 84 1 200 1 217 2 279 1 264 2 51 2 116 1 299 2 134 2 322 1 
248 1 1 1 249 2 159 1 186 1 8 1 142 1 28 1 51 1 167 1 191 1 80 1 126 1 234 1 316 1 216 2 155 2 264 1 299 1 134 1 266 2 156 1 376 2 350 1 
208 1 315 1 238 1 
208 1 238 1 160 1 
36 1 315 2 24 1 238 3 245 1 160 1 
36 1 315 1 252 1 238 2 245 1 160 1 
315 1 36 1 238 2 245 2 160 1 
222 1 94 3 95 3 8 1 46 1 142 1 143 1 48 1 144 1 279 2 169 1 122 1 191 1 257 1 284 4 338 2 101 2 316 5 290 1 342 2 237 1 259 1 128 1 154 1 131 2 347 1 374 1 176 1 220 1 134 5 179 1 180 1 
353 5 301 1 222 6 271 1 94 9 95 8 46 2 48 3 279 5 98 1 122 1 169 1 191 4 257 3 284 7 338 6 101 6 316 9 11 1 290 3 291 1 342 6 128 2 259 2 154 3 111 5 347 2 243 1 374 2 176 3 220 3 134 9 179 1 351 1 180 1 
301 1 94 4 95 3 46 1 143 1 48 1 279 3 191 1 257 2 284 2 101 2 338 2 316 3 290 1 342 2 237 1 259 1 128 1 154 1 347 1 131 1 374 1 176 1 220 1 134 3 180 1 
301 1 94 7 95 5 46 1 143 1 48 2 279 4 98 1 191 2 257 3 284 3 338 4 101 4 316 4 290 2 342 4 259 1 128 1 237 1 154 2 347 1 131 2 243 1 374 1 176 2 220 2 134 4 180 1 351 1 
306 1 307 1 229 1 
229 1 87 1 
251 1 
229 1 157 1 
306 2 229 3 174 1 157 1 371 1 76 1 
229 1 174 1 157 1 
138 1 229 1 
270 3 106 4 290 1 341 1 288 1 82 1 48 1 359 2 162 2 132 1 319 1 309 1 375 1 115 1 213 7 321 1 202 3 
270 3 106 4 290 1 341 1 288 1 82 1 48 1 359 2 162 2 132 1 319 1 309 1 375 1 115 1 213 7 321 1 202 3 
270 3 106 4 290 1 341 1 288 1 82 1 48 1 359 2 162 2 132 1 319 1 309 1 375 1 115 1 213 7 321 1 255 1 202 3 
162 1 132 1 106 1 319 2 213 1 362 1 
270 4 2 2 329 1 250 1 48 1 97 2 359 3 207 4 162 2 309 1 213 9 124 1 106 5 290 1 288 1 341 1 82 1 263 2 132 1 319 1 115 1 375 1 136 2 202 4 
326 1 19 1 62 1 3 1 24 1 160 1 47 1 305 1 188 1 145 1 208 1 189 1 209 1 9 2 53 1 147 1 286 1 337 1 313 1 315 1 289 1 293 1 238 2 33 1 133 1 39 1 300 2 323 1 40 1 92 1 
326 1 19 1 3 1 24 1 160 1 305 2 228 1 188 1 145 1 208 1 189 1 209 1 9 3 53 1 147 1 286 1 337 1 313 1 103 1 315 1 289 1 293 1 238 2 262 1 133 1 39 1 300 3 323 1 40 1 92 1 
326 1 19 1 3 1 24 1 160 1 305 2 228 1 188 1 145 1 189 1 208 1 209 1 9 2 53 1 147 1 313 1 103 1 315 1 289 1 238 2 133 1 39 1 300 2 323 1 92 1 
19 1 20 1 203 1 204 1 183 1 3 2 227 1 145 1 189 1 229 1 209 2 9 1 53 1 286 1 337 1 313 2 258 1 195 1 262 1 133 2 157 1 300 1 92 1 
19 1 62 1 3 1 24 1 160 1 47 1 188 1 145 1 208 1 189 1 209 1 9 1 53 1 286 1 337 1 313 1 103 1 315 1 289 1 293 1 238 2 133 1 39 1 300 1 40 1 92 1 
201 1 
19 2 183 1 222 2 95 1 276 1 46 1 145 2 189 3 190 1 229 2 53 2 169 1 283 1 146 1 101 1 316 2 258 1 195 2 259 1 128 1 345 1 347 1 348 1 174 1 265 1 134 2 157 2 179 1 92 2 
137 1 249 1 205 1 206 1 222 2 5 1 45 1 334 1 280 1 49 1 210 1 77 1 316 3 55 1 216 1 113 1 296 2 266 1 134 3 179 1 91 1 269 1 
137 1 249 1 206 1 222 1 5 1 45 1 334 1 280 1 49 1 279 1 210 1 77 1 55 1 316 3 216 1 113 1 296 3 15 1 266 1 134 3 179 1 91 1 180 1 269 1 
137 1 249 1 205 1 206 1 222 2 5 1 45 1 304 1 334 1 280 1 49 1 279 1 210 1 77 1 55 1 316 3 216 1 113 1 296 3 15 1 266 1 134 3 179 1 91 1 180 1 269 1 
137 1 222 7 331 2 95 1 5 1 45 1 46 1 334 1 49 1 280 1 279 5 101 1 55 1 56 2 349 2 113 1 296 6 15 4 61 1 205 4 249 1 206 1 303 1 304 4 308 1 210 1 212 1 169 1 363 1 77 1 257 2 311 1 316 5 81 1 368 2 128 1 259 1 216 1 266 1 134 5 179 3 91 1 180 5 269 1 
137 1 205 2 249 1 206 1 222 4 273 1 94 2 331 2 95 1 303 1 5 1 45 1 304 2 46 1 334 1 279 2 280 1 49 1 210 1 169 1 257 2 101 1 311 1 316 4 55 1 368 2 259 1 128 1 216 1 56 2 349 2 113 1 296 4 15 2 134 4 266 1 179 2 180 1 91 1 269 1 
137 1 205 2 249 1 206 1 222 4 331 2 95 1 303 1 5 1 45 1 304 2 46 1 334 1 279 1 280 1 49 1 308 1 210 1 169 1 363 1 257 2 101 1 311 1 55 1 316 4 81 1 368 2 128 1 259 1 216 1 56 2 349 2 113 1 296 4 15 2 266 1 134 4 179 2 180 1 91 1 269 1 
137 1 205 2 249 1 206 1 222 4 331 2 95 1 303 1 5 1 45 1 304 2 46 1 334 1 279 1 280 1 49 1 308 1 210 1 169 1 363 1 257 2 101 1 311 1 55 1 316 4 81 1 368 2 128 1 259 1 216 1 56 2 349 2 113 1 296 4 15 2 266 1 134 4 179 2 180 1 91 1 269 1 
137 1 352 1 205 2 249 1 206 1 222 4 94 2 95 1 303 1 5 1 45 1 304 2 46 1 334 1 279 1 280 1 49 1 210 1 169 1 101 1 55 1 316 4 81 1 368 2 343 2 128 1 259 1 216 1 372 1 349 2 34 1 113 1 114 2 296 4 15 2 266 1 134 4 179 2 180 1 91 1 269 1 
137 1 249 1 205 3 206 1 222 5 331 2 95 1 303 1 5 1 45 1 46 1 304 3 334 1 279 1 280 1 49 1 308 1 210 1 212 1 169 1 363 1 257 2 101 1 311 1 55 1 316 4 81 1 368 2 259 1 128 1 216 1 56 2 349 2 113 1 296 5 15 3 266 1 134 4 179 2 180 1 91 1 269 1 
137 1 249 1 205 3 206 1 222 5 331 2 95 1 303 1 5 1 45 1 46 1 304 3 334 1 279 1 280 1 49 1 308 1 210 1 212 1 169 1 363 1 257 2 101 1 311 1 55 1 316 4 81 1 368 2 259 1 128 1 216 1 56 2 349 2 113 1 296 5 15 3 266 1 134 4 179 2 180 1 91 1 269 1 
137 1 205 2 249 1 206 1 222 4 273 1 94 2 95 1 303 1 5 1 45 1 304 2 46 1 334 1 279 1 280 1 49 1 210 1 169 1 101 1 316 4 55 1 368 2 343 2 259 1 128 1 216 1 349 2 34 1 113 1 114 2 296 4 15 2 134 4 266 1 179 2 180 1 91 1 269 1 
182 1 270 3 1 2 2 1 44 1 118 1 25 1 307 1 97 1 359 2 48 1 207 2 162 1 72 1 213 6 106 3 288 1 341 1 290 1 82 1 263 1 115 1 375 1 117 1 136 1 202 2 
182 11 1 1 270 6 2 2 44 4 23 1 25 1 118 11 359 1 97 2 48 2 278 1 207 4 281 1 309 1 213 14 361 1 121 1 192 3 106 8 290 1 239 1 154 2 318 1 263 2 373 1 175 1 176 1 220 2 117 2 202 2 136 2 325 3 
19 1 1 1 249 2 270 1 2 1 44 1 66 1 23 1 68 1 25 1 97 1 145 1 207 2 189 1 163 1 281 1 229 1 50 1 53 1 213 2 121 1 285 1 170 1 233 1 106 1 195 1 216 1 155 1 263 1 174 1 242 1 266 2 157 1 117 1 376 1 378 1 92 1 136 1 
182 7 1 2 270 10 2 3 43 2 44 7 6 2 97 3 48 3 145 2 281 1 189 2 229 2 50 1 53 3 285 2 149 1 103 1 106 10 341 1 288 1 290 3 195 1 154 2 155 1 115 1 117 3 157 2 202 8 17 2 19 3 249 3 23 1 68 2 25 3 118 7 359 4 162 1 207 6 163 2 120 1 309 4 310 2 213 20 121 1 123 1 82 1 215 2 216 1 263 3 174 2 176 2 375 1 220 2 266 3 376 1 378 1 92 3 136 3 
19 8 249 1 270 1 183 1 2 2 354 1 272 1 23 1 140 1 25 2 97 2 145 2 207 4 189 2 72 1 229 3 282 1 53 8 213 2 121 1 364 1 103 1 365 1 106 1 258 1 195 2 216 1 317 2 33 1 155 1 57 1 263 2 266 1 376 1 117 2 157 2 378 1 92 7 136 2 
182 1 249 1 270 2 2 1 44 1 118 1 25 1 359 1 97 1 48 1 207 2 281 1 164 1 213 3 125 1 106 1 290 1 216 1 154 1 155 1 263 1 14 1 176 1 220 1 266 1 376 1 117 1 202 1 136 1 
182 1 2 1 106 2 44 1 154 1 118 1 25 1 69 1 97 1 48 1 207 2 263 1 72 1 309 1 213 2 117 1 202 1 136 1 
182 1 270 2 2 1 44 1 290 1 151 1 118 1 25 1 359 1 97 1 207 2 263 1 72 1 176 1 213 2 117 1 202 1 136 1 
182 2 270 2 2 1 44 2 25 1 118 2 48 1 97 1 359 1 207 2 72 1 309 1 213 4 106 2 290 1 154 1 263 1 176 1 220 1 117 1 136 1 202 2 
182 1 2 1 106 2 44 1 154 1 118 1 25 1 69 1 97 1 48 1 207 2 263 1 309 1 213 2 117 1 364 1 202 1 136 1 
182 1 270 2 2 1 44 1 290 1 151 1 118 1 25 1 359 1 97 1 207 2 263 1 176 1 213 2 117 1 364 1 202 1 136 1 
182 2 270 2 2 1 44 2 25 1 118 2 48 1 97 1 359 1 207 2 309 1 213 4 364 1 106 2 290 1 154 1 263 1 176 1 220 1 117 1 136 1 202 2 
182 2 270 2 2 1 106 2 290 1 44 2 154 1 118 2 25 1 359 1 97 1 48 1 207 2 263 1 309 1 176 1 220 1 213 4 117 1 202 2 136 1 
19 1 1 1 249 1 270 1 2 1 23 1 68 1 25 1 97 1 145 1 207 2 189 1 163 1 229 1 310 1 213 2 53 1 121 1 285 1 106 1 195 1 263 1 174 1 266 1 157 1 117 1 92 1 136 1 
19 1 1 1 249 1 270 1 2 1 23 1 68 1 25 1 97 1 145 1 207 2 189 1 229 1 213 2 214 1 53 1 121 1 106 1 107 1 195 1 263 1 174 1 266 1 157 1 117 1 324 1 92 1 136 1 
182 2 270 2 2 1 44 2 25 1 118 2 48 1 97 1 359 1 207 2 281 1 309 1 213 4 106 2 290 1 154 1 263 1 176 1 220 1 117 1 136 1 202 2 
182 2 19 1 270 2 249 1 2 1 44 2 68 1 6 1 118 2 25 1 359 1 48 1 97 1 145 1 207 2 189 1 163 1 229 1 309 1 310 1 213 4 53 1 285 1 106 2 290 1 154 1 33 1 263 1 174 1 176 1 220 1 266 1 157 1 117 1 202 2 92 1 136 1 
182 1 270 1 249 1 2 1 44 1 25 1 118 1 97 1 26 1 48 1 207 2 281 1 309 1 164 1 213 3 125 1 106 2 290 1 216 1 154 1 155 1 263 1 176 1 220 1 266 1 376 1 117 1 202 1 136 1 
18 1 270 10 2 2 329 1 357 2 223 1 7 1 359 3 97 2 48 3 207 4 309 3 213 19 361 1 100 1 192 2 106 9 290 3 239 1 197 1 154 3 173 1 263 2 176 3 220 3 90 1 268 2 136 2 325 1 202 6 
18 2 270 12 185 1 2 3 329 1 65 1 357 1 223 2 277 1 359 2 97 3 48 3 207 6 309 2 213 26 168 1 100 1 124 2 192 2 106 14 290 2 197 1 239 2 154 3 173 1 263 3 176 2 220 3 221 1 268 4 202 4 136 3 325 2 16 1 
18 2 270 21 185 1 2 3 329 1 65 1 357 1 223 1 277 1 359 4 97 3 48 5 162 1 207 6 309 4 29 1 213 41 361 1 168 1 100 1 124 1 192 4 106 20 341 1 288 1 290 5 82 1 239 3 197 1 154 4 173 1 263 3 176 4 375 1 115 1 220 4 221 1 90 1 268 4 16 1 136 3 325 3 202 8 
18 2 270 18 185 1 2 4 329 1 65 1 357 1 223 1 277 1 359 4 97 4 48 5 162 1 207 8 309 3 29 1 213 38 361 1 168 1 100 1 124 2 192 4 106 20 341 1 288 1 290 4 82 1 239 3 197 1 154 4 173 1 263 4 176 3 375 1 115 1 220 4 221 1 90 1 268 4 16 1 136 4 325 3 202 7 
18 1 270 25 185 1 2 2 329 1 65 1 357 1 223 1 277 1 359 7 97 2 48 8 162 1 207 4 309 7 213 52 361 2 168 1 100 1 124 1 192 4 106 27 341 1 288 1 290 8 82 1 239 2 197 1 154 7 173 1 263 2 175 2 176 7 375 1 115 1 220 7 221 1 268 4 16 1 136 2 325 4 202 14 
80 1 200 1 126 1 234 1 264 1 51 1 299 1 152 1 322 1 226 1 
248 1 28 1 
80 1 126 1 234 1 264 1 339 1 86 1 51 1 299 1 232 1 
80 1 126 1 234 1 316 1 159 1 152 1 186 2 370 1 70 1 200 1 217 1 279 1 264 1 51 1 116 1 299 1 134 1 322 1 
80 1 126 1 234 1 316 1 159 1 152 1 186 2 370 1 70 1 200 1 217 1 279 1 264 1 51 1 116 1 299 1 134 1 322 1 
80 1 126 1 234 1 316 1 159 1 152 1 186 2 370 1 70 1 200 1 217 1 279 1 264 1 51 1 116 1 299 1 134 1 322 1 
194 1 110 1 246 1 
194 1 110 1 246 1 
314 1 177 1 
314 1 194 1 177 1 
156 1 350 1 
248 1 1 1 249 2 186 1 8 1 142 1 28 1 51 1 167 1 191 1 284 1 80 1 126 1 234 1 316 1 216 2 370 1 155 2 217 1 264 1 298 1 299 1 266 2 134 1 156 1 376 2 350 1 
110 1 246 1 
314 1 194 1 177 1 
19 2 0 1 249 2 270 1 2 1 272 1 23 1 25 1 358 1 97 1 145 1 207 2 189 1 281 1 71 1 229 1 53 2 213 2 121 1 365 1 106 1 367 1 216 2 317 2 263 1 266 2 157 1 117 1 181 1 136 1 92 2 
19 2 103 1 313 1 315 1 235 1 289 1 24 1 238 2 160 1 275 1 33 1 145 1 188 1 208 1 189 1 53 2 30 1 40 1 92 2 
19 1 103 1 313 1 315 1 289 1 236 1 24 1 238 2 160 1 188 1 145 1 208 1 189 1 53 1 30 1 40 1 92 1 
19 1 313 1 203 1 183 1 258 1 292 1 195 1 275 1 145 1 189 1 229 1 53 1 157 1 92 1 
19 1 103 1 313 1 315 1 235 1 289 1 24 1 238 2 160 1 275 1 188 1 145 1 208 1 189 1 53 1 30 1 40 1 92 1 
241 1 
101 1 307 1 279 1 42 1 27 1 95 1 180 1 
101 1 311 1 316 1 222 1 94 1 331 1 128 1 259 1 95 1 56 1 46 1 279 2 134 1 169 1 179 1 180 1 257 1 
138 2 42 1 222 5 94 12 274 2 95 9 45 2 46 4 48 2 145 3 189 4 279 8 229 10 53 3 338 6 101 8 290 2 342 6 345 1 195 1 153 2 154 2 346 2 199 2 295 1 347 2 60 1 157 3 19 3 306 2 27 1 74 2 169 4 256 1 75 2 257 6 366 1 316 5 215 2 128 4 259 4 371 1 33 1 83 2 130 1 174 3 176 2 87 3 220 2 134 5 377 2 179 3 180 2 92 3 
185 1 328 1 222 1 94 6 95 8 46 2 277 1 48 2 279 5 74 1 168 1 169 2 257 3 78 1 338 5 101 5 192 1 316 1 290 2 342 5 345 1 259 2 128 2 239 1 154 2 346 2 347 1 176 2 220 2 134 1 221 1 179 1 180 2 16 1 325 1 
249 1 21 1 355 1 95 2 46 1 48 2 49 1 164 1 74 1 52 1 169 1 363 1 101 2 316 1 341 1 290 1 340 1 82 1 259 1 128 1 196 1 216 1 346 2 155 1 375 1 266 1 134 1 376 1 
101 1 42 1 128 1 259 1 95 1 46 1 279 1 27 1 169 1 180 1 
101 5 338 5 290 2 94 10 342 5 215 1 95 5 154 2 346 2 48 2 279 5 74 1 176 2 220 2 257 5 
279 1 316 1 222 1 134 1 179 1 180 1 
19 2 183 1 222 2 95 1 276 1 46 1 145 2 189 3 190 1 229 2 53 2 169 1 283 1 146 1 101 1 366 1 316 1 258 1 259 1 128 1 195 2 345 1 347 1 348 1 174 1 265 1 134 1 157 2 179 1 92 2 
19 1 1 1 270 1 249 3 2 1 68 1 25 1 97 1 207 2 145 1 163 1 189 1 229 1 164 2 310 1 213 1 53 1 121 1 285 1 195 1 196 1 216 2 155 2 263 1 174 1 266 3 178 1 376 2 157 1 117 1 136 1 92 1 
338 2 101 2 94 4 342 2 128 1 259 1 345 1 95 1 46 1 162 1 347 1 279 4 169 1 180 2 257 2 
126 1 108 1 51 1 
126 1 108 1 51 1 
126 1 51 1 152 1 156 1 261 1 
126 1 108 1 51 1 
35 1 126 1 51 1 
35 1 126 1 51 1 
35 1 126 1 51 1 
126 1 51 1 
234 1 299 1 
270 4 106 4 2 2 290 1 288 1 341 1 82 1 48 1 359 2 97 2 162 1 207 4 263 2 309 1 375 1 115 1 213 8 202 3 136 2 124 1 
307 1 48 1 359 2 162 1 270 3 106 3 290 1 341 1 288 1 375 1 82 1 115 1 213 6 202 2 
270 2 2 1 106 2 290 1 224 1 154 1 359 1 97 1 48 1 207 2 263 1 309 1 176 1 220 1 213 4 202 2 136 1 
192 2 270 4 106 3 290 1 239 1 154 1 359 1 48 1 309 1 176 1 213 7 361 1 220 1 325 1 202 2 
270 12 2 2 48 3 359 5 97 2 162 1 278 1 207 4 309 4 361 1 213 23 124 2 192 2 104 1 106 11 341 2 288 1 290 3 82 2 154 2 263 2 175 1 176 2 375 1 115 1 220 2 202 9 325 2 136 2 
192 1 270 1 213 1 
106 1 213 1 325 1 
270 3 2 1 106 3 290 1 215 1 224 1 154 1 97 1 48 1 359 2 207 2 263 1 309 1 176 1 213 6 220 1 136 1 202 3 
270 6 2 1 185 1 329 1 277 1 97 1 48 2 359 1 207 2 309 1 213 12 168 1 192 1 106 6 290 2 239 1 154 2 263 1 176 2 220 2 221 1 325 1 16 1 136 1 202 2 
270 3 106 3 290 1 341 1 82 1 48 1 359 1 309 1 375 1 213 6 202 2 
104 1 270 2 106 1 2 1 341 1 288 1 82 1 359 1 97 1 207 2 263 1 309 1 115 1 213 3 202 2 124 1 136 1 
270 5 2 1 21 1 106 5 329 1 341 2 290 2 82 2 97 1 359 3 48 2 207 2 263 1 309 2 375 1 213 10 136 1 202 5 
2 1 106 2 329 1 154 1 97 1 48 1 207 2 263 1 309 1 213 2 136 1 202 1 
270 2 2 1 106 2 329 1 290 1 154 1 359 1 97 1 48 1 207 2 263 1 309 1 176 1 220 1 213 4 202 2 136 1 
104 1 270 2 2 3 106 1 329 1 341 1 82 1 97 3 359 1 207 6 263 3 309 1 213 3 90 1 124 1 136 3 202 2 
270 18 2 5 329 1 224 1 97 5 48 5 359 7 162 1 207 10 253 1 309 5 213 34 361 1 124 2 171 1 192 4 104 1 106 16 341 3 288 1 290 5 82 3 109 1 239 1 154 3 263 5 176 3 375 2 115 1 220 3 90 1 136 5 325 3 202 12 
270 4 2 1 329 1 48 1 97 1 359 2 162 1 207 2 213 8 192 1 106 4 290 1 288 1 341 1 82 1 239 1 263 1 115 1 375 1 325 1 16 1 136 1 202 2 
270 5 2 2 329 1 224 1 359 2 97 2 48 2 162 1 207 4 309 1 213 11 361 1 192 2 106 6 290 1 341 1 288 1 82 1 239 1 154 1 263 2 375 1 115 1 220 1 16 1 136 2 325 1 202 3 
270 10 2 3 185 1 329 1 224 1 277 1 97 3 48 3 359 3 162 1 207 6 309 1 213 19 168 1 124 1 192 1 106 9 341 1 288 1 290 3 82 1 239 1 154 2 263 3 176 2 375 1 115 1 220 2 221 1 325 1 16 1 136 3 202 4 
270 7 2 3 185 1 329 1 224 1 277 1 97 3 48 3 359 3 162 1 207 6 309 2 213 17 168 1 124 1 192 1 106 10 341 1 288 1 290 2 82 1 239 1 154 2 263 3 176 1 375 1 115 1 220 2 221 1 325 1 16 1 136 3 202 5 
270 4 2 1 329 1 48 1 97 1 359 2 162 1 207 2 213 8 192 1 106 4 290 1 288 1 341 1 82 1 239 1 263 1 115 1 375 1 325 1 16 1 136 1 202 2 
270 6 2 1 185 1 329 1 277 1 97 1 48 2 359 1 207 2 309 1 213 12 168 1 192 1 106 6 290 2 239 1 154 2 263 1 176 2 220 2 221 1 325 1 16 1 136 1 202 2 
270 8 185 1 2 4 329 1 224 1 277 1 97 4 48 3 359 3 162 1 207 8 309 2 213 18 168 1 124 2 192 1 106 10 341 1 288 1 290 2 82 1 239 1 154 2 263 4 176 1 375 1 115 1 220 2 221 1 16 1 136 4 325 1 202 5 
270 7 185 1 2 4 329 1 277 1 97 4 48 3 359 3 207 8 309 3 213 16 168 1 124 2 192 1 106 9 290 2 239 1 154 3 263 4 176 2 220 3 221 1 90 1 16 1 136 4 325 1 202 6 
270 4 106 3 290 1 288 1 341 3 82 3 359 3 48 1 309 3 115 2 375 1 213 7 202 6 
270 8 185 1 2 4 329 1 277 1 97 4 48 3 359 3 162 1 207 8 309 1 213 18 168 1 124 2 192 1 106 10 341 1 288 1 290 2 82 1 239 1 154 2 263 4 176 1 375 1 115 1 220 2 221 1 90 1 16 1 136 4 325 1 202 4 
334 1 1 1 249 1 360 1 294 1 266 1 216 1 
1 1 249 1 127 1 294 1 216 1 225 1 198 1 119 1 334 1 360 1 59 1 266 1 
307 1 19 1 145 1 189 1 183 1 229 1 258 1 53 1 195 1 157 1 92 1 
19 1 1 1 249 2 195 1 68 1 216 1 155 1 145 1 189 1 163 1 229 1 174 1 53 1 266 2 157 1 376 1 378 1 92 1 
137 1 19 1 138 1 1 1 249 2 68 1 145 1 163 1 189 1 49 1 229 3 210 1 53 1 216 2 155 2 130 1 174 2 266 2 376 1 157 2 378 1 377 1 92 1 
137 1 19 2 138 1 1 1 249 2 68 1 145 1 189 1 49 1 229 3 210 1 53 2 79 1 216 2 155 2 130 1 174 2 266 2 376 1 157 2 378 1 377 1 324 1 92 2 
79 1 138 1 19 3 316 2 222 1 195 1 45 1 32 1 306 1 130 1 145 1 279 1 189 1 174 1 229 4 87 1 53 3 134 2 157 1 377 1 180 1 135 1 92 3 
79 1 138 1 19 3 316 2 222 1 195 1 45 1 153 1 306 1 130 1 145 1 279 1 189 1 174 1 229 4 87 1 53 3 134 2 157 1 377 1 180 1 92 3 
19 1 145 1 189 1 354 1 53 1 92 1 
19 7 103 1 139 1 354 1 272 1 140 1 195 2 371 1 317 1 33 1 145 2 57 1 348 1 189 3 174 1 229 3 282 1 53 7 157 2 146 1 92 6 
182 1 19 1 1 2 270 3 249 2 2 2 43 1 44 1 68 1 6 1 118 1 25 2 48 1 359 2 97 2 162 1 145 1 207 4 189 1 281 1 71 1 163 1 229 1 310 1 213 6 53 1 285 1 106 3 290 1 341 1 288 1 82 1 216 1 155 1 33 1 263 2 174 1 375 1 115 1 266 2 157 1 117 2 376 1 378 1 202 2 136 2 92 1 
19 1 42 1 222 2 274 1 95 1 45 1 46 2 306 1 279 1 229 2 27 1 53 1 169 2 284 1 101 1 366 1 316 3 195 1 259 2 128 2 153 1 199 1 83 1 87 1 134 3 179 1 180 1 92 1 
19 2 354 1 371 1 33 1 306 1 295 1 145 1 189 2 174 1 229 2 53 2 157 1 92 2 
79 1 19 4 183 1 258 1 195 1 33 1 145 1 189 1 229 1 37 1 53 4 157 1 92 4 
19 2 276 1 130 1 145 1 348 1 189 2 190 1 174 1 229 1 53 2 157 1 146 1 123 1 92 2 
19 1 145 1 188 1 208 1 189 1 238 1 53 1 195 1 160 1 92 1 
19 2 103 1 367 1 272 1 33 1 145 1 189 1 229 1 53 2 157 1 92 2 
19 5 183 1 272 1 258 1 195 1 140 1 33 1 130 1 145 2 57 1 189 2 229 3 37 1 53 5 157 2 92 4 
19 5 183 1 272 1 258 1 195 1 140 1 369 1 33 1 130 1 145 2 189 2 229 3 37 1 53 5 157 2 92 4 
19 1 1 1 249 2 195 1 68 1 216 1 155 1 145 1 189 1 229 1 174 1 53 1 266 2 157 1 376 1 378 1 324 1 92 1 
19 1 139 1 371 1 130 1 145 1 348 1 189 2 174 1 229 1 53 1 157 1 146 1 92 1 
63 1 0 1 249 1 216 1 358 1 333 1 99 1 266 1 181 1 
105 1 231 1 333 1 
63 1 1 1 287 1 99 1 333 1 
137 1 63 2 1 1 105 1 316 2 55 1 287 2 150 1 45 1 333 1 279 1 49 1 210 1 165 1 231 1 134 2 99 2 180 1 284 1 
326 1 307 1 323 1 147 1 
326 1 286 1 337 1 9 1 300 1 323 1 147 1 
3 1 209 1 300 1 
326 1 337 1 286 1 141 2 47 1 187 1 9 3 112 1 254 1 300 3 323 1 147 1 
326 1 305 1 54 1 286 1 337 1 9 2 300 2 323 1 147 1 
326 1 286 1 337 1 208 1 315 1 4 1 9 1 344 1 238 1 300 1 47 1 
326 1 286 1 337 1 9 1 300 1 147 1 47 1 
286 1 337 1 9 1 300 1 323 1 147 2 47 1 
326 1 337 2 286 2 10 1 184 1 96 1 47 1 9 2 300 2 147 1 
337 1 286 1 326 2 344 1 161 1 47 1 260 1 305 2 9 3 320 1 300 3 323 1 147 1 
326 1 337 1 286 1 315 1 93 1 238 2 24 1 160 1 47 1 305 1 208 1 9 2 300 2 323 1 147 1 
337 2 286 2 54 1 326 2 344 1 47 1 305 2 73 1 9 4 320 1 300 4 323 1 147 1 
326 1 286 1 337 1 9 1 300 1 323 1 147 1 47 1 
337 1 286 1 326 3 344 1 141 1 305 2 9 4 112 1 254 1 320 1 267 1 300 4 323 2 147 2 
337 1 286 1 47 1 9 1 230 1 89 1 267 1 300 1 323 1 336 1 147 1 
326 1 337 1 286 1 141 2 47 1 9 3 112 1 254 2 297 1 300 3 323 1 147 1 
326 2 327 2 166 1 88 1 
286 1 337 1 9 1 300 1 247 1 47 1 
326 1 305 1 286 1 337 1 9 2 300 2 323 1 147 1 260 1 47 1 
240 1 
326 1 286 1 337 1 9 1 300 1 323 1 147 1 47 1 
337 1 286 1 326 1 141 1 47 1 260 1 305 1 9 3 300 3 323 1 147 1 
326 1 344 1 320 1 267 1 
326 1 147 1 

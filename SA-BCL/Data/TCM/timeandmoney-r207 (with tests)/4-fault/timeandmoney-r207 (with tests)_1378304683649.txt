#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (21,78,304,315,383) (7,320) (7,320) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 1 316 3 3 2 144 6 128 1 52 2 298 1 318 2 105 2 53 1 106 1 202 1 322 1 109 1 174 1 304 1 329 2 157 4 94 9 289 1 65 1 118 1 260 1 237 1 160 9 238 2 161 5 356 2 
264 1 316 3 144 6 3 2 128 1 52 2 298 1 318 2 105 2 53 1 106 1 202 1 322 1 109 1 174 1 304 1 329 2 157 4 94 9 289 1 65 1 118 1 260 1 237 1 160 9 238 2 161 5 356 2 
264 1 316 4 144 7 3 2 128 1 52 2 298 1 318 2 105 2 53 1 106 1 202 1 322 1 109 1 174 1 304 1 329 2 157 5 94 10 289 1 65 1 118 1 260 1 237 1 160 10 238 2 161 6 356 2 
264 1 316 2 144 4 3 1 52 2 298 1 318 2 105 2 53 1 106 1 202 1 322 1 109 1 174 1 304 1 329 2 157 3 94 7 289 1 65 1 118 1 260 1 237 1 160 7 238 2 161 4 356 2 
264 1 316 1 3 2 144 3 329 1 128 1 105 1 318 1 157 2 94 4 53 1 289 1 202 1 109 1 160 4 238 1 161 3 356 1 
320 1 94 1 264 1 7 1 304 1 160 1 238 1 29 1 52 1 298 1 318 1 105 1 
264 1 316 1 144 1 52 1 105 2 318 2 157 1 94 3 289 1 237 1 109 1 160 3 161 2 
264 1 316 3 334 1 144 7 3 2 128 1 52 1 318 2 105 2 53 1 171 1 202 1 109 1 329 1 157 4 94 9 289 1 65 1 118 1 237 1 160 9 161 5 238 1 356 1 
264 1 316 3 334 1 144 7 3 2 128 1 52 1 318 2 105 2 53 1 171 1 202 1 109 1 329 1 157 4 94 9 289 1 65 1 118 1 237 1 160 9 161 5 238 1 356 1 
204 1 145 1 199 1 
182 1 204 1 379 2 
47 1 311 2 189 2 20 2 224 2 367 2 35 1 18 2 
47 1 20 2 79 2 6 1 272 2 338 1 170 1 224 2 367 2 28 1 177 2 249 1 226 1 250 2 60 1 112 1 308 1 372 1 114 1 233 1 88 1 345 1 35 1 40 2 188 1 117 1 258 1 16 1 236 1 311 3 189 3 380 1 239 1 18 2 71 1 241 1 163 1 
132 1 311 1 189 1 20 1 224 1 367 1 253 1 143 1 35 1 18 1 
358 1 295 1 142 1 253 1 145 1 50 1 104 1 189 1 311 1 108 1 340 1 204 1 18 1 19 1 
358 1 20 1 295 2 253 1 145 1 50 1 189 1 311 1 108 1 340 1 367 1 224 1 204 1 18 1 19 2 
353 1 295 1 110 1 19 1 251 1 
219 1 204 1 353 1 151 1 295 2 19 2 145 1 251 1 
353 1 295 1 19 1 
20 1 295 1 253 1 143 1 35 1 132 1 189 1 311 1 367 1 224 1 370 1 19 1 18 1 251 1 
204 1 
219 1 204 1 353 1 295 2 19 2 145 1 15 1 251 1 
281 1 219 1 220 1 231 1 295 5 221 2 234 1 145 1 347 2 216 1 235 1 368 2 204 1 353 2 9 1 17 1 19 5 85 1 251 2 
183 1 20 1 112 1 114 1 233 1 129 1 79 1 188 1 117 1 258 1 272 1 170 1 189 2 311 2 224 1 42 1 18 1 241 1 71 1 250 1 
47 1 199 1 
47 2 100 1 20 1 0 1 189 2 311 2 367 1 224 1 18 2 
75 1 150 1 42 1 
47 1 112 1 114 1 233 1 79 1 188 1 117 1 272 1 258 1 311 1 189 1 170 1 313 1 71 1 241 1 250 1 
80 1 47 1 311 5 189 5 20 4 183 2 302 1 367 1 0 1 224 4 125 1 142 1 18 5 129 1 
147 1 132 1 311 2 189 2 20 2 224 2 253 1 18 2 
47 1 183 1 311 3 189 3 20 3 367 1 224 3 18 3 
132 1 311 1 189 1 20 1 224 1 253 1 18 1 
100 1 311 1 189 1 20 1 224 1 367 1 0 1 253 1 18 1 
47 1 358 1 20 3 0 1 295 1 141 1 129 1 50 1 79 1 338 1 272 1 170 1 108 1 340 1 367 2 224 3 28 1 177 2 226 1 250 1 230 1 60 1 112 1 183 1 308 1 372 1 114 1 233 1 253 1 88 1 345 1 35 1 40 1 188 1 117 1 258 1 236 1 311 4 189 4 18 3 19 1 241 1 71 1 163 1 
47 1 311 2 189 2 20 1 183 1 224 1 125 1 142 1 18 2 
358 1 183 2 20 3 0 1 295 1 253 1 141 1 129 1 50 1 148 1 189 3 311 3 108 1 340 1 367 1 224 3 204 1 19 1 18 3 
183 1 20 2 0 1 189 2 311 2 150 1 367 1 224 2 42 1 18 2 
47 1 112 1 233 1 114 1 79 1 188 1 117 1 272 1 258 1 311 1 189 1 170 1 71 1 241 1 250 1 
47 1 233 1 114 1 79 1 188 1 117 1 272 1 258 1 311 1 189 1 170 1 325 1 241 1 250 1 123 1 
75 2 126 1 6 2 150 2 303 1 28 1 278 1 177 2 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 4 236 1 312 1 332 1 42 2 135 1 262 1 122 1 242 1 
147 1 340 1 311 1 189 1 20 1 224 1 253 1 18 1 
24 1 299 1 
24 1 299 1 
203 1 263 1 
203 1 263 1 
203 1 263 1 
273 1 24 1 299 1 
24 1 187 1 299 1 
81 1 203 1 173 1 24 2 263 1 299 2 
273 1 24 1 299 1 
273 1 24 1 299 1 
107 1 24 1 299 1 
107 1 24 1 299 1 
107 1 24 1 299 1 
47 1 20 2 184 1 86 1 265 1 154 1 295 1 296 1 24 1 168 1 93 1 187 1 299 1 288 1 311 2 189 2 8 1 26 1 191 1 224 2 43 1 18 2 19 1 58 1 
164 1 20 1 1 1 295 2 143 1 296 2 24 2 299 2 132 1 54 1 367 1 224 1 225 1 370 1 58 2 344 1 154 2 87 1 253 1 35 1 288 2 311 1 189 1 259 1 191 2 43 1 18 1 19 2 
238 1 329 1 356 1 
238 1 29 1 356 1 
314 1 238 3 186 1 329 2 29 1 92 1 
56 1 314 1 238 2 186 1 329 1 29 1 
314 2 238 2 329 1 186 1 29 1 
219 1 265 1 295 5 221 1 362 1 145 1 51 1 300 2 26 1 368 1 369 2 303 1 323 2 204 2 179 1 59 1 251 4 229 1 182 1 184 1 327 1 231 3 347 1 216 2 235 1 378 1 192 1 353 1 379 3 159 1 262 1 19 5 
219 1 99 1 220 1 267 1 295 9 221 2 362 1 145 1 51 2 300 6 55 1 365 1 26 4 368 2 303 3 323 6 204 5 110 5 179 3 59 3 180 1 251 7 229 3 182 3 327 2 231 8 37 1 347 2 156 5 216 6 235 1 353 6 379 9 262 3 19 9 
220 1 295 3 221 1 145 1 51 1 300 2 26 1 368 1 369 1 303 1 204 3 323 2 179 1 59 1 251 2 229 1 182 2 327 1 231 3 347 1 216 2 378 1 192 1 379 4 262 1 19 3 
220 1 267 1 295 4 221 1 145 1 51 1 300 4 55 1 26 2 368 1 369 2 303 2 204 4 323 4 179 2 59 2 251 3 229 2 182 3 327 1 231 5 37 1 347 1 216 4 378 1 192 1 379 7 262 2 19 4 
114 1 291 1 199 1 
209 1 114 1 
354 1 
117 1 258 1 114 1 
114 1 285 1 
258 1 114 1 
330 1 117 1 258 1 33 1 114 3 291 2 
308 3 140 1 23 2 266 1 348 1 256 1 40 7 6 4 82 1 303 1 27 1 193 1 206 1 59 1 242 3 122 2 305 1 
308 3 140 1 23 2 266 1 348 1 256 1 40 7 6 4 82 1 303 1 27 1 193 1 206 1 59 1 242 3 122 2 305 1 
308 3 140 1 23 2 266 1 348 1 256 1 40 7 6 4 82 1 303 1 27 1 193 1 136 1 206 1 59 1 242 3 122 2 305 1 
266 1 140 2 23 3 363 1 244 1 6 16 82 1 200 1 366 1 27 1 303 4 175 3 177 2 30 4 179 3 206 5 59 4 305 2 371 1 226 1 229 3 60 1 372 1 308 15 91 1 348 2 256 2 40 31 236 1 261 1 193 1 262 3 242 10 122 5 
292 1 23 2 266 1 140 1 6 5 172 1 303 1 27 1 177 4 206 1 59 1 226 2 305 1 60 2 372 2 308 4 348 1 256 1 40 9 236 2 261 1 193 1 122 3 242 4 
138 1 264 1 139 1 167 1 144 1 79 1 130 1 52 1 318 1 105 1 272 1 170 1 109 1 152 1 29 1 250 1 233 1 329 1 62 1 92 1 375 1 94 2 289 1 190 1 350 1 160 2 161 1 238 2 69 1 356 1 
138 1 167 1 144 2 79 1 130 1 52 1 5 1 318 1 105 1 319 1 272 1 170 1 109 1 152 1 29 1 250 1 233 1 284 1 329 1 62 1 92 1 375 1 94 3 289 1 350 1 160 3 161 1 238 2 69 1 356 1 
138 1 167 1 144 2 79 1 52 1 5 1 272 1 170 1 109 1 152 1 29 1 250 1 233 1 284 1 329 1 62 1 92 1 94 2 289 1 350 1 160 2 161 1 238 2 69 1 356 1 
138 2 333 1 79 1 52 2 318 1 105 1 319 1 272 1 170 1 152 2 250 1 252 1 233 1 114 1 61 1 188 1 94 1 258 1 95 1 41 1 96 1 160 1 69 2 
138 1 264 1 233 1 167 1 329 1 62 1 130 1 79 1 92 1 52 1 105 1 318 1 5 1 375 1 94 1 272 1 170 1 350 1 190 1 160 1 238 2 69 1 152 1 29 1 250 1 356 1 
158 1 
137 2 293 1 195 2 295 5 142 1 145 1 51 1 50 1 104 1 301 2 108 1 340 1 204 2 247 1 57 2 250 2 11 1 113 1 153 2 115 2 114 1 253 1 347 1 349 1 63 1 216 2 258 1 311 1 353 6 19 5 18 1 72 1 358 1 219 3 360 1 221 1 79 2 25 1 131 1 272 2 321 1 170 1 368 1 228 2 182 2 231 2 233 1 36 4 188 2 235 1 189 1 41 1 379 2 96 1 97 1 
358 1 11 1 219 1 153 1 295 3 253 1 142 1 36 2 50 1 349 1 104 1 15 1 63 1 340 1 189 1 311 1 108 1 353 2 247 1 19 3 97 1 18 1 
137 1 358 1 219 1 295 3 142 1 50 1 145 1 104 1 108 1 340 1 204 1 247 1 11 1 253 1 36 3 349 1 63 1 15 1 311 1 189 1 353 1 18 1 97 1 19 3 
137 1 358 1 219 1 295 3 142 1 50 1 145 1 104 1 301 1 108 1 340 1 204 1 247 1 11 1 153 1 253 1 36 3 349 1 15 1 63 1 311 1 189 1 353 2 18 1 97 1 19 3 
137 4 195 2 295 5 142 1 243 1 50 1 145 5 104 1 301 4 340 1 108 1 204 5 247 1 57 2 11 1 210 1 113 1 153 4 115 2 253 1 347 1 349 1 15 1 63 1 216 1 311 1 353 7 19 5 18 1 358 1 219 3 221 1 169 1 321 1 368 1 280 1 228 2 182 2 231 1 36 6 373 1 235 1 189 1 97 1 
137 2 293 1 195 2 295 4 142 1 50 1 145 1 104 1 301 2 340 1 108 1 204 2 247 1 57 2 11 1 113 1 153 2 115 2 253 1 347 1 349 1 63 1 216 1 311 1 353 4 18 1 19 4 358 1 219 2 221 1 321 1 368 1 228 2 182 2 231 1 36 4 235 1 189 1 379 2 97 1 
137 2 358 1 219 2 195 2 295 4 221 1 142 1 243 1 145 1 50 1 104 1 301 2 321 1 108 1 340 1 368 1 204 1 247 1 57 2 228 2 11 1 182 2 113 1 210 1 153 2 231 1 115 2 253 1 36 4 373 1 347 1 349 1 63 1 216 1 235 1 311 1 189 1 353 4 18 1 97 1 19 4 
137 2 358 1 219 2 195 2 295 4 221 1 142 1 243 1 145 1 50 1 104 1 301 2 321 1 108 1 340 1 368 1 204 1 247 1 57 2 228 2 11 1 182 2 113 1 210 1 153 2 231 1 115 2 253 1 36 4 373 1 347 1 349 1 63 1 216 1 235 1 311 1 189 1 353 4 18 1 97 1 19 4 
137 2 358 1 219 2 295 4 221 1 142 1 145 1 50 1 104 1 301 2 108 1 340 1 368 1 204 1 247 1 228 2 11 1 113 1 210 1 153 2 231 1 115 2 283 2 253 1 36 4 14 1 38 2 347 1 155 1 349 1 63 1 216 1 235 1 311 1 189 1 353 4 379 2 18 1 97 1 19 4 355 1 
137 3 358 1 219 2 195 2 295 4 221 1 142 1 243 1 145 1 50 1 104 1 169 1 301 3 321 1 108 1 340 1 368 1 204 1 247 1 57 2 228 2 11 1 182 2 113 1 210 1 153 3 231 1 115 2 253 1 36 5 347 1 373 1 349 1 63 1 216 1 235 1 311 1 189 1 353 5 18 1 97 1 19 4 
137 3 358 1 219 2 195 2 295 4 221 1 142 1 243 1 145 1 50 1 104 1 169 1 301 3 321 1 108 1 340 1 368 1 204 1 247 1 57 2 228 2 11 1 182 2 113 1 210 1 153 3 231 1 115 2 253 1 36 5 347 1 373 1 349 1 63 1 216 1 235 1 311 1 189 1 353 5 18 1 97 1 19 4 
137 2 293 1 358 1 219 2 295 4 221 1 142 1 145 1 50 1 104 1 301 2 108 1 340 1 368 1 204 1 247 1 228 2 11 1 113 1 153 2 231 1 115 2 283 2 253 1 36 4 38 2 347 1 349 1 155 1 63 1 216 1 235 1 189 1 311 1 353 4 379 2 97 1 19 4 18 1 
47 2 75 1 140 1 266 1 23 1 199 1 6 3 150 1 28 1 27 1 303 1 177 2 59 1 226 1 60 1 372 1 308 3 345 1 256 1 40 6 236 1 312 1 42 1 193 1 122 2 242 2 
47 1 75 11 102 1 222 1 244 1 6 8 276 1 150 4 28 1 303 1 175 3 177 4 206 1 30 3 179 2 59 2 226 2 229 1 60 2 308 6 372 2 345 2 91 1 374 1 40 14 377 1 16 1 236 2 42 11 262 2 242 2 122 1 163 1 
47 1 20 1 102 1 79 1 129 1 6 1 272 1 170 1 150 1 224 1 28 1 177 2 250 1 226 1 227 1 111 1 112 1 183 1 60 1 372 1 308 1 114 1 233 1 345 1 188 1 40 2 117 1 258 1 311 2 189 2 236 1 16 1 313 1 18 1 241 1 71 1 73 1 163 1 
47 2 140 1 102 1 335 1 5 1 6 10 338 2 150 7 303 3 206 4 59 3 250 3 60 3 112 2 308 10 211 2 114 2 345 3 256 1 117 2 258 2 16 1 311 3 218 2 262 2 18 1 71 2 70 2 122 4 163 1 75 7 20 1 77 1 23 1 266 1 79 3 129 1 272 3 170 2 224 1 27 1 28 3 177 6 179 2 226 3 229 2 183 1 372 3 233 2 90 2 188 1 40 20 236 3 189 3 193 1 42 7 44 1 241 2 242 8 
20 1 139 1 166 1 294 1 79 8 269 1 5 1 6 1 272 8 170 2 224 1 28 2 342 1 177 4 249 2 250 7 226 2 183 1 60 2 372 2 308 1 233 2 114 3 345 2 328 1 185 1 254 1 188 2 40 2 258 2 312 1 311 1 189 1 236 2 16 1 41 1 96 1 18 1 163 1 
75 1 20 1 0 1 102 1 6 1 150 1 224 1 367 1 28 1 303 1 177 2 179 1 31 1 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 3 236 1 189 1 311 1 42 1 262 1 18 1 242 1 122 1 
75 1 60 1 372 1 345 1 40 2 6 2 312 1 236 1 150 1 28 1 42 1 135 1 262 1 177 2 206 1 242 1 59 1 226 1 
75 1 229 1 60 1 372 1 308 2 345 1 40 2 312 1 236 1 150 1 28 1 303 1 42 1 278 1 177 2 242 1 122 1 226 1 
75 2 6 2 150 2 28 1 303 1 177 2 179 1 206 1 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 4 236 1 312 1 262 1 42 2 242 2 122 1 
75 1 60 1 166 1 372 1 345 1 40 2 6 2 236 1 150 1 28 1 42 1 135 1 262 1 177 2 206 1 242 1 59 1 226 1 
75 1 229 1 60 1 166 1 372 1 308 2 345 1 40 2 236 1 150 1 28 1 303 1 42 1 278 1 177 2 242 1 122 1 226 1 
75 2 166 1 6 2 150 2 28 1 303 1 177 2 179 1 206 1 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 4 236 1 262 1 42 2 242 2 122 1 
75 2 6 2 150 2 28 1 303 1 177 2 179 1 206 1 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 4 236 1 262 1 42 2 242 2 122 1 
47 1 79 1 6 1 338 1 272 1 170 1 28 1 177 2 250 1 226 1 112 1 60 1 372 1 308 1 233 1 114 1 345 1 40 2 188 1 117 1 258 1 16 1 189 1 311 1 236 1 241 1 71 1 163 1 
47 1 79 1 6 1 339 1 272 1 170 1 28 1 325 1 177 2 250 1 226 1 60 1 372 1 308 1 233 1 114 1 345 1 40 2 188 1 117 1 258 1 16 1 189 1 311 1 236 1 241 1 123 1 163 1 
75 2 102 1 6 2 150 2 28 1 303 1 177 2 179 1 206 1 59 1 226 1 229 1 60 1 372 1 308 2 345 1 40 4 236 1 262 1 42 2 242 2 122 1 
75 2 139 1 79 1 6 2 338 1 272 1 170 1 150 2 303 1 28 1 177 2 206 1 179 1 59 1 250 1 226 1 229 1 112 1 60 1 308 2 372 1 233 1 114 1 345 1 40 4 117 1 258 1 189 1 311 1 236 1 218 1 42 2 262 1 241 1 71 1 122 1 242 2 
75 1 20 1 0 1 102 1 6 2 150 1 224 1 367 1 303 1 28 1 177 2 206 1 179 1 59 1 226 1 229 1 60 1 308 1 372 1 212 1 345 1 40 3 236 1 189 1 311 1 262 1 42 1 18 1 242 1 
140 1 244 1 6 20 149 1 303 5 246 1 206 4 59 5 60 3 308 21 256 1 310 1 217 1 351 1 352 1 261 1 262 4 162 1 122 4 124 1 359 1 76 1 266 1 23 1 127 1 274 1 172 1 277 1 27 1 175 3 83 2 177 6 179 4 30 4 226 3 229 4 372 3 34 4 91 3 40 41 236 3 193 1 242 8 
124 1 359 1 76 1 23 1 140 1 266 1 127 1 244 1 6 20 274 1 149 1 172 1 27 1 277 1 246 1 303 4 83 2 175 3 177 8 30 4 179 4 206 3 59 5 226 4 229 3 60 4 372 4 308 18 34 4 91 3 256 1 40 38 310 1 217 1 236 4 351 1 352 1 261 2 193 1 262 4 122 4 162 1 242 7 
124 1 76 1 23 1 140 1 266 1 127 1 244 2 6 27 274 1 149 1 172 1 27 1 277 1 246 1 303 8 83 1 175 4 177 4 30 4 179 7 206 7 59 8 226 2 229 7 60 2 372 2 308 25 34 4 91 2 256 1 40 52 310 1 377 2 236 2 351 1 352 1 261 1 193 1 262 7 122 7 162 1 242 14 
124 1 359 1 127 1 244 1 6 9 149 2 172 1 303 3 83 1 175 1 177 4 84 1 30 2 179 3 206 3 59 3 226 2 229 3 60 2 372 2 308 10 34 2 91 1 40 19 236 2 352 1 262 3 122 3 162 1 242 6 
124 2 76 1 127 1 6 14 274 1 149 1 172 1 277 1 303 2 246 1 83 2 175 2 177 6 206 2 30 2 179 3 59 3 226 3 229 2 60 3 308 12 372 3 34 4 91 2 40 26 310 1 236 3 351 1 352 1 261 2 262 3 242 4 122 2 162 1 
81 1 288 1 165 1 191 1 154 1 346 1 58 1 24 1 279 1 299 1 
93 1 187 1 
288 1 191 1 154 1 89 1 178 1 58 1 24 1 287 1 299 1 
273 1 215 1 
107 1 173 1 286 1 
164 1 20 1 1 1 295 1 143 1 296 2 24 1 299 1 132 1 54 1 367 1 224 1 225 1 370 1 58 1 344 1 154 1 87 1 253 1 35 1 288 1 311 1 189 1 259 1 191 1 43 1 18 1 19 1 
164 1 20 1 1 1 295 1 143 1 296 2 24 1 299 1 132 1 54 1 367 1 224 1 225 1 370 1 58 1 344 1 154 1 87 1 253 1 35 1 288 1 311 1 189 1 259 1 191 1 43 1 18 1 19 1 
164 1 20 1 1 1 295 1 143 1 296 2 24 1 299 1 132 1 54 1 367 1 224 1 225 1 370 1 58 1 344 1 154 1 87 1 253 1 35 1 288 1 311 1 189 1 259 1 191 1 43 1 18 1 19 1 
273 1 173 1 215 1 
273 1 173 1 215 1 
107 1 286 1 
107 1 173 1 286 1 
8 1 168 1 
47 1 164 1 20 2 265 1 295 1 296 1 24 1 168 1 299 1 54 1 26 1 8 1 224 2 248 1 58 1 251 1 184 1 86 1 154 1 93 1 187 1 288 1 311 2 189 2 191 1 19 1 18 2 
98 1 196 1 102 1 79 2 269 1 6 1 272 2 170 1 28 1 342 1 177 2 249 2 226 1 250 2 208 1 60 1 372 1 308 1 233 1 114 1 345 1 309 1 40 2 258 1 66 1 311 2 189 2 236 1 16 1 18 2 163 1 
139 1 233 1 13 1 329 1 79 2 116 1 130 1 62 1 92 1 5 1 272 2 170 1 350 1 238 2 152 1 29 1 250 2 356 1 45 1 
22 1 233 1 329 1 79 1 130 1 62 1 92 1 5 1 272 1 350 1 170 1 238 2 152 1 29 1 250 1 356 1 45 1 
233 1 114 1 13 1 61 1 79 1 188 1 223 1 258 1 272 1 170 1 41 1 96 1 152 1 250 1 
233 1 13 1 329 1 79 1 116 1 130 1 62 1 92 1 5 1 272 1 350 1 170 1 238 2 152 1 29 1 250 1 356 1 45 1 
119 1 
216 1 231 1 204 1 17 1 145 1 85 1 199 1 
219 1 195 1 295 1 221 1 145 1 321 1 368 1 204 2 57 1 182 1 231 1 347 1 216 1 235 1 353 1 379 1 19 1 
139 1 295 5 49 2 198 1 145 2 51 2 300 6 337 2 201 1 205 2 204 8 303 2 59 2 250 3 207 2 209 3 12 1 211 2 114 10 347 4 117 3 216 8 258 3 353 5 67 2 262 2 17 1 121 2 19 5 358 2 219 3 360 1 221 4 79 3 272 3 170 3 368 4 323 6 176 2 85 1 179 2 229 2 182 6 33 1 231 9 233 4 285 2 188 1 376 1 235 4 331 1 379 12 291 2 382 2 
219 1 360 1 76 1 295 1 221 2 336 1 103 1 51 1 145 2 300 5 274 1 368 2 277 1 323 5 246 1 204 5 303 2 175 1 176 2 30 1 179 2 59 2 229 2 182 3 231 8 91 1 347 2 216 5 235 2 351 1 353 1 379 6 262 2 19 1 382 1 
20 1 140 1 295 1 221 1 143 1 243 1 146 1 132 1 368 1 367 1 224 1 27 1 303 1 370 1 176 2 59 2 231 2 253 1 35 1 347 1 256 1 216 2 235 1 311 1 189 1 19 1 18 1 382 1 
231 1 221 1 347 1 145 1 216 1 235 1 368 1 204 1 17 1 85 1 
229 2 182 5 211 1 231 5 300 5 216 5 323 5 204 5 303 2 379 10 262 2 176 2 382 1 179 2 59 2 
219 1 204 1 295 1 353 1 19 1 145 1 
219 2 360 2 48 1 220 1 295 3 221 2 4 1 79 4 51 2 25 1 272 4 170 1 368 2 250 4 12 2 231 2 233 1 114 1 347 2 188 2 376 1 216 2 258 1 235 1 353 4 41 1 96 1 19 3 72 1 
47 1 20 2 79 1 272 1 338 1 170 1 224 2 367 2 28 1 177 2 250 1 226 1 60 1 112 1 308 1 372 1 233 1 114 1 88 1 345 1 35 1 40 1 188 1 117 1 258 1 236 1 311 3 189 3 18 2 71 1 241 1 163 1 
182 2 360 1 231 1 23 1 221 1 347 1 51 1 145 2 300 2 216 2 235 1 368 1 323 2 204 4 379 4 
154 1 58 1 343 1 
165 1 154 1 58 1 168 1 257 1 
154 1 58 1 343 1 
154 1 58 1 343 1 
275 1 154 1 58 1 
275 1 154 1 58 1 
275 1 154 1 58 1 
154 1 58 1 
24 1 299 1 
23 1 266 1 140 1 6 4 172 1 303 1 246 1 27 1 175 1 177 2 30 1 59 1 226 1 60 1 308 4 372 1 91 1 256 1 40 8 236 1 193 1 122 2 242 2 
23 1 140 1 266 1 244 1 6 6 172 1 303 1 27 1 246 1 175 1 177 4 30 2 179 1 206 1 59 2 226 2 60 2 308 5 372 2 214 1 91 1 256 1 40 11 236 2 193 1 262 1 122 2 242 3 
76 1 23 1 140 1 266 1 6 9 274 1 172 1 27 1 246 1 303 3 277 1 175 1 177 6 206 1 30 1 179 2 59 3 226 3 229 2 60 3 308 10 372 3 214 1 91 1 256 1 40 19 236 3 351 1 261 1 193 1 262 2 122 3 242 4 
76 1 23 1 140 1 266 1 6 10 274 1 172 1 27 1 246 1 303 2 277 1 175 1 177 6 206 2 30 1 179 2 59 3 226 3 229 1 60 3 308 7 372 3 214 1 91 1 256 1 40 17 236 3 351 1 261 1 193 1 262 2 122 3 242 5 
23 1 266 1 140 1 6 4 172 1 303 1 246 1 27 1 175 1 177 2 30 1 59 1 226 1 60 1 308 4 372 1 91 1 256 1 40 8 236 1 193 1 122 2 242 2 
76 1 6 6 274 1 172 1 246 1 303 2 277 1 175 1 177 2 206 1 30 1 179 2 59 2 226 1 229 2 60 1 308 6 372 1 91 1 40 12 236 1 351 1 262 2 122 1 242 2 
76 1 23 1 140 1 266 1 6 10 274 1 172 1 27 1 277 1 246 1 303 2 175 1 177 8 206 2 30 1 179 2 59 3 226 4 229 1 60 4 308 8 372 4 214 1 91 1 256 1 40 18 236 4 351 1 261 2 193 1 262 2 122 3 242 5 
359 1 76 1 6 9 274 1 172 1 277 1 246 1 303 2 175 1 177 8 206 3 30 1 179 3 59 3 226 4 229 2 60 4 308 7 372 4 91 1 40 16 236 4 351 1 261 2 262 3 122 3 242 6 
308 4 266 1 140 3 256 3 40 7 6 3 303 1 27 1 193 2 206 3 122 3 242 6 59 1 
359 1 76 1 23 1 140 1 266 1 6 10 274 1 172 1 27 1 277 1 246 1 303 2 175 1 177 8 206 1 30 1 179 2 59 3 226 4 229 1 60 4 308 8 372 4 91 1 256 1 40 18 236 4 351 1 261 2 193 1 262 2 122 3 242 4 
60 2 308 4 372 2 23 1 266 1 140 1 256 1 40 8 6 4 236 2 303 1 27 1 261 1 193 1 177 4 206 1 59 1 242 3 122 2 226 2 
308 3 23 1 266 1 140 1 199 1 256 1 40 6 6 3 27 1 303 1 193 1 122 2 242 2 59 1 
229 1 60 1 308 2 372 1 214 1 40 4 6 2 236 1 303 1 262 1 177 2 179 1 206 1 122 1 242 2 59 1 226 1 
229 1 308 4 91 1 244 1 40 7 6 3 303 1 175 1 262 1 30 2 179 1 206 1 122 1 59 1 242 2 
23 1 140 2 266 1 222 1 297 1 244 1 6 11 27 1 303 3 175 2 177 4 206 4 179 2 30 2 59 3 226 2 229 2 60 2 308 12 372 2 256 2 40 23 377 1 236 2 261 2 193 1 262 2 242 9 122 5 
308 1 30 1 40 1 
6 1 175 1 40 1 
229 1 60 1 372 1 308 3 211 1 214 1 40 6 6 3 236 1 303 1 262 1 177 2 179 1 206 1 59 1 242 3 122 2 226 1 
76 1 6 6 274 1 172 1 246 1 303 2 277 1 175 1 177 2 206 1 30 1 179 2 59 2 226 1 229 2 60 1 308 6 372 1 91 1 40 12 236 1 351 1 262 2 122 1 242 2 
308 3 140 1 256 1 40 6 6 3 27 1 303 1 206 1 59 1 122 1 242 2 
60 1 308 2 372 1 140 1 266 1 297 1 256 1 40 3 6 1 236 1 261 1 193 1 177 2 206 1 242 2 122 1 226 1 
60 1 372 1 308 5 140 2 256 2 146 1 40 10 6 5 236 1 172 1 27 1 303 2 177 2 206 2 122 3 242 5 59 2 226 1 
60 1 372 1 40 2 6 2 236 1 172 1 262 1 177 2 206 1 59 1 242 1 226 1 
229 1 60 1 308 2 372 1 40 4 6 2 236 1 172 1 303 1 262 1 177 2 179 1 206 1 122 1 242 2 59 1 226 1 
60 3 359 1 308 2 372 3 140 1 297 1 256 1 40 3 6 1 236 3 172 1 261 1 177 6 206 1 122 1 242 2 226 3 
359 1 23 1 140 3 266 1 297 1 244 1 6 16 366 1 200 1 172 1 27 2 303 5 175 3 177 10 30 4 179 3 206 5 59 5 371 1 226 5 229 3 60 5 308 18 372 5 214 1 91 1 256 3 40 34 236 5 261 2 193 1 262 3 242 12 122 7 
47 1 311 1 189 1 125 1 197 1 142 1 18 1 
47 1 74 1 125 1 197 1 142 1 364 1 189 1 311 1 381 1 10 1 240 1 18 1 
258 1 272 1 170 1 233 1 114 1 41 1 96 1 79 1 199 1 250 1 188 1 
47 1 183 1 20 1 114 1 233 1 79 1 188 1 117 1 258 1 272 1 189 2 311 2 170 1 224 1 18 1 241 1 71 1 250 1 
47 1 183 1 20 2 12 1 114 3 233 1 253 1 285 1 50 1 79 1 117 2 258 2 272 1 340 1 189 2 311 2 170 1 224 1 67 1 18 2 241 1 71 1 250 1 
47 1 20 2 79 2 50 1 317 1 272 2 170 1 340 1 224 1 250 2 183 1 12 1 233 1 114 3 253 1 285 1 117 2 258 2 311 2 189 2 67 1 18 2 241 1 123 1 
357 1 358 1 295 2 79 3 145 1 317 1 272 3 170 1 204 1 250 3 209 1 12 1 114 4 233 1 213 1 285 1 188 1 117 1 258 1 353 1 67 1 19 2 291 1 
358 1 209 1 12 1 233 1 295 2 114 4 285 1 145 1 79 3 317 1 188 1 117 1 337 1 258 1 272 3 170 1 204 1 67 1 353 1 19 2 291 1 250 3 
272 1 170 1 233 1 254 1 79 1 250 1 
282 1 33 1 139 1 294 1 232 1 114 3 233 3 134 1 328 1 185 1 254 1 79 7 5 1 188 2 117 1 272 7 258 2 170 2 342 1 249 1 250 6 
75 1 47 2 98 1 20 1 139 1 23 1 140 1 266 1 102 1 79 1 6 3 272 1 338 1 170 1 150 1 224 1 303 1 27 1 28 2 177 4 59 1 226 2 250 1 183 1 60 2 112 1 308 3 372 2 114 1 233 1 90 1 345 2 256 1 40 6 117 1 258 1 311 2 189 2 236 2 218 1 42 1 193 1 18 1 241 1 71 1 242 2 122 2 
358 1 219 1 295 3 221 2 49 1 145 1 79 1 337 1 272 1 368 2 204 1 205 1 85 1 250 1 251 1 209 1 231 1 114 2 347 2 188 1 376 1 216 1 235 2 353 2 17 1 19 3 121 1 291 1 
33 1 139 1 114 2 233 2 254 1 79 2 117 1 272 2 258 1 170 1 331 1 291 1 250 2 
139 1 233 1 114 1 79 4 317 1 188 1 272 4 258 1 170 1 41 1 120 1 96 1 250 4 
307 1 282 1 12 1 77 1 114 1 233 2 134 1 79 2 64 1 117 1 272 2 258 1 170 1 250 2 
272 1 170 1 233 1 238 1 29 1 62 1 79 1 250 1 356 1 188 1 
208 1 258 1 272 2 170 1 139 1 233 1 114 1 342 1 79 2 250 2 5 1 
12 1 139 1 114 3 233 2 185 1 328 1 79 5 188 1 272 5 258 2 170 2 41 1 120 1 96 1 342 1 250 4 
46 1 12 1 139 1 114 3 233 2 328 1 79 5 188 1 272 5 258 2 170 2 41 1 120 1 96 1 342 1 250 4 
47 1 183 1 20 1 114 1 233 1 79 1 188 1 117 1 258 1 272 1 189 2 311 2 170 1 224 1 18 1 241 1 250 1 123 1 
282 1 33 1 12 1 232 1 114 1 233 2 134 1 79 1 117 1 272 1 258 1 170 1 250 1 
47 1 32 1 290 1 361 1 306 1 
47 1 32 2 358 1 361 1 295 2 253 1 141 1 145 1 50 1 255 1 39 1 340 1 108 1 290 2 204 1 68 1 19 2 306 2 251 1 
32 1 196 1 361 1 309 1 66 1 189 1 311 1 290 1 18 1 
361 1 68 1 39 1 
289 1 109 1 161 1 199 1 
94 1 289 1 109 1 160 1 161 1 318 1 105 1 
160 1 69 1 52 1 
94 3 289 1 264 1 315 1 21 1 109 1 304 2 78 1 160 3 161 1 318 1 105 1 
94 2 289 1 109 1 160 2 161 1 144 1 3 1 318 1 105 1 
94 1 264 1 202 1 160 1 238 1 161 1 329 1 356 1 157 1 318 1 105 1 
94 1 264 1 109 1 160 1 161 1 318 1 105 1 
94 1 289 1 264 1 109 2 160 1 318 1 105 1 
133 1 264 1 101 1 105 2 318 2 94 2 341 1 109 1 160 2 161 1 
264 1 316 1 144 2 105 1 318 1 157 1 94 3 289 1 65 1 118 1 109 1 160 3 161 2 
264 1 329 1 144 1 92 1 245 1 105 1 318 1 94 2 289 1 109 1 160 2 161 1 238 2 29 1 356 1 
264 1 316 1 3 1 144 2 128 1 105 2 318 2 157 1 94 4 289 1 109 1 160 4 161 2 
94 1 289 1 264 1 109 1 160 1 161 1 318 1 105 1 
315 1 316 1 78 1 144 2 105 1 318 1 157 1 270 1 94 4 289 2 304 1 109 2 160 4 161 3 
264 1 326 1 334 1 144 1 268 1 105 1 318 1 94 2 289 1 109 1 160 2 161 1 
94 3 289 1 264 1 315 1 109 1 304 2 78 2 160 3 161 1 383 1 318 1 105 1 
271 2 2 1 161 2 181 1 
94 1 264 1 324 1 160 1 318 1 105 1 
94 2 289 1 264 1 118 1 109 1 160 2 161 1 144 1 318 1 105 1 
194 1 
94 1 289 1 264 1 109 1 160 1 161 1 318 1 105 1 
94 3 289 1 264 1 118 1 109 1 304 1 160 3 161 1 144 1 318 1 105 1 
270 1 316 1 161 1 157 1 
109 1 161 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (8,89,212,373) (8,89,212,373) 354 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 1 33 2 339 1 262 9 8 6 296 5 297 1 89 9 45 1 67 1 14 1 148 1 325 1 373 2 93 2 94 1 212 2 326 1 214 2 275 1 115 2 349 1 303 2 352 4 120 1 58 3 195 1 378 1 
128 1 33 2 339 1 262 9 8 6 296 5 297 1 89 9 45 1 67 1 14 1 148 1 325 1 373 2 93 2 94 1 212 2 326 1 275 1 214 2 115 2 349 1 303 2 352 4 120 1 58 3 195 1 378 1 
128 1 33 2 339 1 262 10 8 7 296 6 297 1 89 10 45 1 67 1 14 1 148 1 325 1 373 2 93 2 94 1 212 2 326 1 275 1 214 2 115 2 349 1 303 2 352 5 120 1 58 4 195 1 378 1 
128 1 33 2 339 1 262 7 8 4 296 4 297 1 89 7 45 1 67 1 148 1 325 1 373 2 93 2 94 1 212 2 326 1 275 1 214 1 115 2 349 1 303 2 352 3 120 1 58 2 195 1 378 1 
45 1 67 1 14 1 373 1 93 1 212 1 214 2 115 1 33 1 352 2 262 4 8 3 339 1 120 1 296 3 58 1 195 1 89 4 
284 1 45 1 67 1 373 1 325 1 212 1 349 1 115 1 33 1 350 1 303 1 262 2 263 1 296 1 195 1 89 2 
45 1 67 1 373 2 212 2 303 1 352 1 262 3 8 1 296 2 58 1 195 1 378 1 89 3 
128 1 33 1 8 7 262 9 339 1 296 5 89 9 45 1 44 1 67 1 14 1 373 2 92 1 93 1 212 2 275 1 214 2 115 1 352 4 303 1 120 1 58 3 195 1 378 1 
128 1 33 1 8 7 262 9 339 1 296 5 89 9 45 1 44 1 67 1 14 1 373 2 92 1 93 1 212 2 275 1 214 2 115 1 352 4 303 1 120 1 58 3 195 1 378 1 
147 1 130 1 96 1 
209 1 
291 1 1 2 310 2 351 2 106 2 108 2 269 2 62 1 
0 1 309 2 1 2 310 3 358 2 125 1 101 1 62 1 291 1 363 1 103 1 82 1 106 2 105 2 107 1 168 1 35 1 340 1 108 2 269 2 13 1 136 1 46 1 50 1 278 1 137 1 328 1 175 1 301 2 20 1 351 3 56 1 376 1 247 1 119 1 305 2 122 1 
291 1 1 1 310 1 351 1 106 1 64 1 108 1 121 1 252 1 269 1 
147 1 310 1 225 1 287 1 312 1 129 1 130 1 106 1 351 1 231 1 169 1 268 1 252 1 186 1 
147 1 1 1 310 1 225 2 287 2 312 1 129 1 130 1 106 1 351 1 231 1 108 1 268 1 269 1 252 1 
154 1 225 1 287 1 264 1 227 1 
147 1 130 1 225 2 57 1 287 2 264 1 227 1 283 1 
225 1 287 1 227 1 
1 1 79 1 310 1 225 1 287 1 291 1 106 1 351 1 64 1 264 1 108 1 121 1 252 1 269 1 
147 1 
147 1 130 1 357 1 225 2 57 1 287 2 264 1 227 1 
334 1 43 2 147 1 110 1 162 1 80 1 225 5 287 5 153 1 227 2 258 1 130 1 206 1 260 2 191 1 57 1 144 1 264 2 250 2 
96 1 62 1 
68 1 1 1 310 2 375 1 62 2 106 2 351 2 108 1 269 1 
285 1 4 1 71 1 
0 1 371 1 310 1 358 1 125 1 46 1 62 1 175 1 301 1 351 1 105 1 20 1 35 1 376 1 122 1 13 1 
0 1 1 1 310 2 358 1 46 1 125 1 274 1 4 1 175 1 203 1 301 1 20 1 106 1 351 2 105 1 35 1 376 1 108 1 122 1 13 1 
171 1 1 4 68 1 310 5 362 1 274 2 18 1 62 1 203 1 106 5 351 5 108 4 269 1 186 1 
1 2 310 2 351 2 106 2 180 1 64 1 108 2 252 1 
1 3 310 3 351 3 106 3 274 1 108 3 269 1 62 1 
1 1 310 1 351 1 106 1 64 1 108 1 252 1 
1 1 68 1 310 1 351 1 106 1 108 1 252 1 375 1 269 1 
0 1 309 2 1 3 310 4 358 1 225 1 125 1 287 1 100 1 101 1 312 1 129 1 62 1 203 1 291 1 363 1 103 1 82 1 106 3 231 1 105 1 168 1 35 1 108 3 268 1 134 1 269 2 13 1 68 1 46 1 274 1 50 1 278 1 137 1 328 1 175 1 301 1 20 1 351 4 56 1 376 1 305 1 122 1 252 1 
171 1 1 1 310 2 351 2 106 2 108 1 274 1 62 1 186 1 
147 1 68 1 1 3 310 3 225 1 287 1 100 1 274 2 129 1 312 1 300 1 203 1 106 3 351 3 231 1 108 3 268 1 269 1 252 1 
68 1 1 2 310 2 274 1 4 1 71 1 106 2 351 2 108 2 269 1 
0 1 310 1 358 1 125 1 46 1 62 1 175 1 301 1 351 1 105 1 20 1 35 1 376 1 122 1 13 1 
0 1 310 1 358 1 46 1 277 1 62 1 175 1 301 1 351 1 105 1 20 1 35 1 122 1 253 1 13 1 
24 1 254 1 285 2 356 1 309 2 335 1 101 2 4 2 363 1 103 1 82 1 63 1 34 1 168 1 42 1 15 1 50 1 71 2 240 1 243 1 330 1 56 1 247 2 305 4 
1 1 231 1 310 1 351 1 106 1 180 1 108 1 252 1 
41 1 27 1 
41 1 27 1 
95 1 88 1 
95 1 88 1 
95 1 88 1 
41 1 190 1 27 1 
41 1 27 1 179 1 
41 2 27 2 74 1 95 1 88 1 241 1 
41 1 190 1 27 1 
41 1 190 1 27 1 
41 1 27 1 237 1 
41 1 27 1 237 1 
41 1 27 1 237 1 
255 1 1 2 27 1 310 2 225 1 60 1 99 1 287 1 5 1 62 1 314 1 106 2 108 2 267 1 41 1 343 1 187 1 276 1 216 1 217 1 351 2 179 1 97 1 281 1 
41 2 353 1 147 1 255 2 343 1 187 2 223 1 27 2 225 2 287 2 99 3 81 1 5 2 201 1 245 1 217 2 74 1 332 2 318 1 
33 1 93 1 115 1 
284 1 33 1 115 1 
284 1 93 2 273 1 211 1 133 1 115 3 
284 1 93 1 273 1 133 1 289 1 115 2 
284 1 93 1 273 2 133 1 115 2 
356 1 80 1 225 5 60 1 226 1 287 5 335 1 227 1 3 1 183 2 102 2 228 1 6 1 130 1 260 1 209 3 264 4 320 1 12 1 366 1 43 1 147 2 110 2 210 1 15 1 153 3 216 1 302 1 330 1 57 1 21 2 97 1 250 1 
356 3 225 9 80 1 226 3 287 9 288 1 335 3 227 6 3 3 183 6 130 1 206 1 260 2 338 1 208 5 209 9 264 7 12 2 366 3 43 2 147 5 90 1 110 6 210 1 15 3 153 8 216 4 154 5 302 2 330 3 331 1 218 1 57 1 21 6 249 1 250 2 
1 1 356 1 310 1 79 1 225 3 287 3 226 1 335 1 3 1 102 1 183 2 228 1 6 1 291 1 130 1 260 1 206 1 106 1 64 1 264 2 209 3 108 1 12 1 269 1 366 1 43 1 147 2 110 2 15 1 153 3 216 1 302 1 330 1 351 1 21 2 250 1 121 1 252 1 
1 1 225 4 226 2 287 4 288 1 335 2 3 2 102 2 183 4 228 1 6 1 291 1 106 1 64 1 108 1 12 1 147 3 110 4 15 2 153 5 302 1 351 1 21 4 249 1 250 1 121 1 252 1 356 2 310 1 79 1 130 1 206 1 260 1 264 3 209 6 269 1 366 2 43 1 90 1 216 2 330 2 
0 1 96 1 40 1 
0 1 157 1 
152 1 
0 1 20 1 13 1 
0 1 293 1 
0 1 13 1 
0 3 20 1 2 1 248 1 40 2 13 1 
355 1 356 1 142 1 101 3 238 2 243 3 313 1 177 1 52 1 336 1 330 1 34 2 295 1 280 1 247 4 305 7 23 1 
355 1 356 1 142 1 101 3 238 2 243 3 313 1 177 1 52 1 336 1 330 1 34 2 295 1 280 1 247 4 305 7 23 1 
355 1 356 1 142 1 101 3 238 2 243 3 313 1 177 1 52 1 336 1 330 1 34 2 117 1 295 1 280 1 247 4 305 7 23 1 
308 1 355 2 309 2 356 4 142 5 226 3 163 1 257 1 164 3 101 15 335 3 313 1 336 1 363 1 103 1 82 1 34 5 132 1 295 2 232 1 185 1 15 3 50 1 238 3 243 10 177 1 52 2 330 4 118 4 247 16 280 2 75 1 305 31 23 1 
355 1 356 1 309 4 142 1 101 4 127 1 313 1 336 1 363 2 103 2 82 2 34 3 132 1 295 1 50 2 238 2 243 4 52 1 177 1 330 1 220 1 247 5 280 1 305 9 
284 1 358 1 126 1 29 1 33 1 230 1 105 1 317 1 35 1 8 1 262 2 87 1 296 1 89 2 45 1 67 1 373 1 69 1 324 1 93 1 212 1 188 1 211 1 327 1 115 2 175 1 301 1 246 1 303 1 195 1 
284 1 199 1 358 1 126 1 33 1 230 1 105 1 35 1 262 3 8 2 87 1 296 1 89 3 45 1 373 1 69 1 324 1 93 1 211 1 16 1 212 1 188 1 327 1 115 2 175 1 301 1 246 1 303 1 139 1 195 1 
284 1 199 1 358 1 126 1 33 1 230 1 105 1 35 1 262 2 8 2 87 1 296 1 89 2 45 1 324 1 93 1 16 1 188 1 211 1 115 2 175 1 301 1 246 1 303 1 195 1 
0 1 140 1 373 1 161 1 358 1 212 1 126 2 175 1 301 1 156 1 246 2 303 2 105 1 35 1 262 1 193 1 377 1 87 2 145 1 139 1 122 1 89 1 13 1 
284 1 67 1 324 1 69 1 373 1 358 1 93 1 211 1 188 1 212 1 16 1 126 1 115 2 327 1 175 1 301 1 33 1 230 1 246 1 317 1 303 1 105 1 35 1 262 1 87 1 89 1 
77 1 
0 1 225 3 287 3 227 2 3 1 105 2 106 1 231 1 143 1 9 1 341 1 12 1 13 1 186 1 298 1 147 1 109 1 110 2 153 2 301 2 351 1 193 1 250 1 122 2 252 1 25 1 161 1 358 2 310 1 80 1 256 1 359 2 311 1 312 1 129 1 260 1 315 1 84 1 35 1 207 1 209 1 169 1 268 1 367 1 43 1 47 1 175 1 178 1 57 1 138 1 
344 1 109 1 357 1 310 1 225 3 359 2 256 1 287 3 227 2 129 1 312 1 315 1 231 1 106 1 351 1 143 1 57 1 341 1 169 1 268 1 252 1 186 1 
147 1 109 1 357 1 310 1 225 3 359 3 256 1 287 3 227 1 129 1 312 1 130 1 155 1 315 1 231 1 106 1 351 1 143 1 57 1 341 1 169 1 268 1 252 1 186 1 
147 1 344 1 109 1 357 1 310 1 225 3 359 3 256 1 287 3 227 2 129 1 312 1 7 1 130 1 155 1 315 1 231 1 106 1 351 1 143 1 57 1 341 1 169 1 268 1 252 1 186 1 
25 1 357 1 310 1 80 1 225 5 256 1 359 6 287 5 227 7 3 2 311 2 312 1 129 1 7 4 30 1 204 1 32 1 130 5 260 1 315 1 84 2 106 1 231 1 143 1 9 2 266 1 169 1 341 1 268 1 186 1 298 1 43 1 147 5 109 1 344 4 110 1 272 1 153 1 329 2 155 4 351 1 57 3 250 1 252 1 
25 1 310 1 80 1 225 2 256 1 359 2 287 2 3 1 311 1 312 1 129 1 260 1 315 1 84 1 106 1 231 1 143 1 209 1 9 1 169 1 341 1 268 1 186 1 43 1 298 1 147 1 109 1 110 1 153 1 178 1 351 1 250 1 252 1 
25 1 310 1 225 4 80 1 256 1 359 4 287 4 227 4 3 2 311 2 312 1 129 1 7 2 130 1 204 1 260 1 315 1 84 2 106 1 231 1 143 1 9 2 169 1 341 1 266 1 268 1 186 1 298 1 43 1 147 1 344 2 109 1 110 1 272 1 153 1 329 2 155 2 351 1 57 2 250 1 252 1 
25 1 310 1 225 4 80 1 256 1 359 4 287 4 227 4 3 2 311 2 312 1 129 1 7 2 130 1 204 1 260 1 315 1 84 2 106 1 231 1 143 1 9 2 169 1 341 1 266 1 268 1 186 1 298 1 43 1 147 1 344 2 109 1 110 1 272 1 153 1 329 2 155 2 351 1 57 2 250 1 252 1 
25 1 310 1 225 4 80 1 256 1 359 4 287 4 227 4 311 2 312 1 129 1 7 2 166 1 130 1 260 1 315 1 106 1 231 1 143 1 209 2 9 2 169 1 341 1 268 1 186 1 43 1 147 1 344 2 109 1 110 1 272 1 153 1 114 2 215 2 155 2 351 1 57 2 250 1 76 1 252 1 333 1 
25 1 310 1 80 1 225 4 256 1 359 5 287 4 227 5 3 2 311 2 312 1 129 1 7 3 130 1 204 1 32 1 260 1 315 1 84 2 106 1 231 1 143 1 9 2 169 1 341 1 266 1 268 1 186 1 298 1 43 1 147 1 109 1 344 3 110 1 272 1 153 1 329 2 155 3 351 1 57 2 250 1 252 1 
25 1 310 1 80 1 225 4 256 1 359 5 287 4 227 5 3 2 311 2 312 1 129 1 7 3 130 1 204 1 32 1 260 1 315 1 84 2 106 1 231 1 143 1 9 2 169 1 341 1 266 1 268 1 186 1 298 1 43 1 147 1 109 1 344 3 110 1 272 1 153 1 329 2 155 3 351 1 57 2 250 1 252 1 
225 4 287 4 227 4 7 2 231 1 106 1 143 1 9 2 341 1 186 1 109 1 344 2 147 1 110 1 153 1 114 2 155 2 351 1 250 1 252 1 25 1 310 1 80 1 359 4 256 1 129 1 312 1 311 2 166 1 130 1 260 1 315 1 209 2 169 1 268 1 43 1 215 2 178 1 57 2 
254 1 285 1 309 2 356 1 101 3 4 1 62 2 313 1 336 1 363 1 103 1 82 1 34 2 168 1 295 1 50 1 238 1 71 1 243 2 52 1 177 1 330 1 96 1 56 1 247 3 305 6 
308 1 285 11 309 4 356 2 142 1 226 2 164 3 101 6 335 1 4 11 202 1 62 1 363 2 337 1 103 2 82 2 34 1 316 1 107 1 168 1 232 1 15 2 174 1 50 2 71 4 328 1 243 2 330 1 118 3 56 2 247 8 305 14 196 1 
0 1 1 1 309 2 358 1 310 2 125 1 101 1 62 1 203 1 337 1 363 1 103 1 82 1 105 1 106 1 35 1 168 1 107 1 36 1 108 1 13 1 371 1 46 1 274 1 50 1 71 1 175 1 328 1 301 1 189 1 20 1 351 2 376 1 56 1 247 1 305 2 122 1 307 1 
0 2 285 7 1 1 142 4 226 2 101 10 335 2 4 7 62 2 336 1 337 1 103 3 105 3 106 1 107 1 295 1 108 1 13 2 146 1 15 2 16 1 238 1 71 7 243 8 301 3 351 3 20 2 247 10 305 20 122 1 198 2 309 6 356 3 358 3 310 3 125 2 313 1 203 1 363 3 205 2 82 3 34 4 168 3 35 2 265 2 170 1 173 1 46 2 274 1 50 3 137 2 328 1 175 2 177 1 52 1 330 3 54 2 56 3 376 2 
254 1 0 3 1 1 309 4 310 1 358 8 161 1 101 1 29 1 259 1 31 1 363 2 103 2 82 2 364 1 106 1 105 7 35 2 168 2 107 1 131 1 108 1 13 2 236 1 16 1 113 1 274 1 50 2 239 1 175 2 328 1 301 8 351 1 56 2 193 1 247 1 119 2 305 2 122 2 
285 1 1 1 309 2 356 1 310 1 226 1 335 1 101 2 4 1 363 1 337 1 103 1 82 1 34 1 106 1 168 1 39 1 108 1 269 1 68 1 15 1 50 1 71 1 243 1 330 1 351 1 56 1 247 1 305 3 
254 1 42 1 285 1 309 2 356 1 142 1 15 1 4 1 50 1 71 1 243 1 363 1 82 1 103 1 168 1 56 1 247 2 305 2 
254 1 285 1 309 2 335 1 101 2 4 1 50 1 71 1 243 1 363 1 82 1 103 1 330 1 34 1 63 1 168 1 56 1 305 2 
254 1 285 2 309 2 356 1 142 1 15 1 226 1 101 2 335 1 4 2 50 1 71 2 243 2 363 1 330 1 82 1 103 1 34 1 168 1 56 1 247 2 305 4 
42 1 285 1 309 2 356 1 142 1 15 1 4 1 50 1 71 1 259 1 243 1 363 1 82 1 103 1 168 1 56 1 247 2 305 2 
285 1 309 2 335 1 101 2 4 1 50 1 71 1 259 1 243 1 363 1 82 1 103 1 330 1 34 1 63 1 168 1 56 1 305 2 
285 2 309 2 356 1 142 1 15 1 226 1 101 2 335 1 4 2 50 1 71 2 259 1 243 2 363 1 330 1 82 1 103 1 34 1 168 1 56 1 247 2 305 4 
285 2 309 2 356 1 142 1 15 1 226 1 101 2 335 1 4 2 50 1 71 2 243 2 363 1 330 1 82 1 103 1 34 1 168 1 56 1 247 2 305 4 
0 1 309 2 358 1 310 1 125 1 101 1 62 1 363 1 82 1 103 1 105 1 107 1 35 1 168 1 13 1 46 1 50 1 137 1 175 1 328 1 301 1 20 1 351 1 376 1 56 1 247 1 305 2 122 1 
0 1 309 2 358 1 310 1 101 1 62 1 363 1 82 1 103 1 105 1 107 1 35 1 168 1 13 1 46 1 50 1 277 1 175 1 328 1 72 1 301 1 20 1 351 1 56 1 247 1 305 2 122 1 253 1 
285 2 309 2 356 1 142 1 15 1 226 1 101 2 335 1 4 2 50 1 71 2 243 2 337 1 363 1 330 1 82 1 103 1 34 1 168 1 56 1 247 2 305 4 
285 2 198 1 0 1 356 1 309 2 142 1 358 1 310 1 125 1 226 1 101 2 335 1 4 2 29 1 363 1 82 1 103 1 34 1 105 1 35 1 168 1 13 1 15 1 46 1 50 1 71 2 137 1 175 1 243 2 301 1 330 1 20 1 351 1 376 1 56 1 247 2 305 4 
285 1 1 1 309 2 356 1 142 1 310 1 124 1 226 1 101 1 335 1 4 1 363 1 337 1 103 1 82 1 106 1 168 1 108 1 269 1 68 1 15 1 50 1 71 1 243 1 330 1 351 1 56 1 247 2 305 3 
308 1 309 4 356 3 142 3 286 1 226 3 164 1 101 10 335 3 127 1 363 2 103 2 82 2 34 3 232 1 342 1 322 2 65 2 15 3 70 1 50 2 279 1 176 1 243 6 19 1 330 3 118 2 247 9 305 19 197 1 
309 6 356 3 142 2 59 1 286 1 226 3 164 2 101 12 61 1 335 2 127 1 363 3 103 3 82 3 229 1 34 2 86 1 132 2 294 1 232 2 342 2 322 1 65 4 15 3 50 3 279 1 243 4 19 1 330 2 160 1 118 2 247 14 305 26 197 2 
142 4 59 1 286 1 226 4 335 4 101 21 61 1 336 1 103 3 229 1 232 3 294 1 295 1 342 1 65 4 15 4 70 1 238 1 243 8 19 1 160 1 118 4 247 20 305 41 197 2 308 1 356 5 309 6 164 3 127 1 313 1 363 3 82 3 34 4 86 1 132 1 322 1 172 1 50 3 279 1 52 1 177 1 330 5 
308 1 309 8 356 5 59 1 142 3 286 1 226 4 164 3 61 1 101 18 335 3 127 1 313 1 336 1 363 4 229 1 103 4 82 4 34 4 86 1 132 2 295 1 294 1 232 3 342 1 322 1 65 4 172 1 15 4 70 1 238 1 50 4 279 1 243 7 177 1 52 1 19 1 330 4 160 1 118 4 247 20 305 38 197 2 
308 2 309 4 356 8 59 1 142 7 286 1 226 7 164 4 61 1 101 25 335 7 127 1 313 1 336 1 363 2 229 1 103 2 82 2 34 7 86 1 132 1 295 1 294 1 232 2 342 1 322 1 65 4 15 7 174 2 238 1 50 2 279 1 243 14 177 1 52 1 19 1 330 8 160 1 118 4 247 27 305 52 197 1 
41 1 353 1 255 1 245 1 187 1 217 1 27 1 74 1 219 1 5 1 
179 1 281 1 
41 1 255 1 187 1 217 1 104 1 27 1 112 1 10 1 5 1 
141 1 190 1 
55 1 237 1 241 1 
41 1 353 1 147 1 343 1 255 1 187 1 223 1 27 1 225 1 287 1 99 2 81 1 5 1 201 1 245 1 217 1 74 1 332 1 
41 1 353 1 147 1 343 1 255 1 187 1 223 1 27 1 225 1 287 1 99 2 81 1 5 1 201 1 245 1 217 1 74 1 332 1 
41 1 353 1 147 1 343 1 255 1 187 1 223 1 27 1 225 1 287 1 99 2 81 1 5 1 201 1 245 1 217 1 74 1 332 1 
141 1 190 1 241 1 
141 1 190 1 241 1 
55 1 237 1 
55 1 237 1 241 1 
314 1 267 1 
255 1 1 2 27 1 310 2 225 1 60 1 287 1 99 1 81 1 5 1 62 1 314 1 106 2 264 1 108 2 267 1 41 1 187 1 49 1 276 1 216 1 217 1 351 2 179 1 332 1 97 1 281 1 
0 1 309 2 358 2 310 2 101 1 261 1 337 1 363 1 82 1 103 1 106 2 105 2 35 1 168 1 107 1 233 1 321 1 13 1 235 1 236 1 17 1 113 1 50 1 175 1 328 1 301 2 351 2 56 1 247 1 119 2 305 2 
284 1 149 1 69 1 358 2 123 1 93 1 346 1 211 1 16 1 188 1 115 2 175 1 29 1 301 2 33 1 230 1 105 2 35 1 87 1 
284 1 222 1 69 1 358 1 93 1 346 1 211 1 16 1 188 1 115 2 175 1 301 1 33 1 230 1 105 1 35 1 87 1 
0 1 358 1 123 1 161 1 184 1 175 1 301 1 105 1 35 1 193 1 87 1 145 1 122 1 13 1 
284 1 149 1 69 1 358 1 123 1 93 1 346 1 211 1 16 1 188 1 115 2 175 1 301 1 33 1 230 1 105 1 35 1 87 1 
319 1 
147 1 130 1 110 1 96 1 162 1 153 1 258 1 
43 1 298 1 147 1 110 1 80 1 153 1 3 1 260 1 84 1 209 1 250 1 
0 4 98 1 225 2 287 2 226 1 227 2 335 1 3 3 183 3 292 1 105 1 12 1 13 1 147 3 110 3 15 1 111 1 153 4 301 1 157 2 20 1 21 3 248 1 250 2 122 1 26 1 356 1 358 1 80 2 129 1 260 2 35 2 209 6 40 1 366 2 43 2 370 1 91 1 175 1 54 1 330 1 57 1 282 1 
356 2 78 2 59 1 225 1 80 2 287 1 226 2 164 1 227 1 61 1 335 2 3 3 183 5 130 2 260 2 229 1 86 1 207 1 294 1 209 6 232 1 12 1 366 1 234 1 43 2 147 5 110 5 15 2 153 8 330 2 118 1 57 1 21 5 250 2 380 1 
356 2 1 1 78 2 310 1 79 1 80 1 225 1 287 1 291 1 204 1 260 1 106 1 64 1 295 1 38 1 108 1 269 1 366 1 43 1 110 2 153 2 52 1 177 1 330 1 351 1 250 1 121 1 252 1 
43 1 147 1 110 1 162 1 80 1 153 1 258 1 130 1 260 1 250 1 
147 1 356 1 110 2 15 1 226 1 153 2 335 1 3 1 183 2 330 1 21 2 209 3 366 1 
147 1 130 1 225 1 57 1 287 1 227 1 
0 1 224 1 358 4 161 1 80 1 225 3 360 2 287 3 227 4 206 1 260 2 167 1 105 4 35 1 207 2 12 2 13 1 43 2 110 2 47 1 153 2 175 1 301 4 159 1 57 2 193 1 138 1 250 2 122 2 
0 1 309 2 1 2 358 1 310 3 125 1 101 1 62 1 291 1 363 1 103 1 82 1 105 1 106 2 35 1 168 1 108 2 269 2 13 1 46 1 50 1 278 1 137 1 328 1 175 1 301 1 351 3 20 1 376 1 56 1 305 1 122 1 
43 1 147 2 110 1 80 1 153 1 3 1 183 1 130 1 260 1 207 1 209 2 250 1 12 1 
255 1 217 1 304 1 
314 1 353 1 255 1 217 1 150 1 
255 1 217 1 304 1 
255 1 217 1 304 1 
255 1 217 1 361 1 
255 1 217 1 361 1 
255 1 217 1 361 1 
255 1 217 1 
41 1 27 1 
356 1 309 4 142 1 101 4 238 1 50 2 243 3 313 1 177 1 52 1 336 1 363 2 330 1 82 2 103 2 34 2 132 1 247 4 295 1 305 8 
356 1 101 3 238 1 313 1 243 2 52 1 177 1 336 1 330 1 96 1 34 2 295 1 247 3 305 6 
271 1 309 2 356 1 142 1 15 1 226 1 101 2 335 1 50 1 243 2 363 1 330 1 82 1 103 1 34 1 247 2 305 4 
308 1 356 1 142 1 15 1 226 1 164 1 335 1 101 4 243 2 330 1 34 1 118 2 232 1 247 3 305 7 
308 1 356 3 309 4 142 4 226 2 164 2 101 12 335 2 313 1 336 1 363 2 82 2 103 2 316 1 34 5 132 2 295 2 15 2 174 1 238 1 50 2 243 9 177 1 52 2 73 1 330 3 118 2 247 11 305 23 
118 1 305 1 101 1 
247 1 164 1 305 1 
309 2 271 1 356 1 142 1 15 1 226 1 101 3 335 1 50 1 243 3 363 1 103 1 82 1 54 1 330 1 34 2 247 3 305 6 
309 2 356 2 142 1 59 1 226 2 164 1 101 6 61 1 335 2 127 1 363 1 103 1 82 1 229 1 34 1 86 1 232 1 294 1 15 2 50 1 243 2 330 2 118 1 247 6 305 12 
356 1 142 1 101 3 243 2 177 1 52 1 330 1 34 1 247 3 295 1 305 6 
309 2 142 1 101 2 50 1 243 2 313 1 52 1 336 1 73 1 363 1 82 1 103 1 34 1 132 1 247 1 295 1 305 3 
309 2 356 2 142 2 101 5 50 1 127 1 243 5 52 2 177 1 363 1 103 1 82 1 330 2 34 3 38 1 295 2 247 5 305 10 
309 2 356 1 142 1 15 1 127 1 50 1 243 1 363 1 82 1 103 1 247 2 305 2 
309 2 356 1 142 1 15 1 226 1 101 2 335 1 127 1 50 1 243 2 363 1 330 1 82 1 103 1 34 1 247 2 305 4 
309 6 142 1 70 1 101 2 127 1 50 3 243 2 52 1 73 1 363 3 82 3 103 3 34 1 132 1 295 1 247 1 305 3 
308 1 309 10 356 5 142 5 257 1 163 1 226 3 164 3 101 18 335 3 127 1 313 1 336 1 363 5 103 5 82 5 34 7 132 2 295 3 232 1 271 1 15 3 70 1 238 1 50 5 243 12 177 2 52 3 73 1 330 5 118 4 247 16 75 1 305 34 
356 1 309 2 59 1 164 1 101 4 127 1 313 1 336 1 363 1 103 1 82 1 34 2 232 1 295 1 238 1 50 1 243 2 52 1 177 1 330 1 118 1 247 4 305 8 
308 1 309 4 356 2 59 1 142 1 226 1 164 1 101 5 127 1 313 1 336 1 363 2 103 2 82 2 34 2 295 1 232 1 271 1 15 1 238 1 50 2 243 3 177 1 52 1 330 1 118 2 247 6 305 11 
309 6 356 3 142 1 59 1 226 2 164 1 101 10 61 1 335 2 127 1 313 1 336 1 363 3 103 3 82 3 229 1 34 3 86 1 132 1 295 1 232 1 294 1 271 1 15 2 238 1 50 3 243 4 177 1 52 1 330 3 118 1 247 9 305 19 
309 6 356 3 142 2 59 1 226 2 164 1 101 7 61 1 335 1 127 1 313 1 336 1 363 3 103 3 82 3 229 1 34 3 86 1 132 1 295 1 232 1 294 1 271 1 15 2 238 1 50 3 243 5 177 1 52 1 330 2 118 1 247 10 305 17 
356 1 309 2 59 1 164 1 101 4 127 1 313 1 336 1 363 1 103 1 82 1 34 2 232 1 295 1 238 1 50 1 243 2 52 1 177 1 330 1 118 1 247 4 305 8 
309 2 356 2 142 1 59 1 226 2 164 1 101 6 61 1 335 2 127 1 363 1 103 1 82 1 229 1 34 1 86 1 232 1 294 1 15 2 50 1 243 2 330 2 118 1 247 6 305 12 
309 8 356 3 142 2 59 1 226 2 164 1 101 8 61 1 335 1 127 1 313 1 336 1 363 4 103 4 82 4 229 1 34 3 86 1 132 2 295 1 294 1 232 1 271 1 15 2 238 1 50 4 243 5 177 1 52 1 330 2 118 1 247 10 305 18 
309 8 356 3 142 3 59 1 226 3 164 1 101 7 61 1 335 2 127 1 363 4 103 4 82 4 229 1 34 3 86 1 132 2 294 1 232 1 15 3 70 1 50 4 243 6 330 2 118 1 247 9 305 16 
356 1 142 3 101 4 313 1 243 6 52 3 177 1 336 2 330 1 34 3 295 3 247 3 305 7 
309 8 356 3 142 1 59 1 226 2 164 1 101 8 61 1 335 1 127 1 313 1 336 1 363 4 103 4 82 4 229 1 34 3 86 1 132 2 295 1 294 1 232 1 15 2 70 1 238 1 50 4 243 4 177 1 52 1 330 2 118 1 247 10 305 18 
171 1 310 1 351 1 106 1 28 1 62 1 186 1 
171 1 372 1 310 1 151 1 28 1 62 1 242 1 106 1 351 1 85 1 306 1 186 1 
301 1 0 1 96 1 161 1 358 1 105 1 35 1 193 1 122 1 175 1 13 1 
0 1 1 1 310 2 358 1 46 1 125 1 274 1 62 1 175 1 301 1 20 1 106 1 351 2 105 1 35 1 108 1 122 1 13 1 
0 3 1 1 358 1 310 2 125 1 360 1 165 1 62 1 105 1 106 2 231 1 35 1 293 1 108 2 268 1 13 2 46 1 274 1 175 1 301 1 351 2 20 2 252 1 
0 3 1 1 358 2 310 2 360 1 165 1 62 1 105 2 106 2 231 1 35 1 293 1 108 2 268 1 13 2 323 1 46 1 274 1 175 1 301 2 351 2 20 2 252 1 253 1 
0 4 358 3 225 2 360 1 287 2 227 1 129 1 165 1 130 1 105 3 35 1 293 1 40 1 13 1 323 1 147 1 175 1 301 3 244 1 157 1 20 1 122 1 182 1 
323 1 147 1 26 1 0 4 358 3 225 2 287 2 360 1 227 1 129 1 165 1 175 1 301 3 130 1 157 1 20 1 105 3 35 1 293 1 122 1 40 1 13 1 
301 1 364 1 358 1 105 1 35 1 175 1 
0 1 358 1 347 1 116 1 175 1 301 1 105 1 20 1 35 2 11 1 248 1 122 1 13 1 
285 1 0 1 198 1 356 1 1 1 309 4 310 2 358 1 125 1 101 3 4 1 62 2 29 1 313 1 336 1 337 1 363 2 103 2 82 2 34 2 106 1 105 1 35 1 168 2 295 1 233 1 108 1 265 1 13 1 46 1 274 1 238 1 50 2 71 1 137 1 175 1 243 2 177 1 52 1 301 1 330 1 20 1 351 2 56 2 376 1 247 3 305 6 
26 1 0 2 358 1 162 1 80 2 225 3 287 3 227 2 258 1 129 1 292 1 130 1 260 2 167 1 105 1 264 1 40 1 43 2 147 1 370 1 110 1 91 1 153 1 301 1 157 1 57 1 250 2 122 1 
0 2 358 2 111 1 29 1 175 1 301 2 364 1 105 2 20 1 35 2 248 1 40 1 13 1 
323 1 0 1 358 4 161 1 213 1 29 1 175 1 301 4 105 4 35 1 193 1 122 1 13 1 
146 1 0 1 358 1 347 1 48 1 290 1 116 1 175 1 301 1 105 1 20 1 35 2 13 1 
284 1 301 1 33 1 230 1 358 1 105 1 35 1 115 1 122 1 175 1 
301 2 0 1 261 1 236 1 358 2 105 2 35 1 16 1 175 1 13 1 29 1 
0 3 236 1 161 1 358 5 360 1 213 1 239 1 29 1 175 2 301 5 31 1 105 4 35 2 193 1 122 1 13 2 
0 3 236 1 161 1 358 5 360 1 213 1 29 1 175 2 301 5 31 1 105 4 35 2 193 1 194 1 122 1 13 2 
0 1 1 1 310 2 358 1 46 1 274 1 62 1 175 1 301 1 20 1 106 1 351 2 105 1 35 1 108 1 122 1 13 1 253 1 
0 1 358 1 347 1 360 1 116 1 175 1 301 1 105 1 20 1 35 2 11 1 248 1 13 1 
83 1 299 1 37 1 374 1 62 1 
369 1 147 1 299 1 225 2 287 2 100 1 200 1 129 1 312 1 374 2 62 1 130 1 83 2 231 1 37 2 264 1 268 1 251 1 252 1 
235 1 83 1 310 1 351 1 106 1 299 1 17 1 374 1 321 1 
369 1 299 1 200 1 
45 1 96 1 296 1 195 1 
45 1 373 1 262 1 212 1 296 1 195 1 89 1 
303 1 262 1 126 1 
45 1 67 1 373 1 212 1 348 1 349 2 158 1 262 3 296 1 22 1 195 1 89 3 
45 1 373 1 8 1 262 2 212 1 296 1 214 1 195 1 89 2 
33 1 67 1 373 1 352 1 93 1 339 1 262 1 212 1 296 1 115 1 89 1 
67 1 373 1 262 1 212 1 296 1 195 1 89 1 
45 1 67 1 373 1 262 1 212 1 195 2 89 1 
368 1 51 1 67 1 373 2 262 2 212 2 192 1 296 1 195 1 89 2 
45 1 67 1 373 1 352 1 8 2 262 3 212 1 296 2 275 1 58 1 128 1 195 1 89 3 
284 1 354 1 67 1 373 1 8 1 262 1 212 1 115 1 89 2 
45 1 67 1 14 1 373 2 352 1 8 2 262 4 212 2 296 2 214 1 58 1 195 1 89 4 
45 1 67 1 373 1 262 1 212 1 296 1 195 1 89 1 
45 2 373 1 345 1 212 1 349 1 158 1 352 1 8 2 262 4 296 3 58 1 22 1 195 2 89 4 
66 1 45 1 67 1 373 1 92 1 8 1 262 2 212 1 296 1 195 1 379 1 89 2 
45 1 67 1 53 1 373 1 158 1 262 3 212 1 296 1 349 2 195 1 22 2 89 3 
270 1 365 1 221 2 296 2 
67 1 373 1 135 1 262 1 212 1 89 1 
45 1 67 1 373 1 8 1 262 2 212 1 296 1 128 1 195 1 89 2 
181 1 
45 1 67 1 373 1 262 1 212 1 296 1 195 1 89 1 
45 1 67 1 373 1 212 1 349 1 128 1 8 1 262 3 296 1 195 1 89 3 
345 1 352 1 296 1 58 1 
296 1 195 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 201 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 2 302 1 336 1 27 1 238 1 78 2 8 1 345 1 9 1 58 1 59 2 247 1 266 2 12 3 106 1 130 1 371 1 193 2 14 6 270 9 112 4 377 1 64 9 91 2 229 1 113 1 67 2 295 5 
168 2 302 1 336 1 27 1 238 1 78 2 8 1 345 1 9 1 58 1 59 2 247 1 266 2 12 3 106 1 130 1 371 1 193 2 14 6 270 9 112 4 377 1 64 9 91 2 229 1 67 2 113 1 295 5 
168 2 302 1 336 1 27 1 238 1 78 2 8 1 345 1 9 1 58 1 59 2 247 1 266 2 12 4 106 1 130 1 371 1 193 2 14 7 270 10 112 5 377 1 64 10 91 2 229 1 67 2 113 1 295 6 
168 2 302 1 336 1 27 1 238 1 78 2 8 1 345 1 9 1 59 2 247 1 266 2 12 2 106 1 130 1 371 1 193 2 14 4 270 7 112 3 377 1 64 7 91 1 229 1 67 2 113 1 295 4 
58 1 59 1 168 1 247 1 266 1 12 1 106 1 14 3 270 4 112 2 64 4 238 1 91 2 78 1 67 1 345 1 9 1 295 3 
59 1 168 1 247 1 266 1 106 1 130 1 193 1 270 2 328 1 19 1 64 2 78 1 113 1 94 1 295 1 345 1 
59 2 247 1 266 2 12 1 106 1 193 1 14 1 270 3 112 1 64 3 8 1 345 1 295 2 
168 1 336 1 7 1 238 1 8 1 78 1 212 1 345 1 9 1 59 2 58 1 247 1 266 2 12 3 106 1 193 1 14 7 270 9 112 4 377 1 64 9 91 2 67 1 295 5 
168 1 336 1 7 1 238 1 8 1 78 1 212 1 345 1 9 1 59 2 58 1 247 1 266 2 12 3 106 1 193 1 14 7 270 9 112 4 377 1 64 9 91 2 67 1 295 5 
61 1 211 1 318 1 
333 1 211 1 179 2 
48 2 274 2 84 2 198 1 241 2 205 1 79 2 88 2 
356 1 358 1 143 1 231 1 202 1 203 1 5 1 71 1 206 1 205 1 175 2 123 1 208 1 47 2 48 2 341 1 240 2 241 3 242 1 79 2 320 1 346 1 190 1 60 2 84 2 38 1 267 1 191 1 269 1 373 1 88 2 111 2 228 1 274 3 198 1 275 1 355 1 
48 1 4 1 274 1 347 1 84 1 241 1 205 1 338 1 79 1 88 1 
83 1 331 1 61 1 96 1 84 1 107 1 369 1 338 1 125 1 51 1 274 1 211 1 241 1 66 1 
83 1 331 1 61 1 96 2 84 1 107 1 88 1 338 1 48 1 51 2 274 1 211 1 241 1 66 1 79 1 
57 1 51 1 96 1 312 1 337 1 
57 1 51 2 61 1 96 2 211 1 372 1 166 1 312 1 
51 1 96 1 312 1 
57 1 4 1 96 1 347 1 84 1 205 1 338 1 315 1 88 1 48 1 51 1 274 1 241 1 79 1 
211 1 
57 1 95 1 51 2 61 1 96 2 211 1 372 1 312 1 
57 2 61 1 96 5 131 2 13 1 372 1 173 2 147 1 110 1 339 1 360 2 340 1 51 5 211 1 310 1 379 1 199 1 312 2 140 1 
198 1 318 1 
301 1 84 2 88 1 48 1 274 2 198 2 241 2 79 1 214 1 
134 1 300 1 21 1 
356 1 143 1 346 1 60 1 5 1 71 1 206 1 175 1 361 1 228 1 274 1 198 1 240 1 241 1 242 1 275 1 
356 1 143 1 346 1 60 1 5 1 84 1 220 1 71 1 206 1 175 1 309 1 134 1 48 1 228 1 274 2 240 1 275 1 242 1 241 2 79 1 
48 3 274 3 84 3 198 1 241 3 88 1 79 3 309 1 
48 1 4 1 274 1 84 1 241 1 338 1 79 1 
48 1 274 1 301 1 84 1 241 1 338 1 79 1 88 1 214 1 
356 1 331 1 358 1 143 1 231 1 301 1 202 1 203 1 5 1 96 1 71 1 206 1 205 1 175 1 338 1 47 1 48 3 341 1 51 1 240 1 242 1 241 4 79 3 320 1 83 1 346 1 190 1 60 1 84 3 107 1 159 1 220 1 267 1 191 1 308 1 88 2 309 1 111 2 228 1 274 4 198 1 275 1 66 1 355 1 
48 1 125 1 277 1 274 2 84 2 198 1 241 2 79 1 309 1 
83 1 331 1 301 1 96 1 107 1 84 3 220 1 308 1 88 1 338 1 309 2 48 3 51 1 274 3 211 1 241 3 66 1 79 3 152 1 
134 1 48 2 274 2 301 1 21 1 84 2 241 2 79 2 88 1 309 1 
356 1 143 1 346 1 60 1 5 1 71 1 175 1 206 1 228 1 274 1 198 1 240 1 241 1 242 1 275 1 
356 1 143 1 346 1 60 1 171 1 71 1 175 1 206 1 274 1 198 1 240 1 241 1 242 1 275 1 265 1 
358 1 300 2 231 1 203 1 202 2 98 1 208 2 234 1 47 4 176 1 341 1 210 1 213 1 186 1 219 1 325 1 267 1 191 1 87 1 43 1 111 2 134 2 21 2 23 1 
48 1 331 1 274 1 84 1 241 1 182 1 338 1 79 1 
321 1 277 1 301 1 84 5 220 1 88 1 309 2 48 4 125 1 274 5 198 1 103 1 241 5 79 4 
48 2 4 1 274 2 84 2 182 1 241 2 338 1 79 2 
56 1 272 1 
56 1 272 1 
29 1 132 1 
29 1 132 1 
29 1 132 1 
299 1 56 1 272 1 
299 1 56 1 272 1 
138 1 56 1 272 1 
367 1 29 1 311 1 56 2 132 1 272 2 
299 1 56 1 272 1 
56 1 350 1 272 1 
56 1 350 1 272 1 
56 1 350 1 272 1 
230 1 279 2 367 1 96 2 62 3 282 1 86 1 316 2 272 2 51 2 195 2 211 1 127 2 253 1 56 2 306 1 153 1 245 1 33 2 
279 1 170 1 96 1 73 1 48 2 51 1 209 1 127 1 149 1 241 2 56 1 79 2 33 1 363 1 82 1 368 1 62 1 84 2 272 1 195 1 274 2 198 1 253 1 138 1 
168 1 78 1 67 1 
168 1 19 1 78 1 
168 3 251 1 19 1 354 1 54 1 67 2 
297 1 168 2 19 1 354 1 54 1 67 1 
168 2 19 1 354 2 54 1 67 1 
333 1 170 1 97 2 96 5 233 1 173 1 98 1 73 1 360 1 51 5 126 1 179 3 211 2 186 1 185 2 363 1 57 4 104 1 324 1 219 1 61 1 250 2 131 1 325 1 372 1 376 1 378 1 379 2 312 1 199 3 140 1 24 1 
0 1 201 1 333 3 97 6 96 9 283 1 233 1 337 5 173 2 98 3 73 4 147 1 360 2 51 9 126 2 179 9 211 5 186 3 57 7 324 3 219 3 61 1 250 6 131 2 108 1 325 3 370 5 372 1 293 1 379 6 312 6 199 8 140 1 141 1 24 2 
4 1 333 2 96 3 97 2 173 1 205 1 98 1 73 1 338 1 315 1 147 1 48 1 360 1 51 3 126 1 211 3 179 4 241 1 79 1 185 1 186 1 57 2 104 1 324 1 61 1 219 1 347 1 84 1 131 1 250 2 325 1 88 1 274 1 378 1 379 2 199 3 24 1 
201 1 333 2 97 2 96 2 173 1 98 1 73 1 147 1 360 1 51 2 126 1 211 2 179 4 185 1 186 1 57 1 104 1 324 1 219 1 250 2 131 1 325 1 378 1 379 2 199 3 24 1 
2 1 318 1 206 1 
99 1 206 1 
55 1 
346 1 206 1 
356 1 2 2 346 1 165 1 206 3 93 1 
356 1 346 1 206 1 
206 1 161 1 
144 1 246 1 202 3 219 1 232 1 98 1 146 1 87 3 208 4 351 1 47 7 225 2 20 1 101 1 180 1 128 1 213 2 
144 1 246 1 202 3 219 1 232 1 98 1 146 1 87 3 208 4 351 1 47 7 225 2 20 1 101 1 180 1 128 1 213 2 
144 1 246 1 202 3 219 1 232 1 98 1 146 1 87 3 351 1 208 4 47 7 225 2 303 1 20 1 101 1 180 1 128 1 213 2 
144 2 246 1 25 1 248 1 324 1 219 1 202 4 325 1 98 1 87 2 146 1 208 4 47 8 225 1 259 2 213 1 186 1 330 1 276 1 200 1 
358 2 144 1 231 2 203 2 202 4 232 1 98 1 146 1 208 5 47 9 177 1 101 1 180 1 181 1 213 3 246 1 219 1 267 2 87 4 351 1 111 4 225 2 20 1 45 1 
1 1 142 1 168 2 334 1 175 1 305 1 240 1 78 1 242 1 345 1 215 1 289 1 59 1 247 1 266 1 218 1 60 1 106 1 157 1 193 1 85 1 14 1 270 2 133 1 251 1 19 1 64 2 275 1 67 1 295 1 
1 1 142 1 168 2 334 1 175 1 261 1 305 1 240 1 129 1 78 1 242 1 184 1 345 1 215 1 289 1 59 1 247 1 266 1 218 1 60 1 193 1 14 2 270 3 133 1 251 1 19 1 64 3 275 1 67 1 295 1 
1 1 142 1 168 2 334 1 175 1 261 1 240 1 129 1 242 1 78 1 345 1 215 1 289 1 247 1 218 1 60 1 193 1 14 2 270 2 251 1 19 1 64 2 275 1 67 1 295 1 
1 2 71 1 175 1 206 1 52 1 237 1 239 1 240 1 242 1 184 1 215 2 187 1 59 1 266 1 218 2 249 1 346 1 60 1 193 2 270 1 375 1 64 1 275 1 
1 1 142 1 168 2 334 1 175 1 305 1 240 1 129 1 78 1 242 1 215 1 289 1 59 1 266 1 218 1 60 1 106 1 193 1 85 1 270 1 133 1 251 1 19 1 64 1 275 1 67 1 
287 1 
331 1 332 1 333 2 256 1 96 5 206 1 338 1 50 1 51 5 260 1 211 2 150 1 216 1 11 1 346 1 60 2 61 1 107 1 158 2 16 1 273 4 226 1 274 1 275 1 66 1 312 6 24 1 118 2 357 1 71 2 173 1 175 2 360 1 76 2 286 1 125 1 237 1 179 2 240 2 242 1 241 1 319 2 288 1 83 1 291 2 36 2 249 1 131 1 84 1 369 1 372 3 90 2 379 2 199 2 140 1 
288 1 118 1 331 1 83 1 357 1 95 1 96 3 107 1 84 1 369 1 372 1 338 1 273 2 286 1 125 1 51 3 274 1 150 1 241 1 66 1 312 2 216 1 
288 1 331 1 83 1 357 1 95 1 61 1 96 3 107 1 84 1 158 1 369 1 372 1 338 1 273 3 286 1 125 1 51 3 274 1 211 1 150 1 241 1 66 1 312 1 216 1 
357 1 331 1 118 1 95 1 96 3 338 1 125 1 286 1 51 3 211 1 150 1 241 1 319 1 216 1 288 1 83 1 61 1 84 1 107 1 369 1 158 1 372 1 273 3 274 1 66 1 312 2 
331 1 3 1 95 1 333 2 96 5 256 1 338 1 51 5 211 5 150 1 216 1 61 5 107 1 158 4 271 1 273 6 226 1 227 1 274 1 66 1 312 7 118 4 357 1 173 1 314 1 360 1 286 1 125 1 76 2 77 1 241 1 319 4 288 1 83 1 36 2 291 2 84 1 131 1 369 1 372 3 90 2 379 1 199 1 140 1 
331 1 333 2 96 4 256 1 338 1 51 4 211 2 150 1 216 1 11 1 61 1 107 1 158 2 273 4 226 1 274 1 66 1 312 4 357 1 118 2 173 1 360 1 125 1 286 1 76 2 179 2 241 1 319 2 288 1 83 1 36 2 291 2 84 1 131 1 369 1 372 2 90 2 379 1 199 1 140 1 
118 2 357 1 331 1 333 2 256 1 96 4 173 1 314 1 338 1 360 1 76 2 125 1 286 1 51 4 77 1 211 1 150 1 241 1 319 2 216 1 288 1 83 1 291 2 36 2 61 1 84 1 107 1 131 1 158 2 369 1 372 2 273 4 227 1 226 1 90 2 274 1 379 1 66 1 312 4 199 1 140 1 
118 2 357 1 331 1 333 2 256 1 96 4 173 1 314 1 338 1 360 1 76 2 125 1 286 1 51 4 77 1 211 1 150 1 241 1 319 2 216 1 288 1 83 1 291 2 36 2 61 1 84 1 107 1 131 1 158 2 369 1 372 2 273 4 227 1 226 1 90 2 274 1 379 1 66 1 312 4 199 1 140 1 
167 1 117 1 118 2 357 1 331 1 256 1 96 4 173 1 359 2 338 1 360 1 125 1 286 1 51 4 211 1 179 2 150 1 241 1 319 2 216 1 288 1 83 1 36 2 61 1 84 1 107 1 131 1 158 2 369 1 372 2 42 2 327 1 273 4 227 1 90 2 274 1 379 1 66 1 312 4 199 1 140 1 
357 1 331 1 118 3 3 1 333 2 256 1 96 4 173 1 314 1 338 1 360 1 76 2 125 1 286 1 51 4 77 1 211 1 150 1 241 1 319 3 216 1 288 1 83 1 291 2 36 2 61 1 131 1 84 1 107 1 369 1 158 3 372 2 273 5 227 1 226 1 90 2 274 1 379 1 66 1 199 1 312 5 140 1 
357 1 331 1 118 3 3 1 333 2 256 1 96 4 173 1 314 1 338 1 360 1 76 2 125 1 286 1 51 4 77 1 211 1 150 1 241 1 319 3 216 1 288 1 83 1 291 2 36 2 61 1 131 1 84 1 107 1 369 1 158 3 372 2 273 5 227 1 226 1 90 2 274 1 379 1 66 1 199 1 312 5 140 1 
167 1 118 2 357 1 331 1 256 1 96 4 173 1 359 2 338 1 360 1 286 1 125 1 51 4 211 1 179 2 150 1 241 1 319 2 216 1 288 1 83 1 36 2 11 1 61 1 131 1 84 1 107 1 158 2 369 1 372 2 42 2 273 4 90 2 274 1 379 1 66 1 312 4 199 1 140 1 
358 1 300 1 231 1 203 1 202 3 232 1 98 1 208 3 234 1 47 6 341 1 101 1 180 1 318 1 213 2 219 1 267 1 191 1 87 2 351 1 111 2 134 1 225 1 20 1 21 1 198 2 
358 2 300 11 25 1 231 2 202 6 203 2 98 1 146 1 208 8 47 14 259 3 341 1 30 1 213 1 243 1 186 2 190 1 324 2 219 2 348 1 325 1 192 1 267 2 191 2 269 1 87 2 111 4 134 11 164 1 21 4 198 1 276 1 200 3 
356 1 143 1 358 1 231 1 203 1 202 1 5 1 71 1 206 1 175 1 208 1 47 2 48 1 361 1 341 1 240 1 242 1 241 2 79 1 34 1 346 1 105 1 60 1 190 1 84 1 220 1 267 1 191 1 269 1 309 1 374 1 111 2 228 1 274 2 164 1 21 1 198 1 275 1 
143 2 300 7 202 10 203 3 5 2 98 3 206 2 146 4 208 10 47 20 48 1 49 1 341 3 101 1 213 4 346 2 60 3 219 3 220 1 267 3 269 1 351 1 309 1 111 6 225 1 63 2 228 2 20 1 274 3 164 1 21 7 275 2 355 2 356 2 69 1 358 3 120 2 231 3 169 2 232 1 71 1 175 3 74 2 129 1 180 1 240 3 241 3 242 2 79 1 244 1 186 2 190 1 324 2 84 1 325 2 191 3 87 8 134 7 198 2 
116 1 298 1 358 2 278 1 231 2 203 2 202 1 71 2 206 3 175 8 207 1 208 1 234 1 47 2 48 1 236 1 341 2 100 1 237 1 129 1 240 8 241 1 242 2 344 1 79 1 249 1 346 2 60 7 190 1 157 1 84 1 267 2 191 2 269 1 373 2 309 1 111 4 274 1 275 2 
358 1 300 1 231 1 301 1 203 1 202 2 98 1 208 1 47 3 48 1 341 1 241 1 213 1 79 1 186 1 365 1 324 1 219 1 84 1 325 1 267 1 191 1 87 1 88 1 111 2 134 1 274 1 164 1 21 1 
358 1 300 1 231 1 203 1 219 1 191 1 267 1 87 1 146 1 208 2 47 2 234 1 111 2 134 1 341 1 21 1 23 1 186 1 
358 1 300 1 231 1 203 1 202 2 325 1 191 1 267 1 98 1 87 1 47 2 234 1 111 2 134 1 341 1 176 1 21 1 213 1 
358 1 300 2 231 1 203 1 202 2 98 1 146 1 208 2 234 1 47 4 341 1 213 1 186 1 324 1 219 1 325 1 267 1 191 1 87 2 111 2 134 2 21 2 
358 1 300 1 231 1 203 1 219 1 191 1 267 1 87 1 146 1 208 2 47 2 111 2 134 1 341 1 100 1 21 1 23 1 186 1 
358 1 300 1 231 1 203 1 202 2 325 1 191 1 267 1 98 1 87 1 47 2 111 2 134 1 341 1 176 1 100 1 21 1 213 1 
358 1 300 2 231 1 203 1 202 2 98 1 146 1 208 2 47 4 341 1 100 1 213 1 186 1 324 1 219 1 325 1 267 1 191 1 87 2 111 2 134 2 21 2 
358 1 300 2 231 1 203 1 202 2 98 1 146 1 208 2 47 4 341 1 213 1 186 1 324 1 219 1 325 1 267 1 191 1 87 2 111 2 134 2 21 2 
356 1 143 1 358 1 231 1 203 1 202 1 5 1 71 1 175 1 206 1 208 1 47 2 341 1 240 1 242 1 241 1 346 1 60 1 190 1 191 1 267 1 269 1 111 2 228 1 274 1 198 1 275 1 355 1 
356 1 143 1 358 1 231 1 203 1 202 1 171 1 71 1 175 1 206 1 208 1 47 2 341 1 240 1 242 1 241 1 265 1 346 1 60 1 190 1 37 1 191 1 267 1 269 1 111 2 274 1 198 1 275 1 
358 1 300 2 231 1 203 1 202 2 98 1 146 1 208 2 47 4 341 1 213 1 186 1 324 1 219 1 325 1 267 1 191 1 87 2 111 2 134 2 164 1 21 2 
356 1 143 1 358 1 300 2 231 1 202 2 203 1 5 1 98 1 175 1 206 1 146 1 208 2 47 4 341 1 240 1 242 1 241 1 213 1 186 1 346 1 60 1 324 1 219 1 157 1 325 1 191 1 267 1 87 2 111 2 134 2 63 1 228 1 274 1 21 2 275 1 355 1 
358 1 300 1 231 1 301 1 202 1 203 1 98 1 146 1 208 2 47 3 48 1 341 1 28 1 241 1 79 1 186 1 324 1 219 1 84 1 325 1 267 1 191 1 87 1 88 1 111 2 134 1 274 1 164 1 21 1 
358 2 119 1 25 1 231 2 203 2 202 10 98 3 146 3 208 9 47 19 124 1 259 2 177 1 213 3 80 1 186 3 156 2 10 1 324 3 219 3 160 1 325 3 268 2 267 2 87 6 292 1 111 4 296 1 276 1 200 1 
358 3 119 1 231 3 145 1 202 12 203 3 255 1 335 1 98 2 146 2 208 14 47 26 124 2 259 2 235 1 177 1 213 2 80 1 186 3 156 1 323 1 10 2 324 3 219 3 160 1 325 2 268 4 267 3 87 4 162 1 111 6 45 2 276 2 200 2 
145 1 202 21 203 3 255 1 335 1 98 5 146 4 208 20 47 41 259 4 101 1 213 4 156 1 10 1 219 5 160 1 267 3 268 4 162 1 351 1 111 6 225 1 20 1 276 3 70 1 119 1 358 3 25 1 231 3 232 1 124 2 235 1 177 1 180 1 80 1 186 4 323 1 324 4 325 4 87 8 292 1 45 1 200 3 
70 1 358 4 119 1 25 1 145 1 231 4 255 1 203 4 202 18 232 1 335 1 98 4 146 3 208 20 47 38 124 2 235 1 259 4 177 1 101 1 180 1 213 4 80 1 186 4 156 1 323 1 10 1 324 4 219 5 160 1 325 3 268 4 267 4 87 7 292 1 351 1 162 1 111 8 225 1 20 1 45 2 276 3 200 3 
358 2 119 1 25 2 145 1 231 2 255 1 203 2 202 25 232 1 335 1 98 8 146 7 208 27 47 52 124 1 235 1 259 4 177 1 101 1 180 1 30 2 213 7 80 1 186 7 156 1 323 1 10 1 324 7 219 8 160 1 325 7 268 4 267 2 87 14 351 1 162 1 111 4 225 1 20 1 45 1 276 2 200 4 
230 1 364 1 195 1 279 1 367 1 127 1 86 1 56 1 33 1 272 1 
82 1 138 1 
195 1 279 1 353 1 127 1 56 1 40 1 343 1 33 1 272 1 
230 1 279 1 367 1 96 1 62 2 86 1 316 1 272 1 51 1 195 1 211 1 127 1 253 1 56 1 306 1 153 1 245 1 33 1 
230 1 279 1 367 1 96 1 62 2 86 1 316 1 272 1 51 1 195 1 211 1 127 1 253 1 56 1 306 1 153 1 245 1 33 1 
230 1 279 1 367 1 96 1 62 2 86 1 316 1 272 1 51 1 195 1 211 1 127 1 253 1 56 1 306 1 153 1 245 1 33 1 
299 1 311 1 284 1 
299 1 311 1 284 1 
22 1 350 1 
311 1 22 1 350 1 
209 1 368 1 
279 1 170 1 96 1 73 1 316 1 48 2 51 1 209 1 127 1 149 1 241 2 56 1 79 2 153 1 33 1 363 1 82 1 57 1 368 1 62 1 84 2 41 1 272 1 195 1 274 2 198 1 138 1 
299 1 284 1 
311 1 22 1 350 1 
358 1 231 1 203 1 202 1 206 1 175 2 207 1 208 1 26 1 47 2 236 1 341 1 148 1 317 1 240 2 242 1 241 2 346 1 190 1 60 2 84 2 39 1 267 1 191 1 221 1 269 1 373 2 111 2 274 2 164 1 275 1 
1 1 142 1 168 2 60 2 334 1 157 1 172 1 174 1 175 2 251 1 19 1 305 1 129 1 240 2 78 1 275 1 242 1 67 1 115 1 
1 1 142 1 168 2 60 1 334 1 175 1 251 1 19 1 305 1 129 1 240 1 78 1 242 1 275 1 67 1 32 1 115 1 
1 1 346 1 249 1 60 1 71 1 72 1 174 1 206 1 175 1 375 1 237 1 240 1 275 1 242 1 
1 1 142 1 168 2 60 1 334 1 172 1 174 1 175 1 251 1 19 1 305 1 129 1 240 1 78 1 275 1 242 1 67 1 115 1 
151 1 
61 1 211 1 310 1 13 1 379 1 318 1 199 1 
333 1 96 1 173 1 360 1 76 1 51 1 179 1 211 2 291 1 61 1 131 1 372 1 226 1 379 1 199 1 312 1 140 1 
2 2 333 6 96 5 97 6 258 2 206 10 98 2 50 1 51 5 99 3 53 2 211 8 342 1 346 3 60 3 61 2 219 2 157 1 107 2 13 1 161 2 15 2 18 1 65 1 310 1 275 4 312 5 24 2 356 3 313 2 122 2 71 1 173 4 175 3 74 2 360 4 179 12 240 3 242 3 31 1 186 2 322 2 366 2 324 2 131 4 250 6 325 2 372 3 252 2 196 1 379 8 199 9 140 4 93 1 
145 1 333 3 255 1 96 1 97 5 335 1 173 2 98 2 259 1 360 2 235 1 50 1 51 1 53 1 179 6 211 5 186 2 35 1 324 2 219 2 61 2 250 5 131 2 325 2 372 1 162 1 137 1 252 2 379 5 312 1 199 8 140 2 24 1 276 1 200 1 
4 1 96 1 232 1 173 1 98 1 205 1 338 1 315 1 48 1 360 1 51 1 77 1 53 1 180 1 241 1 79 1 217 1 219 2 347 1 131 1 84 1 88 1 274 1 20 1 252 2 379 2 199 2 140 1 
61 1 131 1 13 1 173 1 360 1 211 1 310 1 379 1 199 1 140 1 
324 2 333 5 219 2 97 5 250 5 325 2 98 2 74 1 53 1 252 2 179 10 211 5 379 5 199 5 186 2 
51 1 61 1 96 1 211 1 372 1 312 1 
96 3 71 2 173 2 206 1 175 4 147 1 360 2 50 2 51 3 260 1 237 1 342 1 240 4 242 1 31 2 346 1 249 1 60 4 131 2 372 2 16 1 135 1 275 1 379 2 199 2 312 4 140 1 294 1 24 2 
356 1 358 1 143 1 231 1 202 1 203 1 5 1 71 1 175 1 205 1 206 1 47 1 48 2 341 1 240 1 241 3 242 1 79 2 320 1 346 1 190 1 60 1 84 2 191 1 267 1 88 2 111 2 228 1 274 3 198 1 275 1 355 1 
333 2 61 2 97 2 250 2 131 1 173 1 225 1 360 1 50 1 179 4 211 4 379 2 199 1 140 1 24 1 
189 1 279 1 33 1 
189 1 279 1 33 1 
230 1 163 1 209 1 279 1 33 1 
189 1 279 1 33 1 
279 1 139 1 33 1 
279 1 139 1 33 1 
279 1 139 1 33 1 
279 1 33 1 
56 1 272 1 
358 2 231 2 219 1 202 4 203 2 232 1 267 2 98 1 146 1 87 3 208 4 351 1 47 8 111 4 225 1 20 1 101 1 180 1 45 1 213 2 
202 3 219 1 232 1 98 1 87 2 351 1 208 3 47 6 225 1 20 1 101 1 180 1 318 1 213 2 
358 1 231 1 324 1 202 2 203 1 219 1 325 1 267 1 98 1 87 2 224 1 146 1 208 2 111 2 47 4 213 1 186 1 
25 1 324 1 202 4 219 1 325 1 98 1 146 1 87 2 208 3 47 7 259 2 213 1 276 1 200 1 186 1 
358 2 25 1 231 2 202 12 203 2 232 2 98 3 146 4 208 11 47 23 259 2 101 1 180 1 30 1 213 5 186 2 243 1 324 2 219 3 325 2 267 2 326 1 87 9 351 1 111 4 225 1 20 2 45 2 200 2 
259 1 202 1 47 1 
208 1 200 1 47 1 
358 1 231 1 324 1 203 1 202 3 219 1 325 1 267 1 98 1 224 1 74 1 146 1 87 3 208 3 111 2 47 6 213 2 186 1 
358 1 145 1 231 1 202 6 203 1 255 1 335 1 98 2 146 1 208 6 47 12 259 1 235 1 177 1 213 1 186 2 324 2 219 2 325 2 267 1 87 2 162 1 111 2 200 1 276 1 
219 1 202 3 232 1 98 1 87 2 146 1 208 3 47 6 20 1 180 1 213 1 
358 1 231 1 202 2 203 1 232 1 267 1 326 1 146 1 87 2 208 1 351 1 47 3 111 2 20 1 101 1 45 1 213 1 
358 1 217 1 231 1 203 1 202 5 219 2 232 2 267 1 98 2 87 5 146 2 208 5 111 2 47 10 177 1 20 2 180 1 213 3 
358 1 231 1 203 1 219 1 267 1 146 1 87 1 208 2 111 2 47 2 177 1 186 1 
358 1 231 1 324 1 202 2 203 1 219 1 325 1 267 1 98 1 87 2 146 1 208 2 111 2 47 4 177 1 213 1 186 1 
358 3 231 3 202 2 203 3 232 1 267 3 326 1 87 2 146 1 292 1 208 1 47 3 111 6 177 1 20 1 45 1 213 1 
358 3 231 3 202 6 203 3 232 1 98 2 146 2 208 6 47 12 259 1 177 1 101 1 180 1 213 2 217 1 219 2 267 3 87 4 224 1 292 1 351 1 111 6 20 1 276 1 330 1 200 1 
358 1 145 1 231 1 202 4 203 1 232 1 98 1 208 4 47 8 259 1 177 1 101 1 180 1 213 2 219 1 267 1 87 2 351 1 111 2 225 1 20 1 200 1 276 1 
358 2 25 1 145 1 231 2 202 5 203 2 232 1 98 1 146 1 208 6 47 11 259 2 177 1 101 1 180 1 213 2 186 1 324 1 219 2 267 2 224 1 87 3 351 1 111 4 225 1 20 1 276 1 200 1 
358 3 145 1 231 3 202 10 203 3 255 1 232 1 335 1 98 3 146 1 208 9 47 19 259 1 235 1 177 1 101 1 180 1 213 3 186 2 324 2 219 3 325 2 267 3 224 1 87 4 351 1 162 1 111 6 225 1 20 1 45 1 200 1 276 1 
358 3 145 1 231 3 202 7 203 3 255 1 232 1 335 1 98 2 146 2 208 10 47 17 259 1 235 1 177 1 101 1 180 1 213 3 186 2 324 2 219 3 325 1 267 3 224 1 87 5 351 1 162 1 111 6 225 1 20 1 45 1 200 1 276 1 
358 1 145 1 231 1 202 4 203 1 232 1 98 1 208 4 47 8 259 1 177 1 101 1 180 1 213 2 219 1 267 1 87 2 351 1 111 2 225 1 20 1 200 1 276 1 
358 1 145 1 231 1 202 6 203 1 255 1 335 1 98 2 146 1 208 6 47 12 259 1 235 1 177 1 213 1 186 2 324 2 219 2 325 2 267 1 87 2 162 1 111 2 200 1 276 1 
358 4 145 1 231 4 202 8 203 4 255 1 232 1 335 1 98 2 146 2 208 10 47 18 259 1 235 1 177 1 101 1 180 1 213 3 186 2 324 2 219 3 325 1 267 4 224 1 87 5 351 1 162 1 111 8 225 1 20 1 45 2 276 1 200 1 
358 4 145 1 231 4 202 7 203 4 255 1 335 1 98 2 146 3 208 9 47 16 259 1 235 1 177 1 213 3 186 3 324 3 219 3 325 2 267 4 87 6 162 1 292 1 111 8 45 2 276 1 200 1 
202 4 219 1 232 3 98 1 87 6 146 3 351 2 208 3 47 7 20 3 101 1 180 1 213 3 
358 4 145 1 231 4 202 8 203 4 255 1 232 1 335 1 98 2 146 1 208 10 47 18 259 1 235 1 177 1 101 1 180 1 213 3 186 2 324 2 219 3 325 1 267 4 87 4 351 1 162 1 292 1 111 8 225 1 20 1 45 2 276 1 200 1 
125 1 277 1 274 1 84 1 44 1 198 1 241 1 
277 1 84 1 222 1 125 1 274 1 102 1 197 1 44 1 198 1 241 1 362 1 81 1 
346 1 249 1 60 1 237 1 240 1 71 1 275 1 242 1 318 1 206 1 175 1 
356 1 143 1 346 1 60 1 84 1 71 1 206 1 175 1 309 1 48 1 228 1 274 2 198 1 240 1 275 1 241 2 242 1 79 1 
356 2 331 1 143 1 122 1 175 1 206 3 338 1 48 1 240 1 242 1 241 2 31 1 79 2 83 1 346 2 60 1 84 2 161 1 309 1 228 1 274 2 198 1 275 1 
356 2 331 1 143 1 122 1 175 2 206 3 338 1 48 1 240 2 242 1 241 2 31 1 265 1 79 2 83 1 346 2 60 2 84 2 161 1 309 1 89 1 274 2 198 1 275 1 
356 1 2 1 280 1 96 2 122 1 71 1 206 4 175 3 51 2 99 1 211 1 240 3 242 1 31 1 346 1 60 3 61 1 107 1 161 1 89 1 275 1 312 1 254 1 
356 1 2 1 346 1 60 3 366 1 61 1 96 2 107 1 122 1 71 1 161 1 175 3 206 4 89 1 51 2 99 1 211 1 240 3 275 1 242 1 31 1 312 1 
278 1 60 1 240 1 275 1 242 1 175 1 
116 1 356 1 298 1 278 1 346 2 60 6 157 1 71 2 257 1 6 1 373 1 175 7 206 3 236 1 129 1 240 7 183 1 242 2 275 3 93 1 344 1 
356 1 143 1 358 2 300 1 120 1 231 2 202 3 203 2 5 1 232 1 98 1 206 1 175 1 208 3 47 6 48 1 341 2 101 1 180 1 240 1 242 1 241 2 213 2 79 1 346 1 60 1 219 1 157 1 84 1 39 1 267 2 191 2 87 2 351 1 309 1 111 4 134 1 225 1 63 1 228 1 20 1 274 2 164 1 21 1 198 2 275 1 355 1 
2 1 96 3 71 1 173 2 258 1 175 1 206 2 360 2 51 3 99 1 211 1 342 1 240 1 57 1 322 1 60 1 366 1 61 1 131 2 107 1 13 1 372 1 15 1 310 1 379 1 199 1 312 2 140 2 
356 1 2 1 278 1 346 1 60 2 157 1 175 2 206 2 65 1 240 2 242 1 275 2 93 1 
249 1 346 1 60 4 157 1 71 1 175 4 206 1 75 1 89 1 237 1 240 4 275 1 242 1 
356 1 346 1 60 2 281 1 307 1 257 1 175 2 206 1 240 2 183 1 242 1 275 2 31 1 244 1 
142 1 168 1 19 1 60 1 240 1 71 1 78 1 275 1 242 1 175 1 
346 1 60 2 157 1 175 2 206 1 236 1 240 2 129 1 317 1 242 1 275 1 
298 1 249 1 346 2 60 4 157 1 71 1 175 5 206 3 75 1 236 1 237 1 240 5 242 2 275 2 31 1 344 1 
298 1 249 1 346 2 60 4 157 1 71 1 349 1 175 5 206 3 75 1 236 1 237 1 240 5 242 2 275 2 31 1 
356 1 143 1 346 1 60 1 84 1 71 1 206 1 175 1 309 1 48 1 274 2 198 1 240 1 275 1 241 2 242 1 79 1 265 1 
356 1 346 1 60 1 257 1 6 1 175 1 206 1 240 1 183 1 242 1 275 2 31 1 93 1 
84 1 221 1 26 1 329 1 148 1 274 1 262 1 263 1 241 1 
17 1 155 1 263 1 
329 1 262 1 204 1 198 1 263 1 
331 1 83 1 57 1 155 1 121 1 61 1 96 2 107 1 204 2 308 1 338 1 17 1 329 2 51 2 262 2 211 1 198 1 263 1 66 1 
247 1 318 1 295 1 345 1 
59 1 247 1 266 1 64 1 295 1 345 1 270 1 
218 1 64 1 193 1 
154 1 59 1 266 1 247 1 106 1 130 2 270 3 194 1 64 3 92 1 295 1 345 1 
59 1 247 1 266 1 64 2 91 1 14 1 295 1 345 1 270 2 
112 1 59 1 168 1 266 1 64 1 106 1 78 1 67 1 295 1 9 1 270 1 
59 1 266 1 64 1 106 1 295 1 345 1 270 1 
59 1 247 1 266 1 64 1 106 1 345 2 270 1 
59 2 46 1 266 2 106 1 270 2 64 2 178 1 264 1 295 1 345 1 
59 1 247 1 266 1 12 1 106 1 336 1 14 2 270 3 112 1 377 1 64 3 345 1 295 2 
59 1 168 2 247 1 266 1 106 1 109 1 14 1 270 2 251 1 19 1 64 2 78 1 67 1 295 1 345 1 
59 2 58 1 247 1 266 2 12 1 106 1 14 2 270 4 112 1 64 4 91 1 345 1 295 2 
59 1 247 1 266 1 64 1 106 1 295 1 345 1 270 1 
59 1 247 2 266 1 12 1 130 1 14 2 270 4 194 1 285 1 112 1 64 4 92 1 345 2 295 3 
59 1 266 1 247 1 106 1 14 1 270 2 136 1 64 2 212 1 295 1 345 1 114 1 
59 1 266 1 247 1 106 1 130 2 270 3 194 1 64 3 92 2 295 1 345 1 68 1 
352 1 290 2 223 1 295 2 
188 1 59 1 266 1 64 1 106 1 270 1 
59 1 247 1 266 1 377 1 64 2 106 1 14 1 295 1 345 1 270 2 
304 1 
59 1 247 1 266 1 64 1 106 1 295 1 345 1 270 1 
59 1 247 1 266 1 377 1 64 3 106 1 130 1 14 1 295 1 345 1 270 3 
285 1 112 1 12 1 295 1 
295 1 345 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (65,312) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 134 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 2 62 2 42 1 23 1 335 2 44 1 304 6 336 3 45 1 339 2 27 4 48 1 76 2 214 1 106 1 107 1 320 1 352 2 321 1 83 1 376 5 236 9 56 1 85 1 156 1 181 1 296 9 202 2 
204 2 62 2 42 1 23 1 335 2 44 1 304 6 336 3 45 1 339 2 27 4 48 1 76 2 214 1 106 1 107 1 320 1 352 2 321 1 83 1 376 5 236 9 56 1 85 1 156 1 181 1 202 2 296 9 
204 2 62 2 42 1 23 1 335 2 44 1 304 7 336 4 45 1 339 2 27 5 48 1 76 2 214 1 106 1 107 1 320 1 352 2 321 1 83 1 376 6 236 10 56 1 85 1 156 1 181 1 202 2 296 10 
204 1 62 2 42 1 23 1 335 2 44 1 304 4 336 2 45 1 339 2 27 3 48 1 76 2 214 1 107 1 320 1 352 2 321 1 83 1 376 4 236 7 56 1 85 1 156 1 181 1 202 2 296 7 
76 1 204 2 106 1 107 1 320 1 352 1 321 1 335 1 304 3 376 3 336 1 236 4 45 1 339 1 181 1 296 4 202 1 27 2 
76 1 62 1 347 1 371 1 107 1 352 1 321 1 335 1 83 1 376 1 236 2 56 1 339 1 181 1 296 2 47 1 
62 1 42 1 107 1 352 2 321 1 376 2 304 1 236 3 336 1 339 2 181 1 296 3 27 1 
204 2 62 1 183 1 117 1 42 1 335 1 304 7 336 3 45 1 339 2 27 4 76 1 214 1 106 1 107 1 320 1 352 2 321 1 376 5 236 9 85 1 181 1 296 9 202 1 
204 2 62 1 183 1 117 1 42 1 335 1 304 7 336 3 45 1 339 2 27 4 76 1 214 1 106 1 107 1 320 1 352 2 321 1 376 5 236 9 85 1 181 1 296 9 202 1 
261 1 134 1 334 1 
155 1 334 1 281 2 
175 2 25 1 361 2 237 2 123 2 20 1 96 2 256 2 
137 1 3 1 138 2 96 2 140 1 189 1 8 1 101 1 25 1 306 1 362 1 361 3 123 3 364 1 256 2 210 1 12 1 128 1 345 1 262 1 213 1 77 2 49 1 145 2 30 2 324 1 31 1 175 2 235 1 33 1 237 2 239 1 87 1 20 1 59 1 329 1 92 2 
175 1 25 1 361 1 237 1 123 1 57 1 96 1 256 1 15 1 368 1 
261 1 136 1 349 1 299 1 334 1 120 1 361 1 237 1 123 1 57 1 267 1 165 1 167 1 259 1 
261 1 349 1 299 2 96 1 334 1 120 1 175 1 361 1 237 1 123 1 57 1 267 2 165 1 256 1 259 1 
252 1 299 1 88 1 267 1 159 1 
261 1 307 1 299 2 88 1 267 2 159 1 334 1 166 1 
299 1 88 1 267 1 
28 1 299 1 96 1 15 1 159 1 175 1 25 1 361 1 237 1 123 1 57 1 267 1 256 1 368 1 
334 1 
261 1 307 1 299 2 88 1 267 2 159 1 334 1 93 1 
261 1 203 2 222 1 317 1 299 5 264 1 79 1 234 2 159 2 334 1 277 1 193 1 307 1 88 2 19 1 267 5 356 1 343 2 91 1 
128 1 331 1 137 1 145 1 65 1 96 1 30 1 140 1 8 1 31 1 362 1 361 2 237 1 364 1 123 2 87 1 294 1 256 1 59 1 92 1 
134 1 20 1 
260 1 96 1 133 1 175 1 361 2 237 2 123 2 20 2 256 1 
50 1 65 1 154 1 
128 1 137 1 116 1 145 1 30 1 140 1 8 1 31 1 361 1 362 1 123 1 364 1 87 1 20 1 59 1 92 1 
175 1 361 3 237 3 123 3 294 1 20 1 96 3 256 3 
361 1 237 1 123 1 57 1 96 1 256 1 368 1 
260 1 175 1 361 1 237 1 123 1 57 1 96 1 256 1 133 1 
137 1 331 1 138 2 299 1 96 3 140 1 120 1 8 1 101 1 25 1 362 1 363 1 361 4 364 1 123 4 165 1 210 1 256 3 75 1 259 1 12 1 128 1 260 1 345 1 262 1 213 1 77 1 49 1 349 1 145 1 30 1 31 1 175 2 235 1 33 1 237 3 87 1 294 1 57 1 267 1 20 1 59 1 329 1 92 1 
136 1 361 2 237 2 123 2 294 1 20 1 124 1 96 1 256 1 
260 1 331 1 349 1 299 1 96 3 334 1 120 1 110 1 175 1 361 3 237 3 123 3 57 1 294 2 267 1 165 1 256 3 75 1 259 1 
260 1 50 1 65 1 96 2 175 1 361 2 237 2 123 2 294 1 256 2 
128 1 137 1 145 1 30 1 140 1 8 1 31 1 361 1 362 1 123 1 364 1 87 1 20 1 59 1 92 1 
128 1 145 1 30 1 140 1 8 1 361 1 362 1 123 1 364 1 87 1 112 1 20 1 257 1 59 1 92 1 
312 1 295 1 
344 1 361 1 237 1 123 1 57 1 96 1 256 1 120 1 
136 1 260 1 331 1 96 4 373 1 233 1 175 1 361 5 237 5 123 5 294 2 124 1 20 1 256 4 
344 1 361 2 237 2 123 2 57 1 96 2 256 2 368 1 
100 1 297 1 
100 1 297 1 
84 1 242 1 
84 1 242 1 
84 1 242 1 
100 1 370 1 297 1 
100 1 370 1 297 1 
161 1 100 1 297 1 
100 2 369 1 84 1 247 1 242 1 297 2 
100 1 370 1 297 1 
100 1 286 1 297 1 
100 1 286 1 297 1 
100 1 286 1 297 1 
348 1 184 2 299 2 318 1 247 1 249 2 334 1 99 1 121 1 100 2 148 1 71 1 35 2 255 1 326 2 153 2 267 2 280 3 297 2 
348 1 184 1 299 1 284 1 215 1 96 2 119 1 224 1 374 1 161 1 100 1 361 2 310 1 237 2 35 1 123 2 267 1 326 1 153 1 20 1 280 1 256 2 60 1 297 1 
76 1 335 1 202 1 
76 1 335 1 371 1 
335 3 371 1 211 1 202 2 276 1 358 1 
335 2 104 1 371 1 202 1 276 1 358 1 
335 2 371 1 202 1 358 1 276 2 
203 1 245 1 4 1 299 5 41 2 119 1 43 2 159 4 334 2 68 2 207 1 208 1 305 1 73 1 307 1 281 3 343 1 261 1 51 1 52 1 284 1 79 2 234 1 292 1 88 1 267 5 19 3 155 1 355 1 356 1 60 1 330 1 
203 2 245 3 4 1 299 9 206 1 43 6 159 7 334 5 68 6 193 1 208 3 253 1 252 5 73 3 307 1 365 1 281 9 196 5 343 2 261 1 52 2 79 6 234 2 290 1 292 3 18 1 88 6 267 9 19 8 155 3 179 1 355 2 356 1 60 4 330 3 
203 1 245 1 299 3 41 1 159 2 43 2 334 3 68 2 208 1 305 1 193 1 73 1 281 4 343 1 261 1 51 1 52 1 79 2 234 1 292 1 267 3 19 3 155 2 355 1 60 1 330 1 
203 1 245 2 299 4 41 2 43 4 159 3 334 4 68 4 208 2 193 1 305 1 253 1 73 2 365 1 281 7 343 1 261 1 51 1 52 1 79 4 234 1 292 2 18 1 267 4 19 5 155 3 355 1 60 2 330 2 
8 1 134 1 174 1 
8 1 221 1 
209 1 
8 1 362 1 
8 3 174 2 362 1 72 1 125 1 140 1 
8 1 362 1 140 1 
8 1 266 1 
182 2 245 1 77 7 298 1 29 1 322 1 225 1 54 3 251 1 101 3 292 1 293 1 74 2 239 4 342 1 180 1 258 1 
182 2 245 1 77 7 298 1 29 1 322 1 225 1 54 3 251 1 101 3 292 1 293 1 74 2 239 4 342 1 180 1 258 1 
182 2 245 1 77 7 298 1 29 1 322 1 225 1 54 3 251 1 101 3 292 1 293 1 74 2 239 4 90 1 342 1 180 1 258 1 
182 5 245 4 298 1 138 2 250 3 187 1 225 1 24 1 251 1 101 15 191 1 208 3 73 3 74 3 342 1 258 2 12 1 213 1 49 1 77 31 265 1 372 1 29 2 322 5 54 10 199 1 33 1 292 4 293 2 239 16 89 4 180 2 243 1 330 3 
182 3 245 1 298 1 138 4 225 1 101 4 74 2 342 1 258 1 12 2 346 1 213 2 49 2 77 9 29 1 322 1 54 4 292 1 33 2 238 1 239 5 293 1 243 1 180 1 
62 1 246 1 274 1 6 1 335 2 304 1 311 1 339 1 313 1 211 1 76 1 128 1 130 1 129 1 13 1 145 1 371 1 107 1 30 1 81 1 352 1 321 1 376 1 236 2 87 1 58 1 181 1 202 1 296 2 92 1 
62 1 115 1 274 1 6 1 335 2 160 1 304 2 311 1 339 1 211 1 313 1 76 1 128 1 129 1 13 1 78 1 145 1 371 1 107 1 30 1 81 1 352 1 376 1 236 3 87 1 58 1 181 1 202 1 296 3 92 1 
62 1 115 1 274 1 335 2 304 2 311 1 313 1 211 1 128 1 76 1 13 1 78 1 145 1 371 1 107 1 30 1 81 1 376 1 236 2 87 1 58 1 181 1 296 2 202 1 92 1 
128 1 169 1 62 2 13 2 145 1 274 2 275 1 30 1 352 1 81 2 8 1 160 1 236 1 362 1 240 1 87 1 10 1 339 1 144 1 59 1 296 1 282 1 92 1 
62 1 246 1 274 1 6 1 335 2 311 1 339 1 313 1 211 1 76 1 128 1 129 1 13 1 78 1 145 1 371 1 30 1 81 1 352 1 321 1 236 1 87 1 58 1 202 1 296 1 92 1 
188 1 
136 1 0 1 1 1 2 1 334 2 8 1 102 1 103 2 10 1 341 1 144 1 281 2 343 1 349 1 52 1 145 2 146 2 234 1 353 4 237 1 241 1 57 1 19 2 155 2 356 1 59 2 203 1 114 2 299 5 158 1 301 2 120 1 362 1 307 3 361 1 123 1 165 1 314 1 167 1 259 1 261 1 128 1 168 1 171 2 79 2 172 1 30 2 323 2 34 1 88 6 87 1 267 5 268 1 327 2 92 2 
136 1 1 1 2 1 349 1 299 3 172 1 323 1 120 1 353 2 307 1 361 1 237 1 123 1 88 2 57 1 267 3 268 1 341 1 165 1 259 1 167 1 93 1 
136 1 1 1 114 1 2 1 299 3 334 1 120 1 361 1 307 1 123 1 165 1 341 1 167 1 259 1 261 1 349 1 172 1 353 3 237 1 88 1 57 1 267 3 268 1 93 1 
136 1 1 1 114 1 2 1 299 3 334 1 120 1 307 1 361 1 123 1 165 1 341 1 167 1 259 1 261 1 349 1 172 1 323 1 353 3 237 1 57 1 88 2 267 3 268 1 327 1 93 1 
136 1 1 1 2 1 273 1 96 1 334 1 103 1 105 1 341 1 229 1 343 1 349 1 146 1 15 1 234 1 353 3 237 2 57 2 19 1 155 1 356 1 203 1 114 1 299 4 158 1 120 1 302 1 301 1 25 1 361 2 307 2 123 2 165 1 256 1 314 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 3 175 1 177 1 88 5 267 4 268 1 327 3 93 1 
136 1 1 1 2 1 334 2 103 2 341 1 281 2 343 1 349 1 146 2 234 1 353 4 237 1 57 1 19 1 155 2 356 1 203 1 114 2 299 4 158 1 120 1 301 2 361 1 307 2 123 1 165 1 314 1 259 1 167 1 261 1 168 1 79 1 171 2 172 1 323 2 88 4 267 4 268 1 327 2 
136 1 1 1 2 1 96 1 334 1 103 1 341 1 229 1 343 1 349 1 146 1 15 1 234 1 353 3 237 2 57 2 19 1 155 1 356 1 203 1 114 1 299 3 158 1 302 1 120 1 301 1 25 1 361 2 307 1 123 2 165 1 256 1 314 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 1 175 1 177 1 88 2 267 3 268 1 327 1 
136 1 1 1 2 1 96 1 334 1 103 1 341 1 229 1 343 1 349 1 146 1 15 1 234 1 353 3 237 2 57 2 19 1 155 1 356 1 203 1 114 1 299 3 158 1 302 1 120 1 301 1 25 1 361 2 307 1 123 2 165 1 256 1 314 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 1 175 1 177 1 88 2 267 3 268 1 327 1 
136 1 1 1 2 1 95 1 96 1 334 1 226 1 341 1 46 1 281 1 343 1 14 1 349 1 146 1 15 1 234 1 289 1 353 3 237 2 57 2 19 1 356 1 203 1 114 1 299 3 158 1 120 1 25 1 361 2 307 1 123 2 165 1 256 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 1 175 1 177 1 88 2 267 3 268 1 327 1 
136 1 1 1 2 1 96 1 334 1 103 1 105 1 341 1 229 1 343 1 349 1 146 1 15 1 234 1 353 4 237 2 57 2 19 1 155 1 356 1 203 1 114 2 299 3 158 1 302 1 120 1 301 1 25 1 361 2 307 1 123 2 165 1 256 1 314 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 2 175 1 177 1 88 3 267 3 268 1 327 2 
136 1 1 1 2 1 96 1 334 1 103 1 105 1 341 1 229 1 343 1 349 1 146 1 15 1 234 1 353 4 237 2 57 2 19 1 155 1 356 1 203 1 114 2 299 3 158 1 302 1 120 1 301 1 25 1 361 2 307 1 123 2 165 1 256 1 314 1 368 1 259 1 167 1 261 1 28 1 79 1 171 1 172 1 323 2 175 1 177 1 88 3 267 3 268 1 327 2 
136 1 1 1 2 1 95 2 334 1 341 1 281 2 343 1 14 2 349 1 146 2 234 1 289 1 353 4 237 1 57 1 19 1 356 1 203 1 114 2 299 4 158 1 120 1 361 1 307 2 123 1 165 1 259 1 167 1 261 1 168 1 79 1 171 2 172 1 323 2 88 4 267 4 268 1 327 2 
134 1 295 1 
182 1 40 1 245 1 272 1 332 1 138 4 65 11 250 3 191 1 101 6 208 1 308 1 73 2 12 2 345 1 262 1 213 2 49 2 77 14 50 4 265 1 131 1 322 1 54 2 324 1 33 2 292 2 239 8 89 3 20 1 154 11 329 2 330 2 
137 1 331 1 116 1 138 2 96 1 140 1 8 1 101 1 362 1 361 2 309 1 364 1 123 2 256 1 367 1 12 1 128 1 262 1 345 1 213 1 49 1 77 2 50 1 145 1 131 1 30 1 31 1 324 1 33 1 150 1 237 1 239 1 87 1 294 1 20 1 59 1 92 1 329 1 
182 4 331 1 270 2 137 2 138 6 96 1 140 2 225 1 8 2 101 10 141 2 342 1 12 3 345 1 197 1 49 3 50 7 145 3 54 8 292 3 237 1 293 1 239 10 294 1 20 2 154 7 59 1 245 3 298 1 65 7 118 2 208 2 361 3 362 2 73 2 74 1 123 3 364 2 256 1 210 2 128 2 262 3 213 3 263 2 77 20 78 1 131 1 80 1 30 3 322 4 324 1 31 2 32 1 33 3 87 2 180 1 92 3 329 3 330 2 
223 1 3 2 138 2 96 1 357 1 8 3 163 1 101 1 361 1 362 2 123 1 278 1 10 1 256 1 144 1 12 1 128 2 130 1 262 1 345 1 213 1 49 1 77 2 78 1 145 8 30 7 324 1 220 1 33 1 16 1 237 1 239 1 294 1 87 2 135 1 295 1 59 2 92 8 329 1 
182 1 245 1 138 2 65 1 96 1 208 1 101 2 361 1 73 1 123 1 256 1 12 1 260 1 262 1 213 1 49 1 77 3 50 1 131 1 54 1 109 1 175 1 33 1 292 1 237 1 239 1 154 1 329 1 330 1 
295 1 
295 1 
295 1 
262 1 213 1 77 2 49 1 138 2 50 1 65 1 322 1 54 1 303 1 16 1 33 1 292 1 239 2 154 1 329 1 12 1 330 1 
212 1 262 1 182 1 213 1 245 1 77 2 49 1 138 2 50 1 65 1 54 1 208 1 101 2 16 1 33 1 154 1 329 1 12 1 
182 1 245 1 138 2 65 2 208 1 101 2 73 1 12 1 262 1 213 1 49 1 77 4 50 2 322 1 54 2 292 1 33 1 16 1 239 2 154 2 330 1 329 1 
182 1 245 1 138 2 65 2 208 1 101 2 73 1 12 1 262 1 213 1 77 4 49 1 50 2 322 1 54 2 292 1 33 1 239 2 154 2 330 1 329 1 
137 1 138 2 140 1 8 1 101 1 362 1 361 1 364 1 123 1 210 1 12 1 128 1 262 1 345 1 213 1 77 2 49 1 145 1 30 1 324 1 31 1 33 1 239 1 87 1 20 1 59 1 92 1 329 1 
138 2 140 1 8 1 101 1 362 1 361 1 364 1 26 1 123 1 257 1 12 1 128 1 262 1 345 1 213 1 77 2 49 1 145 1 30 1 324 1 33 1 239 1 87 1 112 1 20 1 59 1 92 1 329 1 
182 1 245 1 138 2 65 2 208 1 101 2 73 1 12 1 262 1 213 1 49 1 77 4 50 2 131 1 322 1 54 2 292 1 33 1 239 2 154 2 330 1 329 1 
182 1 137 1 270 1 245 1 138 2 65 2 140 1 8 1 101 2 208 1 362 1 361 1 73 1 364 1 123 1 210 1 12 1 128 1 130 1 262 1 213 1 77 4 49 1 50 2 145 1 30 1 322 1 54 2 31 1 292 1 33 1 239 2 87 1 154 2 330 1 92 1 329 1 
245 1 138 2 64 1 65 1 96 1 101 1 208 1 361 1 73 1 123 1 256 1 12 1 260 1 262 1 213 1 49 1 77 3 50 1 131 1 322 1 54 1 175 1 33 1 292 1 237 1 239 2 154 1 329 1 330 1 
182 4 138 6 7 1 225 1 101 21 191 3 337 1 279 1 342 1 230 1 12 3 49 3 54 8 292 5 151 1 238 1 239 20 293 1 243 1 245 5 63 1 298 1 250 3 67 1 300 1 360 1 208 4 73 4 74 1 213 3 77 41 265 1 322 4 375 1 219 1 33 3 178 2 89 4 269 4 379 1 180 1 330 4 38 1 
182 4 245 4 298 1 63 1 138 8 67 1 250 3 300 1 225 1 7 1 360 1 191 3 101 18 208 3 337 1 73 4 74 1 279 1 342 1 230 1 12 4 213 4 49 4 77 38 265 1 322 3 54 7 219 1 375 1 151 1 33 4 292 5 238 1 293 1 239 20 89 4 178 2 269 4 379 1 180 1 243 2 38 1 330 4 
182 7 245 8 298 1 63 1 272 2 138 4 67 1 250 4 300 1 225 1 7 1 191 2 101 25 208 7 337 1 73 7 74 1 279 1 342 1 230 1 12 2 213 2 49 2 77 52 265 2 322 7 54 14 219 1 375 1 33 2 292 8 238 1 293 1 239 27 89 4 178 1 269 4 379 1 180 1 243 1 38 1 330 7 
182 3 245 3 138 4 67 1 250 1 7 1 194 1 191 1 101 10 208 3 73 3 230 1 12 2 213 2 49 2 77 19 265 1 322 3 54 6 375 1 151 1 33 2 292 3 238 1 239 9 89 2 178 1 269 2 38 2 330 3 
182 2 245 2 63 1 138 6 67 2 250 2 300 1 7 1 101 12 191 2 208 2 337 1 73 3 279 1 230 1 12 3 213 3 49 3 77 26 322 2 54 4 219 1 375 1 33 3 292 3 238 1 239 14 178 2 89 2 269 4 379 1 243 2 38 1 330 3 
121 1 100 1 184 1 35 1 247 1 164 1 153 1 326 1 99 1 297 1 
161 1 310 1 
100 1 291 1 184 1 139 1 35 1 153 1 326 1 288 1 297 1 
348 1 184 1 299 1 247 1 249 1 334 1 99 1 121 1 100 1 148 1 71 1 35 1 255 1 267 1 326 1 153 1 280 2 297 1 
348 1 184 1 299 1 247 1 249 1 334 1 99 1 121 1 100 1 148 1 71 1 35 1 255 1 267 1 326 1 153 1 280 2 297 1 
348 1 184 1 299 1 247 1 249 1 334 1 99 1 121 1 100 1 148 1 71 1 35 1 255 1 267 1 326 1 153 1 280 2 297 1 
22 1 369 1 370 1 
22 1 369 1 370 1 
359 1 286 1 
359 1 369 1 286 1 
374 1 215 1 
184 1 299 1 249 1 96 2 159 1 119 1 224 1 100 1 161 1 361 2 310 1 123 2 280 1 256 2 284 1 215 1 374 1 148 1 35 1 237 2 17 1 267 1 153 1 326 1 20 1 297 1 60 1 
22 1 370 1 
359 1 369 1 286 1 
3 2 333 1 138 2 8 1 190 1 101 1 362 1 254 1 361 2 123 2 278 1 127 1 12 1 128 1 262 1 345 1 213 1 49 1 77 2 145 2 131 1 30 2 324 1 33 1 237 2 239 1 87 1 135 1 37 1 92 2 329 1 
76 1 128 1 130 1 129 1 13 1 78 1 371 1 145 2 30 2 335 2 325 1 87 1 340 1 58 1 211 1 313 1 202 1 92 2 315 1 
76 1 128 1 129 1 13 1 78 1 371 1 145 1 30 1 335 2 9 1 340 1 87 1 58 1 211 1 313 1 202 1 92 1 
128 1 169 1 13 1 145 1 205 1 30 1 8 1 362 1 87 1 10 1 144 1 59 1 92 1 315 1 
76 1 128 1 129 1 13 1 78 1 371 1 145 1 30 1 335 2 325 1 340 1 87 1 58 1 211 1 313 1 202 1 92 1 315 1 
328 1 
261 1 277 1 134 1 264 1 19 1 79 1 334 1 
261 1 203 1 299 1 79 1 234 1 334 2 301 1 307 1 103 1 88 1 267 1 19 1 155 1 356 1 281 1 314 1 343 1 
0 1 271 2 97 2 43 6 140 3 334 8 277 1 8 10 192 2 228 1 231 2 281 12 343 4 283 2 52 2 145 3 287 2 53 1 234 4 55 1 111 2 292 2 19 9 155 6 356 4 59 1 203 4 245 2 299 5 157 1 118 2 68 6 122 1 208 2 362 3 307 3 73 2 125 1 259 2 261 2 128 4 130 1 264 1 79 8 30 3 266 2 174 2 87 3 88 5 36 2 267 5 221 3 92 3 330 2 
203 2 0 1 245 2 63 1 299 1 250 1 43 5 300 1 334 5 68 5 191 1 208 2 307 1 73 2 279 1 231 1 126 1 281 6 343 2 261 2 283 2 52 1 79 5 234 2 219 1 292 2 378 1 88 1 89 1 267 1 19 8 155 3 356 2 379 1 330 2 
203 1 245 1 299 1 96 1 70 1 25 1 361 1 123 1 229 1 342 1 256 1 231 1 368 1 343 1 283 2 28 1 79 2 234 1 15 1 175 1 292 2 237 1 293 1 57 1 267 1 19 2 356 1 180 1 
203 1 261 1 264 1 79 1 234 1 334 1 277 1 19 1 356 1 343 1 
283 2 245 2 79 5 118 1 43 5 334 5 68 5 208 2 73 2 292 2 19 5 155 5 231 1 281 10 330 2 
261 1 307 1 299 1 88 1 267 1 334 1 
203 2 0 2 299 3 248 1 8 1 193 1 102 1 362 1 307 2 143 1 10 1 228 2 144 1 343 2 128 1 145 4 52 2 79 2 234 2 53 1 30 4 241 1 87 1 88 4 19 2 267 3 356 1 59 2 92 4 
137 1 138 2 96 2 140 1 8 1 101 1 25 1 361 3 362 1 123 3 364 1 256 2 210 1 12 1 128 1 345 1 262 1 213 1 77 1 49 1 145 1 30 1 31 1 175 2 235 1 33 1 237 2 87 1 20 1 59 1 92 1 329 1 
203 1 261 2 0 1 52 1 79 2 234 1 43 2 334 4 68 2 74 1 19 1 155 2 356 1 281 4 343 1 
200 1 184 1 153 1 
200 1 184 1 153 1 
374 1 121 1 377 1 184 1 153 1 
200 1 184 1 153 1 
316 1 184 1 153 1 
316 1 184 1 153 1 
316 1 184 1 153 1 
184 1 153 1 
100 1 297 1 
182 2 245 1 63 1 298 1 138 2 250 1 225 1 101 4 191 1 74 1 342 1 12 1 213 1 77 8 49 1 54 2 292 1 33 1 238 1 239 4 293 1 89 1 180 1 
182 2 39 1 245 1 298 1 63 1 138 4 250 1 225 1 101 5 191 1 73 1 74 1 342 1 12 2 213 2 77 11 49 2 265 1 322 1 54 3 33 2 292 2 238 1 293 1 239 6 89 2 180 1 330 1 
39 1 182 3 245 3 298 1 63 1 138 6 250 1 300 1 225 1 101 10 191 1 208 2 73 2 74 1 279 1 342 1 12 3 213 3 77 19 49 3 322 1 54 4 219 1 33 3 292 3 238 1 293 1 239 9 89 1 379 1 180 1 243 1 330 2 
39 1 182 3 245 2 298 1 63 1 138 6 250 1 300 1 225 1 101 7 191 1 208 1 73 2 74 1 279 1 342 1 12 3 213 3 77 17 49 3 322 2 54 5 219 1 33 3 292 3 238 1 293 1 239 10 89 1 379 1 180 1 243 1 330 2 
182 2 245 1 63 1 298 1 138 2 250 1 225 1 101 4 191 1 74 1 342 1 12 1 213 1 77 8 49 1 54 2 292 1 33 1 238 1 239 4 293 1 89 1 180 1 
182 1 245 2 63 1 138 2 250 1 300 1 101 6 191 1 208 2 73 2 279 1 12 1 213 1 77 12 49 1 322 1 54 2 219 1 33 1 292 2 238 1 239 6 89 1 379 1 330 2 
39 1 182 3 245 2 298 1 63 1 138 8 250 1 300 1 225 1 101 8 191 1 208 1 73 2 74 1 279 1 342 1 12 4 213 4 77 18 49 4 322 2 54 5 219 1 33 4 292 3 238 1 293 1 239 10 89 1 379 1 180 1 243 2 330 2 
182 3 245 2 63 1 138 8 250 1 300 1 101 7 191 1 208 2 73 3 279 1 12 4 213 4 77 16 49 4 322 3 54 6 219 1 33 4 151 1 292 3 238 1 239 9 89 1 379 1 243 2 330 3 
182 3 245 1 77 7 298 1 225 2 322 3 54 6 101 4 292 1 293 3 239 3 342 1 180 3 
182 3 245 2 298 1 63 1 138 8 250 1 300 1 225 1 101 8 191 1 208 1 73 2 74 1 279 1 342 1 12 4 213 4 77 18 49 4 322 1 54 4 219 1 33 4 151 1 292 3 238 1 293 1 239 10 89 1 379 1 180 1 243 2 330 2 
182 2 245 1 213 2 77 8 49 2 298 1 138 4 322 1 225 1 54 3 101 4 292 1 33 2 74 1 239 4 293 1 342 1 243 1 180 1 12 2 
182 2 245 1 298 1 77 6 225 1 54 2 134 1 101 3 292 1 74 1 293 1 239 3 342 1 180 1 
182 1 39 1 245 1 213 1 49 1 77 4 138 2 322 1 54 2 101 2 208 1 33 1 73 1 292 1 239 2 12 1 330 1 
182 1 245 1 77 7 265 1 250 1 322 1 54 2 208 1 191 1 101 4 73 1 292 1 239 3 89 2 330 1 
40 1 182 5 245 3 298 1 272 1 138 4 186 1 250 2 225 1 101 12 208 2 73 2 74 1 342 1 12 2 213 2 77 23 49 2 265 1 322 4 54 9 292 3 33 2 293 2 239 11 89 2 180 2 243 2 330 2 
101 1 77 1 89 1 
77 1 239 1 250 1 
39 1 182 2 213 1 245 1 49 1 77 6 138 2 118 1 322 1 54 3 101 3 208 1 33 1 73 1 292 1 239 3 12 1 330 1 
182 1 245 2 63 1 138 2 250 1 300 1 101 6 191 1 208 2 73 2 279 1 12 1 213 1 77 12 49 1 322 1 54 2 219 1 33 1 292 2 238 1 239 6 89 1 379 1 330 2 
182 1 245 1 77 6 322 1 54 2 101 3 292 1 239 3 293 1 342 1 180 1 
182 1 213 1 77 3 49 1 298 1 138 2 186 1 322 1 225 1 54 2 101 2 33 1 239 1 293 1 180 1 243 1 12 1 
182 3 213 1 245 2 49 1 77 10 138 2 322 2 54 5 70 1 101 5 33 1 292 2 238 1 293 2 239 5 342 1 180 2 12 1 
213 1 49 1 77 2 138 2 322 1 54 1 33 1 292 1 238 1 239 2 12 1 330 1 
182 1 245 1 213 1 49 1 77 4 138 2 322 1 54 2 101 2 208 1 33 1 73 1 292 1 238 1 239 2 12 1 330 1 
182 1 213 3 77 3 49 3 138 6 186 1 322 1 54 2 101 2 151 1 33 3 238 1 293 1 239 1 243 1 180 1 12 3 
39 1 182 7 245 5 298 1 138 10 186 1 250 3 225 1 24 1 101 18 191 1 208 3 73 3 74 1 342 2 12 5 213 5 49 5 77 34 372 1 265 1 322 5 54 12 199 1 151 1 33 5 292 5 238 1 293 3 239 16 89 4 180 3 243 2 330 3 
136 1 361 1 338 1 237 1 123 1 20 1 124 1 
136 1 170 1 108 1 218 1 338 1 361 1 237 1 123 1 11 1 20 1 124 1 366 1 
128 1 8 1 134 1 362 1 87 1 10 1 145 1 144 1 30 1 59 1 92 1 
128 1 145 1 96 1 30 1 140 1 8 1 31 1 362 1 361 2 237 1 364 1 123 2 294 1 87 1 20 1 256 1 59 1 92 1 
128 1 349 1 145 1 96 2 30 1 140 2 266 1 120 1 8 3 31 1 362 2 361 2 237 2 364 1 123 2 36 1 57 1 294 1 87 1 228 1 20 1 256 1 92 1 
96 2 140 2 120 1 8 3 361 2 362 2 123 2 364 1 228 1 257 1 256 1 128 1 349 1 145 2 30 2 266 1 237 2 201 1 87 1 294 1 57 1 36 1 20 1 92 2 
299 1 96 1 334 1 8 1 25 1 361 1 123 1 142 1 228 1 256 1 368 1 261 1 28 1 145 1 15 1 30 1 175 1 237 1 57 1 267 1 221 1 92 1 
261 1 128 1 299 2 145 3 97 1 30 3 334 1 140 1 266 1 8 4 174 1 362 1 201 1 36 1 88 1 87 1 267 2 228 1 221 1 59 1 259 1 92 3 
128 1 163 1 87 1 145 1 30 1 92 1 
128 3 130 1 223 1 3 1 78 1 145 7 319 1 351 1 357 1 30 6 140 1 8 3 163 1 176 1 220 1 362 2 87 2 135 1 125 1 59 2 92 7 
182 2 270 1 137 1 245 1 298 1 138 4 65 1 96 1 140 1 225 1 8 1 101 3 362 1 361 2 74 1 364 1 123 2 141 1 342 1 256 1 210 1 12 2 127 1 128 1 262 2 130 1 213 2 77 6 49 2 50 1 145 1 131 1 30 1 54 2 31 1 292 1 33 2 237 1 239 3 293 1 87 1 294 1 154 1 20 2 180 1 329 2 92 1 
203 2 271 1 299 3 97 1 159 1 334 1 277 1 8 2 192 1 307 1 343 2 259 1 261 1 264 1 145 1 79 1 234 2 53 1 30 1 174 1 111 1 88 2 19 1 267 3 221 1 356 2 59 1 92 1 
128 2 130 1 145 2 30 2 140 1 8 2 174 1 163 1 122 1 362 1 87 1 125 1 92 2 
128 1 130 1 145 4 217 1 30 4 8 1 362 1 201 1 10 1 87 1 144 1 59 1 92 4 
128 2 185 1 145 2 350 1 351 1 80 1 30 2 140 1 8 1 176 1 362 1 87 1 228 1 92 2 
76 1 128 1 335 1 371 1 87 1 145 1 30 1 313 1 59 1 92 1 
128 1 130 1 78 1 145 2 30 2 190 1 8 1 362 1 87 1 135 1 92 2 
128 2 130 1 223 1 145 5 217 1 30 4 8 3 220 1 362 2 10 1 87 2 228 1 135 1 144 1 59 1 92 5 
128 2 130 1 145 5 217 1 30 4 198 1 8 3 220 1 362 2 10 1 87 2 228 1 135 1 144 1 59 1 92 5 
128 1 145 1 96 1 30 1 140 1 8 1 362 1 361 2 237 1 364 1 123 2 294 1 87 1 20 1 256 1 257 1 59 1 92 1 
128 2 145 1 319 1 351 1 30 1 140 1 8 1 176 1 362 1 87 1 228 1 125 1 92 1 
173 1 149 1 361 1 254 1 237 1 333 1 123 1 5 1 37 1 
149 1 216 1 61 1 
227 1 173 1 149 1 20 1 5 1 
261 1 349 1 299 2 66 1 5 2 159 1 216 1 334 1 120 1 173 2 227 2 149 1 57 1 267 2 20 1 165 1 75 1 259 1 61 1 
134 1 376 1 107 1 181 1 
376 1 236 1 339 1 107 1 352 1 181 1 296 1 
62 1 236 1 274 1 
94 1 107 1 352 1 321 1 132 1 376 1 236 3 56 2 339 1 86 1 296 3 181 1 
204 1 376 1 304 1 236 2 339 1 107 1 352 1 181 1 296 2 
76 1 335 1 376 1 236 1 339 1 320 1 352 1 202 1 296 1 321 1 27 1 
376 1 236 1 339 1 107 1 352 1 296 1 321 1 
236 1 339 1 107 2 352 1 181 1 296 1 321 1 
107 1 352 2 98 1 321 1 376 1 162 1 236 2 339 2 152 1 296 2 
214 1 107 1 352 1 321 1 304 2 376 2 236 3 336 1 85 1 339 1 181 1 296 3 27 1 
76 1 371 1 232 1 107 1 352 1 321 1 335 2 376 1 304 1 236 2 339 1 211 1 181 1 296 2 202 1 
204 1 106 1 107 1 352 2 321 1 304 2 376 2 236 4 336 1 339 2 181 1 296 4 27 1 
376 1 236 1 339 1 107 1 352 1 181 1 296 1 321 1 
21 1 107 2 352 1 132 1 304 2 376 3 236 4 336 1 56 1 86 1 339 1 181 2 296 4 27 1 
183 1 107 1 352 1 321 1 376 1 147 1 304 1 236 2 339 1 354 1 296 2 181 1 
244 1 107 1 352 1 132 1 321 1 376 1 236 3 56 2 339 1 86 2 296 3 181 1 
69 1 376 2 195 1 82 2 
236 1 339 1 285 1 352 1 296 1 321 1 
376 1 304 1 214 1 236 2 339 1 107 1 352 1 181 1 296 2 321 1 
113 1 
376 1 236 1 339 1 107 1 352 1 181 1 296 1 321 1 
214 1 107 1 352 1 321 1 304 1 376 1 236 3 56 1 339 1 296 3 181 1 
21 1 376 1 336 1 27 1 
376 1 107 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 1 34 2 127 1 177 2 97 1 63 2 66 1 345 1 105 2 346 1 195 6 276 1 11 1 73 2 46 1 144 1 282 4 228 1 230 1 207 2 185 3 255 1 114 1 22 1 211 2 118 1 80 9 151 9 
34 2 318 1 127 1 177 2 97 1 63 2 66 1 345 1 105 2 346 1 195 6 276 1 11 1 73 2 46 1 144 1 282 4 228 1 230 1 207 2 185 3 255 1 114 1 22 1 211 2 118 1 80 9 151 9 
34 2 318 1 127 1 177 2 97 1 63 2 66 1 345 1 105 2 346 1 195 7 276 1 11 1 73 2 46 1 144 1 282 5 228 1 230 1 207 2 185 4 255 1 114 1 22 1 211 2 118 1 80 10 151 10 
34 2 318 1 177 2 97 1 63 2 66 1 345 1 105 1 346 1 195 4 276 1 11 1 73 2 46 1 144 1 282 3 228 1 230 1 207 2 185 2 255 1 114 1 22 1 211 2 118 1 80 7 151 7 
318 1 73 1 46 1 127 1 144 1 177 1 282 2 63 1 66 1 185 1 207 1 114 1 105 2 118 1 211 1 195 3 151 4 80 4 
280 1 174 1 34 1 73 1 83 1 46 1 144 1 63 1 66 1 207 1 114 1 22 1 211 1 11 1 151 2 80 2 
34 1 114 1 46 1 144 1 282 1 63 2 195 1 228 1 66 1 185 1 80 3 151 3 207 2 
318 1 34 1 73 1 46 1 127 1 177 1 97 1 144 1 282 4 251 1 63 2 228 1 66 1 207 2 185 3 217 1 114 1 105 2 211 1 118 1 346 1 195 7 151 9 80 9 
318 1 34 1 73 1 46 1 127 1 177 1 97 1 144 1 282 4 251 1 63 2 228 1 66 1 207 2 185 3 217 1 114 1 105 2 211 1 118 1 346 1 195 7 151 9 80 9 
313 1 179 1 33 1 
242 1 33 1 302 2 
14 2 38 2 354 1 20 1 51 2 21 2 344 2 332 2 
2 1 129 2 267 1 291 2 215 1 344 2 367 1 157 2 324 1 68 2 38 3 270 2 295 1 41 1 137 1 107 1 88 1 223 1 141 1 142 2 14 3 13 1 374 1 89 1 143 1 354 1 17 1 20 1 19 1 51 3 357 1 21 3 229 2 332 2 167 1 116 1 314 1 119 1 120 2 31 1 150 1 
14 1 38 1 354 1 202 1 17 1 51 1 245 1 21 1 344 1 332 1 
14 1 164 1 175 1 328 1 143 1 191 1 17 1 21 1 269 1 38 1 167 1 313 1 122 1 33 1 
14 1 175 2 143 1 191 1 17 1 51 1 21 1 332 1 344 1 269 1 38 1 167 1 313 1 122 2 33 1 
175 1 77 1 256 1 122 1 182 1 
175 2 77 1 313 1 256 1 362 1 122 2 132 1 33 1 
175 1 77 1 122 1 
14 1 175 1 202 1 354 1 17 1 51 1 245 1 21 1 332 1 344 1 38 1 256 1 122 1 71 1 
33 1 
175 2 77 1 313 1 349 1 256 1 362 1 122 2 33 1 
175 5 15 1 126 1 5 2 204 2 330 1 358 1 325 1 77 2 313 1 27 1 29 1 256 2 348 1 362 1 221 1 122 5 33 1 81 2 
179 1 20 1 
14 2 341 1 130 1 51 1 20 2 21 2 332 1 344 1 38 2 
161 1 94 1 261 1 
14 1 141 1 13 1 142 2 89 1 143 1 129 1 111 1 17 1 20 1 51 1 21 1 157 2 38 1 68 2 270 1 295 1 167 1 119 1 120 1 31 1 150 1 
129 1 344 1 157 2 295 1 270 1 38 2 68 2 139 1 14 2 13 1 142 2 141 1 89 1 143 1 17 1 51 2 21 2 167 1 94 1 119 1 120 1 188 1 31 1 150 1 
14 3 38 3 20 1 51 3 21 3 332 1 139 1 344 3 
14 1 38 1 17 1 51 1 245 1 21 1 344 1 
14 1 38 1 341 1 130 1 17 1 51 1 21 1 344 1 332 1 
175 1 129 1 191 1 130 1 291 1 215 1 344 3 367 1 157 2 269 1 68 2 295 1 38 4 270 1 41 1 137 1 88 1 223 1 139 1 141 1 142 2 13 1 14 4 89 1 373 1 374 1 143 2 354 1 17 2 20 1 19 1 51 4 21 4 229 2 332 2 232 1 167 2 116 1 314 1 119 1 31 1 188 1 120 1 122 1 150 1 
14 2 38 2 328 1 20 1 51 1 260 1 21 2 344 1 139 1 
14 3 175 1 373 1 143 1 191 1 130 1 17 1 51 3 101 1 21 3 332 1 344 3 269 1 38 3 167 1 188 1 122 1 33 1 139 2 
14 2 130 1 51 2 21 2 332 1 344 2 38 2 161 1 94 1 139 1 
14 1 141 1 13 1 142 2 89 1 143 1 129 1 17 1 20 1 51 1 21 1 157 2 38 1 270 1 295 1 68 2 167 1 119 1 120 1 31 1 150 1 
14 1 141 1 13 1 142 2 89 1 143 1 129 1 17 1 20 1 51 1 21 1 75 1 157 2 38 1 270 1 68 2 167 1 347 1 119 1 120 1 31 1 
176 1 266 1 291 4 367 2 324 2 67 1 41 1 161 2 137 1 109 1 351 1 223 1 277 1 284 1 19 1 229 2 309 1 116 1 94 2 314 1 336 1 57 1 259 1 261 2 
14 1 38 1 371 1 143 1 17 1 51 1 21 1 344 1 
14 5 328 1 130 1 51 4 20 1 21 5 344 4 332 1 38 5 237 1 188 1 260 1 139 2 173 1 
14 2 38 2 371 1 17 1 51 2 245 1 21 2 344 2 
287 1 172 1 
287 1 172 1 
152 1 264 1 
152 1 264 1 
152 1 264 1 
7 1 287 1 172 1 
7 1 287 1 172 1 
287 1 248 1 172 1 
241 1 152 1 264 1 287 2 172 2 216 1 
7 1 287 1 172 1 
287 1 170 1 172 1 
287 1 170 1 172 1 
287 1 170 1 172 1 
175 2 340 1 289 1 35 2 342 2 244 1 216 1 193 2 40 2 178 1 287 2 54 2 108 1 87 1 122 2 59 3 172 2 33 1 372 1 
175 1 98 1 342 1 344 2 38 2 40 1 193 1 248 1 372 1 278 1 14 2 200 1 224 1 20 1 51 2 21 2 376 1 334 1 361 1 287 1 54 1 59 1 122 1 172 1 
73 1 177 1 211 1 
73 1 83 1 211 1 
279 1 339 1 160 1 83 1 177 2 211 3 
279 1 135 1 339 1 83 1 177 1 211 2 
279 1 339 2 83 1 177 1 211 2 
190 1 175 5 242 1 126 1 5 1 98 1 266 1 6 2 67 1 325 3 10 1 221 2 327 1 302 3 200 1 353 1 224 1 145 2 284 1 204 1 208 2 77 1 285 1 235 1 26 1 313 1 336 1 256 4 362 1 122 5 33 2 81 1 
190 1 175 7 288 1 242 1 126 1 98 2 5 2 266 1 156 1 133 1 294 1 67 1 159 3 325 3 221 2 327 1 302 3 182 3 15 1 353 1 145 2 284 1 204 2 208 2 77 4 235 1 313 1 336 1 256 5 362 1 122 7 33 3 81 2 
190 1 175 3 242 2 5 1 98 1 266 1 6 1 67 1 325 3 221 2 302 4 15 1 353 1 145 2 284 1 204 1 208 2 285 1 235 1 313 1 26 1 256 2 336 1 122 3 33 3 81 1 
15 1 175 1 5 1 204 1 156 1 285 1 26 1 122 1 81 1 
68 1 296 1 179 1 
68 1 293 1 
186 1 
68 1 157 1 
296 2 68 3 142 1 12 1 379 1 157 1 
68 1 142 1 157 1 
68 1 96 1 
47 1 321 1 266 1 291 7 367 3 67 1 324 4 335 1 104 1 8 1 236 1 286 1 30 2 259 2 109 3 301 1 72 1 
47 1 321 1 266 1 291 7 367 3 67 1 324 4 335 1 104 1 8 1 236 1 286 1 30 2 259 2 109 3 301 1 72 1 
47 1 321 1 266 1 306 1 291 7 367 3 67 1 324 4 335 1 104 1 8 1 236 1 286 1 30 2 259 2 109 3 301 1 72 1 
321 2 266 4 291 31 367 15 324 16 67 4 8 1 104 5 41 1 137 1 180 1 301 1 109 10 223 1 72 1 198 1 47 2 353 3 284 3 229 2 76 4 335 2 116 1 24 1 146 1 28 1 236 2 286 1 30 3 336 3 56 1 363 1 259 5 380 3 
321 1 266 1 291 9 367 4 67 1 324 5 39 1 104 1 41 2 137 2 43 1 109 4 301 1 223 2 72 1 47 1 229 4 335 1 116 2 24 1 236 1 286 1 30 2 259 3 
34 1 83 1 177 1 129 1 63 1 155 1 243 1 66 1 270 1 271 1 160 1 195 1 300 1 13 1 73 1 89 1 46 1 144 1 207 1 165 1 114 1 233 1 53 1 148 1 211 2 120 1 121 1 60 1 80 2 151 2 
34 1 83 1 177 1 129 1 63 1 155 1 243 1 66 1 270 1 271 1 160 1 195 2 300 1 13 1 73 1 89 1 46 1 49 1 207 1 114 1 233 1 53 1 148 1 211 2 187 1 120 1 60 1 80 3 151 3 61 1 
34 1 83 1 177 1 129 1 155 1 243 1 66 1 270 1 271 1 160 1 195 2 13 1 89 1 73 1 46 1 114 1 233 1 148 1 211 2 187 1 120 1 60 1 80 2 151 2 61 1 
13 1 34 2 89 1 124 1 303 1 129 1 49 1 63 1 155 2 92 1 207 1 157 1 68 1 297 1 270 1 271 2 119 1 120 1 44 1 32 1 60 2 151 1 80 1 
34 1 83 1 177 1 129 1 63 1 155 1 243 1 270 1 271 1 160 1 300 1 13 1 73 1 89 1 144 1 207 1 165 1 233 1 53 1 148 1 211 2 187 1 120 1 60 1 80 1 151 1 
95 1 
242 2 153 1 5 1 191 1 65 2 157 1 297 1 68 1 302 2 13 1 14 1 352 2 164 1 16 4 203 1 17 1 356 2 204 1 21 1 167 1 115 1 77 6 313 1 119 2 362 3 120 2 122 5 33 2 81 1 82 1 175 5 124 1 126 1 129 2 131 1 218 1 269 1 270 2 38 1 370 2 134 1 272 2 325 2 136 1 273 1 221 2 140 1 89 1 281 1 328 1 143 1 52 2 184 1 235 1 338 2 
14 1 16 2 175 3 164 1 153 1 143 1 328 1 191 1 17 1 65 1 21 1 184 1 269 1 38 1 167 1 115 1 77 2 273 1 349 1 362 1 122 3 82 1 
14 1 16 3 175 3 164 1 153 1 143 1 328 1 191 1 17 1 21 1 52 1 184 1 269 1 38 1 167 1 115 1 77 1 313 1 273 1 349 1 362 1 122 3 33 1 82 1 
175 3 153 1 191 1 65 1 269 1 38 1 273 1 349 1 14 1 164 1 16 3 352 1 328 1 143 1 17 1 21 1 184 1 52 1 167 1 115 1 77 2 313 1 362 1 122 3 33 1 82 1 
175 5 84 1 242 2 126 1 153 1 5 1 290 1 191 1 131 1 65 4 269 1 38 1 370 2 272 2 325 1 273 1 349 1 221 1 14 1 183 1 164 1 16 6 352 4 281 1 328 1 143 1 17 1 356 2 204 1 227 1 21 1 52 4 184 1 167 1 115 1 77 7 313 5 315 1 362 3 122 5 338 2 33 5 81 1 82 1 
153 1 242 2 5 1 191 1 65 2 302 2 14 1 16 4 164 1 352 2 17 1 204 1 356 2 21 1 167 1 115 1 77 4 313 1 362 2 122 4 33 2 81 1 82 1 175 4 126 1 131 1 269 1 38 1 370 2 325 1 272 2 273 1 221 1 140 1 281 1 143 1 328 1 184 1 52 2 338 2 
175 4 84 1 242 2 153 1 126 1 5 1 191 1 131 1 65 2 269 1 38 1 370 2 272 2 325 1 273 1 221 1 14 1 352 2 164 1 16 4 183 1 281 1 328 1 143 1 17 1 356 2 204 1 21 1 52 2 184 1 167 1 115 1 77 4 313 1 315 1 362 2 122 4 338 2 33 1 81 1 82 1 
175 4 84 1 242 2 153 1 126 1 5 1 191 1 131 1 65 2 269 1 38 1 370 2 272 2 325 1 273 1 221 1 14 1 352 2 164 1 16 4 183 1 281 1 328 1 143 1 17 1 356 2 204 1 21 1 52 2 184 1 167 1 115 1 77 4 313 1 315 1 362 2 122 4 338 2 33 1 81 1 82 1 
175 4 84 1 365 2 153 1 126 1 5 1 191 1 131 1 65 2 269 1 38 1 272 2 325 1 273 1 274 1 221 1 302 2 14 1 352 2 199 2 164 1 16 4 328 1 143 1 17 1 204 1 21 1 52 2 184 1 206 1 360 1 167 1 115 1 77 4 313 1 362 2 122 4 338 2 33 1 81 1 82 1 
175 4 84 1 242 2 126 1 153 1 5 1 191 1 290 1 131 1 65 3 269 1 38 1 370 2 272 2 325 1 273 1 221 1 14 1 164 1 16 5 352 3 183 1 281 1 328 1 143 1 17 1 356 2 204 1 21 1 184 1 52 3 167 1 115 1 77 5 313 1 315 1 362 2 122 4 338 2 33 1 81 1 82 1 
175 4 84 1 242 2 126 1 153 1 5 1 191 1 290 1 131 1 65 3 269 1 38 1 370 2 272 2 325 1 273 1 221 1 14 1 164 1 16 5 352 3 183 1 281 1 328 1 143 1 17 1 356 2 204 1 21 1 184 1 52 3 167 1 115 1 77 5 313 1 315 1 362 2 122 4 338 2 33 1 81 1 82 1 
153 1 5 1 191 1 65 2 302 2 14 1 16 4 164 1 199 2 352 2 17 1 204 1 21 1 360 1 167 1 115 1 77 4 313 1 362 2 122 4 33 1 81 1 82 1 175 4 126 1 365 2 131 1 269 1 38 1 325 1 272 2 273 1 221 1 140 1 143 1 328 1 184 1 52 2 338 2 
321 1 266 1 291 6 367 3 67 1 324 3 161 1 41 1 137 1 179 1 301 1 109 2 223 1 277 1 72 1 47 1 19 1 20 2 229 2 116 1 94 1 286 1 314 1 30 1 259 2 261 1 
2 1 266 1 291 14 215 1 322 1 367 6 324 8 67 2 104 1 86 1 41 2 161 4 137 2 180 1 109 2 223 2 353 2 225 1 284 1 252 1 20 1 307 1 19 1 229 4 76 3 116 2 94 11 28 1 314 2 336 2 259 1 261 11 380 3 
2 1 291 2 344 1 157 2 295 1 68 2 161 1 14 2 13 1 111 1 17 1 19 1 20 1 21 2 167 1 116 1 314 1 119 1 120 1 31 1 129 1 215 1 322 1 367 1 219 1 324 1 38 2 270 1 41 1 137 1 139 1 223 1 142 2 141 1 89 1 143 1 51 2 229 2 147 1 55 1 188 1 150 1 
2 1 291 20 344 1 157 4 295 2 68 4 67 3 247 1 104 4 161 7 106 2 301 1 109 8 72 1 14 3 13 2 353 2 17 2 20 2 19 3 112 1 21 3 167 2 116 3 30 1 314 3 119 1 120 3 31 2 259 4 261 7 321 1 129 3 266 3 268 2 215 1 322 1 367 10 323 2 324 10 270 3 38 3 41 3 137 3 220 2 88 2 138 1 139 1 223 3 142 4 141 2 89 2 47 1 143 2 284 2 51 3 229 6 94 7 286 1 187 1 336 2 188 1 150 2 
364 1 2 1 124 1 129 8 267 2 291 2 344 1 215 1 367 1 157 2 38 1 68 3 270 7 324 1 297 1 326 1 41 2 137 2 70 1 277 1 139 1 223 2 14 1 13 2 89 2 51 1 19 2 21 1 229 4 359 1 116 2 117 1 187 1 314 2 119 2 337 1 120 8 121 1 58 1 
266 1 130 1 291 3 344 1 322 1 367 2 38 1 67 1 324 1 161 1 41 1 137 1 109 1 223 1 14 1 353 1 284 1 18 1 19 1 51 1 21 1 229 2 332 1 116 1 94 1 314 1 336 1 259 1 261 1 
176 1 291 2 19 1 229 2 67 1 324 2 104 1 116 1 161 1 41 1 94 1 137 1 314 1 336 1 109 1 261 1 277 1 223 1 
284 1 266 1 291 2 19 1 229 2 367 2 116 1 161 1 41 1 94 1 137 1 314 1 57 1 259 1 109 1 261 1 277 1 223 1 
266 1 291 4 367 2 324 2 67 1 104 1 41 1 161 2 137 1 109 2 223 1 277 1 353 1 284 1 19 1 229 2 116 1 94 2 336 1 314 1 259 1 261 2 
176 1 291 2 19 1 229 2 67 1 324 2 104 1 116 1 161 1 41 1 94 1 137 1 314 1 336 1 337 1 109 1 261 1 223 1 
284 1 266 1 291 2 19 1 229 2 367 2 116 1 161 1 41 1 94 1 137 1 314 1 337 1 57 1 259 1 109 1 261 1 223 1 
266 1 291 4 367 2 324 2 67 1 104 1 41 1 161 2 137 1 109 2 223 1 353 1 284 1 19 1 229 2 116 1 94 2 336 1 314 1 337 1 259 1 261 2 
266 1 291 4 367 2 324 2 67 1 104 1 41 1 161 2 137 1 109 2 223 1 353 1 284 1 19 1 229 2 116 1 94 2 336 1 314 1 259 1 261 2 
2 1 129 1 291 2 215 1 367 1 157 2 324 1 295 1 270 1 68 2 38 1 41 1 137 1 88 1 223 1 142 2 13 1 141 1 14 1 89 1 143 1 17 1 20 1 51 1 19 1 21 1 229 2 167 1 116 1 314 1 119 1 31 1 120 1 150 1 
2 1 129 1 291 2 215 1 367 1 157 2 324 1 270 1 68 2 38 1 41 1 137 1 347 1 223 1 142 2 13 1 141 1 14 1 89 1 143 1 17 1 20 1 51 1 19 1 21 1 229 2 75 1 167 1 116 1 314 1 257 1 119 1 31 1 120 1 
266 1 291 4 322 1 367 2 324 2 67 1 104 1 41 1 161 2 137 1 109 2 223 1 353 1 284 1 19 1 229 2 116 1 94 2 336 1 314 1 259 1 261 2 
129 1 266 1 291 4 367 2 323 1 157 2 324 2 67 1 295 1 270 1 68 2 38 1 104 1 161 2 41 1 137 1 88 1 109 2 223 1 142 2 13 1 141 1 14 1 89 1 353 1 143 1 284 1 17 1 51 1 19 1 21 1 229 2 167 1 116 1 94 2 336 1 314 1 31 1 120 1 121 1 259 1 261 2 150 1 
266 1 130 1 291 3 344 1 322 1 102 1 367 1 38 1 67 1 324 2 104 1 41 1 161 1 137 1 109 1 223 1 14 1 353 1 284 1 19 1 51 1 21 1 229 2 332 1 116 1 94 1 314 1 336 1 261 1 
321 1 99 1 266 5 100 1 291 41 214 1 368 1 367 21 324 20 67 5 39 1 104 4 41 3 137 3 180 3 249 1 301 1 163 1 109 8 223 3 45 1 72 1 47 1 201 1 353 4 284 4 253 1 226 4 229 6 76 4 254 2 234 1 24 1 116 3 28 1 286 1 30 1 336 4 259 4 79 1 238 1 380 3 189 1 
321 1 99 1 266 4 100 1 291 38 214 1 368 1 367 18 324 20 67 5 39 1 104 3 41 4 137 4 180 3 249 1 301 1 163 1 109 7 223 4 45 1 72 1 47 1 201 1 353 4 284 3 253 1 226 4 229 8 76 4 254 2 234 1 24 2 116 4 28 1 286 1 30 1 336 4 259 4 79 1 238 1 380 3 189 1 
321 1 99 1 266 8 100 1 291 52 214 1 368 1 367 25 324 27 67 8 39 1 104 7 41 2 137 2 180 2 301 1 163 1 109 14 223 2 45 1 72 1 47 1 201 1 353 7 284 7 253 1 226 4 252 2 229 4 76 4 254 1 24 1 116 2 28 2 286 1 30 1 336 7 259 7 79 1 238 1 380 4 189 1 
99 1 266 3 291 19 368 1 367 10 324 9 67 3 39 1 104 3 41 2 137 2 180 1 163 1 109 6 223 2 45 1 353 3 284 3 226 2 229 4 76 2 254 1 234 1 116 2 28 1 336 3 316 1 259 3 380 1 189 2 
99 1 266 2 100 1 291 26 214 1 367 12 368 2 324 14 67 3 39 1 104 2 41 3 137 3 180 2 109 4 163 1 223 3 45 1 201 1 353 3 284 2 226 4 253 1 229 6 254 2 76 2 24 2 116 3 336 3 259 2 79 1 238 1 380 2 189 1 
340 1 40 1 193 1 287 1 342 1 54 1 87 1 172 1 216 1 333 1 
334 1 248 1 
40 1 193 1 9 1 312 1 287 1 342 1 54 1 205 1 172 1 
175 1 340 1 289 1 35 1 342 1 244 1 216 1 193 1 40 1 287 1 54 1 108 1 87 1 122 1 59 2 172 1 33 1 372 1 
175 1 340 1 289 1 35 1 342 1 244 1 216 1 193 1 40 1 287 1 54 1 108 1 87 1 122 1 59 2 172 1 33 1 372 1 
175 1 340 1 289 1 35 1 342 1 244 1 216 1 193 1 40 1 287 1 54 1 108 1 87 1 122 1 59 2 172 1 33 1 372 1 
241 1 7 1 4 1 
241 1 7 1 4 1 
265 1 170 1 
241 1 265 1 170 1 
361 1 278 1 
175 1 35 1 98 1 342 1 344 2 38 2 40 1 193 1 108 1 248 1 278 1 14 2 200 1 90 1 224 1 20 1 51 2 21 2 376 1 334 1 361 1 287 1 256 1 54 1 122 1 59 1 172 1 
7 1 4 1 
241 1 265 1 170 1 
2 1 129 2 267 2 291 2 192 1 322 1 215 1 157 1 367 1 68 1 38 2 324 1 270 2 41 1 137 1 70 1 162 1 223 1 13 1 14 2 89 1 48 1 283 1 19 1 21 2 229 2 116 1 117 1 314 1 120 2 378 1 
13 1 0 1 73 1 89 1 83 1 177 1 129 2 308 1 270 2 233 1 160 1 23 1 53 1 148 1 211 2 187 1 120 2 121 1 60 1 
13 1 73 1 89 1 83 1 177 1 129 1 308 1 270 1 233 1 160 1 53 1 78 1 148 1 211 2 187 1 120 1 60 1 
13 1 0 1 89 1 124 1 129 1 157 1 68 1 270 1 297 1 169 1 119 1 120 1 44 1 60 1 
0 1 13 1 73 1 89 1 83 1 177 1 129 1 308 1 270 1 233 1 160 1 23 1 53 1 148 1 211 2 187 1 120 1 60 1 
25 1 
325 1 313 1 29 1 179 1 221 1 330 1 33 1 
175 1 242 1 126 1 5 1 370 1 325 1 221 1 302 1 281 1 356 1 204 1 77 1 313 1 362 1 122 1 33 2 81 1 
62 1 242 6 5 4 343 1 293 3 157 3 158 2 68 10 296 2 67 2 106 2 299 2 350 1 302 12 13 3 12 1 74 2 353 2 355 2 204 4 208 6 77 5 313 2 29 1 119 1 120 3 362 3 121 1 122 5 33 8 81 4 263 2 175 5 320 1 126 4 129 3 266 2 218 1 37 2 269 2 270 3 325 9 221 8 275 2 142 3 141 2 89 4 145 6 284 2 330 1 235 2 336 2 149 1 96 2 
175 1 126 2 242 3 5 2 36 1 266 2 100 1 214 1 218 1 67 2 325 8 221 5 180 1 275 2 302 6 74 1 201 1 353 2 145 5 284 2 253 1 204 2 208 5 76 1 310 1 235 1 77 1 313 2 336 2 362 1 122 1 238 1 33 5 380 1 81 2 
175 1 126 1 321 1 5 1 266 1 245 1 344 1 67 2 38 1 325 2 221 2 275 2 71 1 72 1 14 1 74 1 47 1 250 1 202 1 354 1 17 1 204 1 51 1 21 1 332 1 315 1 122 1 81 1 
126 1 5 1 204 1 330 1 325 1 313 1 29 1 221 1 33 1 81 1 
74 1 353 2 242 5 145 5 284 2 266 2 208 5 67 2 325 5 106 1 336 2 221 5 275 2 33 5 302 10 
175 1 77 1 313 1 362 1 122 1 33 1 
175 3 320 1 62 2 126 1 124 1 5 2 129 4 213 1 64 1 157 1 218 2 68 1 270 4 297 1 134 1 325 2 221 2 13 1 15 1 89 1 203 1 204 2 235 2 77 4 119 2 120 4 362 2 122 3 81 2 
129 1 291 1 215 1 344 2 367 1 157 2 270 1 38 3 295 1 68 2 41 1 137 1 88 1 223 1 141 1 14 3 13 1 142 2 374 1 89 1 143 1 354 1 17 1 20 1 19 1 51 3 21 3 229 2 332 2 167 1 116 1 314 1 119 1 120 1 31 1 150 1 
242 2 126 1 5 1 145 2 204 1 208 2 218 1 325 1 235 1 313 2 30 1 221 2 33 4 302 4 81 1 
40 1 42 1 342 1 
40 1 42 1 342 1 
40 1 342 1 87 1 222 1 278 1 
40 1 42 1 342 1 
40 1 342 1 196 1 
40 1 342 1 196 1 
40 1 342 1 196 1 
40 1 342 1 
287 1 172 1 
321 1 266 1 291 8 367 4 67 1 324 4 39 1 41 1 137 1 180 1 301 1 109 2 223 1 72 1 47 1 253 1 229 2 76 1 116 1 286 1 30 1 259 2 380 1 
321 1 266 1 291 11 292 1 367 5 324 6 67 2 39 1 104 1 41 2 137 2 180 1 301 1 109 3 223 2 72 1 47 1 353 1 253 1 229 4 76 2 116 2 28 1 286 1 30 1 336 1 259 2 380 1 
321 1 266 3 292 1 291 19 100 1 214 1 367 10 324 9 67 3 39 1 104 1 41 3 137 3 180 1 301 1 109 4 223 3 72 1 47 1 201 1 353 2 284 2 253 1 229 6 76 1 116 3 24 1 286 1 30 1 336 2 259 3 238 1 380 1 
321 1 266 2 292 1 291 17 100 1 214 1 367 7 324 10 67 3 39 1 104 2 41 3 137 3 180 1 301 1 109 5 223 3 72 1 47 1 201 1 353 2 284 1 253 1 229 6 76 1 24 1 116 3 286 1 30 1 336 2 259 3 238 1 380 1 
321 1 266 1 291 8 367 4 67 1 324 4 39 1 41 1 137 1 180 1 301 1 109 2 223 1 72 1 47 1 253 1 229 2 76 1 116 1 286 1 30 1 259 2 380 1 
266 2 291 12 100 1 214 1 367 6 324 6 67 2 39 1 104 1 41 1 137 1 180 1 109 2 223 1 201 1 353 2 284 2 253 1 229 2 76 1 116 1 336 2 259 1 238 1 380 1 
321 1 266 2 100 1 291 18 292 1 214 1 367 8 324 10 67 3 39 1 104 2 41 4 137 4 180 1 301 1 109 5 223 4 72 1 47 1 201 1 353 2 284 1 253 1 229 8 76 1 116 4 24 2 286 1 30 1 336 2 259 3 238 1 380 1 
266 2 100 1 291 16 214 1 367 7 324 9 67 3 39 1 104 3 41 4 137 4 180 1 109 6 223 4 201 1 353 3 284 2 253 1 229 8 76 1 116 4 234 1 24 2 336 3 259 3 238 1 380 1 
47 3 321 3 266 1 291 7 367 4 67 1 324 3 104 3 286 2 259 3 301 1 109 6 72 1 
321 1 266 2 100 1 291 18 214 1 367 8 324 10 67 3 39 1 104 1 41 4 137 4 180 1 301 1 109 4 223 4 72 1 47 1 201 1 353 2 284 1 253 1 229 8 76 1 116 4 234 1 24 2 286 1 30 1 336 2 259 3 238 1 380 1 
47 1 321 1 266 1 291 8 229 4 367 4 67 1 324 4 104 1 116 2 24 1 41 2 137 2 286 1 30 1 259 2 109 3 301 1 223 2 72 1 
47 1 321 1 266 1 291 6 367 3 67 1 324 3 286 1 30 1 179 1 259 2 301 1 109 2 72 1 
353 1 266 1 284 1 292 1 291 4 229 2 367 2 67 1 324 2 116 1 104 1 41 1 137 1 336 1 259 1 109 2 223 1 
353 1 266 1 284 1 291 7 76 2 367 4 324 3 67 1 104 1 28 1 336 1 259 1 180 1 109 2 380 1 
321 2 266 3 291 23 367 12 67 3 324 11 104 4 69 1 86 1 41 2 137 2 301 1 109 9 223 2 72 1 47 2 353 2 284 2 252 1 229 4 76 2 24 2 116 2 28 1 286 1 30 1 336 2 259 5 380 2 
291 1 367 1 76 1 
324 1 291 1 380 1 
353 1 284 1 266 1 292 1 291 6 229 2 367 3 67 1 324 3 116 1 104 1 41 1 137 1 106 1 336 1 259 2 109 3 223 1 
266 2 291 12 100 1 214 1 367 6 324 6 67 2 39 1 104 1 41 1 137 1 180 1 109 2 223 1 201 1 353 2 284 2 253 1 229 2 76 1 116 1 336 2 259 1 238 1 380 1 
47 1 321 1 266 1 291 6 367 3 67 1 324 3 104 1 259 1 109 2 72 1 
47 1 321 1 291 3 229 2 367 2 324 1 104 1 69 1 24 1 116 1 41 1 137 1 286 1 259 1 109 2 301 1 223 1 
250 1 47 2 321 2 266 2 291 10 229 2 367 5 324 5 67 2 39 1 116 1 104 2 41 1 137 1 259 3 109 5 223 1 72 1 
291 2 229 2 67 1 324 2 39 1 116 1 104 1 41 1 137 1 336 1 109 1 223 1 
353 1 266 1 284 1 291 4 229 2 367 2 67 1 324 2 39 1 116 1 104 1 41 1 137 1 336 1 259 1 109 2 223 1 
47 1 321 1 291 3 229 6 367 2 324 1 39 1 24 1 69 1 234 1 116 3 104 1 41 3 137 3 259 1 109 2 223 3 
321 3 266 5 292 1 291 34 367 18 324 16 67 5 39 1 69 1 104 5 41 5 137 5 180 1 301 1 109 12 223 5 72 2 198 1 47 3 353 3 284 3 229 10 76 4 24 2 234 1 116 5 146 1 28 1 286 1 30 1 336 3 56 1 259 7 380 3 
14 1 38 1 328 1 329 1 20 1 21 1 260 1 
123 1 239 1 14 1 328 1 91 1 329 1 20 1 21 1 38 1 209 1 181 1 260 1 
13 1 68 1 297 1 270 1 89 1 124 1 129 1 179 1 119 1 120 1 157 1 
141 1 142 2 14 2 13 1 89 1 143 1 129 1 17 1 20 1 51 2 21 2 344 1 157 2 68 2 38 2 270 1 167 1 119 1 31 1 120 1 139 1 150 1 
62 1 129 1 344 1 157 1 270 1 38 1 68 1 139 1 13 1 14 2 142 1 89 1 17 1 51 1 20 1 21 2 113 1 120 1 31 1 150 1 
62 1 129 1 344 1 157 1 270 1 38 1 68 1 347 1 139 1 13 1 14 2 142 1 89 1 17 1 51 1 20 1 21 2 113 1 120 1 31 1 
142 1 141 1 240 1 13 1 319 1 89 1 175 2 62 1 129 3 293 1 269 1 157 1 270 3 68 4 296 1 93 1 77 1 313 1 119 1 120 3 122 2 33 1 96 1 
142 1 141 1 13 1 89 1 175 2 62 1 129 3 293 1 269 1 157 1 270 3 68 4 296 1 93 1 77 1 313 1 119 1 120 3 122 2 33 1 96 1 263 1 
13 1 270 1 89 1 326 1 129 1 120 1 
12 1 142 1 13 2 364 1 89 3 128 1 129 7 267 1 359 1 157 2 270 6 68 3 326 1 187 1 70 1 119 2 120 7 258 1 121 1 171 1 58 1 
291 6 344 1 157 2 295 1 68 2 67 1 161 1 162 1 301 1 109 2 72 1 14 2 13 1 17 1 20 2 19 2 21 2 167 1 116 2 30 1 314 2 120 1 31 1 121 1 259 2 261 1 321 1 129 1 266 1 322 1 323 1 367 3 270 1 38 2 324 3 41 2 137 2 220 1 88 1 139 1 223 2 142 2 141 1 89 1 47 1 143 1 51 2 229 4 94 1 286 1 150 1 
175 3 320 1 126 2 5 2 129 1 355 1 204 2 330 1 293 1 269 1 158 1 37 1 296 1 68 2 270 1 325 1 77 2 313 1 29 1 256 1 119 1 362 1 120 1 221 1 122 3 33 1 263 1 81 2 
12 1 142 1 13 1 89 2 129 2 157 1 296 1 270 2 68 2 326 1 120 2 121 1 149 1 
13 1 89 1 124 1 129 4 157 1 270 4 297 1 68 1 93 1 194 1 119 1 120 4 121 1 
142 1 13 1 89 2 110 1 62 1 128 1 129 2 157 1 270 2 68 1 168 1 247 1 120 2 171 1 
13 1 270 1 73 1 89 1 233 1 83 1 211 1 129 1 119 1 120 1 
13 1 89 1 129 2 192 1 157 1 270 2 68 1 187 1 70 1 120 2 121 1 
13 2 364 1 89 2 62 1 124 1 129 5 157 2 297 1 270 4 68 3 70 1 194 1 119 1 120 5 121 1 58 1 
13 2 89 2 62 1 124 1 129 5 157 2 297 1 270 4 68 3 311 1 70 1 194 1 119 1 120 5 121 1 58 1 
141 1 142 2 14 2 13 1 89 1 143 1 129 1 17 1 20 1 51 2 21 2 344 1 157 2 68 2 38 2 270 1 167 1 347 1 119 1 31 1 120 1 139 1 
12 1 142 1 13 1 89 2 62 1 128 1 129 1 157 1 270 1 68 1 120 1 258 1 171 1 
14 1 38 1 377 1 304 1 48 1 283 1 21 1 378 1 317 1 
369 1 3 1 304 1 
377 1 304 1 20 1 197 1 317 1 
175 2 373 1 143 1 3 1 304 1 191 1 17 1 20 1 366 1 269 1 167 1 369 1 313 1 377 2 256 1 122 2 33 1 197 2 317 2 
114 1 46 1 179 1 66 1 
114 1 46 1 63 1 66 1 80 1 151 1 207 1 
34 1 271 1 80 1 
1 1 46 1 144 1 375 1 63 1 66 1 207 1 114 1 298 1 11 2 151 3 80 3 
114 1 46 1 105 1 63 1 195 1 66 1 80 2 151 2 207 1 
318 1 73 1 177 1 144 1 211 1 282 1 63 1 80 1 151 1 207 1 
114 1 144 1 63 1 66 1 80 1 151 1 207 1 
114 2 46 1 144 1 63 1 80 1 151 1 207 1 
125 1 144 1 154 1 63 2 66 1 207 2 166 1 114 1 151 2 80 2 
114 1 46 1 97 1 144 1 282 1 346 1 63 1 195 2 66 1 185 1 80 3 151 3 207 1 
73 1 83 1 46 1 144 1 177 1 63 1 66 1 207 1 114 1 160 1 211 2 195 1 151 2 80 2 262 1 
114 1 46 1 105 1 127 1 144 1 282 1 63 2 195 2 66 1 185 1 80 4 151 4 207 2 
114 1 46 1 144 1 63 1 66 1 80 1 151 1 207 1 
1 1 46 2 375 1 282 1 63 1 66 2 207 1 185 1 114 2 210 1 195 2 11 1 151 4 80 4 
46 1 144 1 305 1 63 1 66 1 331 1 207 1 217 1 114 1 195 1 151 2 80 2 
1 2 46 1 144 1 375 1 63 1 66 1 207 1 103 1 114 1 11 2 151 3 80 3 
212 1 50 1 66 2 231 2 
144 1 63 1 85 1 80 1 151 1 207 1 
114 1 46 1 144 1 346 1 63 1 195 1 66 1 80 2 151 2 207 1 
246 1 
114 1 46 1 144 1 63 1 66 1 80 1 151 1 207 1 
114 1 46 1 144 1 346 1 63 1 195 1 66 1 11 1 80 3 151 3 207 1 
282 1 195 1 80 1 151 1 185 1 
114 1 66 1 

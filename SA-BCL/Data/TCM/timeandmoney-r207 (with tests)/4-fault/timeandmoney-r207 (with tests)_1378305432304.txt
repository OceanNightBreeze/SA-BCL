#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 82 9 200 110 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 115 1 211 3 133 3 296 1 19 1 123 2 151 1 324 1 360 1 285 1 12 2 143 2 
41 1 115 1 240 1 201 2 202 1 25 1 43 2 296 1 49 1 151 2 123 2 324 6 179 1 12 2 156 1 350 2 211 9 31 1 257 2 33 1 57 1 133 9 19 1 360 4 285 3 265 1 236 1 143 5 
41 1 115 1 240 1 201 2 202 1 25 1 43 2 296 1 49 1 151 2 123 2 324 6 179 1 12 2 156 1 350 2 211 9 31 1 257 2 33 1 57 1 133 9 19 1 360 4 285 3 265 1 236 1 143 5 
41 1 115 1 240 1 201 2 202 1 25 1 43 2 296 1 49 1 151 2 123 2 324 7 179 1 12 2 156 1 350 2 211 10 31 1 257 2 33 1 57 1 133 10 19 1 360 5 285 4 265 1 236 1 143 6 
41 1 115 1 240 1 201 2 202 1 43 1 296 1 49 1 151 2 123 2 324 4 179 1 12 2 156 1 350 2 211 7 31 1 257 2 33 1 57 1 133 7 19 1 360 3 285 2 265 1 236 1 143 4 
350 1 41 1 211 4 201 1 257 1 25 1 43 2 133 4 296 1 19 1 49 1 123 1 324 3 360 2 285 1 236 1 12 1 143 3 
41 1 199 1 211 2 201 1 31 1 257 1 291 1 57 1 133 2 103 1 296 1 19 1 123 1 151 1 12 1 143 1 
41 1 115 1 201 1 202 1 43 2 25 1 296 1 8 1 49 1 151 1 123 2 324 7 179 1 12 2 350 1 230 1 211 9 257 1 133 9 19 1 360 4 285 3 236 1 143 5 
41 1 115 1 201 1 202 1 43 2 25 1 296 1 8 1 49 1 151 1 123 2 324 7 179 1 12 2 350 1 230 1 211 9 257 1 133 9 19 1 360 4 285 3 236 1 143 5 
254 1 256 1 23 1 24 1 294 1 7 1 105 1 38 1 137 1 73 1 323 1 359 1 361 1 329 1 
100 1 
54 1 100 1 254 1 256 2 203 1 311 1 294 2 312 1 
100 1 254 2 120 1 256 5 68 2 316 1 203 2 3 1 378 1 244 1 294 5 46 1 369 2 357 1 84 2 262 1 310 1 311 1 312 1 
39 1 100 1 311 1 
269 1 
38 2 299 1 73 2 359 2 24 2 329 2 7 1 105 2 
22 1 339 1 24 3 168 1 172 1 7 1 298 2 149 1 299 1 48 2 73 3 10 1 341 1 76 1 153 1 247 1 13 1 53 2 329 2 29 1 16 1 159 2 351 1 213 1 354 1 191 1 105 2 38 2 138 1 359 2 219 1 237 2 141 1 62 1 379 1 63 1 380 1 
38 1 137 1 73 1 323 1 359 1 23 1 24 1 329 1 7 1 105 1 
100 1 222 1 1 1 256 1 24 1 23 1 4 1 45 1 294 1 105 1 73 1 85 1 309 1 311 1 
100 1 222 1 256 2 24 1 23 1 45 1 294 2 105 1 38 1 73 1 85 1 359 1 309 1 311 1 329 1 
254 1 256 1 203 1 294 1 320 1 
100 1 254 1 256 2 203 1 332 1 311 1 294 2 312 1 
256 1 203 1 294 1 
24 2 148 1 105 2 38 1 299 2 73 2 359 1 336 1 329 1 
122 1 370 1 293 1 
159 1 351 1 24 1 213 1 298 1 299 1 73 1 138 1 178 1 219 1 153 1 247 1 379 1 53 1 29 1 16 1 
39 1 299 1 
159 1 351 1 24 2 213 1 104 1 105 1 38 1 298 1 138 1 73 2 370 1 359 1 219 1 153 1 247 1 166 1 379 1 53 1 29 1 16 1 
38 4 299 1 73 5 150 1 364 1 359 4 24 5 4 1 166 1 336 1 347 1 329 1 104 2 105 5 
38 2 268 1 137 1 73 2 359 2 23 1 24 2 105 2 
38 3 299 1 73 3 359 3 24 3 329 1 104 1 105 3 
38 1 137 1 73 1 359 1 23 1 24 1 105 1 
38 1 73 1 359 1 23 1 24 1 336 1 148 1 329 1 105 1 
22 1 222 1 24 4 23 1 45 1 172 1 294 1 7 1 298 1 149 1 299 1 48 1 73 4 341 1 204 1 76 1 153 1 247 1 13 1 53 1 329 2 29 1 16 1 159 1 351 1 256 1 213 1 354 1 58 1 191 1 104 1 105 3 38 3 138 1 85 1 359 3 219 1 309 1 237 2 166 1 62 1 379 1 336 1 380 1 
38 1 299 1 73 2 364 1 359 1 24 2 4 1 104 1 105 2 
100 1 222 1 256 1 23 1 24 3 45 1 294 1 104 2 105 3 38 3 85 1 73 3 359 3 204 1 309 1 111 1 166 1 336 1 329 1 
24 2 104 1 105 2 38 2 122 1 73 2 370 1 359 2 336 1 329 1 
159 1 351 1 24 1 213 1 298 1 299 1 73 1 138 1 219 1 153 1 247 1 379 1 53 1 29 1 16 1 
159 1 351 1 24 1 213 1 187 1 298 1 299 1 73 1 138 1 307 1 247 1 379 1 53 1 29 1 16 1 
293 2 172 1 149 1 174 1 48 4 122 2 275 1 176 1 245 1 370 2 76 1 13 1 251 1 183 1 82 1 354 1 377 1 189 1 261 1 135 1 237 2 62 2 63 2 380 1 
38 1 268 1 73 1 359 1 23 1 24 1 309 1 105 1 
79 1 17 1 170 1 
79 2 325 1 246 1 208 1 170 2 78 1 
79 1 170 1 
79 1 170 1 
325 1 246 1 
325 1 246 1 
325 1 246 1 
79 1 119 1 170 1 
79 1 119 1 170 1 
79 1 119 1 170 1 
79 1 0 1 170 1 
79 1 0 1 170 1 
79 1 0 1 170 1 
196 1 42 1 24 2 368 1 170 1 242 1 294 1 171 1 299 1 73 2 51 1 277 1 11 1 205 1 130 1 79 1 17 1 256 1 258 1 216 1 105 2 38 2 359 2 20 1 
79 2 100 1 196 2 114 1 256 2 258 1 353 1 368 2 170 2 134 1 294 2 83 1 216 2 356 2 177 1 51 3 277 2 286 1 78 1 
350 1 199 1 201 2 248 2 30 1 
350 1 201 1 257 1 
199 1 201 1 257 1 
350 2 199 1 201 3 207 1 248 1 30 1 
350 1 199 1 201 2 248 1 102 1 30 1 
269 3 313 1 68 1 203 1 244 1 294 5 9 1 369 1 321 2 46 3 176 1 275 1 245 1 301 2 75 1 205 1 15 1 229 1 154 1 98 2 130 1 100 2 254 4 82 1 256 5 35 1 84 1 264 1 20 1 310 2 311 1 312 1 
269 9 366 1 68 2 367 1 203 6 294 9 244 1 320 5 9 3 369 2 46 8 340 1 50 1 176 3 275 3 245 3 301 6 75 2 126 1 229 3 154 1 98 6 100 5 254 7 82 3 256 9 378 1 107 5 84 2 333 1 264 2 20 4 310 6 311 1 312 1 
269 4 313 1 68 1 294 3 369 1 46 3 321 1 9 1 176 1 275 1 245 1 301 2 75 1 229 2 98 2 100 3 254 2 256 3 82 1 35 1 378 1 84 1 264 1 20 1 310 2 311 1 
269 7 313 1 68 1 294 4 369 1 46 5 321 2 9 2 340 1 50 1 176 2 275 2 245 2 301 4 75 1 126 1 229 3 98 4 100 4 254 3 256 4 82 2 378 1 35 1 84 1 264 1 20 2 310 4 311 1 
281 1 
39 1 213 1 326 1 
213 1 349 1 
351 1 213 1 247 1 
92 1 213 1 
351 1 213 1 
226 1 351 1 213 3 263 1 326 2 247 1 
279 1 221 1 376 1 315 2 161 1 189 2 233 1 224 1 174 3 48 7 275 1 245 1 342 1 209 1 266 1 62 3 63 4 112 1 
221 1 314 1 315 3 172 1 224 5 9 3 149 1 174 10 48 31 275 4 176 3 245 4 342 2 209 2 14 1 373 1 279 1 376 2 82 3 212 3 354 1 186 1 132 1 233 2 189 5 232 1 308 4 237 2 266 1 62 15 112 1 380 1 63 16 239 1 
279 1 221 1 376 1 315 2 354 2 188 1 233 1 189 3 172 2 224 1 174 4 149 2 48 9 275 1 245 1 342 1 206 1 237 4 209 1 62 4 112 1 63 5 380 2 239 1 
279 1 221 1 376 1 315 2 189 2 233 1 224 1 174 3 48 7 275 1 245 1 342 1 209 1 266 1 62 3 63 4 112 1 
279 1 221 1 376 1 315 2 189 2 233 1 224 1 174 3 48 7 275 1 245 1 342 1 209 1 266 1 62 3 63 4 112 1 
99 1 159 1 86 1 351 1 211 1 213 1 133 1 106 1 298 1 138 1 151 2 123 1 139 2 93 2 218 1 26 1 334 2 12 1 327 1 53 1 29 1 16 1 158 1 
350 1 41 1 159 1 252 1 199 1 330 1 211 1 201 2 257 1 133 1 295 1 298 1 138 1 192 1 358 1 151 1 123 1 139 1 93 1 372 1 334 1 207 1 140 1 12 1 53 1 16 1 
41 1 199 1 201 2 296 1 295 1 298 1 123 1 151 1 324 1 93 1 372 1 207 1 12 1 53 1 16 1 350 1 159 1 252 1 330 1 211 2 257 1 133 2 19 1 192 1 138 1 139 1 334 1 140 1 143 1 144 1 
199 1 201 2 296 1 295 1 298 1 123 1 151 1 324 2 93 1 26 1 372 1 207 1 12 1 53 1 16 1 350 1 374 1 159 1 252 1 330 1 211 3 257 1 133 3 19 1 358 1 192 1 138 1 139 1 334 1 143 1 
199 1 201 2 296 1 298 1 151 1 324 2 93 1 207 1 53 1 16 1 374 1 350 1 159 1 252 1 330 1 211 2 257 1 133 2 19 1 358 1 192 1 138 1 139 1 334 1 143 1 
363 1 
86 1 1 1 289 1 203 6 4 1 45 1 294 5 244 1 6 1 46 2 298 2 97 2 53 2 16 1 100 2 159 2 351 1 256 5 213 1 56 1 260 1 105 1 108 1 218 1 264 1 309 1 310 2 311 1 312 3 269 2 222 1 68 1 24 1 23 1 169 2 69 1 369 1 273 1 72 1 73 1 180 2 229 2 77 1 29 2 231 2 131 1 34 4 190 2 84 1 136 1 138 1 85 1 193 2 287 2 195 1 
54 1 222 1 1 1 256 3 23 1 289 1 24 1 203 2 34 2 4 1 45 1 294 3 190 1 105 1 108 1 273 1 136 1 85 1 73 1 309 1 312 1 195 1 
54 1 100 1 222 1 1 1 256 3 23 1 289 1 24 1 203 1 34 3 4 1 169 1 45 1 294 3 105 1 108 1 273 1 136 1 85 1 73 1 309 1 311 1 312 1 195 1 
222 1 1 1 24 1 289 1 23 1 203 2 4 1 45 1 169 1 294 3 273 1 73 1 54 1 100 1 256 3 34 3 190 1 105 1 108 1 136 1 85 1 309 1 193 1 311 1 312 1 195 1 
1 1 289 1 203 7 4 1 45 1 147 1 294 5 244 1 6 1 146 1 46 1 47 1 300 1 97 2 54 1 100 5 256 5 105 1 108 1 309 1 310 1 311 5 312 3 222 1 23 1 24 1 68 1 169 4 69 1 369 1 273 1 173 1 73 1 180 2 229 2 231 2 34 6 190 4 84 1 136 1 85 1 193 4 287 2 195 1 
269 2 222 1 1 1 289 1 68 1 24 1 23 1 203 4 4 1 169 2 45 1 69 1 244 1 294 4 6 1 46 1 369 1 273 1 72 1 73 1 180 2 97 2 229 2 100 2 231 2 256 4 34 4 190 2 105 1 108 1 84 1 136 1 85 1 309 1 310 1 311 1 193 2 287 2 312 2 195 1 
222 1 1 1 68 1 24 1 289 1 23 1 203 4 4 1 169 2 45 1 69 1 146 1 6 1 294 4 244 1 46 1 369 1 273 1 173 1 47 1 73 1 180 2 97 2 229 2 100 1 231 2 256 4 34 4 190 2 105 1 108 1 84 1 136 1 85 1 309 1 310 1 311 1 193 2 287 2 312 2 195 1 
222 1 1 1 68 1 24 1 289 1 23 1 203 4 4 1 169 2 45 1 69 1 146 1 6 1 294 4 244 1 46 1 369 1 273 1 173 1 47 1 73 1 180 2 97 2 229 2 100 1 231 2 256 4 34 4 190 2 105 1 108 1 84 1 136 1 85 1 309 1 310 1 311 1 193 2 287 2 312 2 195 1 
269 2 66 2 222 1 1 1 68 1 24 1 289 1 23 1 203 4 4 1 169 2 45 1 69 1 146 1 294 4 244 1 46 1 369 1 273 1 73 1 129 2 28 1 100 1 231 2 256 4 34 4 162 1 190 2 105 1 108 1 84 1 136 1 85 1 309 1 310 1 311 1 193 2 287 2 194 1 312 2 195 1 
222 1 1 1 68 1 24 1 289 1 23 1 203 5 4 1 45 1 169 3 69 1 146 1 6 1 244 1 294 4 46 1 369 1 173 1 273 1 47 1 73 1 300 1 180 2 97 2 229 2 100 1 231 2 256 4 34 5 190 3 105 1 84 1 108 1 136 1 85 1 309 1 310 1 311 1 287 2 193 3 312 2 195 1 
222 1 1 1 68 1 24 1 289 1 23 1 203 5 4 1 45 1 169 3 69 1 146 1 6 1 244 1 294 4 46 1 369 1 173 1 273 1 47 1 73 1 300 1 180 2 97 2 229 2 100 1 231 2 256 4 34 5 190 3 105 1 84 1 108 1 136 1 85 1 309 1 310 1 311 1 287 2 193 3 312 2 195 1 
269 2 66 2 222 1 1 1 289 1 68 1 24 1 23 1 203 4 4 1 169 2 45 1 69 1 244 1 294 4 46 1 369 1 273 1 72 1 73 1 129 2 28 1 100 1 231 2 256 4 34 4 190 2 105 1 108 1 84 1 136 1 85 1 309 1 310 1 311 1 193 2 287 2 312 2 195 1 
86 1 339 1 292 1 297 1 298 7 149 2 48 2 95 1 247 1 13 2 53 6 157 1 250 1 16 3 251 1 159 7 351 3 213 4 354 2 215 1 104 1 105 1 358 1 359 1 218 1 62 1 63 1 24 1 121 1 172 2 73 1 371 1 76 2 128 1 127 1 29 2 191 1 234 1 38 1 138 4 141 1 237 4 380 2 144 1 
167 1 24 1 293 1 172 1 9 1 174 1 149 1 122 1 73 1 48 3 275 1 176 1 370 1 245 1 76 1 13 1 329 1 82 1 354 1 189 1 105 1 38 1 359 1 237 2 336 1 62 2 380 1 142 1 63 1 
221 1 315 1 293 1 172 1 149 1 174 2 299 2 122 1 48 6 275 1 370 1 245 1 76 1 13 1 279 1 251 1 376 1 354 1 233 1 189 2 39 1 237 2 62 3 112 1 380 1 63 3 
117 1 339 1 293 11 172 2 224 1 9 2 174 2 149 2 299 1 48 14 122 4 275 2 176 1 370 11 245 1 76 2 13 1 182 1 373 1 375 1 82 2 212 3 354 2 132 1 189 1 283 1 191 1 308 3 237 4 62 6 380 2 142 1 63 8 
24 2 339 1 172 1 298 1 149 1 299 1 122 1 73 2 48 2 178 1 278 1 76 1 153 1 247 1 181 1 13 1 53 1 29 1 16 1 159 1 18 1 351 1 213 1 354 1 104 1 191 1 105 1 38 1 138 1 359 1 219 1 237 2 166 1 379 1 62 1 380 1 142 1 63 1 
339 1 293 7 298 3 9 2 149 3 299 2 48 20 245 3 302 1 343 2 153 2 247 2 96 2 13 3 53 3 16 2 159 3 351 2 213 2 354 3 104 1 105 1 358 1 217 2 163 1 359 1 219 2 166 1 62 10 112 1 63 10 22 2 221 1 315 1 24 3 172 3 224 4 174 8 73 3 122 7 276 2 275 3 176 2 370 7 76 3 29 1 279 1 282 1 376 1 82 2 233 1 189 4 191 1 38 1 138 2 237 6 379 2 142 1 380 3 
251 1 82 1 354 1 293 1 172 1 224 1 261 1 174 1 149 1 122 1 48 2 275 1 370 1 76 1 237 2 13 1 380 1 63 2 
251 1 183 1 354 1 293 1 189 1 172 1 174 1 149 1 122 1 48 2 176 1 370 1 245 1 76 1 237 2 13 1 62 2 380 1 
293 2 172 1 224 1 9 1 149 1 174 2 48 4 122 2 275 1 176 1 370 2 245 1 76 1 13 1 251 1 82 1 354 1 189 1 237 2 62 2 63 2 380 1 
82 1 121 1 354 1 293 1 172 1 224 1 261 1 174 1 149 1 122 1 48 2 275 1 370 1 76 1 237 2 13 1 380 1 63 2 
183 1 121 1 354 1 293 1 189 1 172 1 174 1 149 1 122 1 48 2 176 1 370 1 245 1 76 1 237 2 13 1 62 2 380 1 
121 1 293 2 172 1 224 1 9 1 149 1 174 2 48 4 122 2 275 1 176 1 370 2 245 1 76 1 13 1 82 1 354 1 189 1 237 2 62 2 63 2 380 1 
293 2 172 1 224 1 9 1 149 1 174 2 48 4 122 2 275 1 176 1 370 2 245 1 76 1 13 1 82 1 354 1 189 1 237 2 62 2 63 2 380 1 
22 1 339 1 24 1 172 1 298 1 149 1 299 1 48 2 73 1 76 1 153 1 247 1 13 1 53 1 29 1 16 1 159 1 351 1 213 1 354 1 191 1 138 1 219 1 237 2 379 1 62 1 63 1 380 1 
339 1 24 1 172 1 298 1 149 1 299 1 48 2 73 1 76 1 247 1 13 1 53 1 29 1 16 1 159 1 351 1 213 1 354 1 187 1 36 1 191 1 138 1 307 1 237 2 379 1 62 1 63 1 380 1 
293 2 172 1 224 1 9 1 149 1 174 2 48 4 122 2 275 1 176 1 370 2 245 1 76 1 13 1 82 1 354 1 189 1 237 2 62 2 63 2 380 1 142 1 
22 1 24 1 293 2 172 1 224 1 298 1 9 1 174 2 149 1 122 2 48 4 73 1 176 1 275 1 245 1 370 2 76 1 153 1 343 1 247 1 13 1 53 1 16 1 159 1 351 1 82 1 213 1 354 1 189 1 138 1 219 1 237 2 62 2 379 1 63 2 380 1 144 1 
24 1 293 1 172 1 319 1 224 1 9 1 174 1 149 1 73 1 48 3 122 1 176 1 275 1 245 1 370 1 76 1 13 1 329 1 82 1 354 1 105 1 38 1 359 1 237 2 62 1 336 1 380 1 142 1 63 2 
362 1 200 1 87 1 70 1 172 2 224 2 9 2 149 2 174 4 48 13 275 2 176 2 245 2 344 1 373 1 253 1 82 2 212 1 354 2 132 1 188 1 189 2 308 2 110 1 237 4 61 1 62 7 380 2 63 6 
288 1 362 2 200 1 145 1 70 1 172 3 224 2 9 3 174 4 149 3 48 26 91 1 275 3 176 2 245 2 125 1 344 4 253 2 255 1 82 3 212 2 352 1 354 3 188 1 132 2 189 2 308 2 109 1 237 6 61 1 62 12 380 3 63 14 239 2 
288 1 200 1 87 1 145 1 9 4 149 3 48 41 91 1 245 5 344 4 253 2 255 1 212 3 352 1 354 3 308 4 109 1 61 1 62 21 63 20 112 1 362 1 221 1 315 1 272 1 172 3 70 1 224 4 174 8 176 4 275 5 125 1 373 1 279 1 376 1 82 4 188 1 132 3 189 4 233 1 237 6 380 3 239 1 
288 1 362 1 221 1 200 1 315 1 87 1 272 1 145 1 70 1 172 4 224 3 9 4 149 4 174 7 91 1 48 38 275 5 176 3 245 4 125 1 344 4 373 1 279 1 376 1 253 2 255 1 82 4 212 3 352 1 354 4 132 3 188 1 233 1 189 4 308 4 109 1 237 8 61 1 62 18 112 1 380 4 63 20 239 2 
288 1 362 1 221 1 117 2 200 1 315 1 145 1 70 1 172 2 224 7 9 7 149 2 174 14 91 1 48 52 275 8 176 7 245 8 125 1 344 4 373 2 279 1 376 1 253 1 255 1 82 7 212 4 352 1 354 2 132 2 188 1 233 1 189 7 308 4 109 1 237 4 61 1 62 25 112 1 380 2 63 27 239 1 
79 1 196 1 114 1 277 1 368 1 238 1 170 1 78 1 83 1 216 1 
17 1 42 1 
79 1 196 1 322 1 277 1 368 1 170 1 345 1 59 1 216 1 
119 1 338 1 
80 1 0 1 208 1 
79 1 100 1 196 1 114 1 256 1 258 1 368 1 170 1 134 1 294 1 83 1 216 1 356 1 177 1 51 2 277 1 286 1 78 1 
79 1 100 1 196 1 114 1 256 1 258 1 368 1 170 1 134 1 294 1 83 1 216 1 356 1 177 1 51 2 277 1 286 1 78 1 
79 1 100 1 196 1 114 1 256 1 258 1 368 1 170 1 134 1 294 1 83 1 216 1 356 1 177 1 51 2 277 1 286 1 78 1 
119 1 208 1 338 1 
119 1 208 1 338 1 
80 1 0 1 
80 1 0 1 208 1 
11 1 242 1 
196 1 42 1 241 1 24 2 368 1 170 1 242 1 294 1 171 1 299 1 73 2 51 1 277 1 11 1 205 1 130 1 79 1 17 1 254 1 256 1 356 1 216 1 105 2 38 2 359 2 286 1 20 1 
197 1 24 2 339 1 44 1 172 1 298 2 225 1 149 1 73 2 48 2 95 1 76 1 13 1 53 2 250 1 16 1 159 2 351 1 213 1 354 1 191 1 105 2 138 1 235 1 220 1 237 2 141 2 62 1 142 1 380 1 63 1 
159 1 65 1 99 1 86 1 351 1 270 1 213 1 298 1 138 1 93 1 218 1 53 1 29 1 16 1 
350 1 159 1 65 1 252 1 199 1 201 2 257 1 223 1 295 1 298 1 138 1 358 1 192 1 93 1 207 1 53 1 346 1 16 1 
350 1 159 2 65 1 252 1 199 1 201 2 257 1 223 1 295 1 298 2 138 1 358 1 192 1 93 1 207 1 53 2 346 1 16 1 144 1 
350 1 159 1 184 1 252 1 199 1 201 2 257 1 223 1 295 1 298 1 358 1 192 1 138 1 93 1 207 1 53 1 16 1 
317 1 
100 1 120 1 68 1 244 1 369 1 46 1 84 1 357 1 310 1 311 1 
100 5 269 10 82 2 101 1 9 2 46 5 274 2 275 2 176 2 301 5 245 2 96 1 310 5 229 5 98 5 
100 1 256 1 203 1 311 1 294 1 312 1 
86 1 68 2 203 4 290 1 318 2 244 1 294 3 369 2 298 4 46 2 249 1 53 4 77 1 29 2 16 1 159 4 131 1 351 1 256 3 213 1 378 1 260 2 84 2 138 1 60 1 218 1 264 2 310 2 312 2 
46 1 39 1 100 1 357 1 120 1 310 1 311 1 
100 2 269 1 256 1 68 1 203 1 294 1 244 1 6 1 369 1 46 1 84 1 180 1 310 1 311 1 97 1 229 1 312 1 
198 2 203 5 244 4 5 1 294 5 46 9 298 3 9 2 92 1 301 6 245 2 247 2 96 2 249 1 53 3 98 6 349 3 16 2 159 3 100 8 351 2 256 5 160 2 213 8 355 1 101 2 260 1 357 1 264 2 310 8 311 2 312 3 267 1 269 12 116 2 120 1 68 4 318 1 369 4 274 2 226 1 275 2 176 2 227 2 326 2 27 1 229 6 29 1 82 2 84 4 138 3 85 2 335 2 144 1 
269 6 68 2 203 1 145 1 243 1 294 1 244 2 46 8 369 2 9 2 274 2 91 1 275 2 176 2 301 5 245 2 229 3 98 5 100 5 255 1 256 1 82 2 212 1 352 1 32 1 101 1 260 1 132 1 84 2 308 1 109 1 264 1 310 5 311 2 312 1 
221 1 23 1 24 1 68 1 244 1 294 1 7 1 369 1 46 2 173 1 73 1 274 2 275 2 323 1 245 1 329 1 376 1 256 1 101 1 214 1 233 1 105 1 38 1 84 1 137 1 359 1 310 2 361 1 
22 1 24 3 172 1 7 1 298 1 149 1 299 1 48 1 73 3 341 1 76 1 153 1 247 1 13 1 53 1 29 1 329 2 16 1 159 1 351 1 213 1 354 1 191 1 105 2 38 2 138 1 359 2 219 1 237 2 62 1 379 1 380 1 
100 4 269 4 315 1 68 1 260 1 244 1 369 1 46 1 84 1 301 2 264 1 310 2 311 2 229 2 98 2 
196 1 114 1 185 1 277 1 11 1 
196 1 277 1 331 1 
196 1 277 1 331 1 
196 1 277 1 331 1 
196 1 152 1 277 1 
196 1 152 1 277 1 
196 1 152 1 277 1 
196 1 277 1 
79 1 170 1 
221 1 376 2 354 1 214 1 188 1 172 1 233 2 189 3 224 2 149 1 174 5 48 10 275 2 245 2 237 2 62 5 380 1 63 5 
82 1 354 1 188 1 172 1 224 1 149 1 174 1 48 2 275 1 237 2 380 1 63 2 
82 1 354 1 188 1 189 1 172 1 224 1 9 1 174 2 149 1 48 4 176 1 275 1 245 1 237 2 62 2 380 1 63 2 
376 1 87 1 271 1 354 3 188 1 172 3 233 1 189 1 224 1 149 3 174 2 48 3 237 6 62 2 380 3 63 1 239 1 
221 2 315 1 314 1 87 1 271 1 172 5 224 5 9 3 149 5 174 12 48 34 275 5 176 3 245 5 210 1 373 1 279 1 376 3 82 3 212 3 354 5 186 1 132 1 188 1 233 3 232 1 189 7 308 4 237 10 62 18 112 1 380 5 63 16 239 2 
279 1 221 1 315 1 376 1 354 2 189 2 172 2 233 1 224 1 174 3 149 2 48 8 275 1 245 1 237 4 62 4 63 4 380 2 112 1 239 1 
279 1 221 1 315 1 376 1 233 1 189 2 39 1 174 2 48 6 275 1 245 1 62 3 112 1 63 3 
82 1 354 1 189 1 172 1 224 1 9 1 174 2 149 1 48 4 176 1 275 1 245 1 237 2 210 1 62 2 380 1 63 2 
82 1 212 1 132 1 189 1 224 1 9 1 174 2 48 7 176 1 275 1 245 1 308 2 62 4 63 3 373 1 
221 1 117 1 315 1 271 1 172 2 224 4 9 2 174 9 149 2 48 23 275 3 176 2 245 3 373 1 279 1 375 1 376 2 82 2 212 2 354 2 233 2 189 5 308 2 237 4 62 12 112 1 63 11 380 2 239 2 
48 1 308 1 62 1 
48 1 212 1 63 1 
82 1 354 1 172 1 189 2 224 1 9 1 149 1 174 3 48 6 275 1 176 1 245 1 237 2 210 1 96 1 62 3 380 1 63 3 
145 1 172 1 224 1 9 2 149 1 174 2 48 12 91 1 275 2 176 2 245 2 255 1 82 2 212 1 352 1 354 1 132 1 188 1 189 1 308 1 109 1 237 2 62 6 380 1 63 6 
221 1 376 1 233 1 189 1 224 1 174 2 48 6 275 1 245 1 62 3 63 3 
279 1 376 1 271 1 354 1 189 1 233 1 172 1 224 1 174 2 149 1 48 3 237 2 62 2 63 1 380 1 112 1 239 1 
221 1 315 1 172 1 149 1 174 2 48 8 275 1 245 1 279 1 376 1 255 1 212 1 354 1 132 1 188 1 233 1 189 2 308 1 237 2 62 4 380 1 63 4 112 1 
221 1 315 1 172 2 224 1 9 1 149 2 174 3 48 11 275 2 245 1 210 1 373 1 279 1 376 1 255 1 82 1 212 1 354 2 132 1 188 1 189 2 233 1 308 2 237 4 62 5 112 1 380 2 63 6 
221 1 315 1 145 1 172 3 224 1 9 2 149 3 174 4 48 19 91 1 275 3 176 2 245 3 210 1 279 1 376 1 255 1 82 2 212 1 352 1 354 3 132 1 188 1 233 1 189 3 308 1 109 1 237 6 62 10 112 1 380 3 63 9 239 1 
221 1 315 1 145 1 172 3 224 2 9 2 149 3 174 5 48 17 91 1 275 3 176 1 245 2 210 1 279 1 376 1 255 1 82 2 212 1 352 1 354 3 132 1 188 1 233 1 189 3 308 1 109 1 237 6 62 7 112 1 380 3 63 10 239 1 
221 1 315 1 172 1 149 1 174 2 48 8 275 1 245 1 279 1 376 1 255 1 212 1 354 1 132 1 188 1 233 1 189 2 308 1 237 2 62 4 380 1 63 4 112 1 
145 1 172 1 224 1 9 2 149 1 174 2 48 12 91 1 275 2 176 2 245 2 255 1 82 2 212 1 352 1 354 1 132 1 188 1 189 1 308 1 109 1 237 2 62 6 380 1 63 6 
221 1 315 1 145 1 172 4 224 2 9 2 149 4 174 5 48 18 91 1 275 3 176 1 245 2 210 1 279 1 376 1 255 1 82 2 212 1 352 1 354 4 132 1 188 1 233 1 189 3 308 1 109 1 237 8 62 8 112 1 380 4 63 10 239 2 
87 1 145 1 172 4 224 3 9 3 149 4 174 6 48 16 91 1 275 3 176 2 245 2 255 1 82 3 212 1 352 1 354 4 132 1 188 1 189 3 308 1 109 1 237 8 62 7 380 4 63 9 239 2 
279 2 221 1 376 3 233 3 189 3 224 3 174 6 48 7 275 1 245 1 62 4 112 1 63 3 
221 1 315 1 87 1 145 1 172 4 224 1 9 2 149 4 174 4 48 18 91 1 275 3 176 1 245 2 279 1 376 1 255 1 82 2 212 1 352 1 354 4 132 1 188 1 233 1 189 3 308 1 109 1 237 8 62 8 112 1 380 4 63 10 239 2 
299 1 73 1 364 1 81 1 24 1 4 1 105 1 
113 1 81 1 364 1 24 1 4 1 105 1 299 1 73 1 284 1 164 1 52 1 305 1 
159 4 86 1 351 1 213 1 298 4 138 1 218 1 21 1 337 1 53 4 29 1 144 1 16 1 
159 2 282 1 351 1 213 1 318 1 215 1 298 2 138 2 371 1 127 1 247 1 53 2 157 1 16 1 
298 1 159 1 252 1 199 1 138 1 201 1 257 1 53 1 29 1 16 1 
159 2 351 1 213 1 298 2 358 1 138 1 235 1 53 2 250 1 144 1 16 1 
159 5 86 1 351 2 213 3 318 1 234 1 298 5 138 2 218 1 128 1 337 1 53 4 29 1 250 1 144 1 16 2 
159 5 86 1 351 2 213 3 318 1 298 5 138 2 218 1 128 1 337 1 53 4 29 1 250 1 144 1 381 1 16 2 
39 1 298 1 159 1 86 1 138 1 351 1 218 1 213 1 53 1 29 1 16 1 
159 1 351 1 24 2 213 1 104 1 105 1 38 1 298 1 299 1 138 1 73 2 359 1 219 1 247 1 379 1 53 1 29 1 16 1 
159 1 222 1 351 2 23 1 24 2 213 3 318 1 104 1 105 2 38 1 298 1 299 1 138 1 73 2 92 1 359 2 309 1 219 1 27 1 247 2 379 1 53 1 16 1 
159 2 222 1 351 2 23 1 24 2 213 3 318 1 104 1 105 2 38 1 298 2 299 1 138 1 73 2 92 1 307 1 359 2 309 1 27 1 247 2 21 1 379 1 53 2 16 1 
23 1 24 1 203 1 318 1 294 2 7 1 298 2 73 1 323 1 92 1 326 1 27 1 247 1 53 2 29 1 329 1 328 1 16 1 349 1 159 2 100 1 351 1 256 2 213 4 105 1 38 1 137 1 138 1 85 1 359 1 40 1 311 1 361 1 
100 1 159 3 351 1 256 2 213 4 203 1 318 1 294 2 298 3 85 1 138 1 92 1 27 1 326 1 247 1 21 1 335 1 311 1 53 3 29 1 349 1 16 1 
298 1 159 1 138 1 292 1 53 1 16 1 
292 1 88 1 297 1 298 6 226 1 371 1 128 1 247 1 53 5 29 2 250 1 16 2 159 6 351 2 213 3 215 1 234 1 138 3 358 1 144 1 
293 1 298 1 149 2 299 2 48 6 245 1 153 1 343 1 247 1 13 2 53 1 16 1 159 1 351 1 213 1 354 2 104 1 105 1 359 1 219 1 62 3 112 1 63 3 22 1 221 1 315 1 24 2 172 2 225 1 174 2 122 1 73 2 276 1 275 1 370 1 76 2 279 1 376 1 233 1 189 2 38 1 138 1 237 4 379 1 142 1 380 2 144 1 
198 1 120 1 68 2 203 2 244 2 294 3 46 1 369 2 298 1 227 1 326 1 53 1 249 1 29 1 349 1 100 1 159 1 254 1 256 3 160 1 213 2 357 1 84 2 85 1 310 1 335 1 311 1 312 1 
159 2 351 1 213 2 355 1 292 1 298 2 138 2 226 1 326 1 247 1 53 2 144 1 16 1 
159 1 351 1 24 2 213 1 104 1 105 1 38 1 298 1 299 1 138 1 73 2 307 1 359 1 247 1 379 1 53 1 29 1 16 1 
159 1 351 1 213 1 318 1 88 1 215 1 298 1 138 2 226 1 371 1 247 1 53 1 16 1 
299 1 71 1 67 1 74 1 348 1 
100 1 55 1 67 1 222 1 254 1 256 2 23 1 45 1 294 2 299 1 71 2 85 1 74 2 124 1 204 1 309 1 165 1 311 1 348 2 
197 1 71 1 73 1 67 1 74 1 24 1 220 1 44 1 105 1 
55 1 67 1 124 1 
41 1 19 1 123 1 211 1 133 1 12 1 143 1 296 1 
211 4 365 1 57 1 133 4 296 2 19 2 123 1 324 2 360 1 303 1 285 1 228 1 12 1 143 3 
41 1 230 1 211 2 118 1 133 2 296 1 19 1 123 1 324 1 12 1 143 1 304 1 
280 1 41 1 19 1 123 1 211 3 303 1 228 2 57 2 133 3 12 1 143 1 296 1 
64 1 259 1 143 2 155 2 
41 1 123 1 211 1 89 1 133 1 12 1 
41 1 19 1 123 1 324 1 211 2 202 1 133 2 12 1 143 1 296 1 
2 1 
41 1 19 1 123 1 211 1 133 1 12 1 143 1 296 1 
39 1 19 1 143 1 296 1 
19 1 123 1 211 1 133 1 12 1 143 1 296 1 
151 1 139 1 211 1 
37 1 41 1 19 1 123 1 211 3 303 1 228 1 57 2 133 3 12 1 143 1 296 1 
19 1 123 1 324 1 211 2 43 1 133 2 12 1 143 1 296 1 
350 1 41 1 211 1 201 1 257 1 133 1 49 1 123 1 360 1 12 1 143 1 
41 1 123 1 211 1 133 1 12 1 143 1 296 1 
41 1 19 1 123 1 211 1 133 1 12 1 296 2 
41 1 211 2 90 1 133 2 296 1 306 1 123 2 94 1 12 2 143 1 
41 1 211 3 202 1 133 3 296 1 19 1 123 1 324 2 360 1 179 1 285 1 12 1 143 2 
350 1 41 1 199 1 211 2 201 2 257 1 133 2 296 1 19 1 175 1 123 1 324 1 207 1 12 1 143 1 
41 1 211 4 25 1 43 1 133 4 296 1 19 1 123 2 324 2 360 1 285 1 12 2 143 2 
41 1 211 3 202 1 57 1 133 3 296 1 19 1 123 1 324 1 12 1 143 1 
365 1 360 1 285 1 143 1 
143 1 296 1 

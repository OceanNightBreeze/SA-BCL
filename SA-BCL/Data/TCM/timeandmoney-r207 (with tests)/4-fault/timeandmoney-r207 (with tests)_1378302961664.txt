#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (7,27,56) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (7,27,56) 215 234 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (7,27,56) 215 323 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (7,27,56) (7,27,56) 12 66 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (7,27,56) 215 268 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 202 1 58 1 256 2 182 1 156 9 59 2 19 1 204 2 207 1 5 2 350 1 114 1 292 2 241 1 189 2 92 1 293 9 50 1 354 4 32 2 33 1 73 1 149 1 195 3 196 6 251 1 175 5 
2 1 202 1 58 1 256 2 182 1 156 9 59 2 19 1 204 2 207 1 5 2 350 1 114 1 292 2 241 1 189 2 92 1 293 9 50 1 354 4 32 2 33 1 73 1 149 1 195 3 196 6 251 1 175 5 
2 1 202 1 58 1 256 2 182 1 156 10 59 2 19 1 204 2 207 1 5 2 350 1 114 1 292 2 241 1 189 2 92 1 293 10 50 1 354 5 32 2 33 1 73 1 149 1 195 4 196 7 251 1 175 6 
2 1 202 1 58 1 256 2 182 1 156 7 59 2 19 1 204 2 207 1 5 1 350 1 114 1 292 2 241 1 189 2 293 7 50 1 354 3 32 2 33 1 73 1 149 1 195 2 196 4 251 1 175 4 
189 1 92 1 293 4 50 1 354 2 202 1 256 1 182 1 59 1 156 4 33 1 204 1 207 1 5 2 195 1 196 3 292 1 175 3 
2 1 293 2 202 1 71 1 256 1 182 1 59 1 156 2 32 1 107 1 33 1 204 1 111 1 350 1 292 1 175 1 
293 3 354 1 202 1 182 1 59 2 156 3 32 1 33 1 195 1 196 1 114 1 292 2 175 2 
202 1 256 1 182 1 156 9 59 2 204 1 44 1 207 1 5 2 114 1 292 2 189 1 293 9 92 1 354 4 50 1 32 1 33 1 36 1 149 1 195 3 196 7 251 1 175 5 
202 1 256 1 182 1 156 9 59 2 204 1 44 1 207 1 5 2 114 1 292 2 189 1 293 9 92 1 354 4 50 1 32 1 33 1 36 1 149 1 195 3 196 7 251 1 175 5 
40 1 208 1 22 1 
155 2 345 1 22 1 
364 2 197 1 60 1 309 2 94 2 341 2 48 2 252 2 
304 2 39 1 3 1 57 1 41 2 60 1 347 1 329 1 282 1 20 2 45 1 158 1 288 1 46 2 309 2 48 3 141 1 355 1 29 1 119 1 72 1 193 2 317 1 94 2 360 1 123 1 341 2 320 1 167 1 364 3 298 1 38 1 173 1 197 1 150 1 226 1 252 2 
96 1 364 1 197 1 203 1 218 1 309 1 94 1 341 1 48 1 252 1 
229 1 56 1 364 1 7 1 341 1 48 1 
56 1 364 1 309 1 94 1 341 1 48 1 252 1 
184 1 27 1 246 1 346 1 335 1 
184 1 208 1 27 2 246 2 326 1 22 1 85 1 335 1 
27 1 246 1 335 1 
27 1 246 1 203 1 218 1 135 1 94 1 341 1 184 1 96 1 364 1 197 1 309 1 252 1 48 1 
22 1 
184 1 208 1 93 1 27 2 246 2 326 1 22 1 335 1 
325 1 231 1 180 1 27 5 336 2 246 5 69 1 310 1 326 1 319 1 342 1 184 2 349 2 208 1 308 1 128 2 22 1 99 1 335 2 
40 1 60 1 
60 2 247 1 94 1 341 2 127 1 364 2 309 1 48 2 252 1 
194 1 166 1 210 1 
39 1 355 1 41 1 60 1 347 1 329 1 282 1 20 1 167 1 272 1 364 1 298 1 46 1 150 1 226 1 48 1 
49 1 39 1 355 1 41 1 347 1 329 1 94 1 282 1 341 1 20 1 167 1 298 1 364 2 46 1 309 1 150 1 210 1 226 1 137 1 48 2 
49 1 364 3 60 1 309 3 94 3 341 3 252 1 48 3 
96 1 364 1 218 1 309 1 94 1 341 1 48 1 
127 1 364 1 218 1 309 1 94 1 247 1 341 1 48 1 252 1 
49 1 56 1 364 2 215 1 234 1 309 2 247 1 94 2 341 2 137 1 252 1 48 2 
49 1 229 1 364 2 299 1 60 1 309 1 94 1 341 2 48 2 
49 1 56 1 364 1 215 1 323 1 309 1 94 1 341 1 137 1 48 1 
194 1 49 1 364 2 309 2 94 2 247 1 210 1 341 2 48 2 252 1 
39 1 355 1 41 1 60 1 329 1 347 1 282 1 20 1 167 1 364 1 298 1 46 1 150 1 226 1 48 1 
39 1 41 1 60 1 329 1 347 1 282 1 20 1 167 1 89 1 364 1 298 1 46 1 223 1 150 1 48 1 
304 4 57 2 257 1 136 1 288 1 21 1 210 2 262 1 25 1 26 1 244 1 29 2 166 2 193 2 312 1 52 1 360 1 123 1 194 2 320 1 97 1 55 1 38 1 173 1 
364 1 290 1 79 1 218 1 309 1 94 1 341 1 48 1 
49 2 229 1 17 1 364 5 170 1 299 1 60 1 309 4 247 1 94 4 137 1 341 5 252 1 48 5 
96 1 364 2 290 1 218 1 309 2 94 2 341 2 48 2 
205 1 70 1 
205 1 70 1 
1 1 161 1 
1 1 161 1 
1 1 161 1 
205 1 222 1 70 1 
205 1 70 1 84 1 
205 2 1 1 295 1 70 2 115 1 161 1 
205 1 222 1 70 1 
205 1 222 1 70 1 
205 1 14 1 70 1 
205 1 14 1 70 1 
205 1 14 1 70 1 
181 1 203 1 281 1 134 1 135 1 205 2 239 1 186 1 309 1 48 1 162 2 27 2 357 1 246 2 70 2 216 1 218 1 94 1 341 1 124 2 96 1 364 1 198 1 197 1 300 2 130 2 301 1 200 2 252 1 
105 1 42 1 60 1 84 1 281 1 205 1 109 1 160 1 309 2 162 1 48 2 27 1 70 1 246 1 94 2 124 1 341 2 297 1 364 2 37 1 300 1 130 1 303 1 200 1 
204 1 189 1 256 1 
204 1 111 1 256 1 
0 1 189 2 111 1 233 1 256 3 348 1 
189 1 111 1 233 1 187 1 256 2 348 1 
189 1 111 1 233 2 256 2 348 1 
278 1 179 1 105 1 255 2 155 3 326 1 345 1 184 4 136 1 349 1 109 1 208 1 113 1 22 2 261 1 335 1 26 1 244 1 27 5 336 1 356 1 246 5 310 2 340 1 319 3 97 1 297 1 322 1 273 2 98 2 128 1 99 1 
278 2 255 6 155 9 326 1 345 3 346 5 184 7 136 3 109 4 349 2 208 1 308 1 113 2 22 5 261 3 335 6 9 1 26 3 28 1 244 3 27 9 336 2 246 9 310 6 319 8 269 1 97 3 148 1 75 1 322 1 273 6 128 2 77 5 99 1 365 1 
278 1 179 1 255 2 155 4 345 2 184 2 349 1 109 1 136 1 208 1 308 1 113 1 22 3 261 1 26 1 244 1 27 3 356 1 336 1 246 3 310 2 319 3 97 1 98 1 273 2 128 1 
278 1 179 1 255 4 155 7 345 3 184 3 349 1 109 2 136 2 208 1 308 1 113 1 22 4 261 2 26 2 28 1 244 2 27 4 336 1 356 1 246 4 310 4 319 5 269 1 97 2 75 1 273 4 98 2 128 1 
40 1 121 1 347 1 
129 1 347 1 
51 1 
347 1 329 1 
167 1 159 1 311 1 121 2 347 3 329 1 
167 1 347 1 329 1 
90 1 347 1 
16 1 304 7 102 1 26 1 57 3 244 1 104 1 29 4 312 2 327 1 257 3 61 2 217 1 284 1 168 1 172 1 302 1 
16 1 304 7 102 1 26 1 57 3 244 1 104 1 29 4 312 2 327 1 257 3 61 2 217 1 284 1 168 1 172 1 302 1 
16 1 304 7 102 1 26 1 57 3 244 1 104 1 29 4 312 2 327 1 257 3 61 2 217 1 284 1 168 1 172 1 67 1 302 1 
228 1 16 2 304 31 102 5 104 1 57 15 153 1 279 1 327 2 61 3 257 10 284 1 136 3 288 1 261 3 140 4 243 3 164 1 26 4 264 1 244 4 29 16 193 2 312 5 217 1 360 1 123 1 318 1 320 1 97 3 168 2 172 1 275 1 302 2 
16 1 304 9 102 1 57 4 279 1 327 1 61 2 257 4 284 1 288 2 26 1 244 1 165 1 266 1 29 5 193 4 312 3 217 1 360 2 123 2 320 2 168 1 172 1 302 1 
0 1 39 1 41 1 202 1 256 2 182 1 156 2 59 1 236 1 282 1 204 1 63 1 20 1 238 1 64 1 110 1 111 1 46 1 292 1 8 1 189 1 293 2 11 1 32 1 33 1 146 1 125 1 249 1 196 1 175 1 
0 1 39 1 41 1 256 2 182 1 156 3 59 1 236 1 282 1 204 1 63 1 20 1 238 1 64 1 111 1 46 1 292 1 163 1 8 1 189 1 293 3 32 1 33 1 146 1 125 1 95 1 249 1 196 2 277 1 175 1 
0 1 39 1 41 1 256 2 182 1 156 2 236 1 282 1 63 1 204 1 20 1 238 1 111 1 46 1 163 1 8 1 189 1 293 2 32 1 33 1 125 1 95 1 249 1 196 2 175 1 
151 1 39 1 41 1 156 1 59 1 236 2 329 1 347 1 282 1 63 2 20 1 238 2 46 1 292 1 352 1 259 1 293 1 32 2 143 1 271 1 224 1 150 1 277 1 
0 1 39 1 41 1 202 1 256 2 156 1 59 1 236 1 282 1 204 1 63 1 20 1 238 1 64 1 110 1 111 1 46 1 292 1 163 1 8 1 189 1 293 1 32 1 146 1 125 1 249 1 
253 1 
229 1 56 1 39 1 41 2 326 1 347 1 329 1 283 1 282 1 20 2 349 1 66 1 46 2 113 1 7 1 259 1 48 1 335 2 27 2 336 1 212 1 246 2 214 1 12 1 310 1 341 1 319 1 53 1 364 1 171 1 128 1 224 1 99 1 150 2 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 27 2 93 1 246 2 326 1 12 1 283 1 341 1 364 1 66 1 171 1 7 1 48 1 335 1 
229 1 56 1 27 1 336 1 246 1 12 1 341 1 283 1 349 1 364 1 66 1 128 1 171 1 99 1 7 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 364 1 66 1 27 1 171 1 246 1 12 1 7 1 341 1 283 1 48 1 
229 1 56 1 27 1 336 1 246 1 12 1 341 1 283 1 349 1 364 1 66 1 128 1 171 1 99 1 7 1 48 1 
16 1 304 6 40 1 26 1 57 3 244 1 29 3 166 1 312 2 193 2 52 1 61 1 60 2 257 2 217 1 123 1 360 1 284 1 194 1 320 1 172 1 288 1 173 1 38 1 302 1 210 1 
304 14 102 1 3 1 57 6 60 1 257 2 136 2 288 2 47 1 210 11 261 2 140 3 10 1 243 3 26 2 245 1 264 1 244 1 29 8 166 11 312 1 193 4 317 1 318 1 248 1 360 2 123 2 194 4 320 2 97 1 321 1 38 2 173 1 
304 2 39 1 3 1 57 1 41 1 60 1 347 1 329 1 282 1 20 1 288 1 46 1 291 1 309 1 137 1 48 2 49 1 355 1 245 1 29 1 193 2 314 1 94 1 317 1 123 1 341 1 360 1 144 1 194 1 320 1 167 1 272 1 298 1 364 2 38 1 173 1 150 1 226 1 
39 2 3 1 41 3 329 2 282 2 284 1 136 2 185 2 88 2 45 2 288 3 46 3 137 1 48 3 49 1 244 3 245 1 193 6 94 1 341 1 194 7 97 2 298 2 302 1 150 1 16 1 304 20 102 4 57 10 61 1 60 2 257 8 347 2 20 3 309 1 210 7 261 2 163 1 26 3 355 2 29 10 120 2 166 7 312 4 313 1 217 1 317 1 360 3 123 3 361 2 320 3 167 2 270 1 364 3 169 1 172 1 173 3 38 3 226 2 
304 2 39 2 3 1 133 1 57 1 41 8 347 3 329 2 282 2 20 8 65 1 158 2 288 2 46 7 309 1 353 1 259 1 48 1 163 1 49 1 11 1 29 1 193 4 52 1 94 1 317 1 359 1 341 1 360 2 123 2 320 2 35 1 364 1 274 1 38 2 173 2 224 1 100 1 150 2 
304 3 57 2 257 1 136 1 288 1 309 1 210 1 261 1 48 1 26 1 245 1 244 1 213 1 29 1 166 1 312 1 193 2 94 1 247 1 360 1 123 1 341 1 194 1 320 1 97 1 364 1 38 1 173 1 252 1 
304 2 102 1 26 1 29 2 166 1 193 2 52 1 257 1 123 1 360 1 194 1 320 1 136 1 288 1 21 1 173 1 38 1 210 1 
25 1 304 2 244 1 57 2 166 1 312 1 193 2 52 1 257 1 123 1 360 1 194 1 320 1 97 1 288 1 173 1 38 1 210 1 
304 4 102 1 57 2 257 2 136 1 288 1 261 1 210 2 26 1 244 1 29 2 166 2 193 2 312 1 52 1 360 1 123 1 194 2 320 1 97 1 38 1 173 1 
304 2 102 1 26 1 29 2 166 1 193 2 257 1 123 1 360 1 194 1 320 1 136 1 65 1 288 1 21 1 173 1 38 1 210 1 
25 1 304 2 244 1 57 2 166 1 312 1 193 2 257 1 123 1 360 1 194 1 320 1 97 1 65 1 288 1 173 1 38 1 210 1 
304 4 102 1 57 2 257 2 136 1 65 1 288 1 261 1 210 2 26 1 244 1 29 2 166 2 193 2 312 1 360 1 123 1 194 2 320 1 97 1 38 1 173 1 
304 4 102 1 26 1 57 2 244 1 29 2 166 2 312 1 193 2 257 2 123 1 360 1 194 2 320 1 136 1 97 1 288 1 173 1 38 1 210 2 261 1 
304 2 39 1 3 1 57 1 41 1 60 1 329 1 347 1 282 1 20 1 45 1 288 1 46 1 48 1 355 1 29 1 193 2 317 1 123 1 360 1 320 1 167 1 298 1 364 1 173 1 38 1 150 1 226 1 
304 2 39 1 3 1 57 1 41 1 60 1 329 1 347 1 282 1 20 1 89 1 288 1 46 1 48 1 29 1 193 2 316 1 317 1 123 1 360 1 320 1 167 1 298 1 364 1 223 1 173 1 38 1 150 1 
304 4 102 1 57 2 257 2 136 1 288 1 261 1 210 2 26 1 245 1 244 1 29 2 166 2 193 2 312 1 360 1 123 1 194 2 320 1 97 1 38 1 173 1 
304 4 102 1 39 1 57 2 41 1 257 2 329 1 347 1 282 1 136 1 20 1 185 1 45 1 288 1 46 1 210 2 261 1 48 1 26 1 244 1 355 1 11 1 29 2 166 2 312 1 193 2 123 1 360 1 194 2 320 1 167 1 97 1 298 1 364 1 173 1 38 1 226 1 
304 3 102 1 57 1 257 1 136 1 288 1 309 1 261 1 210 1 48 1 26 1 244 1 245 1 265 1 29 2 166 1 193 2 94 1 247 1 360 1 123 1 341 1 194 1 320 1 97 1 364 1 38 1 173 1 252 1 
304 19 102 3 57 10 257 6 136 3 306 1 333 1 287 1 288 2 261 3 140 2 190 1 243 1 26 3 165 1 264 1 244 3 29 9 338 2 312 3 193 4 219 2 318 1 360 2 123 2 320 2 221 1 97 3 76 1 174 1 
176 1 304 26 102 2 57 12 279 2 257 4 237 1 136 3 157 1 306 2 333 1 287 2 288 3 23 1 261 3 140 2 243 2 26 3 244 2 165 1 29 14 30 1 338 1 312 2 193 6 219 4 360 3 123 3 318 2 13 1 320 3 97 2 76 1 174 1 
176 1 279 1 284 1 237 1 136 4 286 1 287 1 333 1 288 3 140 4 243 3 244 5 193 6 338 1 13 1 97 4 302 1 16 1 304 41 102 4 57 21 257 8 61 1 157 1 306 2 23 1 261 4 26 5 264 1 165 1 29 20 30 1 312 4 217 1 123 3 360 3 318 3 219 4 320 3 221 1 172 1 76 1 174 1 
176 1 16 1 304 38 102 3 57 18 279 2 61 1 257 7 284 1 237 1 136 4 157 1 286 1 306 2 333 1 287 1 288 4 23 1 261 4 140 4 243 3 26 5 165 1 264 1 244 4 29 20 30 1 338 1 312 4 193 8 217 1 219 4 318 3 360 4 123 4 13 1 320 4 221 1 97 3 172 1 76 1 302 1 174 1 
176 1 16 1 304 52 102 7 57 25 279 1 61 1 257 14 284 1 237 1 136 7 157 1 306 1 333 1 287 1 288 2 23 1 261 7 140 4 243 4 26 8 165 1 264 2 244 8 29 27 30 1 338 1 312 7 193 4 217 1 219 4 318 2 360 2 123 2 13 1 320 2 97 7 321 2 172 1 76 1 302 1 174 1 
205 1 116 1 332 1 70 1 300 1 130 1 115 1 260 1 124 1 200 1 
37 1 84 1 
205 1 82 1 70 1 358 1 6 1 300 1 130 1 124 1 200 1 
181 1 203 1 281 1 134 1 135 1 205 1 239 1 186 1 309 1 48 1 162 2 27 1 357 1 70 1 246 1 216 1 218 1 94 1 341 1 124 1 96 1 364 1 198 1 197 1 300 1 130 1 301 1 200 1 252 1 
181 1 203 1 281 1 134 1 135 1 205 1 239 1 186 1 309 1 48 1 162 2 27 1 357 1 70 1 246 1 216 1 218 1 94 1 341 1 124 1 96 1 364 1 198 1 197 1 300 1 130 1 301 1 200 1 252 1 
181 1 203 1 281 1 134 1 135 1 205 1 239 1 186 1 309 1 48 1 162 2 27 1 357 1 70 1 246 1 216 1 218 1 94 1 341 1 124 1 96 1 364 1 198 1 197 1 300 1 130 1 301 1 200 1 252 1 
222 1 295 1 138 1 
222 1 295 1 138 1 
14 1 339 1 
14 1 295 1 339 1 
42 1 303 1 
105 1 42 1 60 1 84 1 184 1 205 1 109 1 307 1 160 1 309 2 48 2 162 1 27 1 357 1 246 1 70 1 216 1 94 2 124 1 341 2 297 1 364 2 37 1 300 1 130 1 303 1 200 1 
222 1 138 1 
14 1 295 1 339 1 
80 1 304 2 39 1 305 1 3 1 133 1 57 1 41 2 347 1 329 1 282 1 20 2 86 1 158 2 288 1 46 2 353 1 48 2 245 1 29 1 142 1 193 2 317 1 341 2 123 1 360 1 320 1 364 2 38 1 173 1 15 1 
0 1 163 1 189 1 39 1 11 1 41 2 106 1 256 2 282 1 204 1 146 1 125 1 20 2 362 1 238 1 249 1 111 1 334 1 46 2 
0 1 163 1 189 1 39 1 41 1 256 2 282 1 204 1 146 1 125 1 20 1 238 1 249 1 147 1 111 1 334 1 46 1 
151 1 39 1 41 1 347 1 329 1 282 1 20 1 362 1 238 1 206 1 46 1 224 1 150 1 259 1 
0 1 163 1 189 1 39 1 41 1 106 1 256 2 282 1 204 1 146 1 125 1 20 1 362 1 238 1 249 1 111 1 334 1 46 1 
74 1 
40 1 208 1 180 1 310 1 22 1 319 1 342 1 
155 1 326 1 345 1 62 1 349 1 208 1 22 2 335 1 27 1 336 1 294 1 246 1 310 1 315 1 319 1 128 1 99 1 
39 4 180 1 41 3 326 3 83 2 329 3 282 3 136 2 285 2 88 2 90 2 46 3 335 5 91 2 11 1 191 1 244 2 336 4 246 5 342 1 296 2 97 2 250 2 99 4 150 1 152 2 201 1 255 6 344 1 155 12 345 6 347 10 349 4 20 3 208 2 159 1 113 2 351 1 22 8 261 2 68 2 26 2 27 5 214 1 310 8 121 2 319 9 126 1 34 2 167 3 273 6 129 3 128 4 78 2 
176 1 152 1 255 5 155 6 326 1 345 3 183 1 237 1 349 2 136 2 157 1 208 2 113 1 22 5 23 1 261 2 335 1 140 1 243 1 26 2 27 1 244 2 336 2 214 1 246 1 310 5 122 1 318 1 319 8 13 1 97 2 273 5 128 2 78 2 99 2 
16 1 152 1 203 1 135 1 349 1 240 1 309 1 48 1 26 2 27 1 244 1 336 1 246 1 310 2 31 1 218 1 94 1 341 1 319 2 96 1 364 1 128 1 172 1 78 2 197 1 302 1 99 1 252 1 
180 1 336 1 310 1 342 1 319 1 349 1 208 1 128 1 22 1 99 1 
152 1 26 2 244 2 255 5 155 10 310 5 345 5 319 5 136 2 88 1 97 2 273 5 78 2 22 5 261 2 
208 1 27 1 246 1 326 1 22 1 335 1 
39 3 41 4 344 2 326 2 4 1 347 2 329 2 282 2 349 2 20 4 308 1 46 4 113 2 351 1 24 1 259 1 335 4 139 1 118 1 27 3 337 1 212 1 336 2 214 2 246 3 310 2 319 2 53 1 167 1 128 2 224 1 99 1 150 2 227 1 
304 1 39 1 57 1 41 1 60 1 329 1 347 1 282 1 20 1 45 1 288 1 46 1 309 2 48 3 355 1 119 1 193 2 317 1 94 2 360 1 123 1 341 2 320 1 167 1 364 3 298 1 197 1 173 1 38 1 150 1 226 1 252 2 
255 2 336 1 155 4 214 1 310 2 345 2 61 1 319 1 349 1 208 2 273 2 128 1 113 1 22 4 99 1 
324 1 300 1 200 1 
116 1 328 1 300 1 303 1 200 1 
324 1 300 1 200 1 
324 1 300 1 200 1 
331 1 300 1 200 1 
331 1 300 1 200 1 
331 1 300 1 200 1 
300 1 200 1 
205 1 70 1 
16 1 304 8 102 1 26 1 244 1 57 4 29 4 279 1 312 2 193 4 61 1 257 3 217 1 123 2 360 2 284 1 320 2 172 1 288 2 302 1 
16 1 304 6 40 1 26 1 57 3 244 1 29 3 312 2 61 1 217 1 257 2 284 1 172 1 302 1 
230 1 304 4 102 1 26 1 57 2 244 1 29 2 312 1 193 2 257 2 123 1 360 1 320 1 136 1 97 1 288 1 261 1 
140 2 304 7 102 1 243 1 26 1 244 1 57 4 264 1 29 3 312 1 257 2 318 1 136 1 97 1 261 1 
16 2 132 1 304 23 102 4 57 12 279 2 61 1 257 9 284 1 136 2 288 2 47 1 261 2 140 2 26 3 243 2 264 1 244 3 29 11 312 5 193 4 217 1 123 2 360 2 320 2 97 2 321 1 172 1 302 2 
140 1 304 1 57 1 
304 1 243 1 29 1 
230 1 304 6 102 1 26 1 57 3 244 1 29 3 193 2 312 2 257 3 360 1 123 1 320 1 136 1 88 1 97 1 288 1 261 1 
176 1 304 12 102 1 57 6 257 2 237 1 136 2 157 1 288 1 23 1 261 2 140 1 243 1 26 2 165 1 244 2 29 6 193 2 312 1 318 1 360 1 123 1 13 1 320 1 97 2 
16 1 304 6 102 1 26 1 244 1 57 3 29 3 312 1 257 2 172 1 302 1 
16 1 132 1 304 3 102 1 57 2 29 1 279 1 312 1 193 2 257 2 217 1 123 1 360 1 284 1 320 1 288 1 302 1 
16 2 304 10 102 2 26 2 165 1 57 5 244 2 29 5 193 2 312 3 257 5 360 1 123 1 320 1 240 1 288 1 172 1 302 2 
304 2 102 1 26 1 165 1 29 2 193 2 257 1 123 1 360 1 320 1 136 1 288 1 
304 4 102 1 26 1 57 2 244 1 165 1 29 2 312 1 193 2 257 2 123 1 360 1 320 1 136 1 97 1 288 1 261 1 
16 1 132 1 304 3 102 1 57 2 165 1 29 1 279 1 193 6 312 1 257 2 123 3 360 3 320 3 221 1 288 3 302 1 
16 3 132 1 230 1 304 34 102 5 153 1 57 18 279 2 61 1 257 12 284 1 136 3 288 5 261 3 140 4 164 1 243 3 26 5 165 1 264 1 244 5 29 16 193 10 312 7 217 1 318 1 360 5 123 5 320 5 221 1 97 3 172 2 275 1 302 3 
16 1 304 8 57 4 61 1 257 2 284 1 157 1 288 1 140 1 26 1 243 1 244 1 165 1 29 4 193 2 312 2 217 1 318 1 360 1 123 1 320 1 172 1 302 1 
16 1 230 1 304 11 102 1 57 5 61 1 257 3 284 1 136 1 157 1 288 2 261 1 140 2 243 1 26 2 244 1 165 1 264 1 29 6 312 2 193 4 217 1 318 1 360 2 123 2 320 2 172 1 302 1 
176 1 16 1 230 1 304 19 102 1 57 10 279 1 61 1 257 4 284 1 237 1 136 2 157 1 288 3 23 1 261 2 140 1 243 1 26 3 165 1 244 3 29 9 193 6 312 3 217 1 318 1 360 3 123 3 13 1 320 3 97 2 172 1 302 1 
176 1 16 1 230 1 304 17 102 2 57 7 279 1 61 1 257 5 284 1 237 1 136 2 157 1 288 3 23 1 261 2 140 1 243 1 26 3 165 1 244 2 29 10 193 6 312 3 217 1 318 1 360 3 123 3 13 1 320 3 97 1 172 1 302 1 
16 1 304 8 57 4 61 1 257 2 284 1 157 1 288 1 140 1 26 1 243 1 244 1 165 1 29 4 193 2 312 2 217 1 318 1 360 1 123 1 320 1 172 1 302 1 
176 1 304 12 102 1 57 6 257 2 237 1 136 2 157 1 288 1 23 1 261 2 140 1 243 1 26 2 165 1 244 2 29 6 193 2 312 1 318 1 360 1 123 1 13 1 320 1 97 2 
176 1 16 1 230 1 304 18 102 2 57 8 279 2 61 1 257 5 284 1 237 1 136 2 157 1 288 4 23 1 261 2 140 1 243 1 26 3 165 1 244 2 29 10 193 8 312 3 217 1 318 1 360 4 123 4 13 1 320 4 97 1 172 1 302 1 
176 1 304 16 102 3 57 7 279 2 257 6 237 1 136 3 157 1 288 4 23 1 261 3 140 1 243 1 26 3 165 1 244 2 29 9 193 8 312 3 318 1 360 4 123 4 13 1 320 4 221 1 97 2 
16 3 304 7 102 3 26 1 57 4 244 1 29 3 312 3 217 1 257 6 284 2 172 1 302 3 
176 1 16 1 304 18 102 1 57 8 279 2 61 1 257 4 284 1 237 1 136 2 157 1 288 4 23 1 261 2 140 1 243 1 26 3 165 1 244 2 29 10 193 8 312 3 217 1 318 1 360 4 123 4 13 1 320 4 221 1 97 1 172 1 302 1 
229 1 364 1 299 1 60 1 225 1 341 1 48 1 
229 1 154 1 267 1 60 1 341 1 220 1 54 1 364 1 299 1 276 1 225 1 48 1 
20 1 39 1 40 1 41 1 46 1 224 1 347 1 329 1 150 1 282 1 259 1 
49 1 39 1 41 1 60 1 347 1 329 1 94 1 341 1 282 1 20 1 167 1 298 1 364 2 46 1 309 1 150 1 226 1 48 2 
39 1 41 1 344 1 60 1 329 2 347 3 282 1 20 1 112 1 90 1 46 1 309 2 48 2 49 1 218 1 94 1 341 2 34 1 167 2 364 2 298 1 79 1 226 1 
39 1 41 2 344 1 60 1 329 2 347 3 43 1 282 1 20 2 89 1 112 1 90 1 46 2 309 2 48 2 49 1 218 1 94 1 341 2 34 1 167 2 364 2 298 1 79 1 
81 1 39 1 41 3 344 1 347 4 329 1 43 1 282 1 20 3 208 1 90 1 289 1 46 3 22 1 335 1 91 1 27 2 246 2 121 1 34 1 167 1 129 1 150 1 
39 1 27 2 41 3 246 2 344 1 121 1 329 1 347 4 43 1 282 1 34 1 20 3 167 1 250 1 208 1 90 1 129 1 46 3 22 1 150 1 91 1 335 1 
20 1 39 1 35 1 41 1 46 1 282 1 
163 1 139 1 39 3 133 1 11 1 337 1 41 7 329 2 347 3 359 1 282 2 20 7 167 1 87 1 35 1 158 1 274 1 159 1 46 6 100 1 150 2 
16 1 304 6 39 1 57 3 41 1 61 1 60 2 257 2 347 1 329 1 282 1 284 1 86 1 20 1 185 1 45 1 288 2 46 1 309 1 210 1 48 2 49 1 26 1 244 1 245 1 11 1 355 1 29 3 166 1 120 1 312 2 193 4 217 1 94 1 123 2 341 1 360 2 194 1 320 2 167 1 298 1 364 2 172 1 38 2 173 2 302 1 226 1 
180 1 41 1 326 1 347 2 184 1 20 1 349 2 285 1 208 1 46 1 22 1 351 1 335 2 91 1 68 1 27 3 336 2 246 3 310 1 121 1 319 1 342 1 296 1 250 1 128 2 129 1 99 2 150 1 
39 2 11 1 201 1 41 2 121 1 329 1 347 2 282 1 20 2 167 1 35 1 159 1 46 2 
39 1 11 1 41 4 235 1 329 1 347 1 43 1 282 1 20 4 46 4 224 1 150 1 259 1 
139 1 39 2 337 1 41 2 344 1 4 1 329 1 347 1 282 1 20 2 167 1 169 1 46 2 227 1 
204 1 20 1 249 1 39 1 111 1 41 1 256 1 46 1 150 1 282 1 
163 1 20 2 39 1 133 1 11 1 41 2 46 2 142 1 347 1 329 1 282 1 
39 2 11 1 133 1 41 5 344 1 235 1 329 2 347 3 282 2 359 1 20 5 46 4 224 1 150 1 100 1 259 1 
39 2 11 1 133 1 41 5 344 1 235 1 329 2 347 3 282 2 359 1 20 5 46 4 224 1 150 1 259 1 199 1 
49 1 39 1 41 1 60 1 347 1 329 1 94 1 341 1 282 1 20 1 167 1 89 1 298 1 364 2 46 1 309 1 150 1 48 2 
139 1 39 2 337 1 41 1 344 1 329 1 347 1 282 1 20 1 167 1 87 1 159 1 46 1 
232 1 103 1 211 1 280 1 60 1 
268 1 184 1 56 1 232 1 242 1 103 1 211 1 27 1 215 1 280 1 246 1 145 1 
80 1 232 1 305 1 103 1 211 1 364 1 15 1 341 1 48 1 
268 1 232 1 242 1 
40 1 182 1 33 1 175 1 
293 1 182 1 156 1 59 1 292 1 33 1 175 1 
32 1 156 1 236 1 
2 2 343 1 293 3 117 1 254 1 202 1 182 1 156 3 59 1 292 1 33 1 175 1 
293 2 5 1 196 1 182 1 156 2 59 1 292 1 33 1 175 1 
189 1 293 1 50 1 354 1 202 1 256 1 59 1 156 1 204 1 292 1 175 1 
293 1 202 1 182 1 156 1 59 1 292 1 175 1 
293 1 202 1 182 2 156 1 59 1 292 1 33 1 
131 1 101 1 293 2 263 1 202 1 182 1 59 2 156 2 292 2 175 1 
293 3 354 1 202 1 182 1 59 1 156 3 33 1 149 1 196 2 195 1 292 1 251 1 175 2 
0 1 189 1 293 2 202 1 256 2 182 1 59 1 156 2 33 1 204 1 258 1 111 1 196 1 292 1 175 1 
293 4 92 1 354 1 202 1 182 1 59 2 156 4 33 1 5 1 196 2 195 1 292 2 175 2 
293 1 202 1 182 1 156 1 59 1 292 1 33 1 175 1 
2 1 293 4 354 1 117 1 254 1 182 2 156 4 59 1 33 2 363 1 196 2 195 1 292 1 175 3 
293 2 18 1 202 1 192 1 182 1 59 1 156 2 33 1 36 1 196 1 292 1 175 1 
2 2 293 3 254 1 117 2 202 1 59 1 156 3 182 1 33 1 108 1 292 1 175 1 
177 1 188 2 175 2 330 1 
293 1 209 1 202 1 156 1 59 1 292 1 
293 2 149 1 202 1 196 1 182 1 156 2 59 1 292 1 33 1 175 1 
178 1 
293 1 202 1 182 1 156 1 59 1 292 1 33 1 175 1 
2 1 293 3 149 1 202 1 196 1 182 1 156 3 59 1 292 1 33 1 175 1 
363 1 354 1 195 1 175 1 
182 1 175 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (133,267) 328 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (233,244) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (109,159,204) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (233,244) (233,244) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 331 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (109,159,204) (109,159,204) 45 234 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 331 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 113 66 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (133,267) (133,267) (179,305) 260 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 129 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (133,267) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (133,267) (133,267) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (233,244) (233,244) 247 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (133,267) 328 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 290 (256,327) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 290 (256,327) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 290 (17,67) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 290 (17,67) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 3 140 1 5 1 52 1 213 2 55 2 142 9 169 1 265 1 21 9 108 6 69 1 149 1 28 4 272 1 181 1 153 2 231 1 194 5 124 2 157 1 280 2 90 1 284 1 283 1 334 2 202 2 339 1 
0 3 140 1 5 1 52 1 213 2 55 2 142 9 169 1 265 1 21 9 108 6 69 1 149 1 28 4 272 1 181 1 153 2 231 1 194 5 124 2 157 1 280 2 90 1 284 1 283 1 334 2 202 2 339 1 
0 4 140 1 5 1 52 1 213 2 55 2 142 10 169 1 265 1 21 10 108 7 69 1 149 1 28 5 272 1 181 1 153 2 231 1 194 6 124 2 157 1 280 2 90 1 284 1 283 1 334 2 202 2 339 1 
0 2 140 1 5 1 52 1 213 2 55 2 142 7 169 1 265 1 21 7 108 4 69 1 149 1 28 3 272 1 181 1 153 2 231 1 194 4 124 1 157 1 280 2 90 1 284 1 283 1 334 2 202 2 
0 1 149 1 28 2 181 1 5 1 55 1 213 1 142 4 194 3 169 1 124 2 21 4 280 1 202 1 334 1 283 1 108 3 339 1 
149 1 153 1 140 1 115 1 55 1 213 1 142 2 163 1 121 1 194 1 169 1 21 2 157 1 283 1 334 1 202 1 
0 1 149 1 28 1 153 1 55 2 213 2 142 3 194 2 169 1 265 1 21 3 283 1 108 1 
0 3 69 1 149 1 28 4 181 1 153 1 5 1 52 1 55 2 213 2 257 1 142 9 194 5 195 1 169 1 124 2 265 1 21 9 280 1 202 1 334 1 283 1 108 7 339 1 
0 3 69 1 149 1 28 4 181 1 153 1 5 1 52 1 55 2 213 2 257 1 142 9 194 5 195 1 169 1 124 2 265 1 21 9 280 1 202 1 334 1 283 1 108 7 339 1 
240 1 331 1 118 1 
240 1 78 1 335 2 
154 2 131 2 198 1 217 2 146 2 79 2 81 2 
131 1 292 1 133 1 75 2 184 2 79 1 81 1 83 1 154 1 36 2 328 1 198 1 217 1 146 1 64 1 25 1 
154 1 233 1 131 1 198 1 217 1 146 1 79 1 81 1 
154 1 131 1 159 1 146 1 109 1 287 1 
154 1 131 1 217 1 146 1 79 1 109 1 81 1 
271 1 196 1 298 1 296 1 204 1 
196 2 180 1 240 1 298 1 296 1 74 1 118 1 204 2 
196 1 298 1 204 1 
154 1 233 1 131 1 196 1 296 1 198 1 217 1 146 1 79 1 244 1 81 1 204 1 
240 1 
196 2 180 1 240 1 298 1 296 1 118 1 54 1 204 2 
46 1 180 1 296 2 182 1 298 2 51 2 118 1 31 1 80 1 14 1 155 2 303 1 196 5 240 1 264 2 308 1 19 1 312 1 204 5 
331 1 
154 2 131 2 294 1 40 1 217 1 146 2 79 1 81 1 
154 1 36 1 131 1 292 1 238 1 75 1 184 1 217 1 146 1 79 1 32 1 
154 3 131 3 238 1 217 3 146 3 79 3 81 1 
154 1 131 1 217 1 146 1 79 1 
154 1 131 1 294 1 40 1 217 1 146 1 79 1 81 1 
154 2 131 2 238 1 40 1 217 2 146 2 79 2 32 1 81 1 
154 2 131 2 238 1 266 1 217 1 146 2 79 1 287 1 
154 1 131 1 238 1 217 1 146 1 79 1 32 1 
154 1 131 1 40 1 217 1 146 1 79 1 81 1 
36 1 292 1 75 1 184 1 
36 1 292 1 75 1 184 1 
85 1 156 1 304 1 41 1 173 1 200 1 190 1 223 2 
154 1 131 1 111 1 217 1 146 1 79 1 
154 5 131 5 238 2 319 1 40 1 266 1 217 4 146 5 32 1 79 4 340 1 81 1 287 1 
154 1 131 1 217 1 146 1 79 1 
253 1 315 1 
253 1 315 1 
293 1 101 1 
293 1 101 1 
293 1 101 1 
68 1 253 1 315 1 
68 1 253 1 315 1 
3 1 253 1 315 1 
293 1 112 1 137 1 253 2 101 1 315 2 
68 1 253 1 315 1 
253 1 141 1 315 1 
253 1 141 1 315 1 
253 1 141 1 315 1 
289 1 112 1 95 2 253 2 275 2 258 2 325 2 15 1 166 1 196 2 168 1 240 1 145 1 310 1 175 3 92 2 177 1 315 2 204 2 
289 1 131 2 3 1 321 1 96 1 95 1 253 1 275 1 79 2 258 1 325 1 154 2 167 1 196 1 123 1 18 1 217 2 282 1 146 2 175 1 43 1 315 1 204 1 
280 1 202 1 334 1 
163 1 202 1 334 1 
163 1 135 1 280 2 334 3 285 1 176 1 
163 1 135 1 277 1 280 1 334 2 285 1 
163 1 135 1 280 1 334 2 285 2 
46 2 298 1 296 4 254 1 7 1 51 1 6 2 53 1 259 1 14 1 61 1 167 1 264 1 311 1 107 1 312 3 148 2 270 1 321 1 180 1 78 1 116 2 118 1 155 1 196 5 89 1 123 1 240 2 39 1 335 3 203 1 204 5 
46 6 158 1 298 6 296 7 7 3 51 2 53 3 11 1 214 1 259 2 14 1 57 1 167 4 61 1 105 1 264 2 308 1 107 3 24 1 312 8 148 6 270 2 271 5 180 1 78 3 116 6 118 1 155 2 196 9 89 3 240 5 39 3 241 5 335 9 204 9 
46 2 296 2 254 1 7 1 51 1 6 1 53 1 259 1 167 1 264 1 308 1 107 1 312 3 148 2 270 1 78 2 116 2 118 1 155 1 196 3 89 1 240 3 39 1 335 4 203 1 204 3 
46 4 254 1 296 3 7 2 51 1 6 2 53 2 214 1 259 1 57 1 167 2 264 1 308 1 107 2 24 1 312 5 148 4 270 1 78 3 116 4 118 1 155 1 196 4 89 2 240 4 39 2 335 7 203 1 204 4 
331 1 268 1 42 1 
268 1 288 1 
211 1 
237 1 268 1 
16 1 237 1 178 1 268 3 42 2 91 1 
16 1 237 1 268 1 
185 1 268 1 
98 1 299 2 138 1 99 1 139 1 255 7 7 1 53 1 192 1 37 1 330 1 106 3 242 3 172 2 23 1 127 1 110 4 
98 1 299 2 138 1 99 1 139 1 255 7 7 1 53 1 192 1 37 1 330 1 106 3 242 3 172 2 23 1 127 1 110 4 
98 1 299 2 139 1 138 1 99 1 255 7 7 1 53 1 192 1 37 1 330 1 306 1 106 3 242 3 172 2 23 1 127 1 110 4 
130 1 207 1 134 1 98 5 139 1 99 2 138 2 299 5 255 31 7 4 53 4 165 4 173 1 106 15 172 3 107 3 23 1 110 16 223 2 222 1 150 1 324 1 85 1 235 3 37 1 192 2 89 3 330 1 39 3 41 1 242 10 199 1 200 1 127 2 
150 1 98 1 139 1 299 3 138 1 99 1 255 9 7 1 53 1 85 2 13 1 192 1 330 1 41 2 242 4 106 4 172 2 173 2 200 2 23 1 127 1 338 1 110 5 223 4 
213 1 55 1 302 1 142 2 12 1 163 1 169 1 103 1 21 2 174 1 108 1 176 1 224 1 149 1 322 1 75 1 153 1 274 1 184 1 117 1 230 1 120 1 36 1 38 1 194 1 279 1 280 1 202 1 283 1 334 2 
213 1 55 1 302 1 142 3 12 1 163 1 169 1 103 1 21 3 174 1 108 2 313 1 176 1 224 1 26 1 149 1 75 1 153 1 274 1 184 1 117 1 186 1 230 1 36 1 38 1 194 1 279 1 280 1 202 1 334 2 
224 1 149 1 75 1 153 1 184 1 274 1 230 1 186 1 117 1 302 1 142 2 163 1 12 1 36 1 194 1 169 1 279 1 21 2 280 1 174 1 202 1 334 2 108 2 313 1 176 1 
292 1 250 1 213 1 55 1 142 1 12 1 21 1 174 1 268 1 26 1 227 1 75 1 153 2 274 2 184 1 117 2 82 1 36 1 237 1 239 1 279 2 336 1 201 1 
213 1 55 1 302 1 142 1 12 1 163 1 103 1 21 1 174 1 176 1 224 1 322 1 75 1 153 1 274 1 184 1 117 1 186 1 230 1 36 1 38 1 279 1 280 1 202 1 283 1 334 2 
65 1 
131 1 45 1 292 2 46 1 251 1 159 1 298 2 51 1 12 1 14 1 264 1 174 1 268 1 146 1 312 1 109 1 270 1 320 1 180 1 227 1 75 2 184 2 154 1 119 1 234 1 36 2 155 1 237 1 122 1 196 2 281 1 201 1 287 1 204 2 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
131 1 45 1 320 1 180 1 298 1 159 1 54 1 154 1 234 1 119 1 196 2 146 1 109 1 204 2 287 1 
131 1 45 1 320 1 159 1 51 1 154 1 234 1 119 1 14 1 155 1 196 1 264 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
154 1 119 1 234 1 131 1 45 1 320 1 196 1 159 1 146 1 109 1 287 1 204 1 
131 1 45 1 320 1 159 1 51 1 154 1 234 1 119 1 14 1 155 1 196 1 264 1 146 1 109 1 287 1 204 1 
299 1 139 1 255 2 53 1 190 1 85 1 192 1 156 1 304 1 330 1 331 1 41 1 172 1 242 1 173 1 200 1 23 1 127 1 110 2 223 2 
113 1 255 2 30 1 190 1 235 1 85 1 165 1 304 1 41 1 173 1 106 1 200 1 110 1 66 1 223 2 
131 1 255 2 30 1 32 1 79 1 190 1 276 1 154 1 85 1 326 1 238 1 193 1 304 1 170 1 41 1 106 1 217 1 173 1 200 1 146 1 110 1 223 2 
131 1 292 1 133 1 255 1 260 1 304 1 305 1 173 1 217 1 106 1 267 1 146 1 223 2 75 1 184 1 30 1 79 1 32 1 190 1 154 1 85 1 36 1 238 1 326 1 41 1 200 1 
129 1 292 1 75 1 255 1 184 1 190 1 85 1 36 1 193 1 58 1 304 1 41 1 173 1 200 1 110 1 223 2 
131 1 255 2 50 1 7 1 53 1 304 1 173 1 217 1 106 1 107 1 146 1 110 1 223 2 30 1 79 1 81 1 190 1 154 1 85 1 89 1 40 1 39 1 41 1 200 1 
255 1 53 1 190 1 85 1 156 1 304 1 41 1 173 1 200 1 107 1 314 1 110 1 223 2 
255 1 7 1 190 1 85 1 84 1 156 1 304 1 89 1 41 1 173 1 106 1 200 1 223 2 
255 2 7 1 53 1 190 1 85 1 156 1 304 1 89 1 39 1 41 1 106 1 173 1 200 1 107 1 110 1 223 2 
255 1 53 1 190 1 85 1 58 1 304 1 41 1 173 1 200 1 107 1 314 1 110 1 223 2 
255 1 7 1 190 1 85 1 84 1 58 1 304 1 89 1 41 1 173 1 106 1 200 1 223 2 
255 2 7 1 53 1 190 1 85 1 58 1 304 1 89 1 39 1 41 1 106 1 173 1 200 1 107 1 110 1 223 2 
255 2 7 1 53 1 190 1 85 1 304 1 89 1 39 1 41 1 106 1 173 1 200 1 107 1 110 1 223 2 
36 1 292 1 133 1 75 1 184 1 
205 1 36 1 292 1 75 1 184 1 
255 2 7 1 30 1 53 1 190 1 85 1 304 1 89 1 39 1 41 1 106 1 173 1 200 1 107 1 110 1 223 2 
120 1 36 1 133 1 75 1 184 1 267 1 
131 1 255 2 7 1 53 1 304 1 173 1 217 1 106 1 107 1 146 1 110 1 223 2 30 1 79 1 81 1 190 1 191 1 154 1 85 1 89 1 40 1 39 1 41 1 200 1 
206 1 207 1 134 1 98 3 299 3 255 19 7 3 53 3 102 1 165 2 218 2 173 2 106 10 107 3 110 9 223 4 318 1 152 1 114 1 85 2 235 1 197 1 89 3 278 1 39 3 41 2 242 6 200 2 126 2 338 1 
246 1 206 2 134 2 98 2 299 2 255 26 7 2 53 3 212 1 165 2 218 1 106 12 173 3 107 3 110 14 223 6 71 1 150 2 152 2 273 1 114 1 35 1 85 3 235 2 197 1 89 2 278 1 39 3 41 3 242 4 200 3 126 4 337 1 338 1 
246 1 98 4 255 41 7 5 165 4 102 1 106 21 173 3 172 1 107 4 23 1 110 20 273 1 114 1 35 1 192 1 197 1 278 1 39 4 41 3 200 3 126 4 127 1 206 2 207 1 134 3 299 4 139 1 53 5 212 1 218 1 223 6 71 1 150 1 152 1 77 1 235 3 85 3 89 4 330 1 242 8 337 1 338 1 
246 1 206 2 207 1 134 3 98 3 139 1 299 4 255 38 7 4 53 5 212 1 102 1 165 4 218 1 172 1 173 4 106 18 107 4 23 1 110 20 223 8 71 1 150 2 273 1 152 1 77 1 114 1 35 1 85 4 235 3 192 1 197 1 89 3 330 1 278 1 39 4 41 4 242 7 200 4 126 4 127 1 337 1 338 1 
246 1 206 1 207 2 134 2 98 7 139 1 299 7 255 52 7 8 53 8 212 1 216 2 165 4 218 1 172 1 173 2 106 25 107 7 23 1 110 27 223 4 71 1 150 1 273 1 152 1 114 1 35 1 85 2 235 4 192 1 197 1 89 7 330 1 278 1 39 7 41 2 242 14 200 2 126 4 127 1 337 1 338 1 
44 1 15 1 112 1 95 1 253 1 275 1 177 1 258 1 315 1 325 1 
3 1 282 1 
316 1 95 1 253 1 275 1 189 1 258 1 315 1 161 1 325 1 
289 1 112 1 95 1 253 1 275 1 258 1 325 1 15 1 196 1 168 1 240 1 145 1 310 1 175 2 92 1 177 1 315 1 204 1 
289 1 112 1 95 1 253 1 275 1 258 1 325 1 15 1 196 1 168 1 240 1 145 1 310 1 175 2 92 1 177 1 315 1 204 1 
289 1 112 1 95 1 253 1 275 1 258 1 325 1 15 1 196 1 168 1 240 1 145 1 310 1 175 2 92 1 177 1 315 1 204 1 
68 1 60 1 137 1 
68 1 60 1 137 1 
243 1 141 1 
137 1 243 1 141 1 
96 1 18 1 
131 2 3 1 95 1 96 1 296 1 253 1 258 1 168 1 167 1 18 1 217 2 175 1 146 2 315 1 321 1 228 1 275 1 79 2 325 1 154 2 196 1 123 1 282 1 92 1 43 1 204 1 
68 1 60 1 
137 1 243 1 141 1 
154 2 131 2 225 1 48 1 300 1 146 2 
47 1 75 2 184 2 186 1 230 1 302 1 163 1 12 1 120 1 162 1 36 2 103 1 279 1 280 1 174 1 62 1 202 1 334 2 176 1 
209 1 75 1 184 1 186 1 230 1 302 1 163 1 162 1 12 1 36 1 103 1 279 1 280 1 174 1 202 1 334 2 176 1 
292 1 291 1 250 1 47 1 227 1 75 1 184 1 12 1 36 1 237 1 279 1 174 1 268 1 201 1 
47 1 75 1 184 1 186 1 230 1 302 1 163 1 162 1 12 1 36 1 103 1 279 1 280 1 174 1 62 1 202 1 334 2 176 1 
104 1 
46 1 240 1 331 1 312 1 118 1 31 1 80 1 
46 1 2 1 298 1 51 1 14 1 56 1 264 1 312 1 180 1 78 1 118 1 155 1 196 1 240 2 335 1 245 1 204 1 
248 2 7 2 256 2 12 3 16 3 14 4 262 1 264 4 20 2 174 4 268 10 107 2 270 2 29 1 179 2 180 3 184 3 185 2 116 6 118 2 31 1 120 1 36 3 196 5 39 2 125 2 281 1 42 2 288 3 204 5 292 1 46 8 298 5 51 4 53 2 312 9 220 2 148 6 317 1 70 2 72 2 75 3 151 2 78 6 229 1 80 1 155 4 237 3 88 1 89 2 329 2 240 8 335 12 91 1 
246 1 46 5 134 1 298 1 51 2 7 2 100 1 53 2 212 1 14 2 165 1 264 2 107 2 312 8 148 5 270 1 71 1 70 2 180 1 151 1 273 1 78 3 116 5 118 2 155 2 235 1 87 1 196 1 89 2 240 5 39 2 281 1 335 6 337 1 204 1 
131 1 247 1 46 1 51 1 7 1 53 1 14 1 264 1 217 1 312 2 146 1 70 2 79 1 81 1 154 1 233 1 155 1 192 1 86 1 196 1 330 1 198 1 127 1 244 1 204 1 
46 1 51 1 118 1 80 1 31 1 14 1 155 1 264 1 240 1 312 1 
46 5 70 2 151 1 78 5 116 5 7 2 53 2 89 2 329 1 240 5 39 2 107 2 335 10 312 5 148 5 
196 1 180 1 240 1 298 1 118 1 204 1 
292 2 46 2 208 1 251 1 252 1 298 4 51 2 12 2 164 1 16 1 14 1 261 1 264 2 308 1 174 3 268 2 312 2 317 1 270 2 29 2 180 2 227 1 75 4 184 4 187 1 155 2 36 4 237 2 122 1 196 3 281 2 201 1 286 1 204 3 
131 1 292 1 133 1 75 1 184 1 79 1 81 1 154 1 36 1 328 1 198 1 217 1 146 1 
46 2 270 1 78 2 116 2 51 1 118 2 14 1 155 1 264 1 240 4 172 1 335 4 312 1 281 1 148 2 
132 1 95 1 258 1 
132 1 95 1 258 1 
15 1 96 1 95 1 8 1 258 1 
132 1 95 1 258 1 
226 1 95 1 258 1 
226 1 95 1 258 1 
226 1 95 1 258 1 
95 1 258 1 
253 1 315 1 
150 1 98 1 299 2 139 1 255 8 7 1 53 1 85 2 192 1 330 1 41 2 172 1 106 4 242 3 173 2 200 2 23 1 127 1 110 4 223 4 
139 1 299 2 255 6 7 1 53 1 192 1 330 1 331 1 172 1 106 3 242 2 23 1 127 1 110 3 
98 1 299 1 255 4 7 1 53 1 34 1 85 1 89 1 39 1 41 1 106 2 242 2 173 1 200 1 107 1 110 2 223 2 
207 1 134 1 98 1 299 1 255 7 7 1 53 1 235 1 165 2 89 1 39 1 106 4 242 2 107 1 110 3 
207 1 98 4 297 1 139 1 299 5 255 23 7 3 53 3 165 2 216 1 172 1 106 12 173 2 107 2 23 1 110 11 223 4 150 2 113 1 235 2 85 2 192 2 89 2 330 1 39 2 41 2 242 9 200 2 127 2 
165 1 255 1 106 1 
235 1 255 1 110 1 
98 1 299 2 255 6 7 1 53 1 34 1 85 1 89 1 329 1 39 1 41 1 173 1 106 3 242 3 200 1 107 1 110 3 223 2 
246 1 134 1 98 1 299 1 255 12 7 2 53 2 212 1 165 1 106 6 173 1 107 2 110 6 223 2 71 1 273 1 235 1 85 1 89 2 39 2 41 1 242 2 200 1 337 1 338 1 
98 1 299 1 255 6 7 1 53 1 192 1 330 1 106 3 242 2 127 1 110 3 
150 1 98 1 297 1 299 1 139 1 255 3 85 1 192 1 41 1 242 2 106 2 173 1 200 1 23 1 127 1 110 1 223 2 
247 1 98 2 299 3 255 10 7 2 53 2 85 1 192 2 330 1 41 1 173 1 242 5 106 5 200 1 127 2 338 1 110 5 223 2 
98 1 255 2 53 1 85 1 41 1 173 1 242 1 200 1 107 1 338 1 110 2 223 2 
98 1 299 1 255 4 7 1 53 1 85 1 89 1 39 1 41 1 106 2 242 2 173 1 200 1 107 1 338 1 110 2 223 2 
150 1 297 1 98 1 299 1 255 3 85 3 102 1 192 1 41 3 106 2 173 3 242 2 200 3 127 1 338 1 110 1 223 6 
130 1 207 1 134 1 297 1 98 5 139 1 299 7 255 34 7 5 53 5 165 4 102 1 172 1 106 18 173 5 107 3 23 1 110 16 222 1 223 10 150 2 324 1 34 1 85 5 235 3 192 3 89 3 330 2 39 3 41 5 242 12 200 5 127 3 338 1 
134 1 139 1 299 2 255 8 7 1 53 1 165 1 172 1 106 4 173 1 23 1 110 4 223 2 235 1 85 1 192 1 330 1 41 1 242 2 200 1 337 1 127 1 338 1 
207 1 134 1 98 1 299 2 139 1 255 11 7 1 53 2 165 2 172 1 106 5 173 2 107 1 23 1 110 6 223 4 34 1 85 2 235 1 192 1 330 1 39 1 41 2 242 3 200 2 127 1 337 1 338 1 
246 1 134 1 98 1 139 1 299 3 255 19 7 3 53 3 212 1 165 1 172 1 106 10 173 3 107 2 23 1 110 9 223 6 71 1 150 1 273 1 34 1 235 1 85 3 192 1 89 2 330 1 39 2 41 3 242 4 200 3 127 1 337 1 338 1 
246 1 134 1 98 2 139 1 299 3 255 17 7 2 53 3 212 1 165 1 172 1 106 7 173 3 107 2 23 1 110 10 223 6 71 1 150 1 273 1 34 1 235 1 85 3 192 1 89 1 330 1 39 2 41 3 242 5 200 3 127 1 337 1 338 1 
134 1 139 1 299 2 255 8 7 1 53 1 165 1 172 1 106 4 173 1 23 1 110 4 223 2 235 1 85 1 192 1 330 1 41 1 242 2 200 1 337 1 127 1 338 1 
246 1 134 1 98 1 299 1 255 12 7 2 53 2 212 1 165 1 106 6 173 1 107 2 110 6 223 2 71 1 273 1 235 1 85 1 89 2 39 2 41 1 242 2 200 1 337 1 338 1 
246 1 134 1 98 2 139 1 299 3 255 18 7 2 53 3 212 1 165 1 172 1 106 8 173 4 107 2 23 1 110 10 223 8 71 1 150 2 273 1 34 1 85 4 235 1 192 1 89 1 330 1 39 2 41 4 242 5 200 4 127 1 337 1 338 1 
246 1 134 1 98 3 299 3 255 16 7 2 53 3 212 1 165 1 102 1 106 7 173 4 107 3 110 9 223 8 71 1 150 2 273 1 85 4 235 1 89 2 39 3 41 4 242 6 200 4 337 1 338 1 
98 3 139 2 299 3 255 7 7 1 53 1 192 3 330 1 106 4 242 6 23 1 127 3 110 3 
246 1 134 1 98 1 139 1 299 3 255 18 7 2 53 3 212 1 165 1 102 1 172 1 106 8 173 4 107 2 23 1 110 10 223 8 71 1 150 2 273 1 85 4 235 1 192 1 89 1 330 1 39 2 41 4 242 4 200 4 127 1 337 1 338 1 
154 1 131 1 27 1 266 1 146 1 287 1 
1 1 4 1 210 1 63 1 143 1 
12 1 36 1 237 1 292 1 227 1 331 1 75 1 184 1 174 1 268 1 201 1 
131 1 290 1 292 1 75 1 184 1 79 1 154 1 12 1 16 1 36 1 237 1 238 1 327 1 217 1 268 1 174 1 146 1 
131 1 290 1 29 1 75 1 184 1 79 1 154 1 12 1 16 1 36 1 237 1 238 1 327 1 217 1 268 1 174 1 146 1 
131 1 290 1 29 1 75 1 184 1 79 1 154 1 12 1 16 1 36 1 237 1 238 1 217 1 268 1 174 1 146 1 67 1 
292 1 298 1 12 1 16 1 17 1 20 1 268 4 174 1 29 1 72 1 75 3 323 1 184 3 183 1 185 1 118 1 36 3 237 1 196 2 240 1 42 1 288 1 204 2 
292 1 72 1 29 1 298 1 75 3 323 1 185 1 184 3 118 1 256 1 12 1 16 1 36 3 237 1 196 2 240 1 20 1 174 1 268 4 42 1 204 2 288 1 
12 1 36 1 295 1 75 1 184 1 174 1 
292 2 295 1 75 6 184 7 76 1 186 1 187 1 120 1 12 2 36 7 16 1 261 1 237 2 263 1 59 1 171 1 268 3 174 3 269 1 64 1 91 1 
154 1 131 1 238 1 217 1 146 1 79 1 
46 1 292 1 296 1 298 2 51 2 256 1 14 2 264 2 20 1 268 2 312 1 220 1 317 1 179 1 180 1 75 1 184 1 118 1 31 1 80 1 36 1 155 2 196 3 240 1 125 1 42 1 204 3 288 1 
295 1 75 2 184 2 120 1 12 1 36 2 16 1 237 1 262 1 268 2 174 2 42 1 91 1 
292 1 227 1 75 4 323 1 184 4 120 1 12 1 36 4 237 1 174 1 268 1 147 1 201 1 
29 1 208 1 252 1 75 2 184 2 187 1 12 1 36 2 16 1 261 1 237 1 268 1 174 2 93 1 
163 1 12 1 36 1 292 1 75 1 184 1 174 1 230 1 202 1 334 1 
12 1 120 1 36 2 237 1 171 1 49 1 75 2 184 2 174 1 268 1 186 1 
292 1 29 1 227 1 75 4 184 5 120 1 12 2 36 5 237 2 263 1 171 1 268 3 174 2 147 1 201 1 269 1 
292 1 29 1 227 1 75 4 184 5 120 1 12 2 36 5 237 2 263 1 171 1 22 1 268 3 174 2 147 1 201 1 
131 1 290 1 292 1 75 1 184 1 79 1 154 1 12 1 16 1 36 1 237 1 238 1 217 1 268 1 174 1 146 1 67 1 
29 1 75 1 184 1 76 1 187 1 12 1 36 1 16 1 261 1 237 1 268 1 174 2 91 1 
94 1 307 1 188 1 215 1 
94 1 196 1 296 1 97 1 307 1 9 1 188 1 215 1 341 1 204 1 
154 1 131 1 94 1 225 1 48 1 300 1 146 1 188 1 215 1 
9 1 188 1 341 1 
194 1 149 1 169 1 331 1 
194 1 149 1 169 1 21 1 213 1 55 1 142 1 
153 1 117 1 142 1 
236 1 194 1 149 1 169 1 21 3 140 2 283 1 10 1 213 1 55 1 33 1 142 3 
194 1 149 1 169 1 124 1 21 2 108 1 213 1 55 1 142 2 
28 1 181 1 55 1 213 1 142 1 194 1 21 1 280 1 283 1 334 1 202 1 
194 1 149 1 21 1 283 1 213 1 55 1 142 1 
149 2 169 1 21 1 283 1 213 1 55 1 142 1 
249 1 194 1 149 1 136 1 21 2 283 1 221 1 213 2 55 2 142 2 
0 1 69 1 149 1 28 1 52 1 55 1 213 1 142 3 194 2 169 1 21 3 283 1 108 2 
149 1 55 1 213 1 142 2 163 1 194 1 169 1 21 2 219 1 280 1 334 2 283 1 202 1 108 1 176 1 
0 1 149 1 28 1 55 2 213 2 142 4 194 2 169 1 124 1 21 4 283 1 108 2 339 1 
194 1 149 1 169 1 21 1 283 1 213 1 55 1 142 1 
0 1 149 2 28 1 140 1 232 1 55 1 213 1 33 1 142 4 236 1 194 3 169 2 21 4 108 2 
149 1 73 1 55 1 213 1 142 2 194 1 195 1 169 1 21 2 309 1 283 1 108 1 
236 1 194 1 149 1 169 1 332 1 21 3 140 2 283 1 213 1 55 1 33 2 142 3 
194 2 144 1 301 1 160 2 
21 1 283 1 213 1 55 1 128 1 142 1 
194 1 149 1 169 1 21 2 108 1 52 1 283 1 213 1 55 1 142 2 
333 1 
194 1 149 1 169 1 21 1 283 1 213 1 55 1 142 1 
149 1 140 1 52 1 55 1 213 1 142 3 194 1 169 1 21 3 108 1 283 1 
0 1 194 1 28 1 232 1 
194 1 149 1 

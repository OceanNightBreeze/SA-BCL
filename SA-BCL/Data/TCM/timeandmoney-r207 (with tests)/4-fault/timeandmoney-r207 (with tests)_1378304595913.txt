#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (103,140,155,196) (103,140,155,196) 218 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 12 3 180 1 278 1 196 2 103 1 236 1 92 1 94 1 239 2 118 1 155 2 140 3 
25 1 352 1 180 1 51 1 236 2 354 2 92 4 8 1 94 1 95 1 154 1 370 1 239 5 118 1 138 1 155 2 140 9 305 1 12 9 247 2 78 1 278 3 196 2 103 6 19 1 105 1 230 2 351 2 
25 1 352 1 180 1 51 1 236 2 354 2 92 4 8 1 94 1 95 1 154 1 370 1 239 5 118 1 138 1 155 2 140 9 305 1 12 9 247 2 78 1 278 3 196 2 103 6 19 1 105 1 230 2 351 2 
25 1 352 1 180 1 51 1 236 2 354 2 92 5 8 1 94 1 95 1 154 1 370 1 239 6 118 1 138 1 155 2 140 10 305 1 12 10 247 2 78 1 278 4 196 2 103 7 19 1 105 1 230 2 351 2 
25 1 352 1 180 1 51 1 236 2 354 1 92 3 8 1 94 1 95 1 154 1 370 1 239 4 118 1 155 2 140 7 305 1 12 7 247 2 78 1 278 2 196 2 103 4 19 1 105 1 230 2 351 2 
25 1 247 1 12 4 78 1 278 1 196 1 103 3 354 2 92 2 94 1 370 1 239 3 118 1 138 1 155 1 230 1 351 1 140 4 
25 1 12 2 247 1 305 1 196 1 362 1 236 1 94 1 95 1 239 1 118 1 241 1 155 1 73 1 140 2 351 1 
25 1 247 1 12 9 78 1 180 1 278 3 196 2 103 7 236 1 354 2 105 1 92 4 125 1 94 1 370 1 154 1 239 5 118 1 138 1 155 2 230 1 207 1 351 1 140 9 
25 1 247 1 12 9 78 1 180 1 278 3 196 2 103 7 236 1 354 2 105 1 92 4 125 1 94 1 370 1 154 1 239 5 118 1 138 1 155 2 230 1 207 1 351 1 140 9 
147 1 211 1 282 1 251 1 112 1 163 1 134 1 166 1 332 1 172 1 243 1 262 1 190 1 246 1 
244 1 
373 1 166 1 64 1 4 1 244 1 223 1 251 2 163 2 
14 1 279 1 4 2 234 2 223 1 251 5 325 1 163 5 165 1 166 2 64 1 53 1 299 1 107 1 358 1 244 1 188 2 156 2 177 1 
64 1 27 1 244 1 
227 1 244 1 161 2 
211 2 332 2 282 2 262 2 112 1 134 2 246 2 176 1 
211 2 111 2 270 1 6 1 353 1 112 1 113 1 134 3 298 1 332 2 54 1 74 2 360 1 157 1 246 2 302 1 142 1 77 1 11 1 58 1 304 1 101 2 102 2 282 2 200 1 82 1 39 1 341 1 124 1 365 1 315 1 348 1 174 1 206 1 65 2 262 3 176 1 
147 1 211 1 332 1 172 1 282 1 262 1 112 1 190 1 134 1 246 1 
211 1 308 1 251 1 7 1 134 1 163 1 64 1 343 1 35 1 172 1 244 1 274 1 262 1 372 1 
211 1 308 1 282 1 251 2 134 1 163 2 64 1 332 1 343 1 35 1 172 1 244 1 274 1 262 1 246 1 
166 1 342 1 4 1 251 1 163 1 
160 1 166 1 64 1 4 1 244 1 223 1 251 2 163 2 
4 1 251 1 163 1 
211 2 149 1 269 1 282 1 134 2 332 1 262 2 246 1 176 2 
331 1 150 1 144 1 
11 1 304 1 101 1 102 1 353 1 134 1 39 1 124 1 255 1 315 1 74 1 360 1 262 1 157 1 302 1 176 1 
27 1 176 1 
11 1 0 1 304 1 211 1 101 1 102 1 282 1 353 1 134 2 144 1 39 1 124 1 315 1 74 1 359 1 360 1 262 2 157 1 302 1 246 1 
0 1 211 3 332 1 282 3 262 3 134 3 246 3 176 1 
211 1 172 1 282 1 262 1 190 1 134 1 246 1 
211 1 332 1 149 1 172 1 269 1 282 1 262 1 134 1 246 1 
0 1 211 3 149 1 111 1 270 1 353 1 113 1 112 1 134 4 70 1 332 2 35 1 54 1 274 1 74 1 359 1 360 1 157 1 302 1 246 3 142 1 77 1 11 1 58 1 304 1 101 1 102 1 308 1 282 3 251 1 163 1 82 1 39 1 341 1 124 1 365 1 315 1 343 1 172 1 348 1 65 2 262 4 128 1 176 1 
0 1 211 2 282 1 7 1 262 2 134 2 246 1 176 1 114 1 
0 2 211 3 149 1 308 1 282 3 251 1 163 1 134 3 332 1 343 1 35 1 172 1 72 1 244 1 274 1 359 1 262 3 128 1 246 3 
0 1 211 2 149 1 282 2 134 2 144 1 331 1 332 1 262 2 246 2 
11 1 304 1 101 1 102 1 353 1 134 1 39 1 124 1 315 1 74 1 360 1 262 1 157 1 302 1 176 1 
304 1 101 1 102 1 353 1 293 1 134 1 39 1 124 1 315 1 215 1 74 1 262 1 157 1 302 1 176 1 
111 4 270 1 290 1 150 2 327 1 298 2 331 2 186 1 54 2 301 1 142 1 159 1 77 1 58 1 254 1 144 2 341 1 42 1 43 1 346 1 260 1 348 1 65 2 210 1 
211 1 172 1 274 1 282 1 262 1 139 1 134 1 246 1 
0 2 211 5 149 1 282 4 7 1 134 5 114 1 356 1 332 1 99 1 359 1 262 5 246 4 176 1 
211 2 172 1 282 2 139 1 262 2 190 1 134 2 246 2 
13 1 266 1 158 1 
195 1 178 1 13 2 242 1 88 1 158 2 
13 1 158 1 
13 1 158 1 
178 1 88 1 
178 1 88 1 
178 1 88 1 
13 1 179 1 158 1 
13 1 179 1 158 1 
13 1 179 1 158 1 
13 1 381 1 158 1 
13 1 381 1 158 1 
13 1 381 1 158 1 
13 2 143 2 2 2 267 2 5 2 251 2 183 1 163 2 329 1 185 1 380 1 237 1 238 3 272 1 216 1 242 1 187 2 244 1 158 2 
211 2 13 1 266 1 36 1 143 1 2 1 267 1 377 1 198 1 5 1 282 2 252 1 251 1 183 1 311 1 134 2 163 1 238 1 48 1 262 2 158 1 56 1 246 2 176 1 
247 2 106 1 241 1 71 2 230 1 
247 1 230 1 351 1 
247 1 241 1 351 1 
100 1 247 3 106 1 241 1 71 1 230 2 
247 2 106 1 241 1 71 1 230 1 291 1 
129 1 4 1 289 1 234 1 322 1 137 2 240 1 53 3 186 1 188 1 244 2 156 1 56 1 280 1 377 1 161 3 223 1 251 5 311 1 163 5 165 2 166 4 42 1 313 1 44 2 64 1 227 1 346 1 204 1 109 2 210 1 177 1 
129 2 4 6 234 2 30 1 153 1 137 6 240 2 53 8 186 3 244 5 188 2 156 2 300 1 377 4 309 1 161 9 223 1 251 9 163 9 165 6 166 7 42 3 313 1 44 6 167 5 64 1 342 5 257 1 227 3 346 3 204 3 107 1 209 1 210 3 177 1 
129 1 147 1 211 1 234 1 322 1 112 1 134 1 332 1 240 1 53 3 137 2 186 1 243 1 244 3 188 1 156 1 190 1 246 1 280 1 377 1 282 1 161 4 251 3 163 3 165 2 166 2 42 1 64 1 44 2 227 2 204 1 346 1 107 1 172 1 262 1 109 1 210 1 
129 1 234 1 322 1 137 2 240 1 53 3 186 1 244 2 188 1 156 1 280 1 377 1 309 1 161 4 251 2 163 2 165 2 166 1 42 1 44 2 227 2 204 1 346 1 107 1 109 1 210 1 
217 1 
304 1 52 1 27 1 
31 1 304 1 
304 1 315 1 
52 2 304 3 315 1 39 1 328 1 75 1 
304 1 315 1 39 1 
304 1 228 1 
220 1 111 7 222 1 224 1 68 1 327 3 91 1 42 1 298 4 168 1 32 2 347 1 98 1 54 3 10 1 264 1 210 1 159 2 
26 4 111 31 29 1 270 1 68 2 292 1 327 10 91 1 298 16 32 3 34 1 357 1 186 3 98 1 54 15 10 2 142 1 76 1 159 5 77 1 220 1 222 2 224 2 341 1 42 4 168 1 316 3 204 3 346 3 347 5 171 1 65 2 24 1 210 4 
111 9 270 2 68 1 292 1 327 4 91 1 298 5 32 2 98 1 54 4 10 1 142 2 159 3 77 2 220 1 222 1 199 1 224 1 341 2 42 1 347 1 87 1 65 4 210 1 
220 1 111 7 222 1 224 1 68 1 327 3 91 1 42 1 298 4 168 1 32 2 347 1 98 1 54 3 10 1 210 1 159 2 
220 1 111 7 222 1 224 1 68 1 327 3 91 1 42 1 298 4 168 1 32 2 347 1 98 1 54 3 10 1 210 1 159 2 
193 1 304 1 12 1 101 1 306 1 196 1 102 1 250 1 79 1 236 2 124 1 22 2 315 1 86 1 126 1 333 1 155 1 205 2 74 1 229 2 157 1 302 1 140 1 
233 1 90 1 236 1 94 1 241 1 155 1 74 1 55 1 157 1 140 1 302 1 277 1 100 1 12 1 247 2 101 1 102 1 196 1 197 1 201 1 22 1 205 1 230 1 229 1 351 1 319 1 
25 1 233 1 90 1 132 1 236 1 94 1 239 1 118 1 241 1 155 1 74 1 55 1 157 1 140 2 302 1 277 1 100 1 12 2 247 2 101 1 102 1 196 1 197 1 103 1 201 1 22 1 205 1 230 1 229 1 351 1 
25 1 233 1 236 1 239 1 118 1 241 1 155 1 74 1 55 1 157 1 140 3 302 1 277 1 100 1 12 3 247 2 101 1 102 1 196 1 197 1 281 1 103 2 201 1 22 1 126 1 205 1 230 1 229 1 351 1 319 1 
25 1 236 1 239 1 118 1 241 1 74 1 55 1 157 1 140 2 302 1 277 1 100 1 12 2 247 2 101 1 102 1 103 2 281 1 201 1 22 1 205 1 229 1 230 1 351 1 319 1 
276 1 
4 6 234 1 7 1 134 1 184 1 53 2 240 1 244 2 188 1 189 1 9 2 302 1 304 1 101 2 306 1 102 2 308 1 250 1 251 5 63 2 202 1 64 1 315 1 256 2 203 2 262 1 211 1 212 1 110 1 268 1 326 2 330 1 116 4 35 1 74 2 274 1 156 1 157 1 372 1 340 2 161 2 223 3 284 1 163 5 83 2 38 1 165 2 124 2 84 1 226 1 343 1 227 2 172 1 287 1 177 1 
373 1 211 1 212 1 4 2 308 1 223 1 251 3 284 1 7 1 163 3 134 1 184 1 84 1 256 1 116 2 343 1 35 1 172 1 287 1 274 1 262 1 372 1 
373 1 211 1 212 1 4 1 340 1 308 1 223 1 251 3 284 1 7 1 163 3 134 1 184 1 84 1 64 1 116 3 343 1 35 1 172 1 244 1 287 1 274 1 262 1 372 1 
211 1 212 1 4 2 7 1 134 1 184 1 116 3 35 1 274 1 244 1 372 1 373 1 308 1 340 1 223 1 284 1 251 3 163 3 84 1 64 1 343 1 256 1 203 1 172 1 287 1 262 1 
4 7 234 1 7 1 134 1 184 1 355 1 53 1 97 1 244 5 188 1 9 2 303 1 308 1 251 5 63 2 64 5 256 4 203 4 262 1 211 1 212 1 110 1 326 2 330 1 116 6 35 1 274 1 156 1 372 1 373 1 340 4 223 3 284 1 163 5 83 2 165 1 84 1 379 1 343 1 227 2 172 1 287 1 231 1 177 1 
4 4 234 1 7 1 134 1 184 1 53 1 188 1 244 2 9 2 308 1 251 4 63 2 64 1 256 2 203 2 262 1 211 1 110 1 212 1 326 2 330 1 116 4 35 1 274 1 156 1 372 1 340 2 161 2 223 2 284 1 163 4 83 2 165 1 84 1 226 1 343 1 227 2 172 1 287 1 177 1 
211 1 110 1 212 1 4 4 234 1 7 1 326 2 134 1 184 1 355 1 330 1 116 4 53 1 35 1 244 1 188 1 274 1 156 1 9 2 372 1 303 1 340 2 308 1 223 2 284 1 251 4 163 4 83 2 165 1 63 2 84 1 379 1 64 1 256 2 343 1 203 2 227 2 172 1 287 1 262 1 177 1 
211 1 110 1 212 1 4 4 234 1 7 1 326 2 134 1 184 1 355 1 330 1 116 4 53 1 35 1 244 1 188 1 274 1 156 1 9 2 372 1 303 1 340 2 308 1 223 2 284 1 251 4 163 4 83 2 165 1 63 2 84 1 379 1 64 1 256 2 343 1 203 2 227 2 172 1 287 1 262 1 177 1 
265 2 211 1 212 1 4 4 234 1 7 1 134 1 184 1 330 1 297 1 116 4 214 1 53 1 35 1 244 1 188 1 274 1 156 1 372 1 303 1 340 2 308 1 223 2 161 2 284 1 251 4 163 4 83 2 165 1 63 2 84 1 64 1 256 2 343 1 203 2 172 1 89 2 287 1 261 1 262 1 177 1 
211 1 110 1 212 1 4 5 234 1 7 1 326 2 134 1 184 1 355 1 330 1 116 5 53 1 35 1 97 1 244 1 188 1 274 1 156 1 9 2 372 1 303 1 308 1 340 3 223 2 284 1 251 4 163 4 83 2 165 1 63 2 84 1 379 1 64 1 343 1 256 3 227 2 203 3 172 1 287 1 262 1 177 1 
211 1 110 1 212 1 4 5 234 1 7 1 326 2 134 1 184 1 355 1 330 1 116 5 53 1 35 1 97 1 244 1 188 1 274 1 156 1 9 2 372 1 303 1 308 1 340 3 223 2 284 1 251 4 163 4 83 2 165 1 63 2 84 1 379 1 64 1 343 1 256 3 227 2 203 3 172 1 287 1 262 1 177 1 
4 4 234 1 7 1 134 1 184 1 53 1 188 1 244 1 308 1 251 4 63 2 64 1 256 2 203 2 261 1 262 1 265 2 211 1 212 1 330 1 116 4 35 1 274 1 156 1 372 1 340 2 161 2 223 2 284 1 163 4 83 2 165 1 84 1 226 1 343 1 172 1 287 1 89 2 177 1 
0 1 211 1 111 2 290 1 270 2 132 1 6 2 294 1 134 1 298 1 335 1 74 7 54 1 157 2 246 1 302 2 191 1 142 2 77 2 304 3 58 2 101 8 102 8 306 1 250 1 282 1 283 1 363 1 124 2 341 2 365 1 315 2 344 1 348 2 206 1 262 1 65 4 263 1 319 1 
211 1 149 1 111 3 270 1 327 1 150 1 134 1 331 1 298 1 332 1 186 1 54 2 246 1 159 1 142 1 77 1 58 1 282 1 144 1 341 1 42 1 45 1 204 1 346 1 348 1 65 2 262 1 288 1 210 1 
27 1 111 6 270 1 290 1 327 2 150 1 91 1 331 1 298 3 32 1 98 1 54 3 10 1 142 1 159 2 77 1 58 1 220 1 222 1 144 1 341 1 42 1 348 1 65 2 210 1 176 2 
26 3 111 14 29 1 270 2 327 2 150 11 298 8 331 4 186 1 54 6 141 1 159 1 142 2 77 2 58 1 307 1 144 11 341 2 365 1 42 1 169 1 316 3 347 1 204 2 346 2 318 1 348 2 206 1 65 4 24 1 288 1 176 1 210 2 
0 1 211 1 111 2 270 1 353 1 134 2 331 1 298 1 74 1 54 1 359 1 360 1 157 1 302 1 246 1 142 1 11 1 77 1 304 1 58 1 101 1 249 1 102 1 282 1 104 1 39 1 124 1 341 1 255 1 365 1 315 1 47 1 348 1 206 1 262 2 65 2 288 1 176 1 
0 1 353 2 134 3 91 1 298 10 186 2 98 1 54 10 359 1 360 2 10 1 246 1 302 2 142 3 11 2 58 3 304 2 101 3 102 3 310 2 144 7 365 1 314 1 315 2 204 2 258 2 259 1 206 1 65 6 262 3 319 1 210 3 211 1 111 20 213 2 270 3 113 2 150 7 327 8 331 7 32 1 74 3 157 2 159 4 77 3 220 1 222 1 282 1 39 2 225 2 124 1 341 3 42 3 346 2 347 4 127 1 348 3 288 1 176 2 
77 1 58 1 111 2 290 1 270 1 327 1 150 1 144 1 341 1 331 1 298 2 347 1 346 1 348 1 65 2 301 1 142 1 210 1 
77 1 58 1 111 2 290 1 270 1 327 1 150 1 254 1 144 1 341 1 331 1 42 1 186 1 348 1 54 2 65 2 159 1 142 1 
77 1 58 1 111 4 290 1 270 1 327 2 150 2 144 2 341 1 42 1 331 2 298 2 347 1 204 1 346 1 186 1 54 2 348 1 65 2 159 1 142 1 210 1 
77 1 58 1 111 2 270 1 327 1 150 1 144 1 341 1 331 1 298 2 347 1 346 1 335 1 348 1 65 2 301 1 142 1 210 1 
77 1 58 1 111 2 270 1 327 1 150 1 254 1 144 1 341 1 331 1 42 1 186 1 335 1 348 1 54 2 65 2 159 1 142 1 
77 1 58 1 111 4 270 1 327 2 150 2 144 2 341 1 42 1 331 2 298 2 347 1 204 1 346 1 186 1 335 1 54 2 348 1 65 2 159 1 142 1 210 1 
77 1 58 1 111 4 270 1 327 2 150 2 144 2 341 1 42 1 331 2 298 2 347 1 204 1 346 1 186 1 54 2 348 1 65 2 159 1 142 1 210 1 
111 2 270 1 353 1 113 1 134 1 298 1 74 1 54 1 360 1 157 1 302 1 142 1 11 1 77 1 304 1 58 1 101 1 102 1 39 1 124 1 341 1 365 1 315 1 348 1 206 1 262 1 65 2 176 1 
320 1 111 2 270 1 353 1 293 1 134 1 298 1 215 1 74 1 54 1 157 1 302 1 142 1 77 1 304 1 58 1 101 1 102 1 39 1 124 1 341 1 365 1 315 1 348 1 206 1 262 1 65 2 176 1 
77 1 58 1 111 4 270 1 327 2 150 2 144 2 341 1 42 1 331 2 298 2 347 1 204 1 346 1 186 1 54 2 348 1 65 2 288 1 159 1 142 1 210 1 
111 4 213 1 270 1 132 1 353 1 113 1 327 2 150 2 134 1 331 2 298 2 186 1 54 2 74 1 360 1 157 1 302 1 159 1 142 1 11 1 77 1 304 1 58 1 101 1 102 1 144 2 39 1 341 1 42 1 315 1 347 1 346 1 204 1 348 1 262 1 65 2 210 1 
211 1 149 1 111 3 270 1 327 1 134 1 150 1 298 2 331 1 332 1 186 1 54 1 246 1 142 1 77 1 58 1 282 1 144 1 341 1 42 1 347 1 204 1 346 1 348 1 65 2 262 1 208 1 288 1 210 1 
148 2 181 1 26 2 111 19 29 1 368 1 270 2 133 1 327 6 298 9 186 3 54 10 275 2 159 3 142 2 77 2 248 1 37 1 199 1 341 2 42 3 316 1 317 1 204 3 346 3 347 3 65 4 24 1 350 1 210 3 
148 1 181 1 26 2 111 26 131 1 368 2 29 2 270 3 292 2 327 4 298 14 117 1 186 2 54 12 275 4 159 2 142 3 77 3 57 1 37 1 162 1 199 1 341 3 42 2 316 2 46 1 347 2 317 2 204 3 346 3 232 1 65 6 350 1 210 3 
181 1 131 1 292 1 91 1 298 20 186 4 98 1 54 21 10 1 142 3 57 1 248 1 199 1 20 1 316 3 204 4 317 2 65 6 24 1 210 5 148 1 26 4 111 41 368 1 29 3 270 3 327 8 117 1 32 1 275 4 159 4 77 3 37 1 220 1 222 1 162 1 341 3 42 5 347 4 346 4 46 1 232 1 350 1 
148 1 181 1 26 4 131 1 111 38 29 3 368 1 270 4 292 2 327 7 91 1 298 20 32 1 117 1 186 3 98 1 54 18 275 4 10 1 159 4 142 4 57 1 77 4 248 1 220 1 37 1 222 1 162 1 199 1 20 1 341 4 42 4 316 3 46 1 317 2 204 4 346 4 347 3 232 1 65 8 24 1 350 1 210 5 
148 1 181 1 26 4 131 1 111 52 29 2 368 1 270 2 292 1 327 14 91 1 298 27 32 1 117 1 186 7 98 1 54 25 275 4 10 1 141 2 159 7 142 2 57 1 77 2 220 1 37 1 222 1 162 1 199 1 341 2 42 8 316 4 46 1 317 1 204 7 346 7 347 7 232 1 65 4 24 2 350 1 210 8 
13 1 237 1 143 1 267 1 2 1 216 1 242 1 376 1 5 1 158 1 
266 1 36 1 
312 1 13 1 143 1 267 1 2 1 49 1 378 1 5 1 158 1 
13 1 143 1 2 1 267 1 5 1 251 1 183 1 163 1 185 1 380 1 237 1 238 2 272 1 216 1 242 1 187 1 244 1 158 1 
13 1 143 1 2 1 267 1 5 1 251 1 183 1 163 1 185 1 380 1 237 1 238 2 272 1 216 1 242 1 187 1 244 1 158 1 
13 1 143 1 2 1 267 1 5 1 251 1 183 1 163 1 185 1 380 1 237 1 238 2 272 1 216 1 242 1 187 1 244 1 158 1 
195 1 179 1 66 1 
195 1 179 1 66 1 
286 1 381 1 
195 1 286 1 381 1 
48 1 252 1 
211 2 266 1 267 1 2 1 5 1 134 2 115 1 238 1 187 1 158 1 56 1 246 2 13 1 143 1 36 1 377 1 198 1 282 2 251 1 252 1 163 1 311 1 166 1 380 1 48 1 262 2 176 1 
179 1 66 1 
195 1 286 1 381 1 
211 2 111 2 270 1 6 2 67 1 134 2 298 1 136 1 54 1 74 2 157 1 302 1 142 1 338 1 77 1 304 1 58 1 101 2 102 2 363 1 341 1 365 1 315 1 344 1 146 1 348 1 206 1 262 2 65 2 288 1 349 1 
304 1 122 1 101 1 3 1 102 1 306 1 250 1 124 1 22 1 315 1 333 1 74 1 157 1 302 1 
100 1 247 2 219 1 233 1 122 1 101 1 102 1 201 1 22 1 241 1 336 1 230 1 74 1 157 1 351 1 302 1 319 1 277 1 
100 1 247 2 219 1 233 1 122 1 101 2 102 2 132 1 201 1 22 1 241 1 336 1 230 1 74 2 157 1 351 1 302 1 319 1 277 1 
100 1 247 2 219 1 233 1 101 1 102 1 375 1 201 1 22 1 241 1 230 1 74 1 157 1 351 1 302 1 319 1 277 1 
40 1 
14 1 234 1 165 1 64 1 53 1 299 1 188 1 244 1 156 1 177 1 
161 10 225 1 151 2 165 5 42 2 44 5 204 2 346 2 137 5 227 5 53 5 186 2 244 5 108 1 210 2 
64 1 4 1 244 1 223 1 251 1 163 1 
4 4 234 2 268 2 324 1 33 1 240 2 53 2 188 2 74 4 156 2 157 3 302 2 337 1 374 1 304 2 101 4 102 4 306 1 16 2 250 1 223 2 251 3 253 1 163 3 39 1 38 1 164 1 124 2 165 2 202 1 315 2 107 1 173 1 177 1 
64 1 14 1 53 1 299 1 27 1 244 1 165 1 
110 1 4 1 234 1 326 1 53 1 188 1 244 2 156 1 9 1 161 1 223 1 251 1 163 1 165 1 64 1 227 1 177 1 
4 5 234 4 132 1 93 1 52 2 53 9 240 2 137 6 299 1 186 2 188 4 244 8 302 3 304 10 14 1 101 3 102 3 16 1 18 2 251 5 364 2 64 2 315 3 204 2 108 2 210 2 367 2 268 1 151 2 328 1 31 3 369 2 74 3 156 4 157 4 119 1 339 2 221 2 223 3 161 12 163 5 164 1 39 3 225 2 124 1 165 8 42 2 44 6 345 1 343 2 227 6 346 2 228 2 177 4 
26 2 4 1 268 1 131 1 234 2 29 1 151 5 117 1 240 1 137 8 53 13 96 1 186 4 273 1 188 2 244 7 156 2 141 1 57 1 162 1 223 1 161 10 251 1 163 1 165 8 42 4 64 2 44 8 316 2 227 5 204 4 346 4 232 1 108 1 24 1 177 2 210 4 
147 1 211 1 234 1 112 1 134 1 151 2 91 1 332 1 53 2 243 1 188 1 156 1 10 1 190 1 246 1 15 1 222 1 282 1 251 1 163 1 165 2 379 1 42 1 172 1 262 1 108 1 177 1 210 2 
211 2 111 1 270 1 353 1 112 1 113 1 134 3 332 2 54 1 74 1 360 1 157 1 246 2 302 1 142 1 77 1 11 1 304 1 58 1 101 1 102 1 282 2 82 1 39 1 341 1 124 1 365 1 315 1 348 1 65 2 262 3 176 1 
234 1 268 1 161 4 165 2 44 2 64 2 32 1 137 2 227 2 240 1 53 1 188 1 244 4 156 1 177 1 
135 1 267 1 216 1 5 1 252 1 
121 1 267 1 5 1 
121 1 267 1 5 1 
121 1 267 1 5 1 
267 1 5 1 371 1 
267 1 5 1 371 1 
267 1 5 1 371 1 
267 1 5 1 
13 1 158 1 
77 1 15 1 111 10 222 2 270 1 199 1 327 5 91 1 341 1 298 5 42 2 347 2 54 5 65 2 10 2 142 1 159 3 210 2 
77 1 111 2 270 1 199 1 327 1 341 1 298 2 346 1 347 1 65 2 142 1 210 1 
77 1 111 4 270 1 199 1 327 2 341 1 42 1 298 2 204 1 346 1 347 1 186 1 54 2 65 2 159 1 142 1 210 1 
77 3 248 1 111 3 222 1 270 3 199 1 292 1 327 2 341 3 41 1 298 1 347 1 54 2 65 6 10 1 142 3 159 1 
26 4 111 34 29 1 270 5 292 2 327 12 91 2 295 1 298 16 32 1 34 1 186 3 98 1 54 18 10 3 76 1 142 5 159 7 77 5 220 1 248 1 222 3 199 1 341 5 41 1 42 5 316 3 204 3 346 3 347 5 171 1 65 10 24 1 210 5 
77 2 220 1 111 8 222 1 270 2 292 1 327 3 91 1 341 2 42 1 298 4 32 1 347 1 98 1 54 4 65 4 10 1 210 1 159 2 142 2 
42 1 298 3 32 1 220 1 111 6 27 1 222 1 98 1 54 3 10 1 327 2 91 1 210 1 159 2 
77 1 111 4 270 1 327 2 295 1 341 1 42 1 298 2 204 1 346 1 347 1 186 1 54 2 65 2 159 1 142 1 210 1 
26 2 111 7 29 1 327 2 42 1 298 3 316 1 204 1 346 1 347 1 186 1 54 4 24 1 159 1 210 1 
26 2 111 23 270 2 292 2 327 9 91 1 298 11 32 1 186 2 98 1 54 12 10 2 159 5 141 1 142 2 77 2 220 1 222 2 341 2 41 1 42 3 316 2 347 4 346 2 204 2 318 1 65 4 24 1 210 3 
26 1 111 1 54 1 
298 1 316 1 111 1 
77 1 111 6 270 1 327 3 295 1 225 1 341 1 298 3 42 1 204 1 346 1 347 1 186 1 54 3 65 2 142 1 210 1 159 2 
26 1 111 12 131 1 29 1 270 1 327 2 298 6 117 1 186 2 54 6 142 1 159 1 77 1 57 1 199 1 162 1 341 1 42 2 316 1 347 1 204 2 346 2 232 1 65 2 210 2 
111 6 222 1 327 2 91 1 298 3 42 1 347 1 54 3 10 1 210 1 159 1 
77 1 220 1 111 3 222 1 270 1 292 1 327 2 341 1 41 1 298 1 347 1 98 1 54 2 10 1 65 2 159 1 142 1 
26 1 111 8 131 1 29 1 270 1 327 2 91 1 298 4 32 1 98 1 54 4 10 1 142 1 159 2 77 1 220 1 222 1 199 1 341 1 42 1 316 1 65 2 210 1 
26 2 111 11 131 1 29 1 270 2 327 3 91 1 295 1 298 6 32 1 98 1 54 5 10 1 159 2 142 2 77 2 220 1 222 1 199 1 341 2 42 1 316 1 204 1 346 1 347 1 65 4 24 1 210 2 
26 1 111 19 131 1 29 1 270 3 292 1 327 4 91 1 295 1 298 9 32 1 117 1 186 2 98 1 54 10 10 1 142 3 159 3 77 3 57 1 220 1 222 1 162 1 199 1 341 3 42 3 316 1 347 1 204 2 346 2 232 1 65 6 210 3 
26 1 111 17 131 1 29 1 270 3 292 1 327 5 91 1 295 1 298 10 32 1 117 1 186 1 98 1 54 7 10 1 142 3 159 3 77 3 57 1 220 1 222 1 199 1 162 1 341 3 42 2 316 1 347 2 204 2 346 2 232 1 65 6 210 3 
26 1 111 8 131 1 29 1 270 1 327 2 91 1 298 4 32 1 98 1 54 4 10 1 142 1 159 2 77 1 220 1 222 1 199 1 341 1 42 1 316 1 65 2 210 1 
26 1 111 12 131 1 29 1 270 1 327 2 298 6 117 1 186 2 54 6 142 1 159 1 77 1 57 1 199 1 162 1 341 1 42 2 316 1 347 1 204 2 346 2 232 1 65 2 210 2 
26 1 111 18 131 1 29 1 270 4 292 2 327 5 91 1 295 1 298 10 32 1 117 1 186 1 98 1 54 8 10 1 142 4 159 3 77 4 57 1 220 1 222 1 162 1 199 1 341 4 42 2 316 1 347 2 204 2 346 2 232 1 65 8 210 3 
26 1 111 16 131 1 29 1 270 4 292 2 327 6 298 9 117 1 186 2 54 7 142 4 159 3 77 4 57 1 248 1 162 1 199 1 341 4 42 2 316 1 347 3 204 3 346 3 232 1 65 8 210 3 
220 2 111 7 222 3 327 6 91 1 42 1 298 3 347 3 98 1 54 4 10 3 159 3 210 1 
26 1 111 18 131 1 29 1 270 4 292 2 327 4 91 1 298 10 32 1 117 1 186 1 98 1 54 8 10 1 142 4 159 3 77 4 57 1 220 1 248 1 222 1 162 1 199 1 341 4 42 2 316 1 347 1 204 2 346 2 232 1 65 8 210 3 
211 1 262 1 7 1 134 1 21 1 176 1 114 1 
194 1 211 1 81 1 7 1 134 1 21 1 296 1 114 1 152 1 262 1 361 1 176 1 
304 1 101 4 102 4 306 1 28 1 250 1 132 1 124 1 315 1 74 4 120 1 157 1 302 1 
304 1 374 1 101 2 102 2 16 1 324 1 39 1 315 1 33 1 173 1 127 1 74 2 157 2 302 1 
247 1 101 1 241 1 102 1 74 1 157 1 351 1 302 1 277 1 124 1 
304 1 101 2 102 2 132 1 315 1 344 1 146 1 74 2 157 1 302 1 319 1 
304 3 101 5 306 1 102 5 16 1 250 1 132 1 283 1 124 1 315 2 344 1 74 4 120 1 263 1 157 2 302 2 
304 3 101 5 306 1 102 5 16 1 250 1 132 1 283 1 124 1 315 2 344 1 74 4 245 1 120 1 157 2 302 2 
304 1 315 1 101 1 306 1 102 1 27 1 250 1 74 1 157 1 302 1 124 1 
0 1 11 1 304 1 211 1 101 1 102 1 282 1 353 1 134 2 39 1 124 1 315 1 74 1 262 2 157 1 246 1 302 1 176 1 
0 1 11 1 304 3 211 2 101 1 102 1 308 1 16 1 282 1 353 1 134 2 39 2 369 1 315 2 172 1 228 1 274 1 74 1 262 2 157 1 246 2 302 1 176 1 
0 1 211 2 28 1 353 1 293 1 134 2 369 1 74 2 274 1 157 1 302 1 246 2 304 3 101 2 102 2 308 1 16 1 282 1 39 2 315 2 172 1 228 1 262 2 176 1 
304 4 101 3 102 3 4 1 28 1 16 1 251 2 60 1 163 2 39 1 124 1 271 1 31 1 369 1 64 1 315 1 52 1 343 1 244 1 228 1 74 3 157 1 302 1 
304 4 101 3 339 1 102 3 4 1 28 1 16 1 251 2 163 2 39 1 124 1 31 1 369 1 64 1 315 1 52 1 343 1 244 1 228 1 74 3 157 1 302 1 
101 1 102 1 74 1 157 1 302 1 191 1 
304 3 374 1 101 7 102 7 6 1 283 1 132 1 294 1 39 1 124 2 328 1 315 2 344 1 173 1 74 6 366 1 263 1 157 3 302 2 191 1 319 1 
0 1 132 1 353 1 134 2 91 1 298 3 98 1 54 3 360 1 10 1 246 1 302 1 142 2 11 1 58 2 304 1 101 1 102 1 310 1 144 1 315 1 65 4 262 2 210 1 211 1 111 6 213 1 270 2 113 1 327 2 150 1 331 1 32 1 74 1 157 1 159 2 338 1 77 2 220 1 222 1 282 1 39 1 341 2 42 1 348 2 288 1 176 2 
367 1 4 2 234 2 31 1 52 1 53 1 299 1 244 1 74 1 188 2 156 2 304 2 14 1 101 1 339 1 102 1 221 1 223 1 251 3 18 1 163 3 164 1 165 1 124 1 166 1 64 1 343 1 177 2 
304 2 101 2 102 2 132 1 39 1 93 1 328 1 52 1 315 1 74 2 157 2 302 1 191 1 
0 1 304 1 211 1 101 1 102 1 282 1 353 1 293 1 134 2 39 1 124 1 315 1 74 1 262 2 157 1 246 1 302 1 176 1 
304 1 374 1 101 1 102 1 16 1 39 1 328 1 315 1 173 1 74 1 366 1 157 2 302 1 
192 1 23 1 321 1 59 1 176 1 
192 2 1 1 308 1 321 2 251 2 59 2 163 2 62 1 166 1 64 1 343 1 23 1 35 1 172 1 244 1 274 1 175 1 128 1 176 1 
192 1 211 1 321 1 67 1 134 1 23 1 136 1 262 1 349 1 
1 1 23 1 175 1 
25 1 94 1 12 1 239 1 118 1 196 1 155 1 140 1 
25 2 12 4 130 1 278 1 196 1 17 1 103 2 235 1 92 1 95 1 239 3 118 2 155 1 140 4 
25 1 12 2 196 1 182 1 103 1 285 1 125 1 94 1 239 1 118 1 155 1 140 2 
25 1 12 3 130 2 196 1 17 1 61 1 94 1 95 2 239 1 118 1 155 1 140 3 
239 2 50 2 170 1 334 1 
145 1 94 1 12 1 196 1 155 1 140 1 
25 1 94 1 12 2 239 1 118 1 196 1 155 1 103 1 105 1 140 2 
123 1 
25 1 94 1 12 1 239 1 118 1 196 1 155 1 140 1 
25 1 239 1 118 1 27 1 
25 1 12 1 239 1 118 1 196 1 155 1 140 1 
12 1 229 1 236 1 
25 1 12 3 130 1 196 1 17 1 94 1 95 2 85 1 239 1 118 1 155 1 140 3 
25 1 12 2 239 1 118 1 196 1 155 1 103 1 354 1 140 2 
94 1 247 1 12 1 239 1 78 1 196 1 155 1 230 1 351 1 92 1 140 1 
94 1 12 1 239 1 118 1 196 1 155 1 140 1 
25 1 94 1 12 1 118 2 196 1 155 1 140 1 
12 2 196 2 80 1 323 1 69 1 94 1 239 1 118 1 155 2 140 2 
25 1 12 3 278 1 196 1 103 2 105 1 92 1 94 1 154 1 239 2 118 1 155 1 140 3 
94 1 218 1 12 1 247 1 196 1 241 1 155 1 103 1 140 2 
25 1 12 4 278 1 196 2 103 2 354 1 92 1 94 1 239 2 118 1 155 2 138 1 140 4 
25 1 94 1 95 1 12 3 239 1 118 1 196 1 155 1 103 1 105 1 140 3 
239 1 278 1 235 1 92 1 
239 1 118 1 

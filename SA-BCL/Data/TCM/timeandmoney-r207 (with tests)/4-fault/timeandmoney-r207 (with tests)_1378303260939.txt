#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 275 (18,203) (18,203) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (78,354) 211 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (78,354) 211 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (164,225,312) (164,225,312) 323 204 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
300 1 275 1 32 1 98 7 120 2 99 2 78 1 122 3 35 1 80 1 304 2 39 1 154 1 241 2 311 1 203 1 108 4 87 3 47 2 354 1 131 1 224 2 18 1 19 7 209 2 
168 1 300 1 275 1 32 1 98 9 99 2 120 2 78 1 234 1 122 5 35 2 80 1 304 2 39 1 154 1 241 2 311 1 203 1 108 6 87 4 47 2 354 1 131 1 224 2 18 1 19 9 361 1 209 3 
168 1 300 1 275 1 32 1 98 10 99 2 120 2 78 1 234 1 122 6 35 2 80 1 304 2 39 1 154 1 241 2 311 1 203 1 108 7 87 5 47 2 354 1 131 1 224 2 18 1 19 10 361 1 209 4 
168 1 300 1 275 1 32 1 98 7 99 2 120 2 78 1 122 4 35 1 80 1 304 2 39 1 154 1 241 2 311 1 203 1 108 4 87 3 47 2 354 1 131 1 224 2 18 1 19 7 361 1 209 2 
168 1 241 1 275 1 108 3 32 1 87 2 47 1 98 4 120 1 99 1 234 1 122 3 35 2 80 1 19 4 361 1 209 1 304 1 
168 1 210 1 39 1 154 1 241 1 128 1 47 1 98 2 120 1 122 1 80 1 224 1 19 2 361 1 3 1 304 1 
78 1 120 2 168 1 122 2 80 1 224 1 19 3 361 1 209 1 108 1 87 1 98 3 47 2 
78 1 120 1 342 1 80 1 211 1 19 1 98 1 47 1 
78 1 120 1 342 1 80 1 211 1 19 1 98 1 47 1 
287 1 139 1 191 1 
126 2 207 1 191 1 
322 1 215 2 160 2 104 2 55 1 171 2 185 2 133 2 
322 1 95 1 29 1 169 1 55 1 138 1 57 2 171 3 96 1 254 1 115 1 58 2 1 2 232 1 278 1 280 1 215 2 281 1 104 2 176 1 124 1 36 2 4 1 180 1 283 1 151 1 10 1 185 3 45 1 109 1 48 1 247 1 160 2 249 1 336 2 133 2 318 1 
252 1 322 1 215 1 160 1 104 1 171 1 185 1 133 1 259 1 195 1 
312 1 164 1 
227 1 285 2 244 1 139 1 171 1 312 1 185 1 259 1 215 1 104 1 160 1 133 1 37 1 191 1 225 2 
285 1 27 1 31 1 163 1 225 1 
321 1 285 2 27 1 139 1 31 1 59 1 191 1 225 2 
285 1 31 1 225 1 
284 1 252 1 322 1 27 1 285 1 171 1 185 1 259 1 195 1 215 1 104 1 160 1 133 1 225 1 
191 1 
285 2 27 1 139 1 208 1 31 1 59 1 191 1 225 2 
307 1 27 2 285 5 324 2 135 1 242 2 139 1 31 2 97 1 59 1 245 2 258 1 100 1 130 1 357 1 82 1 319 1 191 1 225 5 
95 1 29 1 10 1 57 1 115 1 171 2 185 2 58 1 1 1 109 1 232 1 215 1 334 1 247 1 160 1 176 1 124 1 133 1 306 1 305 1 
287 1 55 1 
6 1 107 1 55 2 171 2 185 2 215 1 104 1 160 1 133 2 
158 1 165 1 334 1 
95 1 29 1 10 1 55 1 184 1 57 1 171 1 115 1 185 1 58 1 1 1 109 1 232 1 247 1 176 1 124 1 
199 1 6 1 212 1 351 1 55 1 171 5 185 5 63 1 215 4 160 4 104 1 133 5 305 2 306 1 
215 2 160 2 171 2 185 2 133 2 38 1 259 1 195 1 
215 3 104 1 160 3 55 1 171 3 185 3 133 3 305 1 
215 1 160 1 171 1 185 1 133 1 259 1 195 1 
6 1 215 1 107 1 160 1 104 1 171 1 185 1 133 1 259 1 
227 1 322 1 95 1 29 1 55 1 138 1 57 1 115 1 254 1 171 4 58 1 1 1 259 1 232 1 278 1 280 1 235 1 215 3 176 1 104 2 124 1 36 1 37 1 4 1 305 1 306 1 283 1 6 1 151 1 182 1 285 1 10 1 244 1 312 1 185 4 45 1 109 1 48 1 247 1 160 3 336 2 133 3 318 1 225 1 
199 1 63 1 215 1 160 1 55 1 171 2 185 2 133 2 305 1 
227 1 6 1 285 1 182 1 244 1 171 3 312 1 185 3 259 1 215 3 104 1 160 3 177 1 133 3 37 1 191 1 225 1 306 1 305 2 
158 1 6 1 215 2 334 1 160 2 104 1 171 2 185 2 133 2 305 1 
95 1 29 1 10 1 55 1 57 1 171 1 115 1 185 1 58 1 1 1 232 1 109 1 247 1 176 1 124 1 
95 1 29 1 55 1 57 1 171 1 115 1 185 1 58 1 1 1 118 1 232 1 109 1 247 1 124 1 320 1 
165 2 251 1 338 1 71 1 138 1 76 1 77 1 197 1 36 4 4 1 180 2 283 1 151 1 153 1 200 1 352 1 45 1 158 2 48 2 334 2 248 1 336 2 318 1 250 1 
215 1 160 1 171 1 37 1 185 1 133 1 38 1 259 1 
237 1 162 1 
237 1 162 1 
53 1 339 1 
53 1 339 1 
53 1 339 1 
237 1 190 1 162 1 
237 1 190 1 162 1 
237 1 162 1 216 1 
223 1 53 1 237 2 339 1 162 2 205 1 
237 1 190 1 162 1 
20 1 237 1 162 1 
20 1 237 1 162 1 
20 1 237 1 162 1 
28 1 55 1 137 1 171 2 255 1 279 1 215 2 237 1 216 1 329 1 150 1 285 1 152 1 8 1 350 1 185 2 313 1 88 1 316 1 160 2 162 1 133 2 362 1 225 1 
238 1 285 2 8 2 9 1 137 3 44 1 255 2 313 2 88 1 12 2 13 1 233 1 223 1 316 2 237 2 162 2 179 1 191 1 225 2 
99 1 241 1 304 1 
241 1 3 1 304 1 
99 2 229 1 261 1 3 1 304 3 119 1 
99 1 229 1 42 1 3 1 304 2 119 1 
99 1 229 2 3 1 304 2 119 1 
71 1 27 4 28 1 324 1 114 1 139 1 31 1 59 1 100 3 279 1 343 2 197 1 126 3 148 2 183 1 285 5 268 1 201 1 242 1 350 1 352 1 245 1 353 1 292 2 357 1 189 1 207 1 248 1 335 1 319 2 225 5 191 2 
71 3 27 7 324 2 135 1 114 2 139 1 31 6 213 1 59 1 260 1 100 8 343 6 103 1 2 1 197 3 265 5 126 9 183 3 285 9 268 2 201 1 350 4 242 2 352 3 245 2 90 1 292 6 222 1 357 1 207 3 248 3 163 5 319 6 225 9 191 5 
27 2 71 1 324 1 135 1 114 1 139 1 100 3 343 2 197 1 148 1 126 4 285 3 183 1 268 1 242 1 350 1 352 1 353 1 245 1 292 2 207 2 335 1 248 1 319 2 191 3 225 3 
27 3 71 2 324 1 135 1 114 1 139 1 213 1 100 5 343 4 2 1 197 2 126 7 148 2 285 4 183 2 268 1 242 1 350 2 352 2 245 1 353 1 292 4 222 1 207 3 335 1 248 2 319 4 191 4 225 4 
109 1 287 1 111 1 
109 1 129 1 
293 1 
109 1 232 1 29 1 
109 1 173 1 
109 1 29 1 
109 3 232 1 29 1 111 2 61 1 218 1 
71 1 228 1 153 3 30 1 299 2 155 1 352 1 326 1 76 2 75 1 91 1 188 1 48 3 317 1 236 1 36 7 180 4 
71 1 228 1 153 3 30 1 299 2 155 1 352 1 326 1 76 2 75 1 91 1 188 1 48 3 317 1 236 1 36 7 180 4 
105 1 71 1 228 1 153 3 30 1 299 2 155 1 352 1 326 1 76 2 75 1 91 1 188 1 48 3 317 1 236 1 36 7 180 4 
24 1 228 1 71 4 30 2 299 3 116 4 326 2 256 1 75 1 76 5 236 2 36 31 197 3 4 1 180 16 151 1 240 3 183 3 153 10 155 1 243 1 289 1 352 4 45 1 221 1 220 1 91 5 188 2 48 15 248 3 66 1 317 1 336 2 318 1 
71 1 228 1 30 1 299 2 326 1 76 3 236 1 36 9 4 2 180 5 151 2 286 1 153 4 155 1 352 1 45 2 220 1 91 1 270 1 188 1 48 4 317 1 336 4 318 2 
168 1 72 1 136 1 57 1 73 1 115 1 58 1 1 1 98 2 99 1 120 1 122 1 80 1 261 1 3 1 264 1 304 2 147 1 127 1 241 1 108 1 290 1 47 1 314 1 246 1 187 1 247 1 224 1 19 2 361 1 
168 1 136 1 57 1 73 1 115 1 58 1 1 1 98 3 99 1 120 1 341 1 122 1 261 1 3 1 264 1 304 2 83 1 147 1 241 1 108 2 290 1 47 1 314 1 246 1 187 1 247 1 224 1 19 3 161 1 361 1 
168 1 136 1 57 1 115 1 58 1 1 1 98 2 341 1 99 1 122 1 261 1 3 1 264 1 304 2 83 1 147 1 241 1 108 2 290 1 246 1 187 1 247 1 224 1 19 2 361 1 
26 1 29 1 136 2 57 1 115 1 58 1 276 1 1 1 47 1 98 1 120 1 109 1 246 2 187 2 247 1 143 1 224 2 67 1 161 1 19 1 124 1 272 1 146 1 
72 1 136 1 57 1 73 1 115 1 58 1 1 1 98 1 99 1 120 1 80 1 261 1 3 1 264 1 304 2 83 1 147 1 241 1 290 1 47 1 314 1 246 1 187 1 247 1 224 1 19 1 
175 1 
323 1 324 1 29 1 57 2 115 1 58 2 31 2 59 1 1 2 100 1 123 1 124 2 328 1 178 1 146 1 285 2 268 1 348 1 242 1 312 1 202 1 204 1 245 1 109 1 357 1 247 1 67 1 319 1 225 2 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 2 348 1 312 1 208 1 31 1 328 1 204 1 59 1 225 2 164 1 
323 1 357 1 285 1 324 1 348 1 242 1 312 1 328 1 204 1 245 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 285 1 348 1 312 1 328 1 204 1 225 1 164 1 
323 1 357 1 285 1 324 1 348 1 242 1 312 1 328 1 204 1 245 1 225 1 164 1 
165 1 251 1 228 1 71 1 299 1 138 1 55 2 326 1 76 2 236 1 36 6 4 1 180 3 283 1 151 1 287 1 153 2 155 1 352 1 45 1 158 1 334 1 48 3 317 1 336 2 318 1 
165 11 71 2 55 1 138 1 325 1 116 3 256 1 76 1 280 1 262 1 36 14 197 1 4 2 180 8 5 1 283 2 151 2 240 3 183 2 153 2 243 1 352 1 45 2 46 1 158 4 91 1 159 1 48 6 334 11 248 2 249 1 336 4 318 2 
95 1 297 1 29 1 55 1 57 1 138 1 115 1 171 2 58 1 1 1 232 1 280 1 215 1 176 1 262 1 124 1 36 2 4 1 305 1 306 1 180 1 283 1 151 1 10 1 184 1 185 2 45 1 158 1 109 1 17 1 247 1 48 1 160 1 249 1 336 2 133 1 318 1 112 1 
273 2 228 1 95 2 55 2 194 1 57 3 138 3 58 3 326 1 1 3 277 1 232 2 280 1 236 1 197 2 4 3 283 3 151 3 153 8 10 2 155 1 158 7 109 2 247 2 334 7 160 1 248 2 249 1 336 6 165 7 71 3 29 2 299 1 171 3 254 2 115 2 76 4 215 1 176 2 262 1 124 1 36 20 83 1 306 1 305 1 125 2 180 10 345 2 183 2 43 1 352 3 185 3 45 3 315 2 91 4 48 10 317 1 133 1 318 3 
251 1 29 2 57 8 138 2 171 1 115 2 58 8 257 1 1 7 302 1 280 1 215 1 281 2 124 2 263 1 36 2 4 2 146 1 83 1 305 1 180 1 127 1 283 2 151 2 7 1 308 1 185 1 45 2 11 1 157 1 109 3 247 2 48 1 160 1 249 1 67 1 336 4 133 1 318 2 
165 1 71 1 138 1 171 1 76 1 215 1 104 1 262 1 36 3 197 1 4 1 180 1 283 1 6 1 330 1 151 1 183 1 153 1 185 1 352 1 45 1 158 1 334 1 48 2 160 1 248 1 336 2 133 1 318 1 
165 1 251 1 283 1 338 1 151 1 71 1 153 1 138 1 45 1 158 1 91 1 334 1 248 1 336 2 36 2 4 1 318 1 180 2 
165 1 251 1 283 1 151 1 153 1 138 1 352 1 45 1 76 1 158 1 334 1 48 2 336 2 36 2 197 1 4 1 318 1 250 1 
165 2 251 1 71 1 138 1 76 1 36 4 197 1 4 1 180 2 283 1 183 1 151 1 153 2 352 1 45 1 158 2 91 1 334 2 48 2 248 1 336 2 318 1 
165 1 283 1 338 1 151 1 71 1 153 1 138 1 45 1 158 1 91 1 334 1 248 1 336 2 263 1 36 2 4 1 318 1 180 2 
165 1 283 1 151 1 153 1 138 1 352 1 45 1 76 1 158 1 334 1 48 2 336 2 263 1 36 2 197 1 4 1 318 1 250 1 
165 2 71 1 138 1 76 1 263 1 36 4 197 1 4 1 180 2 283 1 183 1 151 1 153 2 352 1 45 1 158 2 91 1 334 2 48 2 248 1 336 2 318 1 
165 2 71 1 138 1 76 1 36 4 197 1 4 1 180 2 283 1 183 1 151 1 153 2 352 1 45 1 158 2 91 1 334 2 48 2 248 1 336 2 318 1 
95 1 29 1 55 1 57 1 138 1 115 1 254 1 171 1 58 1 1 1 232 1 280 1 176 1 124 1 36 2 4 1 180 1 283 1 151 1 10 1 185 1 45 1 109 1 247 1 48 1 249 1 336 2 318 1 
95 1 29 1 55 1 57 1 138 1 115 1 171 1 58 1 117 1 1 1 118 1 232 1 280 1 124 1 36 2 4 1 180 1 283 1 151 1 185 1 45 1 109 1 247 1 48 1 249 1 336 2 318 1 320 1 
165 2 71 1 138 1 76 1 262 1 36 4 197 1 4 1 180 2 283 1 183 1 151 1 153 2 352 1 45 1 158 2 91 1 334 2 48 2 248 1 336 2 318 1 
165 2 71 1 95 1 29 1 57 1 138 1 115 1 254 1 171 1 58 1 1 1 76 1 232 1 176 1 197 1 36 4 4 1 180 2 345 1 127 1 283 1 151 1 183 1 153 2 10 1 352 1 185 1 45 1 158 2 109 1 91 1 48 2 334 2 247 1 248 1 336 2 318 1 
165 1 71 1 298 1 138 1 171 1 215 1 104 1 262 1 197 1 36 3 4 1 180 2 283 1 6 1 151 1 183 1 153 1 352 1 185 1 45 1 158 1 91 1 48 1 334 1 160 1 248 1 336 2 133 1 318 1 
113 2 71 3 230 2 116 2 256 1 74 1 76 3 327 1 36 19 197 3 4 2 180 9 149 1 151 2 286 1 240 1 183 3 153 6 349 1 243 1 352 3 45 2 91 3 48 10 248 3 359 1 336 4 93 1 21 1 318 2 
113 1 71 3 230 4 54 1 172 1 116 2 74 2 214 1 76 2 327 1 145 1 36 26 197 2 4 3 180 14 149 1 151 3 286 1 240 2 183 3 153 4 267 1 349 2 243 2 352 2 45 3 220 2 355 1 91 2 48 12 248 3 336 6 93 1 318 3 
113 1 253 1 228 1 71 5 54 1 230 4 299 1 172 1 116 4 326 1 256 1 74 2 214 1 76 4 327 1 236 1 145 1 36 41 197 4 4 3 180 20 149 1 151 3 286 1 240 3 183 4 267 1 153 8 349 1 155 1 243 3 352 5 45 3 220 1 355 1 91 4 48 21 248 4 317 1 336 6 93 1 21 1 318 3 
113 1 253 1 228 1 71 5 54 1 230 4 299 1 172 1 116 4 326 1 256 1 74 2 214 1 76 4 327 1 236 1 145 1 36 38 197 3 4 4 180 20 149 1 151 4 286 1 240 3 183 4 267 1 153 7 349 1 155 1 243 3 352 4 45 4 220 2 355 1 91 3 48 18 248 4 317 1 336 8 93 1 21 1 318 4 
113 1 228 1 71 8 54 1 230 4 299 1 172 1 325 2 116 4 326 1 256 2 74 1 214 1 76 7 327 1 236 1 145 1 36 52 197 7 4 2 180 27 149 1 151 2 286 1 240 4 183 7 267 1 153 14 349 1 155 1 243 2 352 8 45 2 220 1 355 1 91 7 48 25 248 7 317 1 336 4 93 1 318 2 
13 1 233 1 79 1 223 1 316 1 8 1 237 1 162 1 255 1 313 1 
150 1 216 1 
70 1 316 1 8 1 237 1 344 1 162 1 33 1 255 1 313 1 
190 1 282 1 
20 1 231 1 205 1 
238 1 285 1 8 1 137 2 44 1 255 1 313 1 88 1 12 1 13 1 233 1 223 1 316 1 237 1 162 1 179 1 191 1 225 1 
238 1 285 1 8 1 137 2 44 1 255 1 313 1 88 1 12 1 13 1 233 1 223 1 316 1 237 1 162 1 179 1 191 1 225 1 
238 1 285 1 8 1 137 2 44 1 255 1 313 1 88 1 12 1 13 1 233 1 223 1 316 1 237 1 162 1 179 1 191 1 225 1 
190 1 282 1 205 1 
190 1 282 1 205 1 
20 1 231 1 
20 1 231 1 205 1 
362 1 329 1 
27 1 28 1 55 1 137 1 171 2 255 1 279 1 215 2 237 1 81 1 216 1 329 1 150 1 285 1 152 1 8 1 350 1 185 2 44 1 313 1 12 1 316 1 160 2 162 1 133 2 362 1 225 1 
25 1 29 1 57 2 138 1 115 1 171 2 58 2 1 2 302 1 280 1 281 2 142 1 262 1 36 2 4 1 180 1 283 1 151 1 185 2 45 1 157 1 109 1 247 1 48 1 110 1 49 1 249 1 336 2 133 2 318 1 192 1 
127 1 241 1 57 2 115 1 58 2 290 1 219 1 1 2 89 1 99 1 314 1 187 1 247 1 261 1 3 1 264 1 50 1 304 2 83 1 
241 1 57 1 115 1 58 1 290 1 219 1 1 1 99 1 314 1 187 1 247 1 261 1 3 1 295 1 264 1 304 2 83 1 
29 1 57 1 115 1 58 1 1 1 109 1 187 1 15 1 247 1 67 1 124 1 50 1 272 1 146 1 
241 1 57 1 115 1 58 1 290 1 219 1 1 1 89 1 99 1 314 1 187 1 247 1 261 1 3 1 264 1 50 1 304 2 83 1 
34 1 
100 1 287 1 139 1 319 1 97 1 191 1 258 1 
69 1 324 1 139 1 31 1 59 1 100 1 126 1 285 1 310 1 242 1 245 1 357 1 207 1 22 1 319 1 191 2 225 1 
227 2 273 2 324 4 57 3 0 2 139 2 58 3 97 1 59 3 1 3 140 1 100 9 232 3 196 2 197 2 285 5 242 4 202 1 245 4 109 10 292 6 247 3 64 1 207 6 248 2 111 2 337 2 166 1 296 2 71 2 29 3 115 4 31 5 258 1 173 2 343 6 124 1 126 12 127 1 40 1 183 2 268 2 129 3 352 2 218 1 186 2 269 1 356 2 357 4 132 2 51 2 319 8 225 5 191 8 
94 1 71 2 324 2 54 1 139 2 31 1 172 1 116 1 59 1 100 8 343 5 145 1 197 2 126 6 285 1 240 1 183 2 268 1 267 1 242 2 288 1 243 1 202 1 352 2 245 2 355 1 292 5 356 1 357 2 207 3 248 2 132 2 319 5 225 1 191 5 
252 1 322 1 71 2 324 1 171 1 326 1 259 1 195 1 100 2 215 1 104 1 236 1 284 1 181 1 285 1 242 1 185 1 352 1 245 1 62 1 356 1 357 1 160 1 132 2 317 1 133 1 319 2 225 1 
324 1 242 1 139 1 245 1 97 1 258 1 100 1 357 1 319 1 191 1 
126 10 273 1 183 2 71 2 352 2 100 5 292 5 356 1 343 5 248 2 207 5 132 2 197 2 319 5 191 5 
285 1 139 1 31 1 59 1 191 1 225 1 
324 2 135 1 29 1 57 4 115 1 58 4 31 4 59 2 1 4 140 2 100 2 123 1 144 1 124 2 178 1 146 1 40 1 285 3 268 2 242 2 202 2 245 2 109 1 14 1 357 1 247 1 67 1 319 2 225 3 
322 1 95 1 29 1 55 1 57 1 138 1 171 3 254 1 115 1 58 1 1 1 278 1 232 1 280 1 215 2 104 2 176 1 124 1 36 1 4 1 283 1 151 1 10 1 185 3 45 1 109 1 48 1 247 1 160 2 336 2 133 2 318 1 
126 4 324 1 268 1 299 1 242 1 139 2 202 1 245 1 100 1 292 2 343 2 357 1 207 2 319 2 191 4 
303 1 255 1 313 1 
303 1 255 1 313 1 
13 1 156 1 255 1 313 1 329 1 
303 1 255 1 313 1 
198 1 255 1 313 1 
198 1 255 1 313 1 
198 1 255 1 313 1 
255 1 313 1 
237 1 162 1 
71 1 151 2 228 1 153 3 299 1 155 1 352 1 45 2 326 1 220 1 76 2 91 1 48 4 317 1 236 1 336 4 36 8 4 2 318 2 180 4 
228 1 71 1 287 1 153 2 299 1 155 1 352 1 326 1 76 2 48 3 236 1 317 1 36 6 180 3 
151 1 183 1 71 1 153 2 352 1 45 1 76 1 91 1 48 2 248 1 360 1 336 2 197 1 36 4 4 1 318 1 180 2 
240 1 183 1 71 1 153 2 243 1 352 1 116 2 256 1 76 1 91 1 48 4 248 1 197 1 36 7 180 3 
228 1 71 3 299 1 325 1 116 2 326 2 256 1 76 5 236 2 36 23 197 2 4 2 180 11 5 1 183 2 240 2 151 2 153 9 331 1 155 1 352 3 45 2 220 2 91 4 48 12 248 2 317 1 336 4 318 2 
48 1 36 1 116 1 
240 1 36 1 180 1 
273 1 151 1 183 1 71 1 153 3 352 1 45 1 76 2 91 1 48 3 248 1 336 2 360 1 36 6 197 1 4 1 318 1 180 3 
71 2 54 1 172 1 116 1 76 1 145 1 36 12 197 2 4 1 180 6 240 1 151 1 286 1 183 2 267 1 153 2 243 1 352 2 45 1 355 1 91 1 48 6 248 2 336 2 318 1 
91 1 71 1 153 2 48 3 236 1 317 1 352 1 36 6 326 1 76 1 180 3 
151 1 228 1 153 2 331 1 155 1 326 1 45 1 220 1 76 1 91 1 48 2 236 1 336 2 36 3 4 1 318 1 180 1 
151 1 286 1 181 1 71 2 153 5 352 2 45 1 326 2 76 3 91 2 48 5 236 2 317 1 336 2 36 10 4 1 318 1 180 5 
286 1 151 1 71 1 153 1 45 1 91 1 248 1 336 2 36 2 4 1 318 1 180 2 
286 1 151 1 183 1 71 1 153 2 352 1 45 1 76 1 91 1 48 2 248 1 336 2 197 1 36 4 4 1 318 1 180 2 
286 1 151 3 153 2 331 1 45 3 326 1 220 1 76 1 91 1 48 2 236 1 336 6 21 1 36 3 4 3 318 3 180 1 
228 1 71 5 299 1 116 4 326 3 256 1 76 7 236 3 36 34 197 3 4 5 180 16 151 5 286 1 240 3 183 3 153 12 331 1 155 1 243 1 289 1 352 5 45 5 220 2 221 1 91 5 48 18 248 3 66 1 317 2 360 1 336 10 21 1 318 5 
71 1 228 1 54 1 299 1 116 1 326 1 76 2 236 1 36 8 4 1 180 4 240 1 151 1 286 1 153 2 243 1 155 1 352 1 45 1 48 4 317 1 336 2 318 1 
228 1 71 2 54 1 299 1 116 2 326 1 256 1 76 2 236 1 36 11 4 2 180 6 286 1 151 2 240 1 183 1 153 3 155 1 243 1 352 1 45 2 91 1 48 5 248 1 317 1 336 4 360 1 318 2 
228 1 71 3 54 1 299 1 172 1 116 1 326 1 76 3 236 1 145 1 36 19 197 2 4 3 180 9 240 1 151 3 286 1 183 2 267 1 153 4 155 1 243 1 352 3 45 3 220 1 355 1 91 1 48 10 248 2 317 1 360 1 336 6 318 3 
228 1 71 3 54 1 299 1 172 1 116 1 326 1 76 3 236 1 145 1 36 17 197 1 4 3 180 10 240 1 151 3 286 1 183 2 267 1 153 5 155 1 243 1 352 2 45 3 220 1 355 1 91 2 48 7 248 2 317 1 360 1 336 6 318 3 
71 1 228 1 54 1 299 1 116 1 326 1 76 2 236 1 36 8 4 1 180 4 240 1 151 1 286 1 153 2 243 1 155 1 352 1 45 1 48 4 317 1 336 2 318 1 
71 2 54 1 172 1 116 1 76 1 145 1 36 12 197 2 4 1 180 6 240 1 151 1 286 1 183 2 267 1 153 2 243 1 352 2 45 1 355 1 91 1 48 6 248 2 336 2 318 1 
228 1 71 3 54 1 299 1 172 1 116 1 326 1 76 3 236 1 145 1 36 18 197 1 4 4 180 10 151 4 286 1 240 1 183 2 267 1 153 5 155 1 243 1 352 2 45 4 220 2 355 1 91 2 48 8 248 2 317 1 360 1 336 8 318 4 
71 3 54 1 172 1 116 1 76 3 145 1 36 16 197 2 4 4 180 9 286 1 151 4 240 1 183 3 267 1 153 6 243 1 352 2 45 4 220 2 355 1 91 3 48 7 248 3 336 8 21 1 318 4 
228 1 71 1 153 6 155 2 352 1 326 3 76 3 91 3 48 4 236 3 317 1 36 7 180 3 
228 1 71 3 54 1 299 1 172 1 116 1 326 1 76 3 236 1 145 1 36 18 197 1 4 4 180 10 286 1 151 4 240 1 183 2 267 1 153 4 155 1 243 1 352 2 45 4 220 2 355 1 91 1 48 8 248 2 317 1 336 8 21 1 318 4 
199 1 63 1 55 1 171 1 185 1 133 1 291 1 
199 1 309 1 55 1 170 1 171 1 86 1 185 1 291 1 63 1 102 1 133 1 23 1 
109 1 247 1 287 1 29 1 67 1 57 1 124 1 115 1 58 1 146 1 1 1 
95 1 29 1 10 1 55 1 57 1 115 1 171 2 185 2 58 1 1 1 109 1 232 1 215 1 247 1 160 1 124 1 133 1 305 1 
95 1 29 2 55 1 57 1 171 2 115 1 58 1 1 1 140 1 259 1 232 2 173 1 215 2 37 1 305 1 10 1 244 1 185 2 186 1 109 3 247 1 160 1 133 2 
95 1 29 2 55 1 57 2 171 2 115 1 58 2 1 2 140 1 259 1 232 2 173 1 215 2 37 1 305 1 266 1 244 1 185 2 186 1 109 3 247 1 160 1 133 2 320 1 
227 1 29 1 57 3 301 1 115 1 139 1 31 1 58 3 1 3 140 1 232 1 173 1 124 1 266 1 285 2 129 1 186 1 109 4 247 1 111 1 225 2 191 1 226 1 
266 1 227 1 285 2 29 1 57 3 0 1 129 1 139 1 115 1 58 3 31 1 186 1 1 3 140 1 173 1 232 1 109 4 247 1 124 1 111 1 191 1 225 2 
247 1 57 1 115 1 58 1 1 1 11 1 
127 1 346 1 7 1 308 1 29 2 57 7 115 3 58 7 257 1 218 1 11 1 157 1 1 6 232 1 109 3 101 1 281 1 247 2 358 1 124 2 83 1 
165 1 71 1 228 1 95 1 29 1 299 1 55 2 138 2 57 1 115 1 171 2 254 1 58 1 326 1 1 1 76 2 232 1 215 1 142 1 176 1 236 1 262 1 36 6 4 2 305 1 180 3 345 1 283 2 127 1 151 2 153 2 10 1 155 1 352 1 185 2 45 2 158 1 109 1 315 1 334 1 48 3 247 1 160 1 317 1 336 4 133 1 318 2 
227 1 296 1 27 1 324 2 57 1 0 1 139 1 58 1 31 2 97 1 59 1 1 1 258 1 100 1 196 1 124 1 40 1 285 3 242 2 129 1 245 2 109 2 357 2 111 1 319 1 191 1 225 3 337 1 
127 1 29 1 57 2 115 2 58 2 218 1 11 1 1 2 232 1 109 2 64 1 247 1 111 1 
266 1 109 1 127 1 193 1 247 1 29 1 67 1 57 4 124 1 115 1 58 4 146 1 1 4 
167 1 346 1 29 1 57 2 115 2 58 2 1 2 140 1 277 1 232 1 109 1 294 1 247 1 358 1 
247 1 241 1 3 1 57 1 124 1 115 1 58 1 290 1 304 1 1 1 
127 1 29 1 57 2 115 1 58 2 1 2 157 1 109 1 247 1 49 1 83 1 
127 1 193 1 7 1 29 2 57 5 115 2 58 5 257 1 1 4 157 1 140 1 109 3 247 2 67 1 124 1 146 1 
127 1 193 1 134 1 29 2 57 5 115 2 58 5 257 1 1 4 157 1 140 1 109 3 247 2 67 1 124 1 146 1 
95 1 29 1 55 1 57 1 115 1 171 2 185 2 58 1 1 1 109 1 232 1 215 1 247 1 160 1 124 1 133 1 305 1 320 1 
346 1 29 1 57 1 115 2 58 1 218 1 1 1 140 1 232 1 109 1 101 1 247 1 358 1 
141 1 60 1 92 1 55 1 340 1 
227 1 274 1 106 1 27 1 285 2 182 1 60 2 55 1 244 1 139 1 340 2 312 1 259 1 141 1 92 2 37 1 191 1 225 2 52 1 
25 1 340 1 171 1 185 1 141 1 92 1 110 1 133 1 192 1 
274 1 141 1 52 1 
168 1 122 1 287 1 361 1 
120 1 168 1 122 1 19 1 361 1 98 1 47 1 
224 1 136 1 98 1 
84 1 239 1 168 1 154 2 56 1 47 1 98 3 120 1 122 1 80 1 19 3 361 1 
120 1 168 1 122 1 35 1 19 2 361 1 108 1 98 2 47 1 
99 1 120 1 122 1 80 1 241 1 19 1 87 1 32 1 304 1 98 1 47 1 
120 1 122 1 80 1 19 1 361 1 98 1 47 1 
120 1 168 1 80 1 19 1 361 2 98 1 47 1 
120 2 121 1 122 1 16 1 80 1 19 2 361 1 333 1 98 2 47 2 
168 1 300 1 108 2 87 1 47 1 98 3 120 1 122 2 80 1 131 1 19 3 361 1 209 1 
168 1 241 1 108 1 47 1 98 2 120 1 99 1 122 1 80 1 261 1 19 2 361 1 3 1 304 2 217 1 
168 1 108 2 87 1 47 2 98 4 120 2 234 1 122 2 35 1 80 1 19 4 361 1 209 1 
120 1 168 1 122 1 80 1 19 1 361 1 98 1 47 1 
84 1 168 2 154 1 56 1 332 1 108 2 87 1 98 4 47 1 120 1 122 3 19 4 361 2 209 1 
168 1 41 1 85 1 332 1 47 1 98 1 120 1 342 1 80 1 19 1 361 1 
84 1 168 1 347 1 154 2 56 2 47 1 98 3 120 1 122 1 80 1 19 3 361 1 
206 1 174 1 122 2 68 2 
120 1 80 1 65 1 19 1 98 1 47 1 
120 1 168 1 122 1 80 1 19 2 361 1 300 1 108 1 98 2 47 1 
271 1 
120 1 168 1 122 1 80 1 19 1 361 1 98 1 47 1 
120 1 168 1 122 1 154 1 80 1 19 3 300 1 361 1 108 1 98 3 47 1 
122 1 332 1 209 1 87 1 
122 1 361 1 

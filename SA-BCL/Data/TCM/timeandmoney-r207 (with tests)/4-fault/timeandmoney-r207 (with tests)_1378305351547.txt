#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 234 327 152 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 234 327 152 140 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 234 327 152 (160,187) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 234 327 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 234 327 152 (160,187) (160,187) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 234 127 165 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 234 327 152 (160,187) (160,187) 112 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 234 327 152 140 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 234 278 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 234 278 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 234 278 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 234 278 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 234 278 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 2 4 9 252 1 80 1 299 2 300 1 120 2 304 1 10 9 175 2 221 4 177 1 226 1 313 2 18 2 95 1 55 1 60 1 24 3 150 2 151 1 68 1 69 6 240 1 107 1 244 1 109 5 73 1 
162 2 4 9 252 1 80 1 299 2 300 1 120 2 304 1 10 9 175 2 221 4 177 1 226 1 313 2 18 2 95 1 55 1 60 1 24 3 150 2 151 1 68 1 69 6 240 1 107 1 244 1 109 5 73 1 
162 2 4 10 252 1 80 1 299 2 300 1 120 2 304 1 10 10 175 2 221 5 177 1 226 1 313 2 18 2 95 1 55 1 60 1 24 4 150 2 151 1 68 1 69 7 240 1 107 1 244 1 109 6 73 1 
162 2 4 7 252 1 80 1 299 2 120 2 304 1 10 7 175 2 221 3 177 1 226 1 313 1 18 2 95 1 55 1 60 1 24 2 150 2 151 1 68 1 69 4 240 1 107 1 244 1 109 4 73 1 
162 1 18 1 4 4 60 1 24 1 300 1 120 1 150 1 69 3 304 1 240 1 175 1 10 4 221 2 177 1 107 1 109 3 313 2 
162 1 4 2 18 1 252 1 60 1 299 1 119 1 120 1 240 1 175 1 10 2 325 1 177 1 222 1 226 1 109 1 
162 2 4 3 60 1 299 1 24 1 151 1 69 1 240 1 175 2 10 3 221 1 177 1 109 2 
162 2 4 9 299 1 300 1 120 1 304 1 10 9 175 2 221 4 177 1 313 2 18 1 55 1 60 1 24 3 151 1 150 1 68 1 69 7 240 1 31 1 107 1 109 5 74 1 
162 2 4 9 299 1 300 1 120 1 304 1 10 9 175 2 221 4 177 1 313 2 18 1 55 1 60 1 24 3 151 1 150 1 68 1 69 7 240 1 31 1 107 1 109 5 74 1 
155 1 42 1 235 1 
279 2 155 1 50 1 
152 1 327 1 234 1 
152 1 140 1 327 1 234 1 
152 1 187 1 327 1 234 1 
1 1 186 1 251 1 164 1 39 1 317 1 168 1 318 1 235 1 301 1 27 1 260 1 9 1 155 1 
327 1 234 1 
274 1 251 1 178 1 39 1 285 1 
274 1 251 2 29 1 155 1 178 1 39 2 40 1 235 1 
251 1 178 1 39 1 
160 1 274 1 152 1 187 1 251 1 327 1 39 1 234 1 
155 1 
274 1 251 2 19 1 155 1 178 1 39 2 40 1 235 1 
274 2 34 2 111 1 2 1 314 1 251 5 189 1 114 1 281 2 39 5 193 1 283 1 40 1 169 1 148 1 235 1 65 2 155 1 178 2 
145 1 257 1 
145 1 257 1 
124 1 62 1 
124 1 62 1 
124 1 62 1 
315 1 145 1 257 1 
161 1 145 1 257 1 
124 1 62 1 145 2 284 1 257 2 333 1 
315 1 145 1 257 1 
315 1 145 1 257 1 
291 1 145 1 257 1 
291 1 145 1 257 1 
291 1 145 1 257 1 
87 1 251 1 96 1 58 1 39 1 15 1 145 1 192 1 257 1 17 1 234 1 
87 3 248 1 89 2 77 1 251 2 38 1 96 2 58 2 39 2 145 2 192 1 284 1 257 2 173 1 286 1 155 1 15 2 17 2 84 1 
18 1 120 1 150 1 
18 1 325 1 120 1 
325 1 267 1 106 1 120 3 228 1 150 2 
195 1 325 1 267 1 106 1 120 2 150 1 
325 1 267 2 106 1 120 2 150 1 
0 1 34 1 111 3 249 2 37 1 251 5 39 5 40 1 171 1 82 2 220 1 45 1 47 1 178 1 269 1 50 1 274 4 93 1 279 3 281 1 144 1 193 2 283 1 149 1 233 1 99 1 235 1 65 1 196 1 105 1 155 2 203 2 
0 3 34 2 111 8 251 9 115 1 39 9 40 1 171 4 122 1 82 6 220 3 45 2 309 1 47 1 178 6 14 1 50 3 274 7 314 1 141 5 279 9 281 2 193 6 283 1 285 5 98 1 149 2 233 3 99 3 235 1 65 2 323 1 196 3 155 5 203 6 
34 1 0 1 111 3 249 1 37 1 251 3 39 3 171 1 82 2 220 1 45 1 50 2 274 2 314 1 279 4 281 1 144 1 193 2 149 1 235 1 233 1 99 1 65 1 196 1 155 3 203 2 
34 1 0 2 111 5 249 2 251 4 37 1 115 1 39 4 171 2 82 4 220 2 45 1 50 3 274 3 314 1 279 7 281 1 144 1 193 4 98 1 149 1 235 1 233 2 99 2 65 1 323 1 196 2 155 4 203 4 
102 1 209 1 133 1 42 1 158 1 
158 1 66 1 
306 1 
3 1 326 1 158 1 
276 1 158 1 
3 1 158 1 
204 1 3 1 239 1 326 1 133 2 158 3 
0 1 75 1 163 3 113 1 59 1 231 1 255 1 215 1 233 1 219 1 67 1 268 1 294 6 331 2 110 1 86 3 295 1 
0 1 75 1 163 3 113 1 59 1 231 1 255 1 215 1 233 1 219 1 67 1 268 1 294 6 331 2 110 1 86 3 295 1 
0 1 75 1 163 3 113 1 59 1 231 1 255 1 63 1 215 1 233 1 219 1 67 1 268 1 294 6 331 2 110 1 86 3 295 1 
0 4 296 1 75 1 205 2 163 15 113 1 255 2 41 1 215 1 121 1 123 1 219 2 220 3 179 1 224 1 268 2 227 1 273 1 135 1 86 15 59 2 231 5 99 3 233 4 67 1 101 1 196 3 197 4 199 3 202 1 294 30 331 9 110 2 295 4 
0 1 296 2 75 1 205 4 163 4 255 1 41 2 118 1 215 1 219 1 268 1 83 1 227 2 86 4 59 1 231 1 233 1 101 1 67 1 202 2 294 8 331 3 110 1 295 2 
162 1 4 2 212 1 256 1 299 1 120 2 259 1 302 1 262 1 10 2 175 1 177 1 129 1 271 1 134 1 311 2 228 1 275 1 18 1 54 1 60 1 146 1 232 1 150 1 69 1 240 1 325 1 330 2 332 1 109 1 33 2 
162 1 250 1 4 3 256 1 212 1 299 1 120 2 302 1 262 1 10 3 175 1 177 1 129 1 271 1 134 1 311 1 228 1 18 1 23 1 146 1 232 1 150 1 69 2 240 1 325 1 330 1 332 1 245 1 109 1 33 1 
250 1 4 2 256 1 212 1 299 1 120 2 262 1 10 2 177 1 129 1 271 1 134 1 311 1 228 1 18 1 23 1 146 1 150 1 69 2 240 1 325 1 330 1 332 1 109 1 33 1 
162 1 3 1 4 1 57 1 212 2 256 2 299 2 237 1 262 1 175 1 10 1 129 1 128 1 49 1 225 1 330 1 243 1 271 2 158 1 245 1 311 1 136 1 33 1 
162 1 250 1 4 1 256 1 212 1 299 1 120 2 302 1 262 1 10 1 175 1 129 1 271 1 134 1 311 1 228 1 18 1 54 1 60 1 146 1 232 1 150 1 325 1 330 1 332 1 33 1 
44 1 
247 2 1 1 3 1 76 1 251 5 164 1 78 1 167 1 254 1 168 1 170 2 260 1 262 1 9 1 265 4 178 6 180 1 182 1 186 1 91 2 279 2 280 1 281 1 193 2 283 1 25 1 194 2 27 1 104 1 32 2 33 2 34 1 111 2 207 1 297 1 298 1 39 5 40 3 301 1 48 2 223 2 128 1 129 1 49 1 311 2 50 2 317 1 318 1 149 1 235 1 237 2 65 1 155 2 330 2 158 1 
1 1 76 1 297 1 207 1 251 3 164 1 298 1 39 3 168 1 40 1 301 1 260 1 9 1 265 2 223 1 178 2 186 1 19 1 317 1 318 1 25 1 27 1 
1 1 76 1 297 1 207 1 251 3 164 1 298 1 39 3 168 1 40 1 170 1 301 1 260 1 9 1 265 3 178 1 186 1 19 1 317 1 318 1 25 1 235 1 27 1 155 1 
1 1 76 1 297 1 207 1 251 3 164 1 298 1 39 3 40 1 168 1 170 1 301 1 260 1 9 1 265 3 223 1 178 2 186 1 19 1 317 1 318 1 25 1 235 1 27 1 194 1 155 1 
247 2 1 1 76 1 251 5 164 1 167 1 168 1 170 4 260 1 9 1 265 6 178 7 16 1 85 1 186 1 19 1 91 2 281 1 283 1 193 1 25 1 194 4 27 1 104 1 32 2 34 1 111 1 207 1 297 1 298 1 39 5 40 3 301 1 48 2 223 4 50 2 142 1 317 1 318 1 320 1 235 5 65 1 324 1 155 5 
247 2 1 1 76 1 251 4 164 1 78 1 167 1 168 1 170 2 260 1 9 1 265 4 178 4 186 1 91 2 279 2 281 1 283 1 193 1 25 1 27 1 194 2 104 1 32 2 34 1 111 1 207 1 297 1 298 1 39 4 40 2 301 1 48 2 223 2 50 2 317 1 318 1 235 1 65 1 155 2 
247 2 34 1 111 1 1 1 76 1 297 1 207 1 251 4 164 1 298 1 167 1 39 4 40 2 168 1 170 2 301 1 260 1 9 1 48 2 265 4 223 2 178 4 16 1 50 2 186 1 91 2 142 1 281 1 317 1 193 1 318 1 283 1 25 1 320 1 235 1 194 2 27 1 65 1 104 1 155 1 32 2 
247 2 34 1 111 1 1 1 76 1 297 1 207 1 251 4 164 1 298 1 167 1 39 4 40 2 168 1 170 2 301 1 260 1 9 1 48 2 265 4 223 2 178 4 16 1 50 2 186 1 91 2 142 1 281 1 317 1 193 1 318 1 283 1 25 1 320 1 235 1 194 2 27 1 65 1 104 1 155 1 32 2 
247 2 34 1 111 1 1 1 76 1 297 1 207 1 251 4 164 1 298 1 39 4 40 2 168 1 170 2 301 1 260 1 9 1 48 2 265 4 223 2 178 4 16 1 186 1 188 2 53 1 279 2 20 1 281 1 317 1 193 1 318 1 283 1 25 1 235 1 194 2 27 1 65 1 322 2 238 1 104 1 155 1 
247 2 34 1 111 1 1 1 76 1 297 1 207 1 251 4 164 1 298 1 167 1 39 4 40 2 168 1 170 3 301 1 260 1 9 1 48 2 265 5 223 3 178 5 16 1 50 2 186 1 91 2 142 1 281 1 317 1 193 1 283 1 318 1 25 1 320 1 235 1 65 1 27 1 194 3 324 1 104 1 155 1 32 2 
247 2 34 1 111 1 1 1 76 1 297 1 207 1 251 4 164 1 298 1 167 1 39 4 40 2 168 1 170 3 301 1 260 1 9 1 48 2 265 5 223 3 178 5 16 1 50 2 186 1 91 2 142 1 281 1 317 1 193 1 283 1 318 1 25 1 320 1 235 1 65 1 27 1 194 3 324 1 104 1 155 1 32 2 
247 2 1 1 76 1 251 4 164 1 78 1 168 1 170 2 260 1 9 1 265 4 178 4 186 1 188 2 279 2 281 1 283 1 193 1 25 1 27 1 194 2 104 1 34 1 111 1 207 1 297 1 298 1 39 4 40 2 301 1 48 2 223 2 53 1 317 1 318 1 235 1 65 1 322 2 155 1 
296 2 0 1 205 4 163 5 166 1 41 2 118 1 81 1 121 1 220 1 305 1 227 2 312 1 273 1 86 4 52 1 231 1 99 1 233 1 196 1 197 2 199 1 72 1 202 2 294 9 157 1 331 2 295 1 
296 2 0 1 205 4 163 5 166 1 41 2 118 1 81 1 121 1 220 1 305 1 227 2 312 1 273 1 86 4 52 1 231 1 99 1 233 1 196 1 197 2 199 1 72 1 202 2 294 9 157 1 331 2 295 1 
296 2 0 7 75 1 205 4 163 23 166 3 116 1 117 1 255 1 214 1 41 2 118 1 215 1 81 1 121 2 220 6 126 1 310 1 227 2 312 1 273 2 86 23 52 1 97 2 231 6 26 1 99 6 233 7 67 1 101 1 196 6 197 4 199 4 72 1 202 2 294 46 157 1 331 12 110 1 295 6 
296 2 0 2 205 4 163 7 166 1 41 2 118 1 81 1 121 1 220 2 305 1 227 2 312 1 273 1 86 6 52 1 56 1 231 2 321 1 99 2 233 2 196 2 197 2 199 1 72 1 202 2 294 13 157 1 331 4 295 2 
296 3 0 2 163 9 205 6 166 3 116 1 117 1 214 1 41 3 118 1 81 1 220 2 126 1 310 1 227 3 312 1 86 11 273 2 52 1 231 1 26 1 233 1 99 1 101 2 196 2 197 2 199 2 72 2 202 3 294 20 331 2 157 2 295 1 
96 1 58 1 181 1 15 1 145 1 284 1 257 1 17 1 84 1 286 1 
161 1 230 1 
88 1 6 1 96 1 58 1 15 1 145 1 270 1 257 1 17 1 
315 1 236 1 
291 1 12 1 333 1 
87 2 248 1 89 1 77 1 251 1 96 1 39 1 58 1 192 1 145 1 284 1 257 1 173 1 286 1 155 1 15 1 17 1 84 1 
87 2 248 1 89 1 77 1 251 1 96 1 39 1 58 1 192 1 145 1 284 1 257 1 173 1 286 1 155 1 15 1 17 1 84 1 
87 2 248 1 89 1 77 1 251 1 96 1 39 1 58 1 192 1 145 1 284 1 257 1 173 1 286 1 155 1 15 1 17 1 84 1 
315 1 333 1 236 1 
315 1 333 1 236 1 
291 1 12 1 
291 1 12 1 333 1 
185 1 329 1 
87 1 274 1 161 1 185 1 89 1 251 1 230 1 165 1 96 1 58 1 39 1 145 1 257 1 171 1 173 1 234 1 105 1 127 1 15 1 329 1 269 1 17 1 
296 1 3 1 205 2 163 1 5 1 164 2 41 1 258 1 217 1 301 2 259 2 262 1 308 1 266 1 129 1 227 1 311 2 86 1 277 1 90 1 191 1 317 2 319 1 287 1 103 1 154 1 202 1 330 2 294 2 158 1 33 2 
275 1 250 1 18 1 211 1 146 1 120 2 150 1 302 1 303 1 262 1 325 1 129 1 330 2 271 1 332 1 311 2 228 1 33 2 159 1 
250 1 18 1 146 1 120 2 150 1 302 1 303 1 262 1 325 1 129 1 330 1 156 1 271 1 332 1 311 1 228 1 33 1 
3 1 36 1 57 1 237 1 262 1 129 1 128 1 49 1 330 1 271 1 158 1 311 1 33 1 159 1 
250 1 18 1 211 1 146 1 120 2 150 1 302 1 303 1 262 1 325 1 129 1 330 1 271 1 332 1 311 1 228 1 33 1 159 1 
201 1 
111 1 2 1 155 1 193 1 42 1 148 1 235 1 
34 1 111 1 251 1 167 1 39 1 40 1 178 1 50 1 91 1 279 1 281 1 193 1 283 1 235 1 65 1 155 2 32 1 
0 2 2 1 3 3 251 5 172 2 82 6 262 4 9 2 176 2 178 5 180 1 275 1 276 2 279 12 281 4 283 4 193 8 99 2 28 1 196 2 198 2 33 3 203 6 34 4 111 9 204 1 39 5 40 3 216 2 220 2 129 3 132 1 133 2 311 3 50 6 51 2 316 1 139 1 229 1 143 2 61 2 147 2 148 1 149 2 235 2 237 1 233 2 66 3 65 4 326 3 155 8 330 3 158 10 246 2 
34 2 0 2 111 8 251 1 210 1 116 1 39 1 40 1 214 1 216 1 82 5 220 2 126 1 178 1 180 1 310 1 183 1 273 1 50 3 279 6 281 2 283 2 193 5 149 1 26 1 99 2 233 2 235 2 65 2 196 2 197 1 199 1 155 5 246 2 203 5 
160 1 0 1 34 1 111 2 187 1 251 1 112 1 142 1 281 1 39 1 193 1 283 1 255 1 215 1 234 1 233 1 65 1 152 1 327 1 110 1 246 2 
34 1 2 1 111 1 281 1 283 1 193 1 148 1 235 1 65 1 155 1 
0 2 111 5 279 10 193 5 216 1 99 2 233 2 82 5 220 2 196 2 176 1 155 5 246 2 50 5 203 5 
251 1 155 1 39 1 178 1 40 1 235 1 
34 2 111 2 3 1 251 3 39 3 254 1 40 2 43 1 262 1 13 1 129 1 178 4 128 1 132 1 180 2 49 1 182 1 311 4 314 1 316 2 281 2 283 1 193 2 149 2 237 2 65 2 330 4 158 1 33 4 
152 1 140 1 327 1 234 1 
34 1 111 1 279 4 281 1 193 2 283 1 149 1 235 2 82 2 65 1 219 1 155 4 180 1 50 2 203 2 
100 1 58 1 15 1 
290 1 58 1 15 1 329 1 84 1 
100 1 58 1 15 1 
100 1 58 1 15 1 
200 1 58 1 15 1 
200 1 58 1 15 1 
200 1 58 1 15 1 
58 1 15 1 
145 1 257 1 
0 1 296 1 75 1 163 4 205 2 255 1 41 1 118 1 215 1 310 1 227 1 273 1 86 3 233 1 67 1 197 1 199 1 202 1 294 7 331 1 110 1 295 1 
296 2 0 2 75 1 163 5 205 4 255 1 118 1 41 2 215 1 121 1 220 1 310 1 227 2 273 1 86 5 231 1 233 1 67 1 196 1 197 2 30 1 199 1 202 2 294 10 331 2 110 1 295 1 
296 3 0 3 75 1 163 10 205 6 116 1 255 1 214 1 41 3 118 1 215 1 220 2 126 1 310 1 227 3 273 1 86 8 231 1 26 1 99 2 233 3 67 1 101 1 196 2 197 1 30 1 199 1 202 3 294 18 331 3 110 1 295 2 
296 3 0 3 75 1 163 7 205 6 116 1 255 1 41 3 118 1 214 1 215 1 220 2 126 1 310 1 227 3 273 1 86 9 231 2 26 1 99 1 233 2 67 1 101 1 196 2 197 1 30 1 199 1 202 3 294 16 331 4 110 1 295 2 
0 1 296 1 75 1 163 4 205 2 255 1 41 1 118 1 215 1 310 1 227 1 273 1 86 3 233 1 67 1 197 1 199 1 202 1 294 7 331 1 110 1 295 1 
0 2 296 1 205 2 163 6 116 1 231 1 214 1 118 1 41 1 26 1 233 2 99 2 220 2 196 2 126 1 197 1 199 1 202 1 310 1 294 12 331 2 227 1 86 6 273 1 295 1 
296 4 0 3 75 1 163 8 205 8 116 1 255 1 214 1 41 4 118 1 215 1 220 2 126 1 310 1 227 4 273 1 86 9 231 2 26 1 99 1 233 2 67 1 101 2 196 2 197 1 30 1 199 1 202 4 294 17 331 4 110 1 295 2 
296 4 0 3 163 7 205 8 116 1 214 1 118 1 41 4 220 3 126 1 305 1 310 1 227 4 273 1 86 9 231 3 26 1 99 2 233 2 101 2 196 3 197 1 199 1 202 4 294 16 331 6 295 3 
0 2 75 1 163 5 112 1 255 4 231 4 215 2 233 2 219 1 67 1 294 10 331 9 110 4 86 5 295 5 
296 4 0 3 75 1 163 8 205 8 116 1 255 1 214 1 118 1 41 4 215 1 220 2 126 1 305 1 310 1 227 4 273 1 86 9 231 1 26 1 99 1 233 2 67 1 101 2 196 2 197 1 199 1 202 4 294 17 331 3 110 1 295 2 
0 1 296 2 75 1 163 4 205 4 231 1 255 1 41 2 215 1 233 1 101 1 67 1 202 2 294 7 331 2 227 2 86 3 110 1 295 1 
0 1 67 1 75 1 163 3 255 1 294 5 42 1 215 1 331 1 233 1 86 2 110 1 295 1 
296 1 0 1 163 2 205 2 231 1 41 1 233 1 99 1 220 1 196 1 30 1 202 1 294 4 331 2 227 1 86 2 295 1 
0 1 163 4 231 1 233 1 99 1 121 1 220 1 196 1 197 2 199 1 294 7 331 2 273 1 86 3 295 1 
0 3 296 2 75 1 163 12 205 4 255 2 41 2 215 1 121 1 220 2 227 2 86 10 97 1 231 4 64 1 99 2 233 3 67 1 101 2 196 2 197 2 199 2 70 1 202 2 294 22 331 8 110 2 295 4 
163 1 197 1 294 1 
199 1 294 1 86 1 
296 1 0 1 205 2 163 3 231 1 41 1 99 1 233 1 220 1 196 1 30 1 176 1 202 1 294 6 227 1 331 3 86 3 295 2 
0 2 296 1 205 2 163 6 116 1 231 1 214 1 118 1 41 1 26 1 233 2 99 2 220 2 196 2 126 1 197 1 199 1 202 1 310 1 294 12 331 2 227 1 86 6 273 1 295 1 
0 1 163 3 255 1 231 1 215 1 233 1 294 6 331 2 86 3 110 1 295 1 
296 1 75 1 163 2 205 2 231 1 255 1 41 1 101 1 67 1 70 1 202 1 294 3 331 2 227 1 86 1 110 1 295 1 
296 1 0 2 205 2 163 5 112 1 255 2 231 2 41 1 118 1 215 1 233 2 202 1 294 10 227 1 331 5 110 2 86 5 295 3 
296 1 0 1 205 2 231 1 118 1 41 1 220 1 202 1 294 2 227 1 331 1 86 2 
296 1 0 1 163 2 205 2 231 1 118 1 41 1 233 1 99 1 220 1 196 1 202 1 294 4 331 2 227 1 86 2 295 1 
296 3 163 2 205 6 255 1 231 1 118 1 41 3 101 1 305 1 70 1 202 3 294 3 227 3 331 2 110 1 86 1 295 1 
296 5 0 5 75 1 163 18 205 10 255 3 41 5 118 1 215 2 121 1 220 3 305 1 179 1 224 1 227 5 273 1 135 1 86 15 231 5 99 3 233 5 67 1 101 2 196 3 197 4 30 1 199 3 70 1 202 5 294 33 331 11 110 3 295 6 
208 1 164 1 241 1 79 1 317 1 301 1 260 1 
208 1 164 1 79 1 317 1 301 1 260 1 264 1 241 1 46 1 11 1 71 1 184 1 
262 1 3 1 129 1 128 1 49 1 42 1 330 1 158 1 311 1 33 1 237 1 
278 1 234 1 
278 1 234 1 
278 1 234 1 
3 1 251 2 39 2 218 1 262 1 9 1 129 1 178 1 131 1 133 1 311 3 276 1 316 1 143 1 190 1 235 1 237 1 66 1 326 1 155 1 330 3 158 4 33 3 
276 1 3 1 251 2 316 1 143 1 190 1 39 2 237 1 235 1 66 1 9 1 262 1 198 1 326 1 155 1 178 1 129 1 330 3 133 1 311 3 158 4 33 3 
262 1 129 1 253 1 330 1 311 1 33 1 
275 1 204 1 250 1 3 2 92 1 94 1 253 1 259 1 237 2 287 1 261 1 262 3 263 1 326 1 129 2 292 1 330 7 272 1 311 7 158 3 33 6 
278 1 234 1 
34 2 111 1 2 1 251 3 39 3 40 1 172 1 9 1 178 2 132 1 133 1 311 1 274 1 281 2 193 1 283 2 61 1 147 1 148 1 235 1 237 1 65 2 66 1 198 1 155 1 330 1 158 2 33 1 
275 1 204 1 3 1 253 1 28 1 262 2 326 1 129 1 133 1 330 2 311 2 158 2 33 2 
275 1 3 1 21 1 190 1 237 1 262 1 128 1 129 1 49 1 330 4 311 4 158 1 33 4 
138 1 3 1 316 1 94 1 7 1 213 1 262 2 326 1 129 1 330 2 272 1 311 2 158 1 33 2 
262 1 18 1 325 1 129 1 330 1 332 1 120 1 311 1 33 1 237 1 
275 1 287 1 262 1 3 1 250 1 266 1 129 1 330 2 158 1 311 2 33 2 
275 1 3 2 316 1 92 1 21 1 237 1 287 1 262 2 128 1 129 2 292 1 49 1 330 5 311 5 158 3 33 4 
275 1 3 2 316 1 92 1 21 1 237 1 8 1 287 1 262 2 128 1 129 2 49 1 330 5 311 5 158 3 33 4 
278 1 234 1 
204 1 3 1 316 1 94 1 261 1 262 2 326 1 129 1 330 1 272 1 311 1 158 1 33 1 
240 1 177 1 42 1 109 1 
162 1 240 1 4 1 10 1 175 1 177 1 109 1 
4 1 256 1 299 1 
162 1 240 1 307 1 4 3 10 3 175 1 288 1 289 1 177 1 60 1 226 2 109 1 
69 1 162 1 240 1 4 2 10 2 175 1 177 1 109 1 313 1 
162 1 4 1 18 1 60 1 120 1 150 1 304 1 175 1 10 1 221 1 109 1 
162 1 240 1 4 1 10 1 175 1 60 1 109 1 
162 1 240 2 4 1 10 1 175 1 177 1 60 1 
137 1 162 2 4 2 60 1 125 1 153 1 240 1 175 2 10 2 109 1 
162 1 4 3 55 1 60 1 24 1 68 1 69 2 240 1 175 1 10 3 221 1 177 1 109 2 
162 1 4 2 18 1 60 1 282 1 120 2 150 1 69 1 240 1 325 1 175 1 10 2 177 1 109 1 228 1 
162 2 4 4 60 1 300 1 24 1 69 2 240 1 175 2 10 4 221 1 177 1 109 2 313 1 
162 1 240 1 4 1 10 1 175 1 177 1 60 1 109 1 
162 1 4 4 24 1 69 2 307 1 240 2 10 4 175 1 288 1 242 1 221 1 177 2 226 1 109 3 
35 1 162 1 4 2 60 1 69 1 240 1 175 1 10 2 177 1 31 1 293 1 109 1 
162 1 206 1 4 3 60 1 307 1 175 1 10 3 240 1 288 2 177 1 226 2 109 1 
174 1 130 1 328 2 109 2 
162 1 4 1 10 1 175 1 22 1 60 1 
69 1 162 1 240 1 4 2 10 2 175 1 177 1 55 1 60 1 109 1 
108 1 
162 1 240 1 4 1 10 1 175 1 177 1 60 1 109 1 
162 1 4 3 55 1 60 1 69 1 175 1 10 3 240 1 177 1 226 1 109 1 
242 1 221 1 24 1 109 1 
240 1 109 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 293 67 10 86 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 293 67 10 86 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 293 (54,148,290,309) 313 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 293 67 10 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (78,173,372) (78,173,372) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (78,173,372) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (78,173,372) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (354,359) (354,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (78,173,372) (78,173,372) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 293 (54,148,290,309) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 293 67 237 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 293 67 221 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 293 67 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
92 1 368 2 252 1 67 1 97 2 314 1 329 3 209 1 293 1 224 1 86 1 148 1 325 3 10 1 
92 1 368 2 252 1 67 1 97 2 314 1 329 3 209 1 293 1 224 1 86 1 148 1 325 3 10 1 
368 1 92 1 6 1 325 1 97 1 329 1 
368 1 92 1 6 1 325 1 97 1 329 1 
368 1 92 1 6 1 325 1 97 1 329 1 
368 1 92 1 6 1 325 1 97 1 329 1 
293 1 368 1 92 1 224 1 265 1 252 1 290 1 325 2 97 1 313 1 314 1 329 2 
92 1 368 1 185 1 266 1 155 1 129 1 97 1 314 1 329 2 209 1 32 1 258 1 44 1 325 2 63 1 37 1 
293 1 368 2 92 1 252 1 67 1 325 2 97 2 314 1 209 1 10 1 329 2 
289 1 222 1 31 1 
17 1 31 1 36 2 
7 1 327 2 332 1 82 2 311 2 43 2 175 2 51 2 
160 2 2 1 327 2 163 1 120 1 51 3 71 1 187 1 144 2 7 1 73 1 278 1 331 1 332 1 303 1 168 1 190 1 213 1 104 1 80 1 286 1 172 1 339 2 106 1 82 2 311 2 175 2 200 1 130 1 316 1 43 3 348 2 350 1 351 1 47 1 115 2 378 1 
327 1 332 1 82 1 311 1 43 1 291 1 175 1 51 1 217 1 253 1 
327 1 310 1 26 1 51 1 140 1 222 1 253 1 31 1 166 1 364 1 43 1 228 1 284 1 46 1 
327 1 82 1 310 1 311 1 175 1 51 1 140 1 222 1 253 1 31 1 166 1 364 1 43 1 228 2 46 2 
302 1 179 1 347 1 228 1 46 1 
179 1 137 1 186 1 347 1 228 2 222 1 46 2 31 1 
347 1 228 1 46 1 
327 1 82 1 311 1 291 1 175 1 51 1 253 1 179 1 281 1 332 1 43 1 228 1 217 1 46 1 
31 1 
179 1 186 1 347 1 228 2 222 1 46 2 90 1 31 1 
250 1 186 1 24 1 275 1 222 1 31 1 179 2 294 1 296 1 165 1 133 1 346 2 236 1 347 2 61 2 87 2 228 5 46 5 123 1 
172 1 2 1 327 1 153 1 82 1 311 1 200 1 51 2 187 1 144 1 270 1 278 1 316 1 43 2 366 1 348 1 350 1 351 1 80 1 115 1 
7 1 289 1 
327 2 82 1 25 1 311 1 175 1 51 2 7 2 318 1 43 2 
12 1 13 1 366 1 
172 1 2 1 200 1 51 1 187 1 144 1 121 1 7 1 316 1 278 1 43 1 348 1 350 1 351 1 115 1 80 1 
7 1 327 3 153 1 82 3 311 3 43 3 175 1 51 3 
327 1 82 1 311 1 43 1 291 1 51 1 253 1 
327 1 318 1 82 1 311 1 25 1 43 1 175 1 51 1 253 1 
160 2 2 1 327 3 161 1 25 1 120 1 51 4 140 1 253 1 71 1 187 1 144 1 7 1 73 1 278 1 331 1 332 1 303 1 166 1 76 1 364 1 213 1 80 1 286 1 172 1 339 1 106 1 82 3 153 1 310 1 311 3 200 1 175 2 270 1 316 1 43 4 228 1 348 1 350 1 46 1 351 1 47 1 378 1 115 1 
7 1 108 1 327 2 82 1 153 1 311 1 43 2 51 2 284 1 
327 3 161 1 153 2 82 3 310 1 25 1 311 3 175 1 51 3 140 1 253 1 31 1 270 1 364 1 166 1 43 3 228 1 46 1 89 1 
327 2 153 1 82 2 12 1 25 1 311 2 175 1 51 2 43 2 366 1 
172 1 2 1 200 1 51 1 187 1 144 1 7 1 316 1 278 1 43 1 348 1 350 1 351 1 115 1 80 1 
172 1 287 1 2 1 200 1 51 1 187 1 144 1 180 1 7 1 316 1 278 1 43 1 348 1 351 1 115 1 
160 2 120 1 68 1 143 1 71 2 73 1 256 1 303 1 168 2 102 1 366 2 149 1 79 1 124 1 126 1 286 1 220 1 127 1 106 1 339 4 12 2 13 2 317 1 47 1 
327 1 310 1 82 1 311 1 43 1 51 1 312 1 253 1 
117 1 308 1 327 5 153 2 82 4 311 4 25 1 175 1 51 5 270 1 7 1 108 1 43 5 284 1 
327 2 82 2 311 2 43 2 291 1 312 1 51 2 253 1 
93 1 23 1 
93 1 23 1 
27 1 282 1 
27 1 282 1 
27 1 282 1 
93 1 23 1 34 1 
93 1 23 1 358 1 
373 1 93 2 23 2 27 1 282 1 283 1 
93 1 23 1 34 1 
93 1 23 1 34 1 
93 1 23 1 195 1 
93 1 23 1 195 1 
93 1 23 1 195 1 
262 1 93 2 337 1 340 2 23 2 29 2 69 1 31 1 373 1 182 2 20 2 345 1 226 1 228 2 46 2 62 3 57 1 367 1 114 2 
93 1 136 1 327 2 23 1 94 1 51 2 358 1 28 1 7 1 279 1 193 1 125 1 105 1 337 1 340 1 82 2 311 2 182 1 20 1 43 2 228 1 62 1 46 1 114 1 
129 1 155 1 285 1 
129 1 155 1 63 1 
269 1 50 1 155 3 63 1 299 1 285 2 
269 1 343 1 155 2 63 1 299 1 285 1 
269 1 155 2 63 1 299 2 285 1 
250 2 186 1 119 1 275 3 31 2 99 1 279 1 72 2 74 1 256 1 193 1 124 1 126 1 79 1 36 3 105 1 152 2 239 2 128 1 222 1 156 1 179 4 157 1 17 1 133 1 346 1 347 1 272 1 87 1 61 1 228 5 46 5 
250 6 186 1 4 5 275 8 142 1 31 5 99 1 302 5 72 6 74 3 165 1 256 3 167 1 124 3 126 3 79 3 150 1 36 9 105 4 239 6 128 2 174 1 222 1 241 1 156 2 179 7 202 1 17 3 133 1 346 2 347 6 61 2 87 2 228 9 46 9 
250 2 119 1 275 3 31 3 74 1 72 2 165 1 256 1 124 1 126 1 79 1 105 1 36 4 152 1 239 2 128 1 222 1 156 1 179 2 157 1 17 2 346 1 87 1 61 1 228 3 46 3 
250 4 119 1 275 5 31 4 72 4 74 2 165 1 256 2 167 1 124 2 126 2 79 2 36 7 105 2 152 2 239 4 128 1 174 1 222 1 241 1 156 1 179 3 157 1 17 3 346 1 87 1 61 1 228 4 46 4 
254 1 289 1 351 1 
205 1 351 1 
320 1 
2 1 351 1 
254 2 2 1 211 1 267 1 351 3 187 1 
2 1 351 1 187 1 
75 1 351 1 
38 1 118 1 127 2 339 7 162 1 328 2 208 1 71 3 268 1 41 1 168 4 102 3 227 1 377 1 77 1 124 1 79 1 
38 1 118 1 127 2 339 7 162 1 328 2 208 1 71 3 268 1 41 1 168 4 102 3 227 1 377 1 77 1 124 1 79 1 
38 1 118 1 127 2 339 7 162 1 341 1 328 2 208 1 71 3 268 1 41 1 168 4 102 3 227 1 377 1 77 1 124 1 79 1 
160 2 118 1 162 2 96 4 328 3 208 1 71 15 301 1 73 1 74 3 256 3 168 16 102 10 77 1 194 1 151 1 79 4 126 3 124 4 286 1 38 2 219 1 127 5 339 31 106 1 15 3 268 1 201 1 41 5 248 1 227 2 377 2 47 1 326 1 
160 4 118 1 162 1 328 2 208 1 71 4 73 2 168 5 102 4 260 1 124 1 79 1 286 2 219 1 38 1 127 3 106 2 339 9 240 1 268 1 41 1 377 1 227 1 47 2 
92 1 368 1 97 1 329 1 209 1 372 1 144 1 9 1 259 1 348 1 325 1 78 1 115 1 
368 1 97 1 329 2 209 1 210 1 144 1 224 1 225 1 9 1 348 1 261 1 325 2 78 1 115 1 
144 1 210 1 224 1 173 1 9 1 348 1 261 1 325 1 209 1 115 1 329 1 
368 1 65 1 354 1 359 1 97 1 329 1 209 2 144 1 316 1 225 1 9 2 348 1 325 1 115 1 
92 1 368 1 97 1 329 1 209 1 372 1 210 1 144 1 9 1 348 1 325 1 78 1 115 1 
139 1 
327 1 3 5 186 2 275 1 140 1 51 1 98 1 189 1 100 2 284 1 197 3 107 1 17 2 19 1 246 2 346 1 347 5 61 1 111 1 349 2 21 1 66 2 250 1 26 1 253 1 31 1 364 1 166 1 33 1 214 1 218 3 310 1 176 1 222 1 223 1 271 1 133 1 43 1 87 1 228 4 46 4 135 3 
66 2 327 1 250 1 186 2 3 5 26 1 275 1 51 1 140 1 253 1 31 1 98 1 189 1 100 2 166 1 33 1 364 1 214 1 284 1 218 3 107 1 197 3 310 1 176 1 222 1 223 1 17 2 133 1 271 1 246 2 19 1 346 1 43 1 347 5 111 1 87 1 61 1 349 2 228 4 46 4 135 3 21 1 
327 1 3 4 186 2 275 1 274 2 140 1 51 1 98 1 189 1 8 2 284 1 197 2 19 1 246 2 346 1 347 4 61 1 66 2 250 1 26 1 253 1 31 1 364 1 166 1 33 1 218 2 36 2 306 1 310 1 177 1 176 1 222 1 133 1 271 1 43 1 87 1 228 4 46 4 135 2 
2 1 327 1 186 3 3 4 275 2 51 1 140 1 98 1 144 2 145 1 278 1 189 1 100 2 284 1 197 2 198 1 292 1 17 2 246 2 19 1 60 1 346 1 347 6 61 1 111 1 349 2 348 2 351 1 115 2 66 2 250 2 26 1 253 1 31 2 33 1 166 1 364 1 218 2 36 2 306 1 172 1 40 1 310 1 128 1 176 1 222 1 83 1 316 2 133 1 271 1 43 1 87 1 228 5 46 5 135 2 
327 1 3 2 186 1 26 1 51 1 140 1 253 1 189 1 166 1 33 1 364 1 284 1 310 1 176 1 271 1 19 1 43 1 347 2 228 3 46 3 135 1 90 1 
327 1 3 3 186 1 26 1 51 1 140 1 253 1 31 1 189 1 166 1 33 1 364 1 284 1 218 1 310 1 176 1 222 1 271 1 19 1 43 1 347 1 228 3 46 3 90 1 
327 1 186 1 3 3 26 1 51 1 140 1 253 1 31 1 189 1 166 1 33 1 364 1 284 1 218 1 197 1 310 1 176 1 222 1 271 1 19 1 43 1 347 2 228 3 46 3 90 1 135 1 
327 1 3 6 186 3 275 1 140 1 51 1 98 1 189 1 100 2 284 1 197 4 107 1 17 2 19 1 246 2 346 1 347 7 61 1 111 1 349 2 21 1 66 2 250 1 26 1 253 1 31 5 364 1 166 1 33 1 212 1 214 1 218 4 310 1 176 1 222 5 223 1 271 1 133 1 43 1 87 1 228 5 46 5 135 4 90 1 
327 1 3 4 186 2 275 1 140 1 51 1 98 1 189 1 100 2 284 1 197 2 17 2 19 1 246 2 346 1 347 4 111 1 61 1 349 2 66 2 250 1 26 1 253 1 31 2 364 1 166 1 33 1 218 2 36 2 306 1 310 1 176 1 222 1 133 1 271 1 43 1 87 1 228 4 46 4 135 2 
66 2 327 1 250 1 186 2 3 4 26 1 275 1 51 1 140 1 253 1 31 1 98 1 189 1 100 2 166 1 33 1 364 1 214 1 284 1 218 2 197 2 310 1 176 1 222 1 223 1 17 2 271 1 133 1 246 2 19 1 346 1 43 1 347 4 111 1 61 1 87 1 349 2 228 4 46 4 135 2 21 1 
66 2 327 1 250 1 186 2 3 4 26 1 275 1 51 1 140 1 253 1 31 1 98 1 189 1 100 2 166 1 33 1 364 1 214 1 284 1 218 2 197 2 310 1 176 1 222 1 223 1 17 2 271 1 133 1 246 2 19 1 346 1 43 1 347 4 111 1 61 1 87 1 349 2 228 4 46 4 135 2 21 1 
66 2 327 1 250 1 186 2 3 4 26 1 274 2 275 1 51 1 140 1 253 1 31 1 98 1 8 2 189 1 363 1 166 1 33 1 364 1 284 1 103 1 218 2 36 2 197 2 310 1 177 1 176 1 222 1 271 1 133 1 246 2 19 1 346 1 43 1 347 4 61 1 87 1 228 4 46 4 135 2 21 1 
160 2 286 1 118 1 38 1 127 2 339 6 106 1 12 1 328 1 120 1 289 1 13 1 208 1 71 3 268 1 7 2 73 1 303 1 168 3 102 2 227 1 366 1 149 1 124 1 79 1 47 1 
160 4 22 1 96 3 120 2 30 1 71 6 7 1 73 2 74 2 256 2 331 1 303 1 168 8 102 2 305 1 366 11 171 1 194 1 79 2 126 1 124 1 286 2 127 1 106 2 339 14 12 4 13 11 130 1 15 3 201 1 41 1 112 1 47 2 
160 2 22 1 2 1 327 1 120 1 51 2 187 1 71 1 144 1 121 1 188 1 7 1 278 1 73 1 331 1 303 1 168 1 304 1 333 1 80 1 286 1 172 1 106 1 339 2 82 1 153 1 12 1 311 1 200 1 130 1 270 1 316 1 43 2 348 1 350 1 351 1 47 1 115 1 
327 1 2 2 328 1 51 3 187 2 144 3 7 2 278 2 331 1 146 1 102 8 238 2 286 3 106 3 339 20 199 2 153 1 12 7 154 1 13 7 200 2 348 3 350 2 351 2 115 3 160 6 352 1 118 1 22 1 120 3 208 1 357 2 71 10 210 1 73 3 74 2 256 2 303 3 168 10 366 7 124 3 79 3 126 2 80 2 38 1 127 4 172 2 82 1 311 1 130 1 268 1 270 1 41 4 316 1 43 3 183 2 227 1 47 3 378 2 
91 1 160 4 327 1 2 2 355 1 120 2 51 1 70 1 71 1 210 1 144 8 278 2 73 2 331 1 303 2 168 1 190 2 259 1 334 1 149 1 286 2 172 2 106 2 339 2 82 1 153 1 40 1 311 1 130 1 58 1 371 1 83 1 316 2 43 1 297 1 348 8 351 3 47 2 115 7 
160 2 22 1 327 1 25 1 120 1 51 1 71 2 73 1 74 1 256 1 303 1 168 1 102 1 366 1 79 1 126 1 124 1 286 1 127 1 106 1 339 3 264 1 82 1 12 1 311 1 13 1 175 1 43 1 47 1 
160 2 286 1 339 2 106 1 12 1 120 1 13 1 41 1 73 1 256 1 317 1 303 1 168 2 102 1 366 1 149 1 47 1 79 1 
160 2 286 1 127 1 339 2 106 1 12 1 120 1 13 1 143 1 71 2 73 1 303 1 102 1 366 1 149 1 47 1 126 1 124 1 
160 2 120 1 71 2 74 1 73 1 256 1 303 1 168 2 102 2 366 2 149 1 79 1 126 1 124 1 286 1 127 1 106 1 339 4 12 2 13 2 41 1 47 1 
160 2 286 1 339 2 106 1 12 1 120 1 13 1 70 1 41 1 73 1 256 1 317 1 303 1 168 2 102 1 366 1 47 1 79 1 
160 2 286 1 127 1 339 2 106 1 12 1 120 1 13 1 70 1 143 1 71 2 73 1 303 1 102 1 366 1 47 1 126 1 124 1 
160 2 120 1 70 1 71 2 74 1 73 1 256 1 303 1 168 2 102 2 366 2 79 1 126 1 124 1 286 1 127 1 106 1 339 4 12 2 13 2 41 1 47 1 
160 2 120 1 71 2 74 1 73 1 256 1 303 1 168 2 102 2 366 2 79 1 126 1 124 1 286 1 127 1 339 4 106 1 12 2 13 2 41 1 47 1 
160 2 2 1 120 1 51 1 187 1 71 1 144 1 7 1 278 1 73 1 331 1 303 1 168 1 80 1 286 1 172 1 339 2 106 1 200 1 130 1 316 1 43 1 348 1 350 1 351 1 47 1 378 1 115 1 
160 2 2 1 120 1 51 1 187 1 71 1 144 1 7 1 278 1 73 1 331 1 303 1 168 1 286 1 172 1 339 2 287 1 106 1 200 1 130 1 180 1 243 1 316 1 43 1 348 1 351 1 47 1 115 1 
160 2 22 1 120 1 71 2 74 1 73 1 256 1 303 1 168 2 102 2 366 2 79 1 126 1 124 1 286 1 127 1 106 1 339 4 12 2 13 2 41 1 47 1 
160 2 2 1 120 1 51 1 71 2 187 1 144 1 278 1 73 1 74 1 256 1 303 1 168 2 102 2 259 1 366 2 124 1 126 1 79 1 80 1 238 1 286 1 127 1 172 1 339 4 106 1 12 2 13 2 200 1 41 1 43 1 348 1 350 1 351 1 47 1 378 1 115 1 
160 2 22 1 327 1 25 1 120 1 51 1 71 1 73 1 74 1 330 1 256 1 303 1 168 2 102 1 366 1 124 1 126 1 79 1 286 1 106 1 339 3 82 1 311 1 12 1 13 1 175 1 41 1 43 1 47 1 
1 1 96 4 95 1 231 2 328 1 234 4 147 1 102 8 194 1 286 3 196 1 339 41 106 3 240 1 14 1 15 3 201 3 295 1 160 6 118 1 356 1 208 1 71 21 361 1 74 4 73 3 256 4 168 20 169 1 124 5 126 4 79 5 219 1 38 1 127 4 369 1 39 1 268 1 41 4 375 1 85 1 227 1 47 3 
160 8 118 1 1 1 356 1 95 1 96 4 328 1 231 2 208 1 71 18 361 1 234 4 73 4 74 4 256 4 168 20 147 1 102 7 169 1 194 1 79 5 126 3 124 4 196 1 286 4 38 1 219 2 127 4 369 1 106 4 339 38 39 1 240 1 14 1 15 3 268 1 295 1 201 3 41 3 375 1 85 1 227 1 47 4 
160 4 118 1 1 1 95 1 96 4 328 1 231 1 208 1 71 25 361 1 234 4 73 2 74 7 256 7 168 27 147 1 102 14 305 2 169 1 194 2 79 8 126 7 124 8 286 2 38 1 219 1 127 7 369 1 106 2 339 52 39 1 240 1 14 1 15 4 268 1 295 1 201 2 41 7 375 1 85 1 227 1 47 2 
160 4 1 1 356 1 96 2 231 1 71 10 361 1 234 2 73 2 74 3 256 3 168 9 102 6 192 1 169 1 194 1 79 3 126 3 124 3 286 2 127 3 106 2 339 19 39 1 240 1 15 1 295 2 201 1 41 3 47 2 
160 6 1 2 96 2 95 1 231 2 71 12 361 1 234 4 73 3 74 3 256 3 168 14 147 1 102 4 169 1 124 2 79 3 126 2 286 3 219 2 127 2 106 3 339 26 369 1 39 1 240 1 14 1 15 2 295 1 41 2 201 2 375 1 85 1 47 3 
373 1 93 1 182 1 23 1 340 1 20 1 158 1 57 1 367 1 114 1 
358 1 125 1 
53 1 93 1 182 1 23 1 340 1 230 1 20 1 191 1 114 1 
262 1 93 1 337 1 340 1 23 1 29 1 69 1 31 1 373 1 182 1 20 1 345 1 228 1 46 1 62 2 57 1 367 1 114 1 
262 1 93 1 337 1 340 1 23 1 29 1 69 1 31 1 373 1 182 1 20 1 345 1 228 1 46 1 62 2 57 1 367 1 114 1 
262 1 93 1 337 1 340 1 23 1 29 1 69 1 31 1 373 1 182 1 20 1 345 1 228 1 46 1 62 2 57 1 367 1 114 1 
203 1 283 1 34 1 
203 1 283 1 34 1 
35 1 195 1 
283 1 35 1 195 1 
136 1 28 1 
93 1 136 1 327 2 23 1 94 1 51 2 358 1 28 1 29 1 7 1 279 1 193 1 125 1 105 1 340 1 82 2 311 2 179 1 182 1 319 1 345 1 20 1 43 2 228 1 46 1 62 1 114 1 
203 1 34 1 
283 1 35 1 195 1 
160 2 22 1 2 1 327 2 206 1 355 1 120 1 51 2 71 1 144 2 278 1 73 1 331 1 303 1 168 1 190 2 286 1 172 1 106 1 339 2 130 1 16 1 371 1 244 1 132 1 43 2 321 1 348 2 351 1 47 1 115 2 
336 1 338 1 263 1 210 1 144 2 362 1 259 1 348 2 216 1 170 1 115 2 
336 1 338 1 263 1 210 1 144 1 101 1 348 1 216 1 115 1 
335 1 172 1 2 1 40 1 360 1 83 1 144 1 278 1 316 1 362 1 348 1 216 1 351 1 115 1 
336 1 144 1 210 1 338 1 362 1 263 1 216 1 348 1 170 1 115 1 
11 1 
160 2 327 2 2 1 120 1 51 3 71 1 187 1 144 1 7 1 73 1 278 1 331 1 332 1 303 1 213 1 80 1 286 1 172 1 339 1 106 1 82 2 311 2 175 2 200 1 316 1 43 3 348 1 350 1 351 1 47 1 115 1 378 1 
239 2 250 2 328 1 128 1 275 1 222 2 31 4 145 1 72 2 17 2 133 1 346 1 61 1 87 1 36 4 
250 1 24 1 275 1 289 1 236 1 222 1 31 1 
250 1 186 1 275 1 31 2 100 1 36 1 222 1 17 1 133 1 346 1 347 1 111 1 87 1 61 1 349 1 228 1 46 1 
2 3 48 2 186 3 275 9 5 2 52 2 187 3 144 3 145 1 278 4 236 1 199 2 239 6 288 2 242 1 245 1 17 6 346 4 347 5 61 4 348 3 351 10 115 3 116 1 353 1 205 3 250 8 24 1 31 8 254 2 75 2 72 6 74 2 256 2 211 1 364 2 259 1 215 2 79 2 126 2 124 2 36 12 172 3 128 2 370 1 222 2 178 2 316 1 315 2 133 4 87 4 228 5 46 5 88 2 
48 1 250 5 186 1 96 1 95 1 275 8 5 2 31 5 145 1 72 5 74 2 256 2 147 1 79 2 126 2 124 2 36 6 369 1 239 5 128 1 14 1 15 1 222 2 201 1 133 2 17 3 110 1 85 1 346 2 347 1 87 2 61 2 298 1 228 1 46 1 
327 1 48 1 250 2 275 2 208 1 51 1 253 1 5 2 281 1 332 1 217 1 79 2 124 1 38 1 82 1 311 1 291 1 175 1 223 1 133 1 43 1 346 1 227 1 87 1 61 1 228 1 46 1 300 1 
250 1 24 1 275 1 222 1 31 1 133 1 346 1 236 1 61 1 87 1 
199 1 48 1 250 5 239 5 275 5 5 2 31 5 74 2 72 5 256 2 17 5 79 2 126 2 124 2 36 10 
186 1 347 1 228 1 222 1 46 1 31 1 
353 2 2 1 250 2 186 2 275 2 144 4 145 2 255 1 278 1 165 1 56 1 172 1 198 1 40 1 128 2 292 1 242 1 83 1 316 2 133 1 346 2 347 4 87 2 61 2 348 4 228 3 46 3 351 1 115 4 
55 1 20 1 114 1 
18 1 20 1 28 1 57 1 114 1 
55 1 20 1 114 1 
55 1 20 1 114 1 
20 1 159 1 114 1 
20 1 159 1 114 1 
20 1 159 1 114 1 
20 1 114 1 
93 1 23 1 
160 2 118 1 96 1 328 1 208 1 71 4 73 1 168 4 102 2 124 1 79 1 286 1 38 1 127 2 339 8 369 1 106 1 240 1 15 1 268 1 201 1 227 1 47 1 
160 4 118 1 96 2 328 1 208 1 71 5 73 2 74 1 256 1 168 6 102 3 194 1 124 1 79 2 286 2 38 1 127 2 339 11 369 1 106 2 240 1 15 1 268 1 201 1 41 1 109 1 227 1 47 2 
160 6 118 1 96 1 95 1 328 1 208 1 71 10 73 3 74 2 256 2 168 9 147 1 102 4 79 3 126 2 124 3 286 3 38 1 219 1 127 3 339 19 369 1 106 3 240 1 14 1 15 1 268 1 41 1 201 1 109 1 85 1 227 1 47 3 
160 6 118 1 96 1 95 1 328 1 208 1 71 7 73 3 74 2 256 2 168 10 147 1 102 5 79 3 126 1 124 2 286 3 38 1 219 1 127 3 339 17 369 1 106 3 240 1 14 1 15 1 268 1 41 2 201 1 109 1 85 1 227 1 47 3 
160 2 118 1 96 1 328 1 208 1 71 4 73 1 168 4 102 2 124 1 79 1 286 1 38 1 127 2 339 8 369 1 106 1 240 1 15 1 268 1 201 1 227 1 47 1 
160 2 96 1 95 1 71 6 73 1 74 2 256 2 168 6 147 1 102 2 79 2 126 2 124 2 286 1 127 1 339 12 369 1 106 1 240 1 14 1 15 1 41 1 201 1 85 1 47 1 
160 8 118 1 96 1 95 1 328 1 208 1 71 8 73 4 74 2 256 2 168 10 147 1 102 5 79 3 126 1 124 2 286 4 38 1 219 2 127 3 339 18 369 1 106 4 240 1 14 1 15 1 268 1 41 2 201 1 109 1 85 1 227 1 47 4 
160 8 96 1 356 1 95 1 71 7 73 4 74 3 256 3 168 9 147 1 102 6 79 3 126 2 124 2 286 4 219 2 127 3 339 16 369 1 106 4 240 1 14 1 15 1 41 3 201 1 85 1 47 4 
118 2 38 3 127 3 339 7 208 1 71 4 268 1 41 3 168 3 102 6 227 3 124 1 79 1 
160 8 118 1 96 1 356 1 95 1 328 1 208 1 71 8 73 4 74 2 256 2 168 10 147 1 102 4 79 3 126 1 124 2 286 4 38 1 219 2 127 3 339 18 369 1 106 4 240 1 14 1 15 1 268 1 41 1 201 1 85 1 227 1 47 4 
160 4 286 2 219 1 118 1 38 1 127 2 339 8 106 2 328 1 208 1 71 4 268 1 41 1 73 2 168 4 102 3 227 1 124 1 79 1 47 2 
118 1 38 1 127 2 339 6 328 1 289 1 208 1 71 3 268 1 168 3 102 2 227 1 79 1 124 1 
160 2 286 1 127 1 106 1 339 4 71 2 41 1 73 1 74 1 256 1 109 1 168 2 102 2 124 1 126 1 47 1 79 1 
127 1 339 7 96 2 15 1 71 4 201 1 41 1 74 1 256 1 168 3 102 2 194 1 124 1 126 1 79 1 
160 4 118 1 96 2 328 1 208 1 71 12 74 2 73 2 256 2 168 11 102 9 305 1 194 1 79 3 126 2 124 3 286 2 38 2 219 2 127 5 339 23 106 2 15 2 59 1 268 1 41 4 227 2 112 1 47 2 
339 1 96 1 71 1 
339 1 168 1 15 1 
286 1 160 2 127 2 106 1 199 1 339 6 71 3 41 1 73 1 74 1 256 1 109 1 168 3 102 3 47 1 79 1 126 1 124 1 
160 2 96 1 95 1 71 6 73 1 74 2 256 2 168 6 147 1 102 2 79 2 126 2 124 2 286 1 127 1 339 12 369 1 106 1 240 1 14 1 15 1 41 1 201 1 85 1 47 1 
38 1 127 1 339 6 208 1 71 3 41 1 168 3 102 2 227 1 79 1 124 1 
160 2 286 1 38 1 118 1 219 1 127 1 339 3 106 1 59 1 71 2 268 1 41 1 73 1 168 1 102 2 227 1 47 1 
286 1 160 2 38 2 127 3 106 1 339 10 240 1 208 1 71 5 41 2 73 1 168 5 102 5 227 2 47 1 79 2 124 2 300 1 
160 2 286 1 106 1 339 2 240 1 41 1 73 1 256 1 168 2 102 1 47 1 79 1 
160 2 286 1 127 1 106 1 339 4 240 1 71 2 41 1 73 1 74 1 256 1 168 2 102 2 124 1 126 1 47 1 79 1 
160 6 286 3 219 1 38 1 127 1 339 3 106 3 356 1 240 1 59 1 71 2 41 1 73 3 168 1 102 2 227 1 47 3 
160 10 118 1 96 4 356 1 328 1 208 2 71 18 301 1 73 5 74 3 256 3 168 16 102 12 194 1 79 5 126 3 124 5 286 5 38 3 219 2 127 7 106 5 339 34 240 1 15 3 59 1 268 1 201 1 41 5 109 1 248 1 227 3 326 1 47 5 
7 1 327 1 108 1 247 1 43 1 51 1 284 1 
229 1 0 1 327 1 51 1 7 1 131 1 108 1 247 1 43 1 322 1 45 1 284 1 
144 1 278 1 172 1 316 1 2 1 40 1 289 1 348 1 351 1 83 1 115 1 
172 1 2 1 327 1 153 1 82 1 311 1 200 1 51 2 187 1 144 1 7 1 278 1 316 1 43 2 348 1 351 1 115 1 80 1 
353 1 327 2 2 2 51 2 140 1 253 1 187 2 144 1 7 1 278 1 75 1 80 1 172 1 82 2 153 1 310 1 311 1 288 1 200 1 43 2 348 1 351 3 115 1 
353 1 327 2 2 2 251 1 51 2 140 1 253 1 187 2 144 2 7 1 278 1 75 1 172 1 287 1 82 2 153 1 310 1 311 1 288 1 200 1 43 2 348 2 351 3 115 2 
353 1 205 1 172 1 2 1 81 1 251 1 288 1 222 1 31 1 187 1 144 3 254 1 316 1 75 1 278 1 364 1 347 1 228 2 348 3 46 2 249 1 351 4 115 3 
353 1 205 1 172 1 2 1 251 1 288 1 222 1 178 1 31 1 187 1 144 3 254 1 316 1 75 1 278 1 364 1 347 1 228 2 348 3 46 2 351 4 115 3 
144 1 278 1 172 1 348 1 58 1 115 1 
91 1 307 1 172 2 2 2 58 1 371 1 187 1 210 1 144 7 316 2 278 3 374 1 211 1 190 1 297 1 259 1 348 7 324 1 334 1 351 3 115 6 
327 1 2 1 328 1 51 2 187 1 144 1 278 1 7 2 102 2 238 1 286 2 106 2 339 6 153 1 12 1 13 1 200 1 348 1 350 1 351 1 115 1 160 4 118 1 22 1 120 2 208 1 357 1 71 3 73 2 303 2 168 3 259 1 366 1 79 1 124 1 80 1 38 1 172 1 127 2 82 1 311 1 268 1 132 1 43 2 227 1 47 2 378 1 
205 1 250 1 186 1 24 1 275 1 31 1 52 1 144 1 254 1 364 1 236 1 215 1 222 1 178 1 242 1 179 1 316 1 315 1 133 2 346 2 347 2 87 2 61 2 348 1 228 3 46 3 351 2 115 1 
172 1 2 1 58 1 187 1 254 1 144 2 245 1 278 2 211 1 259 1 348 2 351 2 115 2 
172 1 2 1 251 1 40 1 83 1 144 4 278 1 316 1 259 1 134 1 348 4 351 1 115 4 
307 1 352 1 353 1 172 1 2 1 187 1 144 2 278 2 204 1 348 2 324 1 351 1 115 2 64 1 
144 1 278 1 172 1 316 1 280 1 129 1 155 1 348 1 63 1 115 1 
172 1 2 1 371 1 144 2 210 1 278 1 259 1 321 1 348 2 351 1 115 2 
353 1 172 2 2 2 40 1 371 1 83 1 144 5 316 1 278 2 259 1 297 1 134 1 348 5 351 3 334 1 115 4 
353 1 172 2 2 2 40 1 138 1 371 1 83 1 144 5 316 1 278 2 259 1 134 1 348 5 351 3 334 1 115 4 
172 1 2 1 327 1 287 1 153 1 82 1 311 1 200 1 51 2 187 1 144 1 7 1 278 1 316 1 43 2 348 1 351 1 115 1 
307 1 353 1 172 1 2 1 187 1 144 1 278 2 374 1 211 1 348 1 324 1 351 1 115 1 
244 1 327 1 184 1 206 1 43 1 233 1 376 1 51 1 16 1 
181 1 42 1 233 1 
7 1 184 1 49 1 376 1 233 1 
184 2 161 1 310 1 49 2 207 1 233 1 140 1 222 1 253 1 31 1 179 1 42 1 181 1 7 1 364 1 166 1 376 2 228 2 46 2 
92 1 368 1 185 1 97 1 329 3 314 1 224 1 122 1 44 1 325 3 37 1 
293 1 224 1 67 1 325 1 329 1 314 1 
185 1 314 1 
185 1 289 1 44 1 314 1 
368 1 185 1 44 1 325 1 97 1 314 1 329 1 
342 1 325 1 209 1 
92 1 368 1 185 1 97 1 314 1 329 3 344 1 277 1 257 1 44 1 325 3 37 2 
368 1 185 1 224 1 265 1 44 1 325 2 97 1 314 1 329 2 
293 1 368 1 92 1 252 1 290 1 325 1 97 1 314 1 329 1 
368 1 92 1 185 1 325 1 97 1 314 1 329 1 
368 1 92 1 185 2 44 1 325 1 97 1 329 1 
92 1 368 2 185 1 232 1 97 2 314 1 329 2 235 1 365 1 325 2 
293 1 368 1 92 1 224 1 122 1 252 1 67 1 237 1 325 2 97 1 314 1 329 2 
92 1 368 1 185 1 50 1 155 2 129 1 141 1 97 1 314 1 329 2 224 1 44 1 63 1 325 2 285 1 
293 1 368 1 92 1 221 1 224 1 265 1 252 1 67 1 325 2 97 1 314 1 329 2 
368 1 92 1 185 1 44 1 325 1 97 1 314 1 329 1 
293 1 368 1 224 1 67 1 252 2 325 2 97 1 314 1 329 2 
92 1 368 1 309 1 185 1 97 1 314 1 329 2 54 1 224 1 148 1 44 1 325 2 
92 1 368 1 185 1 97 1 314 1 329 3 344 2 257 1 84 1 44 1 325 3 37 2 
273 1 323 1 276 2 314 2 
368 1 92 1 164 1 325 1 97 1 329 1 
368 1 92 1 185 1 224 1 122 1 44 1 325 2 97 1 314 1 329 2 
113 1 
368 1 92 1 185 1 44 1 325 1 97 1 314 1 329 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 360 (139,165) (139,165) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 2 360 4 233 1 67 2 263 1 288 1 139 1 240 1 7 1 241 1 309 4 92 2 165 1 48 9 149 6 219 1 299 9 81 2 15 3 82 1 223 2 370 1 272 1 176 1 255 2 29 1 337 1 36 2 
284 2 360 4 233 1 67 2 263 1 288 1 139 1 240 1 7 1 241 1 309 4 92 2 165 1 48 9 149 6 219 1 299 9 81 2 15 3 82 1 223 2 370 1 272 1 176 1 255 2 29 1 337 1 36 2 
284 2 360 5 233 1 67 2 263 1 288 1 139 1 240 1 7 1 241 1 309 5 92 2 165 1 48 10 149 7 219 1 299 10 81 2 15 4 82 1 223 2 370 1 272 1 176 1 255 2 29 1 337 1 36 2 
284 2 360 3 233 1 67 2 288 1 139 1 240 1 7 1 241 1 309 3 92 2 165 1 48 7 149 4 219 1 299 7 81 2 15 2 82 1 223 2 370 1 272 1 176 1 255 1 29 1 337 1 36 2 
149 3 284 1 299 4 360 2 15 1 67 1 82 1 263 1 223 1 139 1 240 1 7 1 309 2 255 2 92 1 165 1 48 4 36 1 
299 2 284 1 67 1 233 1 81 1 223 1 370 1 58 1 139 1 240 1 273 1 165 1 79 1 48 2 36 1 
149 1 299 3 360 1 67 2 81 1 15 1 223 2 288 1 139 1 240 1 309 1 165 1 48 3 
284 1 360 4 67 2 263 1 208 1 288 1 139 1 240 1 7 1 309 4 92 1 165 1 48 9 149 7 299 9 15 3 81 1 82 1 223 2 272 1 255 2 29 1 34 1 36 1 
284 1 360 4 67 2 263 1 208 1 288 1 139 1 240 1 7 1 309 4 92 1 165 1 48 9 149 7 299 9 15 3 81 1 82 1 223 2 272 1 255 2 29 1 34 1 36 1 
248 1 189 1 161 1 
355 2 282 1 161 1 
162 1 24 2 265 2 18 2 93 2 9 2 271 1 43 2 
357 1 38 1 305 2 262 1 340 1 40 1 4 1 42 1 5 1 289 2 43 2 162 1 242 1 265 2 293 2 266 2 91 1 76 1 93 2 116 1 296 1 9 3 218 1 328 1 119 1 12 1 18 3 369 1 330 1 271 1 317 1 125 1 102 1 59 1 24 2 377 1 280 2 
24 1 232 1 265 1 18 1 93 1 235 1 9 1 20 1 271 1 43 1 
18 1 235 1 84 1 160 1 161 1 43 1 343 1 188 1 201 1 9 1 63 1 189 1 327 1 13 1 
18 1 235 1 84 2 160 1 161 1 43 1 24 1 265 1 93 1 188 1 201 1 9 1 63 2 189 1 13 1 
55 1 63 1 84 1 77 1 49 1 
114 1 63 2 189 1 84 2 77 1 49 1 206 1 161 1 
63 1 84 1 49 1 
232 1 80 1 18 1 235 1 20 1 84 1 271 1 43 1 24 1 265 1 93 1 63 1 9 1 77 1 
161 1 
114 1 61 1 63 2 189 1 84 2 77 1 49 1 161 1 
98 1 134 2 39 1 207 1 21 1 84 5 122 1 161 1 114 1 275 1 63 5 189 1 77 2 216 2 302 1 322 1 49 2 304 1 50 2 
162 1 248 1 
18 2 185 1 43 2 24 1 162 2 265 1 93 1 9 2 323 1 
286 1 164 1 109 1 
38 1 305 1 18 1 340 1 125 1 59 1 162 1 293 1 76 1 294 1 9 1 280 1 218 1 328 1 119 1 12 1 
38 1 305 1 18 2 340 1 135 1 125 1 59 1 43 1 24 1 265 1 293 1 76 1 334 1 9 2 280 1 109 1 218 1 328 1 119 1 12 1 
162 1 24 3 265 3 18 3 93 1 9 3 135 1 43 3 
24 1 232 1 265 1 18 1 235 1 9 1 43 1 
24 1 265 1 18 1 93 1 235 1 9 1 185 1 323 1 43 1 
357 1 38 1 305 1 340 1 235 1 237 1 40 1 135 1 160 1 4 1 289 2 185 1 43 3 162 1 265 3 293 1 266 1 91 1 76 1 93 2 188 1 116 1 9 4 218 1 328 1 119 1 12 1 13 1 148 1 18 4 369 1 330 1 84 1 125 1 317 1 271 1 102 1 59 1 24 3 377 1 334 1 201 1 63 1 280 1 
162 1 343 1 24 1 265 1 18 2 9 2 135 1 243 1 43 2 
97 1 18 3 235 1 237 1 84 1 135 2 160 1 185 1 161 1 43 3 24 3 265 3 93 1 201 1 334 1 188 1 63 1 9 3 13 1 
18 2 135 1 185 1 43 2 24 2 164 1 265 2 93 1 9 2 109 1 
38 1 305 1 18 1 340 1 125 1 59 1 162 1 293 1 76 1 9 1 280 1 328 1 218 1 119 1 12 1 
305 1 18 1 100 1 340 1 125 1 59 1 162 1 319 1 293 1 9 1 280 1 328 1 218 1 119 1 12 1 
357 1 286 2 40 2 42 2 289 2 184 1 89 1 164 2 91 1 266 4 116 1 117 1 118 1 14 1 330 1 252 1 102 1 253 1 356 1 27 1 377 1 107 1 109 2 205 1 
24 1 265 1 18 1 235 1 9 1 160 1 110 1 43 1 
324 1 18 5 135 2 185 1 43 5 343 1 24 4 162 1 265 4 93 1 334 1 9 5 347 1 243 1 
24 2 232 1 265 2 18 2 235 1 9 2 110 1 43 2 
342 1 96 1 
342 1 96 1 
23 1 46 1 
23 1 46 1 
23 1 46 1 
342 1 186 1 96 1 
342 1 186 1 96 1 
342 1 228 1 96 1 
53 1 342 2 23 1 46 1 96 2 35 1 
342 1 186 1 96 1 
342 1 157 1 96 1 
342 1 157 1 96 1 
342 1 157 1 96 1 
53 1 338 2 325 1 169 1 84 2 101 1 198 1 161 1 342 2 90 1 104 3 26 2 105 2 63 2 96 2 144 1 281 2 329 2 313 1 
338 1 43 2 72 1 342 1 162 1 90 1 212 1 265 2 9 2 96 1 329 1 368 1 18 2 84 1 353 1 153 1 24 2 104 1 26 1 105 1 63 1 228 1 108 1 86 1 
284 1 92 1 36 1 
284 1 36 1 273 1 
226 1 291 1 92 2 197 1 36 3 273 1 
226 1 291 1 92 1 30 1 36 2 273 1 
226 2 291 1 92 1 36 2 273 1 
359 2 134 1 287 1 207 1 307 1 239 1 88 1 89 1 72 1 161 1 310 1 212 1 189 1 216 1 77 4 50 1 14 1 98 1 168 1 84 4 21 3 153 1 355 1 27 1 376 1 335 1 63 4 260 1 205 1 
287 1 134 2 207 6 88 6 89 3 161 5 310 6 212 4 189 1 77 7 216 2 49 5 50 2 14 3 55 5 98 1 84 8 21 8 355 9 373 1 374 1 254 1 27 3 200 1 376 2 335 2 63 8 336 1 260 3 378 5 304 1 205 3 282 3 379 1 
359 1 134 1 207 2 307 1 239 1 88 2 89 1 161 3 212 1 310 2 189 1 77 2 216 1 50 1 14 1 84 3 21 3 355 4 376 1 27 1 335 1 63 3 260 1 205 1 304 1 282 2 
359 2 134 1 207 4 307 1 239 1 88 4 89 2 161 4 310 4 212 2 189 1 216 1 77 3 50 1 14 2 84 4 21 5 355 7 373 1 374 1 254 1 376 1 27 2 335 1 63 4 260 2 205 2 304 1 282 3 
248 1 326 1 218 1 
17 1 218 1 
155 1 
218 1 119 1 
177 1 326 2 218 3 328 1 119 1 381 1 
218 1 328 1 119 1 
332 1 218 1 
150 1 261 1 40 3 42 4 171 1 183 1 184 2 372 1 356 3 74 1 27 1 213 2 266 7 205 1 146 1 246 1 283 1 
150 1 261 1 40 3 42 4 171 1 183 1 184 2 372 1 356 3 74 1 27 1 213 2 266 7 205 1 146 1 246 1 283 1 
150 1 261 1 222 1 40 3 42 4 171 1 183 1 184 2 372 1 356 3 74 1 27 1 213 2 266 7 205 1 146 1 246 1 283 1 
357 1 261 1 40 15 41 1 42 16 183 1 138 1 289 2 89 3 184 5 344 3 74 2 91 1 266 31 213 3 312 1 190 1 146 1 246 5 244 1 14 3 150 2 330 1 102 1 171 2 372 1 274 1 333 4 356 10 27 4 260 3 205 4 133 1 283 2 
357 2 261 1 40 4 42 5 289 4 184 3 74 1 91 2 266 9 213 2 10 1 146 1 246 1 150 1 268 1 330 2 102 2 171 1 372 1 356 4 27 1 205 1 133 1 283 1 
284 1 305 1 67 1 340 1 139 1 240 1 311 1 293 1 92 1 47 1 165 1 48 2 149 1 299 2 151 1 81 1 192 1 269 1 223 1 125 1 197 1 22 1 225 1 273 1 85 1 62 1 280 1 279 1 36 2 
284 1 305 1 67 1 340 1 139 1 311 1 293 1 92 1 295 1 47 1 165 1 48 3 149 2 299 3 151 1 81 1 314 1 223 1 125 1 197 1 22 1 225 1 273 1 85 1 62 1 280 1 279 1 33 1 36 2 
284 1 305 1 340 1 139 1 311 1 293 1 92 1 295 1 47 1 165 1 48 2 149 2 299 2 151 1 81 1 314 1 125 1 197 1 22 1 225 1 273 1 280 1 279 1 36 2 
305 1 67 1 340 1 306 1 363 1 6 1 45 1 293 1 47 2 218 1 48 1 119 1 12 1 299 1 81 2 223 1 196 1 125 1 225 2 22 2 278 1 280 1 33 1 
284 1 305 1 67 1 340 1 240 1 311 1 293 1 92 1 295 1 47 1 48 1 299 1 151 1 81 1 269 1 223 1 125 1 197 1 22 1 225 1 273 1 85 1 62 1 280 1 279 1 36 2 
70 1 
305 2 340 1 207 2 160 1 209 1 71 1 161 2 114 3 343 1 214 2 9 1 216 1 11 2 218 1 119 1 12 2 13 1 18 1 19 1 21 2 84 5 125 1 172 1 355 2 178 1 278 1 280 2 282 2 230 2 285 2 134 1 181 1 362 1 235 1 363 1 364 2 43 1 44 2 141 4 293 2 188 1 189 1 327 1 49 6 50 1 245 1 98 1 191 1 60 1 335 1 201 1 63 5 259 1 380 1 156 2 
285 1 18 1 235 1 362 1 84 3 160 1 71 1 172 1 43 1 114 1 60 1 343 1 141 2 61 1 201 1 188 1 63 3 9 1 327 1 49 2 245 1 13 1 
18 1 235 1 362 1 84 3 160 1 71 1 172 1 161 1 43 1 114 1 60 1 343 1 141 3 61 1 201 1 188 1 63 3 9 1 189 1 327 1 49 1 156 1 245 1 13 1 
285 1 362 1 235 1 160 1 71 1 43 1 161 1 114 1 343 1 141 3 188 1 9 1 327 1 189 1 11 1 49 2 13 1 245 1 18 1 84 3 172 1 60 1 61 1 201 1 63 3 156 1 
207 1 160 1 71 1 161 5 114 3 343 1 211 1 115 1 345 1 214 2 9 1 216 1 11 4 13 1 166 1 18 1 84 5 21 1 172 1 230 2 282 2 285 4 134 1 235 1 362 1 238 1 43 1 364 2 44 2 141 6 188 1 327 1 189 5 49 7 50 1 245 1 98 1 191 1 60 1 61 1 201 1 63 5 259 1 156 4 
207 1 160 1 71 1 161 2 343 1 114 2 214 2 9 1 216 1 11 2 13 1 18 1 84 4 21 1 172 1 355 2 230 2 282 2 285 2 134 1 235 1 362 1 43 1 364 2 44 2 141 4 188 1 327 1 189 1 49 4 50 1 245 1 98 1 191 1 60 1 201 1 63 4 259 1 380 1 156 2 
285 2 134 1 362 1 235 1 207 1 160 1 238 1 71 1 161 1 364 2 43 1 44 2 114 2 343 1 141 4 214 2 345 1 188 1 115 1 9 1 189 1 327 1 216 1 11 2 49 4 50 1 13 1 245 1 98 1 191 1 18 1 21 1 84 4 172 1 60 1 201 1 63 4 259 1 282 2 230 2 156 2 
285 2 134 1 362 1 235 1 207 1 160 1 238 1 71 1 161 1 364 2 43 1 44 2 114 2 343 1 141 4 214 2 345 1 188 1 115 1 9 1 189 1 327 1 216 1 11 2 49 4 50 1 13 1 245 1 98 1 191 1 18 1 21 1 84 4 172 1 60 1 201 1 63 4 259 1 282 2 230 2 156 2 
285 2 134 1 362 1 235 1 207 1 160 1 71 1 308 1 161 1 364 2 43 1 114 2 343 1 141 4 214 2 345 1 188 1 9 1 189 1 327 1 216 1 11 2 49 4 50 1 13 1 245 1 54 2 98 1 18 1 21 1 84 4 172 1 175 1 199 2 355 2 60 1 201 1 63 4 259 1 156 2 111 1 
285 3 134 1 362 1 235 1 207 1 238 1 160 1 71 1 161 1 364 2 43 1 44 2 114 2 343 1 211 1 141 5 214 2 345 1 188 1 115 1 9 1 189 1 327 1 216 1 11 3 49 5 50 1 13 1 245 1 98 1 191 1 18 1 21 1 84 4 172 1 60 1 201 1 63 4 259 1 282 2 230 2 156 3 
285 3 134 1 362 1 235 1 207 1 238 1 160 1 71 1 161 1 364 2 43 1 44 2 114 2 343 1 211 1 141 5 214 2 345 1 188 1 115 1 9 1 189 1 327 1 216 1 11 3 49 5 50 1 13 1 245 1 98 1 191 1 18 1 21 1 84 4 172 1 60 1 201 1 63 4 259 1 282 2 230 2 156 3 
207 1 160 1 71 1 161 1 343 1 114 2 214 2 9 1 216 1 11 2 13 1 18 1 84 4 21 1 172 1 355 2 285 2 134 1 235 1 362 1 43 1 364 2 141 4 188 1 327 1 189 1 49 4 50 1 245 1 54 2 98 1 60 1 199 2 201 1 63 4 259 1 380 1 111 1 156 2 
357 1 261 1 286 1 40 3 42 3 289 2 184 2 162 2 164 1 91 1 266 6 213 1 116 1 118 1 146 1 150 1 248 1 330 1 102 1 372 1 356 2 377 1 27 1 109 1 205 1 283 1 
357 2 286 11 262 1 40 6 42 8 184 1 289 4 89 2 162 1 344 3 164 4 91 2 266 14 116 1 312 1 142 1 246 1 14 1 195 1 369 1 331 1 330 2 102 2 274 1 333 3 356 2 377 2 27 2 154 1 109 11 260 2 205 1 66 1 
38 1 357 1 305 1 262 1 340 1 135 1 40 1 42 1 289 2 43 1 162 1 293 1 164 1 265 1 76 1 91 1 266 2 294 1 116 1 9 2 218 1 328 1 119 1 12 1 349 1 18 2 195 1 330 1 369 1 125 1 102 1 224 1 59 1 24 1 256 1 377 1 334 1 280 1 
261 1 305 3 262 1 340 2 162 2 265 1 75 2 164 7 213 1 266 20 76 2 9 3 116 3 348 1 218 2 119 2 12 1 14 2 221 1 18 3 317 2 125 2 24 1 356 8 27 3 280 3 131 2 283 1 357 3 38 2 286 7 40 10 135 1 42 10 184 4 289 6 89 2 43 1 293 3 91 3 94 2 295 1 143 1 328 2 146 1 246 4 150 1 195 1 369 1 330 3 102 3 57 2 372 1 59 2 377 3 334 1 109 7 260 2 205 3 
305 7 262 1 340 4 159 1 112 1 73 1 265 1 266 2 116 2 9 1 118 1 218 4 119 3 12 2 18 1 124 1 125 3 24 1 276 1 28 1 278 1 280 6 321 1 357 2 40 1 135 1 136 1 363 1 42 1 289 4 43 1 187 1 293 7 91 2 296 2 328 1 192 1 369 1 330 2 102 2 103 1 377 2 257 1 
357 1 286 1 40 2 42 1 184 1 185 1 289 2 89 1 43 1 164 1 265 1 91 1 266 3 93 1 116 1 9 1 14 1 18 1 195 1 330 1 102 1 24 1 356 1 377 1 27 1 258 1 109 1 260 1 205 1 
357 1 286 1 330 1 102 1 42 2 289 2 89 1 356 1 164 1 266 2 377 1 91 1 27 1 116 1 118 1 107 1 109 1 246 1 
357 1 14 1 286 1 330 1 40 2 102 1 184 1 289 2 253 1 356 1 164 1 266 2 377 1 91 1 116 1 118 1 109 1 205 1 
357 1 286 2 40 2 42 2 89 1 289 2 184 1 164 2 91 1 266 4 116 1 118 1 246 1 14 1 330 1 102 1 356 2 27 1 377 1 109 2 260 1 205 1 
357 1 286 1 330 1 102 1 42 2 112 1 289 2 89 1 356 1 164 1 266 2 377 1 91 1 27 1 116 1 107 1 109 1 246 1 
357 1 14 1 286 1 330 1 40 2 102 1 112 1 184 1 289 2 253 1 356 1 164 1 266 2 377 1 91 1 116 1 109 1 205 1 
357 1 286 2 40 2 42 2 112 1 89 1 289 2 184 1 164 2 91 1 266 4 116 1 246 1 14 1 330 1 102 1 356 2 27 1 377 1 109 2 260 1 205 1 
14 1 357 1 286 2 40 2 330 1 102 1 42 2 184 1 289 2 89 1 356 2 164 2 377 1 91 1 27 1 266 4 116 1 109 2 260 1 205 1 246 1 
38 1 357 1 305 1 262 1 340 1 40 1 42 1 289 2 162 1 293 1 266 2 76 1 91 1 9 1 116 1 328 1 218 1 119 1 12 1 18 1 330 1 369 1 125 1 317 1 102 1 59 1 377 1 280 1 
357 1 305 1 262 1 340 1 40 1 42 1 289 2 162 1 293 1 266 2 91 1 9 1 116 1 297 1 328 1 218 1 119 1 12 1 18 1 100 1 330 1 369 1 125 1 102 1 59 1 319 1 377 1 280 1 
357 1 286 2 40 2 42 2 89 1 289 2 184 1 164 2 91 1 266 4 116 1 246 1 14 1 195 1 330 1 102 1 356 2 27 1 377 1 109 2 260 1 205 1 
38 1 357 1 286 2 305 1 340 1 40 2 42 2 184 1 89 1 289 2 164 2 293 1 266 4 76 1 91 1 94 1 9 1 116 1 328 1 218 1 119 1 246 1 14 1 18 1 192 1 330 1 125 1 317 1 102 1 59 1 356 2 27 1 377 1 280 1 109 2 260 1 205 1 
357 1 286 1 40 1 42 2 185 1 289 2 89 1 43 1 265 1 164 1 91 1 266 3 93 1 116 1 9 1 246 1 14 1 18 1 195 1 330 1 102 1 128 1 24 1 356 1 377 1 27 1 109 1 260 1 205 1 
357 2 1 1 40 10 42 9 184 3 289 4 89 3 344 1 8 1 91 2 266 19 10 1 312 1 366 1 95 1 147 2 246 3 14 3 193 1 194 1 330 2 102 2 170 1 274 1 333 2 356 6 27 3 260 3 205 3 65 2 
357 3 234 1 264 1 40 12 42 14 184 2 289 6 89 3 344 2 8 1 91 3 266 26 10 1 366 1 367 1 95 2 145 1 147 1 246 2 14 2 193 2 315 1 194 1 330 3 102 3 371 1 274 2 333 2 356 4 27 3 260 3 205 2 133 2 65 4 
357 3 261 1 234 1 1 1 264 1 40 21 42 20 184 4 289 6 89 4 344 3 8 1 213 1 91 3 266 41 10 1 312 1 366 1 367 1 95 2 145 1 146 1 147 1 246 4 14 4 150 1 315 1 193 1 194 1 330 3 102 3 371 1 372 1 274 3 333 4 375 1 356 8 27 5 260 4 205 5 133 1 65 4 283 1 
357 4 261 1 234 1 1 1 264 1 40 18 42 20 184 4 289 8 89 4 344 3 8 1 213 1 91 4 266 38 10 1 312 1 366 1 367 1 95 2 145 1 146 1 147 1 246 3 14 3 150 1 315 1 193 1 194 1 330 4 102 4 371 1 372 1 274 3 333 4 375 1 356 7 27 5 260 4 205 4 133 2 65 4 283 1 
357 2 261 1 234 1 264 1 40 25 42 27 184 7 289 4 89 7 344 4 8 1 213 1 91 2 266 52 10 1 312 2 366 1 367 1 95 1 145 1 146 1 147 1 246 7 14 7 150 1 315 1 193 1 194 1 331 2 330 2 102 2 371 1 372 1 274 2 333 4 356 14 27 8 260 7 205 8 133 1 65 4 283 1 
53 1 342 1 338 1 26 1 105 1 106 1 96 1 198 1 329 1 313 1 
228 1 86 1 
231 1 342 1 338 1 26 1 105 1 352 1 96 1 329 1 174 1 
53 1 338 1 325 1 169 1 84 1 198 1 161 1 342 1 90 1 104 2 26 1 63 1 105 1 96 1 144 1 281 1 329 1 313 1 
53 1 338 1 325 1 169 1 84 1 198 1 161 1 342 1 90 1 104 2 26 1 63 1 105 1 96 1 144 1 281 1 329 1 313 1 
53 1 338 1 325 1 169 1 84 1 198 1 161 1 342 1 90 1 104 2 26 1 63 1 105 1 96 1 144 1 281 1 329 1 313 1 
186 1 35 1 64 1 
186 1 35 1 64 1 
157 1 229 1 
157 1 229 1 35 1 
368 1 108 1 
338 1 325 1 72 1 43 2 342 1 162 1 212 1 265 2 9 2 77 1 78 1 96 1 329 1 368 1 18 2 84 1 353 1 153 1 24 2 104 1 26 1 63 1 105 1 228 1 108 1 281 1 86 1 
186 1 64 1 
157 1 229 1 35 1 
357 1 358 1 305 2 262 1 340 1 40 1 42 1 289 2 43 2 73 1 293 2 292 1 91 1 266 2 116 1 9 2 296 2 346 1 218 1 119 1 18 2 195 1 152 1 330 1 369 1 125 1 124 1 102 1 377 1 280 2 132 1 
284 1 305 2 361 1 192 1 340 1 69 1 125 1 197 1 173 1 22 1 273 1 85 1 311 1 293 2 92 1 295 1 280 2 279 1 36 2 
284 1 305 1 351 1 69 1 340 1 125 1 197 1 22 1 273 1 85 1 311 1 293 1 92 1 295 1 280 1 279 1 36 2 
305 1 340 1 306 1 125 1 363 1 173 1 22 1 113 1 293 1 278 1 280 1 218 1 119 1 12 1 
284 1 305 1 361 1 340 1 69 1 125 1 197 1 173 1 22 1 273 1 85 1 311 1 293 1 92 1 295 1 280 1 279 1 36 2 
316 1 
248 1 275 1 189 1 207 1 21 1 302 1 161 1 
134 1 207 1 161 2 44 1 114 1 189 1 216 1 49 1 50 1 98 1 191 1 21 1 84 1 355 1 63 1 282 1 230 1 
0 2 305 3 340 4 207 8 161 8 114 3 310 6 75 2 216 4 218 10 119 3 12 1 14 2 220 2 17 3 167 2 21 9 84 5 125 3 354 1 129 1 25 1 355 12 27 2 275 1 280 3 130 2 282 6 134 4 181 1 236 2 137 2 88 6 89 2 293 3 326 2 189 2 328 3 49 5 50 4 298 2 300 1 98 4 251 1 192 1 332 2 335 2 201 2 63 5 202 2 302 1 260 2 205 2 381 1 
134 2 234 1 181 1 236 1 207 5 137 2 88 5 89 2 161 5 114 1 140 1 344 1 310 5 215 1 189 2 216 2 367 1 145 1 49 1 50 2 14 2 98 2 315 1 84 1 21 8 371 1 274 1 355 6 333 1 27 2 335 1 63 1 260 2 205 2 282 3 
232 1 134 1 235 1 236 1 207 2 238 1 137 2 43 1 265 1 93 1 9 1 216 1 50 1 150 1 98 1 80 1 18 1 20 1 84 1 21 2 271 1 372 1 24 1 27 2 320 1 63 1 205 1 283 1 
98 1 134 1 207 1 21 1 161 1 275 1 189 1 216 1 302 1 50 1 
14 2 236 1 207 5 21 5 137 2 88 5 89 2 161 5 355 10 310 5 75 1 27 2 260 2 205 2 282 5 
114 1 63 1 189 1 84 1 49 1 161 1 
305 4 134 2 340 1 181 2 207 2 363 1 114 2 293 4 216 2 218 1 119 1 49 4 50 2 12 2 98 1 251 2 19 1 21 2 84 3 125 1 126 1 129 1 178 1 335 2 63 3 278 1 32 1 280 4 304 1 
38 1 357 1 305 1 340 1 40 1 4 1 289 2 43 2 162 1 293 1 265 2 266 1 91 1 76 1 93 2 9 3 116 1 328 1 218 1 119 1 12 1 18 3 369 1 330 1 271 1 317 1 125 1 102 1 59 1 24 2 377 1 280 1 
98 1 134 1 181 1 207 2 21 1 88 2 161 4 355 4 310 2 213 1 335 1 189 2 216 1 50 1 282 2 
180 1 26 1 329 1 
180 1 26 1 329 1 
368 1 26 1 303 1 329 1 313 1 
180 1 26 1 329 1 
26 1 158 1 329 1 
26 1 158 1 329 1 
26 1 158 1 329 1 
26 1 329 1 
342 1 96 1 
357 2 261 1 150 1 40 4 330 2 42 4 102 2 184 2 289 4 372 1 356 3 213 1 27 1 266 8 91 2 205 1 133 1 146 1 246 1 283 1 
261 1 150 1 248 1 40 3 42 3 184 2 372 1 356 2 213 1 27 1 266 6 205 1 146 1 283 1 
14 1 357 1 40 2 330 1 102 1 42 2 184 1 290 1 289 2 89 1 356 2 91 1 27 1 266 4 260 1 205 1 246 1 
14 1 40 4 42 3 184 1 89 1 274 1 344 1 333 2 356 2 266 7 27 1 312 1 260 1 205 1 246 1 
357 2 261 1 40 12 42 11 89 2 184 5 289 4 344 2 213 1 266 23 91 2 312 1 142 1 146 1 120 1 246 4 14 2 150 2 331 1 330 2 102 2 372 1 333 2 356 9 27 3 260 2 205 3 133 2 283 2 
333 1 266 1 40 1 
344 1 266 1 42 1 
357 1 14 1 330 1 40 3 102 1 42 3 289 2 290 1 89 1 184 2 75 1 356 3 91 1 266 6 27 1 260 1 205 1 246 1 
357 1 234 1 40 6 42 6 289 2 89 2 184 1 344 1 266 12 91 1 10 1 367 1 145 1 246 1 14 2 315 1 330 1 102 1 371 1 274 1 333 1 356 2 27 2 260 2 205 2 
150 1 40 3 42 3 184 1 372 1 356 2 27 1 266 6 205 1 283 1 246 1 
357 1 150 1 261 1 40 2 330 1 42 1 102 1 184 1 289 2 356 2 266 3 91 1 146 1 120 1 133 1 246 1 283 1 
357 1 150 2 330 1 40 5 102 1 42 5 289 2 184 3 372 1 356 5 91 1 266 10 27 2 320 1 10 1 205 2 283 2 246 2 
357 1 330 1 102 1 42 2 289 2 89 1 356 1 91 1 27 1 266 2 10 1 246 1 
14 1 357 1 40 2 330 1 102 1 42 2 184 1 289 2 89 1 356 2 91 1 27 1 266 4 10 1 260 1 205 1 246 1 
357 3 150 1 1 1 40 2 330 3 102 3 42 1 289 6 184 1 356 2 266 3 91 3 10 1 133 1 120 1 283 1 246 1 
357 5 261 1 1 1 40 18 41 1 42 16 138 1 290 1 289 10 89 3 184 7 344 3 213 1 91 5 266 34 10 1 312 1 146 1 120 1 244 1 246 5 14 3 150 3 330 5 102 5 372 2 274 1 333 4 356 12 27 5 260 3 205 5 133 2 283 3 
357 1 261 1 40 4 42 4 289 2 184 2 344 1 213 1 266 8 91 1 10 1 367 1 146 1 150 1 330 1 102 1 274 1 372 1 333 1 356 2 27 1 205 1 283 1 
357 2 261 1 40 5 42 6 184 2 289 4 290 1 89 1 344 1 213 1 266 11 91 2 10 1 312 1 367 1 146 1 246 1 150 1 330 2 102 2 372 1 274 1 333 2 356 3 27 2 260 1 205 1 283 1 
357 3 261 1 234 1 40 10 42 9 290 1 289 6 89 2 184 3 344 1 213 1 266 19 91 3 10 1 367 1 145 1 146 1 246 1 14 2 150 1 315 1 330 3 102 3 371 1 372 1 274 1 333 1 356 4 27 3 260 2 205 3 133 1 283 1 
357 3 261 1 234 1 40 7 42 10 290 1 289 6 89 2 184 3 344 1 213 1 266 17 91 3 10 1 367 1 145 1 146 1 246 2 14 1 150 1 315 1 330 3 102 3 371 1 372 1 274 1 333 1 356 5 27 3 260 2 205 2 133 1 283 1 
357 1 261 1 40 4 42 4 289 2 184 2 344 1 213 1 266 8 91 1 10 1 367 1 146 1 150 1 330 1 102 1 274 1 372 1 333 1 356 2 27 1 205 1 283 1 
357 1 234 1 40 6 42 6 289 2 89 2 184 1 344 1 266 12 91 1 10 1 367 1 145 1 246 1 14 2 315 1 330 1 102 1 371 1 274 1 333 1 356 2 27 2 260 2 205 2 
357 4 261 1 234 1 40 8 42 10 290 1 289 8 89 2 184 3 344 1 213 1 266 18 91 4 10 1 367 1 145 1 146 1 246 2 14 1 150 1 315 1 330 4 102 4 371 1 372 1 274 1 333 1 356 5 27 3 260 2 205 2 133 2 283 1 
357 4 234 1 1 1 40 7 42 9 289 8 89 3 184 3 344 1 266 16 91 4 10 1 367 1 145 1 246 3 14 2 315 1 330 4 102 4 371 1 274 1 333 1 356 6 27 3 260 3 205 2 133 2 
261 1 150 3 40 4 42 3 184 3 372 1 356 6 266 7 27 1 205 1 146 2 283 3 246 3 
357 4 261 1 234 1 1 1 40 8 42 10 289 8 89 2 184 3 344 1 213 1 266 18 91 4 10 1 367 1 145 1 146 1 246 1 14 1 150 1 315 1 330 4 102 4 371 1 372 1 274 1 333 1 356 4 27 3 260 2 205 2 133 2 283 1 
227 1 162 1 343 1 18 1 9 1 243 1 43 1 
18 1 83 1 43 1 227 1 162 1 365 1 343 1 9 1 179 1 243 1 87 1 52 1 
248 1 305 1 293 1 340 1 278 1 280 1 125 1 218 1 363 1 119 1 12 1 
38 1 305 1 18 2 340 1 135 1 125 1 59 1 43 1 162 1 24 1 265 1 293 1 9 2 280 1 218 1 328 1 119 1 12 1 
38 1 305 1 340 1 235 1 135 1 160 1 43 2 162 1 293 1 265 2 188 1 9 2 328 2 218 3 119 2 251 1 18 2 125 1 59 1 332 1 24 1 202 1 280 1 
305 2 340 1 235 1 135 1 160 1 210 1 43 2 162 1 293 2 265 2 188 1 9 2 328 2 218 3 119 2 251 1 18 2 100 1 125 1 59 1 332 1 24 1 202 1 280 2 
350 1 305 3 251 1 17 1 340 1 84 2 125 1 210 1 161 1 332 1 293 3 201 1 326 1 202 1 63 2 189 1 203 1 280 3 328 1 218 4 119 1 49 1 12 1 
0 1 305 3 251 1 17 1 340 1 84 2 125 1 210 1 161 1 332 1 293 3 201 1 326 1 202 1 63 2 189 1 280 3 328 1 218 4 119 1 49 1 12 1 
305 1 293 1 187 1 340 1 280 1 125 1 
305 6 192 1 340 3 159 1 56 1 125 2 73 1 103 1 187 1 293 6 28 1 276 1 296 1 321 1 280 5 328 1 218 3 119 2 12 2 381 1 
261 1 305 1 340 1 162 2 164 1 265 1 76 1 266 6 213 1 9 2 116 2 218 1 119 1 18 2 317 1 125 1 24 1 356 2 27 1 280 1 131 1 283 1 38 1 357 2 358 1 286 1 135 1 40 3 42 3 289 4 184 2 43 1 293 1 91 2 94 1 328 1 146 1 150 1 192 1 195 1 330 2 102 2 59 1 372 1 377 2 109 1 205 1 
0 1 305 1 134 2 207 1 161 1 114 1 293 1 326 1 189 1 216 2 77 1 218 2 49 2 50 2 12 1 298 1 220 1 98 2 17 1 21 1 84 3 129 1 275 1 201 1 63 3 280 1 302 1 130 1 
300 1 305 2 192 1 340 2 125 1 187 1 293 2 326 1 280 2 328 1 218 2 119 1 381 1 
305 4 192 1 340 1 125 1 363 1 341 1 210 1 293 4 278 1 280 4 218 1 119 1 12 1 
221 1 305 2 251 1 340 2 136 1 125 1 103 1 293 2 276 1 280 2 257 1 328 1 218 1 119 1 
284 1 305 1 293 1 340 1 279 1 280 1 125 1 36 1 273 1 12 1 
305 2 192 1 340 1 125 1 73 1 293 2 295 1 346 1 280 2 218 1 119 1 
305 5 251 1 192 1 340 2 159 1 125 2 363 1 341 1 73 1 293 5 28 1 278 1 280 4 218 3 119 2 12 1 
305 5 251 1 192 1 340 2 159 1 125 2 363 1 341 1 73 1 293 5 277 1 278 1 280 4 218 3 119 2 12 1 
305 1 18 2 100 1 340 1 135 1 125 1 59 1 43 1 162 1 24 1 265 1 293 1 9 2 280 1 218 1 328 1 119 1 12 1 
305 1 251 1 340 2 56 1 125 1 103 1 293 1 276 1 280 1 328 1 218 1 119 1 381 1 
18 1 152 1 43 1 318 1 292 1 9 1 204 1 217 1 132 1 
247 1 270 1 217 1 
318 1 162 1 123 1 204 1 217 1 
247 1 235 1 237 1 84 2 160 1 270 1 123 2 161 1 318 2 162 1 163 1 201 1 188 1 63 2 189 1 77 1 204 2 217 1 13 1 
248 1 165 1 139 1 
299 1 67 1 223 1 165 1 48 1 139 1 
81 1 47 1 48 1 
299 3 16 1 67 1 223 1 2 1 3 1 370 2 240 1 139 1 165 1 48 3 
149 1 299 2 67 1 255 1 223 1 165 1 48 2 139 1 
284 1 309 1 299 1 360 1 67 1 82 1 92 1 223 1 48 1 36 1 240 1 
299 1 67 1 223 1 48 1 139 1 240 1 
299 1 360 1 67 1 223 1 165 1 48 1 139 1 240 1 
299 2 250 1 67 2 223 2 127 1 139 1 240 1 48 2 37 1 
149 2 299 3 360 1 67 1 15 1 223 1 272 1 139 1 240 1 309 1 29 1 165 1 48 3 
149 1 299 2 284 1 67 1 68 1 223 1 197 1 139 1 273 1 240 1 92 1 165 1 48 2 36 2 
149 2 299 4 360 1 67 2 15 1 263 1 223 2 139 1 240 1 309 1 255 1 165 1 48 4 
299 1 67 1 223 1 165 1 48 1 139 1 240 1 
149 2 299 4 360 1 67 1 15 1 2 1 223 1 3 1 370 1 139 2 309 1 301 1 165 2 48 4 
149 1 299 2 67 1 99 1 223 1 182 1 139 1 240 1 34 1 165 1 48 2 
299 3 67 1 2 1 223 1 3 2 370 2 240 1 139 1 31 1 165 1 48 3 
339 1 360 2 121 1 51 2 
299 1 249 1 67 1 223 1 48 1 240 1 
149 1 299 2 67 1 29 1 223 1 165 1 48 2 139 1 240 1 
267 1 
299 1 67 1 223 1 165 1 48 1 139 1 240 1 
149 1 299 3 67 1 29 1 223 1 165 1 370 1 48 3 139 1 240 1 
309 1 360 1 15 1 301 1 
139 1 

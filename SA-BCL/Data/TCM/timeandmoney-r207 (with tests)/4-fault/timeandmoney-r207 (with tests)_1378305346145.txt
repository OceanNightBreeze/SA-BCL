#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (22,114) 237 (253,284) (253,284) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (22,114) 237 (253,284) (253,284) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (22,114) 237 (253,284) (253,284) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (22,114) 237 (253,284) (253,284) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
185 1 308 1 114 1 40 3 265 1 141 2 277 2 301 1 130 2 257 1 259 1 23 3 351 1 
168 1 277 1 141 1 308 1 284 1 40 1 22 1 253 1 23 1 237 1 351 1 
168 1 277 1 141 1 308 1 284 1 40 1 22 1 253 1 23 1 237 1 351 1 
168 1 277 1 141 1 308 1 284 1 40 1 22 1 253 1 23 1 237 1 351 1 
168 1 277 1 141 1 308 1 284 1 40 1 22 1 253 1 23 1 237 1 351 1 
185 1 0 1 295 1 40 4 42 1 265 1 141 1 277 1 301 2 130 3 257 1 107 1 173 2 361 1 259 3 23 4 96 1 351 1 
134 1 168 1 308 1 271 1 40 2 42 1 265 1 232 1 141 1 277 1 183 1 130 1 257 1 107 1 23 2 351 1 
185 3 0 1 76 1 295 1 277 2 301 4 130 5 257 1 107 1 173 2 259 7 351 1 308 1 331 1 114 1 40 9 264 1 42 1 265 1 66 1 141 2 361 1 23 9 96 1 
185 3 0 1 76 1 295 1 277 2 301 4 130 5 257 1 107 1 173 2 259 7 351 1 308 1 331 1 114 1 40 9 264 1 42 1 265 1 66 1 141 2 361 1 23 9 96 1 
53 1 14 1 169 1 355 1 286 1 162 1 223 1 222 1 78 1 103 1 181 1 131 1 91 1 338 1 
238 1 
238 1 216 1 53 2 290 1 5 1 162 2 222 1 149 1 
238 1 53 5 216 2 285 2 297 1 5 1 162 5 288 1 222 2 138 1 266 1 8 1 320 2 184 1 348 2 133 1 37 1 149 1 350 1 
238 1 47 1 5 1 
352 1 238 1 57 2 
103 2 181 2 169 1 355 2 91 2 43 1 338 2 78 2 
169 1 167 2 250 1 127 1 77 2 208 1 155 1 275 1 28 1 78 2 102 1 103 2 191 1 214 1 104 1 300 1 32 1 33 1 35 1 109 1 176 1 353 1 309 2 355 2 160 1 241 2 200 1 43 1 315 1 317 1 181 2 267 1 87 2 91 3 148 1 322 1 338 3 
103 1 181 1 169 1 14 1 355 1 286 1 91 1 223 1 338 1 78 1 
238 1 53 1 73 1 240 1 286 1 161 1 5 1 162 1 118 1 103 1 318 1 89 1 91 1 338 1 
238 1 53 2 73 1 355 1 240 1 286 1 161 1 5 1 162 2 78 1 118 1 103 1 181 1 91 1 338 1 
233 1 216 1 53 1 162 1 222 1 
238 1 216 1 53 2 5 1 162 2 349 1 222 1 149 1 
216 1 53 1 162 1 
355 1 4 1 231 1 43 2 78 1 103 2 181 1 91 2 338 2 
272 1 129 1 215 1 
167 1 309 1 250 1 241 1 43 1 315 1 28 1 317 1 104 1 214 1 143 1 33 1 91 1 109 1 338 1 176 1 
47 1 43 1 
282 1 167 1 250 1 309 1 355 1 241 1 315 1 28 1 317 1 103 1 214 1 181 1 104 1 46 1 33 1 91 2 109 1 215 1 176 1 338 2 
103 3 181 3 46 1 355 3 91 3 43 1 338 3 78 1 
103 1 181 1 355 1 286 1 91 1 223 1 338 1 
103 1 181 1 355 1 4 1 286 1 91 1 231 1 338 1 78 1 
53 1 169 1 167 1 250 1 73 1 127 1 77 2 231 1 155 1 28 1 78 2 102 1 103 3 191 1 214 1 104 1 32 1 33 1 35 1 109 1 176 1 282 1 353 1 309 1 240 1 261 1 355 3 241 1 286 1 161 1 243 1 162 1 43 1 315 1 118 1 317 1 267 1 181 3 87 1 46 1 91 4 148 1 322 1 338 4 
103 2 181 1 46 1 355 1 89 1 91 2 43 1 49 1 338 2 
282 1 238 1 53 1 73 1 355 3 261 1 240 1 161 1 286 1 231 1 162 1 78 1 118 1 103 3 181 3 46 2 144 1 91 3 338 3 
355 2 129 1 231 1 78 1 103 2 181 2 46 1 91 2 215 1 338 2 
167 1 309 1 250 1 241 1 43 1 315 1 28 1 317 1 104 1 214 1 33 1 91 1 109 1 338 1 176 1 
167 1 309 1 2 1 250 1 241 1 43 1 315 1 28 1 317 1 104 1 214 1 246 1 91 1 338 1 176 1 
229 1 98 1 127 1 77 2 272 2 323 1 129 2 208 2 191 2 32 1 35 1 278 1 215 2 305 1 353 1 217 1 354 1 44 1 45 1 87 4 88 1 291 1 148 1 322 1 
103 1 181 1 73 1 355 1 286 1 91 1 108 1 338 1 
282 1 136 1 355 4 231 1 54 1 43 1 78 1 103 5 181 4 46 2 89 1 91 5 49 1 338 5 
103 2 181 2 355 2 286 1 91 2 108 1 223 1 338 2 
225 1 158 1 299 1 
1 1 158 2 64 1 105 1 211 1 299 2 
158 1 299 1 
158 1 299 1 
1 1 105 1 
1 1 105 1 
1 1 105 1 
195 1 158 1 299 1 
195 1 158 1 299 1 
195 1 158 1 299 1 
62 1 158 1 299 1 
62 1 158 1 299 1 
62 1 158 1 299 1 
306 3 238 1 53 2 262 2 64 1 296 2 65 1 162 2 358 1 357 1 299 2 343 1 333 1 234 1 158 2 205 2 336 2 11 2 325 1 
71 1 306 1 25 1 53 1 355 2 126 1 262 1 153 1 296 1 162 1 43 1 343 1 299 1 344 1 345 1 103 2 181 2 225 1 158 1 205 1 91 2 336 1 324 1 338 2 
335 1 107 2 188 2 232 1 96 1 
107 1 42 1 96 1 
107 1 42 1 232 1 
335 1 107 3 188 1 164 1 232 1 96 2 
213 1 335 1 107 2 188 1 232 1 96 1 
25 1 53 5 27 1 98 1 323 1 297 2 5 1 172 2 344 1 345 1 8 3 57 3 346 1 348 1 352 1 238 2 216 1 177 1 219 1 285 1 221 2 162 5 312 1 288 1 222 4 16 1 316 2 44 1 320 1 247 1 291 1 149 1 
53 9 98 3 323 3 297 6 5 1 172 6 344 4 233 5 8 8 57 9 59 1 348 2 280 1 350 1 352 3 238 5 216 6 177 1 219 2 242 1 285 2 244 5 162 9 312 2 222 7 288 1 316 6 44 3 18 1 20 1 320 2 247 3 291 3 166 1 149 1 
53 3 98 1 323 1 297 2 5 1 344 1 172 2 8 3 57 4 346 1 348 1 350 1 352 2 238 3 219 1 285 1 221 1 162 3 312 1 222 2 16 1 44 1 316 2 320 1 247 1 291 1 
53 4 98 2 323 2 297 4 5 1 172 4 344 2 8 5 57 7 346 1 59 1 348 1 350 1 352 3 238 4 219 1 242 1 285 1 221 2 162 4 312 1 222 3 16 1 316 4 44 2 20 1 320 1 247 2 291 2 
39 1 
359 1 47 1 176 1 
15 1 176 1 
214 1 176 1 
359 2 214 1 125 1 250 1 115 1 176 3 
214 1 250 1 176 1 
112 1 176 1 
329 1 229 3 98 1 287 1 208 4 100 2 117 1 7 1 191 3 45 2 276 1 87 7 291 1 360 1 124 1 279 1 328 1 60 1 
70 1 229 10 339 3 98 4 77 2 340 1 323 3 208 16 100 3 7 2 191 15 276 2 32 1 35 1 174 4 327 1 328 1 279 1 329 1 353 1 63 1 178 1 287 2 117 5 44 3 45 5 87 31 247 3 291 4 69 1 360 1 94 1 124 2 148 1 
329 1 229 4 353 2 196 1 135 1 98 1 178 1 77 4 287 1 208 5 100 2 117 1 7 1 45 3 191 4 276 1 87 9 32 2 35 2 291 1 360 1 124 1 328 1 148 2 
329 1 229 3 98 1 287 1 208 4 100 2 117 1 7 1 191 3 45 2 276 1 87 7 291 1 360 1 124 1 279 1 328 1 
329 1 229 3 98 1 287 1 208 4 100 2 117 1 7 1 191 3 45 2 276 1 87 7 291 1 360 1 124 1 279 1 328 1 
167 1 72 1 308 2 309 1 239 1 241 1 187 1 40 1 41 1 315 1 29 1 317 1 214 1 104 1 141 1 277 1 157 2 165 1 67 2 92 1 23 1 176 1 227 2 
167 1 341 1 99 1 298 1 232 1 277 1 235 1 157 1 192 1 107 2 83 1 351 1 309 1 308 1 241 1 179 1 40 1 42 1 315 1 164 1 317 1 141 1 67 1 23 1 96 1 227 1 
167 1 341 1 99 1 298 1 232 1 277 1 235 1 157 1 130 1 192 1 257 1 107 2 259 1 83 1 351 1 309 1 308 1 241 1 40 2 42 1 265 1 315 1 164 1 317 1 17 1 141 1 67 1 23 2 96 1 227 1 
167 1 341 1 99 1 273 1 232 1 277 1 235 1 157 1 130 1 192 1 257 1 107 2 259 2 83 1 309 1 308 1 241 1 179 1 40 3 42 1 265 1 315 1 164 1 317 1 141 1 165 1 67 1 23 3 96 1 227 1 
167 1 99 1 273 1 232 1 157 1 130 1 192 1 257 1 107 2 259 2 83 1 308 1 309 1 241 1 179 1 40 2 42 1 265 1 315 1 164 1 317 1 67 1 23 2 227 1 96 1 
19 1 
167 2 53 3 73 1 170 1 154 1 297 1 56 1 103 1 254 1 104 2 214 1 8 1 348 1 176 1 216 2 309 2 240 1 239 1 241 2 219 1 161 1 286 1 285 1 162 3 288 1 41 1 315 1 118 1 317 1 318 1 204 1 120 1 320 1 89 1 91 1 338 1 149 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 3 216 1 73 1 240 1 161 1 286 1 162 3 118 1 56 1 103 1 254 1 318 1 290 1 120 1 89 1 91 1 338 1 149 1 
53 2 73 1 240 1 161 1 286 1 285 1 162 2 288 1 118 1 56 1 103 1 254 1 318 1 320 1 120 1 89 1 91 1 348 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 162 2 56 1 118 1 103 1 254 1 318 1 120 1 89 1 91 1 338 1 
53 2 73 1 240 1 161 1 286 1 285 1 162 2 288 1 118 1 56 1 103 1 254 1 318 1 320 1 120 1 89 1 91 1 348 1 338 1 
269 1 167 7 127 2 75 1 77 4 208 1 155 1 212 1 103 1 104 2 191 1 214 2 300 1 32 2 35 2 176 3 353 2 309 8 355 1 239 1 241 8 160 2 356 1 179 1 41 1 86 1 315 2 116 1 317 2 17 1 181 1 46 1 182 1 87 2 88 1 91 1 338 1 148 2 322 2 
229 1 127 1 98 1 272 1 77 2 323 1 129 1 231 1 208 1 78 1 103 1 191 2 32 1 35 1 215 1 353 1 355 1 330 1 313 1 44 1 45 1 181 1 87 3 247 1 91 1 291 1 148 1 322 1 338 1 
329 1 229 2 353 1 98 1 127 1 272 1 77 2 129 1 208 3 287 1 100 1 43 2 191 3 45 2 87 6 88 1 47 1 32 1 35 1 291 1 360 1 215 1 322 1 148 1 328 1 124 1 
229 2 70 1 339 3 293 1 74 1 127 2 98 1 340 1 77 4 272 11 323 1 129 4 208 8 155 1 191 6 300 1 32 2 35 2 174 3 215 11 353 2 330 1 201 1 43 1 117 1 44 2 45 1 87 14 247 2 291 2 123 1 148 2 322 1 
167 1 250 1 127 1 77 2 129 1 208 1 155 1 28 1 103 1 214 1 104 1 191 1 300 1 32 1 33 1 159 1 35 1 109 1 176 1 110 1 282 1 353 1 61 1 309 1 355 1 241 1 330 1 43 1 315 1 317 1 181 1 46 1 87 2 143 1 91 2 148 1 322 1 338 2 
229 3 98 2 272 4 323 1 189 2 100 1 101 1 155 1 103 1 191 7 104 1 109 2 328 1 329 1 282 1 111 2 241 1 330 1 287 1 247 1 291 2 124 1 338 3 167 1 250 2 127 3 77 6 129 4 208 7 28 2 79 1 214 2 300 1 32 3 302 1 33 2 35 3 215 4 176 2 353 3 309 1 355 1 43 2 315 2 44 1 317 2 181 1 267 2 268 1 45 3 46 1 87 14 91 3 360 1 322 3 148 3 
229 1 353 1 354 1 127 1 272 1 77 2 129 1 208 2 117 1 44 1 87 2 88 1 32 1 35 1 291 1 215 1 322 1 148 1 
229 1 353 1 217 1 127 1 98 1 272 1 77 2 323 1 129 1 45 1 191 2 87 2 88 1 32 1 35 1 215 1 322 1 148 1 
229 2 127 1 98 1 77 2 272 2 323 1 129 2 208 2 191 2 32 1 35 1 215 2 353 1 117 1 44 1 45 1 87 4 88 1 247 1 291 1 148 1 322 1 
229 1 353 1 354 1 75 1 127 1 272 1 77 2 129 1 208 2 117 1 44 1 87 2 32 1 35 1 291 1 215 1 322 1 148 1 
229 1 353 1 217 1 75 1 127 1 98 1 272 1 77 2 323 1 129 1 45 1 191 2 87 2 32 1 35 1 215 1 322 1 148 1 
229 2 127 1 75 1 98 1 77 2 272 2 323 1 129 2 208 2 191 2 32 1 35 1 215 2 353 1 117 1 44 1 45 1 87 4 247 1 291 1 148 1 322 1 
229 2 127 1 98 1 77 2 272 2 323 1 129 2 208 2 191 2 32 1 35 1 215 2 353 1 117 1 44 1 45 1 87 4 247 1 291 1 148 1 322 1 
167 1 250 1 127 1 77 2 208 1 155 1 28 1 214 1 104 1 191 1 300 1 32 1 33 1 35 1 109 1 176 1 353 1 309 1 241 1 43 1 315 1 317 1 267 1 87 2 91 1 338 1 322 1 148 1 
167 1 250 1 2 1 127 1 77 2 208 1 155 1 28 1 214 1 104 1 191 1 300 1 32 1 35 1 303 1 176 1 353 1 309 1 241 1 43 1 315 1 317 1 87 2 246 1 91 1 338 1 322 1 148 1 
229 2 127 1 98 1 77 2 272 2 323 1 129 2 208 2 191 2 32 1 35 1 215 2 353 1 330 1 117 1 44 1 45 1 87 4 247 1 291 1 148 1 322 1 
229 2 167 1 250 1 98 1 127 1 272 2 77 2 323 1 129 2 208 2 189 1 28 1 191 2 214 1 32 1 33 1 35 1 109 1 215 2 176 1 353 1 309 1 241 1 315 1 117 1 44 1 317 1 45 1 267 1 17 1 87 4 247 1 91 1 291 1 338 1 322 1 148 1 
229 1 98 1 127 1 77 2 151 1 272 1 323 1 129 1 231 1 208 2 78 1 103 1 191 1 32 1 35 1 215 1 353 1 355 1 330 1 117 1 44 1 181 1 87 3 247 1 91 1 291 1 148 1 322 1 338 1 
229 8 97 1 150 1 228 1 98 5 323 4 100 1 191 21 236 4 194 1 328 1 329 1 196 1 287 1 163 1 117 4 247 4 291 5 124 1 70 1 339 3 77 6 340 3 128 1 208 20 171 1 32 3 35 3 81 2 174 4 353 3 307 1 178 1 224 1 85 1 180 1 44 4 45 4 87 41 319 1 360 1 95 1 148 3 
228 1 150 1 97 1 70 1 229 7 339 3 98 4 128 1 340 3 77 8 323 3 208 20 100 1 171 1 191 18 32 4 236 4 35 4 81 2 174 4 194 1 328 1 329 1 307 1 353 4 196 1 178 2 287 1 85 1 224 1 163 1 117 3 180 1 44 4 45 4 87 38 319 1 247 4 291 5 360 1 95 1 124 1 148 4 
228 1 150 1 97 1 70 2 229 14 339 4 293 2 98 8 128 1 340 2 77 4 323 7 208 27 100 1 171 1 191 25 32 2 236 4 35 2 81 1 174 4 328 1 329 1 307 1 353 2 196 1 178 1 287 1 85 1 224 1 163 1 117 7 180 1 44 7 45 7 87 52 319 1 247 7 291 8 360 1 124 1 148 2 
97 1 70 1 229 6 339 1 98 3 340 1 77 4 323 3 208 9 191 10 32 2 236 2 35 2 81 1 174 2 175 1 307 1 353 2 196 1 224 1 163 2 117 3 180 1 44 3 45 3 87 19 247 3 291 3 95 1 148 2 
228 1 229 4 97 1 150 1 339 2 98 2 77 6 340 2 128 1 323 2 208 14 171 1 191 12 32 3 236 4 35 3 81 2 174 2 307 1 353 3 196 1 178 2 85 1 224 2 163 1 117 2 180 1 44 3 45 2 87 26 319 1 247 3 291 3 148 3 
38 1 262 1 158 1 64 1 205 1 296 1 358 1 357 1 336 1 299 1 
225 1 153 1 
281 1 262 1 158 1 106 1 205 1 296 1 55 1 336 1 299 1 
306 2 238 1 53 1 262 1 64 1 296 1 65 1 162 1 358 1 357 1 343 1 299 1 333 1 158 1 205 1 336 1 11 1 325 1 
306 2 238 1 53 1 262 1 64 1 296 1 65 1 162 1 358 1 357 1 343 1 299 1 333 1 158 1 205 1 336 1 11 1 325 1 
306 2 238 1 53 1 262 1 64 1 296 1 65 1 162 1 358 1 357 1 343 1 299 1 333 1 158 1 205 1 336 1 11 1 325 1 
195 1 211 1 139 1 
195 1 211 1 139 1 
62 1 203 1 
62 1 211 1 203 1 
71 1 324 1 
71 1 53 1 25 1 126 1 296 1 153 1 299 1 344 1 345 1 103 2 158 1 11 1 324 1 306 1 355 2 262 1 65 1 162 1 43 1 222 1 140 1 181 2 225 1 205 1 91 2 336 1 338 2 
195 1 139 1 
62 1 211 1 203 1 
167 2 186 1 127 1 77 2 208 1 155 1 103 2 214 1 191 1 300 1 32 1 35 1 176 1 260 1 353 1 309 2 241 2 330 1 160 2 199 1 314 1 315 1 86 1 317 1 182 1 87 2 90 1 91 2 322 1 338 2 148 1 
167 1 309 1 72 1 137 1 239 1 241 1 41 1 315 1 317 1 214 1 104 1 176 1 227 1 206 1 
167 1 309 1 241 1 342 1 99 1 179 1 42 1 315 1 164 1 232 1 317 1 235 1 107 2 48 1 83 1 96 1 227 1 206 1 
167 2 309 2 241 2 342 1 99 1 179 1 42 1 315 1 164 1 232 1 317 1 17 1 235 1 107 2 48 1 83 1 96 1 227 1 206 1 
167 1 309 1 241 1 99 1 179 1 202 1 42 1 315 1 164 1 232 1 317 1 235 1 107 2 48 1 83 1 96 1 227 1 
347 1 
238 1 285 1 297 1 5 1 288 1 266 1 8 1 320 1 348 1 133 1 
352 5 238 5 310 1 98 2 323 2 252 2 297 5 172 5 44 2 316 5 8 5 57 10 302 1 247 2 291 2 
238 1 53 1 216 1 5 1 162 1 149 1 
167 4 53 3 250 1 170 2 154 1 297 2 190 1 214 2 104 2 156 1 8 2 80 1 132 1 348 2 36 1 176 2 350 1 216 4 309 4 239 1 241 4 219 2 285 2 84 1 162 3 288 1 41 1 315 2 317 3 204 1 320 2 226 1 292 2 149 2 
238 1 8 1 47 1 297 1 5 1 133 1 266 1 
52 1 53 1 297 1 5 1 8 1 57 1 348 1 352 1 238 2 216 1 285 1 162 1 288 1 320 1 334 1 147 1 149 1 
53 5 98 2 323 2 5 2 6 1 274 2 104 1 8 9 57 12 238 8 241 3 113 1 112 2 285 4 161 2 162 5 288 4 15 3 115 1 17 1 247 2 291 2 292 1 248 2 167 3 250 3 170 1 252 2 297 8 172 6 214 3 31 2 255 2 256 1 302 2 348 4 133 1 176 10 352 6 218 2 216 5 309 3 310 2 219 2 84 1 315 3 266 1 316 6 44 2 317 4 359 2 320 4 321 2 149 3 
228 1 150 1 53 1 339 1 170 1 98 2 340 1 128 1 323 2 252 2 297 5 5 2 171 1 172 5 8 8 57 6 174 1 348 2 304 1 352 3 13 1 238 5 216 1 310 1 219 1 285 2 162 1 288 2 316 5 44 2 319 1 320 2 247 2 291 2 149 1 
53 1 169 1 98 1 294 1 252 2 297 2 78 1 103 1 8 2 131 1 348 1 329 1 14 1 310 1 355 1 220 1 286 1 285 1 287 1 162 1 223 1 288 1 181 1 320 1 91 1 291 2 338 1 124 1 
167 1 169 1 250 1 127 1 77 2 155 1 28 1 78 2 102 1 103 2 191 1 104 1 214 1 32 1 33 1 35 1 109 1 176 1 353 1 309 1 355 2 241 1 43 1 315 1 317 1 181 2 267 1 87 1 91 3 148 1 338 3 322 1 
352 2 238 4 219 1 170 1 285 1 297 2 5 2 100 1 288 1 172 2 316 2 8 1 57 4 320 1 348 1 
71 1 262 1 296 1 68 1 358 1 
283 1 262 1 296 1 
283 1 262 1 296 1 
283 1 262 1 296 1 
245 1 262 1 296 1 
245 1 262 1 296 1 
245 1 262 1 296 1 
262 1 296 1 
158 1 299 1 
229 2 339 1 98 1 340 1 128 1 77 2 208 4 100 1 191 4 32 1 35 1 174 1 328 1 329 1 353 1 196 1 287 1 45 2 87 8 291 1 360 1 148 1 124 1 
70 1 229 3 339 1 98 1 340 1 128 1 77 4 208 6 100 1 191 5 32 2 35 2 174 2 328 1 329 1 353 2 196 1 263 1 287 1 117 1 44 1 45 2 87 11 247 1 291 2 360 1 124 1 148 2 
150 1 229 4 228 1 339 1 98 3 340 1 128 1 77 6 323 2 208 9 100 1 171 1 191 10 32 3 35 3 174 1 328 1 329 1 353 3 196 1 178 1 263 1 287 1 117 1 44 2 45 3 87 19 319 1 247 2 291 3 360 1 124 1 148 3 
150 1 229 5 228 1 339 1 98 2 340 1 128 1 77 6 323 1 208 10 100 1 171 1 191 7 32 3 35 3 174 1 328 1 329 1 353 3 196 1 178 1 263 1 287 1 117 2 44 2 45 3 87 17 319 1 247 2 291 3 360 1 124 1 148 3 
229 2 339 1 98 1 340 1 128 1 77 2 208 4 100 1 191 4 32 1 35 1 174 1 328 1 329 1 353 1 196 1 287 1 45 2 87 8 291 1 360 1 148 1 124 1 
150 1 229 2 228 1 339 1 98 2 340 1 128 1 77 2 323 2 208 6 171 1 191 6 32 1 35 1 174 1 353 1 196 1 117 1 44 2 45 1 87 12 319 1 247 2 291 2 148 1 
228 1 150 1 229 5 339 1 98 2 340 1 128 1 77 8 323 1 208 10 100 1 171 1 191 8 32 4 35 4 174 1 328 1 329 1 353 4 196 1 178 2 263 1 287 1 117 2 44 2 45 3 87 18 319 1 247 2 291 3 360 1 124 1 148 4 
228 1 150 1 229 6 339 1 98 2 340 1 128 1 77 8 323 2 208 9 171 1 191 7 32 4 35 4 174 1 353 4 196 1 178 2 117 3 44 3 45 3 87 16 319 1 247 3 291 3 95 1 148 4 
229 6 329 1 98 1 287 3 208 3 117 3 191 4 45 3 87 7 291 1 360 2 328 1 124 3 
228 1 150 1 229 4 339 1 98 2 340 1 128 1 77 8 323 1 208 10 100 1 171 1 191 8 32 4 35 4 174 1 328 1 329 1 353 4 196 1 178 2 287 1 117 1 44 2 45 3 87 18 319 1 247 2 291 3 360 1 95 1 124 1 148 4 
229 5 329 1 353 1 196 1 98 2 77 2 294 1 287 2 208 5 117 2 45 3 191 5 87 10 32 1 35 1 291 2 148 1 124 2 
229 1 353 1 196 1 77 2 208 2 117 1 44 1 87 2 32 1 35 1 291 1 148 1 
229 2 353 1 196 1 98 1 77 2 323 1 208 2 117 1 44 1 45 1 191 2 87 4 32 1 247 1 35 1 291 1 148 1 
229 2 353 3 196 1 178 1 77 6 287 1 208 1 117 1 191 2 45 1 87 3 142 1 32 3 35 3 95 1 148 3 124 1 
70 1 229 12 339 3 98 5 340 1 77 10 323 3 208 16 100 1 191 18 32 5 35 5 174 4 327 1 328 1 329 2 353 5 196 1 178 2 263 1 287 3 117 5 44 3 45 7 87 34 142 1 247 3 69 1 291 5 360 1 94 1 95 1 124 3 148 5 
329 1 229 3 353 2 98 1 77 4 178 1 208 4 287 1 100 1 117 1 191 4 45 2 87 8 32 2 35 2 291 1 360 1 148 2 328 1 124 1 
229 2 329 1 98 1 287 1 208 3 100 1 191 3 45 2 87 6 47 1 291 1 360 1 328 1 124 1 
229 2 353 1 98 1 77 2 323 1 263 1 208 2 117 1 44 1 45 1 191 2 87 4 32 1 247 1 35 1 291 1 148 1 
70 1 229 2 339 1 98 1 340 1 323 1 208 3 117 1 44 1 45 1 191 4 87 7 247 1 174 2 291 1 
229 9 70 1 339 2 98 3 293 1 77 4 323 2 208 11 100 1 191 12 32 2 35 2 174 2 328 1 329 1 353 2 178 2 287 2 117 4 44 2 45 5 87 23 142 1 247 2 291 3 360 1 123 1 124 2 148 2 
191 1 87 1 174 1 
87 1 339 1 208 1 
229 3 353 1 98 1 77 2 263 1 323 1 208 3 117 1 44 1 191 3 45 2 87 6 32 1 302 1 247 1 35 1 291 1 148 1 
150 1 229 2 228 1 339 1 98 2 340 1 128 1 77 2 323 2 208 6 171 1 191 6 32 1 35 1 174 1 353 1 196 1 117 1 44 2 45 1 87 12 319 1 247 2 291 2 148 1 
229 2 329 1 45 1 191 3 87 6 98 1 287 1 208 3 291 1 117 1 124 1 
229 2 353 1 178 1 77 2 208 1 287 1 117 1 45 1 191 2 87 3 142 1 32 1 35 1 360 1 124 1 148 1 328 1 
103 1 89 1 91 1 43 1 49 1 209 1 338 1 
249 1 197 1 43 1 210 1 209 1 103 1 89 1 21 1 91 1 82 1 49 1 338 1 
167 4 309 4 239 1 198 1 241 4 41 1 315 1 119 1 317 1 104 1 17 1 214 1 176 1 
167 2 309 2 250 1 241 2 315 1 317 2 214 1 156 1 80 1 132 1 226 1 292 1 337 1 176 1 
317 1 104 1 167 1 309 1 241 1 107 1 42 1 315 1 232 1 83 1 
317 1 214 1 17 1 167 2 309 2 186 1 241 2 179 1 315 1 86 1 176 1 
167 4 269 1 309 5 239 1 198 1 241 5 356 1 41 1 86 1 315 2 317 2 104 1 17 1 214 2 292 1 176 3 
167 4 269 1 309 5 239 1 198 1 241 5 41 1 86 1 315 2 317 2 104 1 17 1 214 2 146 1 292 1 176 3 
317 1 214 1 104 1 167 1 47 1 309 1 239 1 241 1 41 1 315 1 176 1 
167 1 250 1 309 1 355 1 241 1 43 1 315 1 28 1 317 1 103 1 214 1 181 1 104 1 46 1 33 1 91 2 176 1 338 2 
167 1 73 1 250 2 309 1 355 2 112 1 241 1 286 1 43 1 315 1 28 1 118 1 317 1 103 2 214 2 181 1 46 1 33 1 91 2 248 1 292 1 176 3 338 2 
167 2 250 2 73 1 28 1 103 2 214 2 176 3 309 2 355 2 241 2 112 1 286 1 43 1 315 1 119 1 118 1 317 1 181 1 46 1 246 1 91 2 292 1 248 1 338 2 
238 1 53 2 167 3 216 1 250 1 270 1 309 3 112 1 241 3 161 1 5 1 162 2 15 1 315 1 119 1 317 1 359 1 104 1 214 1 248 1 292 1 50 1 176 4 
238 1 53 2 167 3 218 1 216 1 250 1 309 3 112 1 241 3 161 1 5 1 162 2 15 1 315 1 119 1 317 1 359 1 104 1 214 1 248 1 292 1 176 4 
317 1 167 1 309 1 241 1 315 1 212 1 
269 1 167 6 309 7 250 1 160 1 241 7 356 1 179 1 86 1 115 1 315 2 116 1 212 1 317 3 17 1 104 2 214 2 156 1 80 1 51 1 176 3 
229 2 167 1 250 1 98 1 127 2 272 1 77 4 129 1 208 3 189 1 100 1 28 1 103 1 191 3 214 1 32 2 33 1 35 2 109 1 215 1 328 1 176 1 329 1 353 2 111 1 309 1 355 1 330 1 241 1 287 1 314 1 43 2 315 1 317 1 45 2 181 1 17 1 267 1 87 6 46 1 91 2 291 1 360 1 124 1 148 2 322 2 338 2 
167 1 53 3 297 1 5 1 274 1 104 1 8 1 255 1 348 2 133 1 176 2 238 1 218 1 216 2 309 1 241 1 285 2 161 1 84 1 162 3 288 2 222 1 15 1 266 1 359 1 320 2 321 1 149 1 
167 2 309 2 250 1 241 2 115 1 315 1 212 1 359 1 317 2 17 1 214 1 256 1 176 2 
167 1 250 1 309 1 355 1 241 1 43 1 315 1 28 1 317 1 103 1 214 1 181 1 104 1 46 1 246 1 91 2 176 1 338 2 
167 1 309 1 250 1 241 1 115 1 315 1 317 2 214 1 156 1 80 1 292 1 51 1 176 1 
30 1 311 1 121 1 43 1 93 1 
238 1 53 2 73 1 261 1 240 1 311 2 161 1 286 1 5 1 162 2 43 1 222 1 118 1 30 1 121 2 9 1 10 1 122 1 93 2 
260 1 199 1 30 1 103 1 121 1 90 1 91 1 93 1 338 1 
30 1 9 1 10 1 
277 1 141 1 130 1 257 1 40 1 265 1 23 1 351 1 
185 1 230 1 271 1 40 4 265 2 141 1 277 1 301 1 130 3 58 1 257 2 258 1 259 2 23 4 
331 1 332 1 40 2 265 1 141 1 277 1 130 1 257 1 34 1 259 1 23 2 351 1 
271 2 152 1 40 3 265 1 141 1 277 1 130 1 58 2 257 1 258 1 23 3 351 1 
26 1 130 2 145 1 193 2 
277 1 141 1 40 1 24 1 23 1 351 1 
277 1 141 1 130 1 257 1 40 2 264 1 265 1 259 1 23 2 351 1 
3 1 
277 1 141 1 130 1 257 1 40 1 265 1 23 1 351 1 
47 1 130 1 257 1 265 1 
277 1 141 1 130 1 257 1 40 1 265 1 23 1 
308 1 67 1 23 1 
251 1 271 2 40 3 265 1 141 1 277 1 130 1 58 1 257 1 258 1 23 3 351 1 
277 1 141 1 130 1 257 1 173 1 40 2 265 1 259 1 23 2 
295 1 40 1 42 1 141 1 277 1 301 1 130 1 107 1 23 1 96 1 351 1 
277 1 141 1 130 1 40 1 265 1 23 1 351 1 
277 1 141 1 257 1 40 1 265 2 23 1 351 1 
277 2 141 2 130 1 207 1 40 2 265 1 12 1 23 2 326 1 351 1 
185 1 76 1 40 3 264 1 265 1 141 1 277 1 301 1 130 2 257 1 259 2 23 3 351 1 
40 2 42 1 265 1 289 1 232 1 164 1 141 1 277 1 130 1 257 1 107 2 259 1 23 2 96 1 351 1 
185 1 40 4 265 1 141 2 277 2 301 1 130 2 257 1 173 1 361 1 259 2 23 4 351 1 
271 1 40 3 264 1 265 1 141 1 277 1 130 1 257 1 259 1 23 3 351 1 
185 1 230 1 301 1 130 1 
130 1 265 1 

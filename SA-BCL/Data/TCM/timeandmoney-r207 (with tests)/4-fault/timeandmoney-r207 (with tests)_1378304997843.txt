#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (81,259) 322 (246,365) (246,365) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (81,259) 322 (246,365) (246,365) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (81,259) 322 (246,365) (246,365) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (81,259) 322 (246,365) (246,365) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 280 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 221 175 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 88 178 43 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 88 178 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 88 178 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 88 178 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 88 178 43 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 221 (73,235) 17 313 (22,244) 293 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 47 303 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 221 (140,338) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 221 (73,235) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 221 (73,235) 17 313 (22,244) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 221 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
81 1 322 1 80 1 173 1 149 1 365 1 200 1 113 1 226 1 246 1 351 1 
81 1 322 1 80 1 173 1 149 1 365 1 200 1 113 1 226 1 246 1 351 1 
81 1 322 1 80 1 173 1 149 1 365 1 200 1 113 1 226 1 246 1 351 1 
81 1 322 1 80 1 173 1 149 1 365 1 200 1 113 1 226 1 246 1 351 1 
117 1 103 2 149 1 217 1 152 1 368 2 346 3 331 1 24 1 33 1 173 4 318 1 274 3 158 1 113 1 200 1 351 4 97 1 
99 1 48 1 80 1 149 1 136 1 152 1 141 1 33 1 274 1 173 2 158 1 113 1 200 1 351 2 226 1 97 1 
80 1 117 1 103 1 149 2 346 1 259 1 173 3 274 2 158 1 113 1 200 2 351 3 97 1 
101 1 80 1 117 3 103 4 149 2 203 1 217 1 152 1 368 2 331 1 346 7 296 1 259 1 24 1 33 1 318 1 274 5 173 9 158 1 113 1 200 2 301 1 351 9 97 1 
101 1 80 1 117 3 103 4 149 2 203 1 217 1 152 1 368 2 331 1 346 7 296 1 259 1 24 1 33 1 318 1 274 5 173 9 158 1 113 1 200 2 301 1 351 9 97 1 
270 1 161 1 280 1 
270 1 256 1 139 2 
317 2 258 1 100 2 168 2 85 1 198 2 327 2 295 2 
124 1 277 1 100 2 49 1 336 1 2 1 315 1 4 1 105 2 106 1 282 2 55 1 232 1 231 1 295 3 126 2 317 3 258 1 58 1 238 1 212 1 159 1 40 1 163 1 243 2 85 1 342 1 327 2 248 1 23 1 168 2 71 2 273 1 72 1 291 1 198 2 73 1 
317 1 100 1 168 1 275 1 326 1 85 1 210 1 198 1 327 1 295 1 
251 1 305 1 161 1 148 1 295 1 21 1 270 1 317 1 271 1 272 1 168 1 210 1 37 1 74 1 
100 1 251 1 305 2 161 1 327 1 295 1 21 1 270 1 317 1 271 1 168 1 37 2 198 1 210 1 74 1 
305 1 252 1 111 1 78 1 37 1 
270 1 305 2 161 1 252 1 111 1 84 1 37 2 294 1 
305 1 252 1 37 1 
305 1 100 1 326 1 85 1 327 1 295 1 317 1 168 1 111 1 275 1 210 1 37 1 198 1 302 1 
270 1 
270 1 167 1 305 2 161 1 252 1 111 1 37 2 294 1 
305 5 279 1 161 1 252 2 41 1 53 1 87 2 287 1 294 1 153 1 270 1 122 1 298 1 111 2 123 1 112 1 37 5 225 2 98 2 
258 1 280 1 
100 1 327 1 295 2 307 1 317 2 258 2 168 2 198 1 28 1 
8 1 253 1 245 1 
124 1 277 1 49 1 2 1 355 1 105 1 342 1 295 1 126 1 317 1 258 1 71 1 273 1 73 1 238 1 159 1 
317 3 100 1 258 1 168 3 142 1 198 3 327 3 295 3 
317 1 168 1 326 1 210 1 198 1 327 1 295 1 
307 1 317 1 100 1 168 1 210 1 198 1 327 1 28 1 295 1 
124 1 277 1 100 2 251 1 49 1 336 1 2 1 315 1 4 1 105 1 106 1 282 2 55 1 232 1 231 1 295 4 126 1 317 4 258 1 77 1 187 1 58 1 210 1 37 1 238 1 159 1 305 1 163 1 243 1 85 1 342 1 327 3 21 1 271 1 168 3 142 1 273 1 71 1 291 1 198 3 73 1 350 1 28 1 74 1 
345 1 317 2 258 1 272 1 168 2 142 1 198 1 327 1 295 2 
100 1 305 1 251 1 125 1 327 3 295 3 21 1 270 1 317 3 271 1 168 3 142 2 187 1 37 1 210 1 198 3 350 1 28 1 74 1 
317 2 100 1 8 1 168 2 142 1 253 1 198 2 327 2 28 1 295 2 
124 1 277 1 49 1 2 1 105 1 342 1 295 1 126 1 317 1 258 1 71 1 273 1 73 1 238 1 159 1 
124 1 277 1 49 1 2 1 105 1 342 1 295 1 126 1 317 1 258 1 140 1 71 1 273 1 59 1 159 1 
336 1 315 2 253 2 4 1 356 1 106 1 282 2 127 1 231 1 233 1 8 2 160 1 40 2 63 1 118 1 163 1 243 4 306 1 245 2 18 1 169 1 26 1 291 1 311 1 
21 1 110 1 317 1 168 1 210 1 198 1 327 1 295 1 
124 1 277 1 49 1 2 1 105 1 342 1 327 1 295 2 126 1 317 2 8 1 168 1 142 1 273 1 187 1 71 1 198 1 73 1 238 1 159 1 
100 1 327 4 295 5 345 1 317 5 258 1 272 1 168 5 142 2 187 1 130 1 198 4 28 1 62 1 
110 1 317 2 168 2 326 1 210 1 198 2 327 2 295 2 
185 1 137 1 
185 1 137 1 
254 1 197 1 
254 1 197 1 
254 1 197 1 
185 1 137 1 276 1 
185 1 137 1 11 1 
185 2 32 1 254 1 9 1 197 1 137 2 
185 1 137 1 276 1 
185 1 137 1 276 1 
362 1 185 1 137 1 
362 1 185 1 137 1 
362 1 185 1 137 1 
116 2 278 2 305 2 151 1 216 2 137 2 90 2 128 2 329 1 270 1 185 2 70 1 32 1 209 3 189 1 37 2 143 1 114 1 227 1 
278 1 283 1 295 2 128 1 317 2 258 1 185 1 209 1 129 1 261 1 157 1 37 1 237 1 114 1 11 1 192 1 116 1 305 1 134 1 137 1 216 1 327 2 168 2 198 2 
33 1 217 1 152 1 
33 1 136 1 152 1 
56 1 33 3 44 1 263 1 217 2 136 1 
56 1 33 2 263 1 150 1 217 1 136 1 
56 1 33 2 263 2 217 1 136 1 
252 1 283 1 256 1 294 1 127 1 111 4 129 1 112 3 37 5 192 1 305 5 161 1 241 2 82 2 41 2 306 1 164 1 87 1 86 1 139 3 218 2 89 1 287 1 308 1 220 1 270 2 348 1 169 1 69 1 311 1 225 1 98 1 
177 1 50 1 252 6 256 3 294 1 127 3 129 4 111 7 112 8 78 5 37 9 305 9 161 1 15 1 82 6 65 1 41 6 306 3 164 2 87 2 86 2 139 9 218 6 219 5 343 1 287 1 270 5 348 3 169 3 69 1 123 1 223 1 311 3 225 2 98 2 
256 2 127 1 111 2 129 1 112 3 37 3 305 3 161 1 241 1 82 2 41 2 164 1 306 1 87 1 86 1 218 2 139 4 89 1 220 1 270 3 348 1 169 1 123 1 311 1 225 1 98 1 
50 1 256 3 127 2 129 2 111 3 112 5 37 4 305 4 161 1 241 2 15 1 82 4 65 1 41 4 164 1 306 2 87 1 86 1 139 7 218 4 89 1 220 1 270 4 348 2 169 2 123 1 311 2 225 1 98 1 
221 1 280 1 
124 1 45 1 
299 1 
124 1 49 1 
175 1 221 1 124 1 277 1 49 1 180 1 
124 1 277 1 49 1 
124 1 186 1 
0 1 242 1 281 1 315 3 16 1 243 7 107 1 18 3 127 1 19 1 169 1 284 1 154 2 337 1 160 2 40 4 61 1 
0 1 242 1 281 1 315 3 16 1 243 7 107 1 18 3 127 1 19 1 169 1 284 1 154 2 337 1 160 2 40 4 61 1 
0 1 213 1 242 1 281 1 315 3 16 1 243 7 107 1 18 3 127 1 19 1 169 1 284 1 154 2 337 1 160 2 40 4 61 1 
0 1 228 1 281 1 336 1 315 15 4 1 106 1 282 2 107 2 30 1 127 4 31 3 154 3 284 2 337 5 160 5 61 1 40 16 240 1 285 4 242 2 286 1 16 1 163 1 243 31 306 3 119 1 138 1 18 10 19 2 348 3 169 4 311 3 199 1 
0 1 336 2 281 1 315 4 4 2 106 2 282 4 204 1 107 1 127 1 154 2 284 1 337 1 160 3 40 5 61 1 265 1 242 1 163 2 243 9 18 4 19 1 169 1 199 1 
292 1 51 1 2 1 105 1 149 1 182 1 152 1 257 1 108 1 126 1 33 2 188 1 158 1 113 1 361 1 60 1 80 1 217 1 136 1 247 1 346 1 71 1 334 1 273 1 274 1 173 2 44 1 200 1 351 2 97 1 
1 1 292 1 51 1 2 1 52 1 105 1 149 1 152 1 257 1 108 1 126 1 33 2 158 1 361 1 60 1 80 1 217 1 136 1 366 1 247 1 346 2 71 1 334 1 273 1 274 1 44 1 173 3 200 1 351 3 97 1 
292 1 51 1 2 1 52 1 105 1 152 1 257 1 108 1 126 1 33 2 158 1 361 1 60 1 80 1 136 1 217 1 366 1 346 2 71 1 273 1 274 1 173 2 44 1 351 2 97 1 
124 1 1 1 353 1 49 1 2 1 51 2 105 1 149 1 7 1 257 2 126 1 190 1 60 2 132 1 80 2 133 1 342 1 71 1 273 1 173 1 96 1 200 1 351 1 
292 1 51 1 2 1 52 1 105 1 149 1 182 1 152 1 257 1 108 1 126 1 33 2 113 1 361 1 60 1 80 1 217 1 136 1 247 1 71 1 334 1 273 1 173 1 44 1 200 1 351 1 
205 1 
251 1 49 1 252 6 2 1 148 1 105 2 256 2 7 1 294 3 295 1 57 2 297 2 156 4 112 2 210 1 300 2 305 5 161 1 164 1 342 2 20 2 21 1 270 2 121 1 271 1 272 1 168 1 224 2 71 2 273 1 225 1 74 1 124 1 353 1 179 1 126 2 183 1 317 1 131 2 37 5 38 1 39 1 41 2 87 1 139 2 367 1 287 1 91 1 369 1 92 1 249 1 289 1 145 2 250 1 98 1 
251 1 305 3 179 1 252 2 148 1 367 1 294 1 91 1 295 1 21 1 92 1 271 1 121 1 317 1 167 1 272 1 168 1 156 2 210 1 37 3 300 1 74 1 
251 1 305 3 161 1 179 1 252 1 148 1 367 1 294 1 91 1 295 1 21 1 270 1 92 1 271 1 121 1 317 1 167 1 57 1 272 1 168 1 156 3 210 1 37 3 74 1 
251 1 179 1 252 2 148 1 294 1 295 1 317 1 297 1 57 1 156 3 37 3 210 1 300 1 305 3 161 1 367 1 91 1 21 1 121 1 271 1 92 1 270 1 167 1 272 1 168 1 74 1 
251 1 252 7 102 1 148 1 255 1 256 2 294 3 295 1 297 4 57 4 156 6 112 1 210 1 300 4 305 5 161 5 20 2 21 1 271 1 121 1 270 5 167 1 272 1 168 1 224 2 225 1 74 1 179 1 314 1 317 1 183 1 37 5 131 2 41 1 42 1 87 1 367 1 287 1 91 1 369 1 92 1 95 1 98 1 145 2 
251 1 252 4 148 1 256 2 294 2 295 1 297 2 57 2 156 4 112 1 210 1 300 2 305 4 161 1 20 2 21 1 271 1 121 1 270 2 272 1 168 1 224 2 225 1 74 1 179 1 317 1 183 1 37 4 131 2 41 1 87 1 367 1 139 2 287 1 91 1 369 1 92 1 249 1 98 1 145 2 
251 1 179 1 252 4 102 1 148 1 314 1 256 2 294 2 295 1 183 1 317 1 57 2 297 2 156 4 112 1 131 2 37 4 210 1 300 2 305 4 161 1 41 1 87 1 367 1 287 1 20 2 91 1 369 1 21 1 270 1 121 1 271 1 92 1 272 1 168 1 224 2 95 1 225 1 74 1 145 2 98 1 
251 1 179 1 252 4 102 1 148 1 314 1 256 2 294 2 295 1 183 1 317 1 57 2 297 2 156 4 112 1 131 2 37 4 210 1 300 2 305 4 161 1 41 1 87 1 367 1 287 1 20 2 91 1 369 1 21 1 270 1 121 1 271 1 92 1 272 1 168 1 224 2 95 1 225 1 74 1 145 2 98 1 
251 1 179 1 252 4 102 1 354 1 148 1 230 2 294 2 295 1 183 1 317 1 57 2 297 2 156 4 112 1 319 2 131 2 37 4 210 1 300 2 305 4 161 1 41 1 194 1 87 1 139 2 367 1 287 1 20 2 91 1 21 1 68 1 270 1 121 1 271 1 92 1 272 1 168 1 225 1 74 1 98 1 
251 1 179 1 102 1 252 5 314 1 148 1 255 1 256 2 294 2 295 1 183 1 317 1 297 3 57 3 156 5 112 1 131 2 37 4 210 1 300 3 305 4 161 1 41 1 87 1 367 1 287 1 20 2 91 1 369 1 21 1 270 1 121 1 271 1 92 1 272 1 168 1 224 2 95 1 225 1 74 1 145 2 98 1 
251 1 179 1 102 1 252 5 314 1 148 1 255 1 256 2 294 2 295 1 183 1 317 1 297 3 57 3 156 5 112 1 131 2 37 4 210 1 300 3 305 4 161 1 41 1 87 1 367 1 287 1 20 2 91 1 369 1 21 1 270 1 121 1 271 1 92 1 272 1 168 1 224 2 95 1 225 1 74 1 145 2 98 1 
251 1 252 4 148 1 294 2 295 1 297 2 57 2 156 4 112 1 210 1 300 2 305 4 161 1 20 2 21 1 271 1 121 1 270 1 272 1 168 1 225 1 74 1 179 1 230 2 317 1 183 1 37 4 131 2 319 2 41 1 194 1 87 1 367 1 139 2 287 1 91 1 92 1 249 1 98 1 
0 1 280 1 281 1 336 1 253 1 315 3 4 1 106 1 282 2 231 1 127 1 233 1 258 2 8 1 154 1 160 2 61 1 40 3 242 1 163 1 243 6 18 2 245 1 19 1 169 1 291 1 
336 2 315 6 253 4 4 2 106 2 282 4 316 1 232 1 231 1 127 2 258 1 31 3 8 11 337 1 160 1 40 8 239 1 240 1 285 3 340 1 163 2 243 14 306 2 119 1 18 2 269 1 245 11 23 1 348 2 169 1 335 1 291 2 311 1 
124 1 277 1 49 1 2 1 336 1 355 1 253 1 315 1 105 1 4 1 282 2 106 1 126 1 231 1 295 2 232 1 317 2 258 1 187 1 238 1 10 1 159 1 40 1 163 1 243 2 342 1 269 1 327 1 332 1 168 1 309 1 23 1 142 1 273 1 71 1 291 1 198 1 73 1 
0 1 49 2 336 3 2 2 52 1 104 1 253 7 105 3 4 3 106 3 55 2 295 3 258 2 8 7 154 1 337 4 260 2 160 4 159 2 61 1 163 3 306 2 342 1 215 2 269 1 18 8 19 1 23 1 168 1 348 2 169 3 71 3 273 2 73 2 311 2 124 2 277 2 281 1 315 10 282 6 232 1 126 3 231 3 127 3 317 3 187 1 238 2 40 10 242 1 83 1 243 20 244 2 245 7 327 1 142 1 288 2 198 1 291 3 201 1 
124 3 353 1 49 2 181 1 2 2 336 2 52 1 315 1 105 8 4 2 106 2 282 4 7 1 295 1 126 8 231 2 232 1 233 1 317 1 188 1 36 1 211 1 40 1 325 1 163 2 243 2 342 2 327 1 328 1 66 1 168 1 23 1 142 1 273 2 71 7 72 2 198 1 291 2 372 1 
100 1 336 1 253 1 315 2 4 1 106 1 282 2 231 1 295 1 127 1 317 1 8 1 160 1 40 1 163 1 306 1 243 3 18 1 245 1 269 1 327 1 168 1 348 1 169 1 370 1 198 1 291 1 311 1 28 1 
336 1 253 1 163 1 243 2 4 1 306 1 282 2 106 1 18 1 245 1 231 1 127 1 233 1 8 1 337 1 26 1 291 1 40 2 
63 1 336 1 253 1 163 1 315 2 243 2 4 1 282 2 106 1 18 1 245 1 231 1 233 1 8 1 169 1 291 1 311 1 160 1 
336 1 315 2 253 2 163 1 243 4 4 1 306 1 282 2 106 1 18 2 245 2 231 1 127 1 233 1 8 2 348 1 169 1 337 1 291 1 311 1 160 1 40 2 
336 1 253 1 163 1 243 2 4 1 306 1 282 2 106 1 18 1 245 1 231 1 127 1 8 1 337 1 26 1 291 1 211 1 40 2 
63 1 336 1 253 1 163 1 315 2 243 2 4 1 282 2 106 1 18 1 245 1 231 1 8 1 169 1 291 1 311 1 211 1 160 1 
336 1 315 2 253 2 163 1 243 4 4 1 306 1 282 2 106 1 18 2 245 2 231 1 127 1 8 2 348 1 169 1 337 1 291 1 311 1 211 1 160 1 40 2 
336 1 315 2 253 2 163 1 4 1 306 1 243 4 282 2 106 1 18 2 245 2 231 1 127 1 8 2 348 1 169 1 337 1 291 1 311 1 160 1 40 2 
124 1 277 1 49 1 2 1 336 1 315 1 105 1 4 1 282 2 106 1 55 1 126 1 295 1 231 1 232 1 317 1 258 1 238 1 159 1 40 1 163 1 243 2 342 1 23 1 273 1 71 1 291 1 73 1 
124 1 277 1 49 1 2 1 336 1 315 1 105 1 4 1 282 2 106 1 126 1 295 1 231 1 232 1 317 1 258 1 59 1 159 1 40 1 163 1 243 2 342 1 140 1 23 1 273 1 71 1 349 1 291 1 
336 1 315 2 253 2 163 1 243 4 4 1 306 1 282 2 106 1 18 2 245 2 269 1 231 1 127 1 8 2 348 1 169 1 337 1 291 1 311 1 160 1 40 2 
124 1 277 1 49 1 2 1 336 1 315 2 253 2 105 1 4 1 282 2 106 1 55 1 127 1 126 1 295 1 231 1 317 1 8 2 337 1 188 1 238 1 160 1 159 1 40 2 163 1 243 4 306 1 18 2 245 2 348 1 169 1 288 1 273 1 71 1 291 1 311 1 73 1 
46 1 100 1 336 1 315 1 253 1 4 1 106 1 282 2 231 1 295 1 127 1 317 1 8 1 337 1 40 2 163 1 306 1 243 3 18 1 269 1 245 1 327 1 168 1 348 1 169 1 198 1 291 1 311 1 28 1 
178 1 336 1 266 1 163 1 4 1 106 1 282 2 204 1 43 1 88 1 
178 1 336 1 266 1 163 1 4 1 106 1 282 2 204 1 43 1 88 1 
178 1 336 1 266 1 163 1 4 1 106 1 282 2 204 1 43 1 88 1 
178 1 336 1 266 1 163 1 4 1 106 1 282 2 204 1 43 1 88 1 
178 1 336 1 266 1 163 1 4 1 106 1 282 2 204 1 43 1 88 1 
128 1 116 1 278 1 185 1 32 1 189 1 137 1 216 1 191 1 227 1 
237 1 11 1 
207 1 128 1 304 1 116 1 278 1 185 1 6 1 137 1 216 1 
116 1 305 1 278 1 151 1 216 1 137 1 90 1 128 1 329 1 270 1 185 1 32 1 209 2 189 1 37 1 143 1 114 1 227 1 
116 1 305 1 278 1 151 1 216 1 137 1 90 1 128 1 329 1 270 1 185 1 32 1 209 2 189 1 37 1 143 1 114 1 227 1 
116 1 305 1 278 1 151 1 216 1 137 1 90 1 128 1 329 1 270 1 185 1 32 1 209 2 189 1 37 1 143 1 114 1 227 1 
146 1 9 1 276 1 
146 1 9 1 276 1 
362 1 174 1 
362 1 9 1 174 1 
134 1 261 1 
278 1 283 1 295 2 128 1 317 2 258 1 185 1 111 1 209 1 129 1 261 1 157 1 37 1 237 1 79 1 11 1 192 1 116 1 305 1 134 1 137 1 216 1 327 2 90 1 329 1 168 2 198 2 
146 1 276 1 
362 1 9 1 174 1 
124 1 49 1 2 1 336 1 315 1 105 2 4 1 282 2 106 1 126 2 231 1 295 2 232 1 317 2 36 1 40 1 162 1 163 1 243 2 269 1 66 1 330 1 168 2 23 1 222 1 273 1 71 2 72 2 291 1 144 1 352 1 
13 1 2 1 52 1 105 2 165 1 217 1 136 1 152 1 257 1 108 1 126 2 33 2 273 1 71 2 334 1 44 1 262 1 188 1 361 1 
13 1 2 1 52 1 105 1 217 1 136 1 152 1 257 1 108 1 126 1 33 2 71 1 334 1 273 1 44 1 196 1 361 1 
124 1 353 1 49 1 133 1 2 1 105 1 342 1 7 1 257 1 126 1 25 1 273 1 71 1 262 1 
13 1 2 1 52 1 105 1 165 1 217 1 136 1 152 1 257 1 108 1 126 1 33 2 71 1 334 1 273 1 44 1 262 1 361 1 
155 1 
270 1 161 1 280 1 298 1 112 1 41 1 153 1 
252 1 256 1 294 1 112 1 37 1 305 1 161 1 41 1 87 1 139 1 287 1 369 1 270 2 224 1 225 1 145 1 98 1 
124 3 277 1 49 1 293 1 313 1 252 1 180 1 2 2 105 1 126 1 235 1 112 1 324 1 17 1 164 1 342 1 87 1 287 1 221 1 22 1 71 1 273 1 225 1 45 2 98 1 
312 2 147 1 252 1 256 3 294 1 206 1 127 2 31 1 359 1 112 8 37 1 339 1 305 1 240 1 285 1 161 2 82 5 41 5 164 1 306 2 268 1 87 2 139 6 218 5 287 2 166 1 270 5 348 2 169 2 290 1 27 1 311 2 225 2 250 1 98 2 
0 1 312 2 100 1 314 1 295 1 127 2 317 1 112 2 210 1 320 1 37 1 302 1 305 1 242 1 41 2 326 1 85 1 87 1 327 1 287 1 19 1 168 1 169 1 275 1 27 1 198 1 225 1 98 1 
161 1 41 1 87 1 287 1 153 1 270 1 298 1 112 1 225 1 98 1 
312 2 82 5 41 5 306 2 256 5 218 5 139 10 127 2 270 5 348 2 169 2 260 1 112 5 27 1 311 2 
270 1 305 1 161 1 252 1 37 1 294 1 
124 1 353 1 49 1 252 4 2 1 105 4 357 2 7 1 294 2 126 4 234 1 112 2 37 3 38 1 39 1 305 3 323 1 41 2 164 2 342 2 87 2 287 1 94 1 123 1 273 1 71 4 225 2 98 2 250 2 
124 1 100 2 277 1 49 1 336 1 2 1 315 1 4 1 105 1 106 1 282 2 55 1 232 1 126 1 295 3 231 1 317 3 258 1 58 1 238 1 159 1 163 1 243 1 342 1 85 1 327 2 168 2 71 1 273 1 198 2 291 1 73 1 
161 2 82 2 41 2 164 1 256 2 87 1 218 2 139 4 287 1 270 4 154 1 112 1 225 1 98 1 250 1 
128 1 278 1 29 1 
128 1 278 1 14 1 261 1 189 1 
128 1 278 1 29 1 
128 1 278 1 29 1 
128 1 278 1 341 1 
128 1 278 1 341 1 
128 1 278 1 341 1 
128 1 278 1 
185 1 137 1 
0 1 242 1 336 2 281 1 315 4 163 2 243 8 4 2 282 4 106 2 18 3 127 1 19 1 154 1 169 1 337 1 199 1 160 2 40 4 61 1 
0 1 280 1 242 1 281 1 315 3 243 6 18 2 19 1 127 1 154 1 169 1 160 2 61 1 40 3 
336 1 315 2 163 1 202 1 4 1 306 1 243 4 282 2 106 1 18 2 127 1 348 1 169 1 337 1 311 1 160 1 40 2 
240 1 285 2 315 4 243 7 306 1 119 1 18 2 127 1 31 1 348 1 169 1 337 1 311 1 160 1 40 3 
0 1 281 1 336 2 315 12 4 2 282 4 106 2 316 1 127 3 31 2 154 1 337 4 160 5 61 1 40 11 285 2 242 2 340 1 163 2 306 2 243 23 119 1 18 9 19 2 348 2 169 3 311 2 199 2 371 1 
285 1 315 1 243 1 
31 1 243 1 40 1 
336 1 163 1 315 3 4 1 202 1 243 6 306 1 106 1 282 2 18 3 127 1 348 1 169 1 337 1 260 1 311 1 160 2 40 3 
336 1 315 6 4 1 106 1 282 2 204 1 127 2 31 1 359 1 337 1 160 1 40 6 339 1 240 1 285 1 163 1 243 12 306 2 268 1 18 2 166 1 348 2 169 2 290 1 311 2 
0 1 242 1 315 3 243 6 18 2 127 1 19 1 169 1 337 1 160 1 40 3 
242 1 281 1 336 1 315 2 163 1 243 3 4 1 282 2 106 1 18 2 19 1 337 1 199 1 160 1 371 1 40 1 61 1 
0 1 242 2 336 1 163 1 315 5 4 1 243 10 106 1 282 2 204 1 18 5 19 2 127 2 169 2 337 2 320 1 160 3 40 5 
336 1 163 1 4 1 306 1 243 2 204 1 282 2 106 1 18 1 127 1 337 1 40 2 
336 1 315 2 163 1 4 1 306 1 243 4 204 1 282 2 106 1 18 2 127 1 348 1 169 1 337 1 311 1 160 1 40 2 
115 1 242 1 336 3 315 2 163 3 243 3 4 3 204 1 282 6 106 3 18 2 19 1 337 1 199 1 371 1 160 1 40 1 
0 2 228 1 281 1 336 5 315 18 202 1 4 5 106 5 282 10 204 1 30 1 127 5 31 3 154 1 337 5 160 7 61 1 40 16 115 1 240 1 285 4 242 3 163 5 243 34 306 3 119 1 138 1 18 12 19 3 348 3 169 5 199 2 311 3 371 1 
0 1 336 1 281 1 315 4 4 1 106 1 282 2 204 1 127 1 31 1 154 1 160 2 40 4 61 1 339 1 240 1 285 1 242 1 163 1 243 8 18 2 19 1 169 1 
0 1 281 1 336 2 315 5 4 2 202 1 204 1 106 2 282 4 127 2 31 1 154 1 337 1 160 2 61 1 40 6 339 1 240 1 285 2 242 1 163 2 243 11 306 1 119 1 18 3 19 1 348 1 169 1 
0 1 281 1 336 3 315 10 202 1 4 3 106 3 282 6 204 1 127 3 31 1 154 1 359 1 337 1 160 3 61 1 40 9 339 1 240 1 285 1 242 1 163 3 243 19 306 2 268 1 18 4 166 1 19 1 348 2 169 3 290 1 311 2 199 1 
0 1 281 1 336 3 315 7 202 1 4 3 106 3 282 6 204 1 127 3 31 1 154 1 359 1 337 2 160 3 61 1 40 10 339 1 240 1 285 1 242 1 163 3 243 17 306 2 268 1 18 5 166 1 19 1 348 2 169 2 290 1 199 1 311 1 
0 1 336 1 281 1 315 4 4 1 106 1 282 2 204 1 127 1 31 1 154 1 160 2 40 4 61 1 339 1 240 1 285 1 242 1 163 1 243 8 18 2 19 1 169 1 
336 1 315 6 4 1 106 1 282 2 204 1 127 2 31 1 359 1 337 1 160 1 40 6 339 1 240 1 285 1 163 1 243 12 306 2 268 1 18 2 166 1 348 2 169 2 290 1 311 2 
0 1 281 1 336 4 315 8 202 1 4 4 106 4 282 8 204 1 127 3 31 1 154 1 359 1 337 2 160 3 61 1 40 10 339 1 240 1 285 1 242 1 163 4 243 18 306 2 268 1 18 5 166 1 19 1 348 2 169 2 290 1 311 1 199 2 
336 4 315 7 4 4 204 1 106 4 282 8 127 3 31 1 359 1 337 3 160 3 40 9 115 1 339 1 240 1 285 1 163 4 243 16 306 3 268 1 18 6 166 1 348 3 169 2 290 1 311 2 199 2 
0 1 242 3 281 2 315 4 243 7 18 6 19 3 127 1 169 1 337 3 160 3 61 1 40 3 
0 1 281 1 336 4 315 8 4 4 204 1 106 4 282 8 127 3 31 1 154 1 359 1 337 1 160 3 61 1 40 10 115 1 339 1 240 1 285 1 242 1 163 4 243 18 306 2 268 1 18 4 166 1 19 1 348 2 169 2 290 1 311 1 199 2 
317 1 345 1 47 1 258 1 272 1 168 1 295 1 
67 1 47 1 64 1 236 1 5 1 303 1 
124 1 353 1 49 1 280 1 2 1 273 1 71 1 105 1 342 1 7 1 126 1 
124 1 277 1 49 1 2 1 105 1 342 1 327 1 295 2 126 1 317 2 258 1 168 1 142 1 71 1 273 1 198 1 73 1 159 1 
124 3 277 2 49 2 2 1 105 1 357 1 126 1 295 2 317 2 258 1 186 1 210 1 159 1 327 2 21 1 271 1 168 2 170 1 142 1 273 1 71 1 198 1 73 1 
124 3 277 2 49 2 2 1 105 2 357 1 126 2 295 2 317 2 258 1 186 1 360 1 210 1 159 1 327 2 21 1 271 1 140 1 168 2 170 1 142 1 273 1 71 2 198 1 
221 1 124 1 305 1 252 1 71 1 105 1 357 1 37 1 45 1 338 1 126 1 
221 1 124 1 305 1 252 1 235 1 71 1 105 1 357 1 37 1 45 1 126 1 
2 1 273 1 71 1 105 1 126 1 372 1 
124 3 12 1 277 1 49 2 181 1 180 1 2 3 52 1 325 1 193 1 105 7 342 2 328 1 126 7 71 6 34 1 273 2 72 1 188 1 36 1 372 1 
0 1 49 1 336 2 2 1 253 1 105 1 4 2 106 2 55 1 295 2 258 2 8 1 154 1 159 1 160 2 61 1 162 1 163 2 269 1 18 2 19 1 168 1 169 1 71 1 273 1 73 1 124 1 277 1 281 1 315 3 282 4 126 1 231 2 127 1 317 2 188 1 238 1 40 3 242 1 243 6 244 1 245 1 327 1 288 1 142 1 198 1 291 2 
124 1 305 1 313 1 252 1 323 1 17 1 105 1 342 1 87 1 287 1 126 1 221 1 22 1 235 1 111 1 71 1 37 1 225 1 45 1 98 1 
124 1 277 1 49 1 180 1 2 2 324 1 105 1 126 1 221 1 71 1 273 1 372 1 
124 1 353 1 49 1 2 1 105 4 342 1 7 1 54 1 126 4 71 4 273 1 188 1 360 1 
124 1 12 1 277 1 49 1 2 2 193 1 105 2 364 1 357 1 126 2 184 1 71 2 273 1 201 1 
2 1 33 1 273 1 71 1 105 1 342 1 136 1 152 1 108 1 126 1 
124 1 49 1 2 1 52 1 273 1 71 2 105 2 188 1 36 1 144 1 126 2 
124 3 353 1 49 2 181 1 2 2 105 5 342 1 357 1 7 1 54 1 328 1 126 5 71 4 273 2 188 1 36 1 
124 3 353 1 49 2 2 2 105 5 342 1 357 1 7 1 54 1 328 1 126 5 71 4 273 2 188 1 36 1 264 1 
124 1 277 1 49 1 2 1 105 1 342 1 327 1 295 2 126 1 317 2 258 1 140 1 168 1 142 1 71 1 273 1 198 1 159 1 
124 1 12 1 277 1 49 1 180 1 2 2 193 1 105 1 357 1 126 1 71 1 34 1 273 1 
363 1 135 1 295 1 330 1 317 1 93 1 168 1 222 1 352 1 
363 1 229 1 109 1 
258 1 93 1 363 1 267 1 135 1 
251 1 305 2 161 1 363 1 267 2 135 2 229 1 109 1 21 1 270 1 271 1 258 1 93 2 111 1 195 1 210 1 37 2 350 1 74 1 
280 1 274 1 158 1 97 1 
274 1 173 1 149 1 158 1 200 1 351 1 97 1 
80 1 173 1 60 1 
99 2 149 1 344 1 347 1 274 1 173 3 310 1 158 1 113 1 200 1 351 3 97 1 
346 1 274 1 173 2 149 1 158 1 200 1 351 2 97 1 368 1 
103 1 149 1 217 1 152 1 331 1 33 1 173 1 274 1 113 1 200 1 351 1 
274 1 173 1 149 1 200 1 113 1 351 1 97 1 
173 1 149 1 158 1 200 1 113 1 351 1 97 2 
149 2 76 1 35 1 274 1 173 2 113 1 200 2 351 2 97 1 321 1 
117 1 103 1 149 1 203 1 346 2 173 3 274 2 158 1 113 1 200 1 351 3 301 1 97 1 
149 1 136 1 217 1 152 1 346 1 333 1 33 2 274 1 173 2 44 1 158 1 113 1 200 1 351 2 97 1 
117 1 103 1 149 2 368 1 346 2 24 1 173 4 274 2 158 1 113 1 200 2 351 4 97 1 
274 1 173 1 149 1 158 1 200 1 113 1 351 1 97 1 
99 1 117 1 103 1 149 1 214 1 344 1 346 2 347 1 173 4 274 3 158 2 200 1 351 4 97 2 
149 1 208 1 75 1 346 1 296 1 274 1 173 2 158 1 113 1 200 1 351 2 97 1 
99 2 3 1 149 1 344 2 347 1 274 1 173 3 158 1 113 1 200 1 351 3 97 1 
176 1 171 1 274 2 120 2 
358 1 173 1 149 1 200 1 113 1 351 1 
346 1 274 1 173 2 149 1 158 1 203 1 200 1 113 1 351 2 97 1 
172 1 
274 1 173 1 149 1 158 1 200 1 113 1 351 1 97 1 
99 1 149 1 203 1 346 1 173 3 274 1 158 1 113 1 200 1 351 3 97 1 
117 1 103 1 274 1 214 1 
274 1 97 1 

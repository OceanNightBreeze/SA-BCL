#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 161 (63,359) (63,359) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 161 (63,359) (63,359) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 161 (63,359) (63,359) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 161 (63,359) (63,359) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 229 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 52 1 95 4 100 9 254 1 57 1 101 1 292 7 230 1 156 1 355 1 81 9 370 2 161 1 38 1 265 5 269 1 113 2 43 1 44 1 88 3 320 1 13 2 148 1 
0 1 52 1 95 4 100 9 254 1 57 1 101 1 292 7 230 1 156 1 355 1 81 9 370 2 161 1 38 1 265 5 269 1 113 2 43 1 44 1 88 3 320 1 13 2 148 1 
370 2 95 1 265 2 100 3 254 1 269 1 43 1 320 1 88 1 13 2 292 1 156 1 81 3 
0 1 52 1 370 1 161 1 63 1 100 2 359 1 255 1 43 1 13 1 148 1 78 1 156 1 342 1 81 2 233 1 
0 1 52 1 370 1 161 1 63 1 100 2 359 1 255 1 43 1 13 1 148 1 78 1 156 1 342 1 81 2 233 1 
0 1 52 1 370 1 161 1 63 1 100 2 359 1 255 1 43 1 13 1 148 1 78 1 156 1 342 1 81 2 233 1 
0 1 52 1 370 1 161 1 63 1 100 2 359 1 255 1 43 1 13 1 148 1 78 1 156 1 342 1 81 2 233 1 
0 1 52 1 370 1 95 2 161 1 265 3 100 4 254 1 269 1 113 2 101 1 88 1 13 1 148 1 292 3 156 1 355 1 81 4 
370 1 52 1 18 1 265 1 100 2 254 1 269 1 255 1 196 1 43 1 13 1 148 1 274 1 78 1 156 1 81 2 
126 1 20 1 111 1 204 1 283 1 346 1 166 1 12 1 27 1 242 1 109 1 231 1 120 1 93 1 
201 1 
126 2 201 1 190 1 242 1 111 2 129 1 321 1 119 1 
126 5 201 1 138 1 190 2 111 5 129 1 9 1 61 1 268 1 325 1 98 1 242 2 301 2 271 2 321 1 135 1 257 1 171 2 123 1 
201 1 229 1 321 1 
201 1 86 1 287 2 
12 2 20 2 283 2 204 1 109 2 336 1 346 2 93 2 
277 1 278 1 20 3 21 2 174 1 22 1 193 1 283 2 253 1 55 1 194 1 223 1 346 2 74 2 75 1 195 1 347 1 288 1 290 2 108 1 109 2 353 1 110 1 311 1 82 1 332 1 84 2 333 1 204 1 266 2 140 1 336 1 41 1 240 1 12 2 344 1 93 3 
20 1 204 1 283 1 346 1 166 1 12 1 27 1 109 1 120 1 93 1 
126 1 201 1 296 1 20 1 111 1 166 1 2 1 12 1 65 1 116 1 272 1 321 1 232 1 93 1 
126 2 201 1 296 1 20 1 111 2 283 1 346 1 166 1 12 1 65 1 116 1 272 1 321 1 109 1 93 1 
126 1 190 1 242 1 111 1 87 1 
126 2 201 1 212 1 190 1 242 1 111 2 129 1 321 1 
126 1 190 1 111 1 
20 2 283 1 336 1 346 1 166 1 12 2 348 1 105 1 118 1 109 1 93 2 
324 1 291 1 244 1 
277 1 84 1 20 1 21 1 174 1 22 1 193 1 266 1 336 1 55 1 153 1 75 1 347 1 108 1 82 1 93 1 
229 1 336 1 
20 2 202 1 283 1 336 1 346 2 166 1 12 2 105 1 118 1 109 2 93 2 
12 2 20 2 109 2 120 1 346 2 259 1 166 1 93 2 
277 1 84 1 20 2 174 1 202 1 21 1 22 1 193 1 266 1 55 1 346 1 75 1 360 1 12 1 347 1 291 1 108 1 109 1 82 1 93 2 
20 3 202 1 283 1 336 1 346 3 166 1 12 3 105 1 109 3 93 3 
12 1 20 1 109 1 120 1 346 1 166 1 93 1 
20 1 283 1 346 1 166 1 12 1 348 1 118 1 109 1 93 1 
126 1 277 1 278 1 20 4 174 1 21 1 22 1 193 1 283 2 253 1 55 1 194 1 223 1 346 3 74 2 75 1 195 1 347 1 288 1 290 1 108 1 109 3 353 1 82 1 84 1 296 1 333 1 202 1 111 1 204 1 238 1 266 1 140 1 336 1 141 1 360 1 166 1 240 1 12 3 65 1 116 1 272 1 118 1 93 4 
2 1 12 2 228 1 20 2 202 1 109 1 336 1 346 1 93 2 
126 1 201 1 296 1 20 3 111 1 202 2 283 1 286 1 141 1 346 3 360 1 166 1 12 3 65 1 116 1 272 1 118 1 109 3 93 3 
324 1 20 2 202 1 283 1 346 2 12 2 291 1 118 1 109 2 93 2 
277 1 84 1 20 1 21 1 174 1 22 1 193 1 266 1 336 1 55 1 75 1 347 1 108 1 82 1 93 1 
84 1 20 1 21 1 160 1 174 1 139 1 22 1 193 1 266 1 336 1 55 1 75 1 108 1 82 1 93 1 
127 1 324 2 151 1 253 1 223 1 194 2 74 2 326 1 195 1 288 1 290 4 291 2 198 1 333 1 372 1 211 1 240 1 66 1 241 1 302 1 304 1 244 2 344 2 125 1 
65 1 12 1 20 1 109 1 346 1 259 1 166 1 93 1 
297 1 299 1 205 1 
297 2 205 2 284 1 217 1 11 1 134 1 
297 1 205 1 
297 1 205 1 
284 1 217 1 
284 1 217 1 
284 1 217 1 
297 1 178 1 205 1 
297 1 178 1 205 1 
297 1 178 1 205 1 
373 1 297 1 205 1 
373 1 297 1 205 1 
373 1 297 1 205 1 
126 1 250 1 20 2 281 1 111 1 282 1 297 1 307 1 177 1 299 1 205 1 336 1 346 2 133 1 76 1 328 1 12 2 227 1 109 2 377 1 122 1 93 2 4 1 137 1 
126 2 201 1 249 1 220 1 282 2 297 2 111 2 205 2 222 1 11 1 42 1 76 1 227 2 169 1 28 1 376 2 122 2 4 2 137 3 
0 1 18 1 148 2 92 1 16 2 
0 1 52 1 148 1 
52 1 18 1 148 1 
0 2 18 1 148 3 275 1 16 1 92 1 
0 1 317 1 18 1 148 2 16 1 92 1 
126 5 323 1 280 1 190 1 129 1 307 1 287 3 325 3 133 1 328 1 102 2 135 2 200 1 138 1 201 2 111 5 335 1 263 2 86 1 339 1 318 2 66 1 241 1 242 4 302 1 271 1 301 1 341 1 321 1 48 1 171 1 125 1 
126 9 219 1 280 3 190 6 307 4 129 1 287 9 325 8 102 6 330 1 104 1 135 6 107 1 200 2 201 5 138 1 158 5 111 9 298 1 263 6 86 3 87 5 339 2 66 3 241 3 242 7 302 3 301 2 271 2 321 1 170 1 48 1 171 2 123 1 125 3 
126 3 323 1 280 1 307 1 325 3 287 4 102 2 135 2 200 1 201 3 111 3 263 2 86 2 339 1 318 1 66 1 241 1 242 2 302 1 271 1 301 1 321 1 341 1 171 1 123 1 125 1 
126 4 323 1 280 2 307 2 287 7 325 5 102 4 330 1 135 4 107 1 200 1 201 4 111 4 298 1 263 4 86 3 339 1 318 2 66 2 241 2 242 3 302 2 271 1 301 1 321 1 341 1 171 1 123 1 125 2 
303 1 
71 1 229 1 22 1 
22 1 367 1 
22 1 193 1 108 1 
22 1 58 1 
22 1 193 1 
71 2 146 1 22 3 193 1 108 1 124 1 
83 1 128 1 364 1 176 2 54 1 194 3 372 2 26 1 302 1 198 3 290 7 117 1 322 1 80 1 354 1 276 1 125 1 344 4 
128 1 364 1 280 3 175 1 176 3 54 2 253 1 223 1 194 15 25 4 26 2 74 2 99 1 225 1 288 1 290 31 198 10 293 1 354 2 80 5 83 2 333 1 203 3 159 1 209 1 372 5 241 3 66 3 302 4 117 1 305 1 276 1 344 16 125 4 
128 1 176 2 54 1 252 1 253 2 223 2 194 4 26 1 74 4 288 2 290 9 198 4 354 1 80 1 83 1 333 2 372 3 302 1 214 1 117 1 305 1 276 1 125 1 344 5 
83 1 128 1 364 1 176 2 54 1 194 3 372 2 26 1 302 1 198 3 290 7 117 1 80 1 354 1 276 1 125 1 344 4 
83 1 128 1 364 1 176 2 54 1 194 3 372 2 26 1 302 1 198 3 290 7 117 1 80 1 354 1 276 1 125 1 344 4 
174 2 21 1 22 2 193 2 55 1 73 1 100 1 327 1 106 2 108 1 310 1 183 1 295 1 82 1 81 1 59 1 84 1 370 1 112 2 85 1 185 1 266 1 371 1 43 2 67 1 270 1 145 2 13 1 245 1 70 1 
0 1 52 1 18 1 21 1 174 1 55 1 100 1 106 1 351 1 156 1 81 1 260 1 356 1 84 1 370 1 112 1 266 1 186 1 43 1 45 1 145 1 13 1 148 2 90 1 275 1 247 1 
0 1 52 1 18 1 21 1 174 1 55 1 100 2 254 1 292 1 106 1 351 1 156 1 368 1 81 2 260 1 356 1 84 1 370 1 112 1 265 1 266 1 186 1 269 1 43 1 45 1 145 1 13 1 148 2 90 1 275 1 
0 1 52 1 18 1 21 1 174 1 55 1 100 3 254 1 327 1 292 2 106 1 351 1 81 3 313 1 356 1 84 1 370 1 112 1 265 1 266 1 186 1 269 1 43 1 45 1 145 1 13 1 148 2 90 1 275 1 247 1 
0 1 52 1 18 1 21 1 174 1 55 1 100 2 254 1 292 2 106 1 351 1 81 2 313 1 356 1 84 1 112 1 265 1 266 1 269 1 43 1 145 1 148 2 90 1 275 1 247 1 
29 1 
126 3 279 3 191 2 190 5 129 2 325 1 154 2 155 1 226 1 180 3 349 1 182 1 135 1 32 2 31 1 201 1 6 1 138 1 111 3 237 1 86 2 267 3 358 1 40 3 167 2 301 1 271 1 361 1 321 1 375 1 171 1 69 1 
126 3 279 3 191 2 190 5 129 2 325 1 154 2 155 1 226 1 180 3 349 1 182 1 135 1 32 2 31 1 201 1 6 1 138 1 111 3 237 1 86 2 267 3 358 1 40 3 167 2 301 1 271 1 361 1 321 1 375 1 171 1 69 1 
126 3 279 2 190 4 129 2 24 2 325 1 287 2 154 2 155 1 226 1 180 2 349 1 135 1 32 2 201 1 6 1 138 1 36 1 111 3 267 2 40 2 358 1 271 1 301 1 243 2 321 1 171 1 246 1 69 1 
126 2 190 2 174 2 21 2 129 1 22 2 193 2 221 1 55 1 73 1 325 1 135 1 108 1 366 1 183 1 82 2 59 1 138 1 84 2 111 2 185 1 266 2 339 1 319 1 67 1 271 1 301 1 245 1 171 1 
126 2 6 1 279 1 190 2 111 2 129 1 358 1 226 1 349 1 119 1 69 1 
226 1 126 1 6 1 111 1 349 1 267 1 40 1 358 1 69 1 
126 2 6 1 279 1 190 2 111 2 129 1 267 1 358 1 40 1 226 1 180 1 349 1 119 1 69 1 
190 7 191 2 154 2 346 1 155 1 349 1 109 1 6 1 201 2 111 4 204 1 267 3 358 1 166 1 167 2 12 1 168 1 361 1 271 1 321 2 171 1 119 1 69 1 120 1 126 4 279 4 20 1 129 3 283 1 325 1 226 1 27 1 180 4 182 1 135 1 31 1 32 2 231 1 138 1 237 1 86 2 40 3 301 1 375 1 93 1 
126 3 279 2 190 4 191 2 129 2 325 1 287 2 154 2 155 1 226 1 180 2 349 1 135 1 32 2 201 2 6 1 138 1 36 1 111 3 86 2 267 2 40 2 358 1 167 2 271 1 301 1 361 1 321 1 171 1 69 1 
126 3 279 2 190 4 191 2 129 2 325 1 154 2 155 1 226 1 180 2 182 1 349 1 135 1 31 1 32 2 201 1 138 1 6 1 111 3 86 2 267 2 40 2 358 1 167 2 301 1 271 1 361 1 321 1 375 1 171 1 69 1 
126 3 279 2 190 4 191 2 129 2 325 1 154 2 155 1 226 1 180 2 182 1 349 1 135 1 31 1 32 2 201 1 138 1 6 1 111 3 86 2 267 2 40 2 358 1 167 2 301 1 271 1 361 1 321 1 375 1 171 1 69 1 
126 3 279 2 150 1 190 4 129 2 24 2 345 1 287 2 325 1 154 2 155 1 226 1 180 2 349 1 135 1 32 2 201 1 138 1 6 1 111 3 267 2 40 2 358 1 243 2 301 1 271 1 321 1 375 1 171 1 246 1 69 1 
174 2 21 2 22 2 193 2 55 1 253 1 73 1 223 1 194 1 74 2 195 1 288 1 290 2 108 1 183 1 110 1 82 1 311 1 59 1 84 2 333 1 185 1 266 2 316 1 140 1 240 1 67 1 245 1 121 1 344 1 
280 1 324 1 20 1 283 1 253 1 223 1 194 2 346 1 74 2 195 1 179 1 288 1 198 1 291 1 290 3 109 1 333 1 372 1 240 1 12 1 68 1 241 1 66 1 302 1 244 1 118 1 93 1 125 1 344 1 
128 1 324 1 151 1 176 1 54 1 253 1 223 1 194 3 74 2 195 1 229 1 288 1 291 1 198 2 290 6 83 1 333 1 336 2 372 2 240 1 302 1 117 1 244 1 276 1 125 1 344 3 
94 1 280 2 324 4 253 2 194 6 223 2 25 3 99 1 74 4 195 2 288 2 198 2 290 14 291 11 293 1 80 1 311 1 35 1 60 1 333 2 203 3 315 1 140 1 336 1 372 1 240 1 68 1 241 2 66 1 302 1 244 11 344 8 125 2 
277 1 324 1 20 2 174 1 21 1 22 1 193 1 55 1 253 1 153 1 223 1 194 1 346 1 75 1 74 2 195 1 347 1 288 1 290 2 108 1 109 1 82 1 311 1 84 1 333 1 202 1 37 1 262 1 266 1 140 1 336 1 360 1 240 1 12 1 68 1 215 1 93 2 344 1 
189 1 193 2 54 1 253 3 55 2 194 10 346 1 195 3 347 2 198 8 350 1 108 2 109 1 311 1 202 1 266 3 360 1 12 1 68 1 66 2 117 1 14 1 276 1 125 3 128 1 277 2 278 2 280 2 324 7 20 3 21 3 174 2 176 1 130 2 22 2 223 3 74 6 75 2 288 3 290 20 291 7 80 4 82 1 83 1 84 3 333 3 140 1 336 2 239 2 372 4 240 3 241 2 302 3 46 2 244 7 247 1 93 3 378 2 344 10 
127 1 324 1 333 1 151 1 253 1 223 1 74 2 195 1 240 1 241 1 288 1 198 1 291 1 290 2 244 1 80 1 125 1 344 2 
324 1 333 1 151 1 253 1 223 1 194 2 372 1 74 2 211 1 195 1 240 1 66 1 288 1 198 1 291 1 290 2 302 1 244 1 
280 1 324 2 333 1 151 1 253 1 194 2 223 1 372 1 74 2 195 1 240 1 66 1 241 1 288 1 302 1 198 2 291 2 290 4 244 2 80 1 125 1 344 2 
127 1 324 1 333 1 253 1 223 1 74 2 195 1 240 1 241 1 288 1 198 1 291 1 290 2 244 1 80 1 121 1 125 1 344 2 
324 1 333 1 253 1 223 1 194 2 372 1 74 2 211 1 195 1 240 1 66 1 288 1 198 1 291 1 290 2 302 1 244 1 121 1 
280 1 324 2 333 1 253 1 194 2 223 1 372 1 74 2 195 1 240 1 66 1 241 1 288 1 302 1 198 2 291 2 290 4 244 2 80 1 121 1 125 1 344 2 
280 1 324 2 333 1 253 1 194 2 223 1 372 1 74 2 195 1 240 1 66 1 241 1 288 1 302 1 198 2 291 2 290 4 244 2 80 1 125 1 344 2 
277 1 278 1 20 1 174 1 21 1 22 1 193 1 55 1 253 1 223 1 194 1 75 1 74 2 195 1 347 1 288 1 290 2 108 1 311 1 82 1 84 1 333 1 266 1 140 1 336 1 240 1 344 1 93 1 
20 1 174 1 21 1 22 1 193 1 55 1 253 1 223 1 194 1 75 1 74 2 195 1 288 1 290 2 108 1 311 1 82 1 84 1 333 1 160 1 139 1 266 1 165 1 140 1 336 1 240 1 344 1 93 1 
280 1 324 2 333 1 253 1 194 2 223 1 372 1 74 2 195 1 240 1 66 1 68 1 241 1 288 1 302 1 198 2 291 2 290 4 244 2 80 1 125 1 344 2 
277 1 278 1 280 1 324 2 20 1 174 1 21 1 22 1 193 1 55 1 253 1 194 2 223 1 75 1 74 2 195 1 347 1 288 1 198 2 291 2 290 4 108 1 368 1 80 1 84 1 333 1 266 1 372 1 240 1 66 1 241 1 302 1 46 1 244 2 344 2 125 1 93 1 
280 1 324 1 20 1 283 1 253 1 194 1 223 1 346 1 74 2 195 1 288 1 198 1 290 3 291 1 109 1 352 1 80 1 333 1 240 1 12 1 66 1 68 1 241 1 302 1 118 1 244 1 93 1 125 1 344 2 
128 1 17 1 280 4 96 1 97 1 176 1 54 1 252 1 253 3 132 1 223 3 194 21 25 4 99 3 74 6 103 1 197 1 289 1 288 3 290 41 198 8 293 1 184 1 80 4 136 1 83 1 333 3 203 3 163 2 62 1 206 1 372 4 187 1 241 4 66 4 302 5 117 1 305 1 49 4 50 1 276 1 344 20 125 5 
128 1 17 1 280 4 96 1 97 1 176 1 54 1 252 1 253 4 132 1 223 4 194 18 25 4 99 3 74 8 103 1 197 1 289 1 288 4 290 38 198 7 293 1 184 1 80 3 136 1 83 1 333 4 203 3 163 2 62 1 206 1 372 4 187 1 241 4 66 3 302 4 117 1 305 2 49 4 50 1 276 1 344 20 125 5 
128 1 17 1 280 7 96 1 97 1 176 1 54 1 252 1 253 2 132 1 223 2 194 25 25 4 99 2 74 4 103 1 197 1 289 1 288 2 290 52 198 14 293 2 184 1 80 7 83 1 333 2 203 4 163 1 315 2 62 1 206 1 372 7 241 7 66 7 302 8 117 1 305 1 49 4 50 1 276 1 344 27 125 8 
17 1 280 3 252 1 253 2 132 1 223 2 194 10 25 2 99 1 74 4 103 1 288 2 290 19 198 6 293 1 80 3 136 1 333 2 203 1 163 1 206 2 372 3 241 3 66 3 302 3 49 2 50 1 51 1 344 9 125 3 
17 1 280 3 96 1 97 1 252 1 253 3 194 12 132 2 223 3 25 2 74 6 99 2 103 1 197 1 289 1 288 3 198 4 290 26 184 1 80 2 333 3 203 2 163 2 62 1 206 1 372 2 241 3 66 2 302 2 305 2 49 4 50 1 344 14 125 3 
227 1 169 1 297 1 282 1 205 1 222 1 224 1 122 1 11 1 4 1 
250 1 299 1 
173 1 144 1 227 1 297 1 282 1 47 1 205 1 122 1 4 1 
178 1 142 1 
338 1 373 1 134 1 
126 1 201 1 220 1 111 1 282 1 297 1 205 1 222 1 11 1 42 1 76 1 227 1 169 1 28 1 376 1 122 1 4 1 137 2 
126 1 201 1 220 1 111 1 282 1 297 1 205 1 222 1 11 1 42 1 76 1 227 1 169 1 28 1 376 1 122 1 4 1 137 2 
126 1 201 1 220 1 111 1 282 1 297 1 205 1 222 1 11 1 42 1 76 1 227 1 169 1 28 1 376 1 122 1 4 1 137 2 
178 1 142 1 134 1 
178 1 142 1 134 1 
338 1 373 1 
338 1 373 1 134 1 
281 1 177 1 
126 1 20 2 250 1 282 1 281 1 307 1 177 1 308 1 346 2 133 1 328 1 227 1 109 2 4 1 137 1 111 1 297 1 205 1 299 1 336 1 42 1 12 2 242 1 376 1 377 1 122 1 93 2 
20 2 174 1 21 2 22 1 193 1 55 1 253 1 223 1 194 1 74 2 195 1 288 1 290 2 258 1 294 1 110 2 311 1 84 2 333 1 7 1 162 1 266 2 316 1 140 1 210 1 240 1 12 2 68 1 363 1 93 2 344 1 
21 1 174 2 22 2 193 2 285 1 55 1 73 1 108 1 183 1 82 1 59 1 84 1 85 1 266 1 185 1 39 1 67 1 145 1 245 1 70 1 
0 1 52 1 84 1 18 1 174 1 21 1 23 1 266 1 39 1 186 1 55 1 145 1 148 2 351 1 90 1 275 1 247 1 312 1 
0 1 52 1 84 2 18 1 174 1 21 2 23 1 266 2 39 1 55 1 186 1 145 1 148 2 351 1 90 1 275 1 368 1 247 1 312 1 
0 1 52 1 84 1 18 1 21 1 174 1 8 1 23 1 266 1 186 1 55 1 145 1 148 2 351 1 90 1 275 1 247 1 
334 1 
277 1 278 1 20 3 21 1 174 1 22 1 283 2 193 1 253 1 55 1 194 1 223 1 346 2 74 2 75 1 195 1 347 1 288 1 290 1 108 1 109 2 353 1 82 1 84 1 333 1 204 1 266 1 140 1 336 1 12 2 240 1 93 3 
138 1 201 4 176 1 263 2 86 2 287 4 325 1 339 1 102 2 319 1 301 1 271 1 135 2 321 2 171 1 
138 1 201 1 98 1 325 1 301 1 271 1 257 1 135 1 321 1 171 1 
201 5 248 1 280 2 263 5 86 5 239 1 287 10 325 5 102 5 241 2 66 2 302 2 135 5 188 2 125 2 
126 1 201 1 190 1 111 1 129 1 321 1 
126 1 190 2 174 2 21 2 129 1 22 2 193 2 221 1 55 1 73 1 325 1 135 1 108 1 366 1 183 1 82 2 59 1 138 1 84 2 111 1 185 1 266 2 300 1 339 1 319 1 67 1 271 1 301 1 245 1 171 1 
201 1 229 1 321 1 135 1 257 1 325 1 98 1 
126 1 201 2 138 1 190 1 191 1 111 1 129 1 86 1 287 1 325 1 167 1 301 1 271 1 361 1 321 1 135 1 171 1 
149 2 248 2 190 5 192 1 193 3 55 3 98 1 102 6 257 1 108 3 58 2 201 8 261 2 111 5 263 6 266 3 64 1 319 1 66 2 271 4 272 2 321 2 171 4 15 2 124 1 125 2 218 1 126 5 280 2 71 2 174 4 21 3 129 3 365 2 22 10 325 9 287 12 135 8 30 2 367 3 368 1 82 1 138 4 84 3 86 6 337 1 239 2 300 1 339 2 340 2 241 2 301 4 302 2 188 2 
126 1 248 1 280 2 190 1 96 1 129 1 287 6 325 8 25 1 99 1 102 5 197 1 289 1 135 5 184 1 5 1 138 2 201 5 111 1 203 1 263 5 62 1 86 3 339 1 319 1 241 2 66 2 271 2 301 2 302 2 321 2 188 2 171 2 343 1 125 2 
126 1 248 1 20 1 283 1 54 1 325 2 346 1 27 1 182 1 135 2 109 1 231 1 83 1 138 1 111 1 357 1 204 1 166 1 12 1 271 1 301 1 302 1 117 1 188 2 171 1 120 1 93 1 125 2 
227 1 256 1 177 1 222 1 122 1 
77 1 227 1 122 1 
77 1 227 1 122 1 
77 1 227 1 122 1 
114 1 227 1 122 1 
114 1 227 1 122 1 
114 1 227 1 122 1 
227 1 122 1 
297 1 205 1 
128 1 176 1 54 1 252 1 253 1 194 4 223 1 25 1 99 1 74 2 288 1 290 8 198 2 184 1 83 1 333 1 203 1 372 2 302 1 117 1 276 1 125 1 344 4 
128 1 280 1 176 1 54 1 252 1 253 2 194 5 223 2 25 2 99 1 74 4 288 2 290 11 198 3 293 1 184 1 80 1 83 1 333 2 203 1 372 2 241 1 302 1 117 1 91 1 276 1 344 6 125 2 
128 1 280 2 96 1 176 1 54 1 252 1 253 3 194 10 223 3 25 1 99 1 74 6 197 1 288 3 289 1 290 19 198 4 184 1 80 1 83 1 333 3 203 1 62 1 372 3 241 2 66 2 302 3 117 1 305 1 91 1 276 1 344 9 125 3 
128 1 280 2 96 1 176 1 54 1 252 1 253 3 194 7 223 3 25 1 99 1 74 6 288 3 289 1 197 1 290 17 198 5 184 1 80 2 83 1 333 3 203 1 62 1 372 3 241 2 66 1 302 2 117 1 305 1 91 1 276 1 344 10 125 3 
128 1 176 1 54 1 252 1 253 1 194 4 223 1 25 1 99 1 74 2 288 1 290 8 198 2 184 1 83 1 333 1 203 1 372 2 302 1 117 1 276 1 125 1 344 4 
280 2 96 1 252 1 253 1 194 6 223 1 25 1 99 1 74 2 288 1 289 1 197 1 290 12 198 2 184 1 80 1 333 1 203 1 62 1 372 1 241 2 66 2 302 2 344 6 125 2 
128 1 280 2 96 1 176 1 54 1 252 1 253 4 194 8 223 4 25 1 99 1 74 8 197 1 289 1 288 4 290 18 198 5 184 1 80 2 83 1 333 4 203 1 62 1 372 3 241 2 66 1 302 2 117 1 305 2 91 1 276 1 344 10 125 3 
280 3 96 1 252 1 253 4 194 7 223 4 25 1 99 1 74 8 197 1 289 1 288 4 290 16 198 6 184 1 80 3 136 1 333 4 203 1 62 1 372 3 241 3 66 2 302 2 305 2 344 9 125 3 
128 2 83 3 54 3 194 4 372 3 302 1 290 7 198 6 117 1 80 3 276 1 125 1 344 3 
128 1 280 2 96 1 176 1 54 1 252 1 253 4 194 8 223 4 25 1 99 1 74 8 197 1 289 1 288 4 290 18 198 4 184 1 80 1 136 1 83 1 333 4 203 1 62 1 372 3 241 2 66 1 302 2 117 1 305 2 276 1 344 10 125 3 
83 2 333 1 357 1 54 2 252 1 253 1 223 1 194 5 372 3 74 2 288 1 198 5 290 10 302 2 117 1 80 2 344 5 125 2 
333 1 252 1 253 1 223 1 74 2 241 1 288 1 290 2 198 1 80 1 125 1 344 2 
280 1 333 1 252 1 253 1 194 2 223 1 372 1 74 2 66 1 241 1 288 1 302 1 198 2 290 4 80 1 125 1 344 2 
83 1 333 3 10 1 54 1 252 1 253 3 194 2 223 3 372 1 74 6 288 3 290 3 198 2 305 1 80 1 136 1 344 1 
128 1 280 3 175 1 176 1 54 3 252 1 253 5 194 18 223 5 25 4 99 1 74 10 225 1 288 5 290 34 198 12 293 1 80 5 136 1 83 3 333 5 159 1 203 3 10 1 372 7 241 3 66 3 302 5 117 2 305 2 91 1 276 1 344 16 125 5 
128 1 83 1 333 2 176 1 54 1 253 2 194 4 223 2 372 2 74 4 288 2 302 1 290 8 198 3 117 1 305 1 80 1 276 1 125 1 344 4 
83 1 128 1 229 1 302 1 290 6 198 2 117 1 176 1 54 1 194 3 372 2 276 1 344 3 125 1 
280 1 333 1 253 1 194 2 223 1 372 1 74 2 66 1 241 1 288 1 302 1 198 2 290 4 80 1 91 1 125 1 344 2 
280 1 203 1 194 4 372 1 25 2 99 1 66 1 241 1 302 1 290 7 198 2 293 1 80 1 344 3 125 1 
94 1 128 1 280 2 176 1 54 2 253 2 194 12 223 2 25 2 74 4 288 2 198 9 290 23 293 1 80 4 83 2 333 2 203 2 315 1 10 1 372 5 241 2 66 2 302 3 117 1 305 2 276 1 125 3 344 11 
290 1 194 1 25 1 
290 1 203 1 344 1 
280 1 333 1 253 1 223 1 239 1 194 3 372 2 74 2 241 1 66 1 288 1 290 6 198 3 302 1 80 1 91 1 125 1 344 3 
280 2 96 1 252 1 253 1 194 6 223 1 25 1 99 1 74 2 288 1 289 1 197 1 290 12 198 2 184 1 80 1 333 1 203 1 62 1 372 1 241 2 66 2 302 2 344 6 125 2 
83 1 54 1 194 3 372 1 290 6 302 1 198 2 117 1 80 1 125 1 344 3 
83 1 128 1 333 1 10 1 54 1 253 1 194 2 223 1 372 1 74 2 288 1 198 2 290 3 305 1 80 1 276 1 344 1 
2 1 12 1 20 1 228 1 374 1 336 1 93 1 
20 1 131 1 152 1 336 1 2 1 12 1 374 1 228 1 362 1 34 1 157 1 93 1 
59 1 84 2 174 2 21 2 22 2 193 2 185 1 266 2 55 1 73 1 67 1 108 1 245 1 183 1 368 1 82 1 
218 1 189 1 59 1 84 2 21 2 174 2 22 1 193 1 266 2 185 1 55 1 73 1 67 1 108 1 
52 1 84 1 18 1 174 1 21 1 148 1 90 1 266 1 55 1 82 1 
84 2 21 2 174 1 22 1 193 1 266 2 55 1 210 1 294 1 368 1 247 1 
234 1 59 1 235 1 84 3 21 2 174 3 22 4 193 3 185 1 266 3 55 2 73 1 67 1 108 1 245 1 183 1 294 1 368 1 82 1 
59 1 235 1 84 3 21 2 174 3 22 4 193 3 185 1 266 3 55 2 73 1 67 1 213 1 108 1 245 1 183 1 294 1 368 1 82 1 
84 1 229 1 21 1 22 1 193 1 245 1 266 1 183 1 82 1 
84 1 20 2 174 1 202 1 21 1 22 1 193 1 266 1 336 1 55 1 346 1 75 1 12 1 347 1 108 1 109 1 82 1 93 2 
218 1 20 2 21 1 174 1 22 3 193 2 55 1 346 2 75 1 347 1 108 2 109 1 58 1 84 1 296 1 202 1 266 1 336 1 166 1 12 2 65 1 15 1 93 2 
218 1 20 2 21 2 174 1 22 3 251 1 193 2 55 1 346 2 75 1 108 2 109 1 58 1 84 2 296 1 202 1 139 1 266 2 336 1 166 1 12 2 65 1 15 1 93 2 
218 1 126 2 71 1 190 1 21 3 174 1 22 4 251 1 193 1 55 1 108 1 367 1 58 1 82 1 201 1 84 3 111 2 264 1 266 3 273 1 272 1 321 1 15 1 
126 2 218 1 201 1 84 3 190 1 71 1 174 1 111 2 21 3 22 4 251 1 193 1 266 3 55 1 340 1 272 1 321 1 108 1 367 1 58 1 15 1 82 1 
84 1 174 1 21 1 266 1 216 1 55 1 
234 1 235 1 59 1 84 7 21 6 174 3 22 3 193 2 266 7 185 1 55 2 1 1 331 1 108 1 216 1 294 1 110 1 368 1 247 1 82 2 124 1 
128 1 277 1 278 1 324 1 20 2 174 1 21 1 176 1 22 1 130 1 193 1 54 1 55 1 253 2 194 3 223 2 346 1 75 1 74 4 195 2 347 1 288 2 291 1 290 6 198 2 108 1 109 1 368 1 83 1 84 1 333 2 202 1 162 1 266 1 336 2 372 2 240 2 12 1 68 1 302 1 117 1 46 1 244 1 276 1 344 3 125 1 93 2 
126 3 149 1 190 2 71 1 21 1 129 1 22 2 325 1 98 1 135 1 257 1 30 1 367 1 82 1 201 1 138 2 84 1 261 1 111 3 266 1 300 1 340 1 242 1 271 2 301 2 272 1 321 1 171 2 
84 2 71 1 21 2 192 1 174 2 22 2 193 1 266 2 55 1 108 1 216 1 368 1 124 1 
84 1 20 2 174 1 202 1 21 1 139 1 22 1 193 1 266 1 336 1 55 1 346 1 75 1 12 1 108 1 109 1 82 1 93 2 
218 1 59 1 84 1 21 1 174 2 22 1 193 1 266 1 185 1 55 1 331 1 108 1 124 1 
12 1 20 1 7 1 89 1 147 1 258 1 363 1 207 1 93 1 
181 1 207 1 369 1 
3 1 89 1 147 1 207 1 336 1 
126 2 201 1 296 1 111 2 207 1 336 1 141 1 166 1 65 1 3 2 242 1 116 1 147 2 89 2 272 1 321 1 199 1 181 1 369 1 
255 1 44 1 370 1 13 1 292 1 265 1 156 1 81 3 100 3 254 1 269 1 
95 1 88 1 265 1 79 1 
265 1 254 1 
370 1 13 1 265 1 156 1 81 1 100 1 254 1 269 1 
370 1 95 1 164 1 265 3 100 4 254 2 269 2 255 1 115 1 88 1 13 1 292 2 79 1 81 4 
370 1 19 1 265 1 100 2 254 1 269 1 13 1 292 1 230 1 156 1 81 2 172 1 
370 1 236 1 164 2 265 1 100 3 269 1 254 1 255 2 115 1 13 1 156 1 81 3 
143 1 53 2 265 2 33 1 
370 1 13 1 72 1 156 1 81 1 100 1 
44 1 370 1 13 1 292 1 265 1 156 1 81 2 100 2 254 1 269 1 
309 1 
370 1 13 1 265 1 156 1 81 1 100 1 254 1 269 1 
229 1 265 1 254 1 269 1 
370 1 13 1 265 1 81 1 100 1 254 1 269 1 
43 1 106 1 81 1 
255 2 306 1 370 1 115 1 13 1 164 1 265 1 156 1 81 3 100 3 254 1 269 1 
370 1 13 1 292 1 265 1 81 2 100 2 254 1 269 1 113 1 
0 1 52 1 370 1 95 1 13 1 148 1 265 1 156 1 355 1 81 1 100 1 
370 1 13 1 265 1 156 1 81 1 100 1 254 1 
370 1 13 1 156 1 81 1 100 1 254 2 269 1 
370 2 329 1 13 2 265 1 208 1 156 1 56 1 81 2 100 2 254 1 
370 1 95 1 265 2 100 3 254 1 269 1 57 1 44 1 88 1 13 1 292 2 156 1 81 3 
0 1 370 1 52 1 18 1 314 1 265 1 100 2 254 1 269 1 13 1 148 2 292 1 156 1 275 1 81 2 
370 2 95 1 265 2 100 4 254 1 269 1 113 1 101 1 88 1 13 2 292 2 156 1 81 4 

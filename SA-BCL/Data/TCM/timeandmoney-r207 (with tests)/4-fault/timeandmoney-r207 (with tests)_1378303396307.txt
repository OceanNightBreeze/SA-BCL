#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 8 327 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 101 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 360 (22,166) (22,166) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
290 1 70 1 315 2 166 1 31 2 89 1 214 1 143 1 217 2 93 4 122 9 298 2 321 3 97 1 54 9 349 1 152 1 326 1 201 2 155 1 157 1 108 6 305 2 286 1 22 1 25 1 360 4 66 2 113 1 
290 1 70 1 315 2 166 1 31 2 89 1 214 1 143 1 217 2 93 4 122 9 298 2 321 3 97 1 54 9 349 1 152 1 326 1 201 2 155 1 157 1 108 6 305 2 286 1 22 1 25 1 360 4 66 2 113 1 
290 1 70 1 315 2 166 1 31 2 89 1 214 1 143 1 217 2 93 4 122 9 298 2 321 3 97 1 54 9 349 1 152 1 326 1 201 2 155 1 157 1 108 6 305 2 286 1 22 1 25 1 360 4 66 2 113 1 
290 1 70 1 315 2 166 1 31 2 89 1 214 1 143 1 217 2 93 3 122 7 298 2 321 2 97 1 54 7 152 1 326 1 201 2 155 1 157 1 108 4 305 1 286 1 22 1 25 1 360 3 66 2 113 1 
290 1 349 1 315 1 166 1 31 1 217 1 93 2 122 4 108 3 305 2 298 1 321 1 22 1 97 1 25 1 360 2 66 1 113 1 54 4 
290 1 315 1 166 1 31 1 89 1 201 1 217 1 122 2 130 1 357 1 286 1 298 1 22 1 52 1 113 1 54 2 
290 1 166 1 201 1 217 2 93 1 122 3 155 1 108 1 298 2 321 1 22 1 360 1 113 1 54 3 
290 1 70 1 315 1 166 1 31 1 93 4 217 2 122 9 298 2 321 3 97 1 54 9 349 1 223 1 152 1 201 1 155 1 108 7 305 2 110 1 22 1 360 4 25 1 66 1 113 1 
290 1 70 1 315 1 166 1 31 1 93 4 217 2 122 9 298 2 321 3 97 1 54 9 349 1 223 1 152 1 201 1 155 1 108 7 305 2 110 1 22 1 360 4 25 1 66 1 113 1 
101 1 103 1 87 1 
103 1 362 1 111 2 
11 1 33 1 199 2 369 2 7 2 366 2 309 2 288 2 
311 1 289 1 266 1 45 2 268 1 137 1 88 1 366 3 48 1 90 1 3 1 74 1 33 1 296 1 221 1 369 3 174 2 7 2 370 2 100 1 276 1 197 1 11 1 199 2 374 1 230 1 57 1 354 1 59 1 107 1 304 1 358 1 376 1 204 2 112 2 309 2 288 2 
11 1 38 1 199 1 51 1 369 1 7 1 366 1 139 1 309 1 288 1 
103 1 0 1 38 1 351 1 87 1 366 1 319 1 61 1 250 1 368 1 369 1 203 1 334 1 309 1 
103 1 199 1 38 1 351 1 87 1 366 1 319 1 61 2 250 1 368 2 369 1 7 1 334 1 288 1 309 1 
35 1 76 1 13 1 368 1 61 1 
310 1 325 1 103 1 76 1 13 1 368 2 87 1 61 2 
76 1 368 1 61 1 
11 1 13 1 30 1 38 1 199 1 366 1 139 1 61 1 51 1 368 1 369 1 7 1 288 1 309 1 
103 1 
310 1 103 1 76 1 13 1 343 1 368 2 87 1 61 2 
310 1 103 1 133 1 76 2 13 2 160 2 77 1 372 1 87 1 365 1 61 5 129 2 218 2 284 1 285 1 368 5 148 1 131 1 263 1 
101 1 33 1 
375 1 80 1 33 2 199 1 369 2 7 1 366 2 288 1 309 2 
361 1 356 1 271 1 
266 1 197 1 374 1 366 1 59 1 107 1 74 1 304 1 33 1 358 1 221 1 369 1 174 1 112 1 370 1 346 1 
33 1 199 1 300 1 369 3 7 3 366 3 309 3 288 3 
38 1 51 1 369 1 7 1 366 1 309 1 288 1 
375 1 80 1 38 1 199 1 369 1 7 1 366 1 309 1 288 1 
289 1 266 1 45 2 268 1 137 1 366 4 319 1 48 1 90 1 3 1 74 1 33 1 296 1 250 1 221 1 300 1 368 1 252 1 369 4 174 1 7 3 370 1 100 1 197 1 196 1 11 1 16 1 199 2 38 1 374 1 351 1 230 1 59 1 61 1 107 1 375 1 304 1 358 1 376 1 204 1 334 1 112 1 309 3 288 3 
33 1 0 1 300 1 369 2 7 1 366 2 99 1 309 2 288 1 
196 1 27 1 103 1 199 1 38 1 16 1 351 1 366 3 61 1 319 1 375 1 250 1 368 1 300 2 369 3 7 3 334 1 288 3 309 3 
361 1 199 1 366 2 375 1 271 1 300 1 369 2 7 2 288 2 309 2 
266 1 197 1 374 1 366 1 59 1 107 1 74 1 304 1 33 1 221 1 358 1 369 1 174 1 112 1 370 1 
264 1 10 1 266 1 197 1 366 1 59 1 107 1 74 1 33 1 221 1 358 1 369 1 174 1 112 1 370 1 
311 2 361 2 44 1 45 2 314 1 137 1 189 1 48 2 90 1 271 2 296 1 220 1 273 1 100 1 279 1 230 1 353 1 125 1 329 1 202 1 259 1 356 2 376 1 204 4 
20 1 38 1 250 1 369 1 7 1 366 1 309 1 288 1 
196 1 0 1 199 1 366 5 169 1 375 1 33 1 300 2 369 5 7 4 83 1 99 1 288 4 309 5 
20 1 38 1 51 1 369 2 7 2 366 2 309 2 288 2 
197 1 266 1 196 1 374 1 59 1 366 2 107 1 74 1 271 1 304 1 358 1 221 1 300 1 369 2 174 1 7 1 112 1 370 1 288 1 309 1 
40 1 116 1 
40 1 116 1 
188 1 232 1 
188 1 232 1 
188 1 232 1 
40 1 116 1 339 1 
40 1 116 1 339 1 
40 1 116 1 339 1 
40 1 116 1 123 1 
40 2 188 1 116 2 232 1 287 1 213 1 
170 1 40 1 116 1 
170 1 40 1 116 1 
170 1 40 1 116 1 
103 1 28 1 36 2 46 2 116 2 208 1 280 2 364 1 213 1 61 2 182 1 340 1 247 2 40 2 172 1 368 2 307 2 98 1 193 3 
46 1 116 1 208 1 119 1 72 1 280 1 366 2 79 1 61 1 247 1 249 1 40 1 33 1 344 1 368 1 41 1 369 2 307 1 7 2 253 1 123 1 193 1 309 2 288 2 
315 1 31 1 66 1 
357 1 315 1 31 1 
94 1 272 1 357 1 31 3 333 1 66 2 
94 1 272 1 267 1 357 1 31 2 66 1 
94 1 272 2 357 1 31 2 66 1 
310 1 114 1 362 1 160 1 162 1 119 1 72 1 87 1 318 2 168 1 141 2 249 1 320 2 218 1 220 1 368 5 148 2 273 1 103 2 279 1 76 1 13 4 180 1 329 1 61 5 63 1 129 1 284 1 111 3 23 1 205 1 131 3 
310 1 114 3 362 3 160 2 162 2 119 4 87 1 318 6 120 1 320 6 50 1 218 2 220 3 368 9 148 6 273 3 150 1 275 1 194 1 35 5 103 5 279 3 76 6 151 5 350 1 13 7 329 3 61 9 129 2 284 1 111 9 23 1 263 1 205 2 131 8 
114 1 362 2 160 1 162 1 119 1 87 1 318 2 168 1 141 1 320 2 218 1 220 1 368 3 148 2 273 1 103 3 279 1 13 2 329 1 61 3 63 1 129 1 111 4 263 1 205 1 131 3 
114 2 362 3 160 1 162 1 119 2 87 1 318 4 168 1 120 1 141 2 320 4 218 1 220 2 368 4 148 4 273 2 150 1 103 4 279 2 350 1 13 3 329 2 61 4 63 1 129 1 111 7 263 1 205 1 131 5 
195 1 101 1 358 1 
358 1 8 1 
299 1 
358 1 59 1 
107 1 195 2 135 1 358 3 338 1 59 1 
107 1 358 1 59 1 
295 1 358 1 
311 4 44 3 279 1 118 2 353 2 244 1 19 1 60 1 48 3 32 1 92 1 216 1 73 1 273 1 204 7 324 1 378 1 
311 4 44 3 279 1 118 2 353 2 244 1 19 1 60 1 48 3 32 1 92 1 216 1 73 1 273 1 204 7 324 1 378 1 
311 4 44 3 279 1 118 2 353 2 244 1 60 1 19 1 48 3 32 1 92 1 216 1 73 1 171 1 273 1 204 7 324 1 378 1 
311 11 114 3 85 1 44 6 69 1 45 4 118 1 244 2 137 2 48 12 90 2 92 1 32 4 216 1 296 2 220 3 273 3 192 2 176 1 177 1 56 1 279 3 353 2 230 2 126 1 329 3 19 1 21 3 234 4 236 1 204 23 378 1 
311 5 44 4 45 4 118 2 244 1 137 2 167 1 48 4 90 2 32 1 73 1 216 1 296 2 273 1 192 1 324 1 279 1 37 1 230 2 353 3 19 1 60 1 204 9 378 1 
290 1 115 1 266 1 292 1 293 1 315 1 164 1 166 1 31 2 190 1 217 1 74 1 122 2 298 1 174 1 5 1 370 1 54 2 104 1 78 1 201 1 183 1 64 1 108 1 357 1 22 1 333 1 66 1 112 1 113 1 
290 1 115 1 26 1 266 1 292 1 293 1 315 1 164 1 166 1 31 2 190 1 217 1 74 1 122 3 298 1 174 1 370 1 54 3 104 1 78 1 201 1 81 1 64 1 108 2 357 1 235 1 22 1 333 1 66 1 112 1 
290 1 115 1 26 1 266 1 292 1 293 1 164 1 315 1 166 1 31 2 190 1 74 1 122 2 174 1 370 1 54 2 201 1 64 1 108 2 357 1 235 1 22 1 333 1 112 1 66 1 
115 2 266 1 293 2 117 1 164 2 138 1 140 1 74 1 217 1 122 1 221 1 298 1 174 1 370 1 274 1 54 1 198 1 59 1 201 2 81 1 184 1 358 1 112 1 
115 1 266 1 292 1 293 1 315 1 164 1 31 2 190 1 217 1 74 1 122 1 298 1 174 1 370 1 54 1 104 1 78 1 201 1 183 1 64 1 357 1 235 1 333 1 66 1 112 1 113 1 
270 1 
291 2 0 1 87 1 140 1 91 1 248 2 49 1 144 2 342 2 250 1 148 2 6 1 348 1 302 1 103 2 15 1 351 1 59 1 258 2 61 5 262 4 358 1 111 2 203 1 112 2 205 1 309 1 310 3 266 1 362 2 160 1 163 1 317 2 366 1 212 2 319 1 74 1 218 1 221 2 34 1 368 5 174 2 369 1 75 1 175 1 274 1 370 2 76 6 38 1 331 1 129 1 185 1 284 1 334 1 131 2 
310 1 291 1 0 1 366 1 319 1 49 1 343 1 250 1 368 3 369 1 6 1 75 1 302 1 76 2 38 1 351 1 61 3 331 1 262 2 203 1 334 1 309 1 
310 1 0 1 87 1 366 1 319 1 49 1 144 1 343 1 250 1 368 3 369 1 6 1 75 1 302 1 103 1 76 1 38 1 351 1 61 3 331 1 262 3 203 1 334 1 309 1 
310 1 291 1 0 1 87 1 366 1 319 1 248 1 49 1 144 1 343 1 250 1 368 3 369 1 6 1 75 1 302 1 103 1 76 2 38 1 351 1 61 3 331 1 262 3 203 1 334 1 309 1 
291 4 0 1 136 1 87 5 248 4 49 1 144 4 342 2 343 1 250 1 6 1 148 1 348 1 302 1 103 5 15 1 351 1 58 1 61 5 258 2 262 6 203 1 309 1 310 3 362 2 160 1 366 1 317 2 212 2 319 1 218 1 368 5 369 1 75 1 224 1 124 1 76 7 38 1 283 1 331 1 129 1 284 1 334 1 131 1 
291 2 0 1 87 1 248 2 49 1 342 2 144 2 250 1 6 1 148 1 348 1 302 1 103 2 15 1 351 1 61 4 258 2 262 4 111 2 203 1 309 1 310 2 362 2 160 1 366 1 317 2 212 2 319 1 218 1 368 4 369 1 75 1 76 4 38 1 331 1 129 1 284 1 185 1 334 1 131 1 
310 2 291 2 362 2 160 1 0 1 136 1 87 1 317 2 366 1 212 2 319 1 248 2 49 1 144 2 342 2 218 1 250 1 368 4 148 1 369 1 6 1 75 1 348 1 224 1 302 1 103 1 76 4 15 1 38 1 351 1 283 1 258 2 61 4 331 1 262 4 129 1 284 1 203 1 334 1 131 1 309 1 
310 2 291 2 362 2 160 1 0 1 136 1 87 1 317 2 366 1 212 2 319 1 248 2 49 1 144 2 342 2 218 1 250 1 368 4 148 1 369 1 6 1 75 1 348 1 224 1 302 1 103 1 76 4 15 1 38 1 351 1 283 1 258 2 61 4 331 1 262 4 129 1 284 1 203 1 334 1 131 1 309 1 
310 2 43 1 291 2 240 1 160 1 0 1 165 1 87 1 366 1 212 2 319 1 248 2 49 1 144 2 342 2 218 1 250 1 368 4 148 1 369 1 6 1 75 1 224 1 302 1 103 1 76 4 15 1 38 1 351 1 61 4 331 1 262 4 129 1 284 1 186 2 82 2 111 2 203 1 334 1 131 1 309 1 
310 2 362 2 291 3 160 1 0 1 136 1 87 1 317 2 366 1 212 2 319 1 248 3 49 1 342 2 144 3 218 1 250 1 368 4 148 1 369 1 6 1 75 1 348 1 224 1 302 1 103 1 124 1 76 5 15 1 38 1 351 1 283 1 258 2 61 4 331 1 262 5 129 1 284 1 203 1 334 1 131 1 309 1 
310 2 362 2 291 3 160 1 0 1 136 1 87 1 317 2 366 1 212 2 319 1 248 3 49 1 342 2 144 3 218 1 250 1 368 4 148 1 369 1 6 1 75 1 348 1 224 1 302 1 103 1 124 1 76 5 15 1 38 1 351 1 283 1 258 2 61 4 331 1 262 5 129 1 284 1 203 1 334 1 131 1 309 1 
291 2 0 1 87 1 248 2 49 1 342 2 144 2 250 1 6 1 148 1 302 1 103 1 15 1 351 1 61 4 262 4 111 2 203 1 309 1 310 2 160 1 165 1 366 1 212 2 319 1 218 1 368 4 369 1 75 1 76 4 38 1 331 1 129 1 284 1 185 1 186 2 82 2 334 1 131 1 
311 3 361 1 44 2 45 2 118 1 314 1 137 1 48 3 90 1 216 1 73 1 271 1 296 1 33 2 273 1 324 1 100 1 101 1 279 1 230 1 353 2 60 1 356 1 376 1 204 6 378 1 
311 13 159 1 114 4 361 6 44 4 45 4 71 1 137 2 88 1 48 9 90 2 3 1 32 2 271 16 33 1 296 2 220 4 273 2 100 1 56 2 279 4 353 2 230 2 126 1 355 1 329 2 128 1 356 16 21 4 234 4 376 2 24 2 204 22 
311 1 361 1 266 1 45 2 243 1 71 1 161 1 137 1 366 2 88 1 48 1 90 1 3 1 74 1 33 1 296 1 221 1 173 1 300 1 174 1 369 2 7 1 370 1 346 1 100 1 197 1 196 1 374 1 230 1 59 1 107 1 304 1 358 1 376 1 204 2 112 1 309 1 288 1 
132 1 44 8 45 6 137 3 88 1 48 10 2 2 90 3 3 1 145 1 296 3 300 1 7 1 100 3 102 1 196 1 197 2 353 4 106 2 59 2 60 1 107 2 356 7 304 2 358 2 204 20 112 3 309 1 311 10 361 7 114 2 266 2 118 1 71 1 268 2 366 3 32 4 216 1 73 1 74 2 271 7 33 2 367 2 221 1 220 2 174 3 369 3 323 2 273 3 324 1 370 3 279 3 374 2 230 3 329 2 235 1 376 3 378 1 288 1 
311 1 266 2 45 4 314 1 137 2 294 1 366 1 88 1 1 1 48 1 140 1 90 2 3 1 74 2 296 2 221 2 300 1 5 1 369 1 174 7 7 1 53 1 370 8 274 1 100 2 12 1 230 2 231 1 57 2 281 1 59 2 260 1 358 3 235 1 376 2 204 2 112 8 309 1 288 1 
311 1 361 1 114 1 44 1 45 2 71 1 137 1 366 1 48 2 90 1 271 1 296 1 220 1 369 1 7 1 273 1 100 1 279 1 199 1 373 1 353 1 230 1 329 1 356 1 375 1 376 1 204 3 288 1 309 1 
311 2 361 1 44 1 279 1 45 2 314 1 230 1 137 1 259 1 90 1 32 1 356 1 271 1 296 1 220 1 376 1 204 2 100 1 
361 1 44 1 45 2 314 1 353 1 230 1 137 1 329 1 202 1 48 2 90 1 356 1 271 1 296 1 376 1 204 2 273 1 100 1 
311 2 114 1 361 2 44 2 45 2 314 1 137 1 48 2 90 1 32 1 271 2 296 1 220 1 273 1 100 1 279 1 230 1 353 1 329 1 356 2 376 1 204 4 
311 2 361 1 44 1 279 1 45 2 231 1 230 1 137 1 259 1 90 1 32 1 356 1 271 1 296 1 220 1 376 1 204 2 100 1 
361 1 44 1 45 2 353 1 231 1 230 1 137 1 329 1 202 1 48 2 90 1 356 1 271 1 296 1 376 1 204 2 273 1 100 1 
311 2 114 1 361 2 44 2 45 2 137 1 48 2 90 1 32 1 271 2 296 1 220 1 273 1 100 1 279 1 230 1 231 1 353 1 329 1 356 2 376 1 204 4 
311 2 114 1 361 2 44 2 45 2 137 1 48 2 90 1 32 1 271 2 296 1 220 1 273 1 100 1 279 1 230 1 353 1 329 1 356 2 376 1 204 4 
311 1 266 1 45 2 268 1 137 1 88 1 366 1 48 1 90 1 3 1 74 1 33 1 296 1 221 1 174 1 369 1 370 1 100 1 197 1 374 1 230 1 59 1 107 1 304 1 358 1 376 1 204 2 112 1 
311 1 264 1 266 1 45 2 137 1 88 1 366 1 48 1 90 1 3 1 74 1 33 1 296 1 221 1 174 1 369 1 370 1 100 1 10 1 197 1 153 1 230 1 59 1 107 1 358 1 376 1 204 2 112 1 
311 2 114 1 361 2 44 2 45 2 71 1 137 1 48 2 90 1 32 1 271 2 296 1 220 1 273 1 100 1 279 1 230 1 353 1 329 1 356 2 376 1 204 4 
311 2 361 2 114 1 266 1 44 2 45 2 268 1 137 1 366 1 48 2 2 1 90 1 32 1 74 1 271 2 296 1 220 1 174 1 5 1 369 1 273 1 370 1 100 1 197 1 279 1 374 1 353 1 230 1 59 1 329 1 107 1 356 2 304 1 358 1 376 1 204 4 112 1 
311 2 114 1 361 1 44 1 45 2 71 1 137 1 366 1 48 1 90 1 32 1 271 1 296 1 220 1 369 1 7 1 273 1 100 1 279 1 199 1 230 1 329 1 375 1 356 1 376 1 204 3 288 1 206 1 309 1 
311 15 114 4 44 6 45 8 241 1 137 4 48 16 90 4 142 3 32 3 121 1 296 4 220 4 251 1 96 1 192 2 273 4 371 1 56 1 278 1 279 4 37 1 353 3 230 4 257 1 126 2 329 4 330 1 233 1 21 2 234 3 377 1 335 1 204 31 158 1 84 1 
311 24 114 7 44 8 45 6 241 1 137 3 48 22 90 3 32 4 142 4 121 1 296 3 220 7 96 1 192 2 273 6 371 1 56 2 278 2 279 7 37 1 14 1 230 3 353 4 257 1 126 2 329 6 330 1 233 2 21 4 234 4 377 1 335 1 24 2 204 46 84 1 
311 25 114 7 44 10 45 8 241 1 137 4 48 21 90 4 142 4 32 6 121 1 296 4 220 7 147 1 96 1 192 2 273 5 371 1 56 2 278 1 279 7 37 1 14 1 353 4 230 4 257 1 126 3 329 5 330 1 233 2 21 5 234 5 377 1 335 1 24 2 204 46 158 1 84 1 
311 16 114 4 44 5 45 8 241 1 137 4 48 17 90 4 142 4 32 3 121 1 296 4 220 4 96 1 192 2 273 4 371 1 56 1 278 1 279 4 37 1 14 1 353 2 230 4 257 1 126 2 329 4 330 1 233 1 21 2 234 3 377 1 335 1 204 33 158 1 84 1 
311 27 114 7 44 14 45 6 241 1 118 1 137 3 48 27 90 3 142 4 32 6 216 1 73 1 121 1 296 3 220 7 96 1 192 2 273 8 324 1 371 1 56 2 278 1 279 8 37 1 14 1 353 8 230 3 257 1 126 2 329 7 60 1 330 1 233 1 21 4 234 4 377 1 335 1 24 2 204 54 378 1 84 1 
247 1 40 1 46 1 172 1 29 1 116 1 280 1 364 1 307 1 213 1 
253 1 123 1 
67 1 247 1 219 1 40 1 46 1 116 1 280 1 47 1 307 1 
103 1 28 1 36 1 46 1 116 1 208 1 280 1 364 1 213 1 61 1 182 1 340 1 247 1 40 1 172 1 368 1 307 1 193 2 
103 1 28 1 36 1 46 1 116 1 208 1 280 1 364 1 213 1 61 1 182 1 340 1 247 1 40 1 172 1 368 1 307 1 193 2 
103 1 28 1 36 1 46 1 116 1 208 1 280 1 364 1 213 1 61 1 182 1 340 1 247 1 40 1 172 1 368 1 307 1 193 2 
210 1 339 1 287 1 
210 1 339 1 287 1 
170 1 18 1 
170 1 287 1 18 1 
344 1 41 1 
28 1 46 1 116 1 119 1 72 1 366 2 247 1 249 1 33 1 368 1 344 1 369 2 7 2 253 1 193 1 123 1 36 1 13 1 280 1 79 1 61 1 40 1 41 1 306 1 307 1 288 2 309 2 
210 1 339 1 
170 1 287 1 18 1 
311 1 265 1 266 1 45 2 71 1 137 1 366 2 88 1 48 1 90 1 3 1 74 1 296 1 4 1 369 2 174 2 149 1 53 1 370 2 100 1 9 1 12 1 230 1 57 2 154 1 59 1 358 1 376 1 204 2 112 2 309 2 
115 1 266 1 104 1 292 1 242 1 315 1 31 2 190 1 74 1 156 1 357 1 297 1 235 1 174 2 5 1 333 1 66 1 112 2 370 2 
115 1 266 1 104 1 227 1 292 1 315 1 31 2 190 1 74 1 357 1 297 1 235 1 174 1 333 1 66 1 112 1 370 1 
115 1 266 1 242 1 117 1 59 1 140 1 74 1 358 1 221 1 109 1 174 1 112 1 370 1 274 1 
115 1 266 1 104 1 292 1 242 1 315 1 31 2 190 1 74 1 156 1 357 1 297 1 235 1 174 1 333 1 66 1 112 1 370 1 
332 1 
101 1 103 1 372 1 285 1 148 1 87 1 131 1 
310 1 362 1 160 1 87 1 317 1 218 1 368 1 148 1 348 1 103 2 76 1 258 1 61 1 129 1 284 1 111 1 131 1 
266 1 135 1 160 1 327 1 316 1 59 1 107 1 74 2 129 1 218 1 358 1 284 1 221 1 174 1 112 1 370 1 8 1 
337 1 310 1 114 4 362 5 160 2 209 1 87 2 318 8 246 3 320 8 218 2 220 4 34 1 96 1 368 1 148 8 273 4 56 1 103 7 76 1 279 4 126 1 329 4 61 1 62 1 330 1 129 2 21 2 234 2 284 2 377 1 111 10 335 1 24 1 205 1 84 1 131 13 
337 1 160 1 30 1 366 1 245 1 246 2 139 1 216 1 218 1 51 1 368 1 369 1 148 2 7 1 273 1 324 1 11 1 279 2 38 1 199 1 283 1 61 1 129 1 284 1 378 1 131 2 288 1 309 1 
103 1 160 1 372 1 87 1 129 1 218 1 284 1 285 1 148 1 131 1 
337 1 114 2 103 5 279 2 362 5 246 2 318 5 329 2 320 5 220 2 323 1 148 5 111 10 273 2 131 5 
310 1 103 1 76 1 368 1 87 1 61 1 
310 2 266 1 160 2 269 1 140 1 91 1 74 1 218 2 221 2 34 2 368 3 174 4 148 2 175 1 370 4 274 1 76 4 229 1 17 2 59 1 61 3 129 2 358 1 284 1 237 1 112 4 263 1 205 2 131 2 
289 1 266 1 45 2 268 1 137 1 366 3 48 1 90 1 3 1 74 1 33 1 296 1 221 1 174 1 369 3 7 2 370 1 100 1 197 1 11 1 199 2 374 1 230 1 59 1 107 1 304 1 358 1 376 1 204 1 112 1 309 2 288 2 
103 4 362 2 160 1 118 1 87 2 318 2 320 2 129 1 218 1 284 1 34 1 111 4 148 2 205 1 131 1 
247 1 313 1 307 1 
247 1 313 1 307 1 
247 1 313 1 307 1 
247 1 172 1 344 1 307 1 65 1 
247 1 191 1 307 1 
247 1 191 1 307 1 
247 1 191 1 307 1 
247 1 307 1 
40 1 116 1 
311 4 44 3 279 1 45 4 118 1 353 2 230 2 137 2 60 1 48 4 90 2 32 1 73 1 216 1 296 2 273 1 204 8 192 1 324 1 378 1 
311 3 101 1 44 2 279 1 118 1 353 2 60 1 48 3 73 1 216 1 204 6 273 1 378 1 324 1 
311 2 114 1 44 2 279 1 45 2 256 1 353 1 230 1 137 1 329 1 48 2 90 1 32 1 296 1 220 1 273 1 204 4 
311 6 56 1 114 2 44 2 279 2 353 1 126 1 329 2 48 6 32 1 21 2 234 2 220 2 24 1 204 12 273 2 
311 11 114 2 44 9 45 4 69 1 118 1 137 2 48 12 90 2 32 4 216 2 73 1 296 2 220 2 273 3 192 2 324 1 56 1 279 3 353 5 230 2 329 2 60 1 128 1 21 2 234 2 204 23 24 1 378 2 
48 1 234 1 204 1 
311 1 21 1 204 1 
311 3 114 1 44 3 279 1 45 2 256 1 230 1 353 2 137 1 329 1 48 3 90 1 32 1 296 1 220 1 323 1 204 6 273 1 
311 11 114 4 44 4 45 2 137 1 48 11 90 1 32 2 296 1 220 4 96 1 273 4 56 1 279 4 37 1 230 1 353 2 126 1 329 4 330 1 21 2 234 2 377 1 204 22 335 1 24 1 84 1 
311 3 44 2 279 1 353 1 48 3 32 1 216 1 204 6 273 1 324 1 378 1 
311 1 44 2 69 1 45 2 353 1 230 1 137 1 60 1 48 2 90 1 32 1 216 1 73 1 296 1 204 3 192 1 378 1 
311 5 44 5 279 2 45 2 37 1 230 1 353 3 137 1 245 1 48 5 90 1 32 2 216 2 296 1 204 10 273 2 378 2 324 1 
311 2 44 1 279 1 45 2 37 1 230 1 137 1 90 1 32 1 296 1 220 1 204 2 
311 2 114 1 44 2 279 1 45 2 37 1 353 1 230 1 137 1 329 1 48 2 90 1 32 1 296 1 220 1 273 1 204 4 
311 1 44 2 69 1 45 6 37 1 230 3 353 1 137 3 48 2 90 3 32 1 216 1 296 3 192 1 204 3 158 1 378 1 
311 7 44 6 45 8 69 1 137 4 245 1 48 8 90 4 32 3 73 1 216 2 296 4 273 2 192 1 324 1 176 1 279 2 37 1 256 1 230 4 353 3 126 1 60 1 21 1 234 1 204 15 158 1 378 2 
311 14 114 2 44 9 45 4 118 1 137 2 245 1 48 10 90 2 32 4 216 2 73 1 296 2 220 2 96 1 192 1 273 4 324 2 279 5 37 1 230 2 353 5 126 1 329 1 60 1 330 1 21 1 234 1 377 1 204 24 335 1 378 2 84 1 
311 6 114 1 44 3 45 4 118 1 137 2 48 5 90 2 32 1 216 1 73 1 296 2 220 1 273 1 324 1 56 1 279 2 37 1 256 1 353 2 230 2 126 1 60 1 21 1 234 2 204 11 335 1 378 1 
311 14 114 4 44 6 45 6 118 1 137 3 48 15 90 3 32 2 216 1 73 1 296 3 220 4 96 1 192 1 273 5 324 1 56 1 279 5 37 1 256 1 230 3 353 4 126 1 329 4 60 1 330 1 21 2 234 2 377 1 204 29 335 1 24 1 378 1 84 1 
311 15 114 4 44 7 45 6 118 1 137 3 48 12 90 3 32 3 216 1 73 1 296 3 220 4 96 1 192 1 273 4 324 1 56 1 279 5 37 1 256 1 230 3 353 4 126 1 329 3 60 1 330 1 21 2 234 2 377 1 204 27 335 1 24 1 378 1 84 1 
311 14 114 2 44 9 45 4 118 1 137 2 245 1 48 10 90 2 32 4 216 2 73 1 296 2 220 2 96 1 192 1 273 4 324 2 279 5 37 1 230 2 353 5 126 1 329 1 60 1 330 1 21 1 234 1 377 1 204 24 335 1 378 2 84 1 
311 11 114 4 44 4 45 2 137 1 48 11 90 1 32 2 296 1 220 4 96 1 273 4 56 1 279 4 37 1 230 1 353 2 126 1 329 4 330 1 21 2 234 2 377 1 204 22 335 1 24 1 84 1 
311 15 114 4 44 7 45 8 118 1 137 4 48 13 90 4 32 3 216 1 73 1 296 4 220 4 96 1 192 2 273 4 324 1 56 1 279 5 37 1 256 1 230 4 353 4 126 1 329 3 60 1 330 1 21 2 234 2 377 1 204 28 335 1 24 1 378 1 84 1 
311 3 114 1 44 1 45 4 137 2 48 4 90 2 296 2 220 1 273 1 56 1 279 1 37 1 230 2 353 1 126 1 329 1 21 1 234 2 204 7 335 1 158 1 
311 3 44 6 279 1 353 3 60 2 48 4 32 3 73 1 216 3 273 1 204 7 378 3 324 1 
311 3 114 1 44 1 45 4 137 2 48 4 90 2 296 2 220 1 273 1 56 1 279 1 37 1 230 2 353 1 126 1 329 1 21 1 234 2 204 7 335 1 158 1 
33 1 0 1 369 1 366 1 282 1 309 1 99 1 
255 1 225 1 228 1 0 1 105 1 366 1 282 1 33 1 95 1 369 1 99 1 309 1 
140 1 101 1 266 1 74 1 358 1 221 1 174 1 59 1 274 1 370 1 112 1 
197 1 266 1 59 1 366 2 107 1 74 1 304 1 33 1 358 1 221 1 300 1 369 2 174 1 7 1 112 1 370 1 288 1 309 1 
197 1 266 1 38 1 351 1 17 1 59 2 366 2 107 2 74 1 304 1 295 1 33 1 146 1 250 1 358 3 300 1 369 2 174 1 7 2 112 1 370 1 288 1 309 2 
266 1 366 2 74 1 295 1 33 1 250 1 146 1 300 1 174 2 369 2 7 2 370 2 10 1 197 1 38 1 351 1 352 1 17 1 59 2 107 2 358 3 112 2 309 2 288 1 
266 1 211 1 87 1 74 1 295 1 146 1 221 1 368 2 174 3 370 3 8 1 195 1 103 1 76 1 178 1 352 1 17 1 59 1 61 2 107 1 358 4 334 1 112 3 
195 1 266 1 103 1 76 1 352 1 17 1 87 1 59 1 61 2 181 1 107 1 74 1 295 1 221 1 146 1 358 4 368 2 174 3 334 1 112 3 370 3 8 1 
260 1 266 1 74 1 174 1 370 1 112 1 
266 2 12 1 135 1 57 1 281 1 294 1 59 2 1 1 260 1 341 1 107 1 74 3 221 2 358 3 235 1 5 1 174 6 308 1 112 7 370 7 336 1 
311 3 361 1 266 1 44 2 45 4 118 1 71 1 268 1 137 2 366 2 48 3 2 1 90 2 216 1 73 1 74 1 271 1 33 2 296 2 367 1 300 1 369 2 5 1 174 1 7 1 273 1 324 1 370 1 100 2 197 1 279 1 374 1 353 2 230 2 154 1 59 1 60 1 107 1 356 1 304 1 358 1 376 2 204 6 378 1 112 1 309 1 288 1 
310 1 134 1 160 2 87 1 218 2 221 1 368 3 148 1 174 1 370 1 8 1 195 1 103 1 76 2 13 1 372 1 229 1 61 3 181 1 129 2 284 2 358 2 285 1 42 1 334 1 112 1 238 1 131 1 
195 1 266 1 135 1 316 1 59 1 260 1 107 1 74 2 358 1 299 1 174 1 112 1 370 1 
266 1 352 1 59 1 140 1 215 1 74 1 221 1 358 1 174 4 5 1 112 4 370 4 274 1 
132 1 266 1 312 1 303 1 17 1 59 1 107 1 74 2 358 1 174 2 308 1 112 2 370 2 336 1 
266 1 74 1 357 1 221 1 315 1 31 1 174 1 190 1 370 1 112 1 
266 1 12 1 59 1 74 1 358 1 235 1 5 1 174 2 149 1 112 2 370 2 
266 2 12 1 17 1 294 1 59 2 281 1 140 1 215 1 74 2 221 1 358 3 174 4 5 1 274 1 112 5 370 5 
266 2 12 1 17 1 86 1 59 2 281 1 140 1 215 1 74 2 221 1 358 3 174 4 5 1 274 1 112 5 370 5 
10 1 197 1 266 1 59 1 366 2 107 1 74 1 33 1 358 1 221 1 300 1 369 2 174 1 7 1 112 1 370 1 288 1 309 1 
266 1 135 1 17 1 59 1 341 1 107 1 74 2 358 1 174 1 308 1 112 1 370 1 336 1 
222 1 254 1 9 1 265 1 39 1 366 1 4 1 369 1 309 1 
254 1 187 1 328 1 
222 1 254 1 33 1 39 1 359 1 
254 1 222 2 277 1 103 1 13 1 38 1 16 1 351 1 39 2 87 1 328 1 61 2 319 1 33 1 250 1 368 2 187 1 359 2 334 1 
101 1 166 1 22 1 
290 1 166 1 217 1 122 1 298 1 22 1 54 1 
122 1 164 1 201 1 
290 1 226 1 166 1 217 1 261 1 122 2 298 1 286 1 22 1 113 1 54 2 
290 1 166 1 217 1 122 2 108 1 305 1 298 1 22 1 54 2 
315 1 31 1 217 1 93 1 122 1 298 1 25 1 360 1 66 1 113 1 54 1 
217 1 122 1 298 1 166 1 54 1 113 1 
217 1 122 1 298 1 166 1 22 1 360 1 54 1 113 1 
239 1 363 1 166 1 217 2 122 2 298 2 345 1 113 1 54 2 
290 1 152 1 70 1 166 1 217 1 93 1 122 3 108 2 298 1 321 1 22 1 360 1 113 1 54 3 
290 1 315 1 166 1 31 2 217 1 122 2 357 1 108 1 298 1 22 1 333 1 66 1 113 1 54 2 55 1 
290 1 349 1 166 1 217 1 93 1 122 3 108 2 305 1 298 1 321 1 22 1 360 1 113 1 54 3 
290 1 166 1 217 1 122 1 298 1 22 1 113 1 54 1 
290 2 166 1 217 1 93 1 122 3 108 2 298 1 321 1 22 1 360 1 54 3 
290 1 68 1 179 1 166 1 217 1 122 2 108 1 298 1 110 1 22 1 113 1 54 2 
347 1 290 1 226 1 166 1 217 1 122 2 298 1 286 1 22 1 113 1 54 2 
127 2 322 1 360 2 200 1 
217 1 122 1 298 1 301 1 54 1 113 1 
290 1 152 1 166 1 217 1 122 2 108 1 298 1 22 1 113 1 54 2 
207 1 
290 1 166 1 217 1 122 1 298 1 22 1 113 1 54 1 
290 1 166 1 217 1 122 2 298 1 286 1 22 1 113 1 54 2 
290 1 93 1 321 1 360 1 
166 1 

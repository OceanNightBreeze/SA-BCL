#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 3 260 1 114 1 15 1 5 1 103 1 16 2 23 1 335 1 336 1 342 3 129 2 285 2 
221 1 63 9 114 1 5 6 23 4 46 1 342 9 139 1 258 2 97 1 285 2 230 1 260 2 261 1 147 1 232 1 56 2 205 1 15 3 103 1 16 2 264 2 335 1 18 1 336 1 129 5 276 1 156 2 
221 1 63 9 114 1 5 6 23 4 46 1 342 9 139 1 258 2 97 1 285 2 230 1 260 2 261 1 147 1 232 1 56 2 205 1 15 3 103 1 16 2 264 2 335 1 18 1 336 1 129 5 276 1 156 2 
221 1 63 10 114 1 5 7 23 5 46 1 342 10 139 1 258 2 97 1 285 2 230 1 260 2 261 1 147 1 232 1 56 2 205 1 15 4 103 1 16 2 264 2 335 1 18 1 336 1 129 6 276 1 156 2 
221 1 63 7 114 1 5 4 23 3 46 1 342 7 139 1 258 2 97 1 285 2 230 1 260 2 147 1 232 1 56 2 205 1 15 2 103 1 16 2 264 2 335 1 18 1 336 1 129 4 276 1 156 1 
63 4 261 1 232 1 56 1 205 1 15 1 5 3 103 1 16 1 23 2 264 1 335 1 336 1 342 4 129 3 258 1 285 1 156 2 
63 2 260 1 56 1 103 1 16 1 335 1 336 1 342 2 210 1 46 1 129 1 344 1 71 1 258 1 97 1 285 1 
63 9 114 1 5 7 23 4 342 9 301 1 258 1 285 2 230 1 260 1 147 1 232 1 261 1 56 1 205 1 15 3 103 1 16 2 262 1 264 1 335 1 336 1 129 5 156 2 
63 9 114 1 5 7 23 4 342 9 301 1 258 1 285 2 230 1 260 1 147 1 232 1 261 1 56 1 205 1 15 3 103 1 16 2 262 1 264 1 335 1 336 1 129 5 156 2 
249 1 175 1 90 1 104 1 265 1 267 1 255 1 271 1 198 1 153 1 385 1 200 1 348 1 134 1 
239 1 
1 1 214 1 340 1 271 2 153 2 306 1 385 1 239 1 
1 2 203 1 340 1 236 1 102 1 253 1 239 1 159 2 241 2 225 1 214 1 381 1 271 5 356 2 153 5 286 1 339 1 385 2 359 1 
188 1 340 1 239 1 
273 1 83 2 239 1 
267 2 249 2 255 2 94 1 198 2 104 2 90 1 134 2 
249 3 84 2 321 1 64 2 190 1 326 1 90 1 91 1 281 1 69 1 328 1 255 2 94 1 226 1 95 2 198 2 368 1 30 1 284 2 143 1 165 1 12 2 13 1 77 1 149 1 104 2 208 1 211 1 209 1 379 1 267 3 242 1 180 1 274 1 246 1 314 1 134 2 
267 1 249 1 255 1 198 1 175 1 104 1 90 1 200 1 348 1 134 1 
249 1 340 1 351 1 239 1 267 1 271 1 198 1 369 1 153 1 155 1 357 1 315 1 166 1 348 1 
249 1 340 1 351 1 104 1 239 1 267 1 255 1 271 2 198 1 369 1 153 2 357 1 315 1 134 1 348 1 
1 1 271 1 153 1 385 1 146 1 
1 1 214 1 35 1 340 1 271 2 153 2 385 1 239 1 
1 1 271 1 153 1 
249 2 235 1 104 1 267 2 255 1 94 1 198 2 348 1 278 1 287 1 134 1 
107 1 81 1 150 1 
249 1 84 1 43 1 321 1 149 1 208 1 209 1 281 1 267 1 328 1 180 1 94 1 95 1 284 1 246 1 314 1 
188 1 94 1 
267 3 249 3 255 1 94 1 198 3 174 1 104 3 134 3 
267 1 249 1 198 1 104 1 200 1 348 1 134 1 
249 1 235 1 104 1 267 1 255 1 198 1 287 1 134 1 348 1 
249 4 84 1 321 1 64 2 326 1 90 1 91 1 281 1 69 1 328 1 255 2 94 1 226 1 95 1 76 1 198 3 369 1 30 1 284 1 143 1 165 1 287 1 348 1 12 1 13 1 351 1 174 1 149 1 104 3 208 1 211 1 209 1 266 1 267 4 180 1 19 1 271 1 274 1 246 1 314 1 153 1 357 1 315 1 134 3 
267 2 249 2 94 1 198 2 122 1 174 1 104 1 166 1 134 1 
249 3 174 2 351 1 104 3 239 1 266 1 267 3 255 1 19 1 271 1 369 1 198 3 227 1 153 1 357 1 315 1 287 1 348 1 134 3 
249 2 174 1 81 1 104 2 267 2 255 1 107 1 198 2 287 1 134 2 
249 1 84 1 321 1 149 1 208 1 209 1 281 1 267 1 328 1 180 1 94 1 95 1 284 1 314 1 246 1 
249 1 84 1 321 1 149 1 208 1 47 1 281 1 267 1 328 1 94 1 95 1 284 1 314 1 246 1 154 1 
297 1 85 1 2 1 64 2 326 1 362 1 91 1 26 1 69 1 226 2 119 1 165 1 12 4 13 1 55 1 206 1 38 1 79 1 81 2 211 1 150 2 242 2 107 2 243 1 
267 1 249 1 162 1 198 1 357 1 104 1 348 1 134 1 
249 2 84 1 321 1 174 1 149 1 104 1 208 1 209 1 281 1 267 2 328 1 19 1 180 1 107 1 95 1 198 1 284 1 246 1 314 1 134 1 
250 1 249 5 204 1 122 1 174 2 104 4 267 5 255 1 19 1 94 1 198 5 166 1 134 4 287 1 
267 2 249 2 162 1 198 2 104 2 200 1 348 1 134 2 
25 1 365 1 127 1 
25 2 0 1 365 2 215 1 372 1 66 1 
25 1 365 1 
25 1 365 1 
215 1 372 1 
215 1 372 1 
215 1 372 1 
25 1 365 1 327 1 
25 1 365 1 327 1 
25 1 365 1 327 1 
25 1 365 1 40 1 
25 1 365 1 40 1 
25 1 365 1 40 1 
42 1 251 2 86 1 290 1 4 2 66 1 310 2 239 1 353 1 178 1 240 2 25 2 365 2 271 2 117 2 244 1 96 1 229 3 153 2 
249 2 251 1 279 1 4 1 92 1 25 1 365 1 94 1 9 1 198 2 371 1 229 1 171 1 290 1 104 2 310 1 126 1 127 1 177 1 240 1 267 2 271 1 153 1 134 2 
329 2 258 2 186 1 264 1 210 1 
258 1 56 1 264 1 
258 1 56 1 210 1 
128 1 329 1 258 3 186 1 264 2 210 1 
302 1 329 1 258 2 186 1 264 1 210 1 
1 1 340 1 362 1 159 1 115 2 196 1 366 1 9 1 371 1 228 1 203 3 350 1 206 1 102 1 38 1 292 1 126 1 239 2 241 1 311 2 214 1 312 1 381 2 271 5 243 1 272 1 273 1 356 1 184 2 153 5 83 3 385 4 
1 6 113 1 340 1 362 3 159 2 366 2 9 4 118 1 29 1 228 3 347 1 286 1 146 5 52 1 203 8 78 1 206 3 102 1 38 3 17 5 239 5 241 2 311 6 214 1 312 2 381 6 271 9 243 3 272 1 273 3 356 2 184 6 153 9 83 9 385 7 
340 1 362 1 159 1 115 1 196 1 366 1 9 1 228 1 286 1 203 3 206 1 38 1 292 1 239 3 241 1 312 1 311 2 381 2 271 3 243 1 273 2 356 1 184 2 153 3 83 4 385 2 
340 1 113 1 362 2 159 1 115 2 196 1 366 1 9 2 29 1 228 2 286 1 203 5 78 1 206 2 38 2 292 1 239 4 241 1 311 4 312 1 381 4 271 4 243 2 273 3 356 1 184 4 153 4 83 7 385 3 
216 1 
188 1 246 1 192 1 
246 1 61 1 
246 1 149 1 
321 1 182 1 101 1 246 3 149 1 192 2 
321 1 246 1 149 1 
3 1 246 1 
12 7 85 2 55 3 289 1 38 1 138 1 68 1 160 1 213 1 256 2 242 4 226 3 380 1 130 1 243 1 199 1 133 1 277 1 
85 5 135 1 300 1 64 2 363 1 362 3 138 2 91 1 68 2 160 1 7 1 256 3 226 15 74 1 228 3 199 2 144 3 165 1 12 31 13 1 288 1 55 10 289 1 206 3 38 4 211 1 213 1 242 16 380 2 131 1 243 4 219 4 133 5 277 1 
85 3 89 1 64 4 138 1 91 2 68 1 256 2 226 4 8 1 199 1 165 2 12 9 13 2 55 4 289 1 38 1 211 2 213 1 242 5 131 1 380 1 243 1 133 1 277 1 
12 7 85 2 55 3 289 1 38 1 138 1 68 1 160 1 213 1 256 2 242 4 226 3 380 1 243 1 199 1 133 1 277 1 
12 7 85 2 55 3 289 1 38 1 138 1 68 1 160 1 213 1 256 2 242 4 226 3 380 1 243 1 199 1 133 1 277 1 
63 1 84 1 22 1 342 1 194 1 281 1 95 1 141 1 284 1 285 1 260 2 334 1 376 2 36 1 16 1 378 2 149 1 309 1 208 1 176 2 293 1 314 1 246 1 
63 1 84 1 189 1 342 1 364 1 281 1 258 2 95 1 75 1 284 1 332 1 285 1 373 1 260 1 168 1 56 1 376 1 16 1 378 1 264 1 176 1 336 1 210 1 128 1 275 1 314 1 
63 2 84 1 189 1 87 1 5 1 342 2 364 1 281 1 258 2 95 1 75 1 284 1 285 1 373 1 260 1 168 1 56 1 376 1 103 1 16 1 378 1 264 1 335 1 176 1 336 1 210 1 128 1 129 1 275 1 314 1 
63 3 84 1 5 2 342 3 364 1 281 1 258 2 95 1 303 1 75 1 284 1 332 1 285 1 373 1 260 1 168 1 334 1 56 1 376 1 103 1 16 1 378 1 264 1 335 1 176 1 210 1 128 1 129 1 275 1 314 1 
63 2 84 1 260 1 56 1 376 1 5 2 103 1 378 1 264 1 335 1 210 1 364 1 342 2 176 1 281 1 128 1 129 1 258 2 303 1 95 1 75 1 332 1 284 1 275 1 314 1 
207 1 
298 2 84 2 249 1 1 6 340 1 299 1 191 1 343 2 95 2 345 2 141 1 198 1 99 1 202 1 348 1 203 2 102 1 351 1 149 1 208 2 267 1 106 1 214 3 108 1 271 5 273 2 356 1 153 5 314 1 155 1 357 1 315 1 360 1 65 2 67 2 159 1 24 1 281 1 366 1 369 1 284 2 166 1 233 2 170 1 37 2 36 1 237 1 124 1 239 2 241 1 381 2 181 1 245 4 246 1 83 2 
249 1 298 1 1 2 24 1 198 1 369 1 99 1 306 1 166 1 202 1 348 1 351 1 237 1 267 1 214 1 271 3 245 2 153 3 155 1 357 1 315 1 360 1 
249 1 1 1 340 1 24 1 343 1 198 1 369 1 99 1 306 1 166 1 202 1 348 1 351 1 237 1 239 1 267 1 214 1 271 3 245 3 153 3 155 1 357 1 315 1 360 1 
249 1 298 1 1 2 340 1 24 1 343 1 198 1 369 1 99 1 306 1 166 1 202 1 348 1 233 1 351 1 237 1 239 1 267 1 214 1 271 3 245 3 153 3 155 1 357 1 315 1 360 1 
298 4 249 1 1 7 340 5 191 1 343 4 198 1 345 2 99 1 306 1 348 1 202 1 145 1 203 1 102 1 351 1 267 1 214 3 271 5 356 1 273 2 153 5 155 1 112 1 357 1 315 1 360 1 65 2 24 1 159 1 67 2 116 1 369 1 34 1 166 1 233 4 37 2 237 1 124 1 239 5 241 1 179 1 381 1 245 6 
249 1 298 2 1 4 340 1 191 1 343 2 198 1 345 2 99 1 348 1 202 1 203 1 102 1 351 1 267 1 214 2 106 1 271 4 356 1 273 2 153 4 155 1 357 1 315 1 360 1 65 2 24 1 159 1 67 2 369 1 166 1 233 2 37 2 237 1 124 1 239 2 241 1 381 1 245 4 83 2 
298 2 249 1 1 4 340 1 65 2 191 1 67 2 159 1 24 1 116 1 343 2 345 2 198 1 369 1 99 1 145 1 166 1 202 1 348 1 233 2 203 1 37 2 102 1 351 1 237 1 124 1 239 1 241 1 267 1 214 2 381 1 271 4 273 2 356 1 245 4 153 4 155 1 112 1 357 1 315 1 360 1 
298 2 249 1 1 4 340 1 65 2 191 1 67 2 159 1 24 1 116 1 343 2 345 2 198 1 369 1 99 1 145 1 166 1 202 1 348 1 233 2 203 1 37 2 102 1 351 1 237 1 124 1 239 1 241 1 267 1 214 2 381 1 271 4 273 2 356 1 245 4 153 4 155 1 112 1 357 1 315 1 360 1 
298 2 249 1 1 4 340 1 325 1 191 1 67 2 159 1 24 1 343 2 72 2 283 2 345 2 198 1 369 1 99 1 50 1 145 1 166 1 202 1 348 1 167 1 233 2 203 1 102 1 351 1 237 1 239 1 241 1 267 1 214 2 381 1 271 4 356 1 245 4 153 4 155 1 83 2 357 1 315 1 360 1 
249 1 298 3 1 5 340 1 65 2 191 1 67 2 159 1 24 1 116 1 343 3 345 2 198 1 369 1 99 1 145 1 166 1 202 1 348 1 203 1 233 3 37 2 102 1 351 1 237 1 124 1 239 1 241 1 267 1 179 1 214 2 381 1 271 4 273 2 356 1 245 5 153 4 155 1 112 1 357 1 315 1 360 1 
249 1 298 3 1 5 340 1 65 2 191 1 67 2 159 1 24 1 116 1 343 3 345 2 198 1 369 1 99 1 145 1 166 1 202 1 348 1 203 1 233 3 37 2 102 1 351 1 237 1 124 1 239 1 241 1 267 1 179 1 214 2 381 1 271 4 273 2 356 1 245 5 153 4 155 1 112 1 357 1 315 1 360 1 
249 1 298 2 1 4 340 1 191 1 343 2 198 1 345 2 99 1 348 1 202 1 203 1 102 1 351 1 267 1 214 2 106 1 271 4 356 1 153 4 155 1 357 1 315 1 360 1 24 1 159 1 67 2 72 2 369 1 283 2 166 1 167 1 233 2 237 1 239 1 241 1 381 1 245 4 83 2 
249 1 84 7 2 1 87 1 64 4 326 2 91 2 281 2 69 2 161 1 226 1 331 1 95 8 198 1 141 1 332 1 284 8 30 1 259 1 165 2 12 2 13 2 14 1 77 2 36 1 377 1 174 1 149 2 104 1 208 2 125 1 211 2 295 1 379 1 267 1 242 1 314 2 246 3 134 1 
249 1 85 1 64 2 326 1 362 1 193 1 91 1 69 1 255 1 226 2 198 1 228 1 287 1 165 1 12 3 13 1 55 1 206 1 38 1 81 1 104 1 211 1 150 1 267 1 242 1 107 1 243 1 20 1 134 1 
188 1 85 2 2 1 64 2 326 1 91 1 69 1 256 1 226 3 94 2 199 1 165 1 12 6 13 1 55 2 289 1 38 1 81 1 211 1 150 1 213 1 242 3 107 1 380 1 243 1 277 1 
319 1 85 1 322 1 64 4 326 1 362 2 91 2 69 2 94 1 226 6 282 1 74 1 30 1 228 2 346 1 144 3 165 2 12 14 13 2 55 2 288 1 206 1 38 1 81 4 211 2 379 1 150 11 242 8 107 11 243 2 219 3 133 1 20 1 
84 1 249 2 43 1 321 1 64 2 326 1 136 1 91 1 281 1 69 1 328 1 94 1 226 1 95 1 73 1 198 1 284 1 30 1 165 1 12 2 13 1 174 1 149 1 81 1 208 1 104 1 209 1 211 1 379 1 267 2 180 1 19 1 242 1 313 1 246 1 314 1 20 1 134 1 
84 3 249 3 85 4 91 3 256 1 94 2 95 3 198 1 199 1 12 20 13 3 349 1 55 8 206 2 149 2 208 1 104 1 352 1 211 3 209 2 150 7 267 3 213 1 19 1 107 7 109 2 274 2 314 2 20 1 277 1 321 2 64 6 326 3 362 2 281 2 69 3 328 2 226 10 332 1 30 1 284 3 228 2 231 1 165 3 234 2 121 2 172 2 289 1 38 3 174 1 81 7 379 1 180 2 242 10 380 1 243 3 246 2 133 4 134 1 
12 2 13 1 55 1 2 1 64 2 79 1 81 1 326 1 362 1 211 1 91 1 150 1 69 1 242 2 107 1 243 1 133 1 165 1 
12 2 13 1 85 1 55 1 2 1 206 1 64 2 38 1 81 1 326 1 211 1 91 1 150 1 69 1 26 1 107 1 226 2 165 1 
85 1 2 1 64 2 362 1 326 1 91 1 69 1 226 2 228 1 165 1 12 4 13 1 55 2 206 1 38 1 81 2 211 1 150 2 242 2 107 2 243 1 133 1 
12 2 13 1 55 1 64 2 79 1 81 1 326 1 362 1 211 1 91 1 150 1 295 1 69 1 242 2 107 1 243 1 133 1 165 1 
12 2 13 1 85 1 55 1 206 1 64 2 38 1 81 1 326 1 211 1 91 1 150 1 295 1 69 1 26 1 107 1 226 2 165 1 
85 1 64 2 362 1 326 1 91 1 69 1 226 2 228 1 165 1 12 4 13 1 55 2 206 1 38 1 81 2 211 1 295 1 150 2 242 2 107 2 243 1 133 1 
85 1 64 2 362 1 326 1 91 1 69 1 226 2 228 1 165 1 12 4 13 1 55 2 206 1 38 1 81 2 211 1 150 2 242 2 107 2 243 1 133 1 
84 1 249 1 321 1 64 2 326 1 91 1 281 1 69 1 328 1 94 1 226 1 95 1 284 1 30 1 165 1 12 2 13 1 149 1 208 1 209 1 211 1 379 1 267 1 242 1 180 1 274 1 314 1 246 1 
84 1 249 1 321 1 64 2 326 1 47 1 91 1 281 1 69 1 328 1 94 1 226 1 49 1 95 1 284 1 30 1 165 1 12 2 13 1 149 1 208 1 211 1 379 1 267 1 242 1 314 1 246 1 154 1 
85 1 64 2 362 1 326 1 91 1 69 1 226 2 228 1 165 1 12 4 13 1 55 2 206 1 38 1 81 2 211 1 150 2 242 2 107 2 243 1 20 1 133 1 
84 1 249 1 85 1 321 1 87 1 64 2 362 1 326 1 91 1 281 1 69 1 328 1 226 2 95 1 284 1 228 1 165 1 12 4 13 1 55 2 172 1 206 1 38 1 81 2 149 1 209 1 211 1 150 2 267 1 242 2 180 1 107 2 243 1 274 1 314 1 246 1 133 1 
249 1 64 2 326 1 362 1 91 1 69 1 255 1 226 1 198 1 228 1 287 1 165 1 12 3 13 1 55 1 54 1 206 1 38 1 81 1 104 1 211 1 150 1 267 1 242 2 107 1 243 1 133 1 20 1 134 1 
316 1 320 1 85 3 88 1 64 4 362 3 195 1 91 2 226 10 8 1 74 1 228 3 144 1 165 2 12 19 375 1 13 2 288 1 55 6 206 3 38 3 263 2 211 2 337 1 242 9 243 3 219 2 133 3 384 2 62 1 
316 1 85 2 88 2 64 6 362 3 195 2 91 3 48 1 226 12 8 1 370 1 74 2 228 3 144 2 165 3 51 1 12 26 13 3 53 1 55 4 206 2 38 2 263 4 211 3 337 1 269 1 242 14 131 2 243 3 132 1 219 2 133 2 384 1 62 1 
316 1 85 4 88 2 64 6 362 4 195 1 91 3 48 1 256 1 226 21 8 1 370 1 74 3 228 4 199 1 144 3 51 1 165 3 12 41 375 1 13 3 53 1 288 1 55 8 289 1 206 4 38 5 263 4 211 3 294 1 337 1 213 1 269 1 242 20 380 1 131 1 243 5 132 1 219 4 133 4 384 1 277 1 62 1 
316 1 85 4 88 2 64 8 362 4 195 1 91 4 48 1 256 1 226 18 8 1 370 1 74 3 228 4 199 1 144 3 51 1 165 4 12 38 375 1 13 4 53 1 288 1 55 7 289 1 206 3 38 4 263 4 211 4 294 1 337 1 213 1 269 1 242 20 380 1 131 2 243 5 132 1 219 4 133 3 384 1 277 1 62 1 
316 1 319 2 85 7 88 1 64 4 362 7 195 1 91 2 48 1 256 1 226 25 8 1 370 1 74 2 228 7 199 1 144 4 51 1 165 2 12 52 13 2 53 1 288 2 55 14 289 1 206 7 38 8 263 4 211 2 337 1 213 1 269 1 242 27 380 1 131 1 243 8 132 1 219 4 133 7 384 1 277 1 62 1 
251 1 291 1 4 1 324 1 252 1 310 1 224 1 240 1 25 1 365 1 
171 1 127 1 
25 1 365 1 169 1 251 1 217 1 10 1 4 1 310 1 240 1 
42 1 251 1 86 1 290 1 4 1 66 1 310 1 239 1 353 1 178 1 240 1 25 1 365 1 271 1 117 1 244 1 229 2 153 1 
42 1 251 1 86 1 290 1 4 1 66 1 310 1 239 1 353 1 178 1 240 1 25 1 365 1 271 1 117 1 244 1 229 2 153 1 
42 1 251 1 86 1 290 1 4 1 66 1 310 1 239 1 353 1 178 1 240 1 25 1 365 1 271 1 117 1 244 1 229 2 153 1 
268 1 0 1 327 1 
268 1 0 1 327 1 
60 1 40 1 
0 1 60 1 40 1 
279 1 177 1 
249 2 251 1 279 1 4 1 92 1 25 1 365 1 94 1 117 1 9 1 163 1 198 2 371 1 229 1 171 1 104 2 310 1 126 1 353 1 127 1 177 1 240 1 267 2 271 1 153 1 385 1 134 2 
268 1 327 1 
0 1 60 1 40 1 
317 1 249 2 84 2 64 2 326 1 137 1 91 1 281 1 69 1 161 1 226 1 95 2 198 2 284 2 30 1 165 1 12 2 13 1 77 2 80 1 149 1 105 1 125 1 211 1 379 1 267 2 242 1 383 1 314 1 246 1 20 1 
84 1 173 1 376 1 36 1 149 1 22 1 208 1 39 1 281 1 95 1 141 1 284 1 314 1 246 1 
84 1 168 1 56 1 376 1 264 1 39 1 210 1 364 1 281 1 128 1 258 2 95 1 332 1 284 1 275 1 314 1 59 1 31 1 
84 2 168 1 56 1 376 1 87 1 264 1 39 1 210 1 364 1 281 1 128 1 258 2 95 2 332 1 284 2 275 1 314 1 59 1 31 1 
84 1 168 1 223 1 56 1 376 1 264 1 210 1 364 1 281 1 128 1 258 2 95 1 332 1 284 1 275 1 314 1 31 1 
367 1 
203 1 340 1 236 1 102 1 159 1 239 1 241 1 381 1 356 1 339 1 
203 5 206 2 38 2 362 2 239 5 311 5 381 5 109 1 243 2 304 2 273 5 228 2 184 5 247 1 83 10 
1 1 214 1 340 1 271 1 153 1 239 1 
84 4 1 4 299 2 159 2 281 1 93 1 366 2 95 4 141 1 284 4 286 1 32 2 33 1 203 2 170 1 36 1 102 1 149 1 208 2 241 2 214 2 108 1 151 1 381 2 271 3 356 2 314 1 246 1 153 3 
188 1 203 1 381 1 340 1 236 1 339 1 239 1 
1 1 340 1 65 1 159 1 203 1 37 1 102 1 124 1 239 2 241 1 214 1 381 1 271 1 273 1 356 1 153 1 83 1 
84 3 1 5 340 2 299 1 87 1 3 1 6 2 192 2 95 3 304 2 307 2 201 1 203 9 148 1 206 2 102 4 149 2 208 1 58 2 270 1 214 3 311 6 151 1 271 5 109 2 356 4 273 6 314 3 153 5 61 3 157 2 158 1 321 2 362 2 159 4 281 2 366 2 369 2 284 3 228 2 32 1 236 1 38 2 239 8 241 4 381 8 243 2 182 1 338 2 184 6 246 8 247 2 83 12 339 1 
1 1 299 1 340 2 362 2 159 2 48 1 366 1 370 1 304 2 74 1 228 2 144 1 51 1 53 1 203 8 206 2 102 2 38 2 239 5 241 2 269 1 214 1 311 5 381 5 271 1 243 2 110 1 219 1 356 2 273 3 184 5 153 1 247 1 83 6 358 1 
249 1 90 1 159 1 116 1 255 1 304 2 198 1 199 1 200 1 348 1 203 2 102 1 38 1 175 1 104 1 265 1 241 1 267 1 213 1 380 1 381 2 271 1 243 2 356 1 111 1 153 1 247 1 134 1 
84 1 249 3 321 1 64 2 326 1 90 1 91 1 281 1 69 1 328 1 255 2 94 1 226 1 95 1 198 2 30 1 284 1 143 1 165 1 12 1 13 1 149 1 208 1 104 2 211 1 209 1 267 3 180 1 274 1 314 1 246 1 134 2 
203 1 340 2 299 1 102 1 159 1 239 4 241 1 256 1 311 2 381 2 366 1 273 2 356 1 184 2 83 4 
382 1 279 1 310 1 178 1 240 1 
140 1 310 1 240 1 
140 1 310 1 240 1 
140 1 310 1 240 1 
218 1 310 1 240 1 
218 1 310 1 240 1 
218 1 310 1 240 1 
310 1 240 1 
25 1 365 1 
12 10 13 1 85 3 55 5 64 2 38 2 211 1 91 1 213 1 242 5 380 2 226 5 8 1 243 2 111 1 199 2 133 2 165 1 
12 2 13 1 55 1 64 2 362 1 211 1 91 1 242 2 8 1 243 1 133 1 165 1 
12 4 13 1 85 1 55 2 206 1 38 1 64 2 362 1 211 1 91 1 242 2 226 2 8 1 243 1 228 1 133 1 165 1 
12 3 375 1 13 3 85 1 55 2 64 6 211 3 91 3 242 1 131 1 226 2 380 1 152 1 8 1 199 1 133 1 165 3 
85 7 135 1 300 1 64 10 362 3 91 5 7 1 256 1 70 1 226 18 8 1 74 1 228 3 199 3 144 3 165 5 12 34 375 1 13 5 288 1 55 12 289 1 206 3 38 5 211 5 213 2 242 16 380 3 131 2 152 1 243 5 219 4 133 5 277 1 
12 8 13 2 85 2 55 3 289 1 38 1 64 4 211 2 91 2 213 1 256 1 242 4 226 4 131 1 380 1 243 1 199 1 133 1 277 1 165 2 
188 1 12 6 85 2 55 2 289 1 38 1 213 1 256 1 242 3 226 3 380 1 243 1 199 1 277 1 
12 4 13 1 85 1 55 2 206 1 38 1 64 2 362 1 211 1 91 1 70 1 242 2 226 2 243 1 228 1 133 1 165 1 
12 7 85 1 288 1 55 2 206 1 38 1 362 1 242 3 226 4 243 1 74 1 219 2 228 1 133 1 144 1 
85 5 319 1 64 4 362 2 91 2 256 1 226 12 282 1 228 2 199 2 144 2 165 2 12 23 13 2 55 9 288 1 289 1 206 2 38 3 211 2 213 1 242 11 380 2 131 2 243 3 152 1 219 2 133 4 277 1 
12 1 226 1 219 1 
12 1 242 1 144 1 
12 6 13 1 85 2 55 3 206 1 64 2 38 1 362 1 211 1 91 1 70 1 242 3 226 3 109 1 243 1 228 1 133 1 165 1 
85 1 64 2 362 2 91 1 48 1 226 6 8 1 74 1 370 1 228 2 144 1 165 1 51 1 12 12 13 1 53 1 55 2 206 2 38 2 211 1 269 1 242 6 243 2 219 1 133 1 
12 6 85 1 55 2 38 1 213 1 242 3 226 3 380 1 243 1 199 1 133 1 
12 3 13 1 85 1 55 2 289 1 64 2 211 1 91 1 242 1 380 1 226 2 131 1 152 1 199 1 133 1 277 1 165 1 
85 2 64 2 91 1 256 1 226 4 8 1 74 1 199 1 144 1 165 1 12 8 13 1 53 1 55 2 289 1 38 1 211 1 213 1 242 4 380 1 243 1 219 1 277 1 
85 2 64 4 362 1 91 2 256 1 70 1 226 5 8 1 74 1 228 1 199 1 144 1 165 2 12 11 13 2 53 1 288 1 55 3 289 1 38 1 211 2 213 1 242 6 380 1 243 2 219 2 133 1 277 1 
85 3 64 6 362 2 91 3 48 1 256 1 70 1 226 10 8 1 370 1 74 1 228 2 199 1 144 1 165 3 51 1 12 19 13 3 53 1 55 4 289 1 206 2 38 3 211 3 213 1 269 1 242 9 380 1 131 1 243 3 219 1 133 1 277 1 
85 3 64 6 362 2 91 3 48 1 256 1 70 1 226 7 8 1 74 1 370 1 228 2 199 1 144 1 165 3 51 1 12 17 13 3 53 1 55 5 289 1 206 1 38 2 211 3 213 1 269 1 242 10 380 1 131 1 243 3 219 1 133 2 277 1 
85 2 64 2 91 1 256 1 226 4 8 1 74 1 199 1 144 1 165 1 12 8 13 1 53 1 55 2 289 1 38 1 211 1 213 1 242 4 380 1 243 1 219 1 277 1 
85 1 64 2 362 2 91 1 48 1 226 6 8 1 74 1 370 1 228 2 144 1 165 1 51 1 12 12 13 1 53 1 55 2 206 2 38 2 211 1 269 1 242 6 243 2 219 1 133 1 
85 3 64 8 362 2 91 4 48 1 256 1 70 1 226 8 8 1 370 1 74 1 228 2 199 1 144 1 165 4 51 1 12 18 13 4 53 1 55 5 289 1 206 1 38 2 211 4 213 1 269 1 242 10 380 1 131 2 243 3 219 1 133 2 277 1 
85 3 64 8 362 3 91 4 48 1 226 7 8 1 370 1 74 1 228 3 144 1 165 4 51 1 12 16 13 4 375 1 53 1 55 6 206 2 38 2 211 4 269 1 242 9 131 2 243 3 219 1 133 3 
12 7 85 3 55 6 289 1 38 1 213 1 242 3 226 4 380 3 243 1 199 3 133 3 277 2 
85 3 64 8 362 2 91 4 48 1 256 1 226 8 8 1 370 1 74 1 228 2 199 1 144 1 165 4 51 1 12 18 13 4 375 1 53 1 55 4 289 1 206 1 38 2 211 4 213 1 269 1 242 10 380 1 131 2 243 3 219 1 133 1 277 1 
267 1 249 1 82 1 94 1 198 1 122 1 166 1 
249 1 57 1 122 1 341 1 267 1 355 1 82 1 94 1 198 1 11 1 220 1 166 1 
84 4 36 1 87 1 149 1 208 1 281 1 95 4 142 1 141 1 284 4 164 1 314 1 246 1 
84 2 321 1 149 1 352 1 212 1 281 1 330 1 95 2 197 1 284 2 246 1 314 2 374 1 32 1 
84 1 258 1 56 1 95 1 284 1 314 1 208 1 210 1 364 1 281 1 
84 2 87 1 149 1 125 1 281 1 95 2 284 2 332 1 383 1 246 1 314 1 
84 4 14 1 36 1 377 1 87 1 149 2 208 1 125 1 281 2 95 5 142 1 141 1 284 5 246 3 314 2 32 1 
84 4 36 1 377 1 87 1 149 2 208 1 125 1 281 2 257 1 95 5 142 1 141 1 284 5 246 3 314 2 32 1 
188 1 84 1 36 1 95 1 141 1 284 1 314 1 246 1 149 1 208 1 281 1 
249 2 84 1 321 1 174 1 149 1 104 1 208 1 209 1 281 1 267 2 328 1 94 1 95 1 198 1 284 1 246 1 314 1 134 1 
84 1 249 2 321 2 3 1 281 1 328 1 94 1 95 1 198 2 284 1 32 1 348 2 174 1 149 2 104 1 209 1 267 2 270 1 314 1 246 3 357 1 315 1 278 1 134 2 
84 1 249 2 321 2 3 1 281 1 328 1 94 1 95 1 198 2 284 1 32 1 348 2 174 1 149 2 104 1 267 2 270 1 314 1 246 3 154 1 357 1 315 1 278 1 134 2 
249 1 84 1 1 1 321 1 340 1 3 1 90 1 192 1 281 1 255 1 95 1 198 1 369 1 284 1 32 1 200 1 348 1 120 1 123 1 175 1 149 1 104 1 265 1 239 1 267 1 270 1 271 2 246 4 153 2 314 1 61 1 134 1 
249 1 84 1 1 1 321 1 340 1 3 1 90 1 192 1 6 1 281 1 255 1 95 1 198 1 369 1 284 1 32 1 200 1 348 1 175 1 149 1 104 1 265 1 239 1 267 1 270 1 271 2 246 4 153 2 314 1 61 1 134 1 
84 1 331 1 95 1 284 1 314 1 281 1 
84 6 14 1 77 1 321 1 45 1 377 1 87 1 149 2 208 2 125 1 281 2 330 1 331 1 95 7 182 1 197 1 332 1 284 7 246 3 314 3 259 1 
84 1 249 2 85 2 87 1 137 1 91 2 256 1 94 2 95 1 198 1 199 1 12 6 13 2 55 2 149 1 104 1 209 1 211 2 150 1 267 2 213 1 107 1 274 1 314 1 20 1 277 1 321 1 64 4 326 2 281 1 69 2 328 1 226 3 284 1 165 2 172 1 121 1 289 1 174 1 38 1 81 1 180 1 242 3 380 1 243 1 246 1 134 1 
84 1 1 2 340 1 6 1 192 1 159 2 95 1 369 1 284 1 307 1 203 1 236 1 102 2 208 1 58 1 239 1 241 2 214 1 381 1 151 1 271 3 356 2 153 3 246 2 339 1 385 1 61 1 157 1 
158 1 84 2 321 1 87 1 149 1 192 1 281 1 331 1 95 2 182 1 284 2 246 2 314 2 
249 2 84 1 321 1 174 1 149 1 104 1 208 1 281 1 267 2 328 1 94 1 95 1 198 1 284 1 246 1 314 1 154 1 134 1 
84 1 321 1 45 1 149 1 281 1 330 1 95 1 182 1 197 1 284 1 246 1 314 2 32 1 
94 1 28 1 44 1 183 1 238 1 
318 1 340 1 44 2 323 1 351 1 238 2 239 1 266 1 94 1 28 2 271 2 369 1 183 1 153 2 357 1 315 1 248 1 385 1 348 1 
317 1 249 1 44 1 80 1 238 1 105 1 267 1 183 1 198 1 
318 1 323 1 183 1 
63 1 129 1 285 1 103 1 16 1 335 1 342 1 336 1 
63 4 308 1 5 2 15 1 103 2 16 1 23 1 335 2 342 4 354 1 296 1 129 3 97 1 285 1 
63 2 222 1 5 1 103 1 16 1 335 1 336 1 342 2 301 1 129 1 285 1 305 1 
63 3 308 1 100 1 16 1 103 1 335 1 336 1 342 3 129 1 296 2 97 2 285 1 
129 2 333 2 185 1 41 1 
63 1 27 1 285 1 16 1 342 1 336 1 
63 2 129 1 5 1 285 1 103 1 16 1 230 1 335 1 342 2 336 1 
280 1 
63 1 129 1 285 1 103 1 16 1 335 1 342 1 336 1 
188 1 129 1 103 1 335 1 
63 1 129 1 285 1 103 1 16 1 335 1 342 1 
63 1 260 1 378 1 
63 3 308 1 16 1 103 1 335 1 336 1 342 3 254 1 129 1 296 1 97 2 285 1 
63 2 129 1 5 1 285 1 103 1 16 1 156 1 335 1 342 2 
63 1 56 1 205 1 16 1 23 1 264 1 336 1 342 1 129 1 258 1 285 1 
63 1 129 1 285 1 103 1 16 1 342 1 336 1 
63 1 285 1 103 2 16 1 335 1 342 1 336 1 
63 2 361 1 103 1 16 2 336 1 342 2 129 1 285 2 21 1 187 1 
63 3 147 1 5 2 15 1 103 1 16 1 23 1 335 1 336 1 342 3 129 2 285 1 230 1 
63 2 56 1 5 1 103 1 16 1 264 1 335 1 210 1 336 1 342 2 128 1 129 1 258 2 98 1 285 1 
63 4 261 1 5 2 15 1 103 1 16 2 23 1 335 1 336 1 342 4 129 2 285 2 156 1 
63 3 5 1 16 1 103 1 335 1 336 1 342 3 129 1 97 1 285 1 230 1 
354 1 129 1 15 1 23 1 
129 1 103 1 

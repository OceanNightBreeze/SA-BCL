#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (261,340) (272,356) (272,356) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 361 73 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 32 62 242 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 32 147 242 230 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 32 62 221 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 32 62 242 230 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (261,340) (261,340) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (261,340) (272,356) (272,356) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (261,340) (272,356) (272,356) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (261,340) (272,356) (272,356) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 361 73 44 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 32 147 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 32 147 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
50 1 353 9 3 5 4 1 196 2 237 1 285 1 357 1 215 9 76 2 7 2 244 4 265 1 246 1 128 1 248 1 337 3 15 2 132 6 39 1 163 2 341 1 16 2 251 1 18 1 252 2 189 1 304 1 
50 1 353 9 3 5 4 1 196 2 237 1 285 1 357 1 215 9 76 2 7 2 244 4 265 1 246 1 128 1 248 1 337 3 15 2 132 6 39 1 163 2 341 1 251 1 16 2 18 1 252 2 189 1 304 1 
50 1 353 10 3 6 4 1 196 2 237 1 285 1 357 1 215 10 76 2 7 2 244 5 265 1 246 1 128 1 248 1 337 4 15 2 132 7 39 1 163 2 341 1 251 1 16 2 18 1 252 2 189 1 304 1 
50 1 353 7 3 4 4 1 196 2 237 1 285 1 215 7 76 2 7 2 244 3 265 1 246 1 128 1 248 1 337 2 15 2 132 4 39 1 163 2 341 1 251 1 16 1 18 1 252 2 189 1 304 1 
337 1 353 4 3 3 4 1 15 1 196 1 39 1 132 3 237 1 163 1 357 1 215 4 16 2 76 1 18 1 7 1 244 2 246 1 
350 1 118 1 3 1 353 2 4 1 15 1 196 1 237 1 285 1 33 1 215 2 76 1 18 1 252 1 7 1 265 1 
353 3 337 1 3 2 4 1 132 1 237 1 215 3 76 2 18 1 252 1 7 2 244 1 304 1 
349 1 50 1 353 9 3 5 4 1 196 1 237 1 215 9 357 1 151 1 76 2 244 4 7 2 246 1 337 3 15 1 132 7 39 1 163 1 251 1 16 2 18 1 252 1 304 1 
349 1 50 1 353 9 3 5 4 1 196 1 237 1 215 9 357 1 151 1 76 2 244 4 7 2 246 1 337 3 15 1 132 7 39 1 163 1 251 1 16 2 18 1 252 1 304 1 
296 1 119 1 203 1 
145 1 203 1 182 2 
276 2 129 2 61 2 208 1 87 2 29 2 30 1 342 2 
69 1 96 1 282 1 195 2 330 1 29 3 30 1 120 1 199 1 55 1 34 1 243 1 310 1 154 1 125 1 126 1 58 1 83 1 106 1 127 1 108 1 12 1 268 2 185 2 319 1 129 2 61 3 85 1 111 1 87 2 342 2 226 1 91 2 276 2 208 1 231 1 48 2 
172 1 276 1 306 1 130 1 129 1 61 1 87 1 29 1 30 1 342 1 
352 1 97 1 366 1 130 1 61 1 119 1 225 1 29 1 203 1 276 1 150 1 300 1 264 1 82 1 
352 1 366 1 129 1 130 1 61 1 87 1 119 1 29 1 203 1 342 1 276 1 150 2 300 1 264 1 82 2 
24 1 149 1 150 1 112 1 82 1 
149 1 318 1 150 2 112 1 119 1 82 2 203 1 355 1 
149 1 150 1 82 1 
172 1 130 1 129 1 61 1 112 1 87 1 30 1 29 1 342 1 276 1 306 1 150 1 82 1 288 1 
203 1 
149 1 318 1 150 2 103 1 112 1 119 1 82 2 203 1 
140 1 258 1 318 1 270 1 260 2 28 1 295 1 112 2 239 1 119 1 203 1 134 2 274 1 343 1 149 2 150 5 302 1 115 2 82 5 
268 1 185 1 319 1 129 1 61 2 85 1 87 1 29 2 273 1 322 1 91 1 243 1 276 1 154 1 126 1 104 1 58 1 83 1 106 1 108 1 
208 1 296 1 
193 1 23 1 129 1 61 2 87 1 29 2 342 1 276 2 208 2 
259 1 155 1 104 1 
268 1 185 1 319 1 61 1 85 1 29 1 204 1 91 1 243 1 154 1 208 1 126 1 58 1 83 1 106 1 108 1 
276 3 129 3 61 3 208 1 87 3 29 3 322 1 342 1 
172 1 276 1 130 1 129 1 61 1 87 1 29 1 
193 1 23 1 276 1 130 1 129 1 61 1 87 1 29 1 342 1 
69 1 23 1 352 1 282 1 195 1 330 1 29 4 30 1 199 1 55 1 34 1 243 1 150 1 360 1 264 1 154 1 125 1 334 1 126 1 58 1 83 1 82 1 106 1 108 1 268 1 185 1 366 1 319 1 129 3 130 1 61 4 85 1 111 1 87 3 273 1 322 1 342 2 226 1 91 1 276 3 300 1 208 1 231 1 48 2 
136 1 276 2 129 1 61 2 208 1 87 1 225 1 29 2 322 1 
23 1 352 1 366 1 130 1 129 3 61 3 87 3 29 3 273 1 203 1 322 2 342 1 276 3 150 1 300 1 264 1 334 1 82 1 290 1 
23 1 129 2 61 2 87 2 29 2 322 1 342 1 276 2 155 1 104 1 
268 1 185 1 319 1 61 1 85 1 29 1 91 1 243 1 154 1 208 1 126 1 58 1 83 1 106 1 108 1 
268 1 185 1 319 1 61 1 29 1 91 1 243 1 325 1 202 1 154 1 208 1 126 1 58 1 83 1 106 1 
69 1 259 2 195 4 213 1 330 1 198 1 55 1 34 1 310 2 155 2 104 2 181 1 363 1 335 1 338 1 111 1 367 1 226 1 65 1 231 2 303 1 48 2 190 1 191 1 
276 1 366 1 26 1 130 1 129 1 61 1 87 1 29 1 
23 1 142 1 129 4 61 5 87 4 225 1 29 5 273 1 322 2 342 1 136 1 276 5 80 1 208 1 
172 1 276 2 26 1 130 1 129 2 61 2 87 2 29 2 
235 1 327 1 
235 1 327 1 
257 1 371 1 
257 1 371 1 
257 1 371 1 
291 1 235 1 327 1 
235 1 327 1 377 1 
257 1 317 1 371 1 201 1 235 2 327 2 
291 1 235 1 327 1 
291 1 235 1 327 1 
207 1 235 1 327 1 
207 1 235 1 327 1 
207 1 235 1 327 1 
14 1 261 1 223 2 272 1 329 2 88 1 72 2 203 1 356 1 54 1 150 2 152 2 78 2 82 2 
14 1 223 1 129 1 61 1 329 1 87 1 72 1 29 1 73 1 276 1 123 1 373 1 150 1 152 1 102 1 361 1 78 1 82 1 
15 1 196 1 163 1 
15 1 196 1 33 1 
277 1 234 1 162 1 196 3 163 2 33 1 
277 1 162 1 196 2 347 1 163 1 33 1 
277 1 162 2 196 2 163 1 33 1 
260 1 145 1 28 3 119 1 198 1 332 2 149 1 123 1 150 5 359 1 102 1 245 1 57 1 181 1 82 5 182 3 363 1 184 1 318 1 295 2 112 4 134 1 203 2 64 2 343 1 373 1 19 2 115 1 46 1 256 1 190 1 171 1 
351 1 24 5 260 2 145 3 28 8 119 1 198 3 332 6 123 4 149 6 150 9 245 3 57 1 181 3 82 9 182 9 363 3 184 2 270 1 318 1 109 1 295 6 63 5 112 7 203 5 134 2 64 6 343 1 299 1 206 1 45 1 115 2 95 1 190 3 171 2 
260 1 145 2 28 3 119 1 198 1 332 2 123 1 150 3 359 1 245 1 181 1 82 3 363 1 182 4 184 1 270 1 112 2 295 2 203 3 134 1 64 2 19 1 115 1 46 1 171 1 190 1 
351 1 260 1 145 3 28 5 119 1 198 2 332 4 123 2 150 4 359 1 245 2 181 2 82 4 182 7 363 2 184 1 270 1 112 3 295 4 203 4 134 1 64 4 299 1 19 2 45 1 115 1 46 1 171 1 190 2 
287 1 319 1 296 1 
6 1 319 1 
124 1 
319 1 83 1 
287 2 243 1 93 1 186 1 319 3 83 1 
243 1 319 1 83 1 
319 1 375 1 
247 1 222 1 195 7 174 1 213 3 224 1 367 2 198 1 228 1 310 4 153 1 231 3 218 1 279 1 21 2 363 1 219 1 
247 1 222 1 195 7 174 1 213 3 224 1 367 2 198 1 228 1 310 4 153 1 231 3 218 1 279 1 21 2 363 1 219 1 
247 1 222 1 195 7 174 1 213 3 224 1 367 2 198 1 166 1 228 1 153 1 310 4 231 3 218 1 279 1 21 2 363 1 219 1 
0 1 174 1 195 31 213 10 330 1 32 1 198 4 55 1 153 1 310 16 217 3 245 3 218 2 181 3 11 1 219 1 363 4 247 2 222 1 160 1 161 1 224 2 111 1 367 5 226 1 228 5 231 15 21 3 279 2 20 1 47 1 48 2 190 3 49 4 
195 9 213 4 143 1 330 2 198 1 305 1 55 2 310 5 153 1 218 1 363 1 219 1 247 1 222 1 224 1 111 2 367 3 226 2 228 1 231 4 21 2 279 1 20 1 48 4 
3 1 353 2 234 1 4 1 196 2 237 1 52 1 331 1 333 1 33 1 215 2 76 1 311 1 7 1 154 1 126 1 183 1 268 1 185 1 15 1 132 1 163 1 369 1 135 1 91 1 18 1 252 1 67 1 167 1 170 1 
3 1 234 1 353 3 196 2 237 1 52 1 197 1 331 1 333 1 33 1 215 3 76 1 311 1 7 1 154 1 126 1 183 1 268 1 185 1 15 1 132 2 163 1 275 1 135 1 91 1 92 1 18 1 252 1 67 1 170 1 
3 1 353 2 234 1 196 2 237 1 52 1 197 1 333 1 33 1 215 2 311 1 154 1 126 1 183 1 268 1 185 1 15 1 132 2 163 1 275 1 135 1 91 1 18 1 252 1 170 1 
268 1 185 1 212 1 353 1 319 1 131 1 52 2 321 1 91 1 215 1 205 1 92 1 76 1 252 2 311 2 7 1 154 1 180 1 126 1 58 1 83 1 170 2 376 1 
268 1 185 1 234 1 353 1 4 1 15 1 196 2 52 1 163 1 331 1 197 1 333 1 33 1 135 1 91 1 215 1 76 1 252 1 67 1 7 1 311 1 154 1 126 1 167 1 170 1 183 1 
323 1 
141 2 97 1 100 1 238 1 145 2 5 1 149 6 150 5 154 1 58 2 61 1 339 1 295 2 203 2 250 4 344 1 343 1 300 1 301 1 114 2 115 1 352 1 260 1 175 1 28 2 119 1 29 1 35 1 179 1 264 1 180 1 126 1 81 1 83 1 82 5 182 2 315 2 268 2 184 1 185 2 318 3 366 1 319 1 130 1 40 2 86 2 225 1 134 1 370 2 91 2 227 2 276 1 137 1 139 1 376 1 
352 1 97 1 29 1 35 1 149 2 150 3 179 1 264 1 81 1 103 1 82 3 318 1 366 1 130 1 61 1 339 1 225 1 250 2 276 1 227 1 300 1 301 1 
352 1 97 1 29 1 119 1 149 1 35 1 150 3 179 1 264 1 81 1 103 1 82 3 318 1 366 1 130 1 61 1 339 1 40 1 225 1 203 1 250 3 276 1 300 1 301 1 
141 1 352 1 97 1 29 1 119 1 35 1 149 2 150 3 179 1 264 1 103 1 81 1 82 3 318 1 366 1 130 1 61 1 339 1 40 1 225 1 203 1 250 3 276 1 227 1 300 1 301 1 
141 4 97 1 240 1 145 2 53 1 149 7 150 5 103 1 61 1 339 1 295 1 203 5 250 6 343 1 300 1 301 1 114 2 115 1 352 1 260 1 175 1 28 1 29 1 119 5 35 1 264 1 179 1 81 1 82 5 315 2 318 3 37 1 366 1 38 1 130 1 40 4 86 2 225 1 134 1 370 2 227 4 276 1 43 1 139 1 
141 2 352 1 97 1 260 1 175 1 145 2 28 1 119 1 29 1 5 1 149 4 35 1 150 4 179 1 264 1 81 1 82 4 182 2 315 2 318 2 366 1 130 1 61 1 40 2 339 1 86 2 295 1 225 1 203 2 134 1 370 2 250 4 343 1 227 2 276 1 300 1 301 1 114 2 139 1 115 1 
141 2 352 1 97 1 260 1 175 1 145 2 28 1 119 1 29 1 53 1 149 4 35 1 150 4 179 1 264 1 81 1 82 4 315 2 318 2 37 1 366 1 130 1 61 1 40 2 339 1 86 2 295 1 225 1 203 1 134 1 370 2 250 4 343 1 227 2 276 1 300 1 43 1 301 1 114 2 139 1 115 1 
141 2 352 1 97 1 260 1 175 1 145 2 28 1 119 1 29 1 53 1 149 4 35 1 150 4 179 1 264 1 81 1 82 4 315 2 318 2 37 1 366 1 130 1 61 1 40 2 339 1 86 2 295 1 225 1 203 1 134 1 370 2 250 4 343 1 227 2 276 1 300 1 43 1 301 1 114 2 139 1 115 1 
141 2 352 1 97 1 283 1 260 1 236 2 28 1 119 1 29 1 53 1 149 4 35 1 150 4 179 1 264 1 81 1 82 4 182 2 315 2 60 2 318 2 366 1 130 1 61 1 40 2 339 1 86 2 295 1 225 1 203 1 134 1 250 4 343 1 227 2 276 1 17 1 300 1 229 1 301 1 139 1 115 1 
141 3 352 1 260 1 97 1 175 1 145 2 28 1 119 1 29 1 53 1 35 1 149 5 150 4 179 1 264 1 81 1 82 4 315 2 318 2 37 1 366 1 38 1 130 1 61 1 339 1 40 3 86 2 295 1 225 1 203 1 134 1 370 2 250 5 343 1 276 1 227 3 300 1 43 1 301 1 114 2 139 1 115 1 
141 3 352 1 260 1 97 1 175 1 145 2 28 1 119 1 29 1 53 1 35 1 149 5 150 4 179 1 264 1 81 1 82 4 315 2 318 2 37 1 366 1 38 1 130 1 61 1 339 1 40 3 86 2 295 1 225 1 203 1 134 1 370 2 250 5 343 1 276 1 227 3 300 1 43 1 301 1 114 2 139 1 115 1 
141 2 352 1 97 1 260 1 236 2 28 1 119 1 29 1 5 1 149 4 35 1 150 4 179 1 264 1 81 1 82 4 182 2 315 2 60 2 318 2 366 1 130 1 61 1 40 2 339 1 86 2 295 1 225 1 203 1 134 1 250 4 343 1 227 2 276 1 17 1 300 1 301 1 139 1 115 1 
69 1 259 1 195 6 213 2 330 1 198 1 55 1 34 1 153 1 310 3 155 1 104 1 218 1 219 1 363 1 222 1 224 1 296 1 111 1 367 2 226 1 231 3 208 2 303 1 21 1 48 2 
232 1 69 1 259 3 195 4 330 2 55 2 34 2 77 1 310 1 217 1 125 1 104 3 365 1 267 1 158 1 130 1 111 2 226 2 94 1 231 3 208 1 48 4 49 1 
69 1 25 1 233 1 195 2 330 1 29 2 243 1 34 1 55 1 310 1 154 1 125 1 126 1 155 1 58 1 83 1 106 1 108 1 12 1 268 1 269 1 185 1 319 1 129 1 61 2 85 1 87 1 111 1 273 1 204 1 322 1 91 1 226 1 276 1 94 1 208 1 231 1 48 2 
282 2 195 20 51 1 330 3 197 1 198 3 55 3 243 2 153 1 154 2 245 2 155 7 156 1 58 1 104 7 106 2 108 2 12 1 61 3 111 3 297 1 208 2 346 2 21 1 69 3 259 7 213 8 29 3 34 3 216 2 310 10 125 1 79 2 126 2 218 1 83 2 181 2 219 1 363 3 268 3 185 3 222 1 224 1 129 1 319 2 85 2 87 1 367 4 273 1 322 1 91 3 226 3 276 1 228 4 94 1 231 10 48 6 280 2 190 2 
69 2 262 1 195 2 29 1 330 2 197 1 55 2 34 2 358 1 310 1 154 2 125 1 180 1 362 1 126 2 58 2 83 2 84 1 127 2 12 1 268 8 185 8 129 1 319 3 61 1 87 1 111 2 369 1 322 1 91 7 226 2 276 1 231 1 303 1 169 1 117 1 48 4 376 1 192 1 
23 1 69 1 259 1 195 3 213 1 330 1 29 1 198 1 55 1 34 1 310 1 245 1 155 1 104 1 181 1 363 1 13 1 129 1 61 1 111 1 87 1 367 1 342 1 226 1 276 1 94 1 231 2 48 2 190 1 
69 1 259 1 195 2 213 1 111 1 330 1 226 1 34 1 55 1 228 1 310 2 155 1 303 1 104 1 363 1 48 2 190 1 191 1 
69 1 259 1 195 2 213 1 338 1 111 1 367 1 330 1 198 1 226 1 34 1 55 1 231 2 155 1 303 1 104 1 181 1 48 2 
69 1 259 2 195 4 213 2 330 1 198 1 55 1 34 1 310 2 245 1 155 2 104 2 181 1 363 1 111 1 367 1 226 1 228 1 231 2 303 1 190 1 48 2 
69 1 259 1 195 2 213 1 111 1 330 1 226 1 34 1 55 1 228 1 310 2 155 1 104 1 117 1 363 1 48 2 190 1 191 1 
69 1 259 1 195 2 213 1 338 1 111 1 367 1 330 1 198 1 226 1 34 1 55 1 231 2 155 1 104 1 117 1 181 1 48 2 
69 1 259 2 195 4 213 2 330 1 198 1 55 1 34 1 310 2 245 1 155 2 104 2 181 1 363 1 111 1 367 1 226 1 228 1 231 2 117 1 190 1 48 2 
69 1 259 2 195 4 213 2 330 1 198 1 55 1 34 1 310 2 245 1 155 2 104 2 181 1 363 1 111 1 367 1 226 1 228 1 231 2 190 1 48 2 
69 1 282 1 195 2 29 1 330 1 243 1 34 1 55 1 310 1 154 1 125 1 126 1 58 1 83 1 106 1 108 1 12 1 268 1 185 1 319 1 61 1 85 1 111 1 91 1 226 1 208 1 231 1 48 2 
69 1 195 2 29 1 330 1 243 1 34 1 55 1 202 1 310 1 154 1 125 1 126 1 58 1 83 1 106 1 266 1 12 1 268 1 185 1 319 1 61 1 111 1 91 1 226 1 325 1 208 1 231 1 48 2 
69 1 259 2 195 4 213 2 330 1 198 1 55 1 34 1 310 2 245 1 155 2 104 2 181 1 363 1 111 1 367 1 226 1 228 1 94 1 231 2 190 1 48 2 
69 1 259 2 282 1 195 4 213 2 29 1 330 1 198 1 243 1 34 1 55 1 310 2 154 1 245 1 155 2 126 1 104 2 181 1 83 1 363 1 106 1 108 1 268 1 185 1 319 1 61 1 85 1 111 1 367 1 369 1 91 1 226 1 228 1 231 2 190 1 280 1 48 2 
23 1 69 1 259 1 195 3 213 1 330 1 29 1 198 1 55 1 34 1 310 2 245 1 10 1 155 1 104 1 181 1 363 1 129 1 61 1 111 1 87 1 342 1 226 1 276 1 228 1 94 1 231 1 48 2 190 1 
195 19 213 6 143 1 330 2 32 1 242 1 198 3 55 2 310 9 217 1 245 3 313 1 105 2 181 3 363 3 159 1 160 1 62 1 111 2 367 3 298 1 226 2 228 3 230 1 231 10 68 1 48 4 190 3 348 2 49 2 
195 4 143 1 62 2 111 1 330 1 32 1 242 2 226 1 55 1 310 2 217 1 230 1 313 1 231 2 48 2 49 1 348 1 
195 21 213 3 143 1 330 2 32 3 242 1 198 2 147 1 55 2 310 10 217 3 245 2 313 1 105 1 181 2 363 2 221 1 159 1 160 1 62 2 111 2 367 1 226 2 228 2 230 1 231 11 68 1 48 4 190 2 348 3 49 4 
195 17 213 4 143 1 330 2 32 2 242 1 198 2 55 2 310 8 217 2 245 2 313 1 105 1 181 2 363 2 221 1 159 1 160 1 62 2 111 2 367 2 226 2 228 2 230 1 231 9 68 1 48 4 190 2 348 2 49 3 
195 9 213 1 143 1 330 1 198 1 32 1 242 1 55 1 310 5 153 1 217 1 313 1 218 1 363 1 219 1 222 1 224 1 62 1 111 1 367 1 226 1 230 1 231 4 21 1 48 2 49 1 348 1 
261 1 223 1 152 1 78 1 329 1 340 1 
361 1 
223 1 152 1 56 1 78 1 329 1 
14 1 261 1 223 1 272 1 329 1 88 1 72 2 203 1 356 1 54 1 150 1 152 1 78 1 82 1 
14 1 261 1 223 1 272 1 329 1 88 1 72 2 203 1 356 1 54 1 150 1 152 1 78 1 82 1 
14 1 261 1 223 1 272 1 329 1 88 1 72 2 203 1 356 1 54 1 150 1 152 1 78 1 82 1 
309 1 
309 1 
2 1 
2 1 
187 1 116 1 
223 1 329 1 112 1 88 1 72 1 73 1 54 1 123 1 373 1 150 1 152 1 102 1 361 1 78 1 44 1 82 1 
309 1 
2 1 
69 1 195 2 101 1 330 1 29 2 34 1 55 1 310 1 154 1 125 1 126 1 83 1 314 1 127 2 12 1 268 2 185 2 293 1 319 1 61 2 111 1 113 1 226 1 91 2 276 2 94 1 326 1 231 1 169 1 48 2 192 1 
268 2 185 2 1 1 234 1 15 1 196 2 27 1 163 1 197 1 331 1 369 1 333 1 33 1 135 1 91 2 200 1 311 1 154 1 126 1 
268 1 185 1 234 1 15 1 196 2 163 1 249 1 197 1 331 1 333 1 33 1 135 1 91 1 200 1 311 1 154 1 126 1 
268 1 185 1 1 1 316 1 212 1 319 1 91 1 311 1 154 1 180 1 126 1 58 1 83 1 376 1 
268 1 185 1 1 1 234 1 15 1 196 2 27 1 163 1 197 1 331 1 333 1 33 1 135 1 91 1 200 1 311 1 154 1 126 1 
278 1 
258 1 302 1 28 1 295 1 296 1 119 1 203 1 
260 1 175 1 145 1 28 1 119 1 149 1 150 1 82 1 182 1 318 1 295 1 134 1 203 2 370 1 343 1 114 1 115 1 
98 2 145 6 332 6 198 2 287 2 243 3 149 5 150 5 6 3 154 3 8 2 245 2 58 1 59 2 110 1 295 8 203 8 64 6 344 1 343 4 300 2 66 2 302 1 346 2 115 4 168 2 258 1 260 4 28 9 119 2 31 1 121 1 126 4 83 3 82 5 181 2 36 1 182 12 363 2 364 2 268 3 184 2 185 3 318 3 271 2 319 10 134 4 369 1 90 2 91 3 93 1 374 1 375 2 190 2 
260 2 144 1 28 8 145 3 119 2 241 1 332 5 32 1 198 2 147 1 148 1 149 1 150 1 217 1 245 2 82 1 181 2 182 6 363 2 59 1 220 1 184 1 318 1 271 2 295 5 134 2 203 5 64 5 344 1 343 2 324 1 115 2 209 1 190 2 49 1 
172 1 260 1 28 2 29 1 30 1 198 1 306 1 150 1 218 1 82 1 288 1 219 1 363 2 59 1 271 2 130 1 224 1 129 1 61 1 295 2 87 1 134 1 342 1 42 1 343 1 276 1 43 1 115 1 
343 1 258 1 260 1 302 1 28 1 295 1 119 1 115 1 203 1 134 1 
271 2 295 5 145 5 28 5 203 5 332 5 64 5 198 2 245 2 346 1 181 2 363 2 182 10 190 2 59 1 
149 1 150 1 318 1 119 1 82 1 203 1 
260 2 99 1 238 1 28 2 149 4 150 3 154 1 180 1 126 1 58 2 83 1 82 3 36 2 268 4 185 4 184 2 270 1 318 2 319 1 110 1 295 2 134 2 343 1 91 4 344 2 137 1 254 1 115 2 376 1 
69 1 282 1 195 1 29 3 30 1 330 1 199 1 55 1 243 1 34 1 154 1 125 1 126 1 58 1 83 1 106 1 108 1 268 1 185 1 129 2 319 1 61 3 85 1 111 1 87 2 342 2 226 1 91 1 276 2 208 1 231 1 48 2 
184 1 260 1 145 2 295 2 28 1 119 2 134 1 203 4 332 2 64 2 343 1 344 1 115 1 21 1 182 4 
223 1 71 1 78 1 
223 1 253 1 78 1 116 1 133 1 
223 1 71 1 78 1 
223 1 71 1 78 1 
223 1 78 1 176 1 
223 1 78 1 176 1 
223 1 78 1 176 1 
223 1 78 1 
235 1 327 1 
222 1 195 8 213 3 224 1 111 2 367 2 330 2 198 1 226 2 55 2 228 1 310 4 153 1 231 4 218 1 21 1 20 1 363 1 219 1 48 4 
222 1 195 6 310 3 153 1 213 2 224 1 231 3 296 1 367 2 218 1 21 1 363 1 219 1 198 1 
195 4 213 2 111 1 367 1 330 1 198 1 226 1 55 1 228 1 310 2 138 1 245 1 231 2 181 1 363 1 48 2 190 1 
310 1 195 2 217 1 231 1 32 1 49 1 
232 1 195 15 213 6 330 1 198 2 55 1 310 7 153 1 217 1 218 2 363 2 219 1 365 1 222 1 224 2 111 1 367 3 42 1 226 1 228 3 231 8 20 1 48 2 49 1 
195 1 231 1 49 1 
195 1 310 1 217 1 
195 6 213 3 111 1 330 1 367 2 198 1 226 1 55 1 228 1 310 3 138 1 245 1 346 1 231 3 181 1 363 1 48 2 190 1 
195 12 213 2 143 1 144 1 330 1 32 1 198 2 241 1 147 1 55 1 310 6 217 1 245 2 181 2 363 2 111 1 367 1 226 1 324 1 228 1 231 6 48 2 209 1 190 2 49 1 
228 1 195 6 310 3 213 2 224 1 231 3 367 1 218 1 363 1 219 1 198 1 
222 1 195 3 213 2 224 1 111 1 367 1 330 1 226 1 55 1 228 1 310 1 153 1 231 2 218 1 20 1 48 2 365 1 
195 10 224 2 213 5 143 1 111 1 330 1 367 3 198 2 226 1 42 1 55 1 228 2 310 5 231 5 218 2 219 1 363 2 48 2 
195 2 213 1 143 1 111 1 330 1 226 1 55 1 228 1 310 2 363 1 48 2 190 1 
195 4 213 2 143 1 111 1 367 1 330 1 198 1 226 1 55 1 228 1 310 2 245 1 231 2 181 1 363 1 48 2 190 1 
195 3 224 1 213 2 143 1 111 3 330 3 367 1 226 3 55 3 228 1 310 1 231 2 68 1 218 1 20 1 48 6 365 1 
0 1 195 34 213 12 143 1 330 5 32 1 198 5 55 5 153 1 310 16 217 3 245 3 218 3 11 1 181 3 219 2 363 5 365 1 222 1 160 1 224 3 111 5 367 7 226 5 228 5 138 1 231 18 68 1 21 1 20 2 47 1 48 10 190 3 49 4 
195 8 213 2 143 1 330 1 198 1 32 1 147 1 55 1 310 4 153 1 217 1 218 1 363 1 219 1 222 1 224 1 111 1 367 2 226 1 231 4 21 1 48 2 49 1 
195 11 213 3 143 1 330 2 198 1 32 1 147 1 55 2 153 1 310 6 217 1 245 1 218 1 219 1 363 2 222 1 160 1 224 1 111 2 367 2 226 2 228 1 138 1 231 5 21 1 48 4 190 1 49 2 
195 2 143 1 111 1 330 1 32 1 147 1 226 1 55 1 310 1 217 1 231 1 48 2 49 1 
195 17 213 5 143 1 144 1 330 3 32 1 198 2 241 1 147 1 55 3 153 1 310 10 217 1 245 2 218 1 181 1 219 1 363 3 222 1 224 1 111 3 367 3 226 3 324 1 228 2 138 1 231 7 21 1 20 1 48 6 209 1 190 2 49 1 
195 8 213 2 143 1 330 1 198 1 32 1 147 1 55 1 310 4 153 1 217 1 218 1 363 1 219 1 222 1 224 1 111 1 367 2 226 1 231 4 21 1 48 2 49 1 
195 2 143 1 111 1 330 1 32 1 147 1 226 1 55 1 310 1 217 1 231 1 48 2 49 1 
195 18 213 5 143 1 144 1 330 4 241 1 32 1 198 2 147 1 55 4 153 1 310 10 217 1 245 2 218 1 181 1 219 1 363 3 222 1 224 1 111 4 367 3 226 4 324 1 228 2 138 1 231 8 21 1 20 2 48 8 209 1 190 2 49 1 
195 16 213 6 143 1 144 1 330 4 241 1 32 1 198 2 147 1 55 4 310 9 217 1 245 3 181 2 363 3 111 4 367 3 226 4 324 1 228 3 231 7 68 1 20 2 48 8 209 1 190 3 49 1 
222 1 195 7 224 3 213 6 367 3 198 1 228 3 153 2 310 3 231 4 218 3 219 1 363 1 
195 18 213 4 143 1 144 1 330 4 241 1 32 1 198 2 147 1 55 4 153 1 310 10 217 1 245 2 218 1 181 1 219 1 363 3 222 1 224 1 111 4 367 3 226 4 324 1 228 1 231 8 68 1 21 1 20 2 48 8 209 1 190 2 49 1 
276 1 136 1 122 1 61 1 208 1 29 1 225 1 
41 1 276 1 136 1 211 1 122 1 61 1 208 1 29 1 225 1 263 1 255 1 165 1 
268 1 91 1 185 1 319 1 154 1 180 1 126 1 296 1 58 1 83 1 376 1 
268 1 185 1 319 1 129 1 61 2 85 1 87 1 29 2 322 1 91 1 243 1 276 1 154 1 208 1 126 1 58 1 83 1 106 1 
268 1 185 1 366 1 130 1 319 3 129 1 61 2 85 1 87 2 29 2 90 1 322 1 91 1 243 2 276 2 264 1 154 1 208 1 126 1 375 1 83 2 106 1 36 1 
354 1 29 2 243 2 202 1 264 1 154 1 126 1 83 2 36 1 106 1 268 2 185 2 366 1 129 1 319 3 130 1 61 2 87 2 322 1 90 1 91 2 276 2 208 1 375 1 
354 1 177 1 119 1 287 1 243 1 149 1 150 2 6 1 154 1 126 1 58 1 82 2 83 1 36 1 268 3 185 3 319 4 203 1 90 1 91 3 300 1 375 1 22 1 
268 3 185 3 319 4 354 1 119 1 203 1 90 1 287 1 91 3 243 1 149 1 150 2 300 1 66 1 6 1 154 1 126 1 58 1 375 1 83 1 82 2 36 1 
268 1 91 1 185 1 154 1 126 1 362 1 
268 7 292 1 185 7 262 1 320 1 319 3 197 1 369 1 91 6 243 1 93 1 358 1 345 1 154 2 362 1 126 3 58 2 169 1 83 2 127 1 84 1 
282 1 195 6 101 1 330 2 198 1 55 2 243 1 153 1 154 1 155 1 104 1 106 1 108 1 61 2 111 2 208 2 21 1 69 2 259 1 213 2 29 2 34 2 310 3 79 1 126 1 218 1 83 1 219 1 363 1 268 1 185 1 222 1 129 1 319 1 224 1 85 1 87 1 367 2 369 1 322 1 91 1 226 2 276 1 94 1 231 3 280 1 48 4 
258 1 260 2 98 1 28 1 119 1 287 1 149 2 150 3 6 1 8 1 58 1 82 3 364 1 268 1 185 1 318 1 319 2 110 1 295 1 112 1 203 1 134 2 91 1 343 2 300 1 66 1 302 1 115 2 
268 2 185 2 319 2 31 1 369 1 287 1 91 2 243 1 93 1 154 1 362 1 126 2 83 1 
268 4 185 4 319 1 354 1 89 1 369 1 91 4 154 1 180 1 126 1 58 1 83 1 376 1 
268 2 292 1 185 2 336 1 320 1 319 1 214 1 91 2 243 1 154 1 126 2 156 1 83 1 36 1 
135 1 268 1 91 1 185 1 15 1 196 1 154 1 126 1 58 1 33 1 
268 2 185 2 319 1 197 1 369 1 91 2 326 1 154 1 126 1 169 1 83 1 
268 5 185 5 262 1 319 3 89 1 369 1 91 4 358 1 154 2 180 1 126 2 58 1 169 1 83 2 36 1 376 1 
268 5 185 5 262 1 319 3 89 1 369 1 91 4 154 2 180 1 126 2 58 1 169 1 83 2 36 1 289 1 376 1 
268 1 185 1 319 1 129 1 61 2 87 1 29 2 322 1 91 1 243 1 276 1 202 1 154 1 208 1 126 1 58 1 83 1 106 1 
268 1 292 1 185 1 320 1 319 1 91 1 243 1 93 1 345 1 154 1 126 2 83 1 36 1 
307 1 173 1 9 1 208 1 146 1 
210 1 352 1 173 2 366 1 130 1 112 1 119 1 164 1 203 1 146 1 150 2 307 2 300 1 264 1 312 1 9 2 208 1 334 1 82 2 
293 1 173 1 61 1 29 1 113 1 146 1 276 1 9 1 314 1 
210 1 164 1 146 1 
3 1 18 1 237 1 296 1 
215 1 76 1 3 1 18 1 353 1 7 1 237 1 
252 1 353 1 170 1 
3 1 353 3 4 1 284 1 286 1 237 1 74 1 215 3 76 1 18 1 7 1 265 2 
16 1 215 2 76 1 3 1 18 1 353 2 7 1 132 1 237 1 
353 1 3 1 4 1 15 1 196 1 163 1 215 1 76 1 7 1 244 1 246 1 
215 1 76 1 3 1 353 1 4 1 7 1 237 1 
215 1 76 1 18 1 353 1 4 1 7 1 237 2 
70 1 3 1 353 2 4 1 294 1 237 1 188 1 215 2 76 2 7 2 
50 1 353 3 337 1 3 2 4 1 132 2 237 1 215 3 251 1 76 1 18 1 7 1 244 1 
3 1 353 2 234 1 4 1 15 1 196 2 132 1 237 1 163 1 33 1 215 2 76 1 18 1 7 1 157 1 
353 4 337 1 3 2 4 1 132 2 237 1 215 4 357 1 16 1 76 2 18 1 7 2 244 1 
215 1 76 1 3 1 18 1 353 1 4 1 7 1 237 1 
281 1 353 4 337 1 3 3 284 1 132 2 237 2 74 1 215 4 76 1 18 2 7 1 244 1 265 1 
349 1 3 1 353 2 4 1 132 1 237 1 215 2 75 1 76 1 18 1 7 1 107 1 
3 1 353 3 284 1 4 1 237 1 74 2 215 3 76 1 18 1 308 1 7 1 265 2 
194 2 3 2 368 1 328 1 
372 1 215 1 76 1 353 1 4 1 7 1 
251 1 215 2 76 1 3 1 18 1 353 2 4 1 7 1 132 1 237 1 
178 1 
215 1 76 1 3 1 18 1 353 1 4 1 7 1 237 1 
251 1 215 3 76 1 3 1 18 1 353 3 4 1 7 1 132 1 237 1 265 1 
281 1 3 1 337 1 244 1 
3 1 237 1 

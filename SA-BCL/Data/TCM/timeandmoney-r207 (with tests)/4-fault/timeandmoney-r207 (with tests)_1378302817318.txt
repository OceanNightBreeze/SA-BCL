#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (16,327) (16,327) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (16,327) (16,327) 337 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (5,260) 237 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (16,327) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (34,256,259) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 255 54 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 255 54 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 255 54 82 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 101 323 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (5,260) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (5,260) (5,260) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (5,260) (5,260) (62,176) 212 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (5,260) 237 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 328 (122,181) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 328 (124,252) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 328 (124,252) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 328 (122,181) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 121 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 3 309 2 99 1 171 1 172 1 79 1 333 1 106 2 56 3 60 1 162 1 278 1 119 2 
45 1 3 9 268 2 309 2 99 1 228 1 14 1 56 9 106 2 60 3 162 1 319 1 278 7 119 5 19 1 171 1 172 4 79 1 78 1 333 1 218 1 178 1 338 1 81 1 
45 1 3 9 268 2 309 2 99 1 228 1 14 1 56 9 106 2 60 3 162 1 319 1 278 7 119 5 19 1 171 1 172 4 79 1 78 1 333 1 218 1 178 1 338 1 81 1 
45 1 305 1 3 9 268 2 309 2 99 1 233 1 56 9 106 2 60 3 162 1 319 1 163 1 278 6 119 5 19 1 239 1 74 1 171 2 172 4 79 1 78 1 333 1 35 1 218 2 178 2 338 1 81 2 
45 1 305 1 3 9 268 2 309 2 99 1 233 1 56 9 106 2 60 3 162 1 319 1 163 1 278 6 119 5 19 1 239 1 74 1 171 2 172 4 79 1 78 1 333 1 35 1 218 2 178 2 338 1 81 2 
45 1 305 1 3 10 268 2 309 2 99 1 233 1 56 10 106 2 60 4 162 1 319 1 163 1 278 7 119 6 19 1 239 1 74 1 171 2 172 5 79 1 78 1 333 1 35 1 218 2 178 2 338 1 81 2 
305 1 3 7 268 1 309 2 99 1 233 1 56 7 106 2 60 2 162 1 319 1 163 1 278 4 119 4 19 1 239 1 74 1 171 2 172 3 79 1 78 1 333 1 35 1 218 2 178 2 338 1 81 2 
45 1 3 4 268 2 309 1 99 1 172 2 79 1 333 1 106 1 56 4 60 1 178 1 218 1 319 1 278 3 81 1 119 3 19 1 
3 2 309 1 99 1 171 1 79 1 173 1 333 1 106 1 56 2 55 1 272 1 35 1 218 1 178 1 163 1 119 1 
32 1 16 1 256 1 327 1 141 1 120 1 251 1 132 1 
110 1 
291 1 32 1 223 1 110 1 213 1 256 2 98 1 132 2 
88 1 148 1 192 1 97 1 98 1 100 1 194 1 104 2 155 2 110 1 16 1 199 1 200 4 120 1 202 1 165 1 325 1 327 1 251 1 132 5 291 2 32 2 295 2 137 1 213 1 256 5 337 1 257 1 141 1 220 1 182 1 
42 1 110 1 213 1 
330 2 110 1 157 1 
141 2 120 2 251 1 
71 1 72 1 77 2 5 1 247 1 169 2 251 1 289 2 116 1 237 1 141 1 120 1 
16 1 141 1 120 1 251 1 
146 1 282 1 96 1 132 1 152 1 156 1 197 1 110 1 34 1 213 1 256 1 302 1 259 1 83 1 
34 1 141 1 120 1 
291 1 32 1 154 1 256 1 132 1 
291 1 32 1 110 1 213 1 256 2 98 1 339 1 132 2 
291 1 256 1 132 1 
240 1 282 1 146 1 225 1 129 1 284 1 151 1 152 1 156 1 214 2 302 1 141 1 321 1 120 4 
120 1 
75 1 146 1 282 1 225 1 151 1 152 1 61 1 302 1 141 1 120 1 
289 1 240 1 71 1 77 1 214 1 169 1 120 1 
42 1 
214 1 141 1 120 3 
120 1 
225 1 61 1 141 1 120 1 
240 1 225 1 214 1 141 1 120 2 
146 1 282 1 151 1 152 1 156 1 214 1 302 1 120 1 321 1 
240 1 214 1 120 1 
225 1 141 1 120 1 
289 1 71 1 77 1 169 1 
289 1 71 1 77 1 169 1 
73 1 186 2 292 1 166 1 4 1 15 1 280 1 340 1 
283 1 120 1 
179 1 29 1 209 1 
51 1 0 1 140 1 167 1 29 2 209 2 
29 1 209 1 
29 1 209 1 
51 1 0 1 
51 1 0 1 
51 1 0 1 
314 1 29 1 209 1 
314 1 29 1 209 1 
314 1 29 1 209 1 
29 1 229 1 209 1 
29 1 229 1 209 1 
29 1 229 1 209 1 
41 1 22 1 44 1 2 1 1 1 9 1 27 1 29 1 209 1 132 1 52 1 175 1 114 1 256 1 179 1 120 2 85 1 20 1 144 1 
238 1 41 2 44 2 22 1 185 1 2 2 1 3 324 1 248 1 167 1 285 1 27 2 29 2 209 2 132 2 110 1 256 2 300 1 219 2 
178 1 218 1 81 1 
173 1 178 1 218 1 
173 1 293 1 218 3 227 1 81 2 10 1 
173 1 293 1 59 1 218 2 227 1 81 1 
173 1 293 1 218 2 81 1 227 2 
241 1 98 1 170 1 132 4 194 1 270 1 32 3 291 1 110 1 213 1 315 1 256 4 117 1 
262 1 98 1 170 1 194 1 132 4 271 1 32 3 291 2 154 1 110 1 335 1 213 1 256 4 117 1 
307 1 148 1 97 1 104 1 270 1 155 2 58 1 110 3 157 2 315 1 199 1 200 3 117 1 203 1 241 1 165 1 207 2 25 1 132 3 330 2 32 2 295 1 175 1 213 1 256 3 84 1 143 2 182 1 
307 1 187 1 148 1 97 1 104 2 270 1 155 4 58 2 110 4 157 4 315 1 199 2 200 5 236 1 117 1 203 2 241 2 165 1 207 4 25 1 132 4 133 1 330 4 32 3 295 2 175 2 213 1 256 4 143 4 84 2 182 1 
76 1 161 1 275 1 
161 1 94 1 
243 1 
42 1 33 1 161 1 
161 1 131 1 
161 1 275 1 
33 2 76 1 161 3 275 1 6 1 286 1 
202 1 184 1 264 1 205 1 226 1 11 2 100 1 134 3 103 4 153 1 53 1 295 1 215 7 298 2 336 1 199 1 63 3 220 1 
264 1 186 2 90 1 4 1 226 5 310 3 11 3 100 2 48 1 103 16 53 1 153 2 58 3 15 1 199 4 18 1 280 1 63 10 68 1 202 2 203 3 73 1 123 1 205 2 134 15 136 1 174 1 295 4 215 31 336 1 298 5 180 4 84 3 220 1 
68 1 202 1 264 1 186 4 73 2 205 1 4 2 226 1 11 2 100 1 134 4 103 5 153 1 105 1 295 1 215 9 15 2 336 1 298 3 199 1 235 1 280 2 63 4 220 1 
202 1 264 1 205 1 226 1 11 2 100 1 134 3 103 4 153 1 53 1 295 1 215 7 298 2 336 1 199 1 63 3 220 1 
202 1 264 1 205 1 226 1 11 2 100 1 134 3 103 4 153 1 53 1 295 1 215 7 298 2 336 1 199 1 63 3 220 1 
43 1 263 1 3 2 91 1 309 1 99 1 312 1 10 1 47 1 56 2 106 1 195 1 107 1 109 1 278 1 119 1 204 1 77 1 326 1 169 1 171 1 331 1 289 1 79 1 173 1 333 1 334 1 178 1 218 2 81 1 
43 1 263 1 3 3 91 1 309 1 99 1 10 1 312 1 47 1 230 1 56 3 106 1 195 1 107 1 111 1 279 1 278 2 119 1 204 1 77 1 326 1 169 1 171 1 289 1 173 1 333 1 334 1 178 1 218 2 81 1 
43 1 263 1 3 2 91 1 99 1 10 1 47 1 230 1 56 2 107 1 279 1 278 2 119 1 204 1 77 1 326 1 169 1 171 1 289 1 173 1 333 1 334 1 218 2 178 1 81 1 
43 2 3 1 91 1 309 1 107 1 56 1 106 1 111 1 161 1 275 1 281 1 69 1 71 1 204 2 77 1 169 1 171 2 30 1 289 1 332 1 334 2 36 1 37 1 
43 1 263 1 3 1 91 1 309 1 312 1 10 1 47 1 56 1 106 1 195 1 107 1 109 1 279 1 204 1 77 1 326 1 169 1 171 1 289 1 79 1 173 1 334 1 178 1 218 2 81 1 
318 1 
146 1 96 1 95 1 150 1 194 1 152 1 13 1 54 1 234 1 156 1 197 1 64 1 282 1 245 3 168 1 132 2 329 1 288 1 291 1 34 1 255 1 216 1 256 2 302 1 259 1 83 1 
146 1 96 1 95 1 150 1 194 1 152 1 13 1 54 1 234 1 156 1 197 1 64 1 282 1 245 3 168 1 132 2 329 1 288 1 291 1 34 1 216 1 255 1 256 2 302 1 259 1 83 1 
146 1 282 1 245 2 95 1 96 1 132 2 194 1 13 1 329 1 152 1 156 1 197 1 34 1 216 1 256 2 302 1 83 1 64 1 259 1 
289 1 71 1 77 1 256 1 169 1 194 1 132 1 
223 1 146 1 282 1 245 2 95 1 96 1 98 1 150 1 132 3 13 1 329 1 152 1 291 2 156 1 197 1 34 1 216 1 256 3 302 1 83 1 64 1 259 1 
223 1 146 1 282 1 245 3 168 1 95 1 96 1 98 1 132 3 13 1 329 1 152 1 291 1 156 1 197 1 110 1 34 1 213 1 216 1 256 3 302 1 83 1 64 1 259 1 
223 1 146 1 96 1 95 1 98 1 150 1 152 1 13 1 156 1 197 1 110 1 64 1 282 1 245 3 168 1 132 3 329 1 288 1 291 2 34 1 213 1 216 1 256 3 302 1 259 1 83 1 
223 1 146 1 96 1 95 1 98 1 150 2 194 1 13 1 152 1 54 1 234 1 156 1 197 1 64 1 282 1 245 2 132 3 329 1 288 2 291 3 34 1 255 1 216 1 256 3 302 1 82 1 259 1 83 1 
146 1 282 1 245 2 95 1 96 1 132 2 194 1 13 1 329 1 152 1 156 1 197 1 34 1 216 1 256 2 302 1 83 1 64 1 259 1 
146 1 282 1 245 2 95 1 96 1 194 1 132 2 13 1 329 1 152 1 234 1 156 1 197 1 34 1 255 1 216 1 256 2 302 1 83 1 64 1 259 1 
146 1 282 1 245 2 95 1 96 1 194 1 132 2 13 1 329 1 152 1 234 1 156 1 197 1 34 1 255 1 216 1 256 2 302 1 83 1 64 1 259 1 
146 1 282 1 245 2 95 1 96 1 194 1 132 2 13 1 329 1 152 1 156 1 197 1 297 1 34 1 160 1 216 1 256 2 302 1 83 1 64 1 259 1 
71 1 186 2 73 1 77 1 4 1 46 1 169 1 103 1 289 1 292 1 296 1 215 1 15 1 277 1 280 1 340 1 
203 1 186 2 73 1 4 1 225 1 134 1 103 1 287 1 292 1 295 1 58 1 215 2 15 1 199 1 115 1 280 1 141 1 84 1 120 1 340 1 
202 1 42 1 186 2 73 1 264 1 166 1 4 1 11 1 100 1 103 2 292 1 215 2 15 1 298 1 336 1 199 1 280 1 63 1 220 1 340 1 
186 2 73 1 323 1 4 1 310 1 101 1 103 1 287 1 134 1 292 1 215 2 15 1 280 1 180 1 340 1 
186 2 73 1 166 1 4 1 103 1 292 1 215 1 15 1 217 1 199 1 280 1 84 1 340 1 
203 1 186 2 73 1 166 1 4 1 134 1 292 1 196 1 295 1 215 1 15 1 280 1 340 1 
203 1 186 2 73 1 166 1 4 1 134 1 103 1 292 1 295 1 58 1 215 2 15 1 199 1 280 1 84 1 340 1 
186 2 73 1 4 1 103 1 292 1 296 1 215 1 15 1 217 1 199 1 280 1 84 1 340 1 
203 1 186 2 73 1 4 1 134 1 292 1 196 1 296 1 295 1 215 1 15 1 280 1 340 1 
203 1 186 2 73 1 4 1 134 1 103 1 292 1 295 1 296 1 58 1 215 2 15 1 199 1 280 1 84 1 340 1 
203 1 186 2 73 1 4 1 134 1 103 1 292 1 295 1 58 1 15 1 215 2 199 1 280 1 84 1 340 1 
289 1 71 1 77 1 5 1 169 1 
289 1 71 1 206 1 77 1 169 1 
203 1 186 2 73 1 4 1 134 1 287 1 103 1 292 1 295 1 58 1 215 2 15 1 199 1 280 1 84 1 340 1 
260 1 331 1 289 1 77 1 5 1 169 1 
203 1 186 2 73 1 4 1 225 1 134 1 103 1 102 1 287 1 292 1 295 1 58 1 215 2 15 1 199 1 280 1 141 1 84 1 120 1 340 1 
86 1 240 1 186 2 73 1 4 1 46 1 103 1 134 1 287 1 292 1 273 1 215 2 214 1 15 1 280 1 120 1 164 1 340 1 
260 1 86 1 240 1 71 1 186 2 73 1 77 1 4 1 5 1 169 1 134 1 287 1 289 1 292 1 212 1 176 1 215 1 214 1 15 1 280 1 120 1 340 1 
186 4 92 1 147 2 266 1 4 2 226 3 310 1 103 9 105 1 58 3 15 2 316 1 199 3 320 2 280 2 63 6 203 3 73 2 123 1 130 1 134 10 294 1 174 1 295 3 215 19 298 3 180 2 142 1 84 3 221 1 
186 6 147 1 92 1 308 1 4 3 226 2 310 2 103 14 105 1 57 1 58 3 15 3 316 2 317 1 199 3 320 4 280 3 63 4 68 2 203 2 73 3 24 1 26 1 28 1 134 12 294 2 295 2 174 2 215 26 298 2 142 1 180 2 84 3 221 1 
264 1 186 6 147 1 92 1 266 1 308 1 4 3 226 4 310 3 11 1 100 1 103 20 105 1 57 1 58 4 15 3 317 1 316 1 199 5 320 4 280 3 63 8 68 1 202 1 70 1 203 4 73 3 123 1 24 1 26 1 28 1 134 21 294 2 174 3 295 5 215 41 336 1 298 4 180 4 142 1 84 4 220 1 221 1 
264 1 186 8 147 1 92 1 266 1 308 1 4 4 226 3 310 3 11 1 100 1 103 20 105 1 57 1 58 4 15 4 317 1 316 1 199 5 320 4 280 4 63 7 68 2 202 1 70 1 203 3 73 4 123 1 24 1 26 1 28 1 134 18 294 2 174 3 295 4 215 38 336 1 298 4 180 4 142 1 84 4 220 1 221 1 
264 1 186 4 147 1 92 1 308 1 4 2 190 2 226 7 310 4 11 1 100 1 103 27 105 1 57 1 58 7 15 2 317 1 316 1 199 8 320 4 280 2 63 14 68 1 202 1 203 7 73 2 123 2 24 1 26 1 28 1 134 25 294 1 174 2 295 8 215 52 336 1 298 7 180 4 142 1 84 7 220 1 221 1 
232 1 314 1 
140 1 7 1 229 1 
183 1 41 1 44 1 2 1 300 1 167 1 285 1 27 1 29 1 209 1 
114 1 179 1 
41 1 44 1 2 1 158 1 189 1 208 1 27 1 29 1 209 1 
238 1 41 1 22 1 44 1 2 1 1 2 324 1 248 1 167 1 285 1 27 1 29 1 209 1 132 1 110 1 256 1 300 1 219 1 
238 1 41 1 22 1 44 1 2 1 1 2 324 1 248 1 167 1 285 1 27 1 29 1 209 1 132 1 110 1 256 1 300 1 219 1 
238 1 41 1 22 1 44 1 2 1 1 2 324 1 248 1 167 1 285 1 27 1 29 1 209 1 132 1 110 1 256 1 300 1 219 1 
232 1 314 1 140 1 
232 1 314 1 140 1 
7 1 229 1 
140 1 7 1 229 1 
9 1 20 1 
41 1 44 1 1 1 2 1 324 1 9 1 27 1 29 1 209 1 132 1 52 1 32 1 175 1 177 1 114 1 256 1 219 1 179 1 120 2 85 1 20 1 144 1 
86 1 186 2 91 1 146 2 4 1 46 1 149 1 191 1 152 2 103 1 107 1 15 1 161 1 275 1 276 1 277 1 280 1 73 1 77 2 282 2 247 2 250 1 169 2 287 1 134 1 289 2 135 1 292 1 215 2 139 1 340 1 
43 1 91 1 77 2 326 1 10 1 312 1 169 2 47 1 331 1 173 1 289 2 107 1 253 1 313 1 113 1 178 1 218 2 279 1 81 1 
43 1 77 1 91 1 326 1 10 1 312 1 169 1 47 1 173 1 289 1 107 1 313 1 178 1 218 2 279 1 301 1 81 1 
71 1 43 1 91 1 77 1 188 1 169 1 30 1 289 1 107 1 253 1 161 1 275 1 37 1 281 1 
43 1 77 1 91 1 326 1 10 1 312 1 169 1 47 1 173 1 289 1 107 1 253 1 313 1 113 1 178 1 218 2 279 1 81 1 
269 1 
325 1 194 1 
203 1 307 1 207 2 330 2 104 1 155 2 58 1 295 1 157 2 110 2 199 1 200 2 84 1 143 2 
291 1 110 1 213 1 256 1 98 1 132 1 
289 1 71 1 77 1 128 1 169 1 194 1 
42 1 155 1 110 1 213 1 325 1 200 1 257 1 
289 1 71 1 77 1 5 1 141 1 237 1 169 1 120 1 251 1 
194 1 
194 1 
289 1 71 1 77 1 169 1 194 1 
194 1 
234 1 256 1 194 1 132 1 
41 1 44 1 112 1 300 1 20 1 
41 1 44 1 274 1 
41 1 44 1 274 1 
41 1 44 1 274 1 
41 1 44 1 65 1 
41 1 44 1 65 1 
41 1 44 1 65 1 
41 1 44 1 
29 1 209 1 
202 2 73 1 186 2 4 1 226 2 100 2 103 5 134 5 105 1 295 2 15 1 215 10 298 3 337 1 199 2 280 1 63 5 220 1 
186 2 73 1 4 1 226 1 103 2 105 1 15 1 215 2 199 1 280 1 84 1 63 1 
203 1 186 2 73 1 4 1 226 1 134 2 103 2 105 1 295 1 58 1 15 1 215 4 298 1 199 1 280 1 63 2 84 1 
68 1 202 1 242 1 186 6 73 3 266 1 4 3 226 1 100 1 134 2 103 1 105 1 215 3 15 3 298 1 280 3 63 2 
264 1 186 10 90 1 266 1 4 5 226 5 310 3 11 1 100 3 48 1 103 16 105 1 58 3 15 5 199 5 280 5 63 12 68 2 202 3 203 3 242 1 73 5 123 1 134 18 136 1 174 1 295 5 215 34 336 1 298 7 180 4 258 1 84 3 220 2 
186 2 264 1 4 1 310 1 11 1 100 1 103 4 105 1 15 1 199 1 280 1 63 2 202 1 73 1 24 1 134 4 295 1 174 1 215 8 336 1 298 2 180 1 220 1 
264 1 186 4 4 2 226 1 310 1 11 1 100 1 103 6 105 1 58 1 15 2 199 2 280 2 63 3 202 1 73 2 123 1 24 1 134 5 295 1 174 1 215 11 298 2 336 1 180 2 258 1 84 1 220 1 
264 1 186 6 4 3 308 1 226 1 310 1 11 1 100 1 103 9 105 1 57 1 58 2 15 3 317 1 199 3 280 3 63 4 68 1 202 1 203 2 73 3 24 1 28 1 134 10 174 1 295 3 215 19 336 1 298 3 258 1 180 1 84 2 220 1 
264 1 186 6 4 3 308 1 226 2 310 1 11 1 100 1 103 10 105 1 57 1 58 2 15 3 317 1 199 3 280 3 63 5 68 1 202 1 203 1 73 3 24 1 28 1 134 7 174 1 295 2 215 17 336 1 298 3 258 1 180 1 84 2 220 1 
186 2 264 1 4 1 310 1 11 1 100 1 103 4 105 1 15 1 199 1 280 1 63 2 202 1 73 1 24 1 134 4 295 1 174 1 215 8 336 1 298 2 180 1 220 1 
186 2 4 1 308 1 226 1 310 1 103 6 105 1 57 1 58 2 15 1 317 1 199 2 280 1 63 2 203 2 73 1 24 1 28 1 134 6 174 1 295 2 215 12 298 1 180 1 84 2 
264 1 186 8 308 1 4 4 226 2 310 1 11 1 100 1 103 10 105 1 57 1 58 2 15 4 317 1 199 3 280 4 63 5 68 2 202 1 203 1 73 4 24 1 28 1 134 8 174 1 295 2 215 18 336 1 298 3 180 1 258 1 84 2 220 1 
186 8 266 1 308 1 4 4 226 3 310 1 103 9 105 1 57 1 58 3 15 4 317 1 199 3 280 4 63 6 68 2 203 2 73 4 24 1 28 1 134 7 174 1 295 2 215 16 298 3 180 1 84 3 
202 3 264 1 226 3 100 3 134 4 103 3 295 1 215 7 336 2 298 3 199 1 63 6 220 1 
264 1 186 8 266 1 308 1 4 4 226 1 310 1 11 1 100 1 103 10 105 1 57 1 58 2 15 4 317 1 199 3 280 4 63 4 68 2 202 1 203 1 73 4 24 1 28 1 134 8 174 1 295 2 215 18 336 1 298 3 180 1 84 2 220 1 
68 1 202 1 186 4 73 2 264 1 4 2 226 1 11 1 100 1 134 4 103 4 295 1 215 8 15 2 298 2 336 1 199 1 280 2 63 3 220 1 
42 1 202 1 264 1 11 1 100 1 134 3 103 3 295 1 215 6 336 1 298 2 199 1 63 2 220 1 
203 1 186 2 73 1 4 1 226 1 134 2 103 2 295 1 58 1 15 1 215 4 298 1 199 1 258 1 280 1 63 2 84 1 
203 1 123 1 226 1 310 1 134 4 103 3 295 1 174 1 58 1 215 7 298 1 199 1 180 2 84 1 63 2 
264 1 186 4 4 2 190 1 226 4 310 2 11 1 100 2 101 1 103 11 58 2 15 2 199 3 280 2 63 9 68 2 202 2 203 2 73 2 242 1 123 1 134 12 295 3 215 23 336 1 298 5 180 2 84 2 220 1 
134 1 215 1 180 1 
103 1 215 1 310 1 
222 1 203 1 73 1 186 2 4 1 226 2 134 3 103 3 58 1 295 1 15 1 215 6 298 2 199 1 280 1 258 1 84 1 63 4 
186 2 4 1 308 1 226 1 310 1 103 6 105 1 57 1 58 2 15 1 317 1 199 2 280 1 63 2 203 2 73 1 24 1 28 1 134 6 174 1 295 2 215 12 298 1 180 1 84 2 
202 1 226 1 100 1 103 3 134 3 295 1 215 6 298 1 199 1 63 2 220 1 
68 1 202 1 242 1 186 2 73 1 264 1 4 1 226 1 100 1 103 1 134 2 215 3 15 1 298 1 336 1 280 1 63 2 
152 1 75 1 156 1 282 1 146 1 321 1 193 1 
75 1 87 1 306 1 146 1 282 1 193 1 12 1 152 1 210 1 156 1 321 1 40 1 
289 1 71 1 107 1 122 1 76 1 91 1 77 1 214 1 161 1 275 1 328 1 169 1 120 1 
76 1 23 1 77 1 91 1 311 1 169 1 286 1 289 1 107 2 161 1 275 1 38 1 66 1 
261 1 71 1 77 4 91 1 169 4 331 1 30 1 289 4 107 1 161 1 17 1 275 1 281 1 
145 1 76 1 23 1 77 2 91 1 311 1 169 2 289 2 290 1 107 2 254 1 161 1 275 1 38 1 
173 1 289 1 71 1 107 1 91 1 77 1 178 1 218 1 169 1 47 1 
77 2 91 1 169 2 331 1 289 2 135 1 107 1 139 1 161 1 275 1 279 1 
261 1 71 1 89 1 77 5 91 2 311 1 169 4 30 1 331 1 289 5 107 2 139 1 161 3 275 2 281 1 118 1 
261 1 71 1 89 1 77 5 91 2 93 1 311 1 169 4 30 1 331 1 289 5 107 2 139 1 161 3 275 2 281 1 
30 1 42 1 289 1 71 1 107 1 91 1 77 1 161 1 275 1 281 1 169 1 
289 1 71 1 107 1 76 1 124 1 91 1 77 1 214 1 161 1 275 1 328 1 169 1 120 1 
289 1 107 1 76 1 124 1 91 1 77 1 214 1 161 1 275 1 328 1 311 1 169 1 120 1 
289 1 107 1 122 1 76 1 91 1 77 1 214 1 161 1 275 1 328 1 311 1 169 1 120 1 
91 1 94 1 311 1 107 1 110 1 159 1 161 4 17 1 275 1 71 1 76 1 77 3 127 1 131 1 169 3 132 2 289 3 291 1 33 1 213 1 256 2 83 1 181 1 
71 1 76 1 77 3 91 1 94 1 131 1 311 1 169 3 132 2 289 3 291 1 107 1 252 1 33 1 110 1 213 1 159 1 161 4 17 1 275 1 256 2 83 1 
289 1 107 1 91 1 77 1 267 1 169 1 
304 1 71 2 76 1 89 1 23 1 77 7 91 2 267 1 247 1 169 6 286 1 331 1 289 7 107 3 139 1 161 3 275 2 38 1 279 1 118 1 66 1 
214 1 120 1 
71 1 77 1 128 1 131 1 98 1 169 1 132 3 194 2 289 1 291 2 32 1 211 1 33 1 252 1 161 2 256 3 201 1 62 1 83 1 
76 1 77 2 224 1 91 1 267 1 169 2 286 1 331 1 289 2 33 1 107 2 161 2 275 1 
246 1 198 1 322 1 67 1 
49 1 31 1 32 1 121 1 246 1 256 1 198 1 322 1 67 1 132 1 
146 1 282 1 246 1 191 1 250 1 152 1 198 1 276 1 67 1 
31 1 121 1 198 1 
333 1 56 1 106 1 3 1 309 1 99 1 119 1 
204 1 3 1 171 1 
50 1 79 1 333 1 56 3 106 1 265 1 3 3 35 2 309 1 99 1 119 1 341 1 
333 1 56 2 106 1 3 2 268 1 309 1 278 1 99 1 119 1 
172 1 79 1 56 1 106 1 3 1 309 1 178 1 218 1 81 1 119 1 19 1 
79 1 56 1 106 1 3 1 309 1 99 1 119 1 
79 1 333 1 56 1 106 1 3 1 309 1 99 2 
126 1 3 2 309 2 99 1 79 1 106 2 56 2 138 1 119 1 303 1 
3 3 309 1 99 1 172 1 79 1 78 1 333 1 106 1 56 3 60 1 338 1 278 2 119 2 
3 2 309 1 99 1 10 1 173 1 79 1 333 1 106 1 56 2 299 1 218 2 178 1 278 1 81 1 119 1 
45 1 3 4 268 1 309 2 99 1 172 1 79 1 333 1 106 2 56 4 60 1 278 2 119 2 
79 1 333 1 56 1 106 1 3 1 309 1 99 1 119 1 
3 4 309 1 8 1 99 2 50 1 172 1 333 2 56 4 106 1 60 1 35 1 278 2 119 3 341 1 
244 1 3 2 309 1 99 1 228 1 79 1 106 1 56 2 333 1 39 1 278 1 119 1 
50 1 79 1 333 1 56 3 106 1 125 1 3 3 35 2 309 1 99 1 119 1 341 2 
231 1 108 1 80 2 119 2 
79 1 56 1 106 1 3 1 309 1 249 1 
78 1 79 1 333 1 56 2 106 1 3 2 309 1 278 1 99 1 119 1 
21 1 
79 1 333 1 56 1 106 1 3 1 309 1 99 1 119 1 
42 1 333 1 99 1 119 1 
3 3 309 1 99 1 79 1 78 1 106 1 56 3 333 1 35 1 278 1 119 1 
172 1 60 1 8 1 119 1 
99 1 119 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (22,156,161,220,286) (70,199) (70,199) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (22,156,161,220,286) (70,199) (70,199) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (22,156,161,220,286) (70,199) (70,199) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (22,156,161,220,286) (70,199) (70,199) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (22,156,161,220,286) (59,123) (59,123) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (221,222,264,275) 298 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (221,222,264,275) 298 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (166,223,315) (166,223,315) (166,223,315) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (166,223,315) (166,223,315) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (166,223,315) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (166,223,315) (166,223,315) (166,223,315) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) 151 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (51,301,307,316) (51,301,307,316) (221,222,264,275) (221,222,264,275) (221,222,264,275) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 1 295 1 76 1 51 1 99 1 299 1 271 1 161 1 118 1 70 1 256 1 301 1 92 1 316 1 199 1 
363 1 295 1 76 1 51 1 99 1 299 1 271 1 161 1 70 1 256 1 118 1 301 1 92 1 316 1 199 1 
363 1 295 1 76 1 51 1 99 1 299 1 271 1 161 1 70 1 256 1 118 1 301 1 92 1 316 1 199 1 
363 1 295 1 76 1 51 1 99 1 299 1 271 1 161 1 70 1 256 1 118 1 301 1 92 1 316 1 199 1 
305 1 13 1 307 1 295 1 76 2 51 2 350 1 299 1 86 1 118 1 301 1 92 1 316 1 275 1 
123 1 299 1 271 1 161 1 59 1 170 1 301 1 295 1 76 1 51 1 316 1 92 1 99 1 
305 1 0 1 232 1 307 1 76 3 51 3 35 1 99 1 241 1 350 2 301 2 92 1 316 2 
264 1 298 1 307 1 301 1 76 1 51 2 316 1 92 1 
264 1 298 1 307 1 301 1 76 1 51 2 316 1 92 1 
129 1 162 1 314 1 
314 1 302 1 10 2 
282 2 304 2 39 2 85 2 65 1 83 2 101 1 26 2 
304 3 47 1 202 1 332 1 74 1 333 1 310 1 250 1 101 1 26 2 136 2 183 1 282 2 206 1 80 1 57 1 313 1 230 2 259 1 288 1 289 1 120 1 82 2 372 1 83 3 12 1 344 1 61 1 65 1 37 1 351 1 39 2 85 2 323 1 93 1 72 2 94 2 
282 1 304 1 39 1 56 1 85 1 379 1 83 1 101 1 200 1 26 1 
211 1 304 1 330 1 132 1 248 1 234 1 182 1 111 1 26 1 162 1 257 1 314 1 83 1 200 1 
304 1 330 2 132 1 248 1 182 1 111 1 26 1 282 1 39 1 85 1 162 1 257 2 314 1 83 1 200 1 
38 1 330 1 257 1 24 1 190 1 
38 1 330 2 73 1 162 1 257 2 314 1 217 1 190 1 
330 1 257 1 190 1 
304 1 330 1 109 1 101 1 26 1 282 1 38 1 56 1 39 1 85 1 257 1 379 1 83 1 200 1 
314 1 
38 1 330 2 162 1 257 2 314 1 217 1 190 1 342 1 
11 1 330 5 266 1 246 1 114 1 2 1 49 1 309 1 38 2 322 2 162 1 257 5 228 2 314 1 217 1 175 1 273 2 155 1 190 2 
129 1 65 1 
304 2 48 1 65 2 26 2 282 1 7 1 39 1 85 1 83 2 
325 1 208 1 164 1 
304 1 61 1 74 1 333 1 65 1 250 1 136 1 206 1 313 1 243 1 259 1 289 1 82 1 93 1 83 1 94 1 
304 2 61 1 74 1 333 1 250 1 26 1 136 1 206 1 39 1 85 1 313 1 88 1 325 1 259 1 289 1 82 1 93 1 23 1 83 2 94 1 
211 1 304 5 277 1 75 1 65 1 16 1 26 5 282 1 7 1 39 4 85 4 88 1 23 2 83 5 
242 1 304 2 39 2 85 2 379 1 83 2 200 1 26 2 
282 1 304 3 39 3 85 3 65 1 23 1 83 3 26 3 
304 1 39 1 85 1 379 1 83 1 200 1 26 1 
282 1 7 1 304 1 39 1 85 1 48 1 83 1 200 1 26 1 
304 4 330 1 47 1 202 1 74 1 132 1 248 1 333 1 310 1 250 1 182 1 101 1 183 1 26 3 136 1 206 1 282 2 7 1 80 1 313 1 257 1 230 2 259 1 289 1 189 1 120 1 82 1 372 1 83 4 12 1 61 1 65 1 111 1 351 1 39 3 85 3 323 1 88 1 90 1 93 1 72 1 23 1 94 1 200 1 
211 1 304 2 39 1 85 1 277 1 65 1 83 2 23 1 26 2 
304 3 330 1 248 1 132 1 179 1 182 1 111 1 26 3 282 1 7 1 39 3 85 3 257 1 88 1 314 1 189 1 23 2 83 3 200 1 
304 2 26 2 282 1 7 1 39 2 85 2 325 1 164 1 23 1 83 2 
304 1 61 1 74 1 333 1 65 1 250 1 136 1 206 1 313 1 259 1 289 1 82 1 93 1 83 1 94 1 
304 1 61 1 74 1 333 1 65 1 311 1 136 1 313 1 259 1 289 1 82 1 41 1 93 1 83 1 94 1 
360 1 112 1 202 1 4 1 310 1 137 1 312 1 80 1 339 1 57 2 208 2 230 2 164 2 120 1 372 1 261 1 146 1 12 1 67 1 323 2 68 1 325 2 303 1 72 4 
304 1 242 1 39 1 85 1 132 1 83 1 200 1 26 1 
81 1 374 1 
81 1 374 1 
356 1 237 1 
356 1 237 1 
356 1 237 1 
30 1 81 1 374 1 
194 1 81 1 374 1 
369 1 356 1 237 1 81 2 336 1 374 2 
30 1 81 1 374 1 
30 1 81 1 374 1 
124 1 81 1 374 1 
124 1 81 1 374 1 
124 1 81 1 374 1 
304 2 362 1 330 1 278 1 52 1 26 2 281 1 55 1 257 1 285 1 81 1 83 2 121 1 32 1 265 1 293 1 34 1 194 1 65 1 17 1 374 1 39 2 85 2 355 1 
329 1 263 2 330 2 366 1 293 2 34 2 278 2 52 3 336 1 374 2 227 1 283 1 257 2 355 1 314 1 126 1 165 1 81 2 121 2 
299 1 118 1 295 1 
299 1 170 1 295 1 
252 1 118 2 89 1 170 1 295 3 260 1 
118 1 89 1 170 1 295 2 260 1 66 1 
118 1 89 2 170 1 295 2 260 1 
112 1 330 5 331 1 4 1 309 1 181 1 6 1 281 1 55 1 137 1 8 2 228 1 257 5 162 1 314 2 209 2 10 3 261 1 190 1 32 1 11 2 147 1 152 1 322 1 38 4 272 1 217 1 376 1 357 2 273 1 175 3 302 1 
330 8 98 1 4 3 181 2 101 1 225 1 6 1 281 4 282 1 137 3 56 1 228 2 10 9 190 5 11 6 147 3 109 1 110 1 150 1 71 1 357 6 302 3 200 1 304 1 112 3 114 1 24 4 309 1 26 1 162 1 257 8 314 5 209 6 83 1 261 3 215 4 38 6 322 2 39 1 85 1 272 2 217 1 273 2 175 8 379 1 44 1 
112 1 331 1 330 3 114 1 4 1 181 1 281 1 137 1 8 1 162 1 228 1 257 3 314 3 209 2 261 1 10 4 11 2 147 1 38 2 152 1 322 1 272 1 273 1 175 3 357 2 302 2 
331 1 330 3 4 2 181 1 101 1 281 2 282 1 8 1 137 2 56 1 228 1 10 7 11 4 147 2 109 1 150 1 152 1 71 1 357 4 302 3 200 1 304 1 112 2 114 1 26 1 257 3 162 1 314 4 209 4 261 2 83 1 38 2 322 1 39 1 85 1 272 1 175 5 273 1 379 1 44 1 
129 1 77 1 93 1 
253 1 93 1 
33 1 
313 1 289 1 93 1 
319 1 93 1 
313 1 93 1 
139 1 313 1 77 2 289 1 93 3 240 1 
360 3 46 1 112 1 368 2 137 1 172 1 196 1 153 1 185 1 57 4 354 1 323 3 68 2 300 1 287 1 380 1 72 7 
360 3 46 1 112 1 368 2 137 1 172 1 196 1 153 1 185 1 57 4 354 1 323 3 68 2 300 1 287 1 380 1 72 7 
360 3 46 1 112 1 276 1 368 2 137 1 172 1 196 1 153 1 185 1 354 1 57 4 323 3 68 2 300 1 287 1 380 1 72 7 
360 10 46 1 112 4 202 1 306 3 368 3 310 1 205 1 4 3 133 1 137 4 185 2 80 1 57 16 287 1 230 2 29 1 105 1 372 1 261 3 147 3 172 2 153 1 196 2 270 4 354 1 323 15 300 2 68 5 197 1 219 1 380 5 72 31 128 1 
360 4 112 1 202 2 368 2 310 2 133 1 137 1 80 2 185 1 57 5 230 4 287 1 372 2 18 1 172 1 153 1 196 1 352 1 354 1 300 1 323 4 68 3 380 1 72 9 
108 1 148 1 166 1 63 1 204 1 74 1 307 1 170 1 223 1 295 2 64 1 76 1 51 2 99 1 136 1 252 1 299 1 207 1 87 1 118 1 259 1 315 1 301 1 92 1 316 1 82 1 94 1 
108 1 148 1 166 1 213 1 204 1 74 1 307 2 170 1 223 1 295 2 64 1 76 2 51 3 99 1 136 1 252 1 299 1 207 1 87 1 118 1 259 1 141 1 341 1 301 1 316 1 82 1 94 1 
108 1 148 1 213 1 204 1 74 1 307 2 170 1 223 1 295 2 64 1 76 1 51 2 99 1 136 1 252 1 299 1 207 1 118 1 259 1 141 1 82 1 94 1 
108 2 148 2 320 1 204 2 74 1 333 1 76 1 195 1 51 1 99 2 136 1 284 1 313 1 40 1 259 1 341 1 301 1 31 1 316 1 82 1 93 1 60 1 94 1 
108 1 148 1 166 1 213 1 204 1 74 1 307 1 170 1 223 1 295 2 64 1 76 1 51 2 99 1 136 1 252 1 299 1 207 1 87 1 118 1 259 1 315 1 301 1 92 1 316 1 82 1 94 1 
191 1 
330 5 132 1 333 2 182 1 337 1 136 2 224 1 138 2 228 1 142 2 188 1 60 1 10 2 190 6 292 2 11 2 193 1 234 1 111 1 349 2 69 4 302 2 200 1 244 1 304 1 158 1 74 1 248 1 159 2 309 1 78 1 26 1 28 1 313 1 162 1 257 5 314 2 259 1 82 2 83 1 211 1 267 1 373 2 320 1 322 1 174 2 216 1 272 1 324 1 217 3 175 2 273 1 378 1 93 1 94 2 
304 1 244 1 330 3 158 1 132 1 248 1 182 1 26 1 224 1 138 1 28 1 257 3 188 1 83 1 190 2 342 1 211 1 234 1 111 1 69 2 217 1 200 1 
304 1 244 1 330 3 158 1 132 1 248 1 182 1 26 1 224 1 28 1 257 3 162 1 314 1 188 1 83 1 190 1 342 1 211 1 234 1 111 1 349 1 69 3 217 1 200 1 
304 1 244 1 330 3 158 1 132 1 248 1 159 1 182 1 26 1 224 1 138 1 28 1 257 3 162 1 314 1 188 1 83 1 342 1 190 2 211 1 234 1 111 1 349 1 69 3 217 1 200 1 
330 5 132 1 134 1 182 1 224 1 138 4 228 1 188 1 142 2 342 1 190 7 11 1 292 2 231 1 234 1 193 1 238 1 111 1 349 4 69 6 358 1 302 2 200 1 304 1 244 1 158 1 248 1 159 4 309 1 26 1 28 1 257 5 162 5 314 5 83 1 211 1 373 2 36 1 322 1 216 1 174 2 217 3 273 1 175 1 
330 4 132 1 182 1 224 1 138 2 228 1 188 1 142 2 10 2 190 4 11 1 292 2 234 1 193 1 111 1 349 2 69 4 302 2 200 1 304 1 244 1 158 1 248 1 159 2 309 1 78 1 26 1 28 1 257 4 162 1 314 2 83 1 211 1 373 2 322 1 216 1 174 2 217 2 273 1 175 1 
304 1 244 1 330 4 158 1 132 1 248 1 159 2 309 1 134 1 182 1 26 1 224 1 138 2 28 1 162 1 228 1 257 4 314 1 142 2 188 1 83 1 190 4 211 1 292 2 11 1 231 1 373 2 193 1 234 1 238 1 111 1 349 2 322 1 174 2 216 1 69 4 217 2 175 1 273 1 302 2 200 1 
304 1 244 1 330 4 158 1 132 1 248 1 159 2 309 1 134 1 182 1 26 1 224 1 138 2 28 1 162 1 228 1 257 4 314 1 142 2 188 1 83 1 190 4 211 1 292 2 11 1 231 1 373 2 193 1 234 1 238 1 111 1 349 2 322 1 174 2 216 1 69 4 217 2 175 1 273 1 302 2 200 1 
304 1 244 1 330 4 365 1 158 1 132 1 248 1 159 2 309 1 182 1 26 1 224 1 138 2 28 1 162 1 228 1 257 4 314 1 188 1 10 2 83 1 190 4 211 1 11 1 107 1 231 1 343 1 373 2 193 1 234 1 346 2 125 2 111 1 349 2 322 1 174 2 69 4 217 2 175 1 273 1 200 1 
304 1 244 1 330 4 158 1 132 1 248 1 159 3 309 1 134 1 182 1 26 1 224 1 138 3 28 1 162 1 228 1 257 4 314 1 142 2 188 1 83 1 190 5 211 1 292 2 11 1 231 1 373 2 193 1 234 1 238 1 111 1 36 1 349 3 322 1 174 2 216 1 69 5 217 2 175 1 273 1 302 2 200 1 
304 1 244 1 330 4 158 1 132 1 248 1 159 3 309 1 134 1 182 1 26 1 224 1 138 3 28 1 162 1 228 1 257 4 314 1 142 2 188 1 83 1 190 5 211 1 292 2 11 1 231 1 373 2 193 1 234 1 238 1 111 1 36 1 349 3 322 1 174 2 216 1 69 5 217 2 175 1 273 1 302 2 200 1 
330 4 132 1 182 1 224 1 138 2 228 1 188 1 10 2 190 4 11 1 234 1 193 1 346 2 111 1 349 2 69 4 200 1 304 1 244 1 365 1 158 1 248 1 159 2 309 1 78 1 26 1 28 1 257 4 162 1 314 1 83 1 211 1 373 2 125 2 322 1 174 2 217 2 273 1 175 1 
360 2 112 1 129 1 202 1 368 1 310 1 137 1 80 1 57 3 208 1 230 2 287 1 164 1 120 1 372 1 146 1 12 1 65 2 172 1 196 1 153 1 354 1 68 2 323 3 325 1 72 6 
360 2 112 2 202 2 247 1 306 3 205 1 310 2 4 1 137 1 80 2 57 8 208 11 230 4 164 4 120 1 372 2 106 1 261 2 212 1 147 2 12 2 65 1 321 1 37 1 270 3 351 1 68 1 323 6 325 11 176 1 219 1 380 1 72 14 
304 2 202 1 247 1 74 1 333 1 310 1 250 1 54 1 136 1 26 1 206 1 80 1 313 1 57 1 186 1 259 1 230 2 289 1 164 1 82 1 120 1 372 1 83 2 12 1 61 1 167 1 65 1 37 1 39 1 351 1 85 1 88 1 323 1 243 1 93 1 94 1 23 1 72 2 
333 1 4 2 136 3 183 2 137 3 57 10 287 1 230 6 187 2 289 2 9 1 147 2 12 3 61 2 294 1 235 2 65 2 239 2 196 1 153 1 351 1 354 1 68 4 23 1 72 20 360 8 304 3 112 3 202 3 247 1 368 1 74 2 310 3 250 2 26 1 206 2 80 3 313 2 208 7 259 2 164 7 82 3 120 3 372 3 83 3 261 2 210 1 213 1 172 1 37 1 173 2 39 1 85 1 323 10 88 1 325 7 380 4 93 2 94 3 
45 1 304 1 202 2 74 2 333 2 310 2 26 1 136 8 80 2 117 1 57 1 313 2 259 2 230 4 140 1 288 2 82 8 120 2 372 2 290 1 60 1 83 1 146 1 12 2 62 1 213 1 63 1 320 1 37 1 39 1 351 1 85 1 353 1 323 1 93 3 23 1 94 7 72 2 154 1 
360 1 304 1 112 1 202 1 247 1 310 1 4 1 116 1 26 1 282 1 7 1 137 1 80 1 57 1 208 1 230 2 164 1 120 1 372 1 83 1 261 1 147 1 12 1 39 1 85 1 68 1 323 2 325 1 72 3 
360 1 146 1 112 1 12 1 202 1 310 1 80 1 339 1 57 2 325 1 208 1 230 2 164 1 380 1 120 1 372 1 72 2 261 1 
360 1 146 1 12 1 202 1 310 1 4 1 137 1 80 1 68 1 323 2 325 1 208 1 230 2 164 1 120 1 372 1 72 2 303 1 
360 2 146 1 147 1 112 1 12 1 202 1 4 1 310 1 137 1 80 1 57 2 68 1 323 2 325 2 208 2 230 2 164 2 380 1 120 1 372 1 72 4 261 1 
360 1 112 1 12 1 202 1 310 1 80 1 339 1 57 2 325 1 208 1 230 2 164 1 380 1 120 1 290 1 372 1 72 2 261 1 
360 1 12 1 202 1 310 1 4 1 137 1 80 1 68 1 323 2 325 1 208 1 230 2 164 1 120 1 290 1 372 1 72 2 303 1 
360 2 147 1 112 1 12 1 202 1 4 1 310 1 137 1 80 1 57 2 68 1 323 2 325 2 208 2 230 2 164 2 380 1 120 1 290 1 372 1 72 4 261 1 
360 2 147 1 112 1 12 1 202 1 4 1 310 1 137 1 80 1 57 2 68 1 323 2 325 2 208 2 230 2 164 2 380 1 120 1 372 1 261 1 72 4 
304 1 202 1 74 1 333 1 310 1 250 1 183 1 136 1 206 1 80 1 57 1 313 1 259 1 230 2 289 1 82 1 120 1 372 1 83 1 12 1 61 1 65 1 37 1 351 1 323 1 93 1 72 2 94 1 
304 1 202 1 74 1 333 1 310 1 311 1 136 1 80 1 57 1 313 1 259 1 230 2 289 1 82 1 120 1 372 1 83 1 12 1 61 1 65 1 37 1 351 1 323 1 41 1 93 1 72 2 94 1 43 1 
360 2 147 1 112 1 12 1 202 1 247 1 4 1 310 1 137 1 80 1 57 2 68 1 323 2 325 2 208 2 230 2 164 2 380 1 120 1 372 1 72 4 261 1 
360 2 112 1 304 1 202 1 74 1 4 1 310 1 250 1 183 1 136 1 206 1 137 1 80 1 57 2 313 1 208 2 259 1 230 2 164 2 289 1 82 1 120 1 372 1 261 1 83 1 147 1 12 1 61 1 63 1 235 1 68 1 323 2 325 2 380 1 93 1 72 4 94 1 
360 1 304 1 112 1 202 1 247 1 203 1 4 1 310 1 26 1 282 1 137 1 7 1 80 1 57 2 208 1 230 2 164 1 120 1 372 1 83 1 261 1 147 1 12 1 39 1 85 1 323 1 325 1 380 1 72 3 
360 6 112 3 113 1 202 2 157 1 306 1 3 2 205 1 310 2 4 3 226 1 137 3 80 2 57 9 370 2 230 4 372 2 261 3 122 1 144 1 147 3 270 2 352 1 375 1 68 3 323 10 219 1 177 1 380 3 72 19 
360 4 112 3 202 3 245 1 157 1 1 1 306 2 3 4 249 1 133 2 310 3 205 2 4 2 226 1 137 2 80 3 57 14 163 1 370 1 230 6 372 3 261 3 122 2 144 1 147 3 270 2 20 1 352 1 68 2 323 12 218 1 380 2 177 2 72 26 
1 1 3 4 4 4 133 1 137 5 226 1 57 20 230 6 287 1 144 1 147 4 153 1 196 1 20 1 352 1 354 1 68 4 72 41 360 8 112 5 202 3 245 1 157 1 306 3 368 1 310 3 205 3 249 1 80 3 163 1 370 1 372 3 261 4 122 2 172 1 270 4 375 1 323 21 218 1 219 1 380 4 177 1 328 1 
360 7 112 5 202 4 245 1 1 1 157 1 368 1 306 3 3 4 249 1 133 2 205 3 310 4 4 3 226 1 137 4 80 4 57 20 163 1 370 1 287 1 230 8 372 4 261 4 122 2 144 1 147 4 172 1 196 1 153 1 270 4 20 1 352 1 375 1 354 1 68 4 323 18 218 1 219 1 177 1 380 3 72 38 328 1 
360 14 112 8 202 2 245 1 1 1 157 1 368 1 306 4 3 4 133 1 249 1 205 2 310 2 4 7 226 1 137 8 80 2 57 27 163 1 370 1 287 1 230 4 372 2 261 7 122 1 144 1 147 7 172 1 196 1 153 1 270 4 20 1 352 1 354 1 68 7 323 25 218 1 176 2 219 2 177 1 380 7 72 52 
329 1 293 1 34 1 377 1 278 1 165 1 81 1 336 1 374 1 121 1 
285 1 194 1 
291 1 21 1 293 1 34 1 278 1 81 1 53 1 374 1 121 1 
364 1 30 1 
369 1 124 1 135 1 
329 1 263 1 330 1 366 1 293 1 34 1 278 1 52 2 336 1 374 1 283 1 355 1 257 1 314 1 126 1 165 1 81 1 121 1 
329 1 263 1 330 1 366 1 293 1 34 1 278 1 52 2 336 1 374 1 283 1 355 1 257 1 314 1 126 1 165 1 81 1 121 1 
329 1 263 1 330 1 366 1 293 1 34 1 278 1 52 2 336 1 374 1 283 1 355 1 257 1 314 1 126 1 165 1 81 1 121 1 
369 1 364 1 30 1 
369 1 364 1 30 1 
124 1 135 1 
369 1 124 1 135 1 
362 1 17 1 
304 2 362 1 330 1 278 1 52 1 281 1 26 2 55 1 257 1 285 1 229 1 81 1 83 2 121 1 263 1 32 1 265 1 293 1 34 1 194 1 65 1 17 1 374 1 38 1 39 2 85 2 126 1 
304 2 202 1 247 1 74 1 279 1 310 1 280 1 136 2 26 2 27 1 80 1 313 1 57 1 259 1 230 2 140 1 288 2 82 2 120 1 372 1 83 2 12 1 14 1 37 1 351 1 323 1 93 1 178 1 72 2 94 2 154 1 
108 1 213 1 63 1 74 1 131 1 334 1 170 1 295 2 64 1 136 2 252 1 299 1 87 1 207 1 118 1 58 1 259 1 82 2 94 2 
108 1 213 1 131 1 74 1 170 1 295 2 64 1 136 1 252 1 299 1 87 1 207 1 118 1 258 1 259 1 82 1 94 1 
108 1 320 1 74 1 333 1 136 1 313 1 58 1 40 1 259 1 91 1 82 1 93 1 60 1 94 1 
108 1 213 1 74 1 131 1 334 1 170 1 295 2 64 1 136 1 252 1 299 1 87 1 207 1 118 1 58 1 259 1 82 1 94 1 
100 1 
11 1 129 1 266 1 246 1 162 1 314 1 175 1 
11 1 292 1 330 1 309 1 322 1 216 1 162 1 257 1 228 1 314 2 217 1 273 1 175 1 142 1 302 1 10 1 190 1 
361 1 112 1 330 1 115 1 74 2 333 1 4 1 309 2 136 1 137 1 139 1 253 2 184 1 313 1 257 1 228 2 314 3 259 1 209 3 289 1 82 1 261 1 10 6 190 1 11 3 147 1 236 1 214 1 149 1 269 1 173 1 322 2 272 1 217 1 357 3 273 2 175 4 302 3 93 3 94 1 95 1 
112 2 330 1 245 1 1 1 115 2 306 1 249 1 205 1 309 2 4 2 137 2 257 1 340 1 228 2 162 2 314 5 209 5 10 6 261 2 190 1 11 5 147 2 267 1 15 1 270 1 322 2 20 1 272 1 217 1 218 1 357 5 175 8 273 2 198 1 302 3 
304 1 112 2 330 1 115 2 309 1 134 1 101 1 26 1 282 1 137 1 56 1 228 1 257 1 287 1 83 1 11 2 109 1 172 1 196 1 322 1 39 1 85 1 273 1 175 2 198 1 379 1 274 1 200 1 
11 1 266 1 246 1 309 1 322 1 228 1 162 1 314 1 273 1 175 1 
11 5 147 2 112 2 115 2 4 2 137 2 173 1 314 5 357 5 209 5 175 5 198 1 302 5 261 2 10 10 
330 1 162 1 257 1 314 1 217 1 190 1 
97 2 330 3 114 1 74 1 333 2 309 1 337 1 136 4 254 1 313 1 228 2 257 3 259 1 119 1 82 4 60 1 190 4 11 2 267 2 320 1 347 1 322 2 324 1 272 2 217 2 273 2 175 2 93 1 94 4 
304 3 47 1 202 1 74 1 333 1 310 1 250 1 101 1 136 1 26 2 183 1 282 2 206 1 80 1 313 1 230 2 259 1 289 1 82 1 120 1 372 1 83 3 12 1 61 1 65 1 351 1 39 2 85 2 323 1 93 1 72 1 94 1 
11 2 267 1 368 1 309 1 322 1 228 1 162 2 272 1 314 4 357 2 209 2 273 1 175 1 302 2 10 4 
367 1 34 1 278 1 
329 1 96 1 362 1 34 1 278 1 
367 1 34 1 278 1 
367 1 34 1 278 1 
34 1 278 1 5 1 
34 1 278 1 5 1 
34 1 278 1 5 1 
34 1 278 1 
81 1 374 1 
360 3 112 1 202 2 368 1 310 2 133 1 137 1 172 1 153 1 196 1 80 2 57 4 354 1 323 4 68 2 287 1 230 4 380 1 372 2 72 8 
360 2 112 1 129 1 368 1 172 1 137 1 153 1 196 1 354 1 57 3 323 3 68 2 287 1 72 6 
360 2 147 1 112 1 202 1 4 1 310 1 137 1 80 1 103 1 57 2 68 1 323 2 230 2 380 1 372 1 261 1 72 4 
360 2 147 1 112 1 306 1 4 1 205 1 137 1 270 2 57 3 68 1 323 4 219 1 380 1 72 7 261 1 
360 9 112 3 202 2 368 1 306 2 4 2 133 2 310 2 137 3 80 2 57 11 287 1 230 4 372 2 261 2 147 2 233 1 321 1 172 2 196 2 153 1 270 2 354 1 323 12 68 5 219 1 176 1 380 4 72 23 
270 1 323 1 72 1 
57 1 306 1 72 1 
360 3 147 1 112 1 202 1 310 1 4 1 137 1 173 1 80 1 103 1 57 3 323 3 68 2 230 2 380 1 372 1 72 6 261 1 
360 2 112 2 202 1 245 1 1 1 306 1 205 1 310 1 4 2 249 1 137 2 80 1 57 6 230 2 372 1 261 2 147 2 270 1 20 1 352 1 323 6 68 1 218 1 380 1 72 12 
360 2 112 1 137 1 172 1 196 1 57 3 323 3 68 1 287 1 380 1 72 6 
360 2 202 1 233 1 133 1 310 1 172 1 196 1 153 1 80 1 57 1 354 1 68 1 323 2 230 2 380 1 372 1 72 3 
360 5 112 2 202 1 310 1 172 2 137 2 196 2 80 1 352 1 57 5 68 3 323 5 230 2 287 1 380 2 372 1 274 1 72 10 
360 1 112 1 202 1 310 1 80 1 352 1 57 2 230 2 380 1 372 1 261 1 72 2 
360 2 147 1 112 1 202 1 4 1 310 1 137 1 80 1 352 1 57 2 68 1 323 2 230 2 380 1 372 1 261 1 72 4 
360 2 202 3 233 1 133 1 310 3 172 1 196 1 80 3 352 1 375 1 57 1 323 2 68 1 230 6 380 1 372 3 72 3 
360 12 112 5 202 5 368 1 306 3 133 2 205 1 310 5 4 3 137 5 80 5 103 1 57 16 287 2 29 1 230 10 372 5 261 3 147 3 233 1 172 3 196 3 153 1 270 4 352 1 354 1 375 1 323 18 68 7 197 1 219 1 380 5 128 1 72 34 
360 2 112 1 202 1 245 1 368 1 306 1 205 1 310 1 137 1 80 1 57 4 230 2 287 1 372 1 172 1 270 1 153 1 196 1 352 1 354 1 323 4 68 2 72 8 
360 3 112 2 202 2 245 1 368 1 306 1 205 1 310 2 137 1 80 2 103 1 57 6 287 1 230 4 372 2 261 1 147 1 172 1 196 1 153 1 270 2 352 1 354 1 68 2 323 5 219 1 380 1 72 11 
360 4 112 3 202 3 245 1 1 1 368 1 306 1 205 1 310 3 4 2 133 1 249 1 137 3 80 3 103 1 57 9 287 1 230 6 372 3 261 2 147 2 172 1 196 1 153 1 270 1 20 1 352 1 354 1 323 10 68 3 218 1 380 1 72 19 
360 5 112 3 202 3 245 1 1 1 368 1 306 1 133 1 205 1 310 3 4 1 249 1 137 2 80 3 103 1 57 10 287 1 230 6 372 3 261 2 147 2 172 1 196 1 153 1 270 1 20 1 352 1 354 1 323 7 68 3 218 1 380 2 72 17 
360 2 112 1 202 1 245 1 368 1 306 1 205 1 310 1 137 1 80 1 57 4 230 2 287 1 372 1 172 1 270 1 153 1 196 1 352 1 354 1 323 4 68 2 72 8 
360 2 112 2 202 1 245 1 1 1 306 1 205 1 310 1 4 2 249 1 137 2 80 1 57 6 230 2 372 1 261 2 147 2 270 1 20 1 352 1 323 6 68 1 218 1 380 1 72 12 
360 5 112 3 202 4 245 1 1 1 368 1 306 1 249 1 205 1 310 4 4 1 133 2 137 2 80 4 103 1 57 10 287 1 230 8 372 4 261 2 147 2 172 1 196 1 153 1 270 1 20 1 352 1 354 1 323 8 68 3 218 1 380 2 72 18 
360 6 112 3 202 4 245 1 1 1 306 1 249 1 205 1 310 4 4 2 133 2 137 2 80 4 57 9 230 8 372 4 261 3 147 3 270 1 20 1 352 1 375 1 323 7 68 3 218 1 380 3 72 16 
360 6 112 1 137 1 172 3 153 1 196 3 354 2 57 3 323 4 68 3 287 1 380 3 72 7 
360 4 112 3 202 4 245 1 1 1 368 1 306 1 249 1 205 1 310 4 4 1 133 2 137 2 80 4 57 10 287 1 230 8 372 4 261 2 147 2 172 1 196 1 153 1 270 1 20 1 352 1 354 1 375 1 323 8 68 3 218 1 380 1 72 18 
211 1 304 1 277 1 65 1 83 1 348 1 26 1 
211 1 304 1 192 1 345 1 84 1 277 1 65 1 251 1 348 1 26 1 262 1 83 1 
129 1 313 1 320 1 74 1 259 1 333 1 82 1 93 1 60 1 94 1 136 1 
304 2 61 1 74 1 333 1 65 1 250 1 26 1 136 1 39 1 85 1 313 1 259 1 289 1 82 1 93 1 23 1 83 2 94 1 
304 2 319 1 97 1 61 1 132 1 74 1 65 1 182 1 250 1 26 2 136 1 39 2 85 1 313 2 104 1 259 1 289 2 82 1 93 3 23 1 83 2 94 1 200 1 
304 2 97 1 130 1 74 1 132 1 182 1 136 2 26 2 313 2 104 1 259 1 289 2 82 2 83 2 319 1 61 1 65 1 39 2 85 1 41 1 93 3 94 2 23 1 200 1 
318 1 319 1 330 2 97 1 130 1 248 1 74 1 333 1 160 1 77 1 136 3 253 1 313 1 162 1 257 2 314 1 104 1 259 1 289 1 82 3 93 4 94 3 190 1 
304 1 330 1 97 1 109 1 101 1 269 1 26 1 136 1 282 1 253 1 39 1 56 1 85 1 257 1 162 1 314 1 379 1 82 1 93 1 83 1 94 1 200 1 
62 1 74 1 259 1 82 1 94 1 136 1 
45 1 62 1 213 1 63 1 168 1 74 3 333 2 136 7 139 1 79 1 117 1 353 1 255 1 313 2 259 2 288 1 289 1 82 7 93 3 94 6 154 1 
183 1 136 1 137 1 57 3 230 4 287 1 289 1 12 2 61 1 63 1 14 1 235 1 65 2 239 1 153 1 196 1 354 1 68 2 23 1 72 6 360 2 304 2 112 1 202 2 247 1 368 1 74 1 310 2 250 1 26 1 206 1 80 2 313 1 208 1 259 1 164 1 82 1 120 2 372 2 83 2 172 1 39 1 85 1 323 3 325 1 93 1 94 1 
330 2 333 1 101 1 136 1 282 1 137 2 56 1 228 2 287 1 190 1 11 5 109 1 196 1 198 1 200 1 361 1 112 2 304 1 246 1 115 2 309 2 26 1 253 1 257 2 162 2 314 2 119 1 82 1 83 1 266 1 214 1 269 1 172 1 38 1 322 2 39 1 85 1 217 1 273 2 175 4 379 1 93 1 94 1 274 1 95 1 
62 1 63 1 74 2 77 1 136 2 139 1 184 1 313 1 259 1 289 1 82 2 93 2 94 2 
130 1 63 1 320 1 74 1 333 1 136 4 313 1 259 1 127 1 82 4 60 1 93 1 94 4 
97 1 168 1 294 1 74 2 180 1 335 1 136 2 79 1 313 1 259 1 289 1 82 2 93 1 94 2 
74 1 333 1 170 1 295 1 136 1 299 1 207 1 259 1 82 1 94 1 
313 1 213 1 63 1 74 1 259 1 82 2 93 1 94 2 154 1 280 1 136 2 
45 1 97 1 320 1 63 1 74 2 333 1 136 5 117 1 313 2 259 2 127 1 82 5 60 1 93 3 94 4 154 1 
45 1 97 1 320 1 63 1 74 2 333 1 171 1 136 5 313 2 259 2 127 1 82 5 60 1 93 3 94 4 154 1 
304 2 61 1 74 1 333 1 65 1 26 1 136 1 39 1 85 1 313 1 259 1 289 1 82 1 93 1 41 1 23 1 83 2 94 1 
97 1 168 1 74 2 136 1 139 1 79 1 255 1 313 1 259 1 289 1 82 1 93 1 94 1 
169 1 308 1 65 1 143 1 42 1 
330 2 248 1 132 1 169 2 296 1 50 1 308 2 65 1 182 1 111 1 38 1 162 1 257 2 314 1 189 1 143 1 327 1 200 1 42 2 
304 1 27 1 169 1 279 1 308 1 143 1 83 1 178 1 26 1 
50 1 143 1 327 1 
350 1 129 1 0 1 35 1 
350 1 0 1 301 1 76 1 51 1 316 1 35 1 
204 1 76 1 99 1 
350 1 0 1 161 2 286 1 301 1 220 1 76 3 51 3 316 1 92 1 35 1 22 1 
350 1 0 1 13 1 307 1 301 1 76 2 51 2 316 1 35 1 
305 1 76 1 295 1 51 1 350 1 299 1 118 1 301 1 92 1 316 1 275 1 
350 1 0 1 301 1 76 1 51 1 316 1 92 1 
0 2 301 1 76 1 51 1 316 1 92 1 35 1 
350 1 0 1 326 1 371 1 301 2 359 1 76 2 51 2 316 2 92 1 
201 1 145 1 305 1 0 1 232 1 307 2 76 3 51 3 35 1 350 2 301 1 92 1 316 1 
252 1 299 1 151 1 118 1 307 1 301 1 170 1 76 1 295 2 51 2 316 1 92 1 
317 1 305 1 0 1 13 1 232 1 307 2 76 4 51 4 35 1 350 2 301 2 92 1 316 2 
350 1 0 1 301 1 76 1 51 1 316 1 92 1 35 1 
305 1 0 2 232 1 307 2 76 4 51 4 35 2 25 1 350 3 161 1 286 1 301 1 220 1 316 1 
221 1 264 1 222 1 307 1 301 1 76 1 51 2 316 1 92 1 
156 1 0 1 76 3 51 3 35 1 350 1 161 2 286 1 301 1 220 2 92 1 316 1 
350 2 338 1 19 1 297 2 
268 1 301 1 76 1 51 1 316 1 92 1 
145 1 350 1 0 1 307 1 301 1 76 2 51 2 316 1 92 1 35 1 
102 1 
350 1 0 1 301 1 76 1 51 1 316 1 92 1 35 1 
145 1 350 1 0 1 161 1 307 1 301 1 76 3 51 3 316 1 92 1 35 1 
350 1 305 1 232 1 25 1 
350 1 0 1 

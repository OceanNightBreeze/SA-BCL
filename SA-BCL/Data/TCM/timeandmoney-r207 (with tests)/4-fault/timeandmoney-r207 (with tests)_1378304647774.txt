#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 266 87 104 108 172 263 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 266 87 104 108 172 263 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 266 87 104 108 172 263 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 266 87 104 108 172 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 266 87 104 108 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 2 310 2 237 5 361 3 101 1 177 2 200 1 240 1 85 1 222 1 293 1 133 9 278 1 158 1 227 1 65 6 135 2 229 2 137 1 230 1 20 1 168 2 116 2 235 1 306 9 375 1 77 1 309 4 
80 2 310 2 237 5 361 3 101 1 177 2 200 1 240 1 85 1 222 1 293 1 133 9 278 1 158 1 227 1 65 6 135 2 229 2 137 1 230 1 20 1 168 2 116 2 235 1 306 9 375 1 77 1 309 4 
80 2 310 2 237 6 361 4 101 1 177 2 200 1 240 1 85 1 222 1 293 1 133 10 278 1 158 1 227 1 65 7 135 2 229 2 137 1 230 1 20 1 168 2 116 2 235 1 306 10 375 1 77 1 309 5 
80 2 310 2 237 4 361 2 101 1 177 2 200 1 240 1 85 1 293 1 133 7 278 1 158 1 227 1 65 4 135 2 229 2 137 1 230 1 20 1 168 1 116 2 235 1 306 7 375 1 77 1 309 3 
158 1 80 1 310 1 237 3 65 3 227 1 229 1 361 1 177 1 230 1 168 2 85 1 222 1 116 1 293 1 306 4 133 4 309 2 
158 1 237 1 310 1 135 1 229 1 176 1 177 1 20 1 85 1 364 1 116 1 293 1 267 1 306 2 133 2 77 1 
158 1 310 2 237 2 65 1 135 1 361 1 177 2 240 1 85 1 293 1 306 3 133 3 309 1 
80 1 310 2 237 5 361 3 177 2 240 1 85 1 222 1 293 1 133 9 158 1 65 7 227 1 135 1 229 1 137 1 230 1 168 2 116 1 235 1 306 9 309 4 378 1 51 1 
80 1 310 2 237 5 361 3 177 2 240 1 85 1 222 1 293 1 133 9 158 1 65 7 227 1 135 1 229 1 137 1 230 1 168 2 116 1 235 1 306 9 309 4 378 1 51 1 
192 1 329 1 279 1 
329 1 336 1 15 2 
106 2 171 2 271 2 67 2 125 2 185 2 276 1 268 1 
27 1 340 2 271 3 125 2 217 1 314 1 239 1 242 2 221 1 245 1 8 2 202 2 10 1 185 2 276 1 297 1 106 3 187 1 110 1 42 1 161 2 66 1 67 2 17 1 48 1 49 1 169 1 332 1 142 1 171 2 69 1 71 1 286 1 144 1 374 1 23 1 268 1 
272 1 106 1 173 1 171 1 323 1 271 1 67 1 125 1 185 1 268 1 
289 1 26 1 106 1 124 1 271 1 125 1 282 1 192 1 329 1 272 1 285 1 294 1 36 1 131 1 
289 1 106 1 124 1 271 1 67 1 125 1 282 1 192 1 329 1 272 1 285 2 171 1 36 2 131 1 185 1 
285 1 248 1 36 1 342 1 259 1 
192 1 329 1 285 2 248 1 36 2 259 1 16 1 186 1 
285 1 36 1 259 1 
106 1 173 1 323 1 271 1 67 1 125 1 261 1 272 1 285 1 171 1 248 1 36 1 185 1 268 1 
329 1 
192 1 329 1 285 2 248 1 36 2 191 1 259 1 16 1 
317 2 335 1 338 1 290 1 123 1 44 1 84 1 259 2 16 1 219 1 218 1 192 1 329 1 141 2 285 5 248 2 305 2 36 5 183 1 
279 1 276 1 
106 2 271 2 67 1 125 2 171 1 37 1 185 1 276 2 348 1 
22 1 0 1 321 1 
106 1 27 1 161 1 271 1 314 1 239 1 169 1 332 1 142 1 8 1 202 1 144 1 97 1 374 1 276 1 297 1 
27 1 106 2 0 1 161 1 271 2 125 1 314 1 55 1 239 1 169 1 332 1 142 1 171 1 8 1 202 1 144 1 374 1 296 1 185 1 297 1 
26 1 106 5 271 5 67 1 125 5 55 1 284 1 171 4 247 1 250 1 296 2 185 4 276 1 348 1 
272 1 106 2 171 2 323 1 271 2 125 2 185 2 165 1 
106 3 171 3 271 3 67 1 125 3 296 1 185 3 276 1 
272 1 106 1 171 1 323 1 271 1 125 1 185 1 
272 1 106 1 171 1 271 1 37 1 67 1 125 1 185 1 348 1 
289 1 27 1 334 1 124 1 340 2 271 4 125 3 217 1 314 1 55 1 239 1 242 1 221 1 272 1 245 1 8 1 202 1 249 1 36 1 131 1 185 3 296 1 276 1 297 1 348 1 106 4 187 1 42 1 161 1 66 1 67 2 282 1 17 1 49 1 169 1 332 1 142 1 285 1 171 3 69 1 286 1 144 1 374 1 268 1 
26 1 106 2 171 1 271 2 125 2 250 1 185 1 296 1 276 1 
289 1 106 3 124 1 271 3 67 1 125 3 282 1 55 1 329 1 272 1 285 1 171 3 249 1 36 1 131 1 296 2 185 3 287 1 348 1 
106 2 0 1 321 1 271 2 67 1 125 2 171 2 296 1 185 2 348 1 
106 1 27 1 161 1 271 1 314 1 239 1 169 1 332 1 142 1 8 1 202 1 144 1 374 1 276 1 297 1 
106 1 27 1 161 1 271 1 112 1 239 1 169 1 180 1 332 1 142 1 8 1 202 1 144 1 276 1 297 1 
0 2 29 1 340 2 33 1 313 1 217 1 221 1 244 1 242 4 243 1 128 1 62 1 187 1 188 1 42 1 321 2 66 1 356 1 17 1 22 2 266 1 286 2 23 2 76 1 
272 1 106 1 171 1 124 1 271 1 125 1 185 1 165 1 
359 1 32 1 
359 1 32 1 
366 1 3 1 
366 1 3 1 
366 1 3 1 
359 1 32 1 150 1 
12 1 359 1 32 1 
13 1 366 1 359 2 89 1 32 2 3 1 
359 1 32 1 150 1 
359 1 32 1 150 1 
220 1 359 1 32 1 
220 1 359 1 32 1 
220 1 359 1 32 1 
100 1 12 1 122 1 106 2 28 1 83 1 352 1 341 1 271 2 125 2 231 1 32 1 113 1 368 1 166 1 7 1 285 1 171 2 359 1 36 1 156 1 252 1 185 2 276 1 
100 3 64 1 83 2 352 2 149 1 231 2 32 2 93 1 368 2 166 1 329 1 285 2 9 1 118 1 359 2 212 2 36 2 89 1 132 1 
80 1 116 1 229 1 
364 1 116 1 229 1 
80 2 50 1 364 1 116 3 369 1 157 1 
80 1 364 1 116 2 367 1 369 1 157 1 
80 1 364 1 116 2 157 1 369 2 
122 1 288 1 336 1 335 1 31 2 313 1 219 2 34 1 87 1 248 4 36 5 62 1 252 1 277 1 226 1 317 1 44 3 260 1 15 3 208 2 259 1 301 1 16 1 113 1 192 1 329 2 141 1 266 1 285 5 119 2 305 1 76 1 
288 2 336 3 335 1 174 1 84 1 342 5 313 3 219 6 34 2 273 5 87 3 248 7 36 9 62 3 277 1 317 2 91 1 44 8 324 1 163 1 15 9 208 6 259 6 139 1 16 1 113 4 192 1 329 5 141 2 266 3 285 9 119 6 305 2 308 1 76 3 
288 1 173 1 336 2 271 1 84 1 31 1 125 1 313 1 219 2 272 1 34 1 248 2 87 1 36 3 62 1 185 1 226 1 106 1 317 1 323 1 67 1 44 3 208 2 15 4 301 1 261 1 113 1 192 1 329 3 141 1 285 3 266 1 171 1 119 2 305 1 76 1 268 1 
288 1 336 2 248 3 62 2 106 1 67 1 208 3 15 5 301 1 113 2 261 1 266 2 171 1 119 3 305 1 76 1 308 1 268 1 173 1 271 1 31 2 84 1 125 1 313 1 219 4 272 1 34 1 87 2 36 4 185 1 226 1 317 1 323 1 44 3 324 1 139 1 192 1 329 3 141 1 285 4 
169 1 279 1 360 1 
169 1 320 1 
319 1 
169 1 144 1 297 1 
169 1 302 1 
169 1 297 1 
169 3 56 1 360 2 144 1 45 1 297 1 
195 1 41 1 29 2 136 1 52 1 53 1 356 3 363 1 328 2 6 1 242 7 286 3 295 1 62 1 23 4 147 1 76 1 
195 1 41 1 29 2 136 1 52 1 53 1 356 3 363 1 328 2 6 1 242 7 286 3 295 1 62 1 23 4 147 1 76 1 
195 1 41 1 109 1 29 2 136 1 52 1 53 1 356 3 363 1 328 2 6 1 242 7 286 3 295 1 62 1 147 1 23 4 76 1 
195 2 29 5 52 1 340 2 53 1 30 1 313 3 363 2 6 1 221 1 242 31 181 1 87 3 295 2 62 4 251 1 107 1 351 1 280 3 255 1 41 5 187 1 90 4 42 1 136 2 354 1 356 10 17 1 328 3 266 3 286 15 147 1 23 16 76 4 
195 1 29 3 291 1 340 4 52 1 53 1 363 1 221 2 242 9 295 1 62 1 351 1 187 2 41 1 42 2 136 1 356 4 17 2 328 2 286 4 146 1 23 5 147 1 76 1 
80 1 25 1 237 1 310 1 27 1 198 1 177 1 57 1 85 1 364 1 293 1 202 1 8 1 133 2 158 1 65 1 228 1 229 1 135 1 189 1 353 1 161 1 300 1 92 1 50 1 332 1 116 2 303 1 306 2 333 1 
80 1 237 1 310 1 27 1 198 1 177 1 85 1 364 1 293 1 202 1 8 1 182 1 133 3 65 2 228 1 229 1 160 1 135 1 189 1 353 1 161 1 300 1 92 1 50 1 332 1 116 2 303 1 72 1 306 3 333 1 
80 1 237 1 27 1 198 1 85 1 364 1 293 1 202 1 8 1 182 1 133 2 65 2 228 1 135 1 160 1 229 1 353 1 161 1 300 1 92 1 50 1 332 1 116 2 306 2 333 1 
27 1 310 1 198 2 148 1 177 1 102 1 239 1 86 1 202 1 8 1 133 1 297 1 228 2 135 2 299 1 161 1 92 2 169 1 332 1 72 1 213 1 306 1 75 1 
80 1 25 1 310 1 27 1 198 1 177 1 364 1 202 1 8 1 133 1 158 1 228 1 229 1 160 1 135 1 189 1 353 1 161 1 300 1 92 1 50 1 332 1 116 2 303 1 306 1 333 1 
270 1 
289 1 336 2 335 1 102 1 239 2 153 1 8 2 202 2 155 1 346 2 294 1 347 1 297 1 106 1 355 1 161 2 15 2 259 6 16 3 169 1 265 2 358 2 70 1 213 1 305 1 81 2 27 1 26 1 311 1 124 1 271 1 125 1 219 2 34 1 272 1 274 1 36 5 131 1 317 1 190 2 44 2 282 1 138 1 192 1 329 2 141 1 330 4 332 1 285 5 95 1 194 2 234 1 145 1 98 2 377 1 
289 1 26 1 106 1 124 1 271 1 125 1 191 1 259 2 282 1 16 1 330 2 272 1 358 1 285 3 95 1 70 1 234 1 155 1 36 3 145 1 294 1 131 1 
289 1 26 1 124 1 271 1 125 1 272 1 155 1 294 1 36 3 131 1 106 1 190 1 191 1 259 1 282 1 16 1 192 1 329 1 330 3 285 3 95 1 234 1 70 1 145 1 
289 1 26 1 106 1 124 1 190 1 271 1 125 1 191 1 259 2 282 1 16 1 192 1 329 1 330 3 272 1 358 1 285 3 95 1 70 1 234 1 155 1 36 3 145 1 294 1 131 1 98 1 
289 1 26 1 173 1 124 1 271 2 125 2 272 2 155 1 294 1 36 3 223 1 131 1 185 1 106 2 323 1 67 1 191 1 259 2 282 1 16 1 261 1 192 1 329 1 330 2 285 3 358 1 171 1 95 1 234 1 70 1 145 1 98 1 268 1 
289 1 335 1 336 2 153 1 155 1 346 2 294 1 106 1 355 1 15 2 259 4 16 2 265 2 358 2 70 1 305 1 81 2 26 1 124 1 271 1 125 1 219 1 272 1 36 4 131 1 317 1 190 2 44 1 138 1 282 1 192 1 329 2 330 4 141 1 285 4 95 1 234 1 194 2 145 1 98 2 
81 2 289 1 26 1 336 2 335 1 124 1 271 1 125 1 219 1 153 1 272 1 155 1 346 2 294 1 36 4 131 1 106 1 317 1 190 2 256 1 44 1 259 4 138 1 282 1 16 2 264 1 192 1 329 1 265 2 330 4 193 1 141 1 358 2 285 4 95 1 194 2 234 1 70 1 305 1 145 1 98 2 
81 2 289 1 26 1 336 2 335 1 124 1 271 1 125 1 219 1 153 1 272 1 155 1 346 2 294 1 36 4 131 1 106 1 317 1 190 2 256 1 44 1 259 4 138 1 282 1 16 2 264 1 192 1 329 1 265 2 330 4 193 1 141 1 358 2 285 4 95 1 194 2 234 1 70 1 305 1 145 1 98 2 
81 2 289 1 26 1 335 1 124 1 271 1 125 1 219 1 153 1 272 1 201 1 129 2 155 1 294 1 36 4 131 1 106 1 317 1 162 1 190 2 44 1 259 4 15 2 282 1 325 1 16 2 264 1 192 1 329 1 330 4 141 1 358 2 285 4 95 1 194 2 234 1 70 1 305 1 145 1 98 2 121 2 
81 2 289 1 26 1 336 2 335 1 124 1 271 1 125 1 219 1 153 1 272 1 155 1 346 2 294 1 36 4 131 1 106 1 317 1 256 1 190 3 44 1 138 1 282 1 259 5 16 2 264 1 192 1 329 1 265 2 141 1 330 5 210 1 193 1 285 4 358 3 95 1 194 2 234 1 70 1 305 1 145 1 98 3 
81 2 289 1 26 1 336 2 335 1 124 1 271 1 125 1 219 1 153 1 272 1 155 1 346 2 294 1 36 4 131 1 106 1 317 1 256 1 190 3 44 1 138 1 282 1 259 5 16 2 264 1 192 1 329 1 265 2 141 1 330 5 210 1 193 1 285 4 358 3 95 1 194 2 234 1 70 1 305 1 145 1 98 3 
289 1 335 1 153 1 155 1 294 1 106 1 162 1 355 1 15 2 259 4 16 2 358 2 70 1 305 1 121 2 81 2 26 1 124 1 271 1 125 1 219 1 272 1 129 2 36 4 131 1 317 1 190 2 44 1 282 1 192 1 329 1 330 4 141 1 285 4 95 1 234 1 194 2 145 1 98 2 
195 1 0 1 29 2 52 1 340 2 53 1 217 1 221 1 244 1 242 6 295 1 62 1 276 2 279 1 187 1 321 1 42 1 66 1 356 2 17 1 328 1 22 1 286 3 147 1 23 3 76 1 
197 1 0 11 29 1 340 4 217 2 313 1 238 1 343 1 221 2 242 14 87 2 62 2 251 1 276 1 255 1 41 1 187 2 280 3 110 1 90 3 42 2 321 4 14 1 66 1 356 2 17 2 49 1 21 1 22 11 266 2 286 6 23 8 76 1 
27 1 340 2 271 2 125 1 217 1 314 1 239 1 343 1 55 1 221 1 242 2 202 1 8 1 185 1 296 1 276 1 297 1 39 1 106 2 187 1 110 1 321 1 42 1 161 1 66 1 18 1 17 1 49 1 169 1 332 1 142 1 171 1 144 1 286 1 97 1 374 1 373 1 23 1 
195 1 0 7 52 1 340 6 53 1 103 1 239 1 55 1 343 1 242 20 245 2 202 3 8 3 295 1 60 2 62 3 296 1 297 2 106 3 110 1 160 1 161 3 66 3 258 2 356 8 17 3 169 2 22 7 266 2 171 1 74 2 23 10 76 3 27 2 29 4 271 3 216 2 125 1 217 3 313 2 314 2 221 3 87 2 38 1 185 1 276 2 187 3 41 4 42 3 321 7 49 1 328 1 332 2 142 2 232 1 286 10 144 2 374 2 147 1 
340 4 102 1 239 2 5 1 344 1 241 1 57 1 242 2 244 1 246 1 8 6 202 7 296 1 297 3 253 1 106 1 110 1 160 1 161 7 66 2 17 2 169 4 171 1 71 2 117 1 213 1 23 1 78 1 27 4 271 1 125 1 217 2 221 2 88 1 185 1 187 2 42 2 49 1 370 1 332 3 286 1 144 1 236 1 
0 1 29 1 340 2 271 1 125 1 217 1 313 1 343 1 221 1 242 3 87 1 62 1 185 1 348 1 224 1 106 1 187 1 321 1 42 1 67 1 66 1 356 1 17 1 22 1 266 1 171 1 286 2 23 1 76 1 
41 1 0 1 187 1 321 1 42 1 340 2 66 1 356 1 217 1 17 1 22 1 242 2 244 1 221 1 266 1 128 1 62 1 23 2 
0 1 187 1 188 1 29 1 321 1 42 1 340 2 66 1 356 1 217 1 313 1 17 1 22 1 242 2 244 1 221 1 286 2 76 1 
41 1 0 2 187 1 29 1 321 2 42 1 340 2 66 1 313 1 356 2 217 1 17 1 22 2 242 4 244 1 221 1 266 1 286 2 87 1 62 1 23 2 76 1 
41 1 0 1 187 1 321 1 42 1 340 2 66 1 356 1 217 1 17 1 5 1 22 1 242 2 221 1 266 1 128 1 62 1 23 2 
0 1 187 1 188 1 29 1 321 1 42 1 340 2 66 1 356 1 217 1 313 1 17 1 5 1 22 1 242 2 221 1 286 2 76 1 
0 2 29 1 340 2 217 1 313 1 5 1 221 1 242 4 87 1 62 1 187 1 41 1 42 1 321 2 66 1 356 2 17 1 22 2 266 1 286 2 23 2 76 1 
41 1 0 2 187 1 29 1 321 2 42 1 340 2 66 1 313 1 356 2 217 1 17 1 22 2 221 1 242 4 266 1 286 2 87 1 62 1 23 2 76 1 
27 1 340 2 271 1 217 1 314 1 239 1 242 2 221 1 245 1 202 1 8 1 276 1 297 1 106 1 187 1 110 1 42 1 161 1 66 1 17 1 49 1 169 1 332 1 142 1 144 1 286 1 374 1 23 1 
27 1 340 2 271 1 152 1 217 1 239 1 242 2 221 1 180 1 202 1 8 1 276 1 297 1 106 1 187 1 110 1 42 1 161 1 66 1 112 1 17 1 49 1 169 1 332 1 142 1 144 1 286 1 23 1 
41 1 0 2 187 1 29 1 321 2 42 1 340 2 66 1 313 1 356 2 217 1 17 1 343 1 22 2 242 4 221 1 266 1 286 2 87 1 62 1 23 2 76 1 
27 1 0 2 29 1 340 2 271 1 216 1 313 1 217 1 314 1 57 1 242 4 221 1 245 1 202 1 8 1 87 1 62 1 297 1 106 1 41 1 187 1 321 2 42 1 161 1 66 1 356 2 17 1 22 2 169 1 332 1 266 1 142 1 286 2 144 1 374 1 23 2 76 1 
0 1 340 2 271 1 125 1 313 1 217 1 343 1 221 1 242 3 87 1 62 1 185 1 348 1 106 1 41 1 187 1 42 1 321 1 67 1 66 1 68 1 356 1 17 1 22 1 266 1 171 1 286 1 23 2 76 1 
269 1 29 1 340 4 313 2 199 1 54 1 221 2 242 24 104 1 87 3 62 3 251 1 204 1 225 1 108 1 255 3 187 2 280 3 41 2 90 4 42 2 356 3 209 2 17 2 263 1 266 3 286 12 172 1 120 3 146 1 23 12 376 1 76 2 
269 1 29 2 340 4 313 2 199 1 54 1 221 2 242 24 104 1 87 3 62 3 251 1 204 1 225 1 108 1 255 3 187 2 280 3 41 2 90 4 42 2 356 4 209 2 17 2 263 1 266 3 286 12 172 1 120 3 146 1 23 12 376 1 76 2 
195 1 269 1 29 5 52 1 340 2 53 1 313 4 221 1 242 36 104 1 87 5 295 1 62 6 251 2 204 1 108 1 255 2 187 1 280 4 41 4 90 4 42 1 356 9 209 1 17 1 263 1 328 1 21 2 266 5 286 17 172 1 120 2 146 1 147 1 23 19 76 5 
269 1 29 3 340 4 313 3 199 2 54 1 221 2 242 19 87 3 275 1 62 3 251 1 255 1 187 2 280 1 41 3 90 2 42 2 356 6 209 1 17 2 263 1 266 3 286 10 172 1 120 2 146 1 23 9 376 1 76 3 
269 1 108 1 280 2 255 2 187 1 90 2 42 1 340 2 17 1 209 2 263 1 242 11 221 1 266 1 104 1 87 1 286 5 172 2 146 1 120 2 62 1 23 6 204 1 
196 1 352 1 83 1 149 1 359 1 89 1 32 1 231 1 132 1 368 1 
12 1 7 1 
350 1 215 1 352 1 83 1 359 1 32 1 231 1 164 1 368 1 
357 1 150 1 
220 1 13 1 206 1 
100 2 83 1 352 1 149 1 231 1 32 1 93 1 368 1 166 1 329 1 285 1 9 1 118 1 359 1 212 1 36 1 89 1 132 1 
100 2 83 1 352 1 149 1 231 1 32 1 93 1 368 1 166 1 329 1 285 1 9 1 118 1 359 1 212 1 36 1 89 1 132 1 
100 2 83 1 352 1 149 1 231 1 32 1 93 1 368 1 166 1 329 1 285 1 9 1 118 1 359 1 212 1 36 1 89 1 132 1 
357 1 13 1 150 1 
357 1 13 1 150 1 
220 1 206 1 
220 1 13 1 206 1 
28 1 156 1 
79 1 100 1 122 1 28 1 83 1 271 2 341 1 32 1 125 2 7 1 248 1 36 1 156 1 252 1 185 2 276 1 12 1 106 2 352 1 231 1 368 1 113 1 285 1 171 2 118 1 212 1 359 1 
27 1 340 2 271 2 125 2 217 1 343 1 221 1 242 2 202 2 58 1 8 2 61 1 297 1 106 2 187 1 110 1 42 1 161 2 66 1 47 1 17 1 49 1 169 1 170 1 332 1 117 1 71 2 304 1 286 1 23 1 236 1 
80 1 82 1 27 1 198 1 229 1 160 1 189 1 161 2 300 1 46 1 50 1 57 1 114 1 364 1 332 1 116 2 8 2 202 2 333 1 
80 1 82 1 27 1 198 1 229 1 160 1 189 1 161 1 300 1 50 1 364 1 332 1 116 2 8 1 202 1 35 1 333 1 
27 1 198 1 161 1 102 1 46 1 239 1 167 1 169 1 332 1 8 1 202 1 213 1 75 1 297 1 
80 1 82 1 27 1 198 1 229 1 160 1 189 1 161 1 300 1 46 1 50 1 114 1 364 1 332 1 116 2 8 1 202 1 333 1 
203 1 
192 1 329 1 279 1 290 1 44 1 183 1 219 1 
336 1 335 1 219 1 346 1 36 1 317 1 44 1 138 1 15 1 259 1 16 1 192 1 329 2 265 1 141 1 285 1 305 1 
335 4 336 6 290 1 339 2 239 1 57 1 345 2 8 3 202 3 59 2 62 2 205 1 297 3 161 3 259 5 208 6 15 12 16 3 169 10 302 2 266 2 119 6 305 4 73 1 74 2 24 2 76 2 27 4 360 2 175 1 313 2 219 8 34 2 127 2 87 2 36 5 183 1 317 4 320 3 43 1 44 9 281 2 45 1 282 2 283 2 192 2 371 2 329 8 141 4 332 3 285 5 233 1 144 3 377 1 
335 1 336 1 313 2 219 4 104 1 87 2 62 2 204 1 255 1 108 1 317 1 280 1 90 1 44 6 257 1 15 2 208 4 329 1 141 1 266 2 119 4 305 1 76 2 307 1 
195 1 173 1 335 1 339 2 271 1 53 1 125 1 219 2 4 1 272 1 295 1 36 1 62 2 185 1 106 1 317 1 323 1 256 1 44 2 67 1 281 1 261 1 141 1 285 1 171 1 305 1 76 1 268 1 
317 1 335 1 290 1 44 1 219 1 192 1 329 1 141 1 305 1 183 1 
336 5 339 2 44 5 281 1 208 5 15 10 313 2 219 5 329 5 266 2 119 5 87 2 74 1 62 2 76 2 
192 1 329 1 285 1 36 1 259 1 16 1 
27 1 335 1 102 1 178 1 84 1 239 2 219 2 34 2 202 4 8 4 274 1 36 3 347 1 205 2 297 1 317 2 161 4 44 2 259 4 16 2 262 1 169 1 141 2 332 1 285 3 305 2 213 1 73 1 377 2 
27 1 340 2 271 3 125 2 217 1 314 1 239 1 242 1 221 1 245 1 202 1 8 1 185 2 276 1 297 1 106 3 187 1 42 1 161 1 67 2 66 1 17 1 49 1 169 1 332 1 142 1 171 2 69 1 286 1 144 1 374 1 268 1 
317 1 336 2 335 1 44 1 208 2 15 4 219 2 328 1 192 2 329 4 141 1 34 1 119 2 305 1 377 1 
365 1 352 1 83 1 
254 1 352 1 83 1 149 1 156 1 
365 1 352 1 83 1 
365 1 352 1 83 1 
352 1 83 1 19 1 
352 1 83 1 19 1 
352 1 83 1 19 1 
352 1 83 1 
359 1 32 1 
195 1 29 2 340 2 52 1 53 1 242 8 221 1 295 1 62 1 280 1 255 1 108 1 187 1 90 1 42 1 356 2 17 1 328 1 286 4 146 1 23 4 147 1 76 1 
195 1 337 1 29 2 52 1 340 4 53 1 242 11 221 2 87 1 295 1 62 2 251 1 255 1 108 1 187 2 280 1 41 1 90 2 42 2 356 3 17 2 328 1 266 1 286 5 146 1 147 1 23 6 76 1 
187 1 108 1 255 1 280 1 90 1 42 1 340 2 17 1 221 1 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
187 1 108 1 255 1 280 1 90 1 42 1 340 2 17 1 221 1 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
195 1 29 2 340 2 52 1 53 1 242 8 221 1 295 1 62 1 280 1 255 1 108 1 187 1 90 1 42 1 356 2 17 1 328 1 286 4 146 1 23 4 147 1 76 1 
187 1 108 1 255 1 280 1 90 1 42 1 340 2 17 1 221 1 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
280 1 187 2 108 1 255 1 337 1 90 1 42 2 340 4 17 2 221 2 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
280 1 187 2 108 1 255 1 90 1 42 2 340 4 54 1 17 2 221 2 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
195 3 41 3 29 3 52 1 53 1 356 6 242 7 286 4 295 3 147 2 62 1 23 3 76 1 
280 1 187 2 108 1 255 1 90 1 42 2 340 4 54 1 17 2 221 2 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
195 1 351 1 41 1 187 2 29 2 42 2 340 4 52 1 53 1 356 3 17 2 328 1 242 8 221 2 286 4 295 1 62 1 23 4 147 1 76 1 
279 1 195 1 29 2 52 1 53 1 356 2 328 1 242 6 286 3 295 1 147 1 62 1 23 3 76 1 
187 1 41 1 337 1 29 1 42 1 340 2 313 1 356 2 17 1 221 1 242 4 266 1 286 2 87 1 62 1 23 2 76 1 
255 1 280 1 41 1 90 2 29 1 313 1 356 2 242 7 266 1 286 4 87 1 23 3 62 1 76 1 251 1 
195 2 29 5 52 1 340 4 53 1 313 2 238 1 242 23 221 2 130 1 87 2 295 2 62 3 251 1 351 2 41 4 280 2 187 2 90 2 42 2 356 9 17 2 328 1 21 1 266 2 286 12 147 1 23 11 76 3 
242 1 90 1 286 1 
242 1 280 1 23 1 
187 1 41 1 337 1 42 1 29 2 340 2 356 3 313 1 17 1 221 1 242 6 266 1 286 3 87 1 74 1 62 1 23 3 76 1 
187 1 108 1 255 1 280 1 90 1 42 1 340 2 17 1 221 1 242 5 266 1 104 1 87 1 286 2 146 1 62 1 23 3 204 1 
195 1 41 1 29 1 53 1 356 2 242 6 286 3 295 1 62 1 23 3 76 1 
195 1 351 1 41 1 187 1 29 1 42 1 340 2 52 1 356 2 17 1 242 3 221 1 130 1 286 2 295 1 23 1 147 1 
195 2 187 1 41 2 42 1 29 3 340 2 53 1 356 5 17 1 4 1 221 1 242 10 286 5 295 2 146 1 23 5 62 2 76 2 
187 1 41 1 42 1 340 2 356 1 17 1 221 1 242 2 266 1 146 1 62 1 23 2 
187 1 41 1 29 1 42 1 340 2 313 1 356 2 17 1 221 1 242 4 266 1 286 2 87 1 146 1 62 1 23 2 76 1 
195 1 351 1 187 3 41 1 42 3 29 1 340 6 356 2 54 1 17 3 242 3 221 3 130 1 286 2 295 1 146 1 23 1 
195 3 337 1 29 7 52 1 340 10 53 2 313 3 54 1 221 5 242 34 181 1 130 1 87 3 295 3 62 5 251 1 351 2 107 1 255 1 187 5 280 3 41 5 90 4 42 5 354 1 356 12 17 5 328 1 266 3 286 18 146 1 147 1 23 16 76 5 
106 1 26 1 271 1 125 1 250 1 126 1 276 1 
26 1 106 1 271 1 125 1 327 1 126 1 94 1 154 1 372 1 250 1 11 1 276 1 
169 1 279 1 27 1 332 1 202 1 8 1 161 1 102 1 213 1 239 1 297 1 
27 1 106 2 161 1 271 2 125 1 314 1 239 1 169 1 332 1 142 1 171 1 8 1 202 1 144 1 296 1 185 1 276 1 297 1 
289 1 27 1 124 1 271 2 125 2 314 1 272 1 202 1 8 1 185 2 296 1 276 1 205 1 297 2 106 2 161 1 169 3 371 1 332 1 302 1 142 1 171 1 144 2 
289 1 27 1 124 1 271 2 125 2 272 1 316 1 202 2 8 2 185 2 296 1 276 1 205 1 297 2 106 2 161 2 112 1 169 3 371 1 332 1 302 1 142 1 171 1 144 2 
27 1 312 1 360 1 1 1 239 1 316 1 202 3 8 3 36 2 205 1 297 1 320 1 161 3 259 1 282 1 192 1 169 4 371 1 329 1 332 1 302 1 285 2 144 1 
27 1 320 1 360 1 161 3 282 1 259 1 239 1 192 1 329 1 371 1 169 4 302 1 127 1 332 1 285 2 316 1 8 3 202 3 144 1 36 2 205 1 297 1 
27 1 332 1 202 1 8 1 161 1 151 1 
27 3 239 2 241 1 57 1 246 1 202 6 8 5 297 2 298 1 253 1 160 1 161 6 45 1 370 1 169 3 332 2 71 1 117 1 144 1 78 1 
195 1 0 1 340 4 52 1 53 1 343 1 57 1 242 6 245 1 202 1 8 1 58 1 60 1 295 1 62 1 296 1 297 1 106 2 161 1 66 2 356 2 17 2 169 1 22 1 171 1 23 3 76 1 27 1 29 2 271 2 216 1 125 1 217 2 314 1 221 2 185 1 276 2 187 2 321 1 42 2 328 1 332 1 142 1 144 1 286 3 374 1 147 1 
335 2 290 1 360 1 219 1 239 1 127 1 345 1 8 1 202 1 248 1 59 1 36 3 183 1 317 2 320 1 161 1 44 1 259 2 282 1 16 1 283 1 192 1 329 1 169 2 141 2 285 3 305 2 73 1 
27 2 360 1 161 2 43 1 45 1 151 1 57 1 169 2 332 1 8 2 202 2 144 1 297 1 
27 1 161 4 102 1 326 1 239 1 57 1 169 1 332 1 316 1 8 4 202 4 213 1 297 1 
27 2 161 2 344 1 241 1 169 1 332 1 246 1 232 1 8 2 202 2 144 1 88 1 205 1 297 1 
27 1 364 1 332 1 116 1 229 1 202 1 8 1 161 1 333 1 239 1 
27 1 160 1 161 2 47 1 57 1 169 1 332 1 8 2 202 2 117 1 297 1 
27 2 161 5 102 1 326 1 239 1 370 1 57 1 169 3 332 2 8 4 202 5 117 1 213 1 205 1 297 2 78 1 
27 2 161 5 102 1 326 1 239 1 57 1 169 3 332 2 8 4 202 5 117 1 96 1 213 1 205 1 297 2 78 1 
27 1 106 2 161 1 271 2 125 1 112 1 239 1 169 1 332 1 142 1 171 1 8 1 202 1 144 1 296 1 185 1 276 1 297 1 
298 1 27 2 161 1 45 1 241 1 169 1 332 1 246 1 8 1 202 1 144 1 205 1 297 1 
115 1 105 1 179 1 111 1 276 1 
63 1 349 1 289 1 124 1 2 1 179 1 282 1 111 2 192 1 329 1 115 2 272 1 285 2 248 1 249 1 36 2 105 2 131 1 276 1 
115 1 106 1 170 1 304 1 271 1 61 1 125 1 179 1 111 1 
349 1 63 1 179 1 
279 1 237 1 85 1 293 1 
237 1 310 1 85 1 293 1 177 1 306 1 133 1 
135 1 306 1 92 1 
158 1 237 1 310 1 214 1 177 1 20 2 140 1 211 1 85 1 293 1 306 3 133 3 
168 1 237 1 310 1 85 1 65 1 293 1 177 1 306 2 133 2 
158 1 80 1 310 1 237 1 227 1 229 1 177 1 116 1 306 1 133 1 309 1 
158 1 237 1 310 1 293 1 177 1 306 1 133 1 
158 1 310 1 85 1 293 2 177 1 306 1 133 1 
99 1 158 1 237 1 310 2 177 2 207 1 315 1 293 1 306 2 133 2 
158 1 310 1 237 2 65 2 361 1 137 1 177 1 85 1 293 1 235 1 306 3 133 3 309 1 
158 1 40 1 80 1 237 1 310 1 65 1 229 1 177 1 50 1 85 1 364 1 116 2 293 1 306 2 133 2 
158 1 310 2 237 2 65 2 361 1 177 2 168 1 85 1 222 1 293 1 306 4 133 4 309 1 
158 1 237 1 310 1 85 1 293 1 177 1 306 1 133 1 
310 1 237 3 65 2 361 1 177 1 20 1 140 1 211 1 85 2 293 2 306 4 184 1 133 4 309 1 
158 1 159 1 237 1 310 1 65 1 322 1 177 1 85 1 293 1 306 2 133 2 378 1 
158 1 237 1 310 1 177 1 20 2 140 1 331 1 211 2 85 1 293 1 306 3 133 3 
292 1 237 2 318 2 143 1 
158 1 310 1 134 1 177 1 306 1 133 1 
158 1 237 1 310 1 85 1 65 1 293 1 137 1 177 1 306 2 133 2 
362 1 
158 1 237 1 310 1 85 1 293 1 177 1 306 1 133 1 
158 1 310 1 237 1 65 1 137 1 177 1 20 1 85 1 293 1 306 3 133 3 
237 1 361 1 184 1 309 1 
237 1 293 1 

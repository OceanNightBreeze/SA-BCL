#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
146 1 326 3 85 1 328 2 60 1 249 2 89 2 322 1 323 1 120 1 189 1 205 3 279 1 
302 1 83 2 20 1 54 1 2 1 85 1 22 1 60 3 89 5 322 1 323 4 120 6 92 1 189 2 212 2 345 1 146 1 73 2 326 9 312 1 328 2 373 1 248 2 249 2 298 1 205 9 279 1 130 1 
302 1 83 2 20 1 54 1 2 1 85 1 22 1 60 3 89 5 322 1 323 4 120 6 92 1 189 2 212 2 345 1 146 1 73 2 326 9 312 1 328 2 373 1 248 2 249 2 298 1 205 9 279 1 130 1 
302 1 83 2 20 1 54 1 2 1 85 1 22 1 60 4 89 6 322 1 323 5 120 7 92 1 189 2 212 2 345 1 146 1 73 2 326 10 312 1 328 2 373 1 248 2 249 2 298 1 205 10 279 1 130 1 
146 1 73 2 83 2 20 1 2 1 326 7 54 1 312 1 85 1 328 2 22 1 60 2 373 1 248 2 298 1 89 4 249 2 323 3 322 1 120 4 212 1 189 2 92 1 205 7 279 1 130 1 345 1 
146 1 302 1 73 1 83 1 326 4 328 1 60 1 248 1 249 1 298 1 89 3 322 1 323 2 120 3 212 2 205 4 279 1 130 1 
146 1 0 1 83 1 20 1 326 2 1 1 312 1 328 1 248 1 89 1 249 1 322 1 90 1 189 1 205 2 279 1 
302 1 83 1 2 1 85 1 22 1 60 3 89 5 323 4 322 1 120 7 189 1 212 2 146 1 73 1 101 1 326 9 328 2 105 1 248 1 249 2 298 1 205 9 279 1 130 1 
302 1 83 1 2 1 85 1 22 1 60 3 89 5 323 4 322 1 120 7 189 1 212 2 146 1 73 1 101 1 326 9 328 2 105 1 248 1 249 2 298 1 205 9 279 1 130 1 
159 1 136 1 11 1 96 1 349 1 150 1 88 1 16 1 106 1 247 1 65 1 91 1 316 1 135 1 
342 1 
96 1 342 1 192 1 316 2 163 1 247 2 17 1 263 1 
242 1 96 2 287 2 171 1 163 1 246 1 247 5 17 1 264 1 263 2 45 1 6 2 266 1 342 1 316 5 300 1 19 2 360 1 258 1 
342 1 334 1 17 1 
342 1 38 1 358 2 
11 2 136 2 91 2 93 1 349 1 150 2 16 2 106 2 
136 3 285 1 340 1 162 1 116 1 58 1 24 1 141 1 265 1 91 2 5 2 93 1 167 2 294 1 309 1 11 3 347 1 349 1 75 1 150 2 151 1 16 2 41 1 172 1 104 1 106 2 177 1 153 1 376 1 80 2 299 1 204 2 227 1 277 1 155 1 254 1 359 2 
11 1 136 1 159 1 65 1 91 1 349 1 150 1 16 1 106 1 135 1 
136 2 159 1 259 1 88 1 65 1 91 1 342 1 36 1 346 1 11 2 349 1 150 1 16 1 106 2 372 1 247 1 17 1 316 1 157 1 113 1 135 2 
136 2 159 1 259 1 88 1 91 2 65 1 342 1 36 1 11 2 349 1 150 2 16 2 106 2 247 2 17 1 316 2 157 1 113 1 135 2 
96 1 273 1 316 1 247 1 263 1 
96 1 342 1 316 2 163 1 318 1 247 2 17 1 263 1 
316 1 247 1 263 1 
136 2 11 2 347 1 340 1 14 1 162 1 116 1 16 1 104 1 106 1 153 1 91 1 227 1 204 1 5 1 277 1 313 1 155 1 240 1 359 1 
136 2 11 2 150 1 16 1 23 1 210 1 106 2 91 1 93 2 
303 1 14 1 145 1 
11 1 136 1 347 1 340 1 162 1 116 1 104 1 153 1 227 1 204 1 5 1 93 1 277 1 155 1 50 1 359 1 
93 1 334 1 
136 5 11 5 37 1 100 1 150 1 351 1 16 4 23 1 372 1 106 5 91 4 93 1 313 1 240 2 
11 2 136 2 65 1 91 2 16 2 106 2 27 1 135 1 
11 3 136 3 91 3 93 1 150 1 16 3 106 3 240 1 
11 1 136 1 65 1 91 1 16 1 106 1 135 1 
11 1 136 1 91 1 150 1 16 1 23 1 210 1 106 1 135 1 
340 1 259 1 162 1 116 1 5 1 265 1 167 1 309 1 11 4 347 1 349 1 16 3 174 1 177 1 80 2 227 1 313 1 277 1 316 1 359 1 135 2 136 4 285 1 23 1 24 1 91 3 93 1 294 1 240 1 36 1 150 2 151 1 104 1 41 1 106 3 247 1 107 1 153 1 376 1 204 1 155 1 157 1 254 1 113 1 378 1 
11 2 136 2 91 1 93 1 100 1 16 1 372 1 106 2 240 1 
136 3 11 3 259 1 150 1 16 3 23 1 106 3 247 1 91 3 313 1 342 1 315 1 316 1 157 1 240 2 113 1 378 1 36 1 135 1 
136 2 11 2 14 1 150 1 16 2 23 1 106 2 91 2 145 1 240 1 
11 1 136 1 347 1 340 1 162 1 116 1 104 1 153 1 227 1 204 1 5 1 93 1 277 1 155 1 359 1 
11 1 136 1 338 1 340 1 116 1 104 1 153 1 227 1 204 1 5 1 93 1 277 1 267 1 155 1 359 1 
285 1 303 2 362 1 304 1 236 1 265 2 167 4 66 1 215 1 294 1 145 2 325 1 14 2 102 1 151 1 41 1 177 1 79 1 44 1 80 2 299 2 203 1 357 1 254 1 
11 1 136 1 91 1 259 1 16 1 106 1 27 1 135 1 
187 1 275 1 62 1 
64 1 314 1 187 2 40 1 62 2 370 1 
187 1 62 1 
187 1 62 1 
40 1 370 1 
40 1 370 1 
40 1 370 1 
187 1 169 1 62 1 
187 1 169 1 62 1 
187 1 169 1 62 1 
187 1 62 1 71 1 
187 1 62 1 71 1 
187 1 62 1 71 1 
11 2 136 2 187 1 76 1 320 1 275 1 352 1 16 2 62 1 106 2 247 1 42 1 165 1 341 1 332 1 108 1 91 2 93 1 280 1 292 1 316 1 337 1 270 1 295 1 
12 1 148 1 199 1 187 2 232 2 320 1 352 2 62 2 211 1 175 1 247 2 341 3 332 2 108 2 342 1 314 1 316 2 295 2 296 1 
73 1 83 2 160 2 1 1 21 1 
73 1 83 1 248 1 
83 1 1 1 248 1 
73 2 83 3 160 1 1 1 21 1 32 1 
73 1 83 2 160 1 1 1 21 1 143 1 
114 1 287 1 362 1 163 1 263 1 236 1 306 1 6 1 342 2 68 1 292 1 216 2 270 1 96 4 97 1 38 1 327 1 102 1 353 2 246 2 247 5 79 1 17 1 226 2 45 1 375 1 316 5 283 1 358 3 337 1 19 1 360 3 
81 1 287 2 362 3 209 1 163 1 263 6 166 1 236 3 6 2 342 5 68 2 292 4 168 1 269 1 216 6 96 7 38 3 272 5 273 5 327 1 102 3 246 6 247 9 79 3 17 1 226 6 45 1 375 2 316 9 283 3 284 1 358 9 19 2 258 1 360 8 
114 1 287 1 362 1 236 1 6 1 342 3 68 1 292 1 216 2 96 2 97 1 38 2 102 1 353 1 247 3 246 2 17 1 79 1 226 2 375 1 316 3 283 1 358 4 19 1 258 1 360 3 
114 1 287 1 362 2 209 1 236 2 6 1 342 4 68 1 292 2 168 1 216 4 96 3 97 1 38 3 102 2 353 2 247 4 246 4 17 1 79 2 226 4 375 1 316 4 283 2 284 1 358 7 19 1 258 1 360 5 
278 1 
340 1 334 1 371 1 
340 1 224 1 
277 1 340 1 153 1 
119 1 340 1 
277 1 340 1 
277 1 340 3 161 1 371 2 369 1 153 1 
198 1 361 1 102 1 140 1 57 2 362 1 288 1 201 1 265 3 366 1 299 4 167 7 215 2 206 1 125 1 126 1 357 3 256 1 
285 1 84 1 115 1 361 5 140 2 57 3 362 4 288 1 366 1 265 15 236 3 167 31 215 5 125 2 126 1 294 1 149 3 350 1 102 4 151 1 79 3 201 1 80 2 299 16 228 1 206 2 336 1 283 3 357 10 254 1 51 1 158 4 256 2 231 1 
285 2 361 1 140 1 57 2 362 1 265 4 366 1 167 9 215 3 125 1 69 1 126 1 294 2 102 1 151 2 176 1 80 4 201 1 299 5 228 1 206 1 357 4 254 2 256 1 
361 1 102 1 140 1 57 2 362 1 288 1 201 1 265 3 299 4 366 1 167 7 215 2 206 1 125 1 126 1 357 3 256 1 
361 1 102 1 140 1 57 2 362 1 288 1 201 1 265 3 299 4 366 1 167 7 215 2 206 1 125 1 126 1 357 3 256 1 
339 1 340 1 86 2 261 1 5 1 289 1 189 2 197 1 326 1 328 1 78 1 222 2 104 1 249 1 204 1 227 1 277 1 205 1 109 1 250 2 155 1 251 1 359 1 
83 2 1 1 86 1 322 1 5 1 189 1 367 1 268 1 213 1 194 1 32 1 73 1 310 1 326 1 328 1 222 1 104 1 173 1 248 1 249 1 204 1 205 1 250 1 155 1 133 1 359 1 
83 2 1 1 86 1 89 1 322 1 120 1 5 1 189 1 367 1 268 1 213 1 194 1 32 1 146 1 73 1 310 1 326 2 328 1 222 1 104 1 173 1 248 1 43 1 249 1 204 1 205 2 279 1 250 1 155 1 359 1 
83 2 1 1 86 1 89 1 5 1 120 2 189 1 367 1 268 1 213 1 194 1 7 1 32 1 146 1 73 1 197 1 326 3 328 1 222 1 104 1 173 1 248 1 249 1 204 1 205 3 279 1 250 1 155 1 133 1 359 1 
83 2 1 1 86 1 89 1 5 1 120 2 189 1 213 1 194 1 7 1 32 1 146 1 73 1 326 2 222 1 104 1 173 1 248 1 204 1 205 2 279 1 250 1 155 1 133 1 359 1 
95 1 
340 1 261 1 163 3 263 6 5 2 6 1 342 1 214 1 123 1 124 1 344 2 170 2 223 2 354 1 227 2 277 1 229 1 131 2 316 4 356 1 132 2 358 2 19 1 360 2 359 2 286 1 139 1 287 1 363 2 289 1 33 1 368 2 38 2 104 1 244 2 246 2 247 4 375 1 45 1 204 2 333 1 155 1 
192 1 214 1 170 1 139 1 356 1 316 2 163 1 247 2 263 2 
214 1 139 1 344 1 356 1 316 1 223 1 247 1 
139 1 170 1 223 1 163 1 244 1 247 2 263 2 192 1 214 1 344 1 316 2 356 1 
159 1 163 3 263 7 65 1 6 1 342 2 214 1 344 3 124 1 11 1 74 1 349 1 170 4 77 1 223 3 16 1 354 1 17 2 131 2 316 4 356 1 132 2 19 1 135 1 360 1 136 1 233 1 139 1 287 1 88 1 363 2 91 1 290 1 192 1 368 2 38 2 150 1 244 4 106 1 246 1 247 4 45 1 257 1 
139 1 287 1 163 2 363 2 263 4 6 1 342 2 214 1 344 2 124 1 33 1 368 2 38 2 170 2 223 2 244 2 354 1 247 3 246 1 17 1 45 1 131 2 356 1 316 3 132 2 358 2 19 1 360 1 
233 1 139 1 287 1 163 2 363 2 263 4 6 1 290 1 342 1 214 1 344 2 124 1 368 2 74 1 38 2 170 2 223 2 244 2 354 1 247 3 246 1 17 1 45 1 131 2 132 2 356 1 316 3 19 1 360 1 
233 1 139 1 287 1 163 2 363 2 263 4 6 1 290 1 342 1 214 1 344 2 124 1 368 2 74 1 38 2 170 2 223 2 244 2 354 1 247 3 246 1 17 1 45 1 131 2 132 2 356 1 316 3 19 1 360 1 
138 2 139 1 287 1 163 2 263 4 6 1 342 1 214 1 344 2 124 1 293 2 219 1 368 2 10 1 74 1 170 2 223 2 329 1 244 2 247 3 246 1 17 1 45 1 131 2 356 1 316 3 358 2 19 1 360 1 
233 1 139 1 287 1 163 2 363 2 263 5 290 1 6 1 342 1 214 1 124 1 344 3 368 2 74 1 38 2 170 3 223 3 244 3 354 1 247 3 246 1 17 1 45 1 131 2 132 2 356 1 316 3 19 1 257 1 360 1 
233 1 139 1 287 1 163 2 363 2 263 5 290 1 6 1 342 1 214 1 124 1 344 3 368 2 74 1 38 2 170 3 223 3 244 3 354 1 247 3 246 1 17 1 45 1 131 2 132 2 356 1 316 3 19 1 257 1 360 1 
138 2 139 1 287 1 163 2 263 4 6 1 342 1 214 1 344 2 124 1 293 2 33 1 368 2 170 2 223 2 329 1 244 2 246 1 247 3 17 1 45 1 131 2 356 1 316 3 358 2 19 1 360 1 
136 1 82 1 285 2 340 3 58 1 261 1 141 2 91 1 5 8 265 1 289 1 343 1 167 2 29 1 291 1 70 1 294 2 240 1 297 1 11 1 325 1 16 1 151 2 104 2 41 2 106 1 177 2 43 1 80 4 376 1 204 8 227 2 299 1 277 2 129 1 155 2 133 1 254 2 359 7 
136 1 285 1 303 1 362 1 23 1 91 1 236 1 265 2 167 3 215 1 8 1 145 1 294 1 11 1 14 1 102 1 150 1 16 1 151 1 41 1 106 1 177 1 79 1 80 2 299 1 335 1 283 1 357 1 254 1 
285 1 303 1 140 1 57 1 362 1 366 1 265 3 93 2 167 6 215 2 125 1 126 1 145 1 294 1 325 1 14 1 102 1 151 1 41 1 177 1 201 1 80 2 299 3 334 1 357 2 254 1 
137 1 186 1 285 1 303 8 361 1 362 1 265 4 236 1 167 10 215 1 8 1 294 1 145 3 149 2 14 8 350 1 102 2 151 1 331 1 41 1 177 1 79 2 80 2 299 6 48 1 283 2 357 2 254 1 158 2 
136 2 285 1 207 1 340 1 162 1 116 1 58 1 5 1 91 1 265 1 93 1 167 2 8 1 145 1 294 1 240 1 11 2 196 1 347 1 16 1 151 1 104 1 103 1 41 1 106 1 153 1 177 1 80 2 376 1 204 1 227 1 299 1 277 1 313 1 155 1 50 1 254 1 359 1 
340 2 303 7 162 2 57 1 116 2 58 1 265 10 5 3 167 20 215 4 125 1 8 1 126 1 271 1 11 3 221 2 347 2 14 7 16 1 177 3 79 2 80 6 227 1 313 1 277 2 283 2 133 1 357 8 359 3 136 3 285 3 361 4 140 1 362 3 24 2 25 1 364 2 365 2 366 1 91 1 236 2 93 2 31 1 142 2 294 3 145 7 240 1 102 3 151 3 41 3 104 2 106 1 153 2 201 1 376 1 204 3 299 10 155 2 254 3 
325 1 285 1 303 1 14 1 361 1 102 1 151 1 41 1 177 1 79 1 80 2 299 2 167 2 66 1 357 1 254 1 145 1 294 1 
325 1 285 1 303 1 14 1 151 1 362 1 41 1 177 1 44 1 80 2 236 1 265 2 167 2 215 1 357 1 254 1 145 1 294 1 
285 1 303 2 361 1 362 1 236 1 265 2 167 4 215 1 294 1 145 2 325 1 14 2 102 1 151 1 41 1 79 1 177 1 80 2 299 2 283 1 357 2 254 1 
285 1 303 1 14 1 361 1 102 1 151 1 41 1 177 1 79 1 80 2 299 2 167 2 291 1 66 1 357 1 254 1 145 1 294 1 
285 1 303 1 14 1 151 1 362 1 41 1 177 1 44 1 80 2 236 1 265 2 167 2 291 1 215 1 357 1 254 1 145 1 294 1 
285 1 303 2 361 1 362 1 236 1 265 2 167 4 291 1 215 1 294 1 145 2 14 2 102 1 151 1 41 1 79 1 177 1 80 2 299 2 283 1 357 2 254 1 
285 1 303 2 14 2 361 1 102 1 362 1 151 1 41 1 177 1 79 1 80 2 265 2 236 1 299 2 167 4 215 1 283 1 357 2 254 1 145 2 294 1 
136 1 285 1 340 1 162 1 116 1 58 1 24 1 5 1 265 1 93 1 167 2 294 1 11 1 347 1 151 1 104 1 41 1 153 1 177 1 80 2 376 1 299 1 204 1 227 1 277 1 155 1 254 1 359 1 
136 1 338 1 285 1 340 1 116 1 58 1 5 1 265 1 93 1 167 2 267 1 294 1 127 1 11 1 151 1 104 1 41 1 153 1 177 1 80 2 376 1 299 1 204 1 227 1 277 1 155 1 254 1 359 1 
285 1 303 2 361 1 362 1 236 1 265 2 167 4 215 1 8 1 294 1 145 2 14 2 102 1 151 1 41 1 79 1 177 1 80 2 299 2 283 1 357 2 254 1 
136 1 285 1 303 2 340 1 361 1 162 1 116 1 362 1 24 1 265 2 236 1 5 1 167 4 215 1 145 2 294 1 11 1 347 1 221 1 14 2 102 1 151 1 104 1 41 1 79 1 153 1 177 1 43 1 80 2 299 2 204 1 277 1 155 1 283 1 357 2 254 1 359 1 
136 1 285 1 303 1 361 1 362 1 23 1 265 1 236 1 91 1 167 3 8 1 294 1 145 1 11 1 14 1 102 1 150 1 16 1 151 1 41 1 106 1 177 1 79 1 80 2 299 2 283 1 357 1 253 1 254 1 
285 2 53 1 361 3 362 3 321 1 265 10 236 3 193 2 121 1 167 19 215 3 69 1 294 2 9 1 147 1 13 1 149 1 350 1 102 3 151 2 79 3 80 4 299 9 283 3 357 6 254 2 134 2 51 1 255 1 158 2 
285 3 53 1 361 2 362 2 26 1 265 12 236 2 193 4 121 1 167 26 122 1 215 2 69 1 294 3 9 1 147 2 149 2 98 1 102 3 151 3 330 1 79 3 377 1 80 6 299 14 228 2 181 1 283 3 357 4 254 3 134 1 51 2 255 2 158 2 
285 3 53 1 361 4 140 1 57 1 362 5 188 1 321 1 26 1 366 1 265 21 236 4 193 4 121 1 167 41 122 1 215 4 125 1 69 1 126 1 294 3 9 1 147 1 98 1 149 3 350 1 102 5 151 3 330 1 79 4 201 1 377 1 80 6 299 20 228 1 181 1 283 4 357 8 254 3 134 1 51 3 255 2 158 4 
285 4 53 1 361 3 140 1 57 1 362 4 188 1 321 1 26 1 366 1 265 18 236 3 193 4 121 1 167 38 122 1 215 4 125 1 69 1 126 1 294 4 9 1 147 1 98 1 149 3 350 1 102 5 151 4 330 1 79 4 201 1 377 1 80 8 299 20 228 2 181 1 283 4 357 7 254 4 134 1 51 3 255 2 158 4 
186 2 285 2 53 1 361 7 140 1 57 1 362 8 26 1 366 1 265 25 236 7 193 4 121 1 167 52 122 1 215 7 125 1 69 1 126 1 294 2 9 1 147 1 98 1 149 4 350 2 102 8 151 2 330 1 79 7 201 1 377 1 80 4 299 27 228 1 181 1 283 7 357 14 254 2 134 1 51 2 255 1 158 4 
108 1 332 1 199 1 314 1 187 1 352 1 62 1 175 1 295 1 324 1 
280 1 275 1 
108 1 332 1 238 1 187 1 49 1 15 1 352 1 62 1 295 1 
169 1 35 1 
64 1 301 1 71 1 
12 1 199 1 187 1 232 1 320 1 352 1 62 1 211 1 175 1 247 1 341 2 332 1 108 1 342 1 314 1 316 1 295 1 296 1 
12 1 199 1 187 1 232 1 320 1 352 1 62 1 211 1 175 1 247 1 341 2 332 1 108 1 342 1 314 1 316 1 295 1 296 1 
12 1 199 1 187 1 232 1 320 1 352 1 62 1 211 1 175 1 247 1 341 2 332 1 108 1 342 1 314 1 316 1 295 1 296 1 
64 1 169 1 35 1 
64 1 169 1 35 1 
301 1 71 1 
64 1 301 1 71 1 
76 1 42 1 
136 2 232 1 187 1 62 1 165 1 341 1 91 2 93 1 292 1 270 1 295 1 11 2 96 1 12 1 76 1 352 1 275 1 16 2 245 1 106 2 247 1 42 1 108 1 332 1 280 1 316 1 337 1 
136 2 285 1 340 1 58 1 63 1 141 2 5 2 265 1 343 1 167 2 8 1 70 1 294 1 11 2 99 1 151 1 104 1 41 1 106 2 177 1 80 2 376 1 204 2 299 1 277 1 155 1 180 1 112 1 182 1 254 1 359 2 
340 1 87 1 104 1 261 1 262 1 227 1 204 1 5 1 289 1 277 1 109 1 250 1 155 1 359 1 
73 1 83 2 1 1 87 1 59 1 104 1 173 1 248 1 204 1 5 1 250 1 268 1 194 1 155 1 32 1 133 1 144 1 359 1 
73 1 83 2 1 1 87 1 59 1 104 1 173 1 248 1 43 1 204 2 5 2 250 1 268 1 194 1 155 1 32 1 133 1 144 1 359 2 
73 1 83 2 1 1 59 1 104 1 173 1 248 1 204 1 5 1 250 1 268 1 194 1 155 1 218 1 32 1 133 1 359 1 
110 1 
242 1 287 1 246 1 17 1 264 1 45 1 6 1 342 1 19 1 360 1 
38 5 102 2 362 2 246 5 364 1 79 2 226 5 202 1 236 2 342 5 179 2 216 5 283 2 358 10 360 5 
342 1 316 1 163 1 247 1 17 1 263 1 
52 1 286 1 340 1 287 2 163 2 261 1 263 4 5 4 289 1 6 2 123 2 307 1 217 2 276 1 104 1 246 2 247 3 45 1 375 2 204 4 227 2 277 1 229 1 155 1 316 3 19 2 258 1 359 4 360 2 
242 1 342 1 334 1 246 1 17 1 360 1 264 1 
38 1 287 1 163 1 354 1 363 1 247 1 246 1 17 1 263 1 45 1 6 1 342 2 316 1 132 1 358 1 19 1 360 1 
340 4 163 1 263 2 5 1 6 2 342 3 216 3 311 1 274 1 224 2 79 1 226 3 227 1 277 1 179 1 316 2 283 1 358 6 184 1 19 2 360 4 359 1 185 1 287 2 362 1 364 1 234 1 236 1 30 1 369 1 38 3 39 1 102 1 104 2 371 1 247 2 246 3 153 1 375 1 45 2 204 1 155 1 157 1 
287 1 362 2 163 1 26 1 263 1 236 2 6 1 342 4 122 1 216 5 98 1 38 3 149 1 102 2 247 1 246 4 79 2 17 1 226 5 374 1 377 1 45 1 179 1 316 1 181 1 283 2 358 6 51 1 158 1 19 1 360 7 
136 1 159 1 140 1 287 1 362 1 88 1 65 1 91 1 6 1 290 1 125 1 126 1 308 1 11 1 349 1 102 2 150 1 16 1 106 1 247 1 246 2 202 1 45 1 179 2 316 1 19 1 135 1 360 2 
136 3 285 1 340 1 162 1 116 1 24 1 265 1 5 1 91 2 93 1 167 1 294 1 309 1 11 3 347 1 349 1 150 2 151 1 16 2 104 1 41 1 106 2 153 1 177 1 376 1 80 2 204 1 227 1 277 1 155 1 254 1 359 1 
38 2 57 1 287 1 246 2 17 2 226 2 45 1 375 1 6 1 342 4 123 1 216 2 358 4 19 1 360 1 
108 1 319 1 199 1 76 1 295 1 
108 1 46 1 295 1 
108 1 46 1 295 1 
108 1 46 1 295 1 
108 1 282 1 295 1 
108 1 282 1 295 1 
108 1 282 1 295 1 
108 1 295 1 
187 1 62 1 
285 1 361 2 140 2 102 2 151 1 362 2 80 2 299 5 265 5 167 10 215 3 125 2 69 1 357 5 126 1 254 1 294 1 308 1 
285 1 361 1 102 1 151 1 79 1 80 2 299 2 167 2 69 1 357 1 254 1 294 1 
285 1 361 1 102 1 362 1 151 1 79 1 80 2 265 2 236 1 299 2 167 4 215 1 69 1 283 1 357 2 254 1 294 1 
285 3 361 1 140 1 56 1 151 3 321 1 80 6 265 2 299 1 228 1 167 3 215 1 125 1 69 1 357 2 254 3 294 3 
285 5 84 1 115 1 361 5 140 3 57 1 56 1 362 5 321 1 366 1 265 18 236 3 167 34 215 7 125 3 69 1 126 2 294 5 149 3 350 1 102 5 151 5 128 1 79 3 201 1 80 10 299 16 228 2 336 1 283 3 357 12 254 5 51 1 158 4 
285 1 140 1 57 1 362 1 265 4 366 1 167 8 215 2 125 1 69 1 126 1 294 1 149 1 98 1 102 1 151 1 80 2 201 1 299 4 357 2 254 1 51 1 158 1 
285 2 361 1 140 1 57 1 362 1 366 1 265 5 167 11 215 2 125 1 69 1 126 1 294 2 98 1 149 1 350 1 102 2 151 2 128 1 79 1 201 1 80 4 299 6 283 1 357 3 254 2 51 1 158 2 
285 3 361 1 140 1 57 1 362 3 26 1 366 1 265 10 236 2 167 19 122 1 215 3 125 1 69 1 126 1 294 3 149 1 98 1 102 3 151 3 128 1 79 2 201 1 377 1 80 6 299 9 228 1 181 1 283 2 357 4 254 3 51 1 158 1 
285 3 361 2 140 1 57 1 362 2 26 1 366 1 265 7 236 1 167 17 122 1 215 3 125 1 69 1 126 1 294 3 149 1 98 1 102 3 151 3 128 1 79 2 201 1 80 6 377 1 299 10 228 1 181 1 283 2 357 5 254 3 51 1 158 1 
285 1 140 1 57 1 362 1 265 4 366 1 167 8 215 2 125 1 69 1 126 1 294 1 149 1 98 1 102 1 151 1 80 2 201 1 299 4 357 2 254 1 51 1 158 1 
285 1 361 1 362 2 26 1 265 6 236 2 167 12 122 1 215 1 69 1 294 1 149 1 98 1 102 2 151 1 79 2 80 2 377 1 299 6 181 1 283 2 357 2 254 1 51 1 158 1 
285 4 361 2 140 1 57 1 362 2 26 1 366 1 265 8 236 1 167 18 122 1 215 3 125 1 69 1 126 1 294 4 98 1 149 1 102 3 151 4 128 1 79 2 201 1 377 1 80 8 299 10 228 2 181 1 283 2 357 5 254 4 51 1 158 1 
285 4 361 3 362 2 26 1 321 1 265 7 236 2 167 16 122 1 215 3 69 1 294 4 98 1 149 1 102 3 151 4 79 3 377 1 80 8 299 9 228 2 181 1 283 3 357 6 254 4 51 1 158 1 
361 3 140 3 102 1 362 1 201 1 265 4 366 2 299 3 167 7 215 3 125 3 357 6 126 1 
285 4 361 1 140 1 57 1 362 2 26 1 321 1 366 1 265 8 236 1 167 18 122 1 215 3 125 1 69 1 126 1 294 4 98 1 149 1 102 3 151 4 79 2 201 1 377 1 80 8 299 10 228 2 181 1 283 2 357 4 254 4 51 1 158 1 
285 2 361 1 102 1 140 1 57 1 362 1 151 2 80 4 201 1 265 4 299 4 366 1 167 8 228 1 215 2 125 1 126 1 357 3 254 2 294 2 
140 1 102 1 57 1 362 1 201 1 265 3 366 1 299 3 334 1 167 6 215 2 125 1 357 2 126 1 
285 1 361 1 102 1 362 1 151 1 128 1 79 1 80 2 265 2 236 1 299 2 167 4 215 1 283 1 357 2 254 1 294 1 
149 1 361 1 350 1 102 1 362 1 79 1 236 1 265 4 299 3 167 7 215 1 283 1 357 2 51 1 158 2 
186 1 285 2 361 4 140 2 57 1 56 1 362 3 366 1 265 12 236 2 167 23 215 5 125 2 126 1 294 2 149 2 102 3 350 1 151 2 79 2 201 1 80 4 299 11 228 2 48 1 283 2 357 9 254 2 158 2 
265 1 167 1 158 1 
299 1 167 1 149 1 
285 1 361 1 102 1 151 1 362 1 128 1 364 1 79 1 80 2 265 3 299 3 236 1 167 6 215 2 283 1 357 3 254 1 294 1 
285 1 361 1 362 2 26 1 265 6 236 2 167 12 122 1 215 1 69 1 294 1 149 1 98 1 102 2 151 1 79 2 80 2 377 1 299 6 181 1 283 2 357 2 254 1 51 1 158 1 
361 1 102 1 140 1 362 1 299 3 265 3 167 6 215 1 125 1 126 1 357 2 
285 1 361 1 140 1 56 1 151 1 80 2 201 1 299 1 366 1 265 2 167 3 228 1 215 1 125 1 357 2 254 1 294 1 
11 1 136 1 93 1 190 1 100 1 106 1 372 1 
136 1 11 1 208 1 100 1 55 1 260 1 372 1 106 1 152 1 355 1 93 1 190 1 
340 1 104 1 261 1 43 1 227 1 204 4 5 4 289 1 277 1 155 1 239 1 241 1 359 4 
340 1 104 2 25 1 225 1 153 1 204 2 5 2 191 1 277 1 67 1 178 1 155 1 217 1 359 2 
83 1 5 1 204 1 227 1 1 1 155 1 104 1 173 1 248 1 359 1 
5 2 204 2 277 1 340 1 343 1 155 1 133 1 104 1 182 1 359 2 43 1 
297 1 82 1 340 3 261 1 104 2 43 1 289 1 227 1 204 5 5 5 277 2 343 1 155 2 217 1 241 1 359 4 
297 1 340 3 261 1 104 2 43 1 289 1 227 1 204 5 5 5 277 2 343 1 155 2 217 1 111 1 241 1 359 4 
289 1 5 1 204 1 227 1 277 1 340 1 334 1 155 1 104 1 261 1 359 1 
136 2 11 2 340 1 162 1 116 1 16 1 104 1 106 1 153 1 91 1 227 1 204 1 5 1 93 1 277 1 155 1 240 1 359 1 
136 2 340 3 259 1 162 1 116 1 5 1 91 2 119 1 93 1 305 1 217 1 240 1 36 1 11 2 16 1 104 1 106 2 153 2 204 1 277 2 155 1 359 1 135 1 
136 2 338 1 340 3 259 1 116 1 5 2 91 2 119 1 93 1 305 1 217 1 239 1 240 1 36 1 11 2 16 1 104 1 106 2 153 2 204 2 277 2 155 1 359 2 135 1 
136 1 159 1 340 4 88 1 263 1 65 1 91 1 5 1 119 1 305 1 342 1 217 1 11 1 349 1 150 1 16 1 224 1 104 1 106 1 371 1 247 2 153 1 17 1 18 1 204 1 277 1 155 1 316 2 230 1 157 1 135 1 359 1 
136 1 159 1 340 4 88 1 263 1 65 1 91 1 5 1 119 1 305 1 342 1 217 1 11 1 349 1 39 1 150 1 16 1 224 1 104 1 106 1 371 1 247 2 153 1 17 1 204 1 277 1 155 1 316 2 157 1 135 1 359 1 
5 1 204 1 129 1 155 1 104 1 359 1 
297 1 82 1 340 3 104 3 153 1 43 1 141 1 227 2 204 7 5 7 47 1 191 1 277 2 343 1 129 1 29 1 178 1 155 2 133 1 369 1 359 6 
340 1 303 1 162 1 116 1 57 1 5 1 265 3 167 6 215 2 125 1 8 1 126 1 11 2 347 1 221 1 14 1 16 1 177 2 80 4 277 1 180 1 357 2 359 1 136 2 285 2 140 1 362 1 24 1 91 1 366 1 93 2 142 1 145 1 294 2 240 1 102 1 151 2 41 2 104 1 106 1 153 1 43 1 201 1 204 1 299 3 155 1 254 2 
159 1 340 2 163 1 263 2 264 1 65 1 5 1 6 2 342 2 307 1 125 1 126 1 308 1 11 1 349 1 274 1 16 1 224 1 17 2 227 1 179 2 316 3 19 2 135 1 359 1 360 4 136 1 140 1 287 2 362 2 88 1 234 1 91 1 30 1 242 1 96 1 39 1 102 2 150 1 371 1 106 1 247 3 246 5 202 1 45 2 204 1 157 1 
185 1 340 2 104 2 371 1 153 1 43 1 204 2 5 2 277 1 129 1 155 1 369 1 359 2 
136 2 11 2 338 1 340 1 116 1 16 1 104 1 106 1 153 1 91 1 227 1 204 1 5 1 93 1 277 1 155 1 240 1 359 1 
340 1 104 2 153 1 204 1 5 1 47 1 191 1 277 1 178 1 155 1 217 1 369 1 359 1 
93 1 34 1 183 1 28 1 118 1 
136 1 159 1 259 1 88 1 28 1 118 1 65 1 91 1 237 1 342 1 34 1 36 1 11 1 96 1 349 1 150 1 16 1 106 1 247 2 17 1 156 1 281 1 316 2 157 1 183 1 113 1 378 1 135 2 
136 1 11 1 99 1 63 1 106 1 28 1 112 1 34 1 183 1 
237 1 156 1 34 1 
146 1 322 1 205 1 279 1 326 1 328 1 89 1 249 1 
146 2 348 1 326 4 312 1 3 1 328 1 60 1 249 1 89 3 323 1 120 2 205 4 279 2 94 1 
146 1 326 2 101 1 328 1 61 1 89 1 249 1 322 1 120 1 205 2 279 1 72 1 
146 1 348 1 326 3 312 2 328 1 3 2 89 1 249 1 322 1 154 1 205 3 279 1 
235 2 252 1 89 2 220 1 
322 1 205 1 326 1 328 1 195 1 249 1 
146 1 322 1 120 1 205 2 279 1 2 1 326 2 328 1 89 1 249 1 
200 1 
146 1 322 1 205 1 279 1 326 1 328 1 89 1 249 1 
146 1 334 1 279 1 89 1 
146 1 205 1 279 1 326 1 328 1 89 1 249 1 
189 1 326 1 222 1 
146 1 348 1 326 3 312 2 328 1 3 1 89 1 249 1 322 1 205 3 279 1 317 1 
146 1 120 1 212 1 205 2 279 1 326 2 328 1 89 1 249 1 
73 1 83 1 326 1 328 1 248 1 249 1 89 1 322 1 323 1 205 1 130 1 
322 1 205 1 279 1 326 1 328 1 89 1 249 1 
146 1 322 1 205 1 279 2 326 1 328 1 249 1 
243 1 326 2 328 2 4 1 164 1 89 1 249 2 322 1 205 2 279 1 
146 1 326 3 2 1 328 1 22 1 60 1 249 1 89 2 322 1 323 1 120 2 205 3 279 1 
146 1 73 1 83 2 1 1 326 2 328 1 117 1 248 1 89 1 249 1 322 1 120 1 205 2 279 1 32 1 
146 1 302 1 326 4 328 2 60 1 249 2 89 2 322 1 323 1 120 2 212 1 205 4 279 1 
146 1 322 1 120 1 205 3 2 1 279 1 326 3 312 1 328 1 89 1 249 1 
323 1 60 1 94 1 89 1 
279 1 89 1 

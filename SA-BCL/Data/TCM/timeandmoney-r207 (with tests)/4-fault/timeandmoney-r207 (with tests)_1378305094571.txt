#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 13 206 186 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 13 206 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 266 (17,87,106) (156,163,200) (156,163,200) (156,163,200) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 266 (17,87,106) (17,87,106) (17,87,106) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 259 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 13 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 4 180 9 230 1 135 1 89 1 335 1 279 2 210 3 40 1 93 9 280 1 137 2 214 1 340 1 70 1 140 6 258 1 120 2 123 2 56 1 305 2 266 2 79 1 269 2 151 1 271 1 313 1 11 5 
229 4 180 9 230 1 135 1 89 1 335 1 279 2 210 3 40 1 93 9 280 1 137 2 214 1 340 1 70 1 140 6 258 1 120 2 123 2 56 1 305 2 266 2 79 1 151 1 269 2 271 1 313 1 11 5 
229 5 180 10 230 1 135 1 89 1 335 1 279 2 210 4 40 1 93 10 280 1 137 2 214 1 340 1 70 1 140 7 258 1 120 2 123 2 56 1 305 2 266 2 79 1 151 1 269 2 271 1 313 1 11 6 
229 3 180 7 230 1 135 1 89 1 335 1 279 2 210 2 93 7 280 1 137 2 214 1 340 1 70 1 140 4 258 1 120 2 123 2 56 1 305 2 266 2 79 1 151 1 269 1 271 1 313 1 11 4 
229 2 180 4 123 1 230 1 89 1 335 1 279 1 210 1 266 1 79 1 40 1 93 4 269 2 137 1 271 1 140 3 11 3 120 1 
180 2 123 1 230 1 103 1 89 1 223 1 305 1 317 1 266 1 79 1 93 2 214 1 137 1 340 1 11 1 120 1 
229 1 180 3 230 1 89 1 305 1 210 1 79 1 93 3 137 2 70 1 11 2 140 1 120 2 
229 4 180 9 230 1 89 1 315 1 335 1 279 1 210 3 93 9 40 1 137 2 70 1 140 7 258 1 120 2 123 1 56 1 305 1 266 1 79 1 269 2 271 1 11 5 203 1 
229 4 180 9 230 1 89 1 315 1 335 1 279 1 210 3 93 9 40 1 137 2 70 1 140 7 258 1 120 2 123 1 56 1 305 1 266 1 79 1 269 2 271 1 11 5 203 1 
253 1 67 1 323 1 
253 1 86 1 8 2 
20 2 187 2 62 1 1 2 139 1 216 2 348 2 286 2 
110 2 62 1 1 3 231 1 115 1 208 1 277 2 232 1 212 1 19 1 41 1 20 2 43 2 187 3 301 2 139 1 216 2 285 1 46 1 286 2 260 1 192 1 98 1 144 1 219 1 73 2 194 1 265 1 197 1 76 1 348 2 198 1 57 1 291 1 225 1 248 1 331 1 81 1 332 1 
338 1 318 1 291 1 20 1 187 1 62 1 1 1 216 1 348 1 286 1 
288 1 1 1 221 1 113 1 172 1 18 1 253 1 67 1 199 1 236 1 291 1 22 1 187 1 216 1 
288 1 221 2 1 1 113 1 18 2 348 1 253 1 67 1 20 1 236 1 291 1 22 1 187 1 216 1 286 1 
5 1 221 1 239 1 18 1 343 1 
253 1 67 1 254 1 5 1 221 2 201 1 18 2 343 1 
221 1 18 1 343 1 
5 1 62 1 221 1 1 1 18 1 348 1 338 1 318 1 291 1 20 1 187 1 256 1 216 1 286 1 
253 1 
253 1 67 1 254 1 5 1 346 1 221 2 18 2 343 1 
4 1 5 2 124 1 102 1 221 5 18 5 253 1 67 1 254 1 213 1 270 1 131 2 10 1 165 2 141 2 84 1 251 1 142 1 343 2 
139 1 323 1 
324 1 1 2 333 1 348 1 20 1 187 2 216 2 139 2 286 1 
154 1 347 1 191 1 
144 1 219 1 73 1 1 1 231 1 277 1 76 1 198 1 57 1 19 1 291 1 43 1 187 1 331 1 332 1 139 1 353 1 260 1 
324 1 112 1 101 1 276 1 243 1 1 5 172 1 348 4 20 1 308 2 187 5 216 5 139 1 286 4 
338 1 291 1 187 2 1 2 216 2 129 1 348 2 286 2 
144 1 219 1 243 1 73 1 1 2 231 1 277 1 76 1 198 1 348 1 57 1 308 1 43 1 331 1 187 2 154 1 332 1 216 1 286 1 260 1 
20 1 308 1 187 3 1 3 139 1 216 3 348 3 286 3 
338 1 291 1 187 1 1 1 216 1 348 1 286 1 
291 1 20 1 324 1 187 1 1 1 333 1 216 1 348 1 286 1 
110 2 62 1 1 4 231 1 113 1 115 1 277 1 232 1 18 1 212 1 236 1 20 2 43 1 22 1 187 4 320 1 301 1 139 1 216 3 46 1 286 3 260 1 192 1 144 1 288 1 324 1 219 1 243 1 73 1 194 1 221 1 265 1 76 1 198 1 348 3 57 1 291 1 225 1 308 1 292 1 331 1 248 1 81 1 332 1 
308 1 112 1 187 2 1 2 139 1 216 2 172 1 348 1 286 1 
288 1 324 1 243 1 221 1 1 3 113 1 18 1 348 3 2 1 253 1 20 1 291 1 236 1 308 2 292 1 22 1 187 3 216 3 286 3 
324 1 1 2 347 1 348 2 20 1 308 1 187 2 154 1 216 2 286 2 
144 1 219 1 73 1 1 1 231 1 277 1 198 1 76 1 57 1 19 1 291 1 43 1 187 1 331 1 332 1 139 1 260 1 
219 1 73 1 1 1 231 1 277 1 198 1 76 1 57 1 19 1 291 1 43 1 187 1 31 1 332 1 139 1 260 1 85 1 
297 1 110 2 115 1 232 1 91 1 212 2 41 2 282 1 188 1 301 4 191 2 143 1 71 1 148 1 194 1 195 1 347 2 265 1 307 1 225 1 152 1 81 1 154 2 250 1 
291 1 288 1 187 1 1 1 216 1 129 1 348 1 286 1 
49 1 55 1 
49 1 55 1 
249 1 138 1 
249 1 138 1 
249 1 138 1 
49 1 42 1 55 1 
49 1 55 1 117 1 
99 1 49 2 149 1 249 1 138 1 55 2 
49 1 42 1 55 1 
49 1 42 1 55 1 
100 1 49 1 55 1 
100 1 49 1 55 1 
100 1 49 1 55 1 
206 1 94 1 49 1 186 1 221 1 55 1 244 1 13 1 18 1 
206 1 94 1 49 1 55 1 244 1 13 1 
123 1 279 1 266 1 
123 1 223 1 266 1 
123 3 52 1 279 2 223 1 342 1 25 1 
300 1 123 2 52 1 279 1 223 1 342 1 
123 2 52 2 279 1 223 1 342 1 
86 1 160 1 35 1 18 5 254 1 67 1 253 2 164 2 188 1 141 1 165 1 26 1 343 1 4 1 5 4 71 1 146 1 148 1 221 5 195 1 128 2 8 3 330 1 131 1 174 1 30 1 273 1 311 2 177 1 84 3 251 2 204 1 
207 1 86 3 160 3 18 9 67 1 253 5 254 1 188 3 239 5 165 2 141 2 142 1 343 6 242 5 4 1 5 7 72 1 71 3 146 2 148 3 221 9 195 3 104 1 264 1 128 6 8 9 330 4 174 1 131 2 311 6 312 1 177 2 32 1 84 8 251 6 
86 2 35 1 160 1 18 3 67 1 253 3 164 1 188 1 141 1 165 1 142 1 5 2 71 1 146 1 148 1 221 3 195 1 128 2 8 4 330 1 131 1 30 1 311 2 177 1 84 3 251 2 
207 1 86 3 35 1 160 2 18 4 67 1 253 4 164 2 188 2 141 1 165 1 142 1 5 3 72 1 71 2 146 1 148 2 221 4 195 2 264 1 128 4 8 7 330 2 131 1 30 1 311 4 177 1 84 5 251 4 
76 1 108 1 323 1 
76 1 92 1 
252 1 
219 1 76 1 57 1 
228 1 76 1 
76 1 57 1 
219 1 304 1 108 2 76 3 57 1 337 1 
261 1 158 1 218 1 168 1 148 1 212 3 41 4 350 1 152 2 227 1 282 3 188 1 301 7 82 1 97 1 314 1 302 2 
261 1 158 1 218 1 168 1 148 1 212 3 41 4 350 1 152 2 227 1 282 3 188 1 301 7 82 1 97 1 314 1 302 2 
261 1 218 1 158 1 168 1 148 1 54 1 212 3 41 4 350 1 152 2 227 1 282 3 188 1 301 7 82 1 97 1 314 1 302 2 
110 2 158 1 115 1 160 1 212 6 41 5 238 1 282 4 301 11 188 1 97 1 241 1 302 1 261 1 168 2 71 1 147 1 74 1 148 1 327 1 194 1 195 1 265 1 246 2 350 1 225 1 152 2 227 2 80 1 157 1 
110 4 15 1 115 2 212 4 41 5 136 1 282 4 188 1 301 9 97 1 302 2 261 1 218 1 168 1 148 1 194 2 327 1 265 2 225 2 350 1 152 3 227 1 82 1 314 1 
274 1 298 1 180 1 230 1 231 1 277 1 279 1 17 1 93 1 43 1 137 1 163 1 25 1 120 1 123 2 326 1 73 1 262 1 289 1 305 1 223 1 266 1 332 1 200 1 156 1 14 1 
274 1 298 1 180 3 231 1 89 1 277 1 279 1 17 1 211 1 93 3 43 1 137 1 45 1 140 2 25 1 120 1 122 1 123 2 326 1 73 1 262 1 305 1 223 1 266 1 79 1 332 1 200 1 11 1 179 1 156 1 14 1 
298 1 180 2 231 1 89 1 277 1 17 1 279 1 211 1 93 2 43 1 140 2 25 1 122 1 123 2 326 1 73 1 262 1 305 1 223 1 266 1 79 1 332 1 200 1 11 1 179 1 14 1 
61 1 180 1 298 2 167 1 73 1 231 1 262 2 277 1 127 1 305 2 76 1 57 1 184 1 93 1 43 1 137 1 309 1 332 1 45 1 284 1 260 1 14 2 120 1 
274 1 298 1 180 1 230 1 231 1 277 1 279 1 17 1 93 1 43 1 137 1 163 1 25 1 120 1 122 1 123 2 326 1 73 1 262 1 305 1 223 1 266 1 332 1 200 1 156 1 14 1 
281 1 
86 2 181 2 1 1 231 1 277 2 235 1 236 1 43 2 96 1 187 1 141 1 3 1 4 1 288 1 146 1 150 2 290 1 57 1 58 2 8 2 199 1 291 1 59 2 332 1 294 1 295 2 155 2 251 2 61 1 113 1 18 5 118 1 67 1 253 2 254 3 68 1 22 1 341 4 216 1 165 1 343 6 260 2 166 1 125 1 73 2 222 2 221 5 29 1 127 1 172 1 76 1 306 1 131 1 226 1 84 2 
1 1 113 1 18 3 118 1 235 1 254 1 236 1 96 1 22 1 187 1 341 2 216 1 3 1 343 2 288 1 125 1 346 1 221 3 172 1 199 1 291 1 295 1 
1 1 113 1 18 3 118 1 235 1 67 1 253 1 254 1 236 1 96 1 22 1 187 1 341 3 216 1 3 1 343 1 288 1 125 1 346 1 221 3 172 1 199 1 291 1 155 1 
1 1 113 1 18 3 118 1 235 1 254 1 67 1 253 1 236 1 96 1 22 1 187 1 341 3 216 1 3 1 343 2 288 1 125 1 346 1 221 3 222 1 172 1 199 1 291 1 295 1 155 1 
86 2 181 2 1 1 235 1 236 1 96 1 187 1 44 1 189 1 141 1 3 1 4 1 288 1 53 1 150 2 290 1 58 2 291 1 199 1 59 2 295 4 155 4 251 1 113 1 64 1 65 1 18 5 118 1 254 3 67 5 253 5 22 1 341 6 216 1 165 1 343 7 125 1 346 1 222 4 221 5 172 1 131 1 226 1 84 1 
86 2 181 2 1 1 235 1 236 1 96 1 187 1 141 1 3 1 4 1 288 1 150 2 290 1 58 2 291 1 199 1 8 2 59 2 295 2 294 1 155 2 251 1 113 1 18 4 118 1 254 2 253 2 67 1 22 1 341 4 216 1 165 1 343 4 125 1 221 4 222 2 172 1 226 1 131 1 84 1 
86 2 181 2 1 1 113 1 64 1 18 4 118 1 235 1 253 1 67 1 254 2 236 1 96 1 22 1 187 1 341 4 189 1 216 1 165 1 141 1 3 1 343 4 4 1 288 1 125 1 222 2 221 4 53 1 150 2 290 1 172 1 58 2 199 1 291 1 226 1 131 1 59 2 295 2 155 2 84 1 251 1 
86 2 181 2 1 1 113 1 64 1 18 4 118 1 235 1 253 1 67 1 254 2 236 1 96 1 22 1 187 1 341 4 189 1 216 1 165 1 141 1 3 1 343 4 4 1 288 1 125 1 222 2 221 4 53 1 150 2 290 1 172 1 58 2 199 1 291 1 226 1 131 1 59 2 295 2 155 2 84 1 251 1 
1 1 113 1 334 1 90 2 18 4 118 1 235 1 253 1 67 1 254 2 236 1 96 1 22 1 187 1 341 4 189 1 216 1 165 1 141 1 3 1 343 4 4 1 288 1 125 1 222 2 221 4 290 1 172 1 58 2 8 2 199 1 291 1 268 1 131 1 175 2 59 2 107 1 295 2 155 2 84 1 251 1 
86 2 181 2 1 1 113 1 64 1 18 4 118 1 235 1 253 1 67 1 254 2 236 1 96 1 22 1 187 1 44 1 341 5 189 1 216 1 141 1 165 1 3 1 343 5 4 1 288 1 125 1 221 4 222 3 53 1 150 2 290 1 172 1 58 2 199 1 291 1 226 1 131 1 59 2 295 3 155 3 84 1 251 1 
86 2 181 2 1 1 113 1 64 1 18 4 118 1 235 1 253 1 67 1 254 2 236 1 96 1 22 1 187 1 44 1 341 5 189 1 216 1 141 1 165 1 3 1 343 5 4 1 288 1 125 1 221 4 222 3 53 1 150 2 290 1 172 1 58 2 199 1 291 1 226 1 131 1 59 2 295 3 155 3 84 1 251 1 
1 1 90 2 235 1 236 1 96 1 187 1 141 1 3 1 4 1 288 1 290 1 58 2 291 1 199 1 8 2 59 2 295 2 294 1 155 2 251 1 113 1 334 1 18 4 118 1 254 2 67 1 253 1 22 1 341 4 216 1 165 1 343 4 125 1 221 4 222 2 172 1 131 1 175 2 84 1 
110 2 115 1 232 1 212 3 41 3 282 2 188 1 301 6 139 2 191 1 323 1 302 1 261 1 218 1 194 1 148 1 347 1 265 1 307 1 225 1 350 1 152 2 154 1 81 1 82 1 314 1 
110 4 115 2 16 1 160 2 66 1 232 1 162 1 212 6 41 8 237 1 282 2 301 14 188 2 139 1 191 11 241 1 46 1 71 2 147 1 194 2 148 1 126 1 347 4 195 1 265 2 197 1 246 3 225 2 152 1 227 1 80 3 81 2 154 11 
1 2 231 1 277 1 232 1 278 1 41 1 43 1 187 2 139 1 46 1 286 1 144 1 243 1 194 1 197 1 198 1 57 1 291 1 331 1 332 1 110 2 115 1 16 1 212 1 19 1 301 2 216 1 260 1 121 1 303 1 219 1 73 1 347 1 265 1 348 1 76 1 308 1 225 1 81 1 353 1 
1 3 231 2 277 1 232 3 41 14 43 1 282 6 187 3 188 5 139 3 191 7 46 1 286 1 193 1 144 2 325 2 243 1 51 2 194 3 148 5 195 2 197 1 198 2 57 2 291 1 152 5 248 2 331 2 154 7 332 2 110 6 115 3 16 1 116 2 160 2 212 13 19 1 301 27 216 1 257 2 260 1 302 1 261 2 218 1 219 2 71 2 73 1 347 7 265 3 348 1 76 2 173 1 350 2 308 1 225 3 227 1 81 3 82 1 352 1 314 2 
110 2 61 1 0 1 231 2 115 1 277 2 232 1 212 1 41 1 43 2 301 2 321 1 285 1 260 1 46 1 219 1 73 2 194 1 170 1 196 1 265 1 127 1 76 2 197 1 57 2 225 1 293 1 81 1 332 3 202 1 
110 2 1 1 115 1 16 1 160 1 232 1 212 2 41 1 20 1 282 1 187 1 188 1 301 3 216 1 191 1 286 1 324 1 71 1 194 1 148 1 347 1 195 1 265 1 348 1 267 1 225 1 152 1 154 1 81 1 
110 2 71 1 194 1 347 1 115 1 232 1 265 1 41 2 307 1 225 1 227 1 282 1 154 1 81 1 301 2 188 1 250 1 191 1 
110 2 194 1 148 1 347 1 195 1 115 1 232 1 265 1 91 1 212 2 307 1 225 1 152 1 282 1 154 1 81 1 301 2 191 1 
110 2 115 1 160 1 232 1 212 2 41 2 282 2 188 1 301 4 191 2 71 1 194 1 148 1 347 2 195 1 265 1 307 1 225 1 152 1 227 1 81 1 154 2 
110 2 71 1 194 1 347 1 115 1 232 1 265 1 41 2 225 1 227 1 282 1 154 1 81 1 301 2 188 1 321 1 250 1 191 1 
110 2 194 1 148 1 347 1 195 1 115 1 232 1 265 1 91 1 212 2 225 1 152 1 282 1 154 1 81 1 301 2 321 1 191 1 
110 2 115 1 160 1 232 1 212 2 41 2 282 2 188 1 301 4 321 1 191 2 71 1 194 1 148 1 347 2 195 1 265 1 225 1 152 1 227 1 81 1 154 2 
110 2 115 1 160 1 232 1 212 2 41 2 282 2 301 4 188 1 191 2 71 1 194 1 148 1 347 2 195 1 265 1 225 1 152 1 227 1 81 1 154 2 
110 2 1 1 231 1 115 1 277 1 232 1 212 1 19 1 41 1 43 1 187 1 301 2 139 1 260 1 46 1 144 1 219 1 73 1 194 1 265 1 197 1 198 1 76 1 57 1 291 1 225 1 331 1 248 1 81 1 332 1 
110 2 1 1 231 1 115 1 277 1 232 1 212 1 19 1 43 1 187 1 301 1 139 1 260 1 46 1 219 1 220 1 73 1 194 1 265 1 198 1 76 1 57 1 291 1 225 1 31 1 81 1 332 1 85 1 
110 2 115 1 160 1 16 1 232 1 212 2 41 2 282 2 188 1 301 4 191 2 71 1 194 1 148 1 347 2 195 1 265 1 225 1 152 1 227 1 81 1 154 2 
110 2 1 1 231 1 115 1 277 1 160 1 232 1 212 2 41 2 43 1 282 1 187 1 301 4 188 1 191 2 144 1 71 1 219 1 51 1 73 1 148 1 194 1 195 1 347 2 289 1 265 1 198 1 76 1 57 1 225 1 152 1 331 1 248 1 154 2 81 1 332 1 
110 2 1 1 115 1 16 1 160 1 232 1 212 1 41 2 20 1 282 1 187 1 24 1 188 1 301 3 216 1 191 1 286 1 324 1 71 1 148 1 194 1 195 1 347 1 265 1 348 1 225 1 227 1 81 1 154 1 
205 2 296 1 110 6 88 1 33 1 15 1 159 1 115 3 161 1 160 4 316 1 233 1 212 21 41 20 282 8 301 41 188 5 241 3 302 1 261 1 48 1 218 1 145 4 71 4 147 1 327 1 194 3 148 5 169 1 195 4 265 3 7 1 329 1 246 4 247 1 350 1 225 3 152 4 227 4 80 3 82 1 314 1 60 1 
205 2 296 1 110 8 88 1 33 1 15 1 159 1 115 4 161 1 160 4 316 1 233 1 212 18 41 20 282 7 301 38 188 5 241 3 302 1 261 1 48 1 218 1 145 4 71 4 147 1 327 2 194 4 148 4 169 1 195 3 265 4 7 1 329 1 246 4 247 1 350 1 225 4 152 4 227 3 80 3 82 1 314 1 60 1 
205 1 296 1 110 4 88 1 33 1 15 1 159 1 115 2 161 1 160 7 66 2 316 1 233 1 212 25 41 27 282 14 301 52 188 8 241 2 302 1 261 1 48 1 218 1 145 4 71 7 147 2 327 1 194 2 148 8 195 7 265 2 7 1 329 1 246 4 350 1 225 2 152 7 227 7 80 4 82 1 314 1 60 1 
205 1 296 1 110 4 88 1 33 2 15 1 115 2 160 3 336 1 316 1 233 1 212 10 41 9 282 6 301 19 188 3 241 1 145 2 71 3 147 1 194 2 148 3 195 3 265 2 246 2 247 1 225 2 152 3 227 3 80 1 
205 2 296 2 110 6 88 1 33 1 15 1 115 3 159 1 161 1 160 3 316 1 233 1 212 12 41 14 282 4 301 26 188 3 241 2 48 1 145 4 71 3 327 2 148 2 194 3 195 2 265 3 7 1 329 1 246 2 225 3 152 2 227 2 80 2 60 1 
110 2 1 2 231 1 115 1 277 2 16 1 209 1 232 1 36 1 212 1 41 1 43 2 187 2 301 2 216 2 285 2 46 1 287 1 47 1 217 1 73 2 194 1 265 1 76 1 197 1 57 1 225 1 293 1 81 1 332 1 134 1 
109 1 274 1 122 1 123 2 87 1 326 1 73 2 231 1 262 1 277 2 289 1 279 1 17 1 223 1 266 1 43 2 106 1 332 1 25 1 
274 1 122 1 123 2 326 1 73 1 262 1 231 1 277 1 279 1 17 1 223 1 266 1 43 1 106 1 153 1 332 1 25 1 
109 1 61 1 73 1 231 1 262 1 277 1 127 1 76 1 57 1 43 1 310 1 309 1 332 1 260 1 
109 1 274 1 122 1 123 2 87 1 326 1 73 1 262 1 231 1 277 1 279 1 17 1 223 1 266 1 43 1 106 1 332 1 25 1 
183 1 
253 1 67 1 213 1 102 1 84 1 251 1 323 1 
86 1 181 1 18 1 253 2 254 1 67 1 141 1 165 1 343 1 4 1 221 1 150 1 8 1 226 1 131 1 84 1 251 1 
4 1 219 1 73 1 304 1 231 1 277 1 76 2 57 1 92 1 43 1 131 1 332 2 165 1 141 1 240 1 260 1 259 1 
86 3 114 1 159 1 161 1 160 2 18 1 254 1 253 5 67 2 319 1 188 2 141 2 165 2 241 1 343 1 4 2 48 1 71 2 146 1 221 1 148 2 195 2 245 1 128 5 306 1 224 2 329 1 8 6 246 1 131 2 80 1 311 5 84 8 251 5 60 1 
62 1 1 1 18 1 338 1 318 1 20 1 187 1 188 2 256 1 216 1 141 1 165 1 286 1 261 1 4 1 221 1 148 1 53 1 245 1 348 1 224 2 173 1 291 1 350 1 131 1 314 1 84 2 251 2 
4 1 102 1 67 1 253 1 213 1 131 1 165 1 141 1 84 1 251 1 
86 5 325 1 71 2 148 2 195 2 245 1 160 2 128 5 224 2 253 5 8 10 188 2 311 5 84 5 251 5 
253 1 67 1 254 1 221 1 18 1 343 1 
61 1 231 1 277 4 18 3 254 2 68 1 43 4 69 1 322 2 141 2 165 2 142 1 260 2 343 4 4 1 166 1 73 4 146 2 75 1 221 3 127 1 76 1 57 1 306 2 131 2 332 1 178 1 84 2 251 2 
110 2 62 1 1 3 231 1 115 1 277 1 232 1 212 1 20 2 43 1 187 3 301 1 139 1 216 2 46 1 260 1 286 2 192 1 144 1 219 1 73 1 194 1 265 1 348 2 198 1 76 1 57 1 225 1 248 1 331 1 81 1 332 1 
86 2 4 1 146 1 128 2 306 1 67 2 253 4 8 4 131 1 311 2 165 1 141 1 84 1 251 2 302 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
94 1 13 1 
49 1 55 1 
110 2 15 1 159 1 115 1 212 4 41 4 282 2 188 1 301 8 241 1 302 1 261 1 218 1 148 1 194 1 265 1 246 1 225 1 350 1 152 2 80 1 82 1 314 1 
110 4 15 1 159 1 115 2 160 1 212 5 41 6 21 1 282 3 301 11 188 2 241 1 302 1 261 1 218 1 71 1 147 1 148 1 194 2 265 2 246 2 350 1 225 2 152 2 227 1 80 1 82 1 314 1 
110 6 15 1 159 1 115 3 161 1 160 2 212 10 41 9 21 1 282 4 301 19 188 3 241 1 302 1 261 1 48 1 218 1 71 2 194 3 148 3 327 1 195 2 265 3 329 1 246 1 350 1 225 3 152 3 227 1 80 1 82 1 314 1 60 1 
110 6 15 1 159 1 115 3 160 2 161 1 212 7 41 10 21 1 282 5 301 17 188 3 241 1 302 1 261 1 48 1 218 1 71 2 327 1 194 3 148 2 195 1 265 3 329 1 246 1 350 1 225 3 152 3 227 2 80 1 82 1 314 1 60 1 
110 2 15 1 159 1 115 1 212 4 41 4 282 2 188 1 301 8 241 1 302 1 261 1 218 1 148 1 194 1 265 1 246 1 225 1 350 1 152 2 80 1 82 1 314 1 
110 2 15 1 159 1 115 1 160 2 161 1 212 6 41 6 282 2 301 12 188 2 241 1 48 1 71 2 194 1 148 2 195 2 265 1 329 1 246 1 225 1 152 1 227 1 80 1 60 1 
110 8 15 1 159 1 115 4 161 1 160 2 212 8 41 10 21 1 282 5 301 18 188 3 241 1 302 1 261 1 48 1 218 1 71 2 194 4 148 2 327 2 195 1 265 4 329 1 246 1 350 1 225 4 152 3 227 2 80 1 82 1 314 1 60 1 
110 8 15 1 159 1 115 4 161 1 160 3 212 7 41 9 282 6 301 16 188 3 241 1 48 1 71 3 194 4 148 2 327 2 195 2 265 4 329 1 246 1 225 4 247 1 152 3 227 3 80 1 60 1 
261 3 218 2 148 1 212 4 41 3 350 3 152 3 227 3 282 6 301 7 82 1 188 1 314 1 
110 8 15 1 159 1 115 4 161 1 160 2 212 8 41 10 282 4 301 18 188 3 241 1 302 1 261 1 48 1 218 1 71 2 194 4 148 2 327 2 195 1 265 4 329 1 246 1 350 1 225 4 247 1 152 3 227 1 80 1 82 1 314 1 60 1 
110 4 261 1 218 1 148 1 194 2 327 1 115 2 265 2 212 4 41 4 225 2 350 1 152 2 227 1 282 3 188 1 301 8 82 1 314 1 302 1 
261 1 218 1 148 1 212 3 41 3 350 1 152 2 282 2 82 1 188 1 301 6 314 1 302 1 323 1 
110 2 71 1 148 1 194 1 195 1 115 1 160 1 265 1 212 2 41 2 225 1 152 1 21 1 227 1 282 2 188 1 301 4 
71 1 147 1 148 1 195 1 160 1 212 4 41 3 246 2 152 1 227 1 80 1 282 2 301 7 188 1 241 1 
110 4 115 2 160 2 66 1 212 12 41 11 282 9 188 3 301 23 302 1 261 2 218 1 71 2 147 1 74 1 148 3 327 2 194 2 126 1 195 2 265 2 246 2 350 2 225 2 152 5 227 4 80 2 82 1 314 1 
246 1 301 1 212 1 
41 1 80 1 301 1 
110 2 325 1 71 1 194 1 148 1 195 1 115 1 160 1 265 1 212 3 41 3 225 1 21 1 152 2 227 1 282 3 301 6 188 1 
110 2 15 1 159 1 115 1 160 2 161 1 212 6 41 6 282 2 301 12 188 2 241 1 48 1 71 2 194 1 148 2 195 2 265 1 329 1 246 1 225 1 152 1 227 1 80 1 60 1 
261 1 148 1 212 3 41 3 350 1 152 1 227 1 282 2 188 1 301 6 314 1 
261 1 110 2 218 1 74 1 327 1 194 1 115 1 265 1 212 2 41 1 350 1 225 1 152 1 227 1 282 2 301 3 82 1 
110 2 261 2 194 1 15 1 148 2 115 1 265 1 212 5 173 1 41 5 225 1 350 2 152 3 227 2 282 5 301 10 188 2 314 1 
110 2 71 1 15 1 194 1 115 1 265 1 41 2 225 1 227 1 282 1 188 1 301 2 
110 2 71 1 148 1 15 1 194 1 195 1 115 1 160 1 265 1 212 2 41 2 225 1 152 1 227 1 282 2 188 1 301 4 
110 6 261 1 74 1 327 1 15 1 194 3 115 3 265 3 212 2 41 1 247 1 225 3 350 1 152 1 227 1 282 2 301 3 
110 8 15 1 115 4 212 8 41 7 21 1 282 6 238 1 188 2 301 15 241 1 261 2 218 1 74 1 148 2 194 4 327 1 265 4 173 1 246 1 247 1 225 4 350 2 152 3 227 3 80 1 82 1 314 1 
112 1 187 1 1 1 139 1 216 1 283 1 172 1 
112 1 6 1 1 1 182 1 172 1 105 1 255 1 185 1 187 1 139 1 216 1 283 1 
61 1 43 1 73 1 332 1 231 1 277 1 127 1 76 1 57 1 260 1 323 1 
219 1 73 1 1 2 231 1 277 1 76 1 198 1 348 1 57 1 19 1 291 1 308 1 43 1 187 2 331 1 332 1 139 1 216 1 286 1 260 1 
63 1 1 2 231 1 277 1 19 1 43 1 22 1 187 2 139 1 216 2 322 1 286 1 288 1 219 2 73 1 348 2 198 1 76 3 57 2 291 2 308 1 331 1 332 1 228 1 
63 1 1 2 231 1 277 1 19 1 43 1 22 1 187 2 139 1 216 2 322 1 286 1 288 1 219 2 73 1 348 2 198 1 76 3 57 2 291 2 308 1 31 1 332 1 228 1 
62 1 63 1 1 1 231 1 113 1 277 1 18 2 92 1 338 1 318 1 67 1 253 1 20 1 43 1 95 1 187 1 256 1 216 1 322 1 286 1 343 1 219 1 73 1 221 2 348 1 76 4 57 1 291 1 272 1 332 1 228 1 108 1 
62 1 63 1 1 1 231 1 113 1 277 1 18 2 38 1 92 1 338 1 318 1 67 1 253 1 20 1 43 1 187 1 256 1 216 1 322 1 286 1 343 1 219 1 73 1 221 2 348 1 76 4 57 1 291 1 332 1 228 1 108 1 
43 1 73 1 332 1 231 1 277 1 78 1 
28 1 219 1 73 1 304 1 231 1 277 1 170 1 196 1 76 1 57 1 43 1 332 2 260 1 
1 2 231 1 277 1 232 2 41 7 43 1 187 2 282 4 188 3 139 3 191 1 286 1 144 1 51 1 194 2 148 3 289 1 198 1 57 1 291 1 152 3 331 1 248 1 154 1 332 1 110 4 115 2 116 1 209 1 16 1 212 6 19 1 301 13 216 1 302 1 261 2 218 1 219 1 73 1 347 1 265 2 348 1 76 1 173 1 308 1 225 2 350 2 227 1 81 2 82 1 314 2 
275 1 113 1 277 1 18 3 38 1 92 1 253 1 67 1 254 1 213 1 43 1 339 1 141 2 165 2 260 1 343 2 4 2 5 1 102 1 73 1 75 1 221 3 171 1 76 2 131 2 84 1 108 1 251 1 
219 1 73 1 304 1 231 1 277 1 252 1 76 2 57 1 78 1 43 1 332 2 240 1 108 1 
61 1 219 1 0 1 73 2 231 2 170 1 277 2 289 1 196 1 127 1 76 2 57 2 43 2 332 3 202 1 260 1 
219 1 73 1 0 1 231 1 277 1 170 1 196 1 76 1 57 1 43 1 332 2 202 1 344 1 
123 1 326 1 73 1 231 1 277 1 223 1 266 1 43 1 332 1 260 1 
122 1 73 2 231 1 289 1 277 2 76 1 57 1 43 2 332 1 134 1 287 1 
61 1 219 1 0 1 73 3 231 3 170 1 277 3 289 1 196 1 127 1 76 4 57 3 43 2 215 1 332 4 134 1 83 1 202 1 260 1 
27 1 61 1 219 1 0 1 73 3 231 3 170 1 277 3 289 1 196 1 127 1 76 4 57 3 43 2 332 4 134 1 83 1 202 1 260 1 
219 1 73 1 1 2 231 1 277 1 76 1 198 1 348 1 57 1 19 1 291 1 308 1 43 1 187 2 31 1 332 1 139 1 216 1 286 1 260 1 
28 1 219 1 73 1 304 1 231 1 277 1 170 1 196 1 76 1 57 1 43 1 332 2 322 1 
23 1 139 1 34 1 234 1 39 1 
288 1 5 1 221 2 113 1 34 2 18 2 234 2 39 1 253 1 67 1 291 1 236 1 299 1 351 1 22 1 23 2 292 1 132 1 139 1 
23 1 187 1 1 1 216 1 34 1 36 1 47 1 217 1 39 1 
299 1 132 1 39 1 
79 1 11 1 89 1 323 1 
79 1 93 1 180 1 137 1 11 1 89 1 120 1 
180 1 305 1 14 1 
180 3 50 1 230 1 89 1 349 1 93 3 79 1 137 1 214 2 11 1 12 1 120 1 
79 1 93 2 269 1 180 2 137 1 11 1 89 1 140 1 120 1 
229 1 180 1 123 1 230 1 279 1 266 1 93 1 137 1 271 1 11 1 120 1 
93 1 180 1 137 1 230 1 11 1 89 1 120 1 
79 1 93 1 180 1 137 1 230 1 89 2 120 1 
180 2 230 1 345 1 89 1 263 1 328 1 93 2 137 2 11 1 120 2 
229 1 180 3 230 1 89 1 56 1 210 1 79 1 93 3 137 1 140 2 11 2 258 1 120 1 
180 2 123 2 230 1 89 1 279 1 223 1 77 1 266 1 79 1 93 2 137 1 11 1 140 1 25 1 120 1 
229 1 180 4 230 1 89 1 210 1 79 1 93 4 40 1 269 1 137 2 140 2 11 2 120 2 
79 1 93 1 180 1 137 1 230 1 11 1 89 1 120 1 
229 1 180 4 89 2 211 1 210 1 349 1 79 2 93 4 214 1 137 1 12 1 140 2 11 3 120 1 
180 2 111 1 230 1 89 1 37 1 93 2 79 1 137 1 11 1 140 1 203 1 120 1 
180 3 230 1 89 1 349 1 93 3 79 1 137 1 214 2 11 1 119 1 12 2 120 1 
176 1 190 2 11 2 130 1 
93 1 180 1 137 1 230 1 133 1 120 1 
79 1 93 2 180 2 137 1 230 1 11 1 89 1 140 1 258 1 120 1 
9 1 
79 1 93 1 180 1 137 1 230 1 11 1 89 1 120 1 
180 3 230 1 89 1 93 3 79 1 137 1 214 1 140 1 11 1 258 1 120 1 
229 1 11 1 211 1 210 1 
11 1 89 1 

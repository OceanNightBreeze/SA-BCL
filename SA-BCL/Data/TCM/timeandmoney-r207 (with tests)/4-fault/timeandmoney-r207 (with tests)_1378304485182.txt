#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
19 4 257 2 300 2 143 1 281 1 2 1 144 1 262 1 93 3 286 1 306 2 123 6 225 1 63 2 29 1 68 1 332 2 187 1 127 9 232 2 51 9 314 1 271 1 164 1 75 5 297 1 137 1 139 2 
19 4 257 2 300 2 143 1 281 1 2 1 144 1 262 1 93 3 286 1 306 2 123 6 225 1 63 2 29 1 68 1 187 1 332 2 127 9 232 2 51 9 314 1 271 1 164 1 75 5 297 1 137 1 139 2 
19 5 257 2 300 2 143 1 281 1 2 1 144 1 262 1 93 4 286 1 306 2 123 7 225 1 63 2 29 1 68 1 187 1 332 2 127 10 232 2 51 10 314 1 271 1 164 1 75 6 297 1 137 1 139 2 
19 3 257 2 300 2 143 1 281 1 2 1 144 1 262 1 93 2 286 1 306 2 123 4 225 1 63 2 29 1 68 1 187 1 332 1 127 7 232 2 51 7 314 1 271 1 164 1 75 4 297 1 139 2 
19 2 63 1 225 1 257 1 300 1 29 1 332 2 127 4 51 4 271 1 164 1 93 1 75 3 297 1 137 1 306 1 139 1 123 3 
225 1 257 1 63 1 59 1 29 1 127 2 51 2 251 1 232 1 314 1 164 1 75 1 265 1 286 1 306 1 139 1 
19 1 225 1 257 2 29 1 281 1 127 3 51 3 232 1 164 1 93 1 75 2 139 2 123 1 
19 4 257 2 300 1 281 1 2 1 93 3 121 1 306 1 123 7 225 1 63 1 29 1 68 1 332 2 127 9 232 1 51 9 33 1 271 1 164 1 75 5 297 1 137 1 139 2 
19 4 257 2 300 1 281 1 2 1 93 3 121 1 306 1 123 7 225 1 63 1 29 1 68 1 332 2 127 9 232 1 51 9 33 1 271 1 164 1 75 5 297 1 137 1 139 2 
132 1 9 1 10 1 
226 2 369 1 10 1 
217 2 163 2 228 1 205 2 260 1 23 2 219 2 276 2 
200 1 239 1 114 1 322 1 205 2 260 1 23 3 301 1 325 1 302 1 243 1 327 1 222 2 305 2 307 1 28 1 247 1 125 1 186 2 267 1 228 1 128 1 270 1 72 2 74 2 217 2 193 1 162 1 135 1 163 2 79 1 138 1 219 3 346 1 108 1 319 1 276 2 
217 1 163 1 165 1 104 1 95 1 205 1 260 1 23 1 219 1 276 1 
364 1 140 1 10 1 23 1 71 1 132 1 53 1 165 1 44 1 245 1 360 1 219 1 109 1 276 1 
364 1 10 1 205 1 23 1 71 2 217 1 132 1 163 1 165 1 44 2 245 1 360 1 219 1 109 1 276 1 
120 1 15 1 44 1 71 1 91 1 
146 1 120 1 132 1 15 1 44 2 10 1 213 1 71 2 
120 1 44 1 71 1 
205 1 260 1 23 1 71 1 217 1 163 1 15 1 165 1 104 1 44 1 95 1 219 1 318 1 276 1 
10 1 
146 1 153 1 120 1 132 1 15 1 44 2 10 1 71 2 
290 1 259 1 188 1 10 1 101 1 175 1 71 5 216 1 129 2 146 1 160 2 120 2 132 1 15 2 44 5 330 1 180 1 168 2 82 1 
228 1 9 1 
288 1 228 2 205 1 23 2 217 1 163 1 105 1 219 2 276 2 
190 1 236 1 361 1 
239 1 114 1 228 1 23 1 72 1 270 1 302 1 24 1 327 1 162 1 135 1 222 1 305 1 138 1 219 1 28 1 
239 1 114 1 86 1 23 2 270 1 72 1 302 1 190 1 217 1 162 1 327 1 135 1 163 1 222 1 305 1 138 1 219 2 28 1 83 1 276 1 
288 1 86 1 228 1 174 1 205 1 23 5 231 1 217 4 339 1 53 1 163 4 219 5 83 2 276 5 
217 2 163 2 165 1 104 1 23 2 219 2 73 1 276 2 
217 3 163 3 228 1 205 1 23 3 219 3 83 1 276 3 
217 1 163 1 165 1 104 1 23 1 219 1 276 1 
217 1 288 1 163 1 165 1 105 1 205 1 23 1 219 1 276 1 
200 1 239 1 114 1 86 1 322 1 282 1 205 2 260 1 23 4 301 1 325 1 302 1 327 1 222 1 44 1 305 1 245 1 360 1 28 1 364 1 247 1 288 1 125 1 186 1 267 1 228 1 128 1 270 1 71 1 72 1 74 2 217 3 162 1 135 1 163 3 103 1 165 1 138 1 219 4 346 1 109 1 319 1 276 3 83 1 
217 1 339 1 53 1 163 1 228 1 23 2 219 2 276 2 83 1 
364 1 288 1 86 1 282 1 205 1 10 1 23 3 71 1 217 3 163 3 317 1 165 1 44 1 245 1 360 1 219 3 109 1 83 2 276 3 
288 1 205 1 23 2 190 1 217 2 163 2 236 1 219 2 83 1 276 2 
239 1 114 1 228 1 23 1 72 1 270 1 302 1 327 1 162 1 135 1 222 1 305 1 138 1 219 1 28 1 
239 1 114 1 228 1 23 1 72 1 270 1 327 1 162 1 135 1 222 1 305 1 138 1 212 1 27 1 219 1 
237 1 200 1 352 1 322 1 325 1 243 2 328 1 264 1 361 2 96 1 248 1 125 1 267 1 186 4 215 1 249 1 128 2 190 2 74 2 236 2 342 1 166 1 346 1 348 1 
217 1 163 1 165 1 245 1 23 1 219 1 276 1 73 1 
39 1 310 1 
39 1 310 1 
39 1 310 1 99 1 167 1 
39 1 310 1 99 1 167 1 
99 1 167 1 
39 1 310 1 88 1 
39 1 310 1 88 1 
358 1 39 2 310 2 99 1 167 1 214 1 
39 1 284 1 310 1 
39 1 310 1 88 1 
277 1 39 1 310 1 
277 1 39 1 310 1 
277 1 39 1 310 1 
169 1 310 1 228 1 117 1 268 1 229 1 23 2 71 1 240 1 207 1 119 1 373 1 217 2 52 1 39 1 148 1 163 2 284 1 26 1 44 1 331 1 223 1 219 2 276 2 
169 3 36 1 310 2 171 1 155 2 117 1 333 1 372 1 10 1 71 2 119 2 373 2 358 1 39 2 26 2 44 2 331 2 46 1 18 1 
63 1 300 1 306 1 
63 1 265 1 306 1 
115 1 300 2 291 1 265 1 30 1 306 3 
115 1 300 1 291 1 265 1 306 2 60 1 
115 2 300 1 291 1 265 1 306 2 
237 1 204 1 4 1 205 1 146 1 208 2 244 1 328 1 149 2 95 1 44 5 246 1 47 1 10 1 101 2 160 1 217 1 163 1 15 4 165 1 104 1 166 1 342 1 219 1 168 1 259 1 260 1 23 1 120 1 368 1 64 2 226 4 369 2 69 1 371 1 188 3 268 1 71 5 129 1 132 1 318 1 276 1 
237 1 204 1 4 1 205 1 91 2 146 1 37 2 208 2 244 1 328 1 95 1 44 5 10 1 157 1 101 2 217 1 160 1 163 1 15 4 165 1 104 1 166 1 342 1 219 1 168 1 259 1 260 1 23 1 120 3 368 1 64 2 226 4 369 2 69 1 371 1 188 3 268 1 71 5 129 1 132 1 80 1 276 1 318 1 
204 1 205 1 260 1 23 1 208 1 149 1 95 1 44 3 246 1 47 1 368 1 64 1 226 1 371 1 188 1 268 1 10 1 101 2 129 1 71 3 216 1 217 1 160 1 132 1 163 1 15 2 165 1 104 1 166 1 342 1 219 1 168 1 276 1 318 1 
204 1 208 1 149 1 44 2 246 1 47 1 368 1 226 1 64 1 371 1 188 1 268 1 70 1 101 2 129 1 71 2 216 1 160 1 15 1 166 1 342 1 168 1 
135 1 9 1 324 1 
135 1 151 1 
159 1 
239 1 135 1 270 1 
135 1 21 1 
239 1 135 1 
239 1 135 3 98 1 324 2 270 1 252 1 
278 2 186 7 215 3 128 3 243 4 326 1 194 1 328 1 264 2 25 1 42 1 6 1 78 1 210 1 342 1 344 1 272 1 
278 2 186 7 215 3 128 3 243 4 326 1 194 1 328 1 264 2 25 1 42 1 6 1 78 1 210 1 342 1 344 1 272 1 
278 2 186 7 215 3 311 1 128 3 243 4 326 1 194 1 328 1 264 2 25 1 42 1 6 1 78 1 210 1 342 1 344 1 272 1 
200 1 237 3 278 3 172 1 243 16 326 5 42 1 25 2 328 4 264 5 6 1 210 2 362 1 62 3 367 1 368 3 125 1 267 1 154 1 186 31 215 10 334 1 128 15 102 1 292 1 74 2 194 2 78 2 166 3 342 4 344 1 272 1 275 4 346 1 
200 2 278 2 172 1 243 5 92 1 326 1 328 1 264 3 25 1 6 1 210 1 125 2 267 2 186 9 215 4 128 4 338 1 74 4 194 1 78 1 342 1 344 1 272 1 346 2 
257 1 114 1 300 1 116 1 145 1 265 1 222 1 305 1 306 2 123 1 63 1 225 1 184 1 29 1 30 1 31 1 127 2 72 1 51 2 232 1 131 1 164 1 34 1 75 1 136 1 138 1 274 1 139 1 107 1 106 1 
257 1 114 1 300 1 116 1 170 1 145 1 265 1 222 1 305 1 306 2 123 2 63 1 184 1 29 1 30 1 127 3 72 1 51 3 335 1 232 1 131 1 192 1 164 1 34 1 75 1 136 1 138 1 274 1 139 1 106 1 
63 1 184 1 114 1 300 1 170 1 116 1 29 1 30 1 145 1 127 2 51 2 72 1 232 1 131 1 192 1 164 1 75 1 265 1 136 1 222 1 305 1 138 1 306 2 274 1 123 2 
257 1 239 1 114 1 116 2 145 2 327 1 222 1 305 1 150 1 124 1 189 1 127 1 72 1 51 1 335 1 232 2 13 1 135 1 298 1 138 1 139 1 274 2 81 1 
257 1 114 1 300 1 116 1 170 1 145 1 265 1 222 1 305 1 306 2 63 1 225 1 184 1 30 1 127 1 72 1 51 1 232 1 131 1 34 1 136 1 138 1 274 1 139 1 107 1 106 1 
241 1 
239 1 140 1 3 2 90 2 146 3 242 1 327 2 43 1 44 5 245 1 289 2 10 2 11 1 101 2 337 1 294 2 160 1 161 1 13 1 53 1 165 1 54 2 219 1 168 1 109 1 350 1 113 1 114 1 58 2 259 1 173 1 23 1 120 6 222 2 305 2 360 1 364 1 309 4 226 2 369 2 189 1 188 2 371 1 71 5 129 1 72 2 132 1 316 2 135 1 234 1 35 1 196 1 138 1 199 1 276 1 
140 1 23 1 242 1 146 1 120 2 44 3 245 1 360 1 364 1 153 1 309 2 71 3 337 1 161 1 316 1 53 1 234 1 165 1 196 1 219 1 109 1 276 1 
140 1 58 1 23 1 242 1 146 1 120 1 44 3 245 1 360 1 364 1 153 1 309 3 10 1 71 3 337 1 161 1 132 1 53 1 234 1 165 1 196 1 219 1 109 1 276 1 
140 1 58 1 23 1 146 1 242 1 120 2 44 3 245 1 360 1 364 1 153 1 289 1 309 3 10 1 71 3 337 1 161 1 316 1 132 1 53 1 234 1 165 1 196 1 219 1 109 1 276 1 
203 1 140 1 3 2 90 2 146 3 242 1 43 1 44 5 245 1 211 1 153 1 289 4 10 5 101 1 337 1 160 1 294 2 161 1 296 1 53 1 16 1 165 1 54 2 219 1 109 1 168 1 58 4 259 1 173 1 23 1 120 7 360 1 364 1 309 6 185 1 369 2 188 1 71 5 129 1 316 4 132 5 234 1 196 1 276 1 
140 1 3 2 90 2 242 1 146 2 43 1 44 4 245 1 289 2 10 2 101 1 337 1 160 1 294 2 161 1 53 1 165 1 54 2 219 1 109 1 168 1 58 2 173 1 259 1 23 1 120 4 360 1 364 1 309 4 226 2 369 2 188 1 71 4 129 1 316 2 132 1 234 1 196 1 276 1 199 1 
203 1 140 1 58 2 173 1 259 1 3 2 23 1 90 2 146 2 242 1 120 4 43 1 44 4 211 1 245 1 360 1 364 1 289 2 309 4 369 2 188 1 10 1 101 1 71 4 129 1 337 1 294 2 160 1 161 1 132 1 316 2 53 1 234 1 16 1 165 1 196 1 54 2 219 1 168 1 109 1 276 1 
203 1 140 1 58 2 173 1 259 1 3 2 23 1 90 2 146 2 242 1 120 4 43 1 44 4 211 1 245 1 360 1 364 1 289 2 309 4 369 2 188 1 10 1 101 1 71 4 129 1 337 1 294 2 160 1 161 1 132 1 316 2 53 1 234 1 16 1 165 1 196 1 54 2 219 1 168 1 109 1 276 1 
140 1 58 2 259 1 3 2 23 1 146 2 242 1 120 4 147 1 43 1 329 2 44 4 211 1 245 1 360 1 364 1 289 2 309 4 226 2 188 1 10 1 101 1 71 4 129 1 337 1 160 1 161 1 132 1 316 2 53 1 234 1 165 1 196 1 54 2 343 1 273 2 345 1 219 1 168 1 109 1 276 1 
203 1 140 1 58 3 173 1 259 1 3 2 23 1 90 2 146 2 242 1 120 5 43 1 44 4 211 1 245 1 360 1 364 1 289 3 309 5 185 1 369 2 188 1 10 1 101 1 129 1 71 4 337 1 294 2 160 1 161 1 132 1 316 3 53 1 234 1 16 1 165 1 196 1 54 2 219 1 168 1 109 1 276 1 
203 1 140 1 58 3 173 1 259 1 3 2 23 1 90 2 146 2 242 1 120 5 43 1 44 4 211 1 245 1 360 1 364 1 289 3 309 5 185 1 369 2 188 1 10 1 101 1 129 1 71 4 337 1 294 2 160 1 161 1 132 1 316 3 53 1 234 1 16 1 165 1 196 1 54 2 219 1 168 1 109 1 276 1 
140 1 3 2 242 1 146 2 43 1 44 4 329 2 245 1 289 2 10 1 101 1 337 1 160 1 161 1 53 1 165 1 54 2 345 1 219 1 109 1 168 1 58 2 259 1 23 1 120 4 360 1 364 1 309 4 226 2 188 1 71 4 129 1 316 2 132 1 234 1 196 1 273 2 276 1 199 1 
200 1 278 1 322 1 325 1 243 3 25 1 264 2 328 1 6 1 361 1 248 1 125 1 267 1 186 6 215 2 228 2 9 1 128 3 190 1 74 2 236 1 78 1 342 1 344 1 272 1 346 1 
200 2 237 1 322 2 325 1 243 8 326 1 264 1 328 1 7 1 359 1 361 11 62 3 366 1 367 1 368 2 125 2 267 2 186 14 228 1 215 2 102 1 128 6 190 11 293 1 74 4 193 1 236 4 166 2 342 2 275 3 346 2 319 1 56 1 
200 1 239 1 114 1 86 1 322 1 23 2 325 1 302 1 243 1 327 1 24 1 263 1 222 1 305 1 181 1 359 1 28 1 125 1 267 1 186 2 228 1 270 1 72 1 128 1 12 1 217 1 74 2 193 1 162 1 135 1 163 1 236 1 138 1 219 2 346 1 276 1 83 1 319 1 
200 3 237 2 239 2 278 1 86 1 322 3 89 2 325 3 243 10 326 4 327 1 328 3 6 1 285 2 247 2 215 8 217 1 162 2 163 1 166 2 342 3 344 1 218 1 219 3 346 3 55 2 114 2 351 1 170 1 23 3 302 2 25 1 264 4 222 3 305 3 359 1 361 7 28 2 368 2 125 3 267 3 186 20 228 2 370 2 128 10 72 3 270 2 190 7 74 6 193 1 134 1 135 2 78 1 236 7 138 2 272 1 319 1 83 1 276 1 
200 2 239 2 221 1 114 2 170 1 322 2 23 1 325 2 243 1 303 1 357 1 327 2 222 8 305 8 248 1 65 1 125 2 267 2 186 2 31 1 189 1 72 7 128 1 217 1 74 4 193 1 13 1 133 1 135 3 163 1 195 1 138 2 219 1 346 2 108 2 276 1 83 1 112 1 319 1 
200 1 237 1 322 1 205 1 23 1 325 1 243 1 264 1 328 1 361 1 359 1 288 1 368 1 125 1 267 1 186 3 215 1 230 1 128 2 190 1 74 2 217 1 163 1 236 1 166 1 342 1 219 1 346 1 276 1 
200 1 248 1 125 1 186 2 267 1 215 1 322 1 249 1 325 1 190 1 74 2 243 2 326 1 236 1 166 1 342 1 361 1 346 1 
200 1 237 1 248 1 125 1 186 2 267 1 215 1 322 1 325 1 128 2 190 1 74 2 264 1 328 1 236 1 361 1 346 1 348 1 
200 1 237 1 322 1 325 1 243 2 326 1 328 1 264 1 361 2 248 1 368 1 125 1 267 1 186 4 215 2 128 2 190 2 74 2 236 2 342 1 166 1 346 1 
200 1 125 1 186 2 267 1 215 1 322 1 249 1 325 1 190 1 74 2 243 2 326 1 303 1 236 1 166 1 342 1 361 1 346 1 
200 1 237 1 125 1 186 2 267 1 215 1 322 1 325 1 128 2 190 1 74 2 303 1 264 1 328 1 236 1 361 1 346 1 348 1 
200 1 237 1 322 1 325 1 243 2 303 1 326 1 328 1 264 1 361 2 368 1 125 1 267 1 186 4 215 2 128 2 190 2 74 2 236 2 342 1 166 1 346 1 
237 1 200 1 368 1 125 1 267 1 186 4 215 2 322 1 128 2 325 1 190 2 74 2 243 2 326 1 264 1 328 1 236 2 166 1 342 1 361 2 346 1 
200 1 239 1 114 1 322 1 23 1 325 1 302 1 243 1 327 1 222 1 305 1 28 1 247 1 125 1 186 2 267 1 228 1 270 1 72 1 128 1 74 2 193 1 162 1 135 1 138 1 219 1 346 1 319 1 
200 1 239 1 114 1 322 1 5 1 23 1 325 1 243 1 327 1 222 1 305 1 27 1 212 1 125 1 186 2 267 1 228 1 270 1 72 1 128 1 74 2 193 1 162 1 135 1 138 1 219 1 346 1 319 1 
200 1 237 1 322 1 325 1 243 2 326 1 328 1 264 1 359 1 361 2 368 1 125 1 267 1 186 4 215 2 128 2 190 2 74 2 236 2 342 1 166 1 346 1 
237 1 200 1 239 1 114 1 322 1 23 1 325 1 302 1 243 2 326 1 264 1 328 1 222 1 305 1 361 2 28 1 247 1 368 1 125 1 186 4 267 1 215 2 31 1 128 2 270 1 72 1 190 2 74 2 162 1 135 1 236 2 342 1 166 1 138 1 219 1 55 1 346 1 
237 1 200 1 322 1 205 1 23 1 325 1 243 2 326 1 261 1 328 1 359 1 361 1 288 1 368 1 125 1 267 1 186 3 215 1 128 1 190 1 74 2 217 1 163 1 236 1 166 1 342 1 219 1 346 1 276 1 
201 1 200 2 237 2 0 1 353 1 355 1 243 6 92 1 326 2 40 1 264 2 328 2 122 1 368 2 125 2 267 2 186 12 215 4 128 6 253 1 74 4 197 2 299 2 166 2 342 2 346 2 
201 1 200 1 237 1 0 1 353 2 355 2 243 4 92 1 328 1 122 1 368 1 125 1 267 1 186 8 128 4 74 2 197 2 299 1 166 1 342 1 346 1 
201 1 200 2 237 1 0 1 353 2 355 1 243 4 92 1 326 1 40 1 328 1 122 1 368 1 125 2 267 2 186 8 215 1 128 4 74 4 315 1 197 2 299 1 166 1 342 1 346 2 
201 1 200 2 237 1 0 1 353 2 355 1 243 4 92 1 326 1 40 1 264 1 328 1 122 1 368 1 125 2 267 2 186 8 215 2 128 4 74 4 315 1 197 2 299 1 166 1 342 1 346 2 
237 1 201 1 200 1 278 2 0 1 353 1 355 1 243 10 326 1 92 1 25 2 264 3 328 3 6 2 122 1 368 1 125 1 267 1 186 18 215 4 128 8 74 2 78 2 166 1 299 1 197 2 342 3 344 2 272 2 346 1 
119 1 373 1 358 1 39 1 36 1 310 1 26 1 331 1 46 1 363 1 
284 1 223 1 
349 1 119 1 373 1 8 1 39 1 310 1 26 1 331 1 17 1 
87 1 88 1 
277 1 100 1 214 1 
169 2 36 1 310 1 171 1 155 1 117 1 333 1 372 1 10 1 71 1 119 1 373 1 358 1 39 1 26 1 44 1 331 1 46 1 
169 2 36 1 310 1 171 1 155 1 117 1 333 1 372 1 10 1 71 1 119 1 373 1 358 1 39 1 26 1 44 1 331 1 46 1 
169 2 36 1 310 1 171 1 155 1 117 1 333 1 372 1 10 1 71 1 119 1 373 1 358 1 39 1 26 1 44 1 331 1 46 1 
87 1 88 1 214 1 
87 1 88 1 214 1 
277 1 100 1 
277 1 100 1 214 1 
207 1 52 1 
169 1 23 2 240 1 119 1 207 1 39 1 148 1 284 1 26 1 44 1 331 1 223 1 310 1 228 1 155 1 372 1 268 1 229 1 71 1 373 1 217 2 52 1 255 1 163 2 15 1 219 2 276 2 
200 1 238 1 320 1 239 1 114 1 322 1 23 2 325 1 243 1 222 2 305 2 359 1 65 1 125 1 267 1 186 2 128 1 72 2 74 2 193 1 135 1 76 1 138 1 198 1 219 2 110 1 346 1 108 2 276 2 112 1 319 1 
63 1 184 1 114 1 300 1 170 1 1 1 30 1 31 1 72 2 295 1 265 1 222 2 136 1 305 2 138 1 306 2 274 1 106 1 347 1 
63 1 184 1 114 1 300 1 170 1 30 1 50 1 72 1 295 1 265 1 222 1 136 1 305 1 138 1 306 2 274 1 106 1 
239 1 114 1 189 1 269 1 72 1 327 1 13 1 135 1 222 1 305 1 138 1 150 1 274 1 347 1 
63 1 184 1 114 1 300 1 170 1 1 1 30 1 72 1 295 1 265 1 222 1 136 1 305 1 138 1 306 2 274 1 106 1 347 1 
182 1 
132 1 290 1 188 1 180 1 9 1 10 1 101 1 
173 1 259 1 90 1 146 1 120 1 44 1 226 1 369 1 188 1 10 2 101 1 129 1 71 1 294 1 160 1 132 1 168 1 
239 1 114 1 259 2 324 1 206 1 146 1 208 2 120 2 327 1 285 1 222 1 44 2 94 1 305 1 151 2 308 1 368 1 226 2 64 2 49 1 371 1 188 2 158 1 101 3 71 2 72 1 129 2 270 1 252 1 191 1 160 2 135 4 341 1 342 1 166 1 138 2 109 1 168 2 
237 2 85 1 141 1 259 2 4 2 22 1 354 1 146 1 120 1 208 5 209 1 328 2 44 1 183 1 62 1 368 2 226 3 64 5 69 1 371 1 188 8 10 2 11 1 101 5 71 1 102 1 129 2 233 1 160 2 132 2 166 2 342 2 275 1 168 2 
259 1 4 2 205 1 260 1 23 1 25 1 328 1 44 1 95 1 69 1 126 1 188 2 101 2 129 1 71 1 160 1 217 1 163 1 16 1 165 1 104 1 78 1 342 2 344 1 219 1 168 1 318 1 276 1 
290 1 259 1 188 1 10 1 101 1 129 1 160 1 132 1 180 1 168 1 
208 1 368 1 226 1 64 1 342 1 166 1 101 2 
146 1 120 1 132 1 44 1 10 1 71 1 
239 1 350 1 113 1 114 1 259 1 146 2 120 4 327 2 222 4 305 4 44 3 227 1 66 2 371 2 188 2 189 1 313 1 11 2 101 2 216 1 129 2 72 4 71 3 130 1 160 2 13 1 135 1 138 1 168 2 
200 1 239 1 114 1 322 1 205 2 260 1 23 3 301 1 325 1 302 1 327 1 222 1 305 1 28 1 247 1 125 1 186 1 267 1 228 1 128 1 72 1 270 1 74 2 217 2 162 1 135 1 163 2 138 1 219 3 346 1 319 1 276 2 
226 1 259 1 371 1 188 1 10 1 11 1 101 1 129 1 160 1 208 1 132 1 168 1 
26 1 283 1 331 1 
26 1 283 1 331 1 
207 1 36 1 280 1 26 1 331 1 
26 1 283 1 331 1 
41 1 26 1 331 1 
41 1 26 1 331 1 
41 1 26 1 331 1 
26 1 331 1 
39 1 310 1 
200 2 278 1 125 2 186 8 267 2 215 3 172 1 128 4 243 4 74 4 326 1 328 1 264 2 25 1 6 1 78 1 342 1 344 1 272 1 346 2 
243 3 278 1 328 1 186 6 264 2 25 1 6 1 215 2 78 1 342 1 9 1 344 1 272 1 128 3 
237 1 200 1 368 1 125 1 267 1 186 4 215 2 128 2 74 2 243 2 326 1 264 1 328 1 179 1 166 1 342 1 346 1 
237 1 367 1 368 1 186 7 215 2 102 1 128 4 243 3 326 1 264 1 328 1 166 1 342 1 275 2 62 1 
237 2 200 2 258 1 278 1 172 2 243 11 326 4 25 2 328 3 264 5 6 1 7 1 62 2 366 1 367 1 368 2 125 2 186 23 267 2 215 9 128 12 74 4 78 2 342 3 166 2 344 1 272 1 275 2 346 2 
186 1 275 1 128 1 
243 1 186 1 62 1 
200 1 237 1 368 1 125 1 267 1 186 6 215 3 128 3 74 2 243 3 326 1 328 1 264 2 285 1 179 1 166 1 342 1 346 1 
200 2 237 2 85 1 141 1 172 1 22 1 354 1 243 6 326 1 92 1 209 1 328 2 264 2 62 1 368 2 125 2 186 13 267 2 215 3 128 7 102 1 74 4 166 2 342 2 275 1 346 2 
186 6 215 2 128 3 243 3 326 1 328 1 25 1 264 1 78 1 342 1 344 1 
200 1 258 1 125 1 186 3 267 1 215 2 172 1 128 2 243 1 74 2 326 1 264 1 25 1 6 1 78 1 272 1 346 1 
200 1 125 1 267 1 186 10 215 5 126 1 128 5 74 2 243 5 92 1 326 2 25 2 264 3 328 2 78 2 342 2 344 1 346 1 
200 1 125 1 267 1 186 2 215 1 74 2 243 2 92 1 326 1 166 1 342 1 346 1 
237 1 200 1 368 1 125 1 267 1 186 4 215 2 128 2 74 2 243 2 92 1 326 1 264 1 328 1 166 1 342 1 346 1 
200 3 258 1 125 3 186 3 267 3 172 1 215 2 128 2 74 6 243 1 92 1 326 1 40 1 25 1 264 1 78 1 346 3 
200 5 237 3 258 1 278 1 172 2 243 16 92 1 326 5 40 1 25 3 328 5 264 7 6 1 179 1 62 3 367 1 368 3 125 5 154 1 267 5 186 34 215 12 334 1 128 18 102 1 292 1 74 10 78 3 166 3 342 5 344 2 272 1 275 4 346 5 
200 1 278 1 354 1 243 4 92 1 328 1 25 1 264 2 6 1 62 1 125 1 186 8 267 1 215 2 128 4 102 1 74 2 78 1 342 1 344 1 272 1 275 1 346 1 
200 2 278 1 354 1 243 6 92 1 326 1 328 1 264 2 25 1 6 1 179 1 62 1 367 1 368 1 125 2 186 11 267 2 215 3 128 5 102 1 74 4 78 1 166 1 342 2 344 1 272 1 275 2 346 2 
200 2 237 2 85 1 141 1 22 1 354 1 243 6 92 1 326 1 209 1 328 2 179 1 62 1 368 2 125 2 186 12 267 2 215 1 128 6 102 1 74 4 166 2 342 2 275 1 346 2 
200 4 237 1 85 1 141 1 172 2 22 1 354 1 243 7 326 1 92 1 209 1 328 1 264 2 179 1 62 1 368 2 125 4 186 12 267 4 215 3 128 5 102 1 74 8 166 2 342 2 275 1 346 4 
200 1 278 1 354 1 243 4 92 1 328 1 25 1 264 2 6 1 62 1 125 1 186 8 267 1 215 2 128 4 102 1 74 2 78 1 342 1 344 1 272 1 275 1 346 1 
200 2 237 2 85 1 141 1 172 1 22 1 354 1 243 6 326 1 92 1 209 1 328 2 264 2 62 1 368 2 125 2 186 13 267 2 215 3 128 7 102 1 74 4 166 2 342 2 275 1 346 2 
200 3 237 1 85 1 141 1 172 1 22 1 354 1 243 7 92 1 326 1 209 1 328 1 179 1 62 1 368 2 125 3 186 11 267 3 215 1 128 4 102 1 74 6 166 2 342 2 275 1 346 3 
200 3 237 1 85 1 141 1 172 1 22 1 354 1 243 7 326 2 92 1 40 1 209 1 328 1 264 1 62 1 368 2 125 3 186 11 267 3 215 3 128 4 102 1 74 6 166 2 342 2 275 1 346 3 
186 7 215 6 128 4 243 3 326 3 328 1 25 3 264 3 6 1 78 3 342 1 344 1 272 2 
200 3 237 1 85 1 141 1 172 1 22 1 354 1 243 7 92 1 326 1 40 1 209 1 328 1 62 1 368 2 125 3 186 11 267 3 215 1 128 4 102 1 74 6 166 2 342 2 275 1 346 3 
339 1 53 1 176 1 228 1 23 1 219 1 276 1 
152 1 142 1 228 1 312 1 23 1 339 1 176 1 53 1 340 1 177 1 219 1 276 1 
239 1 13 1 327 1 114 1 135 1 222 1 305 1 138 1 189 1 9 1 72 1 
239 1 114 1 228 1 23 2 270 1 72 1 217 1 162 1 327 1 135 1 163 1 222 1 305 1 138 1 219 2 28 1 83 1 276 1 
239 2 114 1 21 1 23 2 266 1 222 1 305 1 245 1 360 1 28 1 228 1 66 1 72 1 270 2 217 2 162 1 135 3 163 1 165 1 138 1 219 2 276 2 83 1 
239 2 114 1 321 1 21 1 23 2 266 1 222 2 305 2 245 1 27 1 360 1 228 1 66 1 72 2 270 2 217 2 162 1 135 3 163 1 165 1 138 1 219 2 276 2 83 1 
239 1 114 1 279 1 321 1 66 1 21 1 10 1 324 1 270 1 71 2 72 3 38 1 120 1 327 1 132 1 135 4 266 1 222 3 44 2 305 3 138 1 151 1 109 1 
239 1 114 1 321 1 66 1 21 1 10 1 324 1 270 1 71 2 72 3 120 1 327 1 132 1 135 4 266 1 222 3 44 2 305 3 94 1 138 1 151 1 109 1 
357 1 114 1 222 1 305 1 138 1 72 1 
84 1 239 2 221 1 114 2 65 1 170 1 31 1 118 1 72 6 270 1 252 1 357 1 374 1 327 2 133 1 135 3 195 1 222 7 305 7 138 3 108 1 
200 2 239 1 278 1 322 2 89 1 325 2 243 3 328 1 6 1 247 1 215 2 217 1 162 1 163 1 342 1 344 1 219 2 55 1 346 2 114 1 23 2 302 1 25 1 264 2 222 1 305 1 359 1 361 1 28 1 125 2 267 2 186 6 228 2 31 1 72 1 270 1 128 3 190 1 74 4 135 1 236 1 78 1 138 1 272 1 198 1 83 1 276 1 
259 2 324 1 206 1 146 1 120 2 327 1 222 1 305 1 44 3 94 1 180 1 151 1 308 1 290 1 188 1 10 1 313 1 101 1 72 1 129 2 71 3 160 2 191 1 132 1 135 2 15 1 168 2 109 1 
239 1 114 1 31 1 158 1 324 1 72 2 270 1 252 1 357 1 135 2 222 2 305 2 138 2 
239 1 114 1 321 1 31 1 189 1 72 4 327 1 13 1 135 1 222 4 305 4 138 1 287 1 
84 1 202 1 239 1 114 1 66 1 72 2 270 1 374 1 134 1 32 1 135 1 222 2 305 2 138 2 
63 1 184 1 327 1 114 1 265 1 222 1 305 1 138 1 306 1 72 1 
238 1 239 1 114 1 135 1 65 1 170 1 222 2 305 2 138 1 31 1 72 2 
239 2 114 2 65 1 66 1 189 1 31 1 72 4 13 1 327 1 133 1 135 3 195 1 222 5 305 5 138 2 287 1 
239 2 114 2 65 1 66 1 189 1 31 1 72 4 13 1 327 1 135 3 195 1 222 5 235 1 305 5 138 2 287 1 
239 1 114 1 228 1 23 2 270 1 72 1 217 1 162 1 327 1 135 1 163 1 222 1 305 1 138 1 27 1 219 2 83 1 276 1 
84 1 239 1 114 1 66 1 118 1 72 1 270 1 252 1 374 1 135 1 222 1 305 1 138 2 
57 1 14 1 220 1 228 1 250 1 
57 2 364 1 220 2 228 1 282 1 250 1 10 1 71 2 356 1 132 1 375 1 14 2 15 1 165 1 77 1 44 2 245 1 360 1 109 1 
57 1 320 1 220 1 76 1 250 1 23 1 219 1 110 1 276 1 
356 1 375 1 250 1 
164 1 75 1 29 1 9 1 
257 1 164 1 75 1 29 1 139 1 127 1 51 1 
116 1 232 1 51 1 
225 1 257 1 29 1 127 3 51 3 61 1 164 1 75 1 304 1 178 1 286 2 139 1 
257 1 164 1 75 1 29 1 332 1 139 1 127 2 123 1 51 2 
19 1 63 1 257 1 225 1 300 1 75 1 297 1 306 1 139 1 127 1 51 1 
257 1 225 1 75 1 29 1 139 1 127 1 51 1 
257 1 225 1 164 1 29 2 139 1 127 1 51 1 
365 1 257 2 225 1 48 1 75 1 29 1 323 1 139 2 127 2 51 2 
19 1 225 1 257 1 29 1 68 1 2 1 127 3 51 3 164 1 93 1 75 2 139 1 123 2 
225 1 257 1 63 1 300 1 29 1 67 1 30 1 127 2 51 2 164 1 75 1 265 1 306 2 139 1 123 1 
19 1 225 1 257 2 29 1 332 1 127 4 51 4 164 1 93 1 75 2 137 1 139 2 123 2 
257 1 225 1 164 1 75 1 29 1 139 1 127 1 51 1 
19 1 97 1 257 1 29 2 127 4 51 4 164 2 93 1 75 3 304 1 286 1 178 1 139 1 123 2 
225 1 257 1 29 1 156 1 127 2 51 2 254 1 33 1 164 1 75 1 139 1 123 1 
225 1 257 1 29 1 127 3 51 3 164 1 75 1 304 2 178 1 286 2 139 1 111 1 
20 1 75 2 256 2 45 1 
224 1 257 1 225 1 139 1 127 1 51 1 
257 1 225 1 164 1 75 1 29 1 2 1 139 1 127 2 123 1 51 2 
336 1 
257 1 225 1 164 1 75 1 29 1 139 1 127 1 51 1 
225 1 257 1 29 1 2 1 127 3 51 3 164 1 75 1 286 1 139 1 123 1 
19 1 97 1 93 1 75 1 
75 1 29 1 

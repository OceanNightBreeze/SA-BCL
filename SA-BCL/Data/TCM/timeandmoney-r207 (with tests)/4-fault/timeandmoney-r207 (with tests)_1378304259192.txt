#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (71,94,119,227,342) (77,100) (77,100) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (71,94,119,227,342) (77,100) (77,100) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (71,94,119,227,342) (77,100) (77,100) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (71,94,119,227,342) (77,100) (77,100) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (71,94,119,227,342) (264,348) (264,348) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 215 356 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 215 356 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (10,131,197,359) (10,131,197,359) (46,186,249) (46,186,249) (46,186,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (10,131,197,359) (10,131,197,359) (46,186,249) (46,186,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (10,131,197,359) (10,131,197,359) (46,186,249) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (10,131,197,359) (10,131,197,359) (46,186,249) (46,186,249) (46,186,249) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (57,237,334) (57,237,334) 328 38 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (10,131,197,359) (10,131,197,359) 315 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 0 1 267 1 77 1 94 1 239 1 173 1 344 1 310 1 41 1 197 1 10 1 100 1 337 1 359 1 
293 1 267 1 0 1 77 1 94 1 239 1 173 1 344 1 310 1 41 1 197 1 10 1 100 1 337 1 359 1 
293 1 267 1 0 1 77 1 94 1 239 1 173 1 344 1 310 1 41 1 197 1 10 1 100 1 337 1 359 1 
293 1 267 1 0 1 77 1 94 1 239 1 173 1 344 1 310 1 41 1 197 1 10 1 100 1 337 1 359 1 
267 2 131 1 0 1 236 1 132 1 173 1 344 1 310 1 197 2 10 1 137 1 215 1 304 1 359 1 
267 1 94 1 239 1 173 1 310 1 344 1 41 1 197 1 10 1 244 1 348 1 264 1 359 1 
267 3 131 1 274 1 310 1 41 1 197 3 10 2 49 1 137 2 58 1 304 1 339 1 359 2 
0 1 267 7 131 5 236 1 52 1 132 1 173 1 344 1 310 1 41 1 197 7 313 1 137 3 10 2 49 2 215 1 58 1 178 1 356 1 304 3 359 2 
0 1 267 7 131 5 236 1 52 1 132 1 173 1 344 1 310 1 41 1 197 7 313 1 137 3 10 2 49 2 215 1 58 1 178 1 356 1 304 3 359 2 
8 1 251 1 358 1 
220 2 251 1 212 1 
256 2 31 1 87 2 45 1 27 2 194 2 97 2 226 2 
268 1 44 1 25 1 45 1 27 3 95 1 29 1 97 3 213 1 318 1 147 1 277 1 31 1 320 1 68 1 303 1 130 1 325 2 282 2 283 1 256 2 74 1 329 1 78 1 79 1 109 1 81 1 194 2 18 1 196 1 289 1 56 2 176 1 87 2 138 2 226 2 142 2 
256 1 87 1 128 1 45 1 27 1 331 1 156 1 194 1 97 1 226 1 
237 1 334 1 
256 1 251 1 237 1 27 1 194 1 97 1 8 1 300 2 83 1 87 1 128 1 301 1 57 2 162 1 226 1 
300 1 75 1 22 1 57 1 154 1 
8 1 300 2 55 1 251 1 75 1 57 2 154 1 261 1 
300 1 75 1 57 1 
256 1 45 1 27 1 331 1 154 1 156 1 194 1 97 1 300 1 99 1 87 1 128 1 57 1 226 1 
251 1 
8 1 300 2 251 1 75 1 57 2 154 1 261 1 140 1 
15 1 251 1 92 1 75 2 154 2 261 1 333 2 312 1 63 2 8 1 300 5 115 1 354 1 116 1 164 1 57 5 279 2 129 1 305 1 
31 1 358 1 
90 1 256 1 27 2 231 1 194 1 97 2 87 1 31 2 226 2 
294 1 53 1 307 1 
74 1 27 1 329 1 78 1 81 1 97 1 196 1 213 1 147 1 20 1 56 1 31 1 320 1 130 1 282 1 142 1 
74 1 228 1 307 1 27 2 329 1 78 1 229 1 81 1 194 1 97 2 196 1 213 1 147 1 56 1 87 1 320 1 130 1 226 1 282 1 142 1 
90 1 256 1 228 2 27 5 229 1 194 4 299 1 97 5 199 1 87 4 31 1 34 1 180 1 226 5 
87 2 128 1 284 1 27 2 156 1 194 2 97 2 226 2 
256 1 228 1 31 1 87 3 27 3 194 3 97 3 226 3 
87 1 128 1 27 1 156 1 194 1 97 1 226 1 
256 1 90 1 87 1 128 1 27 1 231 1 194 1 97 1 226 1 
90 1 228 1 44 1 25 1 45 1 26 1 27 4 95 1 229 1 29 1 97 4 213 1 300 1 318 1 147 1 31 1 128 1 320 1 301 1 303 1 130 1 325 1 282 1 256 2 74 1 237 1 329 1 78 1 79 1 109 1 81 1 194 3 196 1 289 1 83 1 243 1 56 1 176 1 87 3 57 1 138 2 162 1 226 3 142 1 
228 1 31 1 87 1 34 1 27 2 194 1 299 1 97 2 226 2 
256 1 90 1 228 2 251 1 237 1 27 3 26 1 229 1 194 3 97 3 300 1 98 1 83 1 87 3 128 1 57 1 301 1 162 1 226 3 
90 1 256 1 228 1 53 1 307 1 27 2 194 2 97 2 87 2 226 2 
74 1 27 1 329 1 78 1 81 1 97 1 196 1 213 1 147 1 56 1 31 1 320 1 130 1 282 1 142 1 
74 1 27 1 78 1 343 1 163 1 81 1 97 1 196 1 213 1 147 1 56 1 31 1 320 1 282 1 142 1 
294 2 25 1 181 1 95 1 29 1 68 2 349 1 189 1 325 4 37 1 307 2 53 2 308 1 79 1 109 1 108 1 221 1 289 2 82 1 84 1 176 1 138 2 23 1 266 1 
87 1 128 1 284 1 27 1 194 1 162 1 97 1 226 1 
263 1 145 1 
263 1 145 1 
14 1 2 1 
14 1 2 1 
14 1 2 1 
214 1 263 1 145 1 
214 1 263 1 145 1 
263 1 145 1 190 1 
14 1 2 1 272 1 263 2 145 2 248 1 
214 1 263 1 145 1 
263 1 145 1 88 1 
263 1 145 1 88 1 
263 1 145 1 88 1 
250 1 270 1 27 2 145 1 28 1 97 2 7 1 300 1 31 1 102 1 188 1 190 1 323 1 217 1 35 1 235 1 258 1 16 1 241 1 194 2 87 2 263 1 57 1 226 2 
121 1 258 2 251 1 16 2 145 2 259 2 275 1 61 1 241 2 7 3 300 2 290 1 263 2 57 2 187 1 188 1 248 1 323 2 43 1 
0 1 173 1 344 1 
244 1 173 1 344 1 
0 2 73 1 244 1 211 1 292 1 173 3 
0 1 73 1 244 1 211 1 173 2 324 1 
0 1 73 2 244 1 211 1 173 2 
92 2 251 1 45 1 27 1 97 1 63 1 300 5 8 1 99 1 128 1 279 1 102 1 129 1 13 1 305 1 166 1 167 1 234 1 256 1 50 1 220 1 75 1 331 1 154 4 332 1 261 1 221 1 156 1 194 1 333 1 155 1 110 2 82 1 87 1 57 5 60 1 226 1 
92 2 251 1 45 1 27 1 97 1 63 1 300 5 8 1 233 2 99 1 128 1 279 1 101 1 102 1 129 1 305 1 166 1 167 1 234 1 168 1 256 1 220 1 75 3 331 1 154 4 332 1 261 1 221 1 333 1 155 1 156 1 194 1 82 1 87 1 22 2 57 5 60 1 226 1 
92 2 251 2 45 1 27 1 212 1 97 1 63 1 8 1 300 3 99 1 128 1 279 1 102 1 13 1 305 3 166 1 167 1 234 1 256 1 50 1 220 3 37 1 308 1 331 1 154 2 332 2 156 1 194 1 110 1 333 1 221 1 82 1 116 1 87 1 57 3 60 2 226 1 
92 4 251 3 212 2 63 1 8 1 300 4 279 1 322 1 102 2 13 1 305 5 166 1 167 2 234 1 50 1 220 6 37 2 308 2 352 1 154 3 332 4 110 2 333 1 221 2 82 2 116 1 57 4 225 1 60 4 
74 1 70 1 358 1 
74 1 150 1 
341 1 
74 1 320 1 81 1 
306 1 74 1 
74 1 320 1 
355 1 198 1 74 3 320 1 70 2 81 1 
219 1 104 1 37 1 4 2 230 1 108 3 221 1 62 1 289 3 113 1 84 2 66 1 201 1 280 1 68 4 314 1 325 7 
219 1 104 1 37 1 4 2 230 1 108 3 221 1 62 1 289 3 113 1 84 2 66 1 201 1 280 1 68 4 314 1 325 7 
219 1 104 1 37 1 4 2 230 1 108 3 221 1 62 1 289 3 113 1 84 2 66 1 33 1 201 1 280 1 68 4 314 1 325 7 
25 1 4 3 230 1 146 1 62 2 29 1 66 2 278 4 280 2 68 16 69 1 167 3 325 31 219 2 104 1 37 4 308 3 172 1 79 1 108 10 135 3 221 4 288 1 289 15 82 3 113 5 84 5 85 1 175 1 176 1 201 1 138 2 314 1 24 1 
219 1 104 1 37 1 25 2 4 2 230 1 79 2 108 4 134 1 221 1 62 1 29 2 113 1 289 4 84 3 66 1 176 2 201 1 280 1 138 4 68 5 357 1 24 1 325 9 
0 1 267 1 249 1 207 1 344 1 46 1 185 1 276 1 213 1 186 1 10 1 147 1 282 1 131 1 17 1 173 2 310 1 41 1 197 2 242 1 56 1 244 1 292 1 247 1 336 1 359 1 142 1 
0 1 267 2 249 1 207 1 297 1 344 1 317 1 46 1 185 1 276 1 213 1 10 1 147 1 282 1 131 2 238 1 173 2 41 1 197 3 242 1 56 1 244 1 292 1 247 1 336 1 359 1 142 1 
0 1 249 1 131 2 267 1 207 1 297 1 173 2 344 1 317 1 185 1 41 1 213 1 197 2 242 1 147 1 244 1 56 1 292 1 336 1 247 1 282 1 142 1 
267 1 207 2 271 1 3 1 210 1 213 1 147 1 10 1 320 1 282 1 74 1 238 1 196 1 41 2 195 1 197 1 56 1 86 1 265 1 336 2 247 2 359 1 142 1 
0 1 267 1 249 1 207 1 344 1 317 1 46 1 185 1 276 1 213 1 186 1 10 1 147 1 282 1 131 1 173 2 310 1 41 1 197 2 242 1 56 1 244 1 292 1 247 1 336 1 359 1 142 1 
327 1 
143 1 92 1 271 1 210 1 232 1 63 1 213 1 300 2 347 1 147 1 165 1 279 1 320 1 129 1 305 1 166 1 282 2 74 1 237 1 75 2 328 1 38 1 261 1 333 1 196 2 56 2 334 1 57 2 118 1 142 2 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 2 347 1 237 1 334 1 75 1 328 1 57 2 38 1 261 1 140 1 232 1 
237 1 328 1 38 1 333 1 63 1 232 1 300 1 347 1 334 1 57 1 279 1 129 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
300 1 347 1 237 1 334 1 328 1 57 1 38 1 232 1 
237 1 328 1 38 1 333 1 63 1 232 1 300 1 347 1 334 1 57 1 279 1 129 1 
294 1 25 1 4 1 95 1 230 1 29 1 62 1 31 2 68 3 349 1 325 6 219 1 104 1 37 1 53 1 307 1 79 1 109 1 108 2 221 1 289 3 84 2 176 1 201 1 138 2 358 1 
294 11 25 2 95 2 183 1 29 2 318 1 31 1 278 3 68 8 69 1 167 2 325 14 283 1 37 1 307 11 53 4 308 1 39 1 79 2 172 1 108 2 109 1 135 3 221 2 19 1 113 1 289 6 82 2 84 1 176 2 138 4 338 1 360 1 
228 1 25 1 27 2 95 1 183 1 229 1 29 1 97 2 125 1 213 1 318 1 147 1 31 1 320 1 68 1 103 1 130 1 282 1 325 2 283 1 74 1 76 1 53 1 329 1 78 1 79 1 109 1 81 1 194 1 196 1 289 1 56 1 20 1 87 1 176 1 138 2 142 1 226 1 
228 1 44 2 4 1 95 3 230 1 229 1 183 1 184 2 317 1 97 3 318 1 147 2 320 2 282 3 325 20 283 1 104 1 53 7 329 2 193 2 109 3 108 8 194 1 196 1 289 10 113 4 56 3 201 1 206 2 294 7 25 3 27 3 62 1 29 3 213 2 31 2 67 1 68 10 350 1 130 2 167 2 219 1 169 2 74 2 37 3 307 7 308 2 78 2 79 3 81 2 221 3 82 2 84 4 176 3 87 1 224 1 138 6 142 3 226 1 
91 1 228 1 268 2 271 1 25 2 27 1 95 2 210 1 317 1 97 1 29 2 126 1 213 2 318 1 147 2 320 2 68 1 216 1 151 1 349 1 282 8 325 2 283 1 74 3 17 1 79 2 107 1 109 2 194 1 196 2 289 1 56 7 200 1 87 1 176 2 138 4 204 1 226 1 142 8 
90 1 294 1 25 1 27 1 95 1 183 1 29 1 97 1 30 1 68 1 167 1 325 3 256 1 37 1 53 1 307 1 308 1 79 1 108 1 109 1 194 1 221 1 82 1 289 2 84 1 87 1 176 1 138 2 226 1 
294 1 25 1 53 1 307 1 95 1 79 1 108 1 109 1 221 1 29 1 113 1 82 1 176 1 138 2 68 2 349 1 266 1 325 2 
294 1 37 1 25 1 53 1 307 1 308 1 95 1 79 1 108 1 109 1 29 1 289 2 84 1 176 1 138 2 349 1 189 1 325 2 
294 2 25 1 95 1 29 1 68 2 349 1 167 1 325 4 37 1 307 2 53 2 308 1 79 1 109 1 108 2 221 1 82 1 113 1 289 2 84 1 176 1 138 2 
294 1 25 1 53 1 307 1 95 1 79 1 108 1 109 1 221 1 29 1 113 1 82 1 200 1 176 1 138 2 68 2 266 1 325 2 
294 1 37 1 25 1 53 1 307 1 308 1 95 1 79 1 108 1 109 1 29 1 289 2 84 1 200 1 176 1 138 2 189 1 325 2 
294 2 25 1 95 1 29 1 68 2 167 1 325 4 37 1 307 2 53 2 308 1 79 1 109 1 108 2 221 1 82 1 113 1 289 2 84 1 200 1 176 1 138 2 
294 2 25 1 95 1 29 1 68 2 167 1 325 4 37 1 307 2 53 2 308 1 79 1 109 1 108 2 221 1 82 1 113 1 289 2 84 1 176 1 138 2 
44 1 25 1 27 1 95 1 97 1 29 1 213 1 318 1 147 1 31 1 320 1 68 1 130 1 325 2 282 1 283 1 74 1 329 1 78 1 79 1 109 1 81 1 196 1 289 1 56 1 176 1 138 2 142 1 
25 1 27 1 95 1 343 1 163 1 124 1 97 1 29 1 213 1 318 1 147 1 31 1 320 1 68 1 325 2 282 1 283 1 74 1 78 1 79 1 109 1 81 1 196 1 289 1 56 1 176 1 138 2 142 1 
294 2 25 1 95 1 183 1 29 1 68 2 167 1 325 4 37 1 307 2 53 2 308 1 79 1 109 1 108 2 221 1 82 1 113 1 289 2 84 1 176 1 138 2 
294 2 206 1 44 1 25 1 27 1 95 1 97 1 29 1 213 1 147 1 320 1 68 2 130 1 167 1 325 4 282 1 74 1 37 1 53 2 307 2 308 1 329 1 17 1 78 1 79 1 108 2 109 1 221 1 81 1 289 2 113 1 82 1 84 1 56 1 176 1 138 2 142 1 
90 1 294 1 25 1 27 1 95 1 183 1 29 1 97 1 148 1 68 2 167 1 325 3 256 1 37 1 307 1 53 1 308 1 79 1 108 1 109 1 194 1 221 1 289 1 113 1 82 1 87 1 176 1 138 2 226 1 
25 2 345 1 29 2 65 2 278 2 68 9 69 1 12 1 167 3 325 19 37 3 105 2 308 3 79 2 172 1 260 1 240 1 108 6 222 1 135 1 221 3 289 10 82 3 113 3 84 3 176 2 159 1 138 4 357 1 340 1 
25 3 182 1 6 1 29 3 65 4 278 2 68 14 69 2 12 1 167 3 218 1 325 26 326 1 37 2 105 1 171 1 308 2 79 3 260 1 108 4 240 2 135 2 221 3 113 2 114 1 289 12 82 3 84 2 176 3 159 1 138 6 357 1 24 2 340 2 
1 1 25 3 4 1 182 1 230 1 345 1 6 1 62 1 29 3 65 4 278 4 68 20 69 3 12 1 167 4 218 1 325 41 219 1 326 1 104 1 37 5 105 1 171 1 308 4 79 3 172 1 260 1 240 1 108 8 135 3 221 5 114 1 289 21 82 4 113 4 84 4 176 3 159 1 201 1 138 6 357 1 24 1 340 2 
1 1 25 4 4 1 182 1 230 1 345 1 6 1 62 1 29 4 65 4 278 4 68 20 69 3 12 1 167 4 218 1 325 38 219 1 326 1 104 1 37 4 105 1 171 1 308 3 79 4 172 1 260 1 240 1 108 7 135 3 221 5 114 1 289 18 82 4 113 3 84 4 176 4 159 1 201 1 138 8 357 1 24 2 340 2 
25 2 4 1 182 1 230 1 6 1 62 1 29 2 65 4 278 4 68 27 69 2 12 1 167 7 218 1 325 52 219 1 326 1 104 1 37 8 105 1 171 1 308 7 39 2 79 2 172 2 260 1 240 1 108 14 135 4 221 8 114 1 289 25 82 7 113 7 84 7 176 2 159 1 201 1 138 4 357 1 24 1 340 1 
121 1 258 1 16 1 263 1 152 1 145 1 61 1 248 1 241 1 323 1 
235 1 190 1 
258 1 16 1 321 1 263 1 295 1 145 1 139 1 241 1 323 1 
214 1 335 1 
272 1 160 1 88 1 
121 1 258 1 251 1 16 1 145 1 259 1 275 1 61 1 241 1 7 2 300 1 290 1 57 1 263 1 187 1 188 1 248 1 323 1 
121 1 258 1 251 1 16 1 145 1 259 1 275 1 61 1 241 1 7 2 300 1 290 1 57 1 263 1 187 1 188 1 248 1 323 1 
121 1 258 1 251 1 16 1 145 1 259 1 275 1 61 1 241 1 7 2 300 1 290 1 57 1 263 1 187 1 188 1 248 1 323 1 
214 1 272 1 335 1 
214 1 272 1 335 1 
160 1 88 1 
272 1 160 1 88 1 
270 1 28 1 
250 1 270 1 27 2 145 1 275 1 28 1 97 2 7 1 300 1 31 1 102 1 190 1 323 1 217 1 35 1 235 1 258 1 16 1 309 1 259 1 154 1 241 1 194 2 87 2 57 1 263 1 226 2 
268 2 316 1 123 1 25 1 27 2 95 1 183 1 47 1 97 2 29 1 213 1 318 1 147 1 11 1 320 1 68 1 216 1 282 2 325 2 283 1 74 1 79 1 109 1 289 1 56 2 21 1 176 1 138 2 204 1 142 2 226 2 
0 1 93 1 317 1 344 1 185 1 276 1 213 1 147 1 191 1 282 2 17 1 173 2 242 1 56 2 244 1 292 1 247 1 141 1 142 2 
0 1 173 2 344 1 317 1 185 1 276 1 213 1 242 1 147 1 244 1 56 1 202 1 292 1 247 1 282 1 142 1 141 1 
72 1 74 1 271 1 210 1 196 1 195 1 213 1 147 1 56 1 320 1 247 1 282 1 142 1 191 1 
0 1 93 1 173 2 344 1 317 1 185 1 276 1 213 1 242 1 147 1 244 1 56 1 292 1 247 1 282 1 142 1 191 1 141 1 
269 1 
8 1 115 1 251 1 92 1 164 1 305 1 358 1 
92 1 251 2 212 1 63 1 300 1 8 1 279 1 129 1 305 1 220 1 75 1 261 1 333 1 157 1 57 1 120 1 161 1 
92 8 8 2 147 4 320 3 279 4 281 2 150 3 282 3 17 1 286 2 330 2 193 2 332 6 333 4 196 1 112 1 115 1 56 3 118 1 57 5 245 1 203 2 60 6 122 2 251 8 298 2 212 6 63 4 213 3 300 5 253 2 164 1 129 4 70 2 305 9 166 2 167 2 306 2 74 10 220 12 37 2 75 5 308 2 261 3 81 3 221 2 262 1 82 2 355 1 83 2 177 1 179 2 89 1 142 3 
122 2 251 5 92 5 182 1 212 3 6 1 63 2 300 1 8 2 253 1 278 1 279 2 129 2 69 1 305 8 166 1 167 2 218 1 326 1 170 1 220 6 37 2 75 1 192 1 308 2 261 1 332 5 333 2 135 1 221 2 114 1 82 2 118 1 57 1 60 5 
122 2 92 2 45 1 27 1 144 1 97 1 62 1 63 1 300 1 253 1 99 1 128 1 279 1 129 1 305 2 219 1 256 1 104 1 37 1 331 1 156 1 333 1 221 2 194 1 87 1 57 1 246 1 226 1 
92 1 251 1 333 1 63 1 8 1 115 1 164 1 279 1 129 1 305 1 
122 2 220 10 92 5 251 5 37 2 308 2 193 1 332 5 212 5 221 2 82 2 253 1 60 5 305 5 167 2 
8 1 300 1 251 1 75 1 57 1 261 1 
143 1 92 2 271 1 210 1 252 1 63 2 213 1 300 3 147 1 165 1 320 1 279 2 129 1 305 2 166 2 282 4 74 1 75 4 174 1 261 2 333 2 196 2 116 1 56 4 177 1 118 2 57 3 89 2 142 4 
44 1 25 1 45 1 27 3 95 1 29 1 97 3 213 1 318 1 147 1 31 1 320 1 303 1 130 1 325 1 282 1 256 2 74 1 329 1 78 1 79 1 109 1 194 2 81 1 196 1 289 1 56 1 176 1 87 2 138 2 142 1 226 2 
220 4 92 2 251 4 4 1 212 2 332 2 333 1 63 1 8 2 279 1 118 1 129 1 60 2 305 1 166 1 
257 1 241 1 323 1 
257 1 241 1 323 1 
270 1 61 1 241 1 323 1 111 1 
257 1 241 1 323 1 
133 1 241 1 323 1 
133 1 241 1 323 1 
133 1 241 1 323 1 
241 1 323 1 
263 1 145 1 
219 1 104 1 37 1 25 2 4 1 79 2 230 1 108 3 221 1 29 2 62 1 289 4 113 1 84 2 176 2 201 1 138 4 68 4 24 1 325 8 
219 1 104 1 37 1 4 1 230 1 108 2 221 1 62 1 289 3 84 2 201 1 68 3 358 1 325 6 
37 1 25 1 308 1 79 1 108 2 221 1 311 1 29 1 289 2 82 1 113 1 84 1 176 1 138 2 68 2 167 1 325 4 
37 1 308 1 172 1 108 2 135 1 221 1 289 4 82 1 113 1 84 1 278 2 68 3 69 1 167 1 325 7 
25 2 4 1 208 1 230 1 62 2 29 2 278 2 68 11 167 2 325 23 219 2 104 1 37 3 308 2 39 1 172 1 79 2 108 9 221 3 135 2 113 4 82 2 289 12 84 5 176 2 201 1 138 4 338 1 24 2 
289 1 278 1 325 1 
68 1 135 1 325 1 
37 1 25 1 308 1 79 1 193 1 108 3 221 1 29 1 311 1 289 3 82 1 113 1 84 2 176 1 138 2 68 3 167 1 325 6 
25 1 182 1 6 1 29 1 278 1 68 6 69 1 167 2 325 12 218 1 326 1 37 2 308 2 79 1 108 2 135 1 221 2 113 1 289 6 82 2 114 1 84 1 176 1 138 2 357 1 
219 1 104 1 37 1 108 2 221 1 62 1 289 3 113 1 84 1 68 3 325 6 
219 1 25 1 208 1 230 1 79 1 108 2 62 1 29 1 113 1 289 2 84 1 176 1 201 1 138 2 68 1 24 1 325 3 
219 2 104 1 37 2 25 1 144 1 79 1 108 5 221 2 29 1 62 2 113 2 289 5 84 3 176 1 138 2 68 5 357 1 325 10 
25 1 79 1 108 1 221 1 29 1 82 1 113 1 176 1 138 2 68 2 357 1 325 2 
37 1 25 1 308 1 79 1 108 2 221 1 29 1 289 2 82 1 113 1 84 1 176 1 138 2 68 2 357 1 167 1 325 4 
219 1 25 3 208 1 79 3 345 1 108 2 29 3 62 1 289 2 113 1 84 1 176 3 138 6 68 1 357 1 24 1 325 3 
25 5 4 1 208 1 230 1 146 1 345 1 62 3 29 5 278 4 68 16 69 1 167 3 325 34 219 3 104 2 37 5 308 3 79 5 172 1 108 12 135 3 221 5 311 1 289 18 82 3 113 5 84 7 175 1 85 1 176 5 201 1 138 10 357 1 24 2 
25 1 4 1 182 1 230 1 29 1 62 1 278 1 68 4 69 1 325 8 219 1 104 1 37 1 79 1 108 2 221 1 135 1 289 4 84 2 176 1 201 1 138 2 357 1 
25 2 4 1 182 1 230 1 62 1 29 2 278 2 68 6 69 1 167 1 325 11 219 1 104 1 37 1 79 2 172 1 108 3 135 1 221 2 311 1 289 5 82 1 113 1 84 2 176 2 201 1 138 4 357 1 
25 3 4 1 182 1 230 1 6 1 62 1 29 3 278 1 68 9 69 1 167 2 325 19 218 1 219 1 326 1 104 1 37 3 308 2 79 3 108 4 135 1 221 3 311 1 113 1 114 1 289 10 82 2 84 3 176 3 201 1 138 6 357 1 24 1 
25 3 4 1 182 1 230 1 6 1 62 1 29 3 278 1 68 10 69 1 167 2 325 17 218 1 219 1 326 1 104 1 37 2 308 1 79 3 108 5 135 1 221 3 311 1 113 2 289 7 82 2 114 1 84 3 176 3 201 1 138 6 357 1 24 1 
25 1 4 1 182 1 230 1 29 1 62 1 278 1 68 4 69 1 325 8 219 1 104 1 37 1 79 1 108 2 221 1 135 1 289 4 84 2 176 1 201 1 138 2 357 1 
25 1 182 1 6 1 29 1 278 1 68 6 69 1 167 2 325 12 218 1 326 1 37 2 308 2 79 1 108 2 135 1 221 2 113 1 289 6 82 2 114 1 84 1 176 1 138 2 357 1 
25 4 4 1 182 1 230 1 6 1 62 1 29 4 278 1 68 10 69 1 167 2 218 1 325 18 219 1 326 1 104 1 37 2 308 1 79 4 108 5 135 1 221 3 311 1 113 2 114 1 289 8 82 2 84 3 176 4 201 1 138 8 357 1 24 2 
25 4 182 1 345 1 6 1 29 4 278 1 68 9 69 1 167 3 218 1 325 16 326 1 37 2 308 2 79 4 108 6 135 1 221 3 113 3 114 1 289 7 82 3 84 3 176 4 138 8 357 1 24 2 
219 3 104 1 37 1 230 2 108 6 221 1 62 3 289 4 113 3 84 3 201 1 68 3 325 7 
25 4 4 1 182 1 230 1 345 1 6 1 62 1 29 4 278 1 68 10 69 1 167 2 218 1 325 18 219 1 326 1 104 1 37 2 308 1 79 4 108 4 135 1 221 3 113 1 114 1 289 8 82 2 84 3 176 4 201 1 138 8 357 1 24 2 
31 1 319 1 34 1 27 1 97 1 299 1 226 1 
27 1 5 1 153 1 40 1 299 1 97 1 136 1 31 1 158 1 319 1 34 1 226 1 
213 1 147 1 74 1 56 1 271 1 320 1 210 1 358 1 142 1 282 1 196 1 
74 1 228 1 27 2 78 1 81 1 194 1 97 2 196 1 213 1 147 1 56 1 31 1 87 1 320 1 130 1 226 1 282 1 142 1 
228 1 27 2 298 1 97 2 213 1 147 1 31 1 128 1 320 2 301 1 130 1 282 1 306 1 74 3 78 1 194 2 81 2 56 1 87 1 162 1 142 1 89 1 226 2 
228 1 27 2 298 1 163 1 97 2 213 1 147 1 31 1 128 1 320 2 301 1 282 2 306 1 74 3 78 1 106 1 194 2 81 2 56 2 87 1 162 1 142 2 89 1 226 2 
306 1 74 4 251 1 75 1 106 1 298 1 81 1 346 1 196 1 8 1 300 2 213 1 83 1 147 1 56 3 291 1 320 1 57 2 150 1 70 1 89 1 282 3 142 3 
306 1 74 4 251 1 75 1 106 1 298 1 81 1 196 1 8 1 300 2 213 1 83 1 147 1 56 3 320 1 57 2 150 1 70 1 179 1 89 1 282 3 142 3 
213 1 147 1 56 1 142 1 282 1 126 1 
91 1 268 1 74 3 51 1 17 1 107 1 317 1 81 1 353 1 223 1 126 1 196 2 213 2 355 1 147 3 56 6 320 2 216 1 151 1 282 7 142 7 
228 1 44 1 4 1 95 2 183 1 230 1 184 1 97 2 147 1 320 1 282 1 325 6 104 1 53 1 329 1 17 1 109 2 108 2 194 1 289 3 56 1 201 1 206 1 294 1 25 2 123 1 27 2 29 2 62 1 213 1 31 2 68 3 130 1 219 1 74 1 37 1 307 1 78 1 79 2 81 1 221 1 84 2 176 2 87 1 138 4 142 1 226 1 
251 1 92 1 63 2 8 1 300 3 164 1 279 2 281 1 129 2 150 1 70 1 305 1 282 1 74 2 75 2 286 1 330 1 154 1 261 1 333 2 196 1 115 1 83 1 56 1 177 1 57 3 179 1 142 1 
74 2 17 1 81 1 126 1 262 1 213 1 355 1 147 2 56 2 320 1 70 1 282 2 142 2 
74 1 271 1 17 1 210 1 106 1 96 1 196 1 213 1 147 1 56 4 320 1 282 4 142 4 
74 1 81 1 353 1 223 1 213 1 147 2 56 2 67 1 320 1 255 1 89 1 282 2 142 2 36 1 
173 1 344 1 185 1 196 1 213 1 147 1 56 1 244 1 282 1 142 1 
213 1 147 1 74 1 56 2 320 1 17 1 216 1 317 1 47 1 142 2 282 2 
91 1 74 3 271 1 17 1 210 1 107 1 96 1 196 1 213 2 147 2 56 4 320 2 216 1 89 1 282 5 142 5 
91 1 74 3 271 1 17 1 210 1 96 1 196 1 213 2 147 2 56 4 117 1 320 2 216 1 89 1 282 5 142 5 
74 1 228 1 27 2 78 1 81 1 194 1 163 1 97 2 196 1 213 1 147 1 56 1 31 1 87 1 320 1 226 1 282 1 142 1 
74 1 51 1 81 1 353 1 223 1 213 1 355 1 147 2 56 1 320 1 89 1 282 1 142 1 
316 1 351 2 27 1 48 1 97 1 149 1 42 1 31 1 11 1 21 1 128 1 226 1 
251 1 316 1 45 1 27 2 26 1 97 2 8 1 300 2 99 1 149 1 11 1 128 2 301 1 256 1 237 1 351 2 331 1 154 1 156 1 194 1 287 1 54 1 83 1 42 1 87 1 21 1 57 2 59 1 162 1 226 2 
42 1 149 1 
351 1 59 1 54 1 
137 1 274 1 339 1 358 1 
197 1 267 1 137 1 10 1 274 1 339 1 359 1 
267 1 207 1 41 1 
227 1 267 3 342 1 94 2 274 1 310 1 197 3 137 1 10 1 339 1 359 1 71 1 
197 2 131 1 267 2 137 1 10 1 236 1 274 1 339 1 359 1 
267 1 0 1 132 1 173 1 310 1 344 1 197 1 10 1 137 1 304 1 359 1 
197 1 267 1 137 1 10 1 274 1 310 1 359 1 
197 1 267 1 10 1 274 2 310 1 339 1 359 1 
267 2 273 1 80 1 274 1 310 1 197 2 64 1 137 1 10 2 359 2 
267 3 131 2 52 1 274 1 310 1 197 3 10 1 49 1 137 2 178 1 304 1 339 1 359 1 
197 2 131 1 0 1 267 1 10 1 244 1 292 1 173 2 344 1 310 1 315 1 359 1 
267 4 131 2 236 1 274 1 310 1 197 4 10 2 49 1 137 2 304 1 339 1 359 2 205 1 
197 1 267 1 137 1 10 1 274 1 310 1 339 1 359 1 
227 1 131 2 267 4 285 1 94 1 274 2 197 4 10 1 49 1 137 3 304 1 339 2 71 1 359 1 
267 2 131 1 209 1 274 1 310 1 197 2 9 1 313 1 137 1 10 1 339 1 359 1 
227 2 267 3 94 2 274 1 310 1 197 3 137 1 10 1 119 1 339 1 71 1 359 1 
137 2 32 1 302 1 254 2 
197 1 267 1 10 1 296 1 310 1 359 1 
197 2 131 1 267 2 137 1 10 1 178 1 274 1 310 1 339 1 359 1 
127 1 
197 1 267 1 137 1 10 1 274 1 310 1 339 1 359 1 
131 1 267 3 94 1 274 1 310 1 197 3 10 1 137 1 178 1 339 1 359 1 
137 1 49 1 285 1 304 1 
137 1 274 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 116 41 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 116 41 248 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 116 41 248 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 116 41 248 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
316 4 112 9 2 1 206 1 210 6 7 1 56 2 140 2 141 4 142 9 163 1 95 1 249 2 327 1 80 1 148 2 98 1 99 1 228 2 275 1 376 1 23 3 26 1 235 2 236 2 378 1 
316 4 112 9 2 1 206 1 210 6 7 1 56 2 140 2 141 4 142 9 163 1 95 1 249 2 327 1 80 1 148 2 98 1 99 1 228 2 275 1 376 1 23 3 26 1 235 2 236 2 378 1 
316 4 112 9 2 1 206 1 210 6 7 1 56 2 140 2 141 4 142 9 163 1 95 1 249 2 327 1 80 1 148 2 98 1 99 1 228 2 275 1 376 1 23 3 26 1 235 2 236 2 378 1 
316 3 249 2 112 7 327 1 2 1 206 1 80 1 148 1 210 4 99 1 98 1 228 2 376 1 275 1 23 2 7 1 56 2 140 2 141 3 142 7 26 1 236 2 235 2 163 1 378 1 
95 1 316 2 112 4 80 1 148 2 210 3 99 1 228 1 23 1 56 1 140 1 141 2 142 4 236 1 235 1 378 1 
249 1 112 2 2 1 133 1 152 1 228 1 275 1 244 1 140 1 141 1 142 2 368 1 235 1 236 1 9 1 378 1 
316 1 249 1 112 3 210 1 152 1 228 2 244 1 23 1 141 2 142 3 235 2 163 1 378 1 
95 1 316 4 249 1 112 9 80 1 361 1 148 2 210 7 99 1 228 2 376 1 23 3 56 1 140 1 105 1 141 4 142 9 26 1 236 1 235 2 163 1 378 1 
95 1 316 4 249 1 112 9 80 1 361 1 148 2 210 7 99 1 228 2 376 1 23 3 56 1 140 1 105 1 141 4 142 9 26 1 236 1 235 2 163 1 378 1 
332 1 299 1 300 1 
321 2 300 1 109 1 
155 2 21 2 132 2 66 2 30 1 134 2 34 2 138 1 
176 1 132 3 30 1 318 1 134 2 34 2 33 1 178 1 138 1 92 1 211 1 36 1 345 2 40 1 245 1 143 1 349 1 118 1 302 1 223 1 17 1 253 1 193 1 306 1 46 1 101 2 155 2 21 3 66 2 67 2 24 1 233 2 104 1 234 1 314 1 172 1 237 2 
155 1 97 1 21 1 132 1 66 1 30 1 297 1 135 1 134 1 34 1 
338 1 132 1 261 1 74 1 135 1 308 1 34 1 309 1 329 1 171 1 332 1 21 1 347 1 300 1 
338 2 132 1 261 1 74 1 134 1 135 1 34 1 309 1 171 2 155 1 332 1 66 1 21 1 347 1 300 1 
171 1 338 1 304 1 29 1 162 1 
175 1 171 2 13 1 338 2 332 1 29 1 300 1 162 1 
171 1 338 1 162 1 
338 1 97 1 132 1 29 1 30 1 135 1 134 1 34 1 171 1 155 1 66 1 21 1 42 1 297 1 
300 1 
171 2 13 1 338 2 332 1 29 1 81 1 300 1 162 1 
13 1 338 5 240 1 29 2 171 5 268 1 20 2 122 1 332 1 276 1 278 2 280 1 185 2 84 1 8 1 300 1 173 1 162 2 11 1 
299 1 138 1 
43 1 132 2 134 1 136 1 34 2 138 2 155 1 21 2 66 1 
102 1 196 1 44 1 
132 1 17 1 253 1 306 1 46 1 138 1 344 1 345 1 21 1 67 1 24 1 234 1 143 1 314 1 172 1 237 1 
131 1 132 2 17 1 253 1 306 1 34 1 46 1 102 1 155 1 345 1 66 1 21 2 67 1 24 1 57 1 234 1 143 1 314 1 172 1 237 1 
155 3 21 3 132 3 66 3 134 1 57 1 34 3 138 1 
155 1 97 1 21 1 132 1 66 1 135 1 34 1 
43 1 155 1 21 1 132 1 66 1 135 1 134 1 136 1 34 1 
286 1 176 1 338 1 131 1 132 4 261 1 30 1 318 1 74 1 134 2 135 1 34 3 33 1 178 1 138 1 92 1 211 1 345 1 40 1 76 1 347 1 57 1 245 1 143 1 349 1 43 1 223 1 17 1 253 1 306 1 46 1 101 2 309 1 171 1 155 3 21 4 66 3 67 1 24 1 233 1 234 1 314 1 172 1 237 1 
155 1 77 1 21 2 132 2 66 1 57 1 308 1 34 2 138 1 
43 1 338 1 131 1 261 1 132 3 51 1 74 1 134 1 135 1 34 3 309 1 171 1 155 3 66 3 21 3 76 1 347 1 57 2 300 1 
43 1 132 2 134 1 196 1 34 2 102 1 155 2 66 2 21 2 57 1 
132 1 17 1 253 1 306 1 46 1 138 1 345 1 21 1 67 1 24 1 234 1 143 1 314 1 172 1 237 1 
132 1 17 1 253 1 306 1 46 1 138 1 293 1 212 1 345 1 21 1 67 1 24 1 234 1 172 1 237 1 
176 1 204 1 318 1 178 1 180 1 92 1 211 1 159 1 298 1 245 2 144 1 302 2 223 1 224 1 78 1 44 2 196 2 101 2 102 2 156 1 233 4 125 1 68 1 72 1 
155 1 111 1 21 1 132 1 66 1 74 1 135 1 34 1 
43 1 77 1 131 1 132 5 134 1 308 1 90 1 227 1 34 5 138 1 155 4 66 4 21 5 57 2 
111 1 155 2 97 1 21 2 132 2 66 2 135 1 34 2 
191 1 208 1 
191 1 208 1 
181 1 260 1 
181 1 260 1 
181 1 260 1 
191 1 208 1 188 1 
191 1 208 1 188 1 
191 1 208 1 370 1 
181 1 260 1 191 2 317 1 208 2 336 1 
191 1 208 1 188 1 
191 1 208 1 35 1 
191 1 208 1 35 1 
191 1 208 1 35 1 
61 1 287 2 338 2 203 2 191 2 339 3 192 2 208 2 171 2 37 2 198 1 333 2 334 1 85 1 336 1 369 1 355 1 27 1 300 1 
287 1 338 1 203 1 132 2 339 1 208 1 34 2 138 1 37 1 161 1 295 1 370 1 60 1 191 1 62 1 192 1 153 1 171 1 197 1 155 2 66 2 21 2 355 1 283 1 
56 1 140 1 236 1 
140 1 368 1 236 1 
56 2 140 3 368 1 266 1 150 1 137 1 
205 1 56 1 140 2 368 1 266 1 137 1 
56 1 140 2 368 1 266 2 137 1 
338 5 359 2 240 3 204 1 29 4 319 1 321 3 53 1 161 1 185 1 298 1 59 2 162 1 300 2 11 1 13 1 62 1 224 1 166 1 78 1 168 1 273 2 374 1 171 5 20 1 332 1 278 1 280 2 313 1 283 1 109 1 110 1 
130 1 338 9 240 8 204 3 29 7 319 1 321 9 360 1 185 2 298 3 59 6 162 6 300 5 11 1 146 1 272 5 13 1 62 4 304 5 224 3 166 2 78 3 273 6 374 2 171 9 20 2 332 1 354 1 278 2 280 6 84 1 313 3 49 1 108 1 109 3 
338 3 240 3 359 1 204 1 29 2 321 4 53 1 185 1 298 1 59 2 300 3 62 1 166 1 224 1 78 1 168 1 374 1 273 2 171 3 20 1 332 1 278 1 280 2 84 1 313 1 109 2 
130 1 338 4 240 5 359 2 204 2 29 3 321 7 53 1 185 1 298 2 59 4 300 4 62 2 166 1 224 2 78 2 168 1 273 4 374 1 171 4 20 1 332 1 278 1 280 4 84 1 313 2 49 1 108 1 109 3 
124 1 306 1 299 1 
73 1 306 1 
83 1 
306 1 172 1 
189 1 124 2 265 1 306 3 172 1 46 1 
306 1 172 1 46 1 
154 1 306 1 
302 4 0 1 303 1 259 2 373 1 252 1 78 1 159 2 139 1 121 1 274 1 269 1 233 7 298 1 245 3 246 1 144 3 
302 4 0 1 303 1 259 2 373 1 252 1 78 1 159 2 139 1 121 1 274 1 269 1 233 7 298 1 245 3 246 1 144 3 
302 4 0 1 303 1 259 2 373 1 252 1 78 1 159 2 139 1 121 1 274 1 269 1 93 1 233 7 298 1 245 3 246 1 144 3 
0 1 176 1 259 3 28 1 204 3 178 1 92 1 159 5 139 1 269 2 215 1 367 1 298 4 245 15 10 1 246 1 144 10 302 16 145 1 303 2 223 1 224 3 373 5 252 2 78 4 101 2 19 1 121 1 274 2 231 3 233 31 281 1 313 3 377 4 
302 5 303 1 176 2 259 2 223 2 373 1 252 1 78 1 322 1 178 2 159 3 101 4 92 2 139 1 121 1 274 1 269 1 215 1 233 9 298 1 245 4 126 1 246 1 144 4 
87 1 112 2 210 1 114 1 362 1 364 1 345 1 213 1 244 1 56 1 140 2 141 1 142 2 368 1 249 1 17 1 170 1 150 1 152 1 353 1 228 1 67 1 232 1 335 1 234 1 236 1 235 1 106 1 237 1 378 1 
87 1 112 3 89 1 210 2 114 1 362 1 345 1 244 1 56 1 140 2 141 1 142 3 368 1 249 1 96 1 17 1 167 1 170 1 150 1 152 1 353 1 228 1 67 1 232 1 335 1 234 1 236 1 235 1 106 1 237 1 
87 1 112 2 89 1 210 2 114 1 362 1 345 1 244 1 56 1 140 2 141 1 142 2 368 1 249 1 96 1 17 1 170 1 150 1 152 1 353 1 67 1 232 1 234 1 236 1 237 1 
87 2 112 1 114 2 158 1 345 1 217 1 142 1 350 1 249 2 17 1 167 1 194 1 306 1 82 1 353 2 228 1 65 1 67 1 24 1 234 1 235 1 172 1 237 1 
87 1 112 1 89 1 114 1 362 1 345 1 213 1 56 1 140 2 142 1 368 1 249 1 17 1 170 1 150 1 353 1 228 1 67 1 232 1 335 1 234 1 236 1 235 1 106 1 237 1 378 1 
326 1 
129 2 86 2 338 5 88 1 240 2 132 1 288 1 135 1 345 2 296 1 347 1 185 1 300 2 11 1 13 3 251 2 17 1 254 1 194 1 306 1 308 1 151 2 100 1 309 1 20 1 256 2 21 1 257 2 103 2 67 2 24 2 109 2 356 1 261 1 264 1 74 1 321 2 157 1 34 1 158 1 214 1 218 4 162 6 165 1 225 1 374 1 171 5 329 1 48 1 332 1 278 1 280 2 234 1 172 1 237 2 
129 1 338 3 88 1 132 1 261 1 288 1 74 1 135 1 34 1 296 1 347 1 218 2 162 2 13 1 254 1 225 1 308 1 81 1 309 1 329 1 171 3 21 1 
86 1 338 3 88 1 132 1 261 1 288 1 74 1 135 1 34 1 296 1 347 1 218 3 162 1 300 1 13 1 254 1 225 1 308 1 81 1 309 1 329 1 171 3 332 1 21 1 
129 1 86 1 338 3 88 1 132 1 261 1 288 1 74 1 135 1 34 1 296 1 347 1 218 3 162 2 300 1 13 1 254 1 225 1 81 1 308 1 309 1 329 1 171 3 256 1 332 1 21 1 
129 4 86 4 88 1 338 5 240 1 132 1 288 1 289 1 135 1 55 1 296 1 347 1 185 1 300 5 11 1 13 3 251 2 254 1 308 1 151 2 309 1 20 1 256 4 21 1 103 2 257 2 201 1 109 2 261 1 264 1 74 1 320 1 157 1 34 1 218 6 162 7 225 1 81 1 171 5 329 1 332 5 278 1 280 1 128 1 
129 2 86 2 88 1 338 4 240 1 132 1 288 1 135 1 296 1 347 1 185 1 300 2 11 1 13 2 251 2 254 1 308 1 151 2 309 1 100 1 20 1 256 2 21 1 103 2 257 2 109 2 261 1 264 1 74 1 157 1 321 2 34 1 218 4 162 4 225 1 171 4 329 1 332 1 278 1 280 1 
129 2 86 2 338 4 88 1 240 1 132 1 261 1 264 1 288 1 320 1 74 1 157 1 135 1 34 1 55 1 296 1 347 1 218 4 185 1 300 1 162 4 11 1 13 2 251 2 254 1 225 1 308 1 151 2 309 1 329 1 171 4 20 1 256 2 332 1 21 1 257 2 103 2 278 1 280 1 201 1 109 2 
129 2 86 2 338 4 88 1 240 1 132 1 261 1 264 1 288 1 320 1 74 1 157 1 135 1 34 1 55 1 296 1 347 1 218 4 185 1 300 1 162 4 11 1 13 2 251 2 254 1 225 1 308 1 151 2 309 1 329 1 171 4 20 1 256 2 332 1 21 1 257 2 103 2 278 1 280 1 201 1 109 2 
129 2 86 2 338 4 88 1 240 1 132 1 261 1 264 1 288 1 320 1 74 1 321 2 135 1 31 2 32 1 34 1 296 1 347 1 218 4 185 1 300 1 162 4 11 1 13 2 254 1 225 1 226 2 352 1 308 1 309 1 329 1 171 4 20 1 256 2 332 1 21 1 257 2 103 2 278 1 280 1 107 1 
129 3 86 3 338 4 88 1 240 1 132 1 261 1 264 1 288 1 320 1 74 1 157 1 135 1 34 1 55 1 296 1 347 1 218 5 185 1 300 1 162 5 11 1 13 2 251 2 254 1 225 1 308 1 151 2 309 1 329 1 171 4 20 1 256 3 332 1 21 1 257 2 103 2 278 1 280 1 201 1 128 1 109 2 
129 3 86 3 338 4 88 1 240 1 132 1 261 1 264 1 288 1 320 1 74 1 157 1 135 1 34 1 55 1 296 1 347 1 218 5 185 1 300 1 162 5 11 1 13 2 251 2 254 1 225 1 308 1 151 2 309 1 329 1 171 4 20 1 256 3 332 1 21 1 257 2 103 2 278 1 280 1 201 1 128 1 109 2 
129 2 86 2 338 4 88 1 240 1 132 1 261 1 264 1 288 1 74 1 321 2 135 1 31 2 34 1 296 1 347 1 218 4 185 1 300 1 162 4 11 1 13 2 254 1 225 1 226 2 308 1 352 1 100 1 309 1 329 1 171 4 20 1 256 2 332 1 21 1 257 2 103 2 278 1 280 1 
176 1 259 1 318 1 178 1 138 2 92 1 211 1 159 2 139 1 269 1 298 1 245 3 299 1 246 1 144 2 302 3 223 1 78 1 196 1 44 1 101 2 102 1 121 1 274 1 156 1 233 6 
176 2 204 1 318 1 291 1 178 2 138 1 159 1 92 2 211 2 294 1 216 1 367 1 298 1 245 6 349 1 144 2 271 1 302 8 223 2 373 1 224 2 78 2 193 1 44 11 196 4 101 4 102 11 231 3 233 14 281 1 313 2 315 1 377 3 
176 1 131 1 132 2 318 1 4 1 34 1 178 1 138 1 211 1 92 1 344 1 345 1 57 1 143 1 245 1 349 1 302 1 223 1 17 1 147 1 253 1 193 1 306 1 196 1 46 1 101 2 155 1 21 2 66 1 67 1 24 1 233 2 234 1 314 1 315 1 70 1 172 1 237 1 
176 3 131 1 132 3 89 1 342 1 178 3 138 2 92 3 139 1 345 3 57 1 298 3 245 10 143 2 349 1 246 1 144 8 302 10 17 2 253 2 193 1 306 2 307 2 196 7 101 6 102 7 155 1 66 1 21 3 67 3 24 1 313 2 315 1 314 2 259 1 204 2 318 3 209 1 267 2 34 1 159 4 211 3 269 1 40 2 223 3 119 2 224 2 373 4 78 3 44 7 46 2 121 1 274 1 233 20 234 2 284 2 172 2 174 1 237 3 
176 2 50 1 262 1 132 1 318 2 89 1 290 1 34 1 178 2 158 1 92 2 211 2 160 1 364 1 345 8 57 1 117 1 245 1 349 1 118 2 302 1 223 2 17 2 193 1 194 1 306 3 101 4 155 1 310 1 123 1 156 1 21 1 66 1 67 7 24 2 233 2 234 2 172 2 237 8 
176 1 132 1 204 1 318 1 134 1 34 1 178 1 159 1 92 1 211 1 298 1 245 2 144 1 43 1 302 1 223 1 224 1 78 1 195 1 196 1 44 1 101 2 102 1 155 1 66 1 21 1 233 3 313 1 315 1 
302 2 176 1 223 1 373 1 224 1 318 1 78 1 196 1 44 1 178 1 211 1 101 2 92 1 102 1 156 1 233 2 68 1 144 1 
176 1 223 1 204 1 318 1 196 1 44 1 178 1 159 1 211 1 101 2 92 1 102 1 156 1 233 2 125 1 298 1 245 2 144 1 
176 1 204 1 318 1 178 1 92 1 211 1 159 1 298 1 245 2 144 2 302 2 223 1 224 1 373 1 78 1 44 2 196 2 101 2 102 2 156 1 233 4 313 1 
302 2 176 1 223 1 373 1 224 1 318 1 78 1 196 1 44 1 178 1 211 1 101 2 92 1 102 1 160 1 233 2 68 1 144 1 
176 1 223 1 204 1 318 1 196 1 44 1 178 1 159 1 211 1 101 2 92 1 102 1 160 1 233 2 125 1 298 1 245 2 144 1 
176 1 204 1 318 1 178 1 92 1 211 1 159 1 160 1 298 1 245 2 144 2 302 2 223 1 224 1 373 1 78 1 44 2 196 2 101 2 102 2 233 4 313 1 
176 1 204 1 318 1 178 1 92 1 211 1 159 1 298 1 245 2 144 2 302 2 223 1 224 1 373 1 78 1 44 2 196 2 101 2 102 2 233 4 313 1 
176 1 132 1 318 1 178 1 138 1 211 1 92 1 345 1 40 1 143 1 245 1 349 1 302 1 223 1 17 1 253 1 193 1 306 1 46 1 101 2 21 1 67 1 24 1 233 2 234 1 314 1 172 1 237 1 
176 1 132 1 318 1 178 1 138 1 211 1 92 1 293 1 212 1 345 1 245 1 349 1 164 1 302 1 223 1 17 1 253 1 193 1 306 1 46 1 101 2 21 1 67 1 24 1 233 2 234 1 172 1 237 1 
176 1 204 1 318 1 178 1 92 1 211 1 159 1 298 1 245 2 144 2 302 2 223 1 224 1 373 1 78 1 44 2 196 2 101 2 102 2 233 4 313 1 315 1 
176 1 204 1 132 1 318 1 178 1 159 1 211 1 92 1 364 1 345 1 40 1 298 1 245 2 143 1 144 2 302 2 223 1 373 1 224 1 17 1 253 1 78 1 306 1 307 1 196 2 44 2 46 1 101 2 102 2 21 1 67 1 233 4 234 1 313 1 314 1 172 1 237 1 
176 1 204 1 132 1 318 1 134 1 34 1 178 1 92 1 211 1 298 1 245 1 144 1 43 1 302 2 223 1 373 1 224 1 78 1 44 1 196 1 101 2 102 1 155 1 66 1 21 1 279 1 233 3 313 1 315 1 
176 2 1 1 204 3 341 1 178 2 54 2 159 3 92 2 346 1 41 1 367 1 184 1 298 3 245 10 270 2 144 6 12 1 302 9 248 1 223 2 224 3 373 3 78 3 101 4 231 1 233 19 281 1 313 3 126 1 377 2 
176 2 204 1 178 2 54 2 159 1 92 2 115 1 215 1 346 1 41 2 366 1 184 2 367 2 116 1 298 1 245 8 144 1 302 6 248 1 223 2 224 1 78 1 101 4 231 2 233 14 313 1 126 1 377 2 
176 3 1 1 204 3 341 1 178 3 54 3 115 1 159 2 92 3 215 1 346 1 41 1 366 1 116 1 367 3 184 2 298 3 245 15 222 1 270 1 144 4 302 12 248 1 223 3 224 3 373 2 78 3 101 6 231 3 233 27 281 1 313 3 126 1 377 4 
176 3 1 1 204 3 341 1 178 3 54 3 115 1 159 3 92 3 215 1 346 1 41 1 366 1 116 1 367 3 184 2 298 3 245 15 222 1 270 1 144 5 302 12 248 1 223 3 224 3 373 2 78 3 101 6 231 3 233 27 281 1 313 3 126 1 377 4 
176 2 259 1 204 5 178 2 54 2 115 1 159 6 92 2 139 1 269 1 215 1 346 1 216 2 41 1 366 1 116 1 367 2 184 1 298 6 245 19 246 1 144 11 302 23 248 1 223 2 224 6 373 5 78 7 101 4 330 1 121 1 274 1 229 1 231 4 233 42 281 2 313 6 126 1 377 4 
37 1 287 1 203 1 198 1 191 1 22 1 334 1 192 1 208 1 336 1 
295 1 370 1 
37 1 287 1 203 1 250 1 16 1 191 1 183 1 192 1 208 1 
61 1 338 1 287 1 203 1 191 1 339 2 192 1 208 1 171 1 37 1 198 1 333 1 334 1 336 1 369 1 355 1 27 1 300 1 
61 1 338 1 287 1 203 1 191 1 339 2 192 1 208 1 171 1 37 1 198 1 333 1 334 1 336 1 369 1 355 1 27 1 300 1 
61 1 338 1 287 1 203 1 191 1 339 2 192 1 208 1 171 1 37 1 198 1 333 1 334 1 336 1 369 1 355 1 27 1 300 1 
371 1 317 1 188 1 
371 1 317 1 188 1 
58 1 35 1 
317 1 58 1 35 1 
197 1 60 1 
338 1 287 1 203 1 132 2 29 1 339 1 208 1 34 2 363 1 138 1 37 1 161 1 295 1 370 1 60 1 191 1 62 1 192 1 153 1 171 1 197 1 155 2 21 2 66 2 333 1 283 1 27 1 
371 1 188 1 
317 1 58 1 35 1 
176 1 132 2 318 1 290 1 34 2 292 1 178 1 179 1 211 1 92 1 345 2 245 1 349 1 118 2 302 1 223 1 17 1 193 1 306 1 18 1 101 2 123 1 21 2 67 2 199 1 233 2 234 1 315 1 172 1 237 2 258 1 
17 1 263 1 89 1 150 1 114 1 149 1 362 1 75 1 364 1 345 2 67 2 56 1 232 1 140 2 368 1 234 1 236 1 106 1 237 2 
17 1 89 1 150 1 114 1 149 1 362 1 243 1 345 1 67 1 56 1 232 1 140 2 368 1 234 1 236 1 106 1 237 1 
17 1 263 1 194 1 306 1 114 1 158 1 6 1 345 1 65 1 67 1 24 1 234 1 172 1 237 1 
17 1 263 1 89 1 150 1 114 1 149 1 362 1 75 1 345 1 67 1 56 1 232 1 140 2 368 1 234 1 236 1 106 1 237 1 
358 1 
240 1 332 1 276 1 280 1 299 1 300 1 173 1 
338 1 240 1 157 1 321 1 185 1 300 2 162 1 11 1 13 1 251 1 151 1 171 1 20 1 332 1 278 1 280 1 109 1 
177 1 238 1 338 2 240 4 239 1 345 1 185 2 298 1 59 3 300 3 11 2 13 1 17 1 351 1 306 4 20 2 67 1 24 1 313 1 71 1 109 3 73 2 261 1 204 1 321 6 265 1 325 1 162 2 119 1 224 1 78 1 374 1 273 3 45 1 46 1 171 2 278 2 124 1 280 3 234 2 172 1 237 1 
337 1 338 1 240 5 204 1 321 6 115 1 366 1 367 1 116 1 185 2 298 1 59 4 162 1 300 4 11 2 13 1 224 1 78 1 273 4 171 1 20 2 332 1 231 1 278 2 280 2 313 1 377 1 109 3 357 1 
337 2 338 1 240 2 132 1 30 1 135 1 134 1 113 1 34 1 55 1 269 1 42 1 297 1 185 1 298 1 11 1 97 1 78 2 64 1 171 1 20 1 121 1 155 1 274 1 21 1 66 1 278 1 280 2 
240 1 20 1 332 1 276 1 278 1 185 1 280 1 173 1 300 1 11 1 
240 2 204 1 224 1 78 1 321 4 273 2 280 2 298 1 313 1 59 2 300 2 109 2 
171 1 338 1 13 1 332 1 300 1 162 1 
338 3 240 2 3 2 158 1 345 4 214 1 182 1 185 2 220 1 162 4 11 1 13 2 165 1 17 1 194 1 374 2 306 1 171 3 20 2 48 2 67 4 24 2 278 2 280 2 84 1 234 1 25 1 172 1 237 4 
176 1 132 3 30 1 318 1 134 2 34 2 33 1 178 1 138 1 92 1 211 1 345 1 40 1 245 1 143 1 349 1 223 1 17 1 253 1 306 1 46 1 101 2 155 2 21 3 66 2 67 1 24 1 233 1 234 1 314 1 172 1 237 1 
240 1 321 2 374 1 20 1 48 1 332 1 278 1 280 1 185 1 59 1 300 2 109 1 11 1 
37 1 192 1 375 1 
37 1 192 1 375 1 
197 1 37 1 198 1 192 1 187 1 
37 1 192 1 375 1 
37 1 192 1 200 1 
37 1 192 1 200 1 
37 1 192 1 200 1 
37 1 192 1 
191 1 208 1 
302 4 176 2 259 1 223 2 373 1 78 1 178 2 159 2 101 4 92 2 139 1 121 1 269 1 274 1 215 1 233 8 298 1 245 4 246 1 144 3 
302 3 259 1 78 1 159 2 139 1 121 1 269 1 274 1 233 6 298 1 245 3 299 1 246 1 144 2 
302 2 176 1 223 1 204 1 224 1 373 1 340 1 78 1 178 1 159 1 101 2 92 1 233 4 298 1 245 2 313 1 144 2 
302 3 204 1 224 1 373 1 78 1 159 1 231 1 367 1 233 7 281 1 298 1 245 4 313 1 377 2 144 2 
176 2 259 1 204 2 291 1 178 2 159 5 92 2 139 1 269 2 215 2 216 1 298 3 245 12 246 1 144 9 302 11 223 2 373 4 224 2 78 3 101 4 121 1 274 2 231 2 311 1 233 23 281 1 313 2 377 2 
233 1 245 1 377 1 
302 1 231 1 233 1 
302 3 176 1 223 1 119 1 204 1 224 1 373 1 340 1 78 1 178 1 92 1 101 2 159 2 233 6 298 1 245 3 313 1 144 3 
176 1 204 2 178 1 92 1 115 1 159 1 366 1 367 1 116 1 298 2 245 6 144 2 302 6 223 1 373 1 224 2 78 2 101 2 330 1 231 1 229 1 233 12 313 2 126 1 377 1 
302 3 373 1 78 1 159 1 121 1 269 1 274 1 233 6 298 1 245 3 144 2 
302 1 176 1 223 1 373 1 178 1 159 1 101 2 92 1 139 1 274 1 269 1 215 1 311 1 233 3 245 2 246 1 144 2 
302 5 176 1 223 1 373 2 78 2 64 1 178 1 92 1 101 2 159 3 121 1 269 2 274 2 233 10 298 2 245 5 126 1 144 5 
302 2 176 1 223 1 224 1 373 1 78 1 178 1 101 2 92 1 233 2 126 1 144 1 
302 2 176 1 223 1 204 1 224 1 373 1 78 1 178 1 159 1 101 2 92 1 233 4 298 1 245 2 313 1 126 1 144 2 
302 1 176 3 223 3 1 1 373 1 178 3 101 6 92 3 159 1 269 1 274 1 215 1 311 1 233 3 245 2 126 1 144 2 
176 5 259 1 28 1 1 1 204 3 340 1 178 5 92 5 159 7 139 1 269 3 215 2 367 1 298 5 245 18 246 1 144 12 145 1 302 16 223 5 224 3 373 5 78 5 101 10 19 1 121 2 274 3 231 3 311 1 233 34 281 1 313 3 126 1 377 4 
302 1 176 1 223 1 231 1 233 2 367 1 116 1 245 1 126 1 178 1 377 1 92 1 101 2 
302 3 176 2 223 2 373 1 224 1 78 1 340 1 178 2 101 4 92 2 231 1 116 1 367 1 233 5 281 1 313 1 245 2 126 1 377 2 144 1 
302 3 176 2 223 2 204 1 224 1 78 1 178 2 159 1 115 1 101 4 92 2 215 1 231 1 366 1 116 1 367 1 233 8 298 1 313 1 245 5 126 1 377 1 144 1 
176 2 204 1 178 2 92 2 115 1 159 1 215 1 366 1 367 1 116 1 298 1 245 4 144 2 302 7 223 2 373 1 224 2 78 2 101 4 330 1 231 1 229 1 233 11 313 2 126 1 377 1 
302 1 176 1 223 1 231 1 233 2 367 1 116 1 245 1 126 1 178 1 377 1 92 1 101 2 
176 1 204 2 178 1 92 1 115 1 159 1 366 1 367 1 116 1 298 2 245 6 144 2 302 6 223 1 373 1 224 2 78 2 101 2 330 1 231 1 229 1 233 12 313 2 126 1 377 1 
302 3 176 3 223 3 204 1 224 1 78 1 340 1 178 3 159 1 115 1 101 6 92 3 215 1 231 1 366 1 116 1 367 1 233 8 298 1 313 1 245 5 126 1 377 1 144 1 
302 3 176 3 223 3 1 1 204 1 224 1 78 1 178 3 159 2 115 1 101 6 92 3 215 1 231 1 366 1 116 1 367 1 233 8 298 1 313 1 245 5 126 1 377 1 144 2 
302 3 373 3 78 1 159 3 139 1 121 1 269 3 274 3 233 7 298 1 245 4 246 2 144 6 
302 3 176 3 223 3 1 1 204 1 224 1 78 1 178 3 159 1 115 1 101 6 92 3 215 1 231 1 366 1 116 1 367 1 233 8 298 1 313 1 245 5 126 1 377 1 144 1 
77 1 21 1 132 1 190 1 308 1 34 1 138 1 
372 1 77 1 15 1 190 1 132 1 120 1 308 1 34 1 138 1 38 1 21 1 285 1 
345 1 17 1 67 1 24 1 194 1 234 1 306 1 299 1 172 1 158 1 237 1 
132 2 17 1 253 1 306 1 34 1 46 1 138 1 155 1 345 1 66 1 21 2 67 1 24 1 57 1 234 1 314 1 172 1 237 1 
132 2 17 1 253 1 74 1 3 1 135 1 306 3 34 2 46 2 138 1 154 1 155 1 365 1 345 1 66 2 21 2 67 1 347 1 57 1 234 1 314 1 172 2 237 1 
132 2 17 1 253 1 74 1 3 1 135 1 306 3 34 2 46 2 138 1 293 1 154 1 155 1 365 1 345 2 66 2 21 2 67 2 347 1 277 1 57 1 234 1 172 2 237 2 
338 2 73 1 261 1 3 1 345 3 365 1 219 1 162 1 300 1 17 1 306 4 46 1 171 2 154 1 332 1 67 3 24 1 277 1 124 1 234 1 127 1 172 1 237 3 
238 1 338 2 261 1 73 1 17 1 3 1 306 4 46 1 171 2 154 1 332 1 365 1 345 3 67 3 24 1 277 1 124 1 234 1 172 1 300 1 162 1 237 3 
345 1 50 1 17 1 67 1 234 1 237 1 
50 1 262 1 207 1 241 1 17 2 89 1 290 1 265 1 306 3 46 1 364 1 310 1 345 7 67 6 24 2 117 1 234 3 221 1 118 1 172 2 237 7 
176 2 132 2 178 2 138 2 92 2 139 1 345 1 57 1 298 1 143 1 245 3 246 1 144 2 302 3 17 1 253 1 306 1 307 1 196 1 101 4 102 1 155 1 66 1 21 2 67 1 314 1 315 1 258 1 259 1 318 2 34 1 211 2 159 2 364 1 269 1 40 1 223 2 78 1 44 1 46 1 121 1 274 1 233 6 234 1 284 1 172 1 237 1 
238 1 338 3 240 1 239 1 73 1 261 1 29 1 345 1 185 2 220 1 300 1 162 2 11 2 13 1 351 1 306 2 45 1 171 3 20 2 332 1 67 1 24 1 276 1 278 2 124 1 280 1 173 1 237 1 
177 1 50 1 17 1 265 1 306 2 46 1 364 1 345 2 67 2 124 1 234 2 172 1 237 2 
47 1 364 1 345 4 17 1 67 4 24 1 277 1 194 1 234 1 306 1 172 1 158 1 237 4 
207 1 305 1 241 1 17 1 328 1 3 1 306 1 342 1 46 1 345 2 67 2 234 2 172 1 237 2 
345 1 17 1 67 1 232 1 24 1 140 1 368 1 234 1 236 1 237 1 
364 1 345 2 17 1 67 2 199 1 89 1 234 1 290 1 306 1 172 1 237 2 
262 1 17 2 3 1 194 1 290 1 306 3 158 1 47 1 364 1 345 5 67 4 24 1 234 2 117 1 172 2 237 5 
207 1 241 1 305 1 17 2 328 1 194 1 290 1 306 2 46 1 364 1 345 2 67 2 24 1 234 3 312 1 172 2 237 2 
132 2 17 1 253 1 306 1 34 1 46 1 138 1 293 1 155 1 345 1 66 1 21 2 67 1 24 1 57 1 234 1 172 1 237 1 
207 1 241 1 17 1 3 1 265 1 306 1 46 1 345 1 67 1 234 2 221 1 172 1 237 1 
14 1 132 1 292 1 18 1 34 1 179 1 324 1 331 1 21 1 
14 1 63 1 169 1 
324 1 331 1 14 1 138 1 247 1 
338 2 14 1 261 1 29 1 74 1 135 1 52 1 169 1 63 1 138 1 309 1 171 2 324 2 331 2 332 1 347 1 76 1 300 1 247 2 
244 1 141 1 299 1 152 1 
228 1 112 1 244 1 141 1 142 1 235 1 152 1 
87 1 249 1 112 1 
112 3 2 2 323 1 152 1 343 1 228 1 244 1 141 1 142 3 235 1 378 1 94 1 
228 1 112 2 244 1 141 1 142 2 210 1 148 1 235 1 152 1 
316 1 228 1 112 1 56 1 140 1 141 1 80 1 142 1 236 1 235 1 378 1 
228 1 112 1 141 1 142 1 235 1 152 1 378 1 
228 1 112 1 244 1 142 1 235 1 152 2 378 1 
112 2 152 1 228 2 348 1 141 1 142 2 282 1 69 1 235 2 378 1 
316 1 112 3 210 2 152 1 228 1 376 1 244 1 23 1 141 2 142 3 26 1 235 1 378 1 
112 2 210 1 150 1 152 1 91 1 228 1 244 1 56 1 140 2 141 1 368 1 142 2 235 1 236 1 378 1 
95 1 316 1 112 4 148 1 210 2 152 1 228 2 244 1 23 1 141 2 142 4 235 2 378 1 
228 1 112 1 244 1 141 1 142 1 235 1 152 1 378 1 
316 1 112 4 2 1 210 2 152 2 343 1 228 1 39 1 244 2 23 1 141 3 142 4 235 1 94 1 
112 2 210 1 152 1 5 1 228 1 244 1 105 1 141 1 142 2 186 1 235 1 378 1 
112 3 2 2 152 1 242 1 343 2 228 1 244 1 141 1 142 3 235 1 94 1 378 1 
141 2 79 2 255 1 301 1 
202 1 228 1 112 1 142 1 235 1 378 1 
228 1 112 2 244 1 141 1 142 2 210 1 26 1 235 1 152 1 378 1 
230 1 
228 1 112 1 244 1 141 1 142 1 235 1 152 1 378 1 
112 3 2 1 210 1 152 1 228 1 244 1 141 1 142 3 26 1 235 1 378 1 
316 1 39 1 23 1 141 1 
141 1 152 1 
